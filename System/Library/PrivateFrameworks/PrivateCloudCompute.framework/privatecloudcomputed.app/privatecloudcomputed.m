uint64_t sub_1000031CC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)v0;
  v2 = v0 + qword_100207A40;
  v3 = sub_1001C0340();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(v1[10] - 8) + 8))(v0 + *(void *)(*(void *)v0 + 144));
  (*(void (**)(uint64_t))(*(void *)(v1[11] - 8) + 8))(v0 + *(void *)(*(void *)v0 + 152));
  v4 = v0 + *(void *)(*(void *)v0 + 160);
  v5 = sub_1001BF310();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  sub_100003E90(v0 + *(void *)(*(void *)v0 + 168));
  (*(void (**)(uint64_t))(*(void *)(v1[12] - 8) + 8))(v0 + *(void *)(*(void *)v0 + 176));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1000033F8()
{
  sub_1000031CC();
  return swift_deallocClassInstance();
}

uint64_t variable initialization expression of LRUCache.encoder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000034A8(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for PropertyListEncoder, (uint64_t (*)(void))&PropertyListEncoder.init());
}

uint64_t variable initialization expression of LRUCache.decoder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000034A8(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for PropertyListDecoder, (uint64_t (*)(void))&PropertyListDecoder.init());
}

uint64_t sub_1000034A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(void))
{
  return a6();
}

uint64_t variable initialization expression of LRUCache.logger()
{
  uint64_t v0 = sub_1001BF8E0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for TC2LogCategory.daemon(_:), v0);
  sub_1001BFDD0();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t variable initialization expression of Proto_Ropes_HttpService_InvokeRequest.Terminate._reason()
{
  return 0;
}

uint64_t variable initialization expression of Proto_Ropes_HttpService_AdminApiResponse.Workload.workloadType()
{
  return 0;
}

void *variable initialization expression of Proto_Ropes_HttpService_PrefetchUnaryResponse.attestation()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t variable initialization expression of Proto_Ropes_Common_CompressedAttestationList.compressedBytes()
{
  return 0;
}

uint64_t variable initialization expression of Proto_Ropes_Common_CompressedAttestationList.uncompressedLengthHint()
{
  return 0;
}

uint64_t variable initialization expression of Proto_Ropes_Common_Attestation._ohttpContext()
{
  return 0x100000000;
}

uint64_t variable initialization expression of Proto_Ropes_Common_Attestation._expirationTime@<X0>(uint64_t a1@<X8>)
{
  return sub_1000037CC((uint64_t (*)(void))&type metadata accessor for Google_Protobuf_Timestamp, a1);
}

uint64_t variable initialization expression of Proto_Ropes_Common_CompressedAttestationList.compressionAlgorithm()
{
  return 0;
}

uint64_t variable initialization expression of Proto_PrivateCloudCompute_PrivateCloudComputeRequest.type@<X0>(uint64_t a1@<X8>)
{
  return sub_1000037CC(type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type, a1);
}

uint64_t variable initialization expression of Proto_PrivateCloudCompute_PrivateCloudComputeResponse.type@<X0>(uint64_t a1@<X8>)
{
  return sub_1000037CC(type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type, a1);
}

uint64_t variable initialization expression of Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary._postResponseActions@<X0>(uint64_t a1@<X8>)
{
  return sub_1000037CC(type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions, a1);
}

uint64_t variable initialization expression of Proto_Ropes_HttpService_InvokeRequest.type@<X0>(uint64_t a1@<X8>)
{
  return sub_1000037CC(type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type, a1);
}

uint64_t variable initialization expression of Proto_Ropes_HttpService_PrefetchRequest._capabilities@<X0>(uint64_t a1@<X8>)
{
  return sub_1000037CC(type metadata accessor for Proto_Ropes_Common_Capabilities, a1);
}

uint64_t variable initialization expression of Proto_Ropes_HttpService_InvokeResponse.type@<X0>(uint64_t a1@<X8>)
{
  return sub_1000037CC(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type, a1);
}

uint64_t variable initialization expression of Proto_Ropes_HttpService_PrefetchUnaryResponse._rateLimitConfigurationList@<X0>(uint64_t a1@<X8>)
{
  return sub_1000037CC(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList, a1);
}

uint64_t variable initialization expression of Proto_Ropes_HttpService_PrefetchUnaryResponse._compressedAttestationList@<X0>(uint64_t a1@<X8>)
{
  return sub_1000037CC(type metadata accessor for Proto_Ropes_Common_CompressedAttestationList, a1);
}

uint64_t variable initialization expression of Proto_Ropes_HttpService_PrefetchResponse.type@<X0>(uint64_t a1@<X8>)
{
  return sub_1000037CC(type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type, a1);
}

uint64_t variable initialization expression of Proto_Ropes_HttpService_ConfigRequest.type@<X0>(uint64_t a1@<X8>)
{
  return sub_1000037CC(type metadata accessor for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type, a1);
}

uint64_t variable initialization expression of Proto_Ropes_HttpService_ConfigResponse.type@<X0>(uint64_t a1@<X8>)
{
  return sub_1000037CC(type metadata accessor for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type, a1);
}

unint64_t variable initialization expression of Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters.params()
{
  return sub_100054A9C((uint64_t)&_swiftEmptyArrayStorage);
}

uint64_t variable initialization expression of Proto_Ropes_HttpService_AdminApiResponse.Workload._routingParameters@<X0>(uint64_t a1@<X8>)
{
  return sub_1000037CC(type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters, a1);
}

unint64_t variable initialization expression of Proto_Ropes_RateLimit_RateLimitConfiguration.params()
{
  return sub_100054910((uint64_t)&_swiftEmptyArrayStorage);
}

double variable initialization expression of Proto_Ropes_RateLimit_RateLimitConfiguration.jitter()
{
  return 0.0;
}

uint64_t variable initialization expression of Proto_Ropes_RateLimit_RateLimitConfiguration._ttl@<X0>(uint64_t a1@<X8>)
{
  return sub_1000037CC((uint64_t (*)(void))&type metadata accessor for Google_Protobuf_Duration, a1);
}

uint64_t variable initialization expression of Proto_Ropes_RateLimit_RateLimitConfiguration._rate@<X0>(uint64_t a1@<X8>)
{
  return sub_1000037CC(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate, a1);
}

uint64_t sub_1000037CC@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1(0);
  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
  return v4(a2, 1, 1, v3);
}

uint64_t variable initialization expression of TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry._usedByTrustedRequestWithId()
{
  return 1;
}

uint64_t variable initialization expression of TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry._$backingData@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = sub_100003918(&qword_100207A18);
  sub_100003A94(&qword_100207A20, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  a1[4] = swift_getOpaqueTypeConformance2();
  sub_10000395C(a1);
  return sub_1001C0A00();
}

uint64_t sub_100003918(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t *sub_10000395C(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t variable initialization expression of TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry._$backingData@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = sub_100003918(&qword_100207A28);
  sub_100003A94(&qword_100207A30, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  a1[4] = swift_getOpaqueTypeConformance2();
  sub_10000395C(a1);
  return sub_1001C0A00();
}

uint64_t sub_100003A94(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t variable initialization expression of TC2ServerDrivenConfiguration.JsonModel.totalAttestationsByRegion()
{
  return 0;
}

uint64_t variable initialization expression of TC2ServerDrivenConfiguration.decoder()
{
  return sub_1001BED90();
}

uint64_t variable initialization expression of TC2ServerDrivenConfiguration.logger()
{
  uint64_t v0 = sub_1001BF8E0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for TC2LogCategory.serverDrivenConfiguration(_:), v0);
  sub_1001BFDD0();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t variable initialization expression of NWConnectionReceived.data()
{
  return 0;
}

uint64_t default argument 1 of NWAsyncConnection.Outbound.write(content:contentContext:isComplete:)()
{
  return sub_1001C0540();
}

uint64_t variable initialization expression of NWAsyncConnection.Inbound.hasCreatedIterator()
{
  sub_100003918(&qword_100207A38);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 20) = 0;
  *(unsigned char *)(result + 16) = 0;
  return result;
}

uint64_t sub_100003C7C()
{
  uint64_t result = sub_1001C0340();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        uint64_t result = sub_1001BF310();
        if (v4 <= 0x3F)
        {
          uint64_t result = swift_checkMetadataState();
          if (v5 <= 0x3F) {
            return swift_initClassMetadata2();
          }
        }
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for TC2RateLimitRequest()
{
  return swift_getGenericMetadata();
}

void type metadata accessor for os_unfair_lock_s()
{
  if (!qword_100207AD0)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_100207AD0);
    }
  }
}

uint64_t sub_100003E90(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

Swift::Int NWAsyncConnection.OHTTPStreamFactory.Error.hashValue.getter()
{
  return sub_1001C1990();
}

void NWAsyncConnection.OHTTPStreamFactory.Error.hash(into:)()
{
}

Swift::Int sub_100003F54()
{
  return sub_1001C1990();
}

uint64_t sub_100003FA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

double sub_100003FD8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(a1, a2);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __chkstk_darwin(AssociatedTypeWitness - 8, v10);
  v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v3, v5);
  sub_1001C10A0();
  return sub_100004134((uint64_t)v12, a3);
}

double sub_100004134@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = type metadata accessor for LengthPrefixDeframer.AsyncIterator();
  type metadata accessor for LengthPrefixDeframer.AsyncIterator.State();
  swift_storeEnumTagMultiPayload();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a2, a1, AssociatedTypeWitness);
  double result = 0.0;
  *(_OWORD *)(a2 + *(int *)(v3 + 76)) = xmmword_1001CB200;
  return result;
}

uint64_t type metadata accessor for LengthPrefixDeframer.AsyncIterator()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for LengthPrefixDeframer.AsyncIterator.State()
{
  return swift_getGenericMetadata();
}

uint64_t sub_100004280(uint64_t a1, void *a2)
{
  v3[15] = a2;
  v3[16] = v2;
  v3[14] = a1;
  sub_1001BFEA0();
  v3[17] = swift_task_alloc();
  uint64_t v5 = a2[6];
  uint64_t v6 = *(void *)(v5 + 8);
  v3[18] = v6;
  v3[19] = *(void *)(*(void *)(v6 + 24) + 16);
  uint64_t v7 = a2[3];
  v3[20] = v7;
  v3[21] = swift_getAssociatedTypeWitness();
  v3[22] = swift_task_alloc();
  uint64_t v8 = sub_1001C12F0();
  v3[23] = v8;
  v3[24] = *(void *)(v8 - 8);
  v3[25] = swift_task_alloc();
  v3[26] = *(void *)(v7 - 8);
  v3[27] = swift_task_alloc();
  v3[28] = swift_task_alloc();
  v3[29] = swift_task_alloc();
  v3[30] = swift_task_alloc();
  v3[31] = swift_task_alloc();
  v3[32] = swift_task_alloc();
  v3[33] = swift_task_alloc();
  v3[34] = swift_task_alloc();
  v3[35] = swift_task_alloc();
  v3[36] = swift_task_alloc();
  uint64_t v9 = a2[2];
  uint64_t v10 = a2[4];
  v3[37] = v10;
  uint64_t v11 = a2[5];
  uint64_t v12 = a2[7];
  uint64_t v13 = a2[8];
  v3[38] = v13;
  v3[2] = v9;
  v3[3] = v7;
  v3[4] = v10;
  v3[5] = v11;
  v3[6] = v5;
  v3[7] = v12;
  v3[8] = v13;
  uint64_t v14 = type metadata accessor for LengthPrefixDeframer.AsyncIterator.State();
  v3[39] = v14;
  v3[40] = *(void *)(v14 - 8);
  v3[41] = swift_task_alloc();
  return _swift_task_switch(sub_100004530, 0, 0);
}

uint64_t sub_100004530()
{
  uint64_t v1 = *(void *)(v0 + 320);
  int v2 = *(_DWORD *)(*(void *)(v0 + 120) + 80);
  *(_DWORD *)(v0 + 376) = v2;
  uint64_t v3 = *(void (**)(void, void, void))(v1 + 16);
  *(void *)(v0 + 336) = v3;
  v3(*(void *)(v0 + 328), *(void *)(v0 + 128) + v2, *(void *)(v0 + 312));
  while (1)
  {
    uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 2) {
      break;
    }
    uint64_t v6 = *(void *)(v0 + 200);
    uint64_t v5 = *(void *)(v0 + 208);
    uint64_t v7 = *(void *)(v0 + 160);
    sub_100006AE0(*(void *)(v0 + 120), v6);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v7) == 1)
    {
      (*(void (**)(void, void))(*(void *)(v0 + 192) + 8))(*(void *)(v0 + 200), *(void *)(v0 + 184));
      v33 = (void *)swift_task_alloc();
      *(void *)(v0 + 344) = v33;
      void *v33 = v0;
      v34 = sub_100005110;
LABEL_29:
      v33[1] = v34;
      uint64_t v58 = *(void *)(v0 + 120);
      return sub_100006C84(v58);
    }
    uint64_t v9 = *(void *)(v0 + 312);
    uint64_t v8 = *(void *)(v0 + 320);
    uint64_t v10 = *(void *)(v0 + 288);
    uint64_t v11 = *(void *)(v0 + 160);
    uint64_t v12 = *(void *)(v0 + 128) + *(int *)(v0 + 376);
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 208) + 32);
    v13(v10, *(void *)(v0 + 200), v11);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v12, v9);
    v13(v12, v10, v11);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void, void, void))(v0 + 336))(*(void *)(v0 + 328), *(void *)(v0 + 128) + *(int *)(v0 + 376), *(void *)(v0 + 312));
  }
  uint64_t v14 = EnumCaseMultiPayload;
  if (!EnumCaseMultiPayload)
  {
    uint64_t v16 = *(void *)(v0 + 272);
    uint64_t v15 = *(void *)(v0 + 280);
    uint64_t v17 = *(void *)(v0 + 264);
    uint64_t v18 = *(void *)(v0 + 208);
    uint64_t v19 = *(void *)(v0 + 160);
    v81 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32);
    v81(v15, *(void *)(v0 + 328), v19);
    uint64_t v20 = *(void *)(v18 + 16);
    ((void (*)(uint64_t, uint64_t, uint64_t))v20)(v16, v15, v19);
    char v21 = sub_1001C13B0();
    ((void (*)(uint64_t, uint64_t, uint64_t))v20)(v17, v16, v19);
    uint64_t v22 = *(void *)(v0 + 264);
    uint64_t v23 = *(void *)(v0 + 208);
    uint64_t v24 = *(void *)(v0 + 160);
    if ((v21 & 1) == 0)
    {
      v26 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
      uint64_t v35 = *(void *)(v0 + 264);
      uint64_t v36 = *(void *)(v0 + 160);
      goto LABEL_15;
    }
    uint64_t v25 = sub_1001C13A0();
    v26 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    v26(v22, v24);
    if (v25 > 64)
    {
      v82 = v26;
      ((void (*)(void, void, void))v20)(*(void *)(v0 + 256), *(void *)(v0 + 272), *(void *)(v0 + 160));
      *(void *)(v0 + 104) = 0x8000000000000000;
      char v27 = sub_1001C13B0();
      uint64_t v28 = *(void *)(v0 + 160);
      if ((v27 & 1) == 0) {
        goto LABEL_39;
      }
      uint64_t v29 = sub_1001C13A0();
      uint64_t v30 = *(void *)(v0 + 256);
      if (v29 >= 64)
      {
        uint64_t v71 = *(void *)(v0 + 248);
        uint64_t v72 = *(void *)(v0 + 160);
        sub_10000A81C();
        sub_1001C1380();
        uint64_t v28 = sub_1001C0BC0();
        v26(v71, v72);
        v26(v30, v72);
        if ((v28 & 1) == 0) {
          goto LABEL_16;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(v0 + 160);
        uint64_t v32 = sub_1001C1390();
        v26(v30, v31);
LABEL_47:
        if (v32 >= *(void *)(v0 + 104)) {
          goto LABEL_16;
        }
      }
LABEL_48:
      while (1)
      {
        __break(1u);
LABEL_49:
        uint64_t v83 = *(void *)(v0 + 216);
        uint64_t v74 = *(void *)(v0 + 160);
        swift_getAssociatedConformanceWitness();
        sub_1001C18A0();
        sub_1001C1820();
        char v75 = sub_1001C0BC0();
        uint64_t v76 = v28;
        uint64_t v28 = (uint64_t)v82;
        v82(v76, v74);
        v81(v83, v30, v74);
        uint64_t v77 = *(void *)(v0 + 216);
        uint64_t v30 = *(void *)(v0 + 160);
        if (v75) {
          break;
        }
        uint64_t v78 = *(void *)(v0 + 104);
        uint64_t v79 = sub_1001C1390();
        v82(v77, v30);
        BOOL v80 = v79 < v78;
        v26 = v82;
        if (!v80) {
          goto LABEL_16;
        }
      }
      uint64_t result = ((uint64_t (*)(void, void))v82)(*(void *)(v0 + 216), *(void *)(v0 + 160));
      __break(1u);
      return result;
    }
    while (1)
    {
LABEL_16:
      *(void *)(v0 + 352) = v26;
      uint64_t v37 = *(void *)(v0 + 272);
      uint64_t v38 = *(void *)(v0 + 240);
      uint64_t v39 = *(void *)(v0 + 160);
      uint64_t v40 = sub_1001C13A0();
      ((void (*)(uint64_t, uint64_t, uint64_t))v20)(v38, v37, v39);
      uint64_t v41 = *(void *)(v0 + 240);
      uint64_t v42 = *(void *)(v0 + 160);
      if (v40 < 65)
      {
        uint64_t v47 = sub_1001C13A0();
        v26(v41, v42);
        if (v47 != 64 || (sub_1001C13B0() & 1) != 0)
        {
LABEL_27:
          uint64_t v51 = *(void *)(v0 + 272);
          uint64_t v52 = *(void *)(v0 + 160);
          uint64_t v53 = *(void *)(v0 + 120);
          uint64_t v54 = *(void *)(v0 + 208) + 8;
          uint64_t v55 = sub_1001C1390();
          *(void *)(v0 + 360) = v54 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
          v26(v51, v52);
          uint64_t v56 = sub_10000726C(v55, v53);
          if (v57 >> 60 == 15)
          {
            v33 = (void *)swift_task_alloc();
            *(void *)(v0 + 368) = v33;
            void *v33 = v0;
            v34 = sub_100005DF0;
            goto LABEL_29;
          }
          uint64_t v60 = v56;
          unint64_t v61 = v57;
          (*(void (**)(void, void))(*(void *)(v0 + 320) + 8))(*(void *)(v0 + 128) + *(int *)(v0 + 376), *(void *)(v0 + 312));
          swift_storeEnumTagMultiPayload();
          *(void *)(v0 + 72) = v60;
          *(void *)(v0 + 80) = v61;
          sub_100007B14(v60, v61);
          sub_1001BFE90();
          sub_1001C0020();
          v26(*(void *)(v0 + 280), *(void *)(v0 + 160));
          sub_100007918(v60, v61);
LABEL_33:
          (*(void (**)(void, uint64_t, uint64_t))(*(void *)(*(void *)(v0 + 296) - 8) + 56))(*(void *)(v0 + 112), v14, 1);
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          v62 = *(uint64_t (**)(void))(v0 + 8);
          goto LABEL_34;
        }
      }
      else
      {
        v26(*(void *)(v0 + 240), *(void *)(v0 + 160));
      }
      ((void (*)(void, void, void))v20)(*(void *)(v0 + 232), *(void *)(v0 + 272), *(void *)(v0 + 160));
      *(void *)(v0 + 88) = 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v28 = sub_1001C13B0();
      uint64_t v43 = sub_1001C13A0();
      if (v28) {
        break;
      }
      if (v43 <= 63) {
        goto LABEL_26;
      }
      uint64_t v63 = *(void *)(v0 + 248);
      uint64_t v20 = *(void *)(v0 + 224);
      uint64_t v64 = *(void *)(v0 + 232);
      uint64_t v65 = *(void *)(v0 + 160);
      *(void *)(v0 + 96) = 0x7FFFFFFFFFFFFFFFLL;
      v81(v63, v64, v65);
      sub_10000A81C();
      sub_1001C1380();
      char v66 = sub_1001C0BC0();
      v26(v20, v65);
      v26(v63, v65);
      if ((v66 & 1) == 0) {
        goto LABEL_27;
      }
LABEL_38:
      __break(1u);
LABEL_39:
      char v67 = sub_1001C13B0();
      uint64_t v68 = sub_1001C13A0();
      uint64_t v30 = *(void *)(v0 + 256);
      if (v67)
      {
        uint64_t v28 = *(void *)(v0 + 248);
        if (v68 <= 64) {
          goto LABEL_49;
        }
        uint64_t v69 = *(void *)(v0 + 160);
        sub_10000A81C();
        sub_1001C1380();
        char v70 = sub_1001C0BC0();
        v26 = v82;
        v82(v28, v69);
        v82(v30, v69);
        if (v70) {
          goto LABEL_48;
        }
      }
      else
      {
        uint64_t v73 = *(void *)(v0 + 160);
        v26 = v82;
        if (v68 < 64)
        {
          uint64_t v32 = sub_1001C1390();
          v82(v30, v73);
          goto LABEL_47;
        }
        uint64_t v35 = *(void *)(v0 + 256);
        uint64_t v36 = *(void *)(v0 + 160);
LABEL_15:
        v26(v35, v36);
      }
    }
    if (v43 > 64)
    {
      uint64_t v44 = *(void *)(v0 + 248);
      uint64_t v45 = *(void *)(v0 + 232);
      uint64_t v46 = *(void *)(v0 + 160);
      sub_10000A81C();
      sub_1001C1380();
      uint64_t v20 = sub_1001C0BC0();
      v26(v44, v46);
      v26(v45, v46);
      if ((v20 & 1) == 0) {
        goto LABEL_27;
      }
      goto LABEL_38;
    }
LABEL_26:
    uint64_t v48 = *(void *)(v0 + 232);
    uint64_t v49 = *(void *)(v0 + 160);
    uint64_t v20 = *(void *)(v0 + 208) + 8;
    uint64_t v50 = sub_1001C1390();
    v26(v48, v49);
    if (*(void *)(v0 + 88) >= v50) {
      goto LABEL_27;
    }
    goto LABEL_38;
  }
  if (!**(void **)(v0 + 328)) {
    goto LABEL_33;
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v62 = *(uint64_t (**)(void))(v0 + 8);
LABEL_34:
  return v62();
}

uint64_t sub_100005110()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10000520C, 0, 0);
}

uint64_t sub_10000520C()
{
  uint64_t v1 = v0 + 104;
  while (1)
  {
    (*(void (**)(void, void, void))(v0 + 336))(*(void *)(v0 + 328), *(void *)(v0 + 128) + *(int *)(v0 + 376), *(void *)(v0 + 312));
    uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 2) {
      break;
    }
    uint64_t v4 = *(void *)(v0 + 200);
    uint64_t v3 = *(void *)(v0 + 208);
    uint64_t v5 = *(void *)(v0 + 160);
    sub_100006AE0(*(void *)(v0 + 120), v4);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v5) == 1)
    {
      (*(void (**)(void, void))(*(void *)(v0 + 192) + 8))(*(void *)(v0 + 200), *(void *)(v0 + 184));
      uint64_t v31 = (void *)swift_task_alloc();
      *(void *)(v0 + 344) = v31;
      *uint64_t v31 = v0;
      uint64_t v32 = sub_100005110;
LABEL_28:
      v31[1] = v32;
      uint64_t v56 = *(void *)(v0 + 120);
      return sub_100006C84(v56);
    }
    uint64_t v7 = *(void *)(v0 + 312);
    uint64_t v6 = *(void *)(v0 + 320);
    uint64_t v8 = *(void *)(v0 + 288);
    uint64_t v9 = *(void *)(v0 + 160);
    uint64_t v10 = *(void *)(v0 + 128) + *(int *)(v0 + 376);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 208) + 32);
    v11(v8, *(void *)(v0 + 200), v9);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v7);
    v11(v10, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v12 = EnumCaseMultiPayload;
  if (!EnumCaseMultiPayload)
  {
    uint64_t v14 = *(void *)(v0 + 272);
    uint64_t v13 = *(void *)(v0 + 280);
    uint64_t v15 = *(void *)(v0 + 264);
    uint64_t v16 = *(void *)(v0 + 208);
    uint64_t v17 = *(void *)(v0 + 160);
    uint64_t v79 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32);
    v79(v13, *(void *)(v0 + 328), v17);
    uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
    v18(v14, v13, v17);
    char v19 = sub_1001C13B0();
    uint64_t v20 = v15;
    char v21 = v18;
    v18(v20, v14, v17);
    uint64_t v22 = *(void *)(v0 + 264);
    uint64_t v23 = *(void *)(v0 + 208);
    uint64_t v24 = *(void *)(v0 + 160);
    if ((v19 & 1) == 0)
    {
      v26 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
      v26(*(void *)(v0 + 264), *(void *)(v0 + 160));
      goto LABEL_15;
    }
    uint64_t v25 = sub_1001C13A0();
    v26 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    v26(v22, v24);
    if (v25 <= 64) {
      goto LABEL_15;
    }
    BOOL v80 = v26;
    uint64_t v78 = v21;
    v21(*(void *)(v0 + 256), *(void *)(v0 + 272), *(void *)(v0 + 160));
    *(void *)(v0 + 104) = 0x8000000000000000;
    if ((sub_1001C13B0() & 1) == 0) {
      goto LABEL_38;
    }
    uint64_t v27 = sub_1001C13A0();
    uint64_t v28 = *(void *)(v0 + 256);
    if (v27 >= 64)
    {
      uint64_t v71 = *(void *)(v0 + 248);
      uint64_t v72 = *(void *)(v0 + 160);
      sub_10000A81C();
      sub_1001C1380();
      uint64_t v1 = sub_1001C0BC0();
      v26(v71, v72);
      v26(v28, v72);
      if ((v1 & 1) == 0) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v29 = *(void *)(v0 + 160);
      uint64_t v30 = sub_1001C1390();
      v26(v28, v29);
LABEL_46:
      char v21 = v78;
      if (v30 >= *(void *)(v0 + 104)) {
        goto LABEL_15;
      }
    }
LABEL_50:
    __break(1u);
LABEL_51:
    v26(v28, v1);
    char v21 = v78;
    while (1)
    {
LABEL_15:
      *(void *)(v0 + 352) = v26;
      uint64_t v33 = *(void *)(v0 + 272);
      uint64_t v34 = *(void *)(v0 + 240);
      uint64_t v35 = *(void *)(v0 + 160);
      uint64_t v36 = sub_1001C13A0();
      v21(v34, v33, v35);
      uint64_t v37 = *(void *)(v0 + 240);
      uint64_t v38 = *(void *)(v0 + 160);
      if (v36 < 65)
      {
        uint64_t v45 = sub_1001C13A0();
        v26(v37, v38);
        if (v45 != 64 || (sub_1001C13B0() & 1) != 0)
        {
LABEL_26:
          uint64_t v49 = *(void *)(v0 + 272);
          uint64_t v50 = *(void *)(v0 + 160);
          uint64_t v51 = *(void *)(v0 + 120);
          uint64_t v52 = *(void *)(v0 + 208) + 8;
          uint64_t v53 = sub_1001C1390();
          *(void *)(v0 + 360) = v52 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
          v26(v49, v50);
          uint64_t v54 = sub_10000726C(v53, v51);
          if (v55 >> 60 == 15)
          {
            uint64_t v31 = (void *)swift_task_alloc();
            *(void *)(v0 + 368) = v31;
            *uint64_t v31 = v0;
            uint64_t v32 = sub_100005DF0;
            goto LABEL_28;
          }
          uint64_t v58 = v54;
          unint64_t v59 = v55;
          (*(void (**)(void, void))(*(void *)(v0 + 320) + 8))(*(void *)(v0 + 128) + *(int *)(v0 + 376), *(void *)(v0 + 312));
          swift_storeEnumTagMultiPayload();
          *(void *)(v0 + 72) = v58;
          *(void *)(v0 + 80) = v59;
          sub_100007B14(v58, v59);
          sub_1001BFE90();
          sub_1001C0020();
          v26(*(void *)(v0 + 280), *(void *)(v0 + 160));
          sub_100007918(v58, v59);
LABEL_32:
          (*(void (**)(void, uint64_t, uint64_t))(*(void *)(*(void *)(v0 + 296) - 8) + 56))(*(void *)(v0 + 112), v12, 1);
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          uint64_t v60 = *(uint64_t (**)(void))(v0 + 8);
          goto LABEL_33;
        }
      }
      else
      {
        v26(*(void *)(v0 + 240), *(void *)(v0 + 160));
      }
      uint64_t v1 = *(void *)(v0 + 160);
      v21(*(void *)(v0 + 232), *(void *)(v0 + 272), v1);
      *(void *)(v0 + 88) = 0x7FFFFFFFFFFFFFFFLL;
      char v39 = sub_1001C13B0();
      uint64_t v40 = sub_1001C13A0();
      if (v39) {
        break;
      }
      if (v40 <= 63) {
        goto LABEL_25;
      }
      uint64_t v61 = *(void *)(v0 + 248);
      uint64_t v63 = *(void *)(v0 + 224);
      uint64_t v62 = *(void *)(v0 + 232);
      uint64_t v64 = *(void *)(v0 + 160);
      uint64_t v1 = *(void *)(v0 + 144);
      *(void *)(v0 + 96) = 0x7FFFFFFFFFFFFFFFLL;
      v79(v61, v62, v64);
      sub_10000A81C();
      sub_1001C1380();
      char v65 = sub_1001C0BC0();
      v26(v63, v64);
      v26(v61, v64);
      if ((v65 & 1) == 0) {
        goto LABEL_26;
      }
LABEL_37:
      __break(1u);
LABEL_38:
      char v66 = sub_1001C13B0();
      uint64_t v67 = sub_1001C13A0();
      uint64_t v28 = *(void *)(v0 + 256);
      if ((v66 & 1) == 0)
      {
        uint64_t v1 = *(void *)(v0 + 160);
        v26 = v80;
        if (v67 >= 64) {
          goto LABEL_51;
        }
        uint64_t v30 = sub_1001C1390();
        v80(v28, v1);
        goto LABEL_46;
      }
      uint64_t v68 = *(void *)(v0 + 248);
      if (v67 <= 64)
      {
        uint64_t v73 = *(void *)(v0 + 160);
        uint64_t v77 = *(void *)(v0 + 216);
        swift_getAssociatedConformanceWitness();
        sub_1001C18A0();
        sub_1001C1820();
        char v74 = sub_1001C0BC0();
        v80(v68, v73);
        v79(v77, v28, v73);
        uint64_t v75 = *(void *)(v0 + 216);
        uint64_t v1 = *(void *)(v0 + 160);
        if (v74)
        {
          uint64_t result = ((uint64_t (*)(void, void))v80)(*(void *)(v0 + 216), *(void *)(v0 + 160));
          __break(1u);
          return result;
        }
        uint64_t v28 = *(void *)(v0 + 104);
        uint64_t v76 = sub_1001C1390();
        v80(v75, v1);
        v26 = v80;
        char v21 = v78;
        if (v76 < v28) {
          goto LABEL_50;
        }
      }
      else
      {
        uint64_t v69 = *(void *)(v0 + 160);
        sub_10000A81C();
        sub_1001C1380();
        char v70 = sub_1001C0BC0();
        v26 = v80;
        v80(v68, v69);
        v80(v28, v69);
        char v21 = v78;
        if (v70) {
          goto LABEL_50;
        }
      }
    }
    if (v40 > 64)
    {
      uint64_t v41 = *(void *)(v0 + 248);
      uint64_t v42 = *(void *)(v0 + 232);
      uint64_t v43 = *(void *)(v0 + 160);
      uint64_t v1 = *(void *)(v0 + 144);
      sub_10000A81C();
      sub_1001C1380();
      char v44 = sub_1001C0BC0();
      v26(v41, v43);
      v26(v42, v43);
      if ((v44 & 1) == 0) {
        goto LABEL_26;
      }
      goto LABEL_37;
    }
LABEL_25:
    uint64_t v46 = *(void *)(v0 + 232);
    uint64_t v47 = *(void *)(v0 + 160);
    uint64_t v48 = sub_1001C1390();
    v26(v46, v47);
    if (*(void *)(v0 + 88) >= v48) {
      goto LABEL_26;
    }
    goto LABEL_37;
  }
  if (!**(void **)(v0 + 328)) {
    goto LABEL_32;
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v60 = *(uint64_t (**)(void))(v0 + 8);
LABEL_33:
  return v60();
}

uint64_t sub_100005DF0()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100005EEC, 0, 0);
}

uint64_t sub_100005EEC()
{
  uint64_t v1 = v0 + 104;
  (*(void (**)(void, void))(v0 + 352))(*(void *)(v0 + 280), *(void *)(v0 + 160));
  while (1)
  {
    (*(void (**)(void, void, void))(v0 + 336))(*(void *)(v0 + 328), *(void *)(v0 + 128) + *(int *)(v0 + 376), *(void *)(v0 + 312));
    uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 2) {
      break;
    }
    uint64_t v4 = *(void *)(v0 + 200);
    uint64_t v3 = *(void *)(v0 + 208);
    uint64_t v5 = *(void *)(v0 + 160);
    sub_100006AE0(*(void *)(v0 + 120), v4);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v5) == 1)
    {
      (*(void (**)(void, void))(*(void *)(v0 + 192) + 8))(*(void *)(v0 + 200), *(void *)(v0 + 184));
      uint64_t v31 = (void *)swift_task_alloc();
      *(void *)(v0 + 344) = v31;
      *uint64_t v31 = v0;
      uint64_t v32 = sub_100005110;
LABEL_28:
      v31[1] = v32;
      uint64_t v56 = *(void *)(v0 + 120);
      return sub_100006C84(v56);
    }
    uint64_t v7 = *(void *)(v0 + 312);
    uint64_t v6 = *(void *)(v0 + 320);
    uint64_t v8 = *(void *)(v0 + 288);
    uint64_t v9 = *(void *)(v0 + 160);
    uint64_t v10 = *(void *)(v0 + 128) + *(int *)(v0 + 376);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 208) + 32);
    v11(v8, *(void *)(v0 + 200), v9);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v7);
    v11(v10, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v12 = EnumCaseMultiPayload;
  if (!EnumCaseMultiPayload)
  {
    uint64_t v14 = *(void *)(v0 + 272);
    uint64_t v13 = *(void *)(v0 + 280);
    uint64_t v15 = *(void *)(v0 + 264);
    uint64_t v16 = *(void *)(v0 + 208);
    uint64_t v17 = *(void *)(v0 + 160);
    uint64_t v79 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32);
    v79(v13, *(void *)(v0 + 328), v17);
    uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
    v18(v14, v13, v17);
    char v19 = sub_1001C13B0();
    uint64_t v20 = v15;
    char v21 = v18;
    v18(v20, v14, v17);
    uint64_t v22 = *(void *)(v0 + 264);
    uint64_t v23 = *(void *)(v0 + 208);
    uint64_t v24 = *(void *)(v0 + 160);
    if ((v19 & 1) == 0)
    {
      v26 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
      v26(*(void *)(v0 + 264), *(void *)(v0 + 160));
      goto LABEL_15;
    }
    uint64_t v25 = sub_1001C13A0();
    v26 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    v26(v22, v24);
    if (v25 <= 64) {
      goto LABEL_15;
    }
    BOOL v80 = v26;
    uint64_t v78 = v21;
    v21(*(void *)(v0 + 256), *(void *)(v0 + 272), *(void *)(v0 + 160));
    *(void *)(v0 + 104) = 0x8000000000000000;
    if ((sub_1001C13B0() & 1) == 0) {
      goto LABEL_38;
    }
    uint64_t v27 = sub_1001C13A0();
    uint64_t v28 = *(void *)(v0 + 256);
    if (v27 >= 64)
    {
      uint64_t v71 = *(void *)(v0 + 248);
      uint64_t v72 = *(void *)(v0 + 160);
      sub_10000A81C();
      sub_1001C1380();
      uint64_t v1 = sub_1001C0BC0();
      v26(v71, v72);
      v26(v28, v72);
      if ((v1 & 1) == 0) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v29 = *(void *)(v0 + 160);
      uint64_t v30 = sub_1001C1390();
      v26(v28, v29);
LABEL_46:
      char v21 = v78;
      if (v30 >= *(void *)(v0 + 104)) {
        goto LABEL_15;
      }
    }
LABEL_50:
    __break(1u);
LABEL_51:
    v26(v28, v1);
    char v21 = v78;
    while (1)
    {
LABEL_15:
      *(void *)(v0 + 352) = v26;
      uint64_t v33 = *(void *)(v0 + 272);
      uint64_t v34 = *(void *)(v0 + 240);
      uint64_t v35 = *(void *)(v0 + 160);
      uint64_t v36 = sub_1001C13A0();
      v21(v34, v33, v35);
      uint64_t v37 = *(void *)(v0 + 240);
      uint64_t v38 = *(void *)(v0 + 160);
      if (v36 < 65)
      {
        uint64_t v45 = sub_1001C13A0();
        v26(v37, v38);
        if (v45 != 64 || (sub_1001C13B0() & 1) != 0)
        {
LABEL_26:
          uint64_t v49 = *(void *)(v0 + 272);
          uint64_t v50 = *(void *)(v0 + 160);
          uint64_t v51 = *(void *)(v0 + 120);
          uint64_t v52 = *(void *)(v0 + 208) + 8;
          uint64_t v53 = sub_1001C1390();
          *(void *)(v0 + 360) = v52 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
          v26(v49, v50);
          uint64_t v54 = sub_10000726C(v53, v51);
          if (v55 >> 60 == 15)
          {
            uint64_t v31 = (void *)swift_task_alloc();
            *(void *)(v0 + 368) = v31;
            *uint64_t v31 = v0;
            uint64_t v32 = sub_100005DF0;
            goto LABEL_28;
          }
          uint64_t v58 = v54;
          unint64_t v59 = v55;
          (*(void (**)(void, void))(*(void *)(v0 + 320) + 8))(*(void *)(v0 + 128) + *(int *)(v0 + 376), *(void *)(v0 + 312));
          swift_storeEnumTagMultiPayload();
          *(void *)(v0 + 72) = v58;
          *(void *)(v0 + 80) = v59;
          sub_100007B14(v58, v59);
          sub_1001BFE90();
          sub_1001C0020();
          v26(*(void *)(v0 + 280), *(void *)(v0 + 160));
          sub_100007918(v58, v59);
LABEL_32:
          (*(void (**)(void, uint64_t, uint64_t))(*(void *)(*(void *)(v0 + 296) - 8) + 56))(*(void *)(v0 + 112), v12, 1);
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          uint64_t v60 = *(uint64_t (**)(void))(v0 + 8);
          goto LABEL_33;
        }
      }
      else
      {
        v26(*(void *)(v0 + 240), *(void *)(v0 + 160));
      }
      uint64_t v1 = *(void *)(v0 + 160);
      v21(*(void *)(v0 + 232), *(void *)(v0 + 272), v1);
      *(void *)(v0 + 88) = 0x7FFFFFFFFFFFFFFFLL;
      char v39 = sub_1001C13B0();
      uint64_t v40 = sub_1001C13A0();
      if (v39) {
        break;
      }
      if (v40 <= 63) {
        goto LABEL_25;
      }
      uint64_t v61 = *(void *)(v0 + 248);
      uint64_t v63 = *(void *)(v0 + 224);
      uint64_t v62 = *(void *)(v0 + 232);
      uint64_t v64 = *(void *)(v0 + 160);
      uint64_t v1 = *(void *)(v0 + 144);
      *(void *)(v0 + 96) = 0x7FFFFFFFFFFFFFFFLL;
      v79(v61, v62, v64);
      sub_10000A81C();
      sub_1001C1380();
      char v65 = sub_1001C0BC0();
      v26(v63, v64);
      v26(v61, v64);
      if ((v65 & 1) == 0) {
        goto LABEL_26;
      }
LABEL_37:
      __break(1u);
LABEL_38:
      char v66 = sub_1001C13B0();
      uint64_t v67 = sub_1001C13A0();
      uint64_t v28 = *(void *)(v0 + 256);
      if ((v66 & 1) == 0)
      {
        uint64_t v1 = *(void *)(v0 + 160);
        v26 = v80;
        if (v67 >= 64) {
          goto LABEL_51;
        }
        uint64_t v30 = sub_1001C1390();
        v80(v28, v1);
        goto LABEL_46;
      }
      uint64_t v68 = *(void *)(v0 + 248);
      if (v67 <= 64)
      {
        uint64_t v73 = *(void *)(v0 + 160);
        uint64_t v77 = *(void *)(v0 + 216);
        swift_getAssociatedConformanceWitness();
        sub_1001C18A0();
        sub_1001C1820();
        char v74 = sub_1001C0BC0();
        v80(v68, v73);
        v79(v77, v28, v73);
        uint64_t v75 = *(void *)(v0 + 216);
        uint64_t v1 = *(void *)(v0 + 160);
        if (v74)
        {
          uint64_t result = ((uint64_t (*)(void, void))v80)(*(void *)(v0 + 216), *(void *)(v0 + 160));
          __break(1u);
          return result;
        }
        uint64_t v28 = *(void *)(v0 + 104);
        uint64_t v76 = sub_1001C1390();
        v80(v75, v1);
        v26 = v80;
        char v21 = v78;
        if (v76 < v28) {
          goto LABEL_50;
        }
      }
      else
      {
        uint64_t v69 = *(void *)(v0 + 160);
        sub_10000A81C();
        sub_1001C1380();
        char v70 = sub_1001C0BC0();
        v26 = v80;
        v80(v68, v69);
        v80(v28, v69);
        char v21 = v78;
        if (v70) {
          goto LABEL_50;
        }
      }
    }
    if (v40 > 64)
    {
      uint64_t v41 = *(void *)(v0 + 248);
      uint64_t v42 = *(void *)(v0 + 232);
      uint64_t v43 = *(void *)(v0 + 160);
      uint64_t v1 = *(void *)(v0 + 144);
      sub_10000A81C();
      sub_1001C1380();
      char v44 = sub_1001C0BC0();
      v26(v41, v43);
      v26(v42, v43);
      if ((v44 & 1) == 0) {
        goto LABEL_26;
      }
      goto LABEL_37;
    }
LABEL_25:
    uint64_t v46 = *(void *)(v0 + 232);
    uint64_t v47 = *(void *)(v0 + 160);
    uint64_t v48 = sub_1001C1390();
    v26(v46, v47);
    if (*(void *)(v0 + 88) >= v48) {
      goto LABEL_26;
    }
    goto LABEL_37;
  }
  if (!**(void **)(v0 + 328)) {
    goto LABEL_32;
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v60 = *(uint64_t (**)(void))(v0 + 8);
LABEL_33:
  return v60();
}

uint64_t sub_100006AE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = sub_1001C1550();
  uint64_t v6 = sub_10000726C(v5 / 8, a1);
  if (v7 >> 60 == 15)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
    return v8(a2, 1, 1, v4);
  }
  else
  {
    uint64_t v10 = v6;
    unint64_t v11 = v7;
    __chkstk_darwin(v6, v7);
    sub_1001BF150();
    sub_100007918(v10, v11);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a2, 0, 1, v4);
  }
}

uint64_t sub_100006C84(uint64_t a1)
{
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = v1;
  uint64_t v3 = *(void *)(a1 + 32);
  long long v4 = *(_OWORD *)(a1 + 40);
  long long v5 = *(_OWORD *)(a1 + 56);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(a1 + 16);
  *(void *)(v2 + 32) = v3;
  *(_OWORD *)(v2 + 40) = v4;
  *(_OWORD *)(v2 + 56) = v5;
  uint64_t v6 = type metadata accessor for LengthPrefixDeframer.AsyncIterator.State();
  *(void *)(v2 + 104) = v6;
  *(void *)(v2 + 112) = *(void *)(v6 - 8);
  *(void *)(v2 + 120) = swift_task_alloc();
  *(void *)(v2 + 128) = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 136) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100006E34;
  return dispatch thunk of AsyncIteratorProtocol.next()(v2 + 72, AssociatedTypeWitness, AssociatedConformanceWitness);
}

uint64_t sub_100006E34()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1000071BC;
  }
  else {
    uint64_t v2 = sub_100006F48;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100006F48()
{
  unint64_t v1 = v0[10];
  if (v1 >> 60 == 15)
  {
    uint64_t v2 = (void *)(v0[12] + *(int *)(v0[11] + 80));
    (*(void (**)(void, void *, void))(v0[14] + 16))(v0[16], v2, v0[13]);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        swift_errorRelease();
      }
      else
      {
        uint64_t v9 = (uint64_t *)(v0[12] + *(int *)(v0[11] + 76));
        uint64_t v11 = *v9;
        unint64_t v10 = v9[1];
        switch(v10 >> 62)
        {
          case 1uLL:
            if ((int)v11 != v11 >> 32) {
              goto LABEL_9;
            }
            goto LABEL_13;
          case 2uLL:
            if (*(void *)(v11 + 16) == *(void *)(v11 + 24)) {
              goto LABEL_13;
            }
            goto LABEL_9;
          case 3uLL:
            goto LABEL_13;
          default:
            if ((v10 & 0xFF000000000000) != 0)
            {
LABEL_9:
              uint64_t v13 = v0[14];
              uint64_t v12 = (uint64_t *)v0[15];
              uint64_t v14 = v0[13];
              sub_10000A870();
              uint64_t *v12 = swift_allocError();
              swift_storeEnumTagMultiPayload();
              (*(void (**)(void *, uint64_t *, uint64_t))(v13 + 40))(v2, v12, v14);
            }
            else
            {
LABEL_13:
              (*(void (**)(void *, void))(v0[14] + 8))(v2, v0[13]);
              *uint64_t v2 = 0;
              swift_storeEnumTagMultiPayload();
            }
            break;
        }
      }
    }
    else
    {
      uint64_t v6 = (uint64_t *)v0[15];
      uint64_t v5 = v0[16];
      uint64_t v7 = v0[13];
      uint64_t v8 = v0[14];
      sub_10000A870();
      *uint64_t v6 = swift_allocError();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, uint64_t *, uint64_t))(v8 + 40))(v2, v6, v7);
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v5, v7);
    }
  }
  else
  {
    uint64_t v4 = v0[9];
    sub_1001BF1B0();
    sub_100007918(v4, v1);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_1000071BC()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = (void *)(v0[12] + *(int *)(v0[11] + 80));
  (*(void (**)(void *, void))(v0[14] + 8))(v2, v0[13]);
  *uint64_t v2 = v1;
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10000726C(uint64_t a1, uint64_t a2)
{
  if (!a1) {
    return 0;
  }
  uint64_t v3 = v2 + *(int *)(a2 + 76);
  uint64_t v4 = *(void *)v3;
  unint64_t v5 = *(void *)(v3 + 8);
  switch(v5 >> 62)
  {
    case 1uLL:
      LODWORD(v7) = HIDWORD(v4) - v4;
      if (__OFSUB__(HIDWORD(v4), v4))
      {
        __break(1u);
LABEL_14:
        __break(1u);
        JUMPOUT(0x10000735CLL);
      }
      uint64_t v7 = (int)v7;
LABEL_8:
      if (v7 < a1)
      {
LABEL_11:
        uint64_t v8 = 0;
      }
      else
      {
LABEL_9:
        sub_100007B14(*(void *)v3, *(void *)(v3 + 8));
        sub_1001771D4(a1, v4, v5, &v13);
        uint64_t v8 = v13;
        sub_100177370(a1);
      }
      break;
    case 2uLL:
      uint64_t v10 = *(void *)(v4 + 16);
      uint64_t v9 = *(void *)(v4 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v7 = v9 - v10;
      if (!v11) {
        goto LABEL_8;
      }
      goto LABEL_14;
    case 3uLL:
      if (a1 > 0) {
        goto LABEL_11;
      }
      goto LABEL_9;
    default:
      uint64_t v7 = BYTE6(v5);
      goto LABEL_8;
  }
  return v8;
}

uint64_t sub_10000736C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = __chkstk_darwin(a1, a2);
  if (result)
  {
    sub_100007984(0, v6, a4, (uint64_t)&v8 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
    return sub_1001C1560();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100007424(uint64_t a1, void *a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_1000074CC;
  return sub_100004280(a1, a2);
}

uint64_t sub_1000074CC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1000075C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 24) = a4;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 32) = v12;
  void *v12 = v6;
  v12[1] = sub_1000076A0;
  return _sScIsE4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKF(a1, a2, a3, a5, a6, v6 + 16);
}

uint64_t sub_1000076A0()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0) {
    **(void **)(v2 + 24) = *(void *)(v2 + 16);
  }
  uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
  return v4();
}

uint64_t sub_1000077B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v5.n128_f64[0] = sub_100003FD8(a1, a2, a3);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(*(void *)(a1 - 8) + 8);
  return v6(v3, a1, v5);
}

uint64_t sub_100007810@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v7 = *(void *)(a2 - 8);
  __chkstk_darwin(a1, v4);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a3, v9, a2);
}

uint64_t sub_1000078E4(uint64_t a1, uint64_t a2)
{
  return sub_10000736C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_100007918(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_10000792C(a1, a2);
  }
  return a1;
}

uint64_t sub_10000792C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

char *sub_100007984@<X0>(char *result@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5 = *(void *)(a3 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v6 + 1;
  if ((v6 & (unint64_t)(v6 + 1)) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v10 = result;
  uint64_t v11 = *(void *)(a3 - 8);
  if (v6 <= 0xF)
  {
    if (*(uint64_t *)(v5 + 72) < 1025 || (uint64_t result = (char *)swift_stdlib_isStackAllocationSafe(), result))
    {
      uint64_t result = (char *)__chkstk_darwin(result, v7);
      uint64_t v13 = (char *)&v17 - v12;
      size_t v14 = *(void *)(v11 + 64);
      if ((v14 & 0x8000000000000000) == 0)
      {
        memcpy((char *)&v17 - v12, &v10[a2], v14);
        return (char *)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 16))(a4, v13, a3);
      }
      goto LABEL_13;
    }
  }
  uint64_t result = (char *)swift_slowAlloc();
  size_t v15 = *(void *)(v11 + 64);
  if ((v15 & 0x8000000000000000) != 0)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    return result;
  }
  uint64_t v16 = result;
  memcpy(result, &v10[a2], v15);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(a4, v16, a3);
  return (char *)swift_slowDealloc();
}

uint64_t sub_100007B14(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t getEnumTagSinglePayload for LengthPrefixDeframerError(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for LengthPrefixDeframerError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100007C60);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LengthPrefixDeframerError()
{
  return &type metadata for LengthPrefixDeframerError;
}

uint64_t sub_100007C9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 64);
}

uint64_t sub_100007CA4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_100007D38(void *__dst, unsigned __int8 *a2, uint64_t a3)
{
  int v3 = __dst;
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(void *)a2;
    *int v3 = *(void *)a2;
    int v3 = (void *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    unsigned int v9 = a2[v5];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_19;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_19:
          int v13 = (v12 | (v10 << (8 * v5))) + 2;
          unsigned int v9 = v12 + 2;
          if (v5 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
      uint64_t v14 = *(void *)a2;
      swift_errorRetain();
      *int v3 = v14;
      *((unsigned char *)v3 + v5) = 1;
    }
    else if (v9)
    {
      memcpy(__dst, a2, v5 + 1);
    }
    else
    {
      (*(void (**)(void *))(v4 + 16))(__dst);
      *((unsigned char *)v3 + v5) = 0;
    }
  }
  return v3;
}

unsigned __int8 *sub_100007ED4(unsigned __int8 *result, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 24) - 8) + 64);
  if (v2 <= 8) {
    unint64_t v2 = 8;
  }
  unsigned int v3 = result[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *result;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)result;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)result | (result[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)result;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1) {
    return (unsigned __int8 *)swift_errorRelease();
  }
  if (!v3) {
    return (unsigned __int8 *)(*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 24) - 8) + 8))();
  }
  return result;
}

unsigned char *sub_100007FDC(unsigned char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    uint64_t v10 = *(void *)a2;
    swift_errorRetain();
    *(void *)__dst = v10;
    __dst[v4] = 1;
  }
  else if (v5)
  {
    memcpy(__dst, a2, v4 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *))(*(void *)(*(void *)(a3 + 24) - 8) + 16))(__dst);
    __dst[v4] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_100008138(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 24);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = __dst[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *__dst;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)__dst;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)__dst;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1)
    {
      swift_errorRelease();
    }
    else if (!v8)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
    }
    unsigned int v13 = __src[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *__src;
          goto LABEL_29;
        case 2:
          int v16 = *(unsigned __int16 *)__src;
          goto LABEL_29;
        case 3:
          int v16 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_29;
        case 4:
          int v16 = *(_DWORD *)__src;
LABEL_29:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      uint64_t v18 = *(void *)__src;
      swift_errorRetain();
      *(void *)__dst = v18;
      __dst[v7] = 1;
    }
    else if (v13)
    {
      memcpy(__dst, __src, v7 + 1);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      __dst[v7] = 0;
    }
  }
  return __dst;
}

unsigned char *sub_100008374(unsigned char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *(void *)__dst = *(void *)a2;
    __dst[v4] = 1;
  }
  else if (v5)
  {
    memcpy(__dst, a2, v4 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *))(*(void *)(*(void *)(a3 + 24) - 8) + 32))(__dst);
    __dst[v4] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_1000084C0(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 24);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = __dst[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *__dst;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)__dst;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)__dst;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1)
    {
      swift_errorRelease();
    }
    else if (!v8)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
    }
    unsigned int v13 = __src[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *__src;
          goto LABEL_29;
        case 2:
          int v16 = *(unsigned __int16 *)__src;
          goto LABEL_29;
        case 3:
          int v16 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_29;
        case 4:
          int v16 = *(_DWORD *)__src;
LABEL_29:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *(void *)__dst = *(void *)__src;
      __dst[v7] = 1;
    }
    else if (v13)
    {
      memcpy(__dst, __src, v7 + 1);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      __dst[v7] = 0;
    }
  }
  return __dst;
}

uint64_t sub_1000086F4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v4 = 8;
  if (*(void *)(v3 + 64) > 8uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 253) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 3) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 254;
}

void sub_100008828(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v8 = a2 - 254;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1000089F0);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_100008A18(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v3 = 8;
  if (*(void *)(v2 + 64) > 8uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_100008AD0(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) <= 8uLL) {
    size_t v4 = 8;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_100008BA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 72);
}

uint64_t sub_100008BB0()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for LengthPrefixDeframer.AsyncIterator.State();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_100008CCC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = *(void *)(*(void *)(a3 + 24) - 8);
  int v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v10 & 0xF8 | 7;
  if (*(void *)(v9 + 64) <= 8uLL) {
    uint64_t v12 = 8;
  }
  else {
    uint64_t v12 = *(void *)(v9 + 64);
  }
  int v13 = v10 | *(_DWORD *)(v7 + 80);
  if ((v13 & 0x1000F8) != 0 || ((v11 + ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v11) + v12 + 1 > 0x18)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + (((v13 & 0xF8 | 7u) + 16) & ~(unint64_t)(v13 & 0xF8 | 7u)));
    swift_retain();
  }
  else
  {
    uint64_t v16 = ~v11;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
    int v17 = (void *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v18 = (uint64_t *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v19 = *v18;
    unint64_t v20 = v18[1];
    sub_100007B14(*v18, v20);
    *int v17 = v19;
    v17[1] = v20;
    char v21 = (void *)(((unint64_t)v17 + v11 + 16) & v16);
    uint64_t v22 = (unsigned __int8 *)(((unint64_t)v18 + v11 + 16) & v16);
    unsigned int v23 = v22[v12];
    unsigned int v24 = v23 - 2;
    if (v23 >= 2)
    {
      if (v12 <= 3) {
        uint64_t v25 = v12;
      }
      else {
        uint64_t v25 = 4;
      }
      switch(v25)
      {
        case 1:
          int v26 = *v22;
          goto LABEL_19;
        case 2:
          int v26 = *(unsigned __int16 *)v22;
          goto LABEL_19;
        case 3:
          int v26 = *(unsigned __int16 *)v22 | (*(unsigned __int8 *)((((unint64_t)v18 + v11 + 16) & v16) + 2) << 16);
          goto LABEL_19;
        case 4:
          int v26 = *(_DWORD *)v22;
LABEL_19:
          int v27 = (v26 | (v24 << (8 * v12))) + 2;
          unsigned int v23 = v26 + 2;
          if (v12 < 4) {
            unsigned int v23 = v27;
          }
          break;
        default:
          break;
      }
    }
    if (v23 == 1)
    {
      uint64_t v28 = *(void *)v22;
      swift_errorRetain();
      *char v21 = v28;
      *((unsigned char *)v21 + v12) = 1;
    }
    else if (v23)
    {
      memcpy((void *)(((unint64_t)v17 + v11 + 16) & v16), v22, v12 + 1);
    }
    else
    {
      (*(void (**)(unint64_t))(v9 + 16))(((unint64_t)v17 + v11 + 16) & v16);
      *((unsigned char *)v21 + v12) = 0;
    }
  }
  return a1;
}

unsigned __int8 *sub_100008F88(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v5)(a1, AssociatedTypeWitness);
  unint64_t v6 = (a1 + *(void *)(v5 + 56) + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_10000792C(*(void *)v6, *(void *)(v6 + 8));
  uint64_t v7 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v8 = *(_DWORD *)(v7 + 80) & 0xF8 | 7;
  uint64_t result = (unsigned __int8 *)((v6 + v8 + 16) & ~v8);
  unint64_t v10 = *(void *)(v7 + 64);
  if (v10 <= 8) {
    unint64_t v10 = 8;
  }
  unsigned int v11 = result[v10];
  unsigned int v12 = v11 - 2;
  if (v11 >= 2)
  {
    if (v10 <= 3) {
      uint64_t v13 = v10;
    }
    else {
      uint64_t v13 = 4;
    }
    switch(v13)
    {
      case 1:
        int v14 = *result;
        goto LABEL_12;
      case 2:
        int v14 = *(unsigned __int16 *)result;
        goto LABEL_12;
      case 3:
        int v14 = *(unsigned __int16 *)result | (result[2] << 16);
        goto LABEL_12;
      case 4:
        int v14 = *(_DWORD *)result;
LABEL_12:
        int v15 = (v14 | (v12 << (8 * v10))) + 2;
        unsigned int v11 = v14 + 2;
        if (v10 < 4) {
          unsigned int v11 = v15;
        }
        break;
      default:
        break;
    }
  }
  if (v11 == 1)
  {
    return (unsigned __int8 *)swift_errorRelease();
  }
  else if (!v11)
  {
    uint64_t v16 = *(uint64_t (**)(void))(v7 + 8);
    return (unsigned __int8 *)v16();
  }
  return result;
}

uint64_t sub_100009170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v7 + 48) + 7;
  uint64_t v9 = (void *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = (uint64_t *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = *v10;
  unint64_t v12 = v10[1];
  sub_100007B14(*v10, v12);
  *uint64_t v9 = v11;
  v9[1] = v12;
  uint64_t v13 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v14 = *(_DWORD *)(v13 + 80) & 0xF8;
  uint64_t v15 = v14 + 23;
  unint64_t v16 = (unint64_t)v9 + v14 + 23;
  unint64_t v17 = ~v14 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = (void *)(v16 & v17);
  uint64_t v19 = (unsigned __int8 *)(((unint64_t)v10 + v15) & v17);
  if (*(void *)(v13 + 64) <= 8uLL) {
    uint64_t v20 = 8;
  }
  else {
    uint64_t v20 = *(void *)(v13 + 64);
  }
  unsigned int v21 = v19[v20];
  unsigned int v22 = v21 - 2;
  if (v21 >= 2)
  {
    if (v20 <= 3) {
      uint64_t v23 = v20;
    }
    else {
      uint64_t v23 = 4;
    }
    switch(v23)
    {
      case 1:
        int v24 = *v19;
        goto LABEL_13;
      case 2:
        int v24 = *(unsigned __int16 *)v19;
        goto LABEL_13;
      case 3:
        int v24 = *(unsigned __int16 *)(((unint64_t)v10 + v15) & v17) | (*(unsigned __int8 *)((((unint64_t)v10
                                                                                                 + v15) & v17)
                                                                                               + 2) << 16);
        goto LABEL_13;
      case 4:
        int v24 = *(_DWORD *)v19;
LABEL_13:
        int v25 = (v24 | (v22 << (8 * v20))) + 2;
        unsigned int v21 = v24 + 2;
        if (v20 < 4) {
          unsigned int v21 = v25;
        }
        break;
      default:
        break;
    }
  }
  if (v21 == 1)
  {
    uint64_t v26 = *(void *)v19;
    swift_errorRetain();
    *uint64_t v18 = v26;
    *((unsigned char *)v18 + v20) = 1;
  }
  else if (v21)
  {
    memcpy(v18, v19, v20 + 1);
  }
  else
  {
    (*(void (**)(void *))(v13 + 16))(v18);
    *((unsigned char *)v18 + v20) = 0;
  }
  return a1;
}

uint64_t sub_100009380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v7 + 40) + 7;
  uint64_t v9 = (uint64_t *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = (uint64_t *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = *v10;
  unint64_t v12 = v10[1];
  sub_100007B14(*v10, v12);
  uint64_t v13 = *v9;
  unint64_t v14 = v9[1];
  *uint64_t v9 = v11;
  v9[1] = v12;
  sub_10000792C(v13, v14);
  uint64_t v15 = *(void *)(a3 + 24);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(_DWORD *)(v16 + 80) & 0xF8;
  uint64_t v18 = v17 + 23;
  unint64_t v19 = (unint64_t)v9 + v17 + 23;
  unint64_t v20 = ~v17 & 0xFFFFFFFFFFFFFFF8;
  unsigned int v21 = (unsigned __int8 *)(v19 & v20);
  unint64_t v22 = (unint64_t)v10 + v18;
  uint64_t v23 = (unsigned __int8 *)(v22 & v20);
  if ((v19 & v20) != (v22 & v20))
  {
    uint64_t v24 = *(void *)(v15 - 8);
    if (*(void *)(v16 + 64) <= 8uLL) {
      uint64_t v25 = 8;
    }
    else {
      uint64_t v25 = *(void *)(v16 + 64);
    }
    unsigned int v26 = v21[v25];
    unsigned int v27 = v26 - 2;
    if (v26 >= 2)
    {
      if (v25 <= 3) {
        uint64_t v28 = v25;
      }
      else {
        uint64_t v28 = 4;
      }
      switch(v28)
      {
        case 1:
          int v29 = *v21;
          goto LABEL_14;
        case 2:
          int v29 = *(unsigned __int16 *)v21;
          goto LABEL_14;
        case 3:
          int v29 = *(unsigned __int16 *)v21 | (v21[2] << 16);
          goto LABEL_14;
        case 4:
          int v29 = *(_DWORD *)v21;
LABEL_14:
          int v30 = (v29 | (v27 << (8 * v25))) + 2;
          unsigned int v26 = v29 + 2;
          if (v25 < 4) {
            unsigned int v26 = v30;
          }
          break;
        default:
          break;
      }
    }
    if (v26 == 1)
    {
      swift_errorRelease();
    }
    else if (!v26)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v24 + 8))(v21, v15);
    }
    unsigned int v31 = v23[v25];
    unsigned int v32 = v31 - 2;
    if (v31 >= 2)
    {
      if (v25 <= 3) {
        uint64_t v33 = v25;
      }
      else {
        uint64_t v33 = 4;
      }
      switch(v33)
      {
        case 1:
          int v34 = *v23;
          goto LABEL_29;
        case 2:
          int v34 = *(unsigned __int16 *)v23;
          goto LABEL_29;
        case 3:
          int v34 = *(unsigned __int16 *)v23 | (v23[2] << 16);
          goto LABEL_29;
        case 4:
          int v34 = *(_DWORD *)v23;
LABEL_29:
          int v35 = (v34 | (v32 << (8 * v25))) + 2;
          unsigned int v31 = v34 + 2;
          if (v25 < 4) {
            unsigned int v31 = v35;
          }
          break;
        default:
          break;
      }
    }
    if (v31 == 1)
    {
      uint64_t v36 = *(void *)v23;
      swift_errorRetain();
      *(void *)unsigned int v21 = v36;
      v21[v25] = 1;
    }
    else if (v31)
    {
      memcpy(v21, v23, v25 + 1);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v24 + 16))(v21, v23, v15);
      v21[v25] = 0;
    }
  }
  return a1;
}

uint64_t sub_100009660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v7 + 32) + 7;
  uint64_t v9 = (_OWORD *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = (_OWORD *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  uint64_t v11 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80) & 0xF8;
  uint64_t v13 = v12 + 23;
  unint64_t v14 = (unint64_t)v9 + v12 + 23;
  unint64_t v15 = ~v12 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v16 = (void *)(v14 & v15);
  uint64_t v17 = (unsigned __int8 *)(((unint64_t)v10 + v13) & v15);
  if (*(void *)(v11 + 64) <= 8uLL) {
    uint64_t v18 = 8;
  }
  else {
    uint64_t v18 = *(void *)(v11 + 64);
  }
  unsigned int v19 = v17[v18];
  unsigned int v20 = v19 - 2;
  if (v19 >= 2)
  {
    if (v18 <= 3) {
      uint64_t v21 = v18;
    }
    else {
      uint64_t v21 = 4;
    }
    switch(v21)
    {
      case 1:
        int v22 = *v17;
        goto LABEL_13;
      case 2:
        int v22 = *(unsigned __int16 *)v17;
        goto LABEL_13;
      case 3:
        int v22 = *(unsigned __int16 *)(((unint64_t)v10 + v13) & v15) | (*(unsigned __int8 *)((((unint64_t)v10
                                                                                                 + v13) & v15)
                                                                                               + 2) << 16);
        goto LABEL_13;
      case 4:
        int v22 = *(_DWORD *)v17;
LABEL_13:
        int v23 = (v22 | (v20 << (8 * v18))) + 2;
        unsigned int v19 = v22 + 2;
        if (v18 < 4) {
          unsigned int v19 = v23;
        }
        break;
      default:
        break;
    }
  }
  if (v19 == 1)
  {
    *uint64_t v16 = *(void *)v17;
    *((unsigned char *)v16 + v18) = 1;
  }
  else if (v19)
  {
    memcpy(v16, v17, v18 + 1);
  }
  else
  {
    (*(void (**)(void *))(v11 + 32))(v16);
    *((unsigned char *)v16 + v18) = 0;
  }
  return a1;
}

uint64_t sub_100009854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v7 + 24) + 7;
  uint64_t v9 = (uint64_t *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = (_OWORD *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = *v9;
  unint64_t v12 = v9[1];
  *(_OWORD *)uint64_t v9 = *v10;
  sub_10000792C(v11, v12);
  uint64_t v13 = *(void *)(a3 + 24);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(_DWORD *)(v14 + 80) & 0xF8;
  uint64_t v16 = v15 + 23;
  unint64_t v17 = (unint64_t)v9 + v15 + 23;
  unint64_t v18 = ~v15 & 0xFFFFFFFFFFFFFFF8;
  unsigned int v19 = (unsigned __int8 *)(v17 & v18);
  unint64_t v20 = (unint64_t)v10 + v16;
  uint64_t v21 = (unsigned __int8 *)(v20 & v18);
  if ((v17 & v18) != (v20 & v18))
  {
    uint64_t v22 = *(void *)(v13 - 8);
    if (*(void *)(v14 + 64) <= 8uLL) {
      uint64_t v23 = 8;
    }
    else {
      uint64_t v23 = *(void *)(v14 + 64);
    }
    unsigned int v24 = v19[v23];
    unsigned int v25 = v24 - 2;
    if (v24 >= 2)
    {
      if (v23 <= 3) {
        uint64_t v26 = v23;
      }
      else {
        uint64_t v26 = 4;
      }
      switch(v26)
      {
        case 1:
          int v27 = *v19;
          goto LABEL_14;
        case 2:
          int v27 = *(unsigned __int16 *)v19;
          goto LABEL_14;
        case 3:
          int v27 = *(unsigned __int16 *)v19 | (v19[2] << 16);
          goto LABEL_14;
        case 4:
          int v27 = *(_DWORD *)v19;
LABEL_14:
          int v28 = (v27 | (v25 << (8 * v23))) + 2;
          unsigned int v24 = v27 + 2;
          if (v23 < 4) {
            unsigned int v24 = v28;
          }
          break;
        default:
          break;
      }
    }
    if (v24 == 1)
    {
      swift_errorRelease();
    }
    else if (!v24)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v22 + 8))(v19, v13);
    }
    unsigned int v29 = v21[v23];
    unsigned int v30 = v29 - 2;
    if (v29 >= 2)
    {
      if (v23 <= 3) {
        uint64_t v31 = v23;
      }
      else {
        uint64_t v31 = 4;
      }
      switch(v31)
      {
        case 1:
          int v32 = *v21;
          goto LABEL_29;
        case 2:
          int v32 = *(unsigned __int16 *)v21;
          goto LABEL_29;
        case 3:
          int v32 = *(unsigned __int16 *)v21 | (v21[2] << 16);
          goto LABEL_29;
        case 4:
          int v32 = *(_DWORD *)v21;
LABEL_29:
          int v33 = (v32 | (v30 << (8 * v23))) + 2;
          unsigned int v29 = v32 + 2;
          if (v23 < 4) {
            unsigned int v29 = v33;
          }
          break;
        default:
          break;
      }
    }
    if (v29 == 1)
    {
      *(void *)unsigned int v19 = *(void *)v21;
      v19[v23] = 1;
    }
    else if (v29)
    {
      memcpy(v19, v21, v23 + 1);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v22 + 32))(v19, v21, v13);
      v19[v23] = 0;
    }
  }
  return a1;
}

uint64_t sub_100009B18(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  unint64_t v8 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  uint64_t v9 = *(void *)(v6 + 64);
  if (v8 <= 8) {
    unint64_t v8 = 8;
  }
  if (v7 <= 0xFD) {
    unsigned int v10 = 253;
  }
  else {
    unsigned int v10 = *(_DWORD *)(v6 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(_DWORD *)(*(void *)(*(void *)(a3 + 24) - 8) + 80) & 0xF8 | 7;
  if (a2 <= v10) {
    goto LABEL_27;
  }
  unint64_t v12 = v8 + ((v11 + ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v11) + 1;
  char v13 = 8 * v12;
  if (v12 <= 3)
  {
    unsigned int v16 = ((a2 - v10 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v16))
    {
      int v14 = *(_DWORD *)((char *)a1 + v12);
      if (!v14) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v16 > 0xFF)
    {
      int v14 = *(unsigned __int16 *)((char *)a1 + v12);
      if (!*(unsigned __int16 *)((char *)a1 + v12)) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v16 < 2)
    {
LABEL_27:
      if (v7 < 0xFD)
      {
        unsigned int v21 = *(unsigned __int8 *)((((((unint64_t)a1 + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + v11 + 16) & ~v11) + v8);
        if (v21 >= 3) {
          return (v21 ^ 0xFF) + 1;
        }
        else {
          return 0;
        }
      }
      else
      {
        unint64_t v20 = *(uint64_t (**)(unsigned __int16 *))(v6 + 48);
        return v20(a1);
      }
    }
  }
  int v14 = *((unsigned __int8 *)a1 + v12);
  if (!*((unsigned char *)a1 + v12)) {
    goto LABEL_27;
  }
LABEL_17:
  int v17 = (v14 - 1) << v13;
  if (v12 > 3) {
    int v17 = 0;
  }
  if (v12)
  {
    if (v12 <= 3) {
      int v18 = v12;
    }
    else {
      int v18 = 4;
    }
    switch(v18)
    {
      case 2:
        int v19 = *a1;
        break;
      case 3:
        int v19 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v19 = *(_DWORD *)a1;
        break;
      default:
        int v19 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v19 = 0;
  }
  return v10 + (v19 | v17) + 1;
}

void sub_100009D9C(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v11 = 8;
  if (*(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64) > 8uLL) {
    uint64_t v11 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  }
  if (v9 <= 0xFD) {
    unsigned int v12 = 253;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v8 + 84);
  }
  uint64_t v13 = *(_DWORD *)(*(void *)(*(void *)(a4 + 24) - 8) + 80) & 0xF8 | 7;
  size_t v14 = v11 + 1;
  size_t v15 = ((v13 + ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v13) + v11 + 1;
  if (a3 <= v12)
  {
    int v16 = 0;
  }
  else if (v15 <= 3)
  {
    unsigned int v19 = ((a3 - v12 + ~(-1 << (8 * v15))) >> (8 * v15)) + 1;
    if (HIWORD(v19))
    {
      int v16 = 4;
    }
    else if (v19 >= 0x100)
    {
      int v16 = 2;
    }
    else
    {
      int v16 = v19 > 1;
    }
  }
  else
  {
    int v16 = 1;
  }
  if (v12 < a2)
  {
    unsigned int v17 = ~v12 + a2;
    if (v15 < 4)
    {
      int v18 = (v17 >> (8 * v15)) + 1;
      if (v15)
      {
        int v20 = v17 & ~(-1 << (8 * v15));
        bzero(a1, v15);
        if (v15 == 3)
        {
          *(_WORD *)a1 = v20;
          a1[2] = BYTE2(v20);
        }
        else if (v15 == 2)
        {
          *(_WORD *)a1 = v20;
        }
        else
        {
          *a1 = v20;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)a1 = v17;
      int v18 = 1;
    }
    switch(v16)
    {
      case 1:
        a1[v15] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v15] = v18;
        return;
      case 3:
        goto LABEL_50;
      case 4:
        *(_DWORD *)&a1[v15] = v18;
        return;
      default:
        return;
    }
  }
  switch(v16)
  {
    case 1:
      a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_50:
      __break(1u);
      JUMPOUT(0x10000A10CLL);
    case 4:
      *(_DWORD *)&a1[v15] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v9 < 0xFD)
        {
          uint64_t v22 = (unsigned char *)((((unint64_t)&a1[v10 + 7] & 0xFFFFFFFFFFFFFFF8) + v13 + 16) & ~v13);
          if (a2 > 0xFD)
          {
            int v23 = a2 - 254;
            if (v14 < 4)
            {
              if (v11 != -1)
              {
                int v24 = v23 & ~(-1 << (8 * v14));
                bzero(v22, v14);
                if (v14 == 3)
                {
                  *(_WORD *)uint64_t v22 = v24;
                  v22[2] = BYTE2(v24);
                }
                else if (v14 == 2)
                {
                  *(_WORD *)uint64_t v22 = v24;
                }
                else
                {
                  *uint64_t v22 = v24;
                }
              }
            }
            else
            {
              bzero(v22, v11 + 1);
              *(_DWORD *)uint64_t v22 = v23;
            }
          }
          else
          {
            v22[v11] = -(char)a2;
          }
        }
        else
        {
          unsigned int v21 = *(void (**)(unsigned char *, uint64_t))(v8 + 56);
          v21(a1, a2);
        }
      }
      return;
  }
}

uint64_t sub_10000A134()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_10000A1C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_10000A27C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_10000A2A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_10000A2F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_10000A348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_10000A398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_10000A3E8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_10000A544(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x10000A75CLL);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        int v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for LengthPrefixDeframer()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10000A79C()
{
  return swift_getWitnessTable();
}

unint64_t sub_10000A7BC()
{
  unint64_t result = qword_100207CC0[0];
  if (!qword_100207CC0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100207CC0);
  }
  return result;
}

void *sub_10000A810()
{
  return &protocol self-conformance witness table for Error;
}

unint64_t sub_10000A81C()
{
  unint64_t result = qword_100207CE8;
  if (!qword_100207CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100207CE8);
  }
  return result;
}

unint64_t sub_10000A870()
{
  unint64_t result = qword_100207CF0;
  if (!qword_100207CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100207CF0);
  }
  return result;
}

uint64_t sub_10000A8C4()
{
  uint64_t result = sub_1001C0340();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1001BF310();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F) {
        return swift_initClassMetadata2();
      }
    }
  }
  return result;
}

BOOL sub_10000A9EC(char a1, char a2)
{
  return a1 == a2;
}

void sub_10000A9FC(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int sub_10000AA24(unsigned __int8 a1)
{
  return sub_1001C1990();
}

BOOL sub_10000AA6C(char *a1, char *a2)
{
  return sub_10000A9EC(*a1, *a2);
}

Swift::Int sub_10000AA78()
{
  return sub_10000AA24(*v0);
}

void sub_10000AA80(uint64_t a1)
{
  sub_10000A9FC(a1, *v1);
}

Swift::Int sub_10000AA88()
{
  sub_1001C1950();
  sub_10000A9FC((uint64_t)v2, *v0);
  return sub_1001C1990();
}

BOOL sub_10000AAC8(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1001FB978;
  v6._object = a2;
  Swift::Int v4 = sub_1001C15E0(v3, v6);
  swift_bridgeObjectRelease();
  return v4 != 0;
}

uint64_t sub_10000AB10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return == infix<A>(_:_:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_10000AB84(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return RawRepresentable<>.hashValue.getter(a1, a2, WitnessTable, &protocol witness table for String);
}

uint64_t sub_10000ABF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return RawRepresentable<>.hash(into:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_10000AC60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return RawRepresentable<>._rawHashValue(seed:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

BOOL sub_10000ACD0@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_10000AAC8(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_10000AD08(void *a1@<X8>)
{
  *a1 = 6775138;
  a1[1] = 0xE300000000000000;
}

uint64_t sub_10000AD1C()
{
  return 6775138;
}

BOOL sub_10000AD2C@<W0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  BOOL result = sub_10000AAC8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10000AD5C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = variable initialization expression of TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry._usedByTrustedRequestWithId();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10000AD8C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_10000ADE0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t sub_10000AE34(void *a1, uint64_t a2, uint64_t a3)
{
  v10[1] = a3;
  type metadata accessor for TC2UpdateServerDrivenConfigurationRequest.BagContainerModel.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_1001C1750();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  size_t v8 = (char *)v10 - v7;
  sub_10000D934(a1, a1[3]);
  sub_1001C19C0();
  sub_1001C1700();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_10000AFA0(void *a1)
{
  type metadata accessor for TC2UpdateServerDrivenConfigurationRequest.BagContainerModel.CodingKeys();
  swift_getWitnessTable();
  uint64_t v3 = sub_1001C16A0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v8 = (uint64_t)sub_10000D934(a1, a1[3]);
  sub_1001C19B0();
  if (!v1)
  {
    uint64_t v8 = sub_1001C1650();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  sub_100003E90((uint64_t)a1);
  return v8;
}

uint64_t sub_10000B140@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_10000AFA0(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_10000B174(void *a1)
{
  return sub_10000AE34(a1, *v1, v1[1]);
}

uint64_t sub_10000B198(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4)
{
  uint64_t v8 = swift_allocObject();
  sub_10000B200(a1, a2, a3, a4);
  return v8;
}

char *sub_10000B200(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *(void *)v4;
  uint64_t v11 = sub_1001BF8E0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  int v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v15, enum case for TC2LogCategory.updateServerDrivenConfiguration(_:), v11);
  sub_1001BFDD0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  uint64_t v16 = qword_100207D18;
  sub_1001BEDA0();
  swift_allocObject();
  *(void *)&v5[v16] = sub_1001BED90();
  uint64_t v17 = sub_1001BF310();
  sub_10000E6D8(qword_100207DC0, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v22 = sub_1001C1780();
  uint64_t v23 = v18;
  v24._countAndFlagsBits = 58;
  v24._object = (void *)0xE100000000000000;
  sub_1001C0D00(v24);
  uint64_t v19 = v23;
  int v20 = (uint64_t *)&v5[qword_100207D00];
  *int v20 = v22;
  v20[1] = v19;
  *(void *)&v5[*(void *)(*(void *)v5 + 144)] = a1;
  (*(void (**)(char *, uint64_t))(*(void *)(*(void *)(v10 + 80) - 8) + 32))(&v5[*(void *)(*(void *)v5 + 136)], a2);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(&v5[qword_100207D08], a3, v17);
  sub_10000E720(a4, (uint64_t)&v5[qword_100207D10]);
  return v5;
}

uint64_t sub_10000B490()
{
  v1[35] = v0;
  v1[36] = *v0;
  uint64_t v2 = sub_1001C0820();
  v1[37] = v2;
  v1[38] = *(void *)(v2 - 8);
  v1[39] = swift_task_alloc();
  sub_1001BF0B0();
  v1[40] = swift_task_alloc();
  uint64_t v3 = sub_1001BF8D0();
  v1[41] = v3;
  v1[42] = *(void *)(v3 - 8);
  v1[43] = swift_task_alloc();
  uint64_t v4 = sub_1001BED70();
  v1[44] = v4;
  v1[45] = *(void *)(v4 - 8);
  v1[46] = swift_task_alloc();
  v1[47] = swift_task_alloc();
  return _swift_task_switch(sub_10000B66C, 0, 0);
}

uint64_t sub_10000B66C()
{
  v89 = v0;
  v86 = v0 + 2;
  v0[48] = qword_100207CF8;
  swift_retain_n();
  uint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C1200();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[35];
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v88 = v5;
    uint64_t v7 = *(void *)(v3 + qword_100207D00);
    unint64_t v6 = *(void *)(v3 + qword_100207D00 + 8);
    swift_bridgeObjectRetain();
    v0[34] = sub_1000DF238(v7, v6, &v88);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s executing configbag request", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v9 = v0[42];
  uint64_t v8 = v0[43];
  uint64_t v83 = v0[41];
  uint64_t v10 = v0[35];
  uint64_t v11 = v0[36];
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v10 + qword_100207D10 + 24);
  uint64_t v82 = *(void *)(v10 + qword_100207D10 + 32);
  sub_10000D934((void *)(v10 + qword_100207D10), (uint64_t)v12);
  uint64_t v13 = *(void *)(*(void *)v10 + 136);
  v0[49] = v13;
  uint64_t v14 = v10 + v13;
  uint64_t v15 = *(void *)(v11 + 80);
  v0[50] = v15;
  v0[5] = v15;
  uint64_t v16 = *(void *)(v11 + 88);
  v0[51] = v16;
  uint64_t v84 = v16;
  v0[6] = v16;
  uint64_t v17 = sub_10000395C(v86);
  uint64_t v87 = v15;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v17, v14, v15);
  TC2Configuration.environment(systemInfo:)((uint64_t)v86, v12, v82, v8);
  sub_100003E90((uint64_t)v86);
  sub_1001BF8C0();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v83);
  sub_1001BED50();
  uint64_t v18 = sub_1001BF2D0();
  int v20 = v19;
  if (qword_100207990 != -1) {
    swift_once();
  }
  sub_10000D978(v0[37], (uint64_t)qword_10021FF38);
  v96._countAndFlagsBits = sub_1001C07D0();
  uint64_t v22 = v21;
  v91._countAndFlagsBits = v18;
  v91._object = v20;
  v96._object = v22;
  sub_1001BED60(v91, v96);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v84 + 88))(v15, v84);
  unsigned int v25 = v24;
  if (qword_100207998 != -1) {
    swift_once();
  }
  uint64_t v27 = v0[38];
  uint64_t v26 = v0[39];
  uint64_t v28 = v0[37];
  sub_10000D978(v28, (uint64_t)qword_10021FF50);
  v97._countAndFlagsBits = sub_1001C07D0();
  unsigned int v30 = v29;
  v92._countAndFlagsBits = v23;
  v92._object = v25;
  v97._object = v30;
  sub_1001BED60(v92, v97);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1001C07E0();
  uint64_t v31 = sub_1001C07D0();
  int v33 = v32;
  int v34 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
  v34(v26, v28);
  v93._countAndFlagsBits = 0xD000000000000014;
  v93._object = (void *)0x80000001001CB420;
  v98._countAndFlagsBits = v31;
  v98._object = v33;
  sub_1001BED60(v93, v98);
  swift_bridgeObjectRelease();
  uint64_t v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v84 + 80))(v87, v84);
  if (v36)
  {
    uint64_t v37 = v35;
    uint64_t v38 = v36;
    if (qword_1002079D0 != -1) {
      swift_once();
    }
    sub_10000D978(v0[37], (uint64_t)qword_10021FFF8);
    v99._countAndFlagsBits = sub_1001C07D0();
    uint64_t v40 = v39;
    v94._countAndFlagsBits = v37;
    v94._object = v38;
    v99._object = v40;
    sub_1001BED60(v94, v99);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v41 = v0[39];
  uint64_t v42 = v0[37];
  sub_1001C0800();
  uint64_t v43 = sub_1001C07D0();
  uint64_t v45 = v44;
  v34(v41, v42);
  v95._object = (void *)0x80000001001C2F70;
  v95._countAndFlagsBits = 0xD000000000000010;
  v100._countAndFlagsBits = v43;
  v100._object = v45;
  sub_1001BED60(v95, v100);
  swift_bridgeObjectRelease();
  swift_retain_n();
  uint64_t v46 = sub_1001C0330();
  os_log_type_t v47 = sub_1001C11E0();
  if (os_log_type_enabled(v46, v47))
  {
    uint64_t v48 = v0[35];
    uint64_t v49 = swift_slowAlloc();
    uint64_t v88 = swift_slowAlloc();
    *(_DWORD *)uint64_t v49 = 136315394;
    uint64_t v51 = *(void *)(v48 + qword_100207D00);
    unint64_t v50 = *(void *)(v48 + qword_100207D00 + 8);
    swift_bridgeObjectRetain();
    v0[31] = sub_1000DF238(v51, v50, &v88);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v49 + 12) = 2080;
    swift_beginAccess();
    sub_10000E6D8(&qword_100207DB0, (void (*)(uint64_t))&type metadata accessor for URLRequest);
    uint64_t v52 = sub_1001C1780();
    v0[33] = sub_1000DF238(v52, v53, &v88);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v46, v47, "%s request ready, request=%s", (uint8_t *)v49, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v54 = v0 + 35;
  }
  else
  {
    uint64_t v54 = v0 + 35;

    swift_release_n();
  }
  id v55 = [self ephemeralSessionConfiguration];
  v0[52] = v55;
  objc_msgSend(v55, "set_usesNWLoader:", 1);
  id v56 = [self sessionWithConfiguration:v55];
  v0[53] = v56;
  swift_retain_n();
  id v57 = v56;
  uint64_t v58 = sub_1001C0330();
  os_log_type_t v59 = sub_1001C11E0();
  BOOL v60 = os_log_type_enabled(v58, v59);
  uint64_t v61 = v0[35];
  if (v60)
  {
    uint64_t v62 = swift_slowAlloc();
    v85 = (void *)swift_slowAlloc();
    uint64_t v88 = swift_slowAlloc();
    *(_DWORD *)uint64_t v62 = 136315394;
    uint64_t v63 = v57;
    uint64_t v64 = *(void *)(v61 + qword_100207D00);
    unint64_t v65 = *(void *)(v61 + qword_100207D00 + 8);
    swift_bridgeObjectRetain();
    v0[29] = sub_1000DF238(v64, v65, &v88);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v62 + 12) = 2112;
    v0[30] = v63;
    id v66 = v63;
    sub_1001C1310();
    void *v85 = v63;

    _os_log_impl((void *)&_mh_execute_header, v58, v59, "%s session ready, session=%@", (uint8_t *)v62, 0x16u);
    sub_100003918(&qword_100207DA8);
    swift_arrayDestroy();
    uint64_t v54 = v0 + 35;
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  swift_retain_n();
  uint64_t v67 = sub_1001C0330();
  os_log_type_t v68 = sub_1001C11E0();
  BOOL v69 = os_log_type_enabled(v67, v68);
  uint64_t v70 = *v54;
  if (v69)
  {
    uint64_t v71 = (uint8_t *)swift_slowAlloc();
    uint64_t v72 = swift_slowAlloc();
    *(_DWORD *)uint64_t v71 = 136315138;
    uint64_t v88 = v72;
    uint64_t v74 = *(void *)(v70 + qword_100207D00);
    unint64_t v73 = *(void *)(v70 + qword_100207D00 + 8);
    swift_bridgeObjectRetain();
    v0[28] = sub_1000DF238(v74, v73, &v88);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v67, v68, "%s running session async", v71, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v75 = v0[46];
  uint64_t v76 = v0[47];
  uint64_t v77 = v0[44];
  uint64_t v78 = v0[45];
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 16))(v75, v76, v77);
  uint64_t v79 = (void *)swift_task_alloc();
  v0[54] = v79;
  *uint64_t v79 = v0;
  v79[1] = sub_10000C1F4;
  uint64_t v80 = v0[46];
  return NSURLSession.data(for:delegate:)(v80, 0);
}

uint64_t sub_10000C1F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  unint64_t v6 = (void *)*v4;
  v6[55] = a1;
  v6[56] = a2;
  v6[57] = a3;
  v6[58] = v3;
  swift_task_dealloc();
  uint64_t v7 = v5[46];
  uint64_t v8 = v5[45];
  uint64_t v9 = v5[44];
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  uint64_t v11 = (v8 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  if (v3)
  {
    v6[65] = v10;
    v6[66] = v11;
    v10(v7, v9);
    uint64_t v12 = sub_10000D298;
  }
  else
  {
    v6[59] = v10;
    v6[60] = v11;
    v10(v7, v9);
    uint64_t v12 = sub_10000C388;
  }
  return _swift_task_switch(v12, 0, 0);
}

uint64_t sub_10000C388()
{
  uint64_t v87 = v0;
  unint64_t v1 = *(void *)(v0 + 448);
  os_log_type_t v2 = *(void **)(v0 + 456);
  uint64_t v3 = *(void *)(v0 + 440);
  sub_100007B14(v3, v1);
  swift_retain();
  sub_100007B14(v3, v1);
  id v4 = v2;
  swift_retain();
  sub_100007B14(v3, v1);
  id v5 = v4;
  unint64_t v6 = sub_1001C0330();
  os_log_type_t v7 = sub_1001C11E0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = *(void *)(v0 + 440);
    unint64_t v80 = *(void *)(v0 + 448);
    os_log_t v81 = *(os_log_t *)(v0 + 456);
    log = v6;
    uint64_t v9 = *(void *)(v0 + 280);
    uint64_t v10 = swift_slowAlloc();
    uint64_t v77 = (void *)swift_slowAlloc();
    v86[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315650;
    uint64_t v11 = *(void *)(v9 + qword_100207D00);
    unint64_t v12 = *(void *)(v9 + qword_100207D00 + 8);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 200) = sub_1000DF238(v11, v12, v86);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v10 + 12) = 2112;
    *(void *)(v0 + 208) = v81;
    os_log_type_t type = v7;
    uint64_t v13 = v81;
    sub_1001C1310();
    *uint64_t v77 = v81;

    *(_WORD *)(v10 + 22) = 2080;
    sub_100007B14(v8, v80);
    uint64_t v14 = sub_1001BF0E0();
    unint64_t v16 = v15;
    sub_10000792C(v8, v80);
    *(void *)(v0 + 216) = sub_1000DF238(v14, v16, v86);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    sub_10000792C(v8, v80);
    sub_10000792C(v8, v80);
    _os_log_impl((void *)&_mh_execute_header, log, type, "%s response returning, response=%@ data=%s", (uint8_t *)v10, 0x20u);
    sub_100003918(&qword_100207DA8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    unint64_t v17 = *(void *)(v0 + 448);
    uint64_t v18 = *(void **)(v0 + 456);
    uint64_t v19 = *(void *)(v0 + 440);

    swift_release_n();
    sub_10000792C(v19, v17);
    sub_10000792C(v19, v17);
  }
  uint64_t v20 = *(void *)(v0 + 464);
  type metadata accessor for TC2UpdateServerDrivenConfigurationRequest.BagContainerModel();
  swift_getWitnessTable();
  sub_1001BED80();
  sub_10000792C(*(void *)(v0 + 440), *(void *)(v0 + 448));
  if (v20)
  {
    swift_retain();
    swift_errorRetain();
    swift_retain();
    swift_errorRetain();
    unsigned int v21 = sub_1001C0330();
    os_log_type_t v22 = sub_1001C11F0();
    BOOL v23 = os_log_type_enabled(v21, v22);
    uint64_t v24 = *(void *)(v0 + 280);
    if (v23)
    {
      uint64_t v25 = swift_slowAlloc();
      os_log_t loga = (os_log_t)swift_slowAlloc();
      v86[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 136315394;
      uint64_t v82 = v21;
      uint64_t v27 = *(void *)(v24 + qword_100207D00);
      unint64_t v26 = *(void *)(v24 + qword_100207D00 + 8);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 136) = sub_1000DF238(v27, v26, v86);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v25 + 12) = 2112;
      swift_errorRetain();
      uint64_t v28 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 144) = v28;
      sub_1001C1310();
      loga->isa = (Class)v28;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v82, v22, "%s unable to decode json response data, error=%@", (uint8_t *)v25, 0x16u);
      sub_100003918(&qword_100207DA8);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
      swift_errorRelease();
      swift_errorRelease();
    }
    unint64_t v41 = *(void *)(v0 + 448);
    uint64_t v42 = *(void **)(v0 + 456);
    uint64_t v43 = *(void *)(v0 + 440);
    uint64_t v45 = *(void **)(v0 + 416);
    char v44 = *(void **)(v0 + 424);
    type metadata accessor for TC2UpdateServerDrivenConfigurationRequest.Error();
    swift_getWitnessTable();
    swift_allocError();
    *uint64_t v46 = 1;
    swift_willThrow();

    sub_10000792C(v43, v41);
    swift_errorRelease();
LABEL_19:
    uint64_t v73 = *(void *)(v0 + 280);
    (*(void (**)(void, void))(v0 + 472))(*(void *)(v0 + 376), *(void *)(v0 + 352));
    sub_10000D5C4(v73);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v74 = *(uint64_t (**)(void))(v0 + 8);
    return v74();
  }
  uint64_t v29 = *(void *)(v0 + 120);
  uint64_t v30 = *(void *)(v0 + 128);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v31 = sub_1001C0330();
  os_log_type_t v32 = sub_1001C11E0();
  BOOL v33 = os_log_type_enabled(v31, v32);
  uint64_t v34 = *(void *)(v0 + 280);
  if (v33)
  {
    uint64_t v35 = swift_slowAlloc();
    v86[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v35 = 136315394;
    typea = v31;
    uint64_t v36 = v29;
    uint64_t v37 = *(void *)(v34 + qword_100207D00);
    unint64_t v38 = *(void *)(v34 + qword_100207D00 + 8);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 176) = sub_1000DF238(v37, v38, v86);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v35 + 12) = 2080;
    *(void *)(v0 + 104) = v36;
    *(void *)(v0 + 112) = v30;
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_1001C0C40();
    *(void *)(v0 + 192) = sub_1000DF238(v39, v40, v86);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, typea, v32, "%s model decoded, model=%s", (uint8_t *)v35, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v47 = sub_1001BF100();
  unint64_t v49 = v48;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 488) = v47;
  *(void *)(v0 + 496) = v49;
  swift_retain();
  if (v49 >> 60 == 15)
  {
    swift_retain();
    unint64_t v50 = sub_1001C0330();
    os_log_type_t v51 = sub_1001C11F0();
    BOOL v52 = os_log_type_enabled(v50, v51);
    uint64_t v53 = *(void *)(v0 + 280);
    if (v52)
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc();
      v86[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v54 = 136315138;
      uint64_t v55 = *(void *)(v53 + qword_100207D00);
      unint64_t v56 = *(void *)(v53 + qword_100207D00 + 8);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 152) = sub_1000DF238(v55, v56, v86);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "%s unable to decode base64 bag", v54, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    unint64_t v67 = *(void *)(v0 + 448);
    os_log_type_t v68 = *(void **)(v0 + 456);
    uint64_t v69 = *(void *)(v0 + 440);
    uint64_t v71 = *(void **)(v0 + 416);
    uint64_t v70 = *(void **)(v0 + 424);
    type metadata accessor for TC2UpdateServerDrivenConfigurationRequest.Error();
    swift_getWitnessTable();
    swift_allocError();
    *uint64_t v72 = 2;
    swift_willThrow();

    sub_10000792C(v69, v67);
    goto LABEL_19;
  }
  sub_10000D9E0(v47, v49);
  swift_retain();
  sub_10000D9E0(v47, v49);
  id v57 = sub_1001C0330();
  os_log_type_t v58 = sub_1001C11E0();
  BOOL v59 = os_log_type_enabled(v57, v58);
  uint64_t v60 = *(void *)(v0 + 280);
  if (v59)
  {
    os_log_type_t v85 = v58;
    uint64_t v61 = swift_slowAlloc();
    v86[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v61 = 136315394;
    uint64_t v62 = *(void *)(v60 + qword_100207D00);
    unint64_t v63 = *(void *)(v60 + qword_100207D00 + 8);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 160) = sub_1000DF238(v62, v63, v86);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v61 + 12) = 2080;
    sub_100007B14(v47, v49);
    uint64_t v64 = sub_1001BF0E0();
    unint64_t v66 = v65;
    sub_100007918(v47, v49);
    *(void *)(v0 + 168) = sub_1000DF238(v64, v66, v86);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    sub_100007918(v47, v49);
    sub_100007918(v47, v49);
    _os_log_impl((void *)&_mh_execute_header, v57, v85, "%s base64 bag decoded, pushing update of utf8jsonBag=%s", (uint8_t *)v61, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    sub_100007918(v47, v49);
    sub_100007918(v47, v49);
  }
  *(void *)(v0 + 504) = *(void *)(*(void *)(v0 + 280) + *(void *)(**(void **)(v0 + 280) + 144));
  uint64_t v76 = (void *)swift_task_alloc();
  *(void *)(v0 + 512) = v76;
  *uint64_t v76 = v0;
  v76[1] = sub_10000D06C;
  return TC2ServerDrivenConfiguration.updateJsonModel(_:)(v47, v49);
}

uint64_t sub_10000D06C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10000D168, 0, 0);
}

uint64_t sub_10000D168()
{
  uint64_t v1 = v0[61];
  unint64_t v12 = v0[62];
  uint64_t v13 = (void (*)(uint64_t, uint64_t))v0[59];
  unint64_t v2 = v0[56];
  uint64_t v3 = (void *)v0[57];
  uint64_t v4 = v0[55];
  id v5 = (void *)v0[52];
  unint64_t v6 = (void *)v0[53];
  uint64_t v7 = v0[47];
  uint64_t v8 = v0[44];
  uint64_t v9 = v0[35];
  sub_10000DA1C(v0[63], v9 + v0[49], v0[50], v0[51]);

  sub_10000792C(v4, v2);
  sub_100007918(v1, v12);
  v13(v7, v8);
  sub_10000D5C4(v9);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_10000D298()
{
  uint64_t v16 = v0;
  swift_retain();
  swift_errorRetain();
  swift_retain();
  swift_errorRetain();
  uint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C11F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void *)(v0 + 280);
    uint64_t v4 = swift_slowAlloc();
    id v5 = (void *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    uint64_t v7 = *(void *)(v3 + qword_100207D00);
    unint64_t v6 = *(void *)(v3 + qword_100207D00 + 8);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 256) = sub_1000DF238(v7, v6, &v15);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v4 + 12) = 2112;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 184) = v8;
    sub_1001C1310();
    *id v5 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s response throwing, error=%@", (uint8_t *)v4, 0x16u);
    sub_100003918(&qword_100207DA8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v10 = *(void **)(v0 + 416);
  uint64_t v9 = *(void **)(v0 + 424);
  type metadata accessor for TC2UpdateServerDrivenConfigurationRequest.Error();
  swift_getWitnessTable();
  swift_allocError();
  *uint64_t v11 = 0;
  swift_willThrow();

  swift_errorRelease();
  uint64_t v12 = *(void *)(v0 + 280);
  (*(void (**)(void, void))(v0 + 520))(*(void *)(v0 + 376), *(void *)(v0 + 352));
  sub_10000D5C4(v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

void sub_10000D5C4(uint64_t a1)
{
  swift_retain_n();
  oslog = sub_1001C0330();
  os_log_type_t v2 = sub_1001C1200();
  if (os_log_type_enabled(oslog, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    uint64_t v4 = *(void *)(a1 + qword_100207D00);
    unint64_t v5 = *(void *)(a1 + qword_100207D00 + 8);
    swift_bridgeObjectRetain();
    sub_1000DF238(v4, v5, &v7);
    sub_1001C1310();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, oslog, v2, "%s finished configbag request", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }
}

uint64_t *sub_10000D76C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (uint64_t)v0 + qword_100207CF8;
  uint64_t v3 = sub_1001C0340();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  uint64_t v4 = (uint64_t)v0 + qword_100207D08;
  uint64_t v5 = sub_1001BF310();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  sub_100003E90((uint64_t)v0 + qword_100207D10);
  swift_release();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 136));
  swift_release();
  return v0;
}

uint64_t sub_10000D8C4()
{
  sub_10000D76C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TC2UpdateServerDrivenConfigurationRequest()
{
  return sub_10000E738();
}

void *sub_10000D934(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_10000D978(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t type metadata accessor for TC2UpdateServerDrivenConfigurationRequest.Error()
{
  return sub_10000E738();
}

uint64_t type metadata accessor for TC2UpdateServerDrivenConfigurationRequest.BagContainerModel()
{
  return sub_10000E738();
}

uint64_t sub_10000D9E0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_100007B14(a1, a2);
  }
  return a1;
}

uint64_t sub_10000D9F4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_10000DA1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v110 = a4;
  uint64_t v119 = a1;
  uint64_t v5 = sub_1001BF8D0();
  uint64_t v111 = *(void *)(v5 - 8);
  uint64_t v112 = v5;
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v106 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = (void *)sub_100003918(&qword_10020C5E0);
  uint64_t v118 = *(v121 - 1);
  uint64_t v10 = __chkstk_darwin(v121, v9);
  v117 = (char *)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10, v12);
  uint64_t v15 = (char *)&v106 - v14;
  uint64_t v17 = __chkstk_darwin(v13, v16);
  v114 = (char *)&v106 - v18;
  uint64_t v20 = __chkstk_darwin(v17, v19);
  v113 = (char *)&v106 - v21;
  uint64_t v23 = __chkstk_darwin(v20, v22);
  v115 = (char *)&v106 - v24;
  __chkstk_darwin(v23, v25);
  uint64_t v27 = (char *)&v106 - v26;
  uint64_t v28 = sub_1001BF8E0();
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28, v30);
  os_log_type_t v32 = (char *)&v106 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1001C0340();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v36 = __chkstk_darwin(v33, v35);
  __chkstk_darwin(v36, v37);
  uint64_t v120 = v39;
  unint64_t v40 = *(void (**)(void))(v39 + 16);
  uint64_t v122 = a3;
  v123 = (char *)&v106 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = v41;
  v40();
  (*(void (**)(char *, void, uint64_t))(v29 + 104))(v32, enum case for TC2LogCategory.updateServerDrivenConfiguration(_:), v28);
  sub_1001BFDD0();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v32, v28);
  sub_1001BF860();
  sub_1001C0C60();
  swift_bridgeObjectRelease();
  LODWORD(v32) = os_variant_has_internal_content();
  swift_release();
  if (v32)
  {
    uint64_t v107 = v34;
    uint64_t v108 = v33;
    uint64_t v43 = sub_100003918(&qword_100207DB8);
    sub_1001BFA40();
    uint64_t v44 = v119 + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration__jsonModel;
    os_unfair_lock_lock((os_unfair_lock_t)(v119
                                         + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration__jsonModel));
    double v45 = *(double *)(v44 + 48);
    char v46 = *(unsigned char *)(v44 + 56);
    os_unfair_lock_unlock((os_unfair_lock_t)v44);
    uint64_t v47 = v27;
    uint64_t v116 = v42;
    uint64_t v109 = v43;
    if ((v46 & 1) != 0 || v45 < 0.0 || v45 > 1.0)
    {
      uint64_t v61 = sub_1001C0330();
      os_log_type_t v62 = sub_1001C1200();
      if (os_log_type_enabled(v61, v62))
      {
        unint64_t v63 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v63 = 0;
        _os_log_impl((void *)&_mh_execute_header, v61, v62, "With no spillover, deleted environment proposal", v63, 2u);
        uint64_t v47 = v27;
        swift_slowDealloc();
      }

      uint64_t v64 = v118;
      unint64_t v65 = *(void (**)(char *, char *, void *))(v118 + 16);
      unint64_t v66 = v121;
      v65(v15, v47, v121);
      uint64_t v67 = (uint64_t)v117;
      v65(v117, v47, v66);
      os_log_type_t v68 = sub_1001C0330();
      os_log_type_t v69 = sub_1001C1200();
      if (os_log_type_enabled(v68, v69))
      {
        uint64_t v70 = swift_slowAlloc();
        v106 = v47;
        uint64_t v71 = v70;
        uint64_t v119 = swift_slowAlloc();
        v125[0] = v119;
        *(_DWORD *)uint64_t v71 = 136315394;
        uint64_t v72 = sub_1001BFAF0();
        uint64_t v124 = sub_1000DF238(v72, v73, v125);
        sub_1001C1310();
        swift_bridgeObjectRelease();
        uint64_t v74 = *(void (**)(char *, void *))(v64 + 8);
        v74(v15, v121);
        *(_WORD *)(v71 + 12) = 2080;
        uint64_t v75 = sub_1001BFAE0();
        uint64_t v124 = sub_1000DF238(v75, v76, v125);
        unint64_t v66 = v121;
        sub_1001C1310();
        swift_bridgeObjectRelease();
        v74((char *)v67, v66);
        _os_log_impl((void *)&_mh_execute_header, v68, v69, "TC2DefaultConfiguration deleted %s %s", (uint8_t *)v71, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v47 = v106;
        swift_slowDealloc();
      }
      else
      {

        uint64_t v74 = *(void (**)(char *, void *))(v64 + 8);
        v74(v15, v66);
        v74((char *)v67, v66);
      }
      v125[0] = 0;
      v125[1] = 0;
      sub_1001BFAF0();
      sub_1001BFAE0();
      sub_1001C12E0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v74(v47, v66);
      (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v116, v108);
      uint64_t v48 = v122;
    }
    else
    {
      uint64_t v48 = v122;
      double v49 = SystemInfoProtocol.uniqueDeviceIDPercentile.getter(v122, v110);
      uint64_t v51 = v111;
      uint64_t v50 = v112;
      BOOL v52 = (unsigned int *)&enum case for TC2Environment.production(_:);
      if (v49 >= v45) {
        BOOL v52 = (unsigned int *)&enum case for TC2Environment.carry(_:);
      }
      (*(void (**)(char *, void, uint64_t))(v111 + 104))(v8, *v52, v112);
      uint64_t v53 = sub_1001BF8A0();
      uint64_t v55 = v54;
      (*(void (**)(char *, uint64_t))(v51 + 8))(v8, v50);
      uint64_t v119 = v55;
      swift_bridgeObjectRetain_n();
      unint64_t v56 = sub_1001C0330();
      os_log_type_t v57 = sub_1001C1200();
      BOOL v58 = os_log_type_enabled(v56, v57);
      v106 = v47;
      v117 = (char *)v53;
      if (v58)
      {
        uint64_t v59 = swift_slowAlloc();
        v125[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v59 = 134218498;
        uint64_t v124 = *(void *)&v49;
        sub_1001C1310();
        *(_WORD *)(v59 + 12) = 2048;
        uint64_t v124 = *(void *)&v45;
        sub_1001C1310();
        *(_WORD *)(v59 + 22) = 2080;
        unint64_t v60 = v119;
        swift_bridgeObjectRetain();
        uint64_t v124 = sub_1000DF238(v53, v60, v125);
        sub_1001C1310();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v56, v57, "With device_p=%f, spillover=%f, proposed environment=%s", (uint8_t *)v59, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      uint64_t v77 = v121;
      uint64_t v78 = v118;
      unint64_t v80 = v114;
      uint64_t v79 = v115;
      sub_1001BFA40();
      os_log_t v81 = *(void (**)(char *, char *, void *))(v78 + 16);
      uint64_t v82 = v113;
      v81(v113, v79, v77);
      v81(v80, v79, v77);
      swift_bridgeObjectRetain_n();
      uint64_t v83 = sub_1001C0330();
      os_log_type_t v84 = sub_1001C1200();
      int v85 = v84;
      if (os_log_type_enabled(v83, v84))
      {
        uint64_t v86 = swift_slowAlloc();
        uint64_t v118 = swift_slowAlloc();
        v125[0] = v118;
        *(_DWORD *)uint64_t v86 = 136315650;
        LODWORD(v112) = v85;
        uint64_t v87 = sub_1001BFAF0();
        uint64_t v124 = sub_1000DF238(v87, v88, v125);
        sub_1001C1310();
        swift_bridgeObjectRelease();
        v89 = *(void **)(v78 + 8);
        ((void (*)(char *, void *))v89)(v82, v77);
        *(_WORD *)(v86 + 12) = 2080;
        uint64_t v90 = v114;
        uint64_t v91 = sub_1001BFAE0();
        uint64_t v124 = sub_1000DF238(v91, v92, v125);
        sub_1001C1310();
        swift_bridgeObjectRelease();
        v121 = v89;
        ((void (*)(char *, void *))v89)(v90, v77);
        *(_WORD *)(v86 + 22) = 2080;
        uint64_t v48 = v122;
        unint64_t v93 = v119;
        swift_bridgeObjectRetain();
        uint64_t v124 = sub_1000DF238((uint64_t)v117, v93, v125);
        sub_1001C1310();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v83, (os_log_type_t)v112, "TC2DefaultConfiguration wrote %s %s = %s", (uint8_t *)v86, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        Swift::String v94 = *(void **)(v78 + 8);
        ((void (*)(char *, void *))v94)(v82, v77);
        v121 = v94;
        ((void (*)(char *, void *))v94)(v80, v77);
        swift_bridgeObjectRelease_n();
      }
      Swift::String v95 = v106;
      uint64_t v96 = v108;
      uint64_t v97 = v107;
      Swift::String v98 = v115;
      uint64_t v99 = sub_1001BFAF0();
      v101 = v100;
      v127._countAndFlagsBits = sub_1001BFAE0();
      v103 = v102;
      v126._countAndFlagsBits = v99;
      v126._object = v101;
      v127._object = v103;
      sub_1001C0CA0(v126, v127);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v104 = (void (*)(char *, void *))v121;
      ((void (*)(char *, void *))v121)(v98, v77);
      v104(v95, v77);
      (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v116, v96);
    }
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v42, v33);
    uint64_t v48 = v122;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v120 + 8))(v123, v48);
}

uint64_t sub_10000E6D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10000E720(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_10000E738()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10000E768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

void *sub_10000E770(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for TrustedRequestError()
{
  return swift_bridgeObjectRelease();
}

void *sub_10000E7A8(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for TrustedRequestError(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *sub_10000E7F8(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TrustedRequestError(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TrustedRequestError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_10000E8B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

unsigned char *initializeBufferWithCopyOfBuffer for ServerQoS(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ServerQoS(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *sub_10000E954(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10000EA20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_10000EA48(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_10000EA50(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

uint64_t sub_10000EA58()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for TC2UpdateServerDrivenConfigurationRequest.BagContainerModel.CodingKeys()
{
  return sub_10000E738();
}

unsigned char *sub_10000EA8C(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10000EB28);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10000EB50()
{
  return swift_getWitnessTable();
}

uint64_t sub_10000EB6C()
{
  return swift_getWitnessTable();
}

uint64_t sub_10000EB88()
{
  return swift_getWitnessTable();
}

void sub_10000EBA8()
{
  sub_1001BF310();
  if (v0 <= 0x3F)
  {
    type metadata accessor for TrustedRequestConfiguration();
    if (v1 <= 0x3F)
    {
      sub_1001BF950();
      if (v2 <= 0x3F)
      {
        swift_checkMetadataState();
        if (v3 <= 0x3F)
        {
          swift_checkMetadataState();
          if (v4 <= 0x3F)
          {
            swift_checkMetadataState();
            if (v5 <= 0x3F)
            {
              sub_1001C12F0();
              if (v6 <= 0x3F)
              {
                swift_checkMetadataState();
                if (v7 <= 0x3F)
                {
                  swift_checkMetadataState();
                  if (v8 <= 0x3F)
                  {
                    swift_checkMetadataState();
                    if (v9 <= 0x3F)
                    {
                      swift_checkMetadataState();
                      if (v10 <= 0x3F)
                      {
                        swift_checkMetadataState();
                        if (v11 <= 0x3F)
                        {
                          sub_1000101F4();
                          if (v12 <= 0x3F)
                          {
                            sub_1001C0340();
                            if (v13 <= 0x3F) {
                              swift_initClassMetadata2();
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_10000EF88(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  sub_100007B14(a2, a3);
  sub_100010360((uint64_t)a1, &qword_100207FE0);
  *a1 = a2;
  a1[1] = a3;
  uint64_t v6 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type(0);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a1, 0, 1, v6);
}

uint64_t sub_10000F034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v101 = a2;
  uint64_t v116 = a3;
  uint64_t v4 = sub_100003918(&qword_100207FE8);
  __chkstk_darwin(v4 - 8, v5);
  Swift::String v94 = (char *)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_1001C0820();
  uint64_t v97 = *(void *)(v111 - 8);
  __chkstk_darwin(v111, v7);
  unint64_t v9 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1001C0870();
  uint64_t v96 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10, v11);
  v103 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12, v14);
  uint64_t v109 = (char *)&v91 - v16;
  __chkstk_darwin(v15, v17);
  uint64_t v108 = (char *)&v91 - v18;
  uint64_t v19 = sub_1001C03B0();
  uint64_t v102 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19, v20);
  Swift::String v95 = (char *)&v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v23);
  uint64_t v25 = (char *)&v91 - v24;
  uint64_t v100 = sub_100003918(&qword_100207FF0);
  uint64_t v27 = __chkstk_darwin(v100, v26);
  uint64_t v93 = (uint64_t)&v91 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v27, v29);
  os_log_type_t v32 = (char *)&v91 - v31;
  __chkstk_darwin(v30, v33);
  uint64_t v98 = (uint64_t)&v91 - v34;
  uint64_t v35 = sub_1001BF2C0();
  __chkstk_darwin(v35 - 8, v36);
  uint64_t v117 = sub_1001C04B0();
  uint64_t v37 = *(void *)(v117 - 8);
  __chkstk_darwin(v117, v38);
  unint64_t v40 = (char *)&v91 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001C04C0();
  sub_1001C04A0();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v40, v117);
  sub_1001BFBE0();
  sub_1001BFBD0();
  uint64_t v99 = a1;
  sub_1001C0470();
  uint64_t v41 = v102;
  uint64_t v42 = (void (**)(char *))(v102 + 16);
  v115 = *(void (**)(char *, char *, uint64_t))(v102 + 16);
  v115(v32, v25, v19);
  unint64_t v43 = sub_1000102A0();
  sub_1001C1100();
  uint64_t v44 = *(void (**)(char *, uint64_t))(v41 + 8);
  uint64_t v110 = v25;
  v113 = v44;
  uint64_t v114 = v41 + 8;
  v44(v25, v19);
  uint64_t v45 = v100;
  *(void *)&v32[*(int *)(v100 + 36)] = v118[0];
  unint64_t v92 = v32;
  uint64_t v46 = v98;
  sub_1000102F8((uint64_t)v32, v98);
  uint64_t v47 = (uint64_t *)(v46 + *(int *)(v45 + 36));
  uint64_t v48 = *v47;
  sub_1001C1120();
  BOOL v49 = v48 == v118[0];
  uint64_t v50 = v46;
  uint64_t v117 = (uint64_t)v9;
  uint64_t v112 = v10;
  if (!v49)
  {
    v106 = (void (**)(char *, char *, uint64_t))(v96 + 32);
    uint64_t v107 = (void (**)(char *))(v96 + 16);
    v104 = (void (**)(char *, uint64_t))(v96 + 8);
    v105 = (void (**)(uint64_t, uint64_t))(v97 + 8);
    do
    {
      uint64_t v51 = (void (*)(void *, void))sub_1001C1150();
      BOOL v52 = v108;
      (*v107)(v108);
      v51(v118, 0);
      uint64_t v53 = v110;
      v115(v110, (char *)v50, v19);
      sub_1001C1130();
      v113(v53, v19);
      uint64_t v54 = v42;
      uint64_t v55 = v50;
      unint64_t v56 = v109;
      (*v106)(v109, v52, v10);
      uint64_t v57 = sub_1001C0860();
      uint64_t v59 = v58;
      sub_1001C0850();
      uint64_t v60 = sub_1001C07D0();
      os_log_type_t v62 = v61;
      (*v105)(v117, v111);
      v119._countAndFlagsBits = v57;
      v119._object = v59;
      v121._countAndFlagsBits = v60;
      v121._object = v62;
      sub_1001BFBF0(v119, v121);
      uint64_t v10 = v112;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v63 = v56;
      uint64_t v50 = v55;
      uint64_t v42 = v54;
      (*v104)(v63, v10);
      uint64_t v64 = *v47;
      sub_1001C1120();
    }
    while (v64 != v118[0]);
  }
  uint64_t v108 = (char *)v43;
  unint64_t v65 = v115;
  sub_100010360(v50, &qword_100207FF0);
  sub_1001C0750();
  sub_1001C0700();
  uint64_t v66 = sub_1001C0550();
  swift_release();
  if (!v66) {
    goto LABEL_9;
  }
  sub_1001C0740();
  if (!swift_dynamicCastClass())
  {
    swift_release();
LABEL_9:
    swift_release();
    uint64_t v71 = sub_1001C04D0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v71 - 8) + 8))(v99, v71);
  }
  uint64_t v98 = v66;
  uint64_t v67 = (uint64_t)v94;
  sub_1001C0730();
  uint64_t v68 = v102;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v102 + 48))(v67, 1, v19) == 1)
  {
    swift_release();
    swift_release();
    uint64_t v69 = sub_1001C04D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v69 - 8) + 8))(v99, v69);
    return sub_100010360(v67, &qword_100207FE8);
  }
  else
  {
    uint64_t v72 = v95;
    (*(void (**)(char *, uint64_t, uint64_t))(v68 + 32))(v95, v67, v19);
    uint64_t v73 = (uint64_t)v92;
    uint64_t v107 = v42;
    v65(v92, v72, v19);
    sub_1001C1100();
    uint64_t v74 = v100;
    *(void *)(v73 + *(int *)(v100 + 36)) = v118[0];
    uint64_t v75 = v73;
    uint64_t v76 = v93;
    sub_1000102F8(v75, v93);
    uint64_t v77 = (uint64_t *)(v76 + *(int *)(v74 + 36));
    uint64_t v78 = *v77;
    sub_1001C1120();
    BOOL v49 = v78 == v118[0];
    uint64_t v79 = v109;
    unint64_t v80 = v110;
    if (!v49)
    {
      v105 = (void (**)(uint64_t, uint64_t))(v96 + 32);
      v106 = (void (**)(char *, char *, uint64_t))(v96 + 16);
      v104 = (void (**)(char *, uint64_t))(v97 + 8);
      uint64_t v102 = v96 + 8;
      os_log_t v81 = v103;
      do
      {
        uint64_t v82 = (void (*)(void *, void))sub_1001C1150();
        ((void (*)(char *))*v106)(v81);
        v82(v118, 0);
        v115(v80, (char *)v76, v19);
        sub_1001C1130();
        v113(v80, v19);
        ((void (*)(char *, char *, uint64_t))*v105)(v79, v81, v10);
        uint64_t v83 = sub_1001C0860();
        int v85 = v84;
        sub_1001C0850();
        uint64_t v86 = sub_1001C07D0();
        unint64_t v88 = v87;
        (*v104)((char *)v117, v111);
        v120._countAndFlagsBits = v83;
        v120._object = v85;
        v122._countAndFlagsBits = v86;
        v122._object = v88;
        sub_1001BFBF0(v120, v122);
        uint64_t v10 = v112;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))v102)(v79, v10);
        uint64_t v89 = *v77;
        sub_1001C1120();
      }
      while (v89 != v118[0]);
    }
    swift_release();
    swift_release();
    uint64_t v90 = sub_1001C04D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v90 - 8) + 8))(v99, v90);
    sub_100010360(v76, &qword_100207FF0);
    return ((uint64_t (*)(char *, uint64_t))v113)(v95, v19);
  }
}

uint64_t sub_10000FB24(uint64_t a1, _OWORD *a2)
{
  *(void *)(v2 + 16) = a1;
  *(_OWORD *)(v2 + 24) = *a2;
  return _swift_task_switch(sub_10000FB4C, 0, 0);
}

uint64_t sub_10000FB4C()
{
  uint64_t v1 = v0[3];
  unint64_t v2 = v0[4];
  unint64_t v3 = (uint64_t *)v0[2];
  *unint64_t v3 = v1;
  v3[1] = v2;
  sub_10000D9E0(v1, v2);
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10000FBB4()
{
  if (sub_1001BEE40() != 16) {
    __break(1u);
  }
  return sub_1001BF2F0();
}

uint64_t sub_10000FC84()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = v0 + qword_10021F8D0;
  uint64_t v3 = sub_1001BF310();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  v4(v2, v3);
  v4(v0 + qword_10021F8D8, v3);
  sub_100011364(v0 + qword_10021F8E0, (uint64_t (*)(void))type metadata accessor for TrustedRequestConfiguration);
  uint64_t v5 = v0 + qword_10021F8E8;
  uint64_t v6 = sub_1001BF950();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  (*(void (**)(uint64_t))(*(void *)(v1[10] - 8) + 8))(v0 + *(void *)(*(void *)v0 + 256));
  (*(void (**)(uint64_t))(*(void *)(v1[11] - 8) + 8))(v0 + *(void *)(*(void *)v0 + 264));
  (*(void (**)(uint64_t))(*(void *)(v1[12] - 8) + 8))(v0 + *(void *)(*(void *)v0 + 272));
  uint64_t v7 = v0 + *(void *)(*(void *)v0 + 280);
  uint64_t v8 = sub_1001C12F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  (*(void (**)(uint64_t))(*(void *)(v1[14] - 8) + 8))(v0 + *(void *)(*(void *)v0 + 288));
  (*(void (**)(uint64_t))(*(void *)(v1[15] - 8) + 8))(v0 + *(void *)(*(void *)v0 + 296));
  (*(void (**)(uint64_t))(*(void *)(v1[16] - 8) + 8))(v0 + *(void *)(*(void *)v0 + 304));
  (*(void (**)(uint64_t))(*(void *)(v1[17] - 8) + 8))(v0 + *(void *)(*(void *)v0 + 312));
  (*(void (**)(uint64_t))(*(void *)(v1[18] - 8) + 8))(v0 + *(void *)(*(void *)v0 + 320));
  swift_release();
  uint64_t v9 = v0 + *(void *)(*(void *)v0 + 336);
  uint64_t v10 = sub_100003918(qword_100208000);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_release();
  uint64_t v11 = v0 + *(void *)(*(void *)v0 + 360);
  uint64_t v12 = sub_1001C0340();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100010184()
{
  sub_10000FC84();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TrustedRequest()
{
  return swift_getGenericMetadata();
}

void sub_1000101F4()
{
  if (!qword_100207FC8)
  {
    type metadata accessor for ThimbledEvent();
    unint64_t v0 = sub_1001C1000();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100207FC8);
    }
  }
}

unint64_t sub_10001024C()
{
  unint64_t result = qword_100207FD0;
  if (!qword_100207FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100207FD0);
  }
  return result;
}

unint64_t sub_1000102A0()
{
  unint64_t result = qword_100207FF8;
  if (!qword_100207FF8)
  {
    sub_1001C03B0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100207FF8);
  }
  return result;
}

uint64_t sub_1000102F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100003918(&qword_100207FF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100010360(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100003918(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000103BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 144);
}

void *sub_1000103C4(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    swift_errorRetain();
  }
  *a1 = v3;
  return a1;
}

unint64_t sub_100010404(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF) {
    return swift_errorRelease();
  }
  return result;
}

unint64_t *sub_10001041C(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 < 0xFFFFFFFF)
  {
    if (v3 >= 0xFFFFFFFF) {
      swift_errorRetain();
    }
    *a1 = v3;
  }
  else if (v3 < 0xFFFFFFFF)
  {
    swift_errorRelease();
    *a1 = *a2;
  }
  else
  {
    swift_errorRetain();
    *a1 = v3;
    swift_errorRelease();
  }
  return a1;
}

void *initializeWithTake for PrefetchRequestError(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

unint64_t *sub_1000104B8(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 < 0xFFFFFFFF) {
    goto LABEL_6;
  }
  if (v3 < 0xFFFFFFFF)
  {
    swift_errorRelease();
LABEL_6:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_errorRelease();
  return a1;
}

uint64_t sub_10001051C(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_100010570(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_1000105CC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1000105E4(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *unint64_t result = v2;
  return result;
}

uint64_t type metadata accessor for TrustedRequest.RunNodeStreamResult()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10001061C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_100010664(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_100010664(uint64_t result, unsigned __int8 a2)
{
  if (a2 <= 0xBFu) {
    return sub_10001067C(result, a2 & 1);
  }
  return result;
}

uint64_t sub_10001067C(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRetain();
  }
  return result;
}

uint64_t sub_100010688(uint64_t a1)
{
  return sub_100010698(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t sub_100010698(uint64_t result, unsigned __int8 a2)
{
  if (a2 <= 0xBFu) {
    return sub_1000106B0(result, a2 & 1);
  }
  return result;
}

uint64_t sub_1000106B0(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_1000106BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_100010664(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  *(void *)a1 = v3;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_100010698(v5, v6);
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for Proto_Ropes_Common_CompressionAlgorithm(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t sub_100010724(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_100010698(v4, v5);
  return a1;
}

uint64_t sub_100010764(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7D && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 125);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 8) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 8) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7C) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t sub_1000107B8(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7C)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 125;
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(unsigned char *)(result + 8) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_10001080C(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 8) >> 6;
  if (v1 == 3) {
    return (*(_DWORD *)a1 + 3);
  }
  else {
    return v1;
  }
}

uint64_t sub_100010828(uint64_t result)
{
  *(unsigned char *)(result + 8) &= 0x3Fu;
  return result;
}

uint64_t sub_100010838(uint64_t result, unsigned int a2)
{
  if (a2 < 3)
  {
    *(unsigned char *)(result + 8) = *(unsigned char *)(result + 8) & 1 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(void *)uint64_t result = a2 - 3;
    *(unsigned char *)(result + 8) = -64;
  }
  return result;
}

uint64_t type metadata accessor for TrustedRequest.RunSubTask()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10001087C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 160);
}

uint64_t initializeBufferWithCopyOfBuffer for RateLimitFilter.WorkloadTag(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_1000108B8(uint64_t *a1)
{
  sub_10000792C(*a1, a1[1]);
  sub_10000792C(a1[2], a1[3]);
  uint64_t v2 = a1[4];
  unint64_t v3 = a1[5];
  return sub_10000792C(v2, v3);
}

uint64_t *sub_100010900(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_100007B14(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  uint64_t v6 = a2[2];
  unint64_t v7 = a2[3];
  sub_100007B14(v6, v7);
  a1[2] = v6;
  a1[3] = v7;
  uint64_t v9 = a2[4];
  unint64_t v8 = a2[5];
  sub_100007B14(v9, v8);
  a1[4] = v9;
  a1[5] = v8;
  return a1;
}

uint64_t *sub_10001096C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_100007B14(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_10000792C(v6, v7);
  uint64_t v8 = a2[2];
  unint64_t v9 = a2[3];
  sub_100007B14(v8, v9);
  uint64_t v10 = a1[2];
  unint64_t v11 = a1[3];
  a1[2] = v8;
  a1[3] = v9;
  sub_10000792C(v10, v11);
  uint64_t v13 = a2[4];
  unint64_t v12 = a2[5];
  sub_100007B14(v13, v12);
  uint64_t v14 = a1[4];
  unint64_t v15 = a1[5];
  a1[4] = v13;
  a1[5] = v12;
  sub_10000792C(v14, v15);
  return a1;
}

__n128 sub_1000109F0(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t *sub_100010A04(uint64_t *a1, _OWORD *a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_10000792C(v4, v5);
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  sub_10000792C(v6, v7);
  uint64_t v8 = a1[4];
  unint64_t v9 = a1[5];
  *((_OWORD *)a1 + 2) = a2[2];
  sub_10000792C(v8, v9);
  return a1;
}

uint64_t sub_100010A60(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t sub_100010AB4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 13;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

uint64_t type metadata accessor for TrustedRequest.LinkedTokenPair()
{
  return swift_getGenericMetadata();
}

uint64_t *sub_100010B28(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a1 + 2;
    unint64_t v9 = a2 + 2;
    unint64_t v10 = a2[3];
    swift_bridgeObjectRetain();
    if (EnumCaseMultiPayload == 1)
    {
      if (v10 >> 60 == 15)
      {
        _OWORD *v8 = *(_OWORD *)v9;
      }
      else
      {
        uint64_t v12 = *v9;
        sub_100007B14(*v9, v10);
        a1[2] = v12;
        a1[3] = v10;
      }
      uint64_t v13 = a2[5];
      a1[4] = a2[4];
      a1[5] = v13;
      uint64_t v14 = a2[7];
      a1[6] = a2[6];
      a1[7] = v14;
      uint64_t v15 = a2[9];
      a1[8] = a2[8];
      a1[9] = v15;
      uint64_t v16 = a2[11];
      a1[10] = a2[10];
      a1[11] = v16;
      a1[12] = a2[12];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      if (v10 >> 60 == 15)
      {
        _OWORD *v8 = *(_OWORD *)v9;
      }
      else
      {
        uint64_t v17 = *v9;
        sub_100007B14(*v9, v10);
        a1[2] = v17;
        a1[3] = v10;
      }
      uint64_t v18 = a2[5];
      a1[4] = a2[4];
      a1[5] = v18;
      uint64_t v19 = a2[7];
      a1[6] = a2[6];
      a1[7] = v19;
      uint64_t v20 = a2[9];
      a1[8] = a2[8];
      a1[9] = v20;
      uint64_t v21 = a2[11];
      a1[10] = a2[10];
      a1[11] = v21;
      uint64_t v22 = a2[12];
      unint64_t v23 = a2[13];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100007B14(v22, v23);
      a1[12] = v22;
      a1[13] = v23;
      uint64_t v24 = (int *)type metadata accessor for ValidatedAttestation();
      uint64_t v25 = v24[6];
      uint64_t v26 = (char *)a1 + v25;
      uint64_t v27 = (char *)a2 + v25;
      uint64_t v28 = sub_1001BF2C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
      uint64_t v29 = v24[7];
      uint64_t v30 = (uint64_t *)((char *)a1 + v29);
      uint64_t v31 = (uint64_t *)((char *)a2 + v29);
      uint64_t v32 = v31[1];
      *uint64_t v30 = *v31;
      v30[1] = v32;
      uint64_t v33 = v24[8];
      uint64_t v34 = (uint64_t *)((char *)a1 + v33);
      uint64_t v35 = (uint64_t *)((char *)a2 + v33);
      uint64_t v36 = v35[1];
      *uint64_t v34 = *v35;
      v34[1] = v36;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_100003918(&qword_100208188);
      *(uint64_t *)((char *)a1 + *(int *)(v37 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v37 + 48));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100010D94(void *a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRelease();
  unint64_t v3 = a1[3];
  if (EnumCaseMultiPayload == 1)
  {
    if (v3 >> 60 != 15) {
      sub_10000792C(a1[2], v3);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (v3 >> 60 != 15) {
      sub_10000792C(a1[2], v3);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10000792C(a1[12], a1[13]);
    uint64_t v4 = (char *)a1 + *(int *)(type metadata accessor for ValidatedAttestation() + 24);
    uint64_t v5 = sub_1001BF2C0();
    (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void *sub_100010EC0(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a1 + 2;
  uint64_t v7 = a2 + 2;
  unint64_t v8 = a2[3];
  swift_bridgeObjectRetain();
  if (EnumCaseMultiPayload == 1)
  {
    if (v8 >> 60 == 15)
    {
      *uint64_t v6 = *(_OWORD *)v7;
    }
    else
    {
      uint64_t v9 = *v7;
      sub_100007B14(*v7, v8);
      a1[2] = v9;
      a1[3] = v8;
    }
    uint64_t v10 = a2[5];
    a1[4] = a2[4];
    a1[5] = v10;
    uint64_t v11 = a2[7];
    a1[6] = a2[6];
    a1[7] = v11;
    uint64_t v12 = a2[9];
    a1[8] = a2[8];
    a1[9] = v12;
    uint64_t v13 = a2[11];
    a1[10] = a2[10];
    a1[11] = v13;
    a1[12] = a2[12];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    if (v8 >> 60 == 15)
    {
      *uint64_t v6 = *(_OWORD *)v7;
    }
    else
    {
      uint64_t v14 = *v7;
      sub_100007B14(*v7, v8);
      a1[2] = v14;
      a1[3] = v8;
    }
    uint64_t v15 = a2[5];
    a1[4] = a2[4];
    a1[5] = v15;
    uint64_t v16 = a2[7];
    a1[6] = a2[6];
    a1[7] = v16;
    uint64_t v17 = a2[9];
    a1[8] = a2[8];
    a1[9] = v17;
    uint64_t v18 = a2[11];
    a1[10] = a2[10];
    a1[11] = v18;
    uint64_t v19 = a2[12];
    unint64_t v20 = a2[13];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100007B14(v19, v20);
    a1[12] = v19;
    a1[13] = v20;
    uint64_t v21 = (int *)type metadata accessor for ValidatedAttestation();
    uint64_t v22 = v21[6];
    unint64_t v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v25 = sub_1001BF2C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    uint64_t v26 = v21[7];
    uint64_t v27 = (void *)((char *)a1 + v26);
    uint64_t v28 = (void *)((char *)a2 + v26);
    uint64_t v29 = v28[1];
    *uint64_t v27 = *v28;
    v27[1] = v29;
    uint64_t v30 = v21[8];
    uint64_t v31 = (void *)((char *)a1 + v30);
    uint64_t v32 = (void *)((char *)a2 + v30);
    uint64_t v33 = v32[1];
    *uint64_t v31 = *v32;
    v31[1] = v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_100003918(&qword_100208188);
    *(void *)((char *)a1 + *(int *)(v34 + 48)) = *(void *)((char *)a2 + *(int *)(v34 + 48));
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1000110D4(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_100011364((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    a1[1] = a2[1];
    uint64_t v5 = a1 + 2;
    uint64_t v6 = a2 + 2;
    unint64_t v7 = a2[3];
    swift_bridgeObjectRetain();
    if (EnumCaseMultiPayload == 1)
    {
      if (v7 >> 60 == 15)
      {
        *uint64_t v5 = *(_OWORD *)v6;
      }
      else
      {
        uint64_t v8 = *v6;
        sub_100007B14(*v6, v7);
        a1[2] = v8;
        a1[3] = v7;
      }
      a1[4] = a2[4];
      a1[5] = a2[5];
      a1[6] = a2[6];
      a1[7] = a2[7];
      a1[8] = a2[8];
      a1[9] = a2[9];
      a1[10] = a2[10];
      a1[11] = a2[11];
      a1[12] = a2[12];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      if (v7 >> 60 == 15)
      {
        *uint64_t v5 = *(_OWORD *)v6;
      }
      else
      {
        uint64_t v9 = *v6;
        sub_100007B14(*v6, v7);
        a1[2] = v9;
        a1[3] = v7;
      }
      a1[4] = a2[4];
      a1[5] = a2[5];
      a1[6] = a2[6];
      a1[7] = a2[7];
      a1[8] = a2[8];
      a1[9] = a2[9];
      a1[10] = a2[10];
      a1[11] = a2[11];
      uint64_t v10 = a2[12];
      unint64_t v11 = a2[13];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100007B14(v10, v11);
      a1[12] = v10;
      a1[13] = v11;
      uint64_t v12 = (int *)type metadata accessor for ValidatedAttestation();
      uint64_t v13 = v12[6];
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = sub_1001BF2C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
      uint64_t v17 = v12[7];
      uint64_t v18 = (void *)((char *)a1 + v17);
      uint64_t v19 = (void *)((char *)a2 + v17);
      *uint64_t v18 = *v19;
      v18[1] = v19[1];
      uint64_t v20 = v12[8];
      uint64_t v21 = (void *)((char *)a1 + v20);
      uint64_t v22 = (void *)((char *)a2 + v20);
      *uint64_t v21 = *v22;
      v21[1] = v22[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_100003918(&qword_100208188);
      *(void *)((char *)a1 + *(int *)(v23 + 48)) = *(void *)((char *)a2 + *(int *)(v23 + 48));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100011364(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for ValidatedAttestationOrAttestation()
{
  uint64_t result = qword_100208200;
  if (!qword_100208200) {
    return swift_getSingletonMetadata();
  }
  return result;
}

_OWORD *sub_100011410(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    long long v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    long long v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    long long v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    a1[6] = a2[6];
    uint64_t v9 = (int *)type metadata accessor for ValidatedAttestation();
    uint64_t v10 = v9[6];
    unint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_1001BF2C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
    *(_OWORD *)((char *)a1 + v9[7]) = *(_OWORD *)((char *)a2 + v9[7]);
    *(_OWORD *)((char *)a1 + v9[8]) = *(_OWORD *)((char *)a2 + v9[8]);
    uint64_t v14 = sub_100003918(&qword_100208188);
    *(void *)((char *)a1 + *(int *)(v14 + 48)) = *(void *)((char *)a2 + *(int *)(v14 + 48));
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_100011534(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100011364((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      long long v6 = a2[3];
      a1[2] = a2[2];
      a1[3] = v6;
      long long v7 = a2[5];
      a1[4] = a2[4];
      a1[5] = v7;
      long long v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      a1[6] = a2[6];
      uint64_t v9 = (int *)type metadata accessor for ValidatedAttestation();
      uint64_t v10 = v9[6];
      unint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_1001BF2C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      *(_OWORD *)((char *)a1 + v9[7]) = *(_OWORD *)((char *)a2 + v9[7]);
      *(_OWORD *)((char *)a1 + v9[8]) = *(_OWORD *)((char *)a2 + v9[8]);
      uint64_t v14 = sub_100003918(&qword_100208188);
      *(void *)((char *)a1 + *(int *)(v14 + 48)) = *(void *)((char *)a2 + *(int *)(v14 + 48));
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t _s20privatecloudcomputed38Proto_Ropes_HttpService_InvokeResponseV10OneOf_TypeOwet_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t _s20privatecloudcomputed38Proto_Ropes_HttpService_InvokeResponseV10OneOf_TypeOwst_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_1000116D0()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1000116E0()
{
  uint64_t result = type metadata accessor for ValidatedAttestation();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[4] = v2;
    v2[5] = "h";
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_100011790()
{
  v1[57] = v0;
  uint64_t v2 = sub_1001C0820();
  v1[58] = v2;
  v1[59] = *(void *)(v2 - 8);
  v1[60] = swift_task_alloc();
  sub_1001BF0B0();
  v1[61] = swift_task_alloc();
  uint64_t v3 = sub_1001BF8D0();
  v1[62] = v3;
  v1[63] = *(void *)(v3 - 8);
  v1[64] = swift_task_alloc();
  uint64_t v4 = sub_1001BED70();
  v1[65] = v4;
  v1[66] = *(void *)(v4 - 8);
  v1[67] = swift_task_alloc();
  v1[68] = swift_task_alloc();
  return _swift_task_switch(sub_100011944, 0, 0);
}

uint64_t sub_100011944()
{
  uint64_t v98 = v0;
  uint64_t v96 = v0 + 192;
  *(void *)(v0 + 552) = qword_100207CF8;
  swift_retain_n();
  unint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C1200();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void *)(v0 + 456);
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v97 = v5;
    uint64_t v6 = v3 + qword_100207D00;
    uint64_t v7 = *(void *)(v3 + qword_100207D00);
    unint64_t v8 = *(void *)(v6 + 8);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 448) = sub_1000DF238(v7, v8, &v97);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s executing configbag request", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v10 = *(void *)(v0 + 504);
  uint64_t v9 = *(void *)(v0 + 512);
  uint64_t v93 = *(void *)(v0 + 496);
  uint64_t v11 = *(void *)(v0 + 456);
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v11 + qword_100207D10 + 24);
  os_log_t log = *(os_log_t *)(v11 + qword_100207D10 + 32);
  sub_10000D934((void *)(v11 + qword_100207D10), (uint64_t)v12);
  uint64_t v13 = (_OWORD *)(v11 + *(void *)(*(void *)v11 + 136));
  *(void *)(v0 + 216) = &type metadata for SystemInfo;
  *(void *)(v0 + 224) = &protocol witness table for SystemInfo;
  uint64_t v14 = (_OWORD *)swift_allocObject();
  *(void *)(v0 + 192) = v14;
  long long v16 = v13[1];
  long long v15 = v13[2];
  *(_OWORD *)(v0 + 16) = *v13;
  *(_OWORD *)(v0 + 32) = v16;
  *(_OWORD *)(v0 + 48) = v15;
  long long v17 = v13[6];
  long long v19 = v13[3];
  long long v18 = v13[4];
  *(_OWORD *)(v0 + 96) = v13[5];
  *(_OWORD *)(v0 + 112) = v17;
  *(_OWORD *)(v0 + 64) = v19;
  *(_OWORD *)(v0 + 80) = v18;
  long long v20 = v13[10];
  long long v22 = v13[7];
  long long v21 = v13[8];
  *(_OWORD *)(v0 + 160) = v13[9];
  *(_OWORD *)(v0 + 176) = v20;
  *(_OWORD *)(v0 + 128) = v22;
  *(_OWORD *)(v0 + 144) = v21;
  uint64_t v23 = *(void **)(v0 + 168);
  uint64_t v95 = *(void *)(v0 + 160);
  long long v25 = v13[1];
  long long v24 = v13[2];
  v14[1] = *v13;
  v14[2] = v25;
  v14[3] = v24;
  long long v26 = v13[6];
  long long v28 = v13[3];
  long long v27 = v13[4];
  v14[6] = v13[5];
  v14[7] = v26;
  v14[4] = v28;
  v14[5] = v27;
  long long v29 = v13[10];
  long long v31 = v13[7];
  long long v30 = v13[8];
  v14[10] = v13[9];
  v14[11] = v29;
  v14[8] = v31;
  v14[9] = v30;
  sub_100016110(v0 + 16);
  TC2Configuration.environment(systemInfo:)(v96, v12, (uint64_t)log, v9);
  sub_100003E90(v96);
  sub_1001BF8C0();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v93);
  sub_1001BED50();
  uint64_t v32 = sub_1001BF2D0();
  uint64_t v34 = v33;
  if (qword_100207990 != -1) {
    swift_once();
  }
  sub_10000D978(*(void *)(v0 + 464), (uint64_t)qword_10021FF38);
  v105._countAndFlagsBits = sub_1001C07D0();
  uint64_t v36 = v35;
  v100._countAndFlagsBits = v32;
  v100._object = v34;
  v105._object = v36;
  sub_1001BED60(v100, v105);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v37 = qword_100207998;
  swift_bridgeObjectRetain();
  if (v37 != -1) {
    swift_once();
  }
  uint64_t v39 = *(void *)(v0 + 472);
  uint64_t v38 = *(void *)(v0 + 480);
  uint64_t v40 = *(void *)(v0 + 464);
  sub_10000D978(v40, (uint64_t)qword_10021FF50);
  v106._countAndFlagsBits = sub_1001C07D0();
  uint64_t v42 = v41;
  v101._countAndFlagsBits = v95;
  v101._object = v23;
  v106._object = v42;
  sub_1001BED60(v101, v106);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1001C07E0();
  uint64_t v43 = sub_1001C07D0();
  uint64_t v45 = v44;
  uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
  v46(v38, v40);
  v102._countAndFlagsBits = 0xD000000000000014;
  v102._object = (void *)0x80000001001C3130;
  v107._countAndFlagsBits = v43;
  v107._object = v45;
  sub_1001BED60(v102, v107);
  swift_bridgeObjectRelease();
  id v47 = [self automatedDeviceGroup];
  if (v47)
  {
    uint64_t v48 = v47;
    uint64_t v49 = sub_1001C0BF0();
    uint64_t v51 = v50;

    if (qword_1002079D0 != -1) {
      swift_once();
    }
    sub_10000D978(*(void *)(v0 + 464), (uint64_t)qword_10021FFF8);
    v108._countAndFlagsBits = sub_1001C07D0();
    uint64_t v53 = v52;
    v103._countAndFlagsBits = v49;
    v103._object = v51;
    v108._object = v53;
    sub_1001BED60(v103, v108);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v54 = *(void *)(v0 + 480);
  uint64_t v55 = *(void *)(v0 + 464);
  sub_1001C0800();
  uint64_t v56 = sub_1001C07D0();
  BOOL v58 = v57;
  v46(v54, v55);
  v104._object = (void *)0x80000001001C2F70;
  v104._countAndFlagsBits = 0xD000000000000010;
  v109._countAndFlagsBits = v56;
  v109._object = v58;
  sub_1001BED60(v104, v109);
  swift_bridgeObjectRelease();
  swift_retain_n();
  uint64_t v59 = sub_1001C0330();
  os_log_type_t v60 = sub_1001C11E0();
  if (os_log_type_enabled(v59, v60))
  {
    uint64_t v61 = *(void *)(v0 + 456);
    uint64_t v62 = swift_slowAlloc();
    uint64_t v97 = swift_slowAlloc();
    *(_DWORD *)uint64_t v62 = 136315394;
    uint64_t v63 = *(void *)(v61 + qword_100207D00);
    unint64_t v64 = *(void *)(v61 + qword_100207D00 + 8);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 424) = sub_1000DF238(v63, v64, &v97);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v62 + 12) = 2080;
    swift_beginAccess();
    sub_100016754(&qword_100207DB0, (void (*)(uint64_t))&type metadata accessor for URLRequest);
    uint64_t v65 = sub_1001C1780();
    *(void *)(v0 + 440) = sub_1000DF238(v65, v66, &v97);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v59, v60, "%s request ready, request=%s", (uint8_t *)v62, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  id v67 = [self ephemeralSessionConfiguration];
  *(void *)(v0 + 560) = v67;
  objc_msgSend(v67, "set_usesNWLoader:", 1);
  id v68 = [self sessionWithConfiguration:v67];
  *(void *)(v0 + 568) = v68;
  swift_retain_n();
  id v69 = v68;
  uint64_t v70 = sub_1001C0330();
  os_log_type_t v71 = sub_1001C11E0();
  BOOL v72 = os_log_type_enabled(v70, v71);
  uint64_t v73 = *(void *)(v0 + 456);
  if (v72)
  {
    uint64_t v74 = swift_slowAlloc();
    Swift::String v94 = (void *)swift_slowAlloc();
    uint64_t v97 = swift_slowAlloc();
    *(_DWORD *)uint64_t v74 = 136315394;
    uint64_t v76 = *(void *)(v73 + qword_100207D00);
    unint64_t v75 = *(void *)(v73 + qword_100207D00 + 8);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 408) = sub_1000DF238(v76, v75, &v97);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v74 + 12) = 2112;
    *(void *)(v0 + 416) = v69;
    id v77 = v69;
    sub_1001C1310();
    *Swift::String v94 = v69;

    _os_log_impl((void *)&_mh_execute_header, v70, v71, "%s session ready, session=%@", (uint8_t *)v74, 0x16u);
    sub_100003918(&qword_100207DA8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  swift_retain_n();
  uint64_t v78 = sub_1001C0330();
  os_log_type_t v79 = sub_1001C11E0();
  BOOL v80 = os_log_type_enabled(v78, v79);
  uint64_t v81 = *(void *)(v0 + 456);
  if (v80)
  {
    uint64_t v82 = (uint8_t *)swift_slowAlloc();
    uint64_t v97 = swift_slowAlloc();
    *(_DWORD *)uint64_t v82 = 136315138;
    uint64_t v84 = *(void *)(v81 + qword_100207D00);
    unint64_t v83 = *(void *)(v81 + qword_100207D00 + 8);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 400) = sub_1000DF238(v84, v83, &v97);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v78, v79, "%s running session async", v82, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v85 = *(void *)(v0 + 544);
  uint64_t v86 = *(void *)(v0 + 536);
  uint64_t v87 = *(void *)(v0 + 528);
  uint64_t v88 = *(void *)(v0 + 520);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 16))(v86, v85, v88);
  uint64_t v89 = (void *)swift_task_alloc();
  *(void *)(v0 + 576) = v89;
  void *v89 = v0;
  v89[1] = sub_100012500;
  uint64_t v90 = *(void *)(v0 + 536);
  return NSURLSession.data(for:delegate:)(v90, 0);
}

uint64_t sub_100012500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  uint64_t v6 = (void *)*v4;
  v6[73] = a1;
  v6[74] = a2;
  v6[75] = a3;
  v6[76] = v3;
  swift_task_dealloc();
  uint64_t v7 = v5[67];
  uint64_t v8 = v5[66];
  uint64_t v9 = v5[65];
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  uint64_t v11 = (v8 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  if (v3)
  {
    v6[79] = v10;
    v6[80] = v11;
    v10(v7, v9);
    uint64_t v12 = sub_1000133E8;
  }
  else
  {
    v6[77] = v10;
    v6[78] = v11;
    v10(v7, v9);
    uint64_t v12 = sub_1000126A0;
  }
  return _swift_task_switch(v12, 0, 0);
}

uint64_t sub_1000126A0()
{
  uint64_t v87 = v0;
  unint64_t v1 = *(void **)(v0 + 600);
  unint64_t v2 = *(void *)(v0 + 592);
  uint64_t v3 = *(void *)(v0 + 584);
  sub_100007B14(v3, v2);
  swift_retain();
  sub_100007B14(v3, v2);
  id v4 = v1;
  swift_retain();
  sub_100007B14(v3, v2);
  id v5 = v4;
  uint64_t v6 = sub_1001C0330();
  os_log_type_t v7 = sub_1001C11E0();
  if (os_log_type_enabled(v6, v7))
  {
    os_log_t log = v6;
    uint64_t v8 = *(void **)(v0 + 600);
    unint64_t v9 = *(void *)(v0 + 592);
    uint64_t v10 = *(void *)(v0 + 584);
    uint64_t v11 = *(void *)(v0 + 456);
    os_log_type_t type = v7;
    uint64_t v12 = swift_slowAlloc();
    os_log_t v79 = (os_log_t)swift_slowAlloc();
    v86[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315650;
    uint64_t v14 = *(void *)(v11 + qword_100207D00);
    unint64_t v13 = *(void *)(v11 + qword_100207D00 + 8);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 376) = sub_1000DF238(v14, v13, v86);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v12 + 12) = 2112;
    *(void *)(v0 + 384) = v8;
    id v15 = v8;
    sub_1001C1310();
    v79->isa = (Class)v8;

    *(_WORD *)(v12 + 22) = 2080;
    sub_100007B14(v10, v9);
    uint64_t v16 = sub_1001BF0E0();
    unint64_t v18 = v17;
    sub_10000792C(v10, v9);
    *(void *)(v0 + 392) = sub_1000DF238(v16, v18, v86);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    sub_10000792C(v10, v9);
    sub_10000792C(v10, v9);
    _os_log_impl((void *)&_mh_execute_header, log, type, "%s response returning, response=%@ data=%s", (uint8_t *)v12, 0x20u);
    sub_100003918(&qword_100207DA8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    long long v19 = *(void **)(v0 + 600);
    unint64_t v20 = *(void *)(v0 + 592);
    uint64_t v21 = *(void *)(v0 + 584);

    swift_release_n();
    sub_10000792C(v21, v20);
    sub_10000792C(v21, v20);
  }
  uint64_t v22 = *(void *)(v0 + 608);
  sub_100003918(&qword_100208280);
  sub_100016710(&qword_100208288, &qword_100208280);
  sub_1001BED80();
  sub_10000792C(*(void *)(v0 + 584), *(void *)(v0 + 592));
  if (v22)
  {
    swift_retain();
    swift_errorRetain();
    swift_retain();
    swift_errorRetain();
    uint64_t v23 = sub_1001C0330();
    os_log_type_t v24 = sub_1001C11F0();
    BOOL v25 = os_log_type_enabled(v23, v24);
    uint64_t v26 = *(void *)(v0 + 456);
    if (v25)
    {
      uint64_t v27 = swift_slowAlloc();
      typea = (void *)swift_slowAlloc();
      v86[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 136315394;
      os_log_t loga = v23;
      uint64_t v29 = *(void *)(v26 + qword_100207D00);
      unint64_t v28 = *(void *)(v26 + qword_100207D00 + 8);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 312) = sub_1000DF238(v29, v28, v86);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v27 + 12) = 2112;
      swift_errorRetain();
      uint64_t v30 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 320) = v30;
      sub_1001C1310();
      void *typea = v30;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, loga, v24, "%s unable to decode json response data, error=%@", (uint8_t *)v27, 0x16u);
      sub_100003918(&qword_100207DA8);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v43 = *(void **)(v0 + 600);
    unint64_t v44 = *(void *)(v0 + 592);
    uint64_t v45 = *(void *)(v0 + 584);
    uint64_t v46 = *(void **)(v0 + 568);
    id v47 = *(void **)(v0 + 560);
    sub_100003918(&qword_100208270);
    sub_100016710(&qword_100208278, &qword_100208270);
    swift_allocError();
    *uint64_t v48 = 1;
    swift_willThrow();

    sub_10000792C(v45, v44);
    swift_errorRelease();
LABEL_19:
    uint64_t v75 = *(void *)(v0 + 456);
    (*(void (**)(void, void))(v0 + 616))(*(void *)(v0 + 544), *(void *)(v0 + 520));
    sub_100013968(v75);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v76 = *(uint64_t (**)(void))(v0 + 8);
    return v76();
  }
  uint64_t v31 = *(void *)(v0 + 296);
  uint64_t v32 = *(void *)(v0 + 304);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v33 = sub_1001C0330();
  os_log_type_t v34 = sub_1001C11E0();
  BOOL v35 = os_log_type_enabled(v33, v34);
  uint64_t v36 = *(void *)(v0 + 456);
  if (v35)
  {
    uint64_t v37 = swift_slowAlloc();
    v86[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v37 = 136315394;
    BOOL v80 = v33;
    uint64_t v38 = v31;
    uint64_t v39 = *(void *)(v36 + qword_100207D00);
    unint64_t v40 = *(void *)(v36 + qword_100207D00 + 8);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 352) = sub_1000DF238(v39, v40, v86);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v37 + 12) = 2080;
    *(void *)(v0 + 280) = v38;
    *(void *)(v0 + 288) = v32;
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_1001C0C40();
    *(void *)(v0 + 368) = sub_1000DF238(v41, v42, v86);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v80, v34, "%s model decoded, model=%s", (uint8_t *)v37, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v49 = sub_1001BF100();
  unint64_t v51 = v50;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 648) = v49;
  *(void *)(v0 + 656) = v51;
  swift_retain();
  if (v51 >> 60 == 15)
  {
    swift_retain();
    BOOL v52 = sub_1001C0330();
    os_log_type_t v53 = sub_1001C11F0();
    BOOL v54 = os_log_type_enabled(v52, v53);
    uint64_t v55 = *(void *)(v0 + 456);
    if (v54)
    {
      uint64_t v56 = (uint8_t *)swift_slowAlloc();
      v86[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v56 = 136315138;
      uint64_t v57 = *(void *)(v55 + qword_100207D00);
      unint64_t v58 = *(void *)(v55 + qword_100207D00 + 8);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 328) = sub_1000DF238(v57, v58, v86);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v52, v53, "%s unable to decode base64 bag", v56, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    id v69 = *(void **)(v0 + 600);
    unint64_t v70 = *(void *)(v0 + 592);
    uint64_t v71 = *(void *)(v0 + 584);
    BOOL v72 = *(void **)(v0 + 568);
    uint64_t v73 = *(void **)(v0 + 560);
    sub_100003918(&qword_100208270);
    sub_100016710(&qword_100208278, &qword_100208270);
    swift_allocError();
    *uint64_t v74 = 2;
    swift_willThrow();

    sub_10000792C(v71, v70);
    goto LABEL_19;
  }
  sub_10000D9E0(v49, v51);
  swift_retain();
  sub_10000D9E0(v49, v51);
  uint64_t v59 = sub_1001C0330();
  os_log_type_t v60 = sub_1001C11E0();
  BOOL v61 = os_log_type_enabled(v59, v60);
  uint64_t v62 = *(void *)(v0 + 456);
  if (v61)
  {
    os_log_type_t v85 = v60;
    uint64_t v63 = swift_slowAlloc();
    v86[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v63 = 136315394;
    uint64_t v64 = *(void *)(v62 + qword_100207D00);
    unint64_t v65 = *(void *)(v62 + qword_100207D00 + 8);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 336) = sub_1000DF238(v64, v65, v86);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v63 + 12) = 2080;
    sub_100007B14(v49, v51);
    uint64_t v66 = sub_1001BF0E0();
    unint64_t v68 = v67;
    sub_100007918(v49, v51);
    *(void *)(v0 + 344) = sub_1000DF238(v66, v68, v86);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    sub_100007918(v49, v51);
    sub_100007918(v49, v51);
    _os_log_impl((void *)&_mh_execute_header, v59, v85, "%s base64 bag decoded, pushing update of utf8jsonBag=%s", (uint8_t *)v63, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    sub_100007918(v49, v51);
    sub_100007918(v49, v51);
  }
  *(void *)(v0 + 664) = *(void *)(*(void *)(v0 + 456) + *(void *)(**(void **)(v0 + 456) + 144));
  uint64_t v78 = (void *)swift_task_alloc();
  *(void *)(v0 + 672) = v78;
  *uint64_t v78 = v0;
  v78[1] = sub_100013730;
  return TC2ServerDrivenConfiguration.updateJsonModel(_:)(v49, v51);
}

uint64_t sub_1000133E8()
{
  uint64_t v16 = v0;
  swift_retain();
  swift_errorRetain();
  swift_retain();
  swift_errorRetain();
  unint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C11F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void *)(v0 + 456);
    uint64_t v4 = swift_slowAlloc();
    id v5 = (void *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    uint64_t v7 = *(void *)(v3 + qword_100207D00);
    unint64_t v6 = *(void *)(v3 + qword_100207D00 + 8);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 432) = sub_1000DF238(v7, v6, &v15);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v4 + 12) = 2112;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 360) = v8;
    sub_1001C1310();
    *id v5 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s response throwing, error=%@", (uint8_t *)v4, 0x16u);
    sub_100003918(&qword_100207DA8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  unint64_t v9 = *(void **)(v0 + 568);
  uint64_t v10 = *(void **)(v0 + 560);
  sub_100003918(&qword_100208270);
  sub_100016710(&qword_100208278, &qword_100208270);
  swift_allocError();
  *uint64_t v11 = 0;
  swift_willThrow();

  swift_errorRelease();
  uint64_t v12 = *(void *)(v0 + 456);
  (*(void (**)(void, void))(v0 + 632))(*(void *)(v0 + 544), *(void *)(v0 + 520));
  sub_100013968(v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_100013730()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10001382C, 0, 0);
}

uint64_t sub_10001382C()
{
  uint64_t v1 = v0[81];
  unint64_t v12 = v0[82];
  unint64_t v13 = (void (*)(uint64_t, uint64_t))v0[77];
  os_log_type_t v2 = (void *)v0[75];
  unint64_t v3 = v0[74];
  uint64_t v4 = v0[73];
  id v5 = (void *)v0[71];
  unint64_t v6 = (void *)v0[70];
  uint64_t v7 = v0[68];
  uint64_t v8 = v0[65];
  uint64_t v9 = v0[57];
  sub_10001551C(v0[83], (uint64_t)(v0 + 2));

  sub_10000792C(v4, v3);
  sub_100007918(v1, v12);
  v13(v7, v8);
  sub_100013968(v9);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

void sub_100013968(uint64_t a1)
{
  swift_retain_n();
  osos_log_t log = sub_1001C0330();
  os_log_type_t v2 = sub_1001C1200();
  if (os_log_type_enabled(oslog, v2))
  {
    unint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)unint64_t v3 = 136315138;
    uint64_t v4 = *(void *)(a1 + qword_100207D00);
    unint64_t v5 = *(void *)(a1 + qword_100207D00 + 8);
    swift_bridgeObjectRetain();
    sub_1000DF238(v4, v5, &v7);
    sub_1001C1310();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, oslog, v2, "%s finished configbag request", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }
}

double sub_100013B10()
{
  uint64_t v0 = sub_1001C0910();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1001C0900();
  uint64_t v21 = *(void *)(v5 - 8);
  uint64_t v22 = v5;
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1001C0C30();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  unint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1001C0C20();
  uint64_t v14 = sub_1001C0C00();
  unint64_t v16 = v15;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  if (v16 >> 60 == 15)
  {
    sub_1001C1580();
    __break(1u);
    JUMPOUT(0x100013FE0);
  }
  sub_100016754(&qword_100208248, (void (*)(uint64_t))&type metadata accessor for SHA256);
  sub_1001C08E0();
  switch(v16 >> 62)
  {
    case 1uLL:
      if (v14 >> 32 < (int)v14) {
        __break(1u);
      }
      sub_100007B14(v14, v16);
      sub_1000D733C((int)v14, v14 >> 32);
      goto LABEL_9;
    case 2uLL:
      uint64_t v17 = *(void *)(v14 + 16);
      uint64_t v18 = *(void *)(v14 + 24);
      sub_10000D9E0(v14, v16);
      swift_retain();
      swift_retain();
      sub_1000D733C(v17, v18);
      swift_release();
      swift_release();
LABEL_9:
      sub_100007918(v14, v16);
      goto LABEL_10;
    case 3uLL:
      memset(v23, 0, 14);
      goto LABEL_6;
    default:
      v23[0] = v14;
      LOWORD(v23[1]) = v16;
      BYTE2(v23[1]) = BYTE2(v16);
      BYTE3(v23[1]) = BYTE3(v16);
      BYTE4(v23[1]) = BYTE4(v16);
      BYTE5(v23[1]) = BYTE5(v16);
LABEL_6:
      sub_1001C08C0();
      sub_100007918(v14, v16);
LABEL_10:
      sub_1001C08D0();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
      sub_1001C08F0();
      sub_100007918(v14, v16);
      uint64_t v19 = v23[0];
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
      return COERCE_DOUBLE(v19 & 0xFFFFFFFFFFFFFLL | 0x3FF0000000000000) + -1.0;
  }
}

uint64_t sub_100013FF0()
{
  v1[58] = v0;
  sub_1001BEDD0();
  v1[59] = swift_task_alloc();
  uint64_t v2 = sub_1001BFB30();
  v1[60] = v2;
  v1[61] = *(void *)(v2 - 8);
  v1[62] = swift_task_alloc();
  sub_1001BF310();
  v1[63] = swift_task_alloc();
  return _swift_task_switch(sub_100014108, 0, 0);
}

uint64_t sub_100014108()
{
  uint64_t v2 = *(void *)(v0 + 496);
  uint64_t v1 = *(void *)(v0 + 504);
  uint64_t v3 = *(void *)(v0 + 480);
  uint64_t v4 = *(void *)(v0 + 488);
  uint64_t v5 = *(void *)(v0 + 464);
  uint64_t v6 = *(void *)(v5 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_serverDrivenConfig);
  *(void *)(v0 + 512) = v6;
  uint64_t v7 = (_OWORD *)(v5 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo);
  long long v8 = *(_OWORD *)(v5 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo + 32);
  long long v9 = *(_OWORD *)(v5 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo);
  *(_OWORD *)(v0 + 32) = *(_OWORD *)(v5 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo + 16);
  *(_OWORD *)(v0 + 48) = v8;
  *(_OWORD *)(v0 + 16) = v9;
  long long v10 = v7[6];
  long long v12 = v7[3];
  long long v11 = v7[4];
  *(_OWORD *)(v0 + 96) = v7[5];
  *(_OWORD *)(v0 + 112) = v10;
  *(_OWORD *)(v0 + 64) = v12;
  *(_OWORD *)(v0 + 80) = v11;
  long long v13 = v7[10];
  long long v15 = v7[7];
  long long v14 = v7[8];
  *(_OWORD *)(v0 + 160) = v7[9];
  *(_OWORD *)(v0 + 176) = v13;
  *(_OWORD *)(v0 + 128) = v15;
  *(_OWORD *)(v0 + 144) = v14;
  swift_retain();
  sub_100016110(v0 + 16);
  sub_1001BF300();
  uint64_t v16 = v5 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_config;
  sub_100003918(&qword_100208260);
  uint64_t v17 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v16, v3);
  *(void *)(v0 + 520) = sub_100016374(v6, (_OWORD *)(v0 + 16), v1, v2, v17);
  unint64_t v20 = (uint64_t (*)(void))((char *)&dword_100208268 + dword_100208268);
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v0 + 528) = v18;
  *uint64_t v18 = v0;
  v18[1] = sub_1000142A8;
  return v20();
}

uint64_t sub_1000142A8()
{
  *(void *)(*(void *)v1 + 536) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100014760;
  }
  else {
    uint64_t v2 = sub_1000143BC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000143BC()
{
  uint64_t v1 = (_OWORD *)(v0 + 192);
  uint64_t v2 = sub_1001C0330();
  os_log_type_t v3 = sub_1001C11E0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "TC2UpdateServerDrivenConfigurationRequest send succeeded", v4, 2u);
    swift_slowDealloc();
  }

  uint64_t v5 = *(void *)(v0 + 536);
  uint64_t v6 = *(void *)(v0 + 512);
  sub_1001BEE10();
  swift_allocObject();
  sub_1001BEE00();
  sub_1001BEDB0();
  sub_1001BEDE0();
  uint64_t v7 = v6 + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration__jsonModel;
  os_unfair_lock_lock((os_unfair_lock_t)(v6
                                       + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration__jsonModel));
  long long v8 = *(_OWORD *)(v7 + 8);
  long long v9 = *(_OWORD *)(v7 + 24);
  long long v10 = *(_OWORD *)(v7 + 56);
  *(_OWORD *)(v0 + 224) = *(_OWORD *)(v7 + 40);
  *(_OWORD *)(v0 + 240) = v10;
  *uint64_t v1 = v8;
  *(_OWORD *)(v0 + 208) = v9;
  long long v11 = *(_OWORD *)(v7 + 72);
  long long v12 = *(_OWORD *)(v7 + 88);
  long long v13 = *(_OWORD *)(v7 + 104);
  *(_OWORD *)(v0 + 297) = *(_OWORD *)(v7 + 113);
  *(_OWORD *)(v0 + 272) = v12;
  *(_OWORD *)(v0 + 288) = v13;
  *(_OWORD *)(v0 + 256) = v11;
  sub_1000162B0(v0 + 192);
  os_unfair_lock_unlock((os_unfair_lock_t)v7);
  long long v14 = *(_OWORD *)(v0 + 272);
  *(_OWORD *)(v0 + 384) = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 400) = v14;
  *(_OWORD *)(v0 + 416) = *(_OWORD *)(v0 + 288);
  *(_OWORD *)(v0 + 425) = *(_OWORD *)(v0 + 297);
  long long v15 = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 320) = *v1;
  *(_OWORD *)(v0 + 336) = v15;
  long long v16 = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 352) = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 368) = v16;
  sub_1000162E8();
  uint64_t v17 = sub_1001BEDF0();
  if (v5)
  {
    sub_10001633C(v0 + 192);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v19 = sub_1001C0330();
    os_log_type_t v20 = sub_1001C11F0();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 138412290;
      swift_errorRetain();
      uint64_t v23 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 448) = v23;
      sub_1001C1310();
      *uint64_t v22 = v23;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "failure to encode server driven config for display, error=%@", v21, 0xCu);
      sub_100003918(&qword_100207DA8);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();
    }
    swift_release();
    swift_release();
    uint64_t v24 = 0;
    unint64_t v25 = 0xC000000000000000;
  }
  else
  {
    uint64_t v24 = v17;
    unint64_t v25 = v18;
    swift_release();
    swift_release();
    sub_10001633C(v0 + 192);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v26 = *(uint64_t (**)(uint64_t, unint64_t))(v0 + 8);
  return v26(v24, v25);
}

uint64_t sub_100014760()
{
  uint64_t v1 = (_OWORD *)(v0 + 192);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_1001C0330();
  os_log_type_t v3 = sub_1001C11F0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 456) = v5;
    sub_1001C1310();
    *uint64_t v22 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "failure to process TC2UpdateServerDrivenConfigurationRequest send, error=%@", v4, 0xCu);
    sub_100003918(&qword_100207DA8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();

    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v6 = *(void *)(v0 + 512);
  sub_1001BEE10();
  swift_allocObject();
  sub_1001BEE00();
  sub_1001BEDB0();
  sub_1001BEDE0();
  uint64_t v7 = v6 + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration__jsonModel;
  os_unfair_lock_lock((os_unfair_lock_t)(v6
                                       + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration__jsonModel));
  long long v8 = *(_OWORD *)(v7 + 8);
  long long v9 = *(_OWORD *)(v7 + 24);
  long long v10 = *(_OWORD *)(v7 + 56);
  *(_OWORD *)(v0 + 224) = *(_OWORD *)(v7 + 40);
  *(_OWORD *)(v0 + 240) = v10;
  *uint64_t v1 = v8;
  *(_OWORD *)(v0 + 208) = v9;
  long long v11 = *(_OWORD *)(v7 + 72);
  long long v12 = *(_OWORD *)(v7 + 88);
  long long v13 = *(_OWORD *)(v7 + 104);
  *(_OWORD *)(v0 + 297) = *(_OWORD *)(v7 + 113);
  *(_OWORD *)(v0 + 272) = v12;
  *(_OWORD *)(v0 + 288) = v13;
  *(_OWORD *)(v0 + 256) = v11;
  sub_1000162B0(v0 + 192);
  os_unfair_lock_unlock((os_unfair_lock_t)v7);
  long long v14 = *(_OWORD *)(v0 + 272);
  *(_OWORD *)(v0 + 384) = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 400) = v14;
  *(_OWORD *)(v0 + 416) = *(_OWORD *)(v0 + 288);
  *(_OWORD *)(v0 + 425) = *(_OWORD *)(v0 + 297);
  long long v15 = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 320) = *v1;
  *(_OWORD *)(v0 + 336) = v15;
  long long v16 = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 352) = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 368) = v16;
  sub_1000162E8();
  uint64_t v17 = sub_1001BEDF0();
  uint64_t v19 = v18;
  swift_release();
  swift_release();
  sub_10001633C(v0 + 192);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v20 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v20(v17, v19);
}

uint64_t sub_100014BEC()
{
  *(void *)(v1 + 280) = v0;
  sub_1001BEDD0();
  *(void *)(v1 + 288) = swift_task_alloc();
  return _swift_task_switch(sub_100014C7C, 0, 0);
}

uint64_t sub_100014C7C()
{
  uint64_t v1 = *(void *)(v0 + 280);
  sub_1001BEE10();
  swift_allocObject();
  sub_1001BEE00();
  sub_1001BEDB0();
  sub_1001BEDE0();
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_serverDrivenConfig)
     + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration__jsonModel;
  os_unfair_lock_lock((os_unfair_lock_t)v2);
  long long v3 = *(_OWORD *)(v2 + 8);
  long long v4 = *(_OWORD *)(v2 + 24);
  long long v5 = *(_OWORD *)(v2 + 56);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v2 + 40);
  *(_OWORD *)(v0 + 64) = v5;
  *(_OWORD *)(v0 + 16) = v3;
  *(_OWORD *)(v0 + 32) = v4;
  long long v6 = *(_OWORD *)(v2 + 72);
  long long v7 = *(_OWORD *)(v2 + 88);
  long long v8 = *(_OWORD *)(v2 + 104);
  *(_OWORD *)(v0 + 121) = *(_OWORD *)(v2 + 113);
  *(_OWORD *)(v0 + 96) = v7;
  *(_OWORD *)(v0 + 112) = v8;
  *(_OWORD *)(v0 + 80) = v6;
  sub_1000162B0(v0 + 16);
  os_unfair_lock_unlock((os_unfair_lock_t)v2);
  long long v9 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 224) = v9;
  *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 249) = *(_OWORD *)(v0 + 121);
  long long v10 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 160) = v10;
  long long v11 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 192) = v11;
  sub_1000162E8();
  uint64_t v12 = sub_1001BEDF0();
  uint64_t v14 = v13;
  swift_release();
  sub_10001633C(v0 + 16);
  swift_task_dealloc();
  long long v15 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v15(v12, v14);
}

uint64_t sub_100014F88(uint64_t a1, uint64_t a2)
{
  v3[58] = a2;
  v3[59] = v2;
  v3[57] = a1;
  sub_1001BEDD0();
  v3[60] = swift_task_alloc();
  return _swift_task_switch(sub_10001501C, 0, 0);
}

uint64_t sub_10001501C()
{
  v0[61] = *(void *)(v0[59] + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_serverDrivenConfig);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[62] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000150CC;
  uint64_t v3 = v0[57];
  uint64_t v2 = v0[58];
  return TC2ServerDrivenConfiguration.updateJsonModel(_:)(v3, v2);
}

uint64_t sub_1000150CC()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1000151C8, 0, 0);
}

uint64_t sub_1000151C8()
{
  unint64_t v1 = *(void *)(v0 + 488);
  uint64_t v2 = (_OWORD *)(*(void *)(v0 + 472) + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo);
  long long v4 = v2[1];
  long long v3 = v2[2];
  *(_OWORD *)(v0 + 16) = *v2;
  *(_OWORD *)(v0 + 32) = v4;
  *(_OWORD *)(v0 + 48) = v3;
  long long v5 = v2[6];
  long long v7 = v2[3];
  long long v6 = v2[4];
  *(_OWORD *)(v0 + 96) = v2[5];
  *(_OWORD *)(v0 + 112) = v5;
  *(_OWORD *)(v0 + 64) = v7;
  *(_OWORD *)(v0 + 80) = v6;
  long long v8 = v2[10];
  long long v10 = v2[7];
  long long v9 = v2[8];
  *(_OWORD *)(v0 + 160) = v2[9];
  *(_OWORD *)(v0 + 176) = v8;
  *(_OWORD *)(v0 + 128) = v10;
  *(_OWORD *)(v0 + 144) = v9;
  sub_100016110(v0 + 16);
  sub_10001551C(v1, v0 + 16);
  sub_1000161E0(v0 + 16);
  sub_1001BEE10();
  swift_allocObject();
  sub_1001BEE00();
  sub_1001BEDB0();
  sub_1001BEDE0();
  unint64_t v11 = v1 + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration__jsonModel;
  os_unfair_lock_lock((os_unfair_lock_t)(v1
                                       + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration__jsonModel));
  long long v12 = *(_OWORD *)(v11 + 8);
  long long v13 = *(_OWORD *)(v11 + 24);
  long long v14 = *(_OWORD *)(v11 + 56);
  *(_OWORD *)(v0 + 224) = *(_OWORD *)(v11 + 40);
  *(_OWORD *)(v0 + 240) = v14;
  *(_OWORD *)(v0 + 192) = v12;
  *(_OWORD *)(v0 + 208) = v13;
  long long v15 = *(_OWORD *)(v11 + 72);
  long long v16 = *(_OWORD *)(v11 + 88);
  long long v17 = *(_OWORD *)(v11 + 104);
  *(_OWORD *)(v0 + 297) = *(_OWORD *)(v11 + 113);
  *(_OWORD *)(v0 + 272) = v16;
  *(_OWORD *)(v0 + 288) = v17;
  *(_OWORD *)(v0 + 256) = v15;
  sub_1000162B0(v0 + 192);
  os_unfair_lock_unlock((os_unfair_lock_t)v11);
  long long v18 = *(_OWORD *)(v0 + 272);
  *(_OWORD *)(v0 + 384) = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 400) = v18;
  *(_OWORD *)(v0 + 416) = *(_OWORD *)(v0 + 288);
  *(_OWORD *)(v0 + 425) = *(_OWORD *)(v0 + 297);
  long long v19 = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 320) = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 336) = v19;
  long long v20 = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 352) = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 368) = v20;
  sub_1000162E8();
  uint64_t v21 = sub_1001BEDF0();
  uint64_t v23 = v22;
  swift_release();
  sub_10001633C(v0 + 192);
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v24(v21, v23);
}

uint64_t sub_10001551C(unint64_t a1, uint64_t a2)
{
  unint64_t v113 = a1;
  uint64_t v3 = sub_1001BF8D0();
  uint64_t v107 = *(void *)(v3 - 8);
  uint64_t v108 = v3;
  __chkstk_darwin(v3, v4);
  long long v6 = (char *)&v101 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = (void *)sub_100003918(&qword_10020C5E0);
  uint64_t v111 = *(v114 - 1);
  uint64_t v8 = __chkstk_darwin(v114, v7);
  uint64_t v110 = (char *)&v101 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8, v10);
  long long v13 = (char *)&v101 - v12;
  uint64_t v15 = __chkstk_darwin(v11, v14);
  Swift::String v105 = (char *)&v101 - v16;
  uint64_t v18 = __chkstk_darwin(v15, v17);
  Swift::String v104 = (char *)&v101 - v19;
  uint64_t v21 = __chkstk_darwin(v18, v20);
  Swift::String v109 = (char *)&v101 - v22;
  __chkstk_darwin(v21, v23);
  unint64_t v25 = (char *)&v101 - v24;
  uint64_t v26 = sub_1001BF8E0();
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26, v28);
  uint64_t v30 = (char *)&v101 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1001C0340();
  uint64_t v32 = *(void *)(v31 - 8);
  __chkstk_darwin(v31, v33);
  BOOL v35 = (char *)&v101 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v30, enum case for TC2LogCategory.updateServerDrivenConfiguration(_:), v26);
  sub_100016110(a2);
  sub_1001BFDD0();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v30, v26);
  sub_1001BF860();
  sub_1001C0C60();
  swift_bridgeObjectRelease();
  LODWORD(v26) = os_variant_has_internal_content();
  swift_release();
  if (v26)
  {
    uint64_t v106 = a2;
    uint64_t v112 = v35;
    uint64_t v101 = v32;
    uint64_t v102 = v31;
    uint64_t v36 = sub_100003918(&qword_100207DB8);
    sub_1001BFA40();
    unint64_t v37 = v113 + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration__jsonModel;
    os_unfair_lock_lock((os_unfair_lock_t)(v113
                                         + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration__jsonModel));
    double v38 = *(double *)(v37 + 48);
    char v39 = *(unsigned char *)(v37 + 56);
    os_unfair_lock_unlock((os_unfair_lock_t)v37);
    unint64_t v40 = v25;
    Swift::String v103 = v25;
    if ((v39 & 1) != 0 || v38 < 0.0 || v38 > 1.0)
    {
      unint64_t v113 = v36;
      BOOL v54 = sub_1001C0330();
      os_log_type_t v55 = sub_1001C1200();
      if (os_log_type_enabled(v54, v55))
      {
        uint64_t v56 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v56 = 0;
        _os_log_impl((void *)&_mh_execute_header, v54, v55, "With no spillover, deleted environment proposal", v56, 2u);
        swift_slowDealloc();
      }

      uint64_t v57 = v111;
      unint64_t v58 = *(void (**)(char *, char *, void *))(v111 + 16);
      uint64_t v59 = v114;
      v58(v13, v25, v114);
      uint64_t v60 = (uint64_t)v110;
      v58(v110, v40, v59);
      BOOL v61 = sub_1001C0330();
      os_log_type_t v62 = sub_1001C1200();
      int v63 = v62;
      if (os_log_type_enabled(v61, v62))
      {
        uint64_t v64 = swift_slowAlloc();
        Swift::String v109 = (char *)swift_slowAlloc();
        v116[0] = (uint64_t)v109;
        *(_DWORD *)uint64_t v64 = 136315394;
        LODWORD(v108) = v63;
        uint64_t v65 = sub_1001BFAF0();
        uint64_t v115 = sub_1000DF238(v65, v66, v116);
        sub_1001C1310();
        swift_bridgeObjectRelease();
        unint64_t v67 = *(void (**)(char *, void *))(v57 + 8);
        v67(v13, v114);
        *(_WORD *)(v64 + 12) = 2080;
        uint64_t v68 = sub_1001BFAE0();
        uint64_t v115 = sub_1000DF238(v68, v69, v116);
        uint64_t v70 = v106;
        sub_1001C1310();
        swift_bridgeObjectRelease();
        uint64_t v71 = v70;
        v67((char *)v60, v114);
        _os_log_impl((void *)&_mh_execute_header, v61, (os_log_type_t)v108, "TC2DefaultConfiguration deleted %s %s", (uint8_t *)v64, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v59 = v114;
        swift_slowDealloc();
      }
      else
      {

        unint64_t v67 = *(void (**)(char *, void *))(v57 + 8);
        v67(v13, v59);
        v67((char *)v60, v59);
        uint64_t v71 = v106;
      }
      v116[0] = 0;
      v116[1] = 0;
      BOOL v72 = v103;
      sub_1001BFAF0();
      sub_1001BFAE0();
      sub_1001C12E0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v67(v72, v59);
      (*(void (**)(char *, uint64_t))(v101 + 8))(v112, v102);
      uint64_t v53 = v71;
    }
    else
    {
      double v41 = sub_100013B10();
      uint64_t v43 = v107;
      uint64_t v42 = v108;
      unint64_t v44 = (unsigned int *)&enum case for TC2Environment.production(_:);
      if (v41 >= v38) {
        unint64_t v44 = (unsigned int *)&enum case for TC2Environment.carry(_:);
      }
      (*(void (**)(char *, void, uint64_t))(v107 + 104))(v6, *v44, v108);
      uint64_t v45 = sub_1001BF8A0();
      unint64_t v47 = v46;
      (*(void (**)(char *, uint64_t))(v43 + 8))(v6, v42);
      unint64_t v113 = v47;
      swift_bridgeObjectRetain_n();
      uint64_t v48 = sub_1001C0330();
      os_log_type_t v49 = sub_1001C1200();
      BOOL v50 = os_log_type_enabled(v48, v49);
      uint64_t v110 = (char *)v45;
      if (v50)
      {
        uint64_t v51 = swift_slowAlloc();
        v116[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v51 = 134218498;
        uint64_t v115 = *(void *)&v41;
        sub_1001C1310();
        *(_WORD *)(v51 + 12) = 2048;
        uint64_t v115 = *(void *)&v38;
        sub_1001C1310();
        *(_WORD *)(v51 + 22) = 2080;
        unint64_t v52 = v113;
        swift_bridgeObjectRetain();
        uint64_t v115 = sub_1000DF238(v45, v52, v116);
        sub_1001C1310();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v48, v49, "With device_p=%f, spillover=%f, proposed environment=%s", (uint8_t *)v51, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      uint64_t v73 = v114;
      uint64_t v74 = v111;
      uint64_t v75 = v109;
      id v77 = v104;
      uint64_t v76 = v105;
      sub_1001BFA40();
      uint64_t v78 = *(void (**)(char *, char *, void *))(v74 + 16);
      v78(v77, v75, v73);
      v78(v76, v75, v73);
      swift_bridgeObjectRetain_n();
      os_log_t v79 = sub_1001C0330();
      os_log_type_t v80 = sub_1001C1200();
      int v81 = v80;
      if (os_log_type_enabled(v79, v80))
      {
        uint64_t v82 = v76;
        uint64_t v83 = swift_slowAlloc();
        uint64_t v111 = swift_slowAlloc();
        v116[0] = v111;
        *(_DWORD *)uint64_t v83 = 136315650;
        LODWORD(v108) = v81;
        uint64_t v84 = sub_1001BFAF0();
        uint64_t v115 = sub_1000DF238(v84, v85, v116);
        sub_1001C1310();
        swift_bridgeObjectRelease();
        uint64_t v86 = *(void **)(v74 + 8);
        ((void (*)(char *, void *))v86)(v77, v73);
        *(_WORD *)(v83 + 12) = 2080;
        uint64_t v87 = sub_1001BFAE0();
        uint64_t v115 = sub_1000DF238(v87, v88, v116);
        sub_1001C1310();
        swift_bridgeObjectRelease();
        uint64_t v114 = v86;
        ((void (*)(char *, void *))v86)(v82, v73);
        uint64_t v75 = v109;
        *(_WORD *)(v83 + 22) = 2080;
        unint64_t v89 = v113;
        swift_bridgeObjectRetain();
        uint64_t v115 = sub_1000DF238((uint64_t)v110, v89, v116);
        sub_1001C1310();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v79, (os_log_type_t)v108, "TC2DefaultConfiguration wrote %s %s = %s", (uint8_t *)v83, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        uint64_t v93 = *(void **)(v74 + 8);
        ((void (*)(char *, void *))v93)(v77, v73);
        uint64_t v114 = v93;
        ((void (*)(char *, void *))v93)(v76, v73);
        swift_bridgeObjectRelease_n();
      }
      uint64_t v91 = v102;
      uint64_t v90 = v103;
      uint64_t v92 = v101;
      uint64_t v94 = sub_1001BFAF0();
      uint64_t v96 = v95;
      v118._countAndFlagsBits = sub_1001BFAE0();
      uint64_t v98 = v97;
      v117._countAndFlagsBits = v94;
      v117._object = v96;
      v118._object = v98;
      sub_1001C0CA0(v117, v118);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v99 = (void (*)(char *, void *))v114;
      ((void (*)(char *, void *))v114)(v75, v73);
      v99(v90, v73);
      (*(void (**)(char *, uint64_t))(v92 + 8))(v112, v91);
      uint64_t v53 = v106;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v31);
    uint64_t v53 = a2;
  }
  return sub_1000161E0(v53);
}

uint64_t sub_100016110(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000161E0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000162B0(uint64_t a1)
{
  return a1;
}

unint64_t sub_1000162E8()
{
  unint64_t result = qword_100208240;
  if (!qword_100208240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100208240);
  }
  return result;
}

uint64_t sub_10001633C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100016374(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_1001BF8E0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1001BFB30();
  uint64_t v34 = v15;
  BOOL v35 = &protocol witness table for TC2DefaultConfiguration;
  uint64_t v16 = sub_10000395C((uint64_t *)&v33);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v16, a4, v15);
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v14, enum case for TC2LogCategory.updateServerDrivenConfiguration(_:), v10);
  sub_1001BFDD0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  uint64_t v17 = qword_100207D18;
  sub_1001BEDA0();
  swift_allocObject();
  *(void *)(a5 + v17) = sub_1001BED90();
  uint64_t v18 = sub_1001BF310();
  sub_100016754(qword_100207DC0, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v31 = sub_1001C1780();
  uint64_t v32 = v19;
  v36._countAndFlagsBits = 58;
  v36._object = (void *)0xE100000000000000;
  sub_1001C0D00(v36);
  uint64_t v20 = v32;
  uint64_t v21 = (uint64_t *)(a5 + qword_100207D00);
  *uint64_t v21 = v31;
  v21[1] = v20;
  *(void *)(a5 + *(void *)(*(void *)a5 + 144)) = a1;
  uint64_t v22 = (_OWORD *)(a5 + *(void *)(*(void *)a5 + 136));
  long long v23 = a2[1];
  *uint64_t v22 = *a2;
  v22[1] = v23;
  long long v24 = a2[5];
  v22[4] = a2[4];
  v22[5] = v24;
  long long v25 = a2[3];
  v22[2] = a2[2];
  v22[3] = v25;
  long long v26 = a2[10];
  long long v27 = a2[8];
  v22[9] = a2[9];
  v22[10] = v26;
  long long v28 = a2[7];
  v22[6] = a2[6];
  v22[7] = v28;
  v22[8] = v27;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(a5 + qword_100207D08, a3, v18);
  sub_10000E720(&v33, a5 + qword_100207D10);
  return a5;
}

uint64_t sub_100016640()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 192, 7);
}

uint64_t sub_1000166C8(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_100016710(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000166C8(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100016754(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for PrefetchRequestError(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for PrefetchRequestError()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for PrefetchRequestError(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for PrefetchRequestError(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PrefetchRequestError(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 8)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PrefetchRequestError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 8) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PrefetchRequestError()
{
  return &type metadata for PrefetchRequestError;
}

ValueMetadata *type metadata accessor for PrefetchRequestError.UnexpectedStatusCode()
{
  return &type metadata for PrefetchRequestError.UnexpectedStatusCode;
}

unsigned char *storeEnumTagSinglePayload for PrefetchRequestError.Code(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100016984);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PrefetchRequestError.Code()
{
  return &type metadata for PrefetchRequestError.Code;
}

unint64_t sub_1000169C0()
{
  unint64_t result = qword_100208290;
  if (!qword_100208290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100208290);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for TrustedRequestError(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TrustedRequestError(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TrustedRequestError(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TrustedRequestError()
{
  return &type metadata for TrustedRequestError;
}

BOOL sub_100016AE0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_100016AF4()
{
  Swift::UInt v1 = *v0;
  sub_1001C1950();
  sub_1001C1960(v1);
  return sub_1001C1990();
}

void sub_100016B3C()
{
  sub_1001C1960(*v0);
}

Swift::Int sub_100016B68()
{
  Swift::UInt v1 = *v0;
  sub_1001C1950();
  sub_1001C1960(v1);
  return sub_1001C1990();
}

unint64_t sub_100016BAC(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000020;
      break;
    case 3:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 4:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000027;
      break;
    case 6:
      unint64_t result = 0xD000000000000025;
      break;
    case 7:
      unint64_t result = 0xD000000000000026;
      break;
    case 8:
      unint64_t result = 0xD000000000000018;
      break;
    case 9:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TrustedRequestError.Code(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TrustedRequestError.Code(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100016E14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrustedRequestError.Code()
{
  return &type metadata for TrustedRequestError.Code;
}

unint64_t sub_100016E50()
{
  unint64_t result = qword_100208298;
  if (!qword_100208298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100208298);
  }
  return result;
}

uint64_t sub_100016EA8()
{
  uint64_t result = sub_1001BF2C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1001BF3C0();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F) {
        return swift_initClassMetadata2();
      }
    }
  }
  return result;
}

void sub_100016FC4(uint64_t a1, void *a2)
{
  sub_1001BF200();
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v3 >= 9.22337204e18)
  {
LABEL_9:
    __break(1u);
    return;
  }
  Class isa = sub_1001C10F0().super.super.isa;
  id v5 = sub_1001C0BE0();
  [a2 setValue:isa forKey:v5];
}

uint64_t *sub_100017090()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (uint64_t)v0 + qword_1002082A0;
  uint64_t v3 = sub_1001BF2C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  uint64_t v4 = (uint64_t)v0 + qword_10021F8F8;
  uint64_t v5 = sub_1001BF3C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 144));
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_1000171B4()
{
  sub_100017090();
  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for DailyActiveUsersReporter()
{
  return swift_getGenericMetadata();
}

ValueMetadata *type metadata accessor for UserDefaultsStore()
{
  return &type metadata for UserDefaultsStore;
}

uint64_t sub_100017208()
{
  return v0;
}

uint64_t sub_100017214()
{
  return sub_100017208();
}

uint64_t sub_100017230(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a5;
  uint64_t v33 = a8;
  uint64_t v10 = v9;
  double v41 = a1;
  uint64_t v42 = a2;
  uint64_t v31 = *(void *)(a5 - 8);
  __chkstk_darwin(a1, a2);
  uint64_t v43 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  char v39 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v14 = __chkstk_darwin(AssociatedTypeWitness, v13);
  uint64_t v16 = (char *)&v29 - v15;
  __chkstk_darwin(v14, v17);
  Swift::String v36 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = swift_getAssociatedTypeWitness();
  uint64_t v34 = *(void *)(v19 - 8);
  uint64_t v35 = v19;
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)&v29 - v21;
  uint64_t v37 = v8;
  uint64_t v23 = sub_1001C1110();
  if (!v23) {
    return sub_1001C0E30();
  }
  Swift::Int v24 = v23;
  uint64_t v30 = v16;
  uint64_t v46 = sub_1001C14A0();
  uint64_t v38 = sub_1001C14B0();
  sub_1001C1480(v24);
  unint64_t v44 = v22;
  uint64_t result = sub_1001C1100();
  if (v24 < 0)
  {
    __break(1u);
  }
  else
  {
    long long v26 = (void (**)(char *))(v39 + 2);
    ++v39;
    unint64_t v40 = v26;
    long long v27 = v30;
    while (1)
    {
      long long v28 = (void (*)(char *, void))sub_1001C1150();
      (*v40)(v27);
      v28(v45, 0);
      v41(v27, v43);
      if (v10) {
        break;
      }
      uint64_t v10 = 0;
      (*v39)(v27, AssociatedTypeWitness);
      sub_1001C1490();
      sub_1001C1130();
      if (!--v24)
      {
        (*(void (**)(char *, uint64_t))(v34 + 8))(v44, v35);
        return v46;
      }
    }
    (*v39)(v27, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v44, v35);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v31 + 32))(v33, v43, v32);
  }
  return result;
}

uint64_t sub_10001762C()
{
  return sub_1001C0BB0();
}

uint64_t sub_1000176AC()
{
  if (sub_1001BF290())
  {
    type metadata accessor for LRUCache.DatedValue();
    char v0 = sub_1001C0BD0();
  }
  else
  {
    char v0 = 0;
  }
  return v0 & 1;
}

BOOL static TC2NetworkActivityResult.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void TC2NetworkActivityResult.hash(into:)(uint64_t a1, char a2)
{
}

uint64_t sub_100017770(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_1001C1840() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1001C1840();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

Swift::Int TC2NetworkActivityResult.hashValue.getter(char a1)
{
  return sub_1001C1990();
}

uint64_t sub_100017894(char a1)
{
  if (a1) {
    return 0x65756C6176;
  }
  else {
    return 1702125924;
  }
}

uint64_t sub_1000178C0(void *a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  v11[0] = *(_OWORD *)(a2 + 32);
  v11[1] = v3;
  long long v12 = v3;
  long long v13 = v11[0];
  type metadata accessor for LRUCache.DatedValue.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_1001C1750();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)v11 - v7;
  sub_10000D934(a1, a1[3]);
  sub_1001C19C0();
  LOBYTE(v12) = 0;
  sub_1001BF2C0();
  sub_10001B320(qword_1002084E8);
  uint64_t v9 = v14;
  sub_1001C1740();
  if (!v9)
  {
    LOBYTE(v12) = 1;
    sub_1001C1740();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

Swift::Int sub_100017AAC()
{
  return sub_1001C1990();
}

uint64_t sub_100017AF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1001BF2C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t v9 = type metadata accessor for LRUCache.DatedValue();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4 + *(int *)(v9 + 52), a2, a3);
}

uint64_t sub_100017BD4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v33 = a6;
  uint64_t v32 = *(void *)(a2 - 8);
  __chkstk_darwin(a1, a2);
  uint64_t v37 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_1001BF2C0();
  uint64_t v36 = *(void *)(v40 - 8);
  __chkstk_darwin(v40, v12);
  char v39 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = a2;
  uint64_t v44 = a3;
  uint64_t v45 = a4;
  uint64_t v46 = a5;
  type metadata accessor for LRUCache.DatedValue.CodingKeys();
  swift_getWitnessTable();
  uint64_t v42 = sub_1001C16A0();
  uint64_t v35 = *(void *)(v42 - 8);
  __chkstk_darwin(v42, v14);
  uint64_t v16 = (char *)&v31 - v15;
  uint64_t v38 = a2;
  uint64_t v43 = a2;
  uint64_t v44 = a3;
  uint64_t v34 = a3;
  uint64_t v45 = a4;
  uint64_t v46 = a5;
  uint64_t v17 = type metadata accessor for LRUCache.DatedValue();
  uint64_t v31 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v31 - v19;
  sub_10000D934(a1, a1[3]);
  double v41 = v16;
  uint64_t v21 = v47;
  sub_1001C19B0();
  if (v21) {
    return sub_100003E90((uint64_t)a1);
  }
  uint64_t v22 = (uint64_t)a1;
  Swift::Int v24 = v37;
  uint64_t v23 = v38;
  uint64_t v26 = v35;
  uint64_t v25 = v36;
  LOBYTE(v43) = 0;
  sub_10001B320(&qword_1002084D8);
  sub_1001C1690();
  long long v27 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
  unint64_t v47 = v20;
  v27(v20, v39, v40);
  LOBYTE(v43) = 1;
  sub_1001C1690();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v41, v42);
  long long v28 = v47;
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(&v47[*(int *)(v17 + 52)], v24, v23);
  uint64_t v29 = v31;
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 16))(v33, v28, v17);
  sub_100003E90(v22);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v28, v17);
}

BOOL sub_100018020(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static TC2NetworkActivityResult.__derived_enum_equals(_:_:)(*a1, *a2);
}

Swift::Int sub_100018038()
{
  return TC2NetworkActivityResult.hashValue.getter(*v0);
}

void sub_10001804C(uint64_t a1)
{
  TC2NetworkActivityResult.hash(into:)(a1, *v1);
}

Swift::Int sub_100018060()
{
  sub_1001C1950();
  TC2NetworkActivityResult.hash(into:)((uint64_t)v2, *v0);
  return sub_1001C1990();
}

uint64_t sub_1000180AC()
{
  return sub_100017894(*v0);
}

uint64_t sub_1000180C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100017770(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000180F4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10001B664();
  *a1 = result;
  return result;
}

uint64_t sub_100018128(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_10001817C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

Swift::Int sub_1000181D8()
{
  return sub_1001C1990();
}

uint64_t sub_10001821C@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_100017BD4(a1, a2[2], a2[3], a2[4], a2[5], a3);
}

uint64_t sub_100018240(void *a1, uint64_t a2)
{
  return sub_1000178C0(a1, a2);
}

uint64_t sub_100018258()
{
  return sub_1000176AC();
}

uint64_t LRUCache.__allocating_init(maxCount:maxAge:storeURL:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6 = swift_allocObject();
  LRUCache.init(maxCount:maxAge:storeURL:)(a1, a2, a3);
  return v6;
}

uint64_t LRUCache.init(maxCount:maxAge:storeURL:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v39 = a1;
  uint64_t v40 = a2;
  uint64_t v5 = *(void **)v3;
  uint64_t v6 = sub_1001BEFF0();
  uint64_t v37 = *(void *)(v6 - 8);
  uint64_t v38 = v6;
  __chkstk_darwin(v6, v7);
  uint64_t v36 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100003918(&qword_10020C370);
  uint64_t v11 = __chkstk_darwin(v9 - 8, v10);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v14);
  uint64_t v16 = (char *)&v36 - v15;
  uint64_t v17 = sub_1001BF8E0();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  uint64_t v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = qword_100208328;
  sub_1001BEF30();
  swift_allocObject();
  *(void *)(v3 + v22) = sub_1001BEF20();
  uint64_t v23 = qword_100208330;
  sub_1001BEEF0();
  swift_allocObject();
  *(void *)(v3 + v23) = sub_1001BEEE0();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v21, enum case for TC2LogCategory.daemon(_:), v17);
  sub_1001BFDD0();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
  *(void *)(v3 + 16) = v39;
  *(double *)(v3 + 24) = a3;
  swift_retain();
  sub_1001BEF00();
  swift_release();
  uint64_t v24 = sub_1001BF0B0();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  if (v26(v40, 1, v24) == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(v3 + qword_100208338, 1, 1, v24);
LABEL_5:
    uint64_t v30 = v5[10];
    unint64_t v31 = v5[11];
    uint64_t v33 = v5[12];
    uint64_t v32 = v5[13];
    uint64_t v43 = v30;
    unint64_t v44 = v31;
    uint64_t v45 = v33;
    uint64_t v46 = v32;
    type metadata accessor for LRUCache.DatedValue();
    uint64_t v41 = sub_1001C0E30();
    LODWORD(v42) = 0;
    *((void *)&v42 + 1) = 0;
    uint64_t v43 = v30;
    unint64_t v44 = v31;
    uint64_t v45 = v33;
    uint64_t v46 = v32;
    uint64_t v34 = type metadata accessor for LRUCache.State();
    (*(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v34 - 8) + 32))((char *)&v42 + 8, &v41, v34);
    sub_10001A29C(v40);
    *(_OWORD *)(v3 + qword_100208340) = v42;
    return v3;
  }
  sub_10001A2FC(v40, (uint64_t)v13);
  if (v26((uint64_t)v13, 1, v24) != 1)
  {
    uint64_t v43 = 0x656863616375726CLL;
    unint64_t v44 = 0xEF7473696C702E33;
    long long v28 = v36;
    uint64_t v27 = v37;
    uint64_t v29 = v38;
    (*(void (**)(char *, void, uint64_t))(v37 + 104))(v36, enum case for URL.DirectoryHint.inferFromPath(_:), v38);
    sub_10001A364();
    sub_1001BF0A0();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v24);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v16, 0, 1, v24);
    sub_10001A3B8((uint64_t)v16, v3 + qword_100208338);
    goto LABEL_5;
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1000187C0()
{
  return sub_1001C1180();
}

uint64_t sub_1000188A8()
{
  uint64_t v0 = sub_1001BF2C0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001BF260();
  char v5 = sub_1001BF240();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return v5 & 1;
}

uint64_t LRUCache.addToCache(now:value:)(uint64_t a1)
{
  uint64_t v3 = v1 + qword_100208340;
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + qword_100208340));
  sub_10001A420((uint64_t *)(v3 + 8), (char *)&v6);
  type metadata accessor for LRUCache.State();
  os_unfair_lock_unlock((os_unfair_lock_t)v3);
  uint64_t v4 = v6;
  LRUCache.saveState(now:)(a1);
  return v4;
}

uint64_t sub_100018AC0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v29 = a5;
  uint64_t v41 = a4;
  uint64_t v40 = a6;
  uint64_t v8 = *(void **)a2;
  uint64_t v9 = *(void *)(*(void *)a2 + 80);
  uint64_t v38 = *(void *)(v9 - 8);
  __chkstk_darwin(a1, a2);
  uint64_t v37 = (char *)&v27 - v10;
  uint64_t v36 = sub_1001BF2C0();
  uint64_t v31 = *(void *)(v36 - 8);
  __chkstk_darwin(v36, v11);
  uint64_t v35 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v8[11];
  uint64_t v14 = v8[12];
  uint64_t v15 = v8[13];
  uint64_t v47 = v9;
  uint64_t v48 = v13;
  uint64_t v49 = v14;
  uint64_t v50 = v15;
  uint64_t v16 = type metadata accessor for LRUCache.DatedValue();
  uint64_t v28 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v27 - v18;
  uint64_t v39 = a3;
  sub_1000187C0();
  uint64_t v51 = *a1;
  uint64_t v33 = v9;
  uint64_t v34 = v13;
  uint64_t v42 = v9;
  uint64_t v43 = v13;
  uint64_t v32 = v14;
  uint64_t v44 = v14;
  uint64_t v45 = v15;
  uint64_t v30 = v15;
  uint64_t v46 = v41;
  sub_1001C0E90();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1001C1140();
  swift_bridgeObjectRelease();
  if (v48 != 1)
  {
    sub_1001C0E80();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v19, v16);
    char v23 = 1;
    goto LABEL_8;
  }
  uint64_t result = sub_1001C0E60();
  uint64_t v21 = result - v29;
  if (result < v29)
  {
LABEL_6:
    char v23 = 0;
LABEL_8:
    uint64_t v24 = (uint64_t)v35;
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v35, v39, v36);
    uint64_t v25 = (uint64_t)v37;
    uint64_t v26 = v33;
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v37, v41, v33);
    sub_100017AF4(v24, v25, v26, (uint64_t)v19);
    uint64_t result = sub_1001C0E70();
    *uint64_t v40 = v23;
    return result;
  }
  if (__OFSUB__(result, v29))
  {
    __break(1u);
  }
  else
  {
    Swift::Int v22 = v21 + 1;
    if (!__OFADD__(v21, 1))
    {
      swift_getWitnessTable();
      sub_1001C1170(v22);
      goto LABEL_6;
    }
  }
  __break(1u);
  return result;
}

void LRUCache.saveState(now:)(uint64_t a1)
{
  uint64_t v3 = (void *)*v1;
  uint64_t v4 = sub_100003918(&qword_10020C370);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1001BF0B0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001A2FC((uint64_t)v1 + qword_100208338, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_10001A29C((uint64_t)v7);
    uint64_t v13 = sub_1001C0330();
    os_log_type_t v14 = sub_1001C11D0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "declining to persist lrucache without location", v15, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    uint64_t v16 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v12, v7, v8);
    __chkstk_darwin(v16, v17);
    v22[-4] = v1;
    v22[-3] = a1;
    v22[-2] = v12;
    uint64_t v18 = (os_unfair_lock_s *)((char *)v1 + qword_100208340);
    os_unfair_lock_lock((os_unfair_lock_t)((char *)v1 + qword_100208340));
    sub_10001A444();
    uint64_t v19 = v3[11];
    uint64_t v21 = v3[12];
    uint64_t v20 = v3[13];
    v22[1] = v3[10];
    v22[2] = v19;
    v22[3] = v21;
    v22[4] = v20;
    type metadata accessor for LRUCache.State();
    os_unfair_lock_unlock(v18);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
}

uint64_t LRUCache.getCachedEntries(now:)()
{
  uint64_t v1 = v0 + qword_100208340;
  os_unfair_lock_lock((os_unfair_lock_t)(v0 + qword_100208340));
  sub_10001A468((uint64_t *)(v1 + 8), &v3);
  type metadata accessor for LRUCache.State();
  sub_1001C0E90();
  os_unfair_lock_unlock((os_unfair_lock_t)v1);
  return v3;
}

uint64_t sub_1000192A4@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = (void *)*a2;
  sub_1000187C0();
  uint64_t v20 = *a1;
  uint64_t v12 = v5[10];
  uint64_t v13 = v5[11];
  uint64_t v14 = v5[12];
  uint64_t v15 = v5[13];
  swift_bridgeObjectRetain();
  uint64_t v16 = v12;
  uint64_t v17 = v13;
  uint64_t v18 = v14;
  uint64_t v19 = v15;
  type metadata accessor for LRUCache.DatedValue();
  uint64_t v6 = sub_1001C0E90();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v9 = sub_100017230((void (*)(char *, char *))sub_10001B364, (uint64_t)&v11, v6, v12, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v8);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v9;
  return result;
}

void sub_1000193F8()
{
  sub_1000187C0();
  swift_bridgeObjectRetain();
  type metadata accessor for LRUCache.DatedValue();
  sub_1001C0E90();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v1 = sub_1001BEF10();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v5 = sub_1001C0330();
    os_log_type_t v6 = sub_1001C11F0();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 138412290;
      swift_errorRetain();
      uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
      sub_1001C1310();
      void *v8 = v9;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "failed to archive LRUCache: %@", v7, 0xCu);
      sub_100003918(&qword_100207DA8);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();
    }
  }
  else
  {
    uint64_t v3 = v1;
    unint64_t v4 = v2;
    swift_bridgeObjectRelease();
    sub_1001BF1A0();
    sub_10000792C(v3, v4);
  }
}

uint64_t LRUCache.loadState(now:)(uint64_t a1)
{
  unint64_t v2 = v1;
  unint64_t v4 = (void *)*v1;
  uint64_t v5 = sub_100003918(&qword_10020C370);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1001BF0B0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001A2FC((uint64_t)v2 + qword_100208338, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10001A29C((uint64_t)v8);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v8, v9);
  id v15 = [self defaultManager];
  sub_1001BF070();
  NSString v16 = sub_1001C0BE0();
  swift_bridgeObjectRelease();
  unsigned int v17 = [v15 fileExistsAtPath:v16];

  if (!v17) {
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  uint64_t v18 = sub_1001BF0D0();
  uint64_t v19 = v4[10];
  uint64_t v20 = v4[11];
  uint64_t v21 = v4[12];
  uint64_t v49 = v4[13];
  uint64_t v50 = v19;
  uint64_t v55 = v19;
  uint64_t v56 = v20;
  uint64_t v51 = v20;
  uint64_t v52 = a1;
  uint64_t v53 = v21;
  uint64_t v57 = v21;
  uint64_t v58 = v49;
  unint64_t v23 = v22;
  uint64_t v24 = v18;
  uint64_t v25 = type metadata accessor for LRUCache.DatedValue();
  uint64_t v26 = sub_1001C0E90();
  uint64_t WitnessTable = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_1001BEED0();
  uint64_t v46 = v26;
  uint64_t v47 = v24;
  unint64_t v48 = v23;
  uint64_t v27 = v59;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1001C0E60();
  uint64_t v29 = swift_bridgeObjectRelease();
  uint64_t v31 = v2[2];
  if (v31 >= v28)
  {
    uint64_t v41 = v49;
    uint64_t v36 = v52;
  }
  else
  {
    uint64_t v45 = v25;
    swift_retain();
    uint64_t v32 = sub_1001C0330();
    os_log_type_t v33 = sub_1001C1200();
    int v34 = v33;
    BOOL v35 = os_log_type_enabled(v32, v33);
    uint64_t v36 = v52;
    if (v35)
    {
      uint64_t v37 = (_DWORD *)swift_slowAlloc();
      os_log_t v44 = v32;
      uint64_t v38 = v37;
      *uint64_t v37 = 134218240;
      v43[1] = v37 + 1;
      swift_beginAccess();
      uint64_t v27 = v59;
      swift_bridgeObjectRetain();
      uint64_t v39 = sub_1001C0E60();
      LODWORD(v45) = v34;
      uint64_t v40 = v39;
      swift_bridgeObjectRelease();
      uint64_t v55 = v40;
      sub_1001C1310();
      *((_WORD *)v38 + 6) = 2048;
      uint64_t v55 = v31;
      sub_1001C1310();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v44, (os_log_type_t)v45, "trimming archive, count=%ld, maxCount=%ld", (uint8_t *)v38, 0x16u);
      uint64_t v32 = v44;
      swift_slowDealloc();
    }
    else
    {
      swift_release();
    }

    uint64_t v55 = v27;
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    uint64_t v27 = sub_1001C0D60();
    swift_beginAccess();
    uint64_t v59 = v27;
    uint64_t v29 = swift_bridgeObjectRelease();
    uint64_t v41 = v49;
  }
  __chkstk_darwin(v29, v30);
  v43[-4] = v27;
  v43[-3] = v2;
  v43[-2] = v36;
  uint64_t v42 = (os_unfair_lock_s *)((char *)v2 + qword_100208340);
  swift_bridgeObjectRetain();
  os_unfair_lock_lock(v42);
  sub_10001A544(&v42[2]._os_unfair_lock_opaque);
  uint64_t v55 = v50;
  uint64_t v56 = v51;
  uint64_t v57 = v53;
  uint64_t v58 = v41;
  type metadata accessor for LRUCache.State();
  os_unfair_lock_unlock(v42);
  sub_10000792C(v47, v48);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall LRUCache.deleteSavedState()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003918(&qword_10020C370);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = &v26[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1001BF0B0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = &v26[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10001A2FC(v1 + qword_100208338, (uint64_t)v5);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_10001A29C((uint64_t)v5);
    return;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 32))(v10, v5, v6);
  uint64_t v11 = self;
  id v12 = [v11 defaultManager];
  sub_1001BF070();
  NSString v13 = sub_1001C0BE0();
  swift_bridgeObjectRelease();
  unsigned int v14 = [v12 fileExistsAtPath:v13];

  if (v14)
  {
    id v15 = [v11 defaultManager];
    sub_1001BF020(v16);
    uint64_t v18 = v17;
    id v27 = 0;
    unsigned int v19 = [v15 removeItemAtURL:v17 error:&v27];

    if (v19)
    {
      uint64_t v20 = *(void (**)(unsigned char *, uint64_t))(v7 + 8);
      id v21 = v27;
      v20(v10, v6);
      return;
    }
    id v22 = v27;
    sub_1001BEFE0();

    swift_willThrow();
    unint64_t v23 = sub_1001C0330();
    os_log_type_t v24 = sub_1001C1200();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "failed to delete archive", v25, 2u);
      swift_slowDealloc();
    }
    swift_errorRelease();
  }
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t LRUCache.deinit()
{
  sub_10001A29C(v0 + qword_100208338);
  swift_release();
  swift_release();
  uint64_t v1 = v0 + qword_10021F900;
  uint64_t v2 = sub_1001C0340();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + qword_100208340;
  type metadata accessor for LRUCache.State();
  uint64_t v4 = sub_1001BF4C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t LRUCache.__deallocating_deinit()
{
  LRUCache.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LRUCache.State()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10001A29C(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020C370);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10001A2FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100003918(&qword_10020C370);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10001A364()
{
  unint64_t result = qword_100208348[0];
  if (!qword_100208348[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100208348);
  }
  return result;
}

uint64_t sub_10001A3B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100003918(&qword_10020C370);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001A420@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_100018AC0(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

void sub_10001A444()
{
}

uint64_t sub_10001A468@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000192A4(a1, *(void **)(v2 + 16), a2);
}

void *sub_10001A488(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  if (__src) {
    uint64_t v5 = a2 - (void)__src;
  }
  else {
    uint64_t v5 = 0;
  }
  if (!__dst)
  {
    if (v5 <= 0) {
      return __src;
    }
LABEL_12:
    __src = (void *)sub_1001C15D0();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v5) {
    goto LABEL_12;
  }
  if (__src)
  {
    return memmove(__dst, __src, a2 - (void)__src);
  }
  return __src;
}

uint64_t type metadata accessor for LRUCache.DatedValue()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10001A544(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *a1 = v3;
  return sub_1000187C0();
}

uint64_t sub_10001A5AC@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

void sub_10001A5DC()
{
  sub_10001A6E8();
  if (v0 <= 0x3F)
  {
    sub_1001C0340();
    if (v1 <= 0x3F) {
      swift_initClassMetadata2();
    }
  }
}

uint64_t type metadata accessor for LRUCache()
{
  return swift_getGenericMetadata();
}

void sub_10001A6E8()
{
  if (!qword_1002083D0[0])
  {
    sub_1001BF0B0();
    unint64_t v0 = sub_1001C12F0();
    if (!v1) {
      atomic_store(v0, qword_1002083D0);
    }
  }
}

char *sub_10001A740()
{
  if (!&swift_runtimeSupportsNoncopyableTypes) {
    return (char *)&type metadata for () + 8;
  }
  type metadata accessor for LRUCache.State();
  return (char *)sub_1001BF4C0();
}

uint64_t sub_10001A79C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 40);
}

uint64_t sub_10001A7A4()
{
  uint64_t result = sub_1001BF2C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_10001A870(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = sub_1001BF2C0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80);
  uint64_t v12 = v8 + v11;
  unint64_t v13 = ((v8 + v11) & ~v11) + *(void *)(v10 + 64);
  uint64_t v14 = (*(unsigned char *)(v7 + 80) | *(unsigned char *)(v10 + 80));
  if (v14 > 7 || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v10 + 80)) & 0x100000) != 0 || v13 > 0x18)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v14 + 16) & ~v14));
    swift_retain();
  }
  else
  {
    uint64_t v18 = ~v11;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(((unint64_t)a1 + v12) & v18, ((unint64_t)a2 + v12) & v18, v9);
  }
  return a1;
}

uint64_t sub_10001A9D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BF2C0();
  uint64_t v5 = *(void *)(v4 - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v5)(a1, v4);
  uint64_t v6 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v7 = *(uint64_t (**)(unint64_t))(v6 + 8);
  unint64_t v8 = (*(void *)(v5 + 56) + a1 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return v7(v8);
}

uint64_t sub_10001AA84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001BF2C0();
  uint64_t v7 = *(void *)(v6 - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 16))((*(void *)(v7 + 48) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(void *)(v7 + 48) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_10001AB3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001BF2C0();
  uint64_t v7 = *(void *)(v6 - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 24))((*(void *)(v7 + 40) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(void *)(v7 + 40) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_10001ABF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001BF2C0();
  uint64_t v7 = *(void *)(v6 - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 32))((*(void *)(v7 + 32) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(void *)(v7 + 32) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_10001ACAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001BF2C0();
  uint64_t v7 = *(void *)(v6 - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 40))((*(void *)(v7 + 24) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(void *)(v7 + 24) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_10001AD64(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = sub_1001BF2C0();
  uint64_t v7 = *(void *)(v6 - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v8) {
    unsigned int v12 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v13 = *(void *)(*(void *)(v6 - 8) + 64) + v11;
  if (a2 <= v12) {
    goto LABEL_24;
  }
  uint64_t v14 = (v13 & ~v11) + *(void *)(v9 + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v17 = ((a2 - v12 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_24:
      if (v12)
      {
        if (v8 >= v10)
        {
          unint64_t v23 = *(uint64_t (**)(unsigned __int16 *))(v7 + 48);
          return v23(a1);
        }
        else
        {
          id v21 = *(uint64_t (**)(unint64_t, uint64_t))(v9 + 48);
          return v21(((unint64_t)a1 + v13) & ~v11, v10);
        }
      }
      return 0;
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_24;
  }
LABEL_14:
  int v18 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v18 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v19 = (v13 & ~v11) + *(_DWORD *)(v9 + 64);
    }
    else {
      int v19 = 4;
    }
    switch(v19)
    {
      case 2:
        int v20 = *a1;
        break;
      case 3:
        int v20 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v20 = *(_DWORD *)a1;
        break;
      default:
        int v20 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v20 = 0;
  }
  return v12 + (v20 | v18) + 1;
}

void sub_10001AFC4(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = sub_1001BF2C0();
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v12 = *(unsigned int *)(v11 + 84);
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  if (v12 <= v10) {
    unsigned int v14 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v14 = *(_DWORD *)(v11 + 84);
  }
  uint64_t v15 = *(void *)(*(void *)(v8 - 8) + 64) + v13;
  size_t v16 = (v15 & ~v13) + *(void *)(v11 + 64);
  if (a3 <= v14)
  {
    int v17 = 0;
  }
  else if (v16 <= 3)
  {
    unsigned int v20 = ((a3 - v14 + ~(-1 << (8 * v16))) >> (8 * v16)) + 1;
    if (HIWORD(v20))
    {
      int v17 = 4;
    }
    else if (v20 >= 0x100)
    {
      int v17 = 2;
    }
    else
    {
      int v17 = v20 > 1;
    }
  }
  else
  {
    int v17 = 1;
  }
  if (v14 < a2)
  {
    unsigned int v18 = ~v14 + a2;
    if (v16 < 4)
    {
      int v19 = (v18 >> (8 * v16)) + 1;
      if (v16)
      {
        int v21 = v18 & ~(-1 << (8 * v16));
        bzero(a1, v16);
        if (v16 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v16 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v16);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v16] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v16] = v19;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v16] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x10001B2A4);
    case 4:
      *(_DWORD *)&a1[v16] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v10 >= v12)
        {
          unint64_t v23 = *(void (**)(unsigned char *, uint64_t))(v9 + 56);
          v23(a1, a2);
        }
        else
        {
          id v22 = *(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 56);
          v22((unint64_t)&a1[v15] & ~v13, a2, v12);
        }
      }
      return;
  }
}

uint64_t sub_10001B2CC()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for LRUCache.DatedValue.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10001B300()
{
  return sub_1000188A8() & 1;
}

uint64_t sub_10001B320(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1001BF2C0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10001B364@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v7 = *(_OWORD *)(v2 + 16);
  uint64_t v5 = type metadata accessor for LRUCache.DatedValue();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1 + *(int *)(v5 + 52));
}

uint64_t sub_10001B3F4()
{
  return sub_1001C0BD0() & 1;
}

uint64_t sub_10001B478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

uint64_t getEnumTagSinglePayload for SessionLog.Element.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *sub_10001B510(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10001B5DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_10001B604(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

uint64_t sub_10001B610()
{
  return swift_getWitnessTable();
}

uint64_t sub_10001B62C()
{
  return swift_getWitnessTable();
}

uint64_t sub_10001B648()
{
  return swift_getWitnessTable();
}

uint64_t sub_10001B664()
{
  return 2;
}

uint64_t sub_10001B66C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_100003918(&qword_100208640);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = __chkstk_darwin(v5, v7);
  unsigned int v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v11);
  uint64_t v13 = (char *)v29 - v12;
  unsigned int v14 = (os_unfair_lock_s *)(v2 + OBJC_IVAR____TtC20privatecloudcomputed20NodeStreamController_stateLock);
  os_unfair_lock_lock((os_unfair_lock_t)(v2 + OBJC_IVAR____TtC20privatecloudcomputed20NodeStreamController_stateLock));
  sub_100003918(&qword_100208630);
  sub_10001C220(a1, a2, &v33);
  os_unfair_lock_unlock(v14);
  uint64_t v15 = v33;
  uint64_t v16 = *(void *)(v33 + 64);
  uint64_t v31 = v33 + 64;
  uint64_t v17 = -1 << *(unsigned char *)(v33 + 32);
  if (-v17 < 64) {
    uint64_t v18 = ~(-1 << -(char)v17);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v16;
  v29[1] = -1 << *(unsigned char *)(v33 + 32);
  int64_t v30 = (unint64_t)(63 - v17) >> 6;
  uint64_t v32 = v6 + 16;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v21 = 0;
  while (1)
  {
    if (v19)
    {
      unint64_t v22 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v23 = v22 | (v21 << 6);
      goto LABEL_6;
    }
    int64_t v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_22;
    }
    if (v25 >= v30) {
      goto LABEL_20;
    }
    unint64_t v26 = *(void *)(v31 + 8 * v25);
    int64_t v27 = v21 + 1;
    if (!v26)
    {
      int64_t v27 = v21 + 2;
      if (v21 + 2 >= v30) {
        goto LABEL_20;
      }
      unint64_t v26 = *(void *)(v31 + 8 * v27);
      if (!v26) {
        break;
      }
    }
LABEL_19:
    unint64_t v19 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v27 << 6);
    int64_t v21 = v27;
LABEL_6:
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v13, *(void *)(v15 + 56) + *(void *)(v6 + 72) * v23, v5);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v10, v13, v5);
    sub_1001C0EE0();
    sub_10001DD30();
    uint64_t v24 = swift_allocError();
    sub_1001C0B70();
    uint64_t v33 = v24;
    sub_1001C0EB0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  }
  int64_t v28 = v21 + 3;
  if (v21 + 3 >= v30)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    return sub_10001DD88();
  }
  unint64_t v26 = *(void *)(v31 + 8 * v28);
  if (v26)
  {
    int64_t v27 = v21 + 3;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v27 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v27 >= v30) {
      goto LABEL_20;
    }
    unint64_t v26 = *(void *)(v31 + 8 * v27);
    ++v28;
    if (v26) {
      goto LABEL_19;
    }
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_10001B964@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v53 = a1;
  uint64_t v9 = sub_100003918(&qword_100208640);
  uint64_t v54 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v10);
  uint64_t v52 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100003918(&qword_100208648);
  uint64_t v14 = __chkstk_darwin(v12 - 8, v13);
  uint64_t v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v14, v17);
  unsigned int v20 = (char *)&v50 - v19;
  __chkstk_darwin(v18, v21);
  unint64_t v23 = (char *)&v50 - v22;
  uint64_t v24 = type metadata accessor for NodeStreamController.StateMachine.State(0);
  __chkstk_darwin(v24, v25);
  int64_t v27 = (uint64_t *)((char *)&v50 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((sub_1001C1040() & 1) == 0)
  {
    uint64_t v50 = a3;
    uint64_t v51 = a4;
    sub_10001DD90((uint64_t)v5, (uint64_t)v27);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v32 = *v27;
        uint64_t v31 = v27[1];
        uint64_t v33 = sub_100003918(&qword_100208638);
        sub_10001E54C((uint64_t)v27 + *(int *)(v33 + 48), (uint64_t)v20);
        BOOL v34 = v32 == v53 && v31 == a2;
        if (v34 || (sub_1001C1840() & 1) != 0)
        {
          uint64_t v35 = v33;
          sub_10001E54C((uint64_t)v20, (uint64_t)v16);
          uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48))(v16, 1, v9);
          uint64_t v36 = v50;
          if (result == 1)
          {
            sub_100010360((uint64_t)v16, &qword_100208648);
            sub_10001CE08((uint64_t)v5);
            uint64_t v37 = (char *)v5 + *(int *)(v35 + 48);
            *uint64_t v5 = v32;
            v5[1] = v31;
            (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v37, v36, v9);
            uint64_t v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56);
            v54 += 56;
            v38((uint64_t)v37, 0, 1, v9);
            swift_storeEnumTagMultiPayload();
            return v38(v51, 1, 1, v9);
          }
          goto LABEL_24;
        }
        sub_100010360((uint64_t)v20, &qword_100208648);
        swift_bridgeObjectRelease();
      }
      uint64_t v49 = v51;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16))(v51, v50, v9);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v54 + 56))(v49, 0, 1, v9);
    }
    uint64_t v39 = *v27;
    uint64_t v40 = a2;
    if (*(void *)(*v27 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v41 = sub_100169E3C(v53, a2);
      if (v42)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v54 + 16))(v23, *(void *)(v39 + 56) + *(void *)(v54 + 72) * v41, v9);
        uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56);
        v43(v23, 0, 1, v9);
      }
      else
      {
        uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56);
        v43(v23, 1, 1, v9);
      }
      uint64_t v44 = v51;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v23, 1, v9) != 1)
      {
        uint64_t result = sub_100010360((uint64_t)v23, &qword_100208648);
        __break(1u);
LABEL_24:
        __break(1u);
        return result;
      }
    }
    else
    {
      uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56);
      v43(v23, 1, 1, v9);
      uint64_t v44 = v51;
    }
    sub_100010360((uint64_t)v23, &qword_100208648);
    uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 16);
    v54 += 16;
    uint64_t v46 = (uint64_t)v52;
    v45(v52, v50, v9);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v55 = v39;
    sub_1000EB218(v46, v53, v40, isUniquelyReferenced_nonNull_native);
    uint64_t v48 = v55;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10001CE08((uint64_t)v5);
    *uint64_t v5 = v48;
    swift_storeEnumTagMultiPayload();
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v43)(v44, 1, 1, v9);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16))(a4, a3, v9);
  int64_t v28 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v54 + 56);
  return v28(a4, 0, 1, v9);
}

uint64_t sub_10001BF10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unsigned int v4 = v3;
  uint64_t v8 = sub_100003918(&qword_100208648);
  uint64_t v10 = __chkstk_darwin(v8 - 8, v9);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v13);
  uint64_t v15 = (char *)&v30 - v14;
  uint64_t v16 = type metadata accessor for NodeStreamController.StateMachine.State(0);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (uint64_t *)((char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001DD90((uint64_t)v4, (uint64_t)v19);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
LABEL_9:
      uint64_t v26 = sub_100003918(&qword_100208640);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(a3, 1, 1, v26);
    }
    uint64_t v22 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v23 = sub_100003918(&qword_100208638);
    sub_10001E54C((uint64_t)v19 + *(int *)(v23 + 48), (uint64_t)v15);
    if (v22 == a1 && v21 == a2)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v25 = sub_1001C1840();
      swift_bridgeObjectRelease();
      if ((v25 & 1) == 0)
      {
        sub_100010360((uint64_t)v15, &qword_100208648);
        goto LABEL_9;
      }
    }
    sub_10001CE08((uint64_t)v4);
    swift_storeEnumTagMultiPayload();
    return sub_10001E54C((uint64_t)v15, a3);
  }
  else
  {
    uint64_t v31 = *v19;
    sub_10018DE74(a1, a2, (uint64_t)v12);
    uint64_t v28 = sub_100003918(&qword_100208640);
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v12, 1, v28) == 1)
    {
      swift_bridgeObjectRelease();
      sub_100010360((uint64_t)v12, &qword_100208648);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56))(a3, 1, 1, v28);
    }
    else
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(a3, v12, v28);
      sub_10001CE08((uint64_t)v4);
      void *v4 = v31;
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v29 + 56))(a3, 0, 1, v28);
    }
  }
}

uint64_t sub_10001C220@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  unsigned int v4 = v3;
  uint64_t v8 = sub_100003918(&qword_100208648);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for NodeStreamController.StateMachine.State(0);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (uint64_t *)((char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001DD90((uint64_t)v4, (uint64_t)v15);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result)
  {
    if (result == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v19 = sub_100003918(&qword_100208638);
      uint64_t result = sub_100010360((uint64_t)v15 + *(int *)(v19 + 48), &qword_100208648);
    }
    __break(1u);
  }
  else
  {
    uint64_t v21 = *v15;
    sub_10018DE74(a1, a2, (uint64_t)v11);
    sub_10001CE08((uint64_t)v4);
    uint64_t v17 = (uint64_t)v4 + *(int *)(sub_100003918(&qword_100208638) + 48);
    uint64_t *v4 = a1;
    v4[1] = a2;
    sub_10001E4E4((uint64_t)v11, v17);
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100010360((uint64_t)v11, &qword_100208648);
    *a3 = v18;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10001C3D4()
{
  uint64_t v1 = sub_100003918(&qword_100208648);
  __chkstk_darwin(v1 - 8, v2);
  unsigned int v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for NodeStreamController.StateMachine.State(0);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (os_unfair_lock_s *)(v0 + OBJC_IVAR____TtC20privatecloudcomputed20NodeStreamController_stateLock);
  os_unfair_lock_lock((os_unfair_lock_t)(v0 + OBJC_IVAR____TtC20privatecloudcomputed20NodeStreamController_stateLock));
  uint64_t v10 = sub_100003918(&qword_100208630);
  sub_10001DD90((uint64_t)v9 + *(int *)(v10 + 28), (uint64_t)v8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
LABEL_7:
      os_unfair_lock_unlock(v9);
      goto LABEL_8;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_100003918(&qword_100208638);
    sub_10001E54C((uint64_t)&v8[*(int *)(v12 + 48)], (uint64_t)v4);
    uint64_t v13 = sub_100003918(&qword_100208640);
    int v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v4, 1, v13);
    sub_100010360((uint64_t)v4, &qword_100208648);
    os_unfair_lock_unlock(v9);
    if (v14 != 1)
    {
LABEL_6:
      __break(1u);
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v15 = *(void *)(*(void *)v8 + 16);
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(v9);
    if (v15) {
      goto LABEL_6;
    }
  }
LABEL_8:
  sub_100010360((uint64_t)v9, &qword_100208630);
  return v0;
}

uint64_t sub_10001C5A4()
{
  sub_10001C3D4();
  return swift_deallocClassInstance();
}

uint64_t sub_10001C5FC()
{
  return type metadata accessor for NodeStreamController(0);
}

uint64_t type metadata accessor for NodeStreamController(uint64_t a1)
{
  return sub_10001C958(a1, (uint64_t *)&unk_1002085A0);
}

void sub_10001C624()
{
  sub_10001C6B4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10001C6B4()
{
  if (!qword_1002085B0)
  {
    type metadata accessor for NodeStreamController.StateMachine(255);
    unint64_t v0 = sub_1001BF4C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1002085B0);
    }
  }
}

uint64_t type metadata accessor for NodeStreamController.StateMachine(uint64_t a1)
{
  return sub_10001C958(a1, qword_1002086A8);
}

char *sub_10001C72C()
{
  if (&swift_runtimeSupportsNoncopyableTypes) {
    return (char *)sub_100003918(&qword_100208630);
  }
  else {
    return (char *)&type metadata for () + 8;
  }
}

uint64_t *sub_10001C754(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for NodeStreamController.StateMachine.State(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(v4 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      swift_bridgeObjectRetain();
      uint64_t v10 = *(int *)(sub_100003918(&qword_100208638) + 48);
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_100003918(&qword_100208640);
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        uint64_t v15 = sub_100003918(&qword_100208648);
        memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
      goto LABEL_10;
    }
    if (!EnumCaseMultiPayload)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t type metadata accessor for NodeStreamController.StateMachine.State(uint64_t a1)
{
  return sub_10001C958(a1, (uint64_t *)&unk_100208750);
}

uint64_t sub_10001C958(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10001C990(uint64_t a1)
{
  type metadata accessor for NodeStreamController.StateMachine.State(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = a1 + *(int *)(sub_100003918(&qword_100208638) + 48);
    uint64_t v4 = sub_100003918(&qword_100208640);
    uint64_t v6 = *(void *)(v4 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v3, 1, v4);
    if (!result)
    {
      int v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
      return v5(v3, v4);
    }
  }
  else if (!result)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_10001CAB0(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for NodeStreamController.StateMachine.State(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    swift_bridgeObjectRetain();
    uint64_t v7 = *(int *)(sub_100003918(&qword_100208638) + 48);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_100003918(&qword_100208640);
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_100003918(&qword_100208648);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    goto LABEL_8;
  }
  if (!EnumCaseMultiPayload)
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
LABEL_8:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  return a1;
}

void *sub_10001CC50(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_10001CE08((uint64_t)a1);
    uint64_t v4 = type metadata accessor for NodeStreamController.StateMachine.State(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      uint64_t v6 = *(int *)(sub_100003918(&qword_100208638) + 48);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_100003918(&qword_100208640);
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        uint64_t v11 = sub_100003918(&qword_100208648);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      goto LABEL_9;
    }
    if (!EnumCaseMultiPayload)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10001CE08(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NodeStreamController.StateMachine.State(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_10001CE64(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4 = type metadata accessor for NodeStreamController.StateMachine.State(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(sub_100003918(&qword_100208638) + 48);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_100003918(&qword_100208640);
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      uint64_t v10 = sub_100003918(&qword_100208648);
      memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_10001CFE0(_OWORD *a1, _OWORD *a2)
{
  if (a1 != a2)
  {
    sub_10001CE08((uint64_t)a1);
    uint64_t v4 = type metadata accessor for NodeStreamController.StateMachine.State(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v5 = *(int *)(sub_100003918(&qword_100208638) + 48);
      uint64_t v6 = (char *)a1 + v5;
      uint64_t v7 = (char *)a2 + v5;
      uint64_t v8 = sub_100003918(&qword_100208640);
      uint64_t v9 = *(void *)(v8 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      {
        uint64_t v10 = sub_100003918(&qword_100208648);
        memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10001D16C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10001D180);
}

uint64_t sub_10001D180(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NodeStreamController.StateMachine.State(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_10001D1EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10001D200);
}

uint64_t sub_10001D200(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NodeStreamController.StateMachine.State(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_10001D270()
{
  uint64_t result = type metadata accessor for NodeStreamController.StateMachine.State(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_10001D2FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      swift_bridgeObjectRetain();
      uint64_t v10 = *(int *)(sub_100003918(&qword_100208638) + 48);
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_100003918(&qword_100208640);
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        uint64_t v15 = sub_100003918(&qword_100208648);
        memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
      goto LABEL_10;
    }
    if (!EnumCaseMultiPayload)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t sub_10001D4D8(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = a1 + *(int *)(sub_100003918(&qword_100208638) + 48);
    uint64_t v4 = sub_100003918(&qword_100208640);
    uint64_t v6 = *(void *)(v4 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v3, 1, v4);
    if (!result)
    {
      int v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
      return v5(v3, v4);
    }
  }
  else if (!result)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_10001D5E8(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    swift_bridgeObjectRetain();
    uint64_t v8 = *(int *)(sub_100003918(&qword_100208638) + 48);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_100003918(&qword_100208640);
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = sub_100003918(&qword_100208648);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    goto LABEL_8;
  }
  if (!EnumCaseMultiPayload)
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
LABEL_8:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *sub_10001D780(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10001CE08((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      uint64_t v7 = *(int *)(sub_100003918(&qword_100208638) + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_100003918(&qword_100208640);
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        uint64_t v12 = sub_100003918(&qword_100208648);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      goto LABEL_9;
    }
    if (!EnumCaseMultiPayload)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_10001D930(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v6 = *(int *)(sub_100003918(&qword_100208638) + 48);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_100003918(&qword_100208640);
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      uint64_t v11 = sub_100003918(&qword_100208648);
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_10001DAA4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10001CE08((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v6 = *(int *)(sub_100003918(&qword_100208638) + 48);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_100003918(&qword_100208640);
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        uint64_t v11 = sub_100003918(&qword_100208648);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void sub_10001DC28()
{
  v1[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_10001DCD4();
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v1[5] = v1;
    swift_initEnumMetadataMultiPayload();
  }
}

void sub_10001DCD4()
{
  if (!qword_100208760)
  {
    sub_1000166C8(&qword_100208640);
    unint64_t v0 = sub_1001C12F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100208760);
    }
  }
}

unint64_t sub_10001DD30()
{
  unint64_t result = qword_100208790;
  if (!qword_100208790)
  {
    sub_1001C0EE0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100208790);
  }
  return result;
}

uint64_t sub_10001DD88()
{
  return swift_release();
}

uint64_t sub_10001DD90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NodeStreamController.StateMachine.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001DDF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return _swift_task_switch(sub_10001DE18, 0, 0);
}

uint64_t sub_10001DE18()
{
  uint64_t v1 = *(void *)(v0 + 40);
  long long v6 = *(_OWORD *)(v0 + 24);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = v6;
  *(void *)(v2 + 32) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10001DF24;
  uint64_t v4 = *(void *)(v0 + 16);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD00000000000001BLL, 0x80000001001C3450, sub_10001E5B4, v2, (char *)&type metadata for () + 8);
}

uint64_t sub_10001DF24()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_10001E060, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_10001E060()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10001E0C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_100003918(&qword_100208640);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100003918(&qword_100208648);
  uint64_t v15 = __chkstk_darwin(v13 - 8, v14);
  uint64_t v17 = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v18);
  uint64_t v20 = (char *)v25 - v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
  uint64_t v21 = (os_unfair_lock_s *)(a2 + OBJC_IVAR____TtC20privatecloudcomputed20NodeStreamController_stateLock);
  os_unfair_lock_lock(v21);
  sub_100003918(&qword_100208630);
  sub_10001B964(a3, a4, (uint64_t)v12, (uint64_t)v20);
  os_unfair_lock_unlock(v21);
  uint64_t v22 = *(void (**)(char *, uint64_t))(v9 + 8);
  v22(v12, v8);
  sub_10001E4E4((uint64_t)v20, (uint64_t)v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v17, 1, v8) == 1)
  {
    sub_100010360((uint64_t)v20, &qword_100208648);
    return sub_100010360((uint64_t)v17, &qword_100208648);
  }
  else
  {
    sub_1001C0EE0();
    sub_10001DD30();
    uint64_t v24 = swift_allocError();
    sub_1001C0B70();
    v25[1] = v24;
    sub_1001C0EB0();
    sub_100010360((uint64_t)v20, &qword_100208648);
    return ((uint64_t (*)(char *, uint64_t))v22)(v17, v8);
  }
}

uint64_t sub_10001E338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100003918(&qword_100208648);
  uint64_t v8 = __chkstk_darwin(v6 - 8, v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v11);
  uint64_t v13 = (char *)&v18 - v12;
  uint64_t v14 = (os_unfair_lock_s *)(a1 + OBJC_IVAR____TtC20privatecloudcomputed20NodeStreamController_stateLock);
  os_unfair_lock_lock(v14);
  sub_100003918(&qword_100208630);
  sub_10001BF10(a2, a3, (uint64_t)v13);
  os_unfair_lock_unlock(v14);
  sub_10001E4E4((uint64_t)v13, (uint64_t)v10);
  uint64_t v15 = sub_100003918(&qword_100208640);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v10, 1, v15) == 1)
  {
    sub_100010360((uint64_t)v13, &qword_100208648);
    return sub_100010360((uint64_t)v10, &qword_100208648);
  }
  else
  {
    sub_1001C0EC0();
    sub_100010360((uint64_t)v13, &qword_100208648);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v10, v15);
  }
}

uint64_t sub_10001E4E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100003918(&qword_100208648);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001E54C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100003918(&qword_100208648);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001E5B4(uint64_t a1)
{
  return sub_10001E0C4(a1, v1[2], v1[3], v1[4]);
}

void TC2ResolvedSetup.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
}

uint64_t static TC2ResolvedSetup.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a1 == a4 && a2 == a5 || (char v8 = sub_1001C1840(), v9 = 0, (v8 & 1) != 0)) {
    char v9 = a3 ^ a6 ^ 1;
  }
  return v9 & 1;
}

Swift::Int TC2ResolvedSetup.hashValue.getter(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1001C1990();
}

Swift::Int sub_10001E6F0()
{
  Swift::UInt8 v1 = *(unsigned char *)(v0 + 16);
  sub_1001C1950();
  swift_bridgeObjectRetain();
  sub_1001C0CB0();
  swift_bridgeObjectRelease();
  sub_1001C1970(v1);
  return sub_1001C1990();
}

void sub_10001E764()
{
  Swift::UInt8 v1 = *(unsigned char *)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_1001C0CB0();
  swift_bridgeObjectRelease();
  sub_1001C1970(v1);
}

Swift::Int sub_10001E7C0()
{
  Swift::UInt8 v1 = *(unsigned char *)(v0 + 16);
  sub_1001C1950();
  swift_bridgeObjectRetain();
  sub_1001C0CB0();
  swift_bridgeObjectRelease();
  sub_1001C1970(v1);
  return sub_1001C1990();
}

unint64_t sub_10001E834()
{
  unint64_t result = qword_1002087A0;
  if (!qword_1002087A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002087A0);
  }
  return result;
}

uint64_t sub_10001E888(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  int v3 = *(unsigned __int8 *)(a2 + 16);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return v2 ^ v3 ^ 1u;
  }
  char v5 = sub_1001C1840();
  uint64_t result = 0;
  if (v5) {
    return v2 ^ v3 ^ 1u;
  }
  return result;
}

uint64_t sub_10001E8EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TC2ResolvedSetup(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

__n128 initializeWithTake for TC2ResolvedSetup(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for TC2ResolvedSetup(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for TC2ResolvedSetup(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TC2ResolvedSetup(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TC2ResolvedSetup()
{
  return &type metadata for TC2ResolvedSetup;
}

uint64_t sub_10001EA68(void *a1)
{
  uint64_t v3 = sub_100003918(&qword_1002088C0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000D934(a1, a1[3]);
  sub_100021734();
  sub_1001C19C0();
  v9[15] = 0;
  sub_1001C1730();
  if (!v1)
  {
    type metadata accessor for SessionLog.Element();
    v9[14] = 1;
    sub_1001BF2C0();
    sub_100021788(qword_1002084E8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1001C1740();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_10001EC20@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v28 = sub_1001BF2C0();
  uint64_t v26 = *(void *)(v28 - 8);
  __chkstk_darwin(v28, v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_100003918(&qword_1002088B0);
  uint64_t v27 = *(void *)(v29 - 8);
  __chkstk_darwin(v29, v7);
  char v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SessionLog.Element();
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (uint64_t *)((char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000D934(a1, a1[3]);
  sub_100021734();
  sub_1001C19B0();
  if (!v2)
  {
    uint64_t v24 = v10;
    uint64_t v14 = v27;
    uint64_t v15 = v28;
    uint64_t v16 = v6;
    char v31 = 0;
    uint64_t v17 = v29;
    uint64_t v18 = sub_1001C1680();
    uint64_t v23 = v13;
    *uint64_t v13 = v18;
    char v30 = 1;
    sub_100021788(&qword_1002084D8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1001C1690();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v17);
    uint64_t v19 = v25;
    uint64_t v20 = (uint64_t)v23;
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))((char *)v23 + *(int *)(v24 + 20), v16, v15);
    sub_10002080C(v20, v19);
  }
  return sub_100003E90((uint64_t)a1);
}

uint64_t sub_10001EF18(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_100003918(&qword_100208890);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D934(a1, a1[3]);
  sub_100021528();
  sub_1001C19C0();
  v10[1] = a2;
  sub_100003918(&qword_100208870);
  sub_100021658();
  sub_1001C1740();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

BOOL sub_10001F068(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_10001F080()
{
  if (*v0) {
    return 0x6D617473656D6974;
  }
  else {
    return 0x746E756F63;
  }
}

uint64_t sub_10001F0BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000212A8(a1, a2);
  *a3 = result;
  return result;
}

void sub_10001F0E4(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_10001F0F0(uint64_t a1)
{
  unint64_t v2 = sub_100021734();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10001F12C(uint64_t a1)
{
  unint64_t v2 = sub_100021734();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10001F168@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10001EC20(a1, a2);
}

uint64_t sub_10001F180(void *a1)
{
  return sub_10001EA68(a1);
}

uint64_t sub_10001F198()
{
  return 6778732;
}

uint64_t sub_10001F1A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 6778732 && a2 == 0xE300000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1001C1840();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_10001F230(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_10001F23C(uint64_t a1)
{
  unint64_t v2 = sub_100021528();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10001F278(uint64_t a1)
{
  unint64_t v2 = sub_100021528();
  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_10001F2B4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1000213A0(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_10001F2E0(void *a1)
{
  return sub_10001EF18(a1, *v1);
}

uint64_t sub_10001F2FC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v63 = a1;
  uint64_t v7 = sub_100003918(&qword_1002087C8);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v60 = (uint64_t)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100003918(&qword_10020C350);
  uint64_t v58 = *(void *)(v10 - 8);
  uint64_t v59 = v10;
  __chkstk_darwin(v10, v11);
  uint64_t v57 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1001BF2C0();
  uint64_t v13 = *(void *)(v64 - 8);
  uint64_t v15 = __chkstk_darwin(v64, v14);
  uint64_t v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v18);
  uint64_t v56 = (char *)&v54 - v19;
  uint64_t v61 = type metadata accessor for SessionLog.Element();
  uint64_t v55 = *(void *)(v61 - 8);
  uint64_t v21 = __chkstk_darwin(v61, v20);
  uint64_t v23 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v21, v24);
  uint64_t v27 = (char *)&v54 - v26;
  uint64_t v29 = __chkstk_darwin(v25, v28);
  char v31 = (uint64_t *)((char *)&v54 - v30);
  __chkstk_darwin(v29, v32);
  BOOL v34 = (uint64_t *)((char *)&v54 - v33);
  uint64_t v62 = a2;
  uint64_t v35 = a3;
  uint64_t v36 = a3;
  uint64_t v37 = v63;
  sub_10001F7AC(a2, v36);
  uint64_t v38 = *v4;
  if (!*(void *)(*v4 + 16)) {
    goto LABEL_7;
  }
  unint64_t v39 = sub_100169EB4(v37);
  if ((v40 & 1) == 0) {
    goto LABEL_7;
  }
  sub_1000202B4(*(void *)(v38 + 56) + *(void *)(v55 + 72) * v39, (uint64_t)v27);
  sub_10002080C((uint64_t)v27, (uint64_t)v31);
  unint64_t v41 = (char *)v31 + *(int *)(v61 + 20);
  uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  uint64_t v55 = v13 + 16;
  v54(v17, v41, v64);
  sub_10000D934(v35, v35[3]);
  char v42 = v57;
  sub_1001BFA50();
  sub_1001BF8F0();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v42, v59);
  uint64_t v43 = v56;
  sub_1001BF250();
  uint64_t v44 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v45 = v17;
  uint64_t v46 = v64;
  v44(v45, v64);
  char v47 = sub_1001BF230();
  v44(v43, v46);
  if ((v47 & 1) == 0)
  {
    sub_100020318((uint64_t)v31);
    uint64_t v37 = v63;
LABEL_7:
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)v34 + *(int *)(v61 + 20), v62, v64);
    uint64_t v51 = 1;
    goto LABEL_8;
  }
  uint64_t v48 = *v31;
  uint64_t result = sub_100020318((uint64_t)v31);
  BOOL v50 = __CFADD__(v48, 1);
  uint64_t v51 = v48 + 1;
  if (!v50)
  {
    v54((char *)v34 + *(int *)(v61 + 20), (char *)v62, v64);
    uint64_t v37 = v63;
LABEL_8:
    *BOOL v34 = v51;
    sub_1000202B4((uint64_t)v34, (uint64_t)v23);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v65 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    uint64_t v53 = v60;
    sub_100020B30((uint64_t)v23, v37, isUniquelyReferenced_nonNull_native, v60);
    uint64_t *v4 = v65;
    swift_bridgeObjectRelease();
    sub_100010360(v53, &qword_1002087C8);
    return sub_100020318((uint64_t)v34);
  }
  __break(1u);
  return result;
}

uint64_t sub_10001F7AC(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v17 = a1;
  uint64_t v18 = sub_1001BF2C0();
  uint64_t v5 = *(void *)(v18 - 8);
  __chkstk_darwin(v18, v6);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100003918(&qword_10020C350);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D934(a2, a2[3]);
  sub_1001BFA50();
  sub_1001BF8F0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  sub_1001BF260();
  uint64_t v14 = *v3;
  uint64_t v20 = v8;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_10001FD88((uint64_t)sub_10001FC24, (uint64_t)v19, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *uint64_t v3 = v15;
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v18);
}

BOOL sub_10001F9C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v30 = a3;
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  uint64_t v3 = sub_1001BF2C0();
  uint64_t v28 = *(void *)(v3 - 8);
  uint64_t v29 = v3;
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100003918(&qword_1002087B8);
  uint64_t v8 = v7 - 8;
  uint64_t v10 = __chkstk_darwin(v7, v9);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v13);
  uint64_t v15 = (char *)&v25 - v14;
  uint64_t v16 = (char *)&v25 + *(int *)(v8 + 56) - v14;
  uint64_t v17 = sub_1001BF310();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v19(v15, v26, v17);
  sub_1000202B4(v27, (uint64_t)v16);
  uint64_t v20 = (uint64_t)&v12[*(int *)(v8 + 56)];
  v19(v12, (uint64_t)v15, v17);
  sub_1000202B4((uint64_t)v16, v20);
  uint64_t v21 = type metadata accessor for SessionLog.Element();
  uint64_t v23 = v28;
  uint64_t v22 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v6, v20 + *(int *)(v21 + 20), v29);
  sub_100020318(v20);
  LOBYTE(v20) = sub_1001BF240();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v22);
  sub_100010360((uint64_t)v15, &qword_1002087B8);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v12, v17);
  return (v20 & 1) == 0;
}

BOOL sub_10001FC24(uint64_t a1, uint64_t a2)
{
  return sub_10001F9C4(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_10001FC44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for SessionLog.Element();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = __chkstk_darwin(v5, v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v11);
  uint64_t v13 = (uint64_t *)((char *)&v18 - v12);
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  unint64_t v14 = sub_100169EB4(a2);
  if ((v15 & 1) == 0) {
    return 0;
  }
  sub_1000202B4(*(void *)(a3 + 56) + *(void *)(v6 + 72) * v14, (uint64_t)v10);
  sub_10002080C((uint64_t)v10, (uint64_t)v13);
  if (sub_1001BF240()) {
    uint64_t v16 = *v13;
  }
  else {
    uint64_t v16 = 0;
  }
  sub_100020318((uint64_t)v13);
  return v16;
}

uint64_t sub_10001FD88(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a2;
  uint64_t v6 = (uint64_t (*)(char *, char *))isStackAllocationSafe;
  char v7 = *(unsigned char *)(a3 + 32);
  unint64_t v8 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe, a2);
    bzero((char *)&v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    uint64_t v10 = sub_10001FF00((unint64_t *)((char *)&v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, a3, v6);
    if (v3) {
      swift_willThrow();
    }
    else {
      return v10;
    }
  }
  else
  {
    uint64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    uint64_t v5 = sub_10001FF00((unint64_t *)v11, v8, a3, v6);
    swift_slowDealloc();
  }
  return v5;
}

uint64_t sub_10001FF00(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, char *))
{
  char v40 = a4;
  uint64_t v30 = a2;
  char v31 = a1;
  uint64_t v6 = type metadata accessor for SessionLog.Element();
  uint64_t v39 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8, v7);
  size_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_1001BF310();
  uint64_t result = __chkstk_darwin(v38, v10);
  unint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v15 = 0;
  unint64_t v41 = (void *)a3;
  uint64_t v16 = *(void *)(a3 + 64);
  uint64_t v32 = 0;
  uint64_t v33 = a3 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  int64_t v34 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v35 = v12 + 16;
  uint64_t v36 = (uint64_t (**)(char *, uint64_t))(v12 + 8);
  uint64_t v37 = v12;
  while (v19)
  {
    unint64_t v20 = __clz(__rbit64(v19));
    v19 &= v19 - 1;
    unint64_t v21 = v20 | (v15 << 6);
LABEL_17:
    uint64_t v25 = v38;
    uint64_t v26 = v41;
    (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v14, v41[6] + *(void *)(v37 + 72) * v21, v38);
    sub_1000202B4(v26[7] + *(void *)(v39 + 72) * v21, (uint64_t)v9);
    char v27 = v40(v14, v9);
    if (v4)
    {
      sub_100020318((uint64_t)v9);
      return (*v36)(v14, v25);
    }
    char v28 = v27;
    sub_100020318((uint64_t)v9);
    uint64_t result = (*v36)(v14, v25);
    if (v28)
    {
      *(unint64_t *)((char *)v31 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      BOOL v22 = __OFADD__(v32++, 1);
      if (v22) {
        goto LABEL_30;
      }
    }
  }
  BOOL v22 = __OFADD__(v15++, 1);
  if (v22)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v15 >= v34) {
    return sub_100020374(v31, v30, v32, v41);
  }
  unint64_t v23 = *(void *)(v33 + 8 * v15);
  if (v23)
  {
LABEL_16:
    unint64_t v19 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v15 << 6);
    goto LABEL_17;
  }
  int64_t v24 = v15 + 1;
  if (v15 + 1 >= v34) {
    return sub_100020374(v31, v30, v32, v41);
  }
  unint64_t v23 = *(void *)(v33 + 8 * v24);
  if (v23) {
    goto LABEL_15;
  }
  int64_t v24 = v15 + 2;
  if (v15 + 2 >= v34) {
    return sub_100020374(v31, v30, v32, v41);
  }
  unint64_t v23 = *(void *)(v33 + 8 * v24);
  if (v23) {
    goto LABEL_15;
  }
  int64_t v24 = v15 + 3;
  if (v15 + 3 >= v34) {
    return sub_100020374(v31, v30, v32, v41);
  }
  unint64_t v23 = *(void *)(v33 + 8 * v24);
  if (v23)
  {
LABEL_15:
    int64_t v15 = v24;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v15 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v15 >= v34) {
      return sub_100020374(v31, v30, v32, v41);
    }
    unint64_t v23 = *(void *)(v33 + 8 * v15);
    ++v24;
    if (v23) {
      goto LABEL_16;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for SessionLog.Element()
{
  uint64_t result = qword_100208828;
  if (!qword_100208828) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000202B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SessionLog.Element();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100020318(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SessionLog.Element();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100020374(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = type metadata accessor for SessionLog.Element();
  uint64_t v56 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8 - 8, v9);
  uint64_t v61 = (uint64_t)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v12);
  uint64_t v55 = (uint64_t)&v48 - v13;
  uint64_t v60 = sub_1001BF310();
  uint64_t v57 = *(void *)(v60 - 8);
  uint64_t v15 = __chkstk_darwin(v60, v14);
  uint64_t v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v18);
  uint64_t v54 = (char *)&v48 - v19;
  if (!a3) {
    return (uint64_t)&_swiftEmptyDictionarySingleton;
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  sub_100003918(&qword_1002087A8);
  uint64_t result = sub_1001C15C0();
  uint64_t v21 = result;
  uint64_t v48 = a1;
  uint64_t v49 = a2;
  if (a2 < 1) {
    unint64_t v22 = 0;
  }
  else {
    unint64_t v22 = *a1;
  }
  uint64_t v23 = 0;
  uint64_t v51 = v57 + 32;
  uint64_t v52 = v57 + 16;
  uint64_t v24 = result + 64;
  uint64_t v53 = v17;
  BOOL v50 = a4;
  uint64_t v25 = v60;
  while (1)
  {
    if (v22)
    {
      uint64_t v58 = (v22 - 1) & v22;
      uint64_t v59 = v23;
      unint64_t v26 = __clz(__rbit64(v22)) | (v23 << 6);
    }
    else
    {
      uint64_t v27 = v23 + 1;
      if (__OFADD__(v23, 1)) {
        goto LABEL_40;
      }
      if (v27 >= v49) {
        return v21;
      }
      unint64_t v28 = v48[v27];
      uint64_t v29 = v23 + 1;
      if (!v28)
      {
        uint64_t v29 = v23 + 2;
        if (v23 + 2 >= v49) {
          return v21;
        }
        unint64_t v28 = v48[v29];
        if (!v28)
        {
          uint64_t v29 = v23 + 3;
          if (v23 + 3 >= v49) {
            return v21;
          }
          unint64_t v28 = v48[v29];
          if (!v28)
          {
            uint64_t v30 = v23 + 4;
            if (v23 + 4 >= v49) {
              return v21;
            }
            unint64_t v28 = v48[v30];
            if (!v28)
            {
              while (1)
              {
                uint64_t v29 = v30 + 1;
                if (__OFADD__(v30, 1)) {
                  goto LABEL_41;
                }
                if (v29 >= v49) {
                  return v21;
                }
                unint64_t v28 = v48[v29];
                ++v30;
                if (v28) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v29 = v23 + 4;
          }
        }
      }
LABEL_24:
      uint64_t v58 = (v28 - 1) & v28;
      uint64_t v59 = v29;
      unint64_t v26 = __clz(__rbit64(v28)) + (v29 << 6);
    }
    uint64_t v31 = v57;
    uint64_t v32 = *(void *)(v57 + 72);
    uint64_t v33 = v54;
    (*(void (**)(char *, unint64_t, uint64_t))(v57 + 16))(v54, a4[6] + v32 * v26, v25);
    uint64_t v34 = *(void *)(v56 + 72);
    uint64_t v35 = a4[7] + v34 * v26;
    uint64_t v36 = v55;
    sub_1000202B4(v35, v55);
    uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
    uint64_t v38 = v53;
    v37(v53, v33, v25);
    sub_10002080C(v36, v61);
    sub_100021788((unint64_t *)&qword_1002087B0, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t result = sub_1001C0BA0();
    uint64_t v39 = -1 << *(unsigned char *)(v21 + 32);
    unint64_t v40 = result & ~v39;
    unint64_t v41 = v40 >> 6;
    if (((-1 << v40) & ~*(void *)(v24 + 8 * (v40 >> 6))) != 0)
    {
      unint64_t v42 = __clz(__rbit64((-1 << v40) & ~*(void *)(v24 + 8 * (v40 >> 6)))) | v40 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v43 = 0;
      unint64_t v44 = (unint64_t)(63 - v39) >> 6;
      do
      {
        if (++v41 == v44 && (v43 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v45 = v41 == v44;
        if (v41 == v44) {
          unint64_t v41 = 0;
        }
        v43 |= v45;
        uint64_t v46 = *(void *)(v24 + 8 * v41);
      }
      while (v46 == -1);
      unint64_t v42 = __clz(__rbit64(~v46)) + (v41 << 6);
    }
    *(void *)(v24 + ((v42 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v42;
    v37((char *)(*(void *)(v21 + 48) + v42 * v32), v38, v60);
    uint64_t result = sub_10002080C(v61, *(void *)(v21 + 56) + v42 * v34);
    ++*(void *)(v21 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v50;
    unint64_t v22 = v58;
    uint64_t v23 = v59;
    if (!a3) {
      return v21;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_10002080C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SessionLog.Element();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100020870(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return (uint64_t)&_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_100003918(&qword_1002087C0);
  uint64_t result = sub_1001C15C0();
  uint64_t v9 = result;
  uint64_t v39 = a1;
  uint64_t v40 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      uint64_t v41 = v11;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= v40) {
        return v9;
      }
      unint64_t v16 = v39[v15];
      uint64_t v17 = v11 + 1;
      if (!v16)
      {
        uint64_t v17 = v11 + 2;
        if (v11 + 2 >= v40) {
          return v9;
        }
        unint64_t v16 = v39[v17];
        if (!v16)
        {
          uint64_t v17 = v11 + 3;
          if (v11 + 3 >= v40) {
            return v9;
          }
          unint64_t v16 = v39[v17];
          if (!v16)
          {
            uint64_t v18 = v11 + 4;
            if (v11 + 4 >= v40) {
              return v9;
            }
            unint64_t v16 = v39[v18];
            if (!v16)
            {
              while (1)
              {
                uint64_t v17 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_41;
                }
                if (v17 >= v40) {
                  return v9;
                }
                unint64_t v16 = v39[v17];
                ++v18;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v17 = v11 + 4;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      uint64_t v41 = v17;
      unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
    }
    uint64_t v19 = 16 * v14;
    uint64_t v20 = v4;
    uint64_t v21 = (uint64_t *)(*(void *)(v4 + 48) + v19);
    uint64_t v23 = *v21;
    uint64_t v22 = v21[1];
    uint64_t v24 = (uint64_t *)(*(void *)(v4 + 56) + v19);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    sub_1001C1950();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001C0CB0();
    uint64_t result = sub_1001C1990();
    uint64_t v27 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v28 = result & ~v27;
    unint64_t v29 = v28 >> 6;
    if (((-1 << v28) & ~*(void *)(v12 + 8 * (v28 >> 6))) != 0)
    {
      unint64_t v30 = __clz(__rbit64((-1 << v28) & ~*(void *)(v12 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v33 = v29 == v32;
        if (v29 == v32) {
          unint64_t v29 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v12 + 8 * v29);
      }
      while (v34 == -1);
      unint64_t v30 = __clz(__rbit64(~v34)) + (v29 << 6);
    }
    *(void *)(v12 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
    uint64_t v35 = 16 * v30;
    uint64_t v36 = (void *)(*(void *)(v9 + 48) + v35);
    *uint64_t v36 = v23;
    v36[1] = v22;
    uint64_t v37 = (void *)(*(void *)(v9 + 56) + v35);
    *uint64_t v37 = v25;
    v37[1] = v26;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    uint64_t v4 = v20;
    uint64_t v11 = v41;
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100020B30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5 = (void **)v4;
  uint64_t v32 = a1;
  uint64_t v9 = sub_1001BF310();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  unint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v14 = (void *)*v4;
  unint64_t v16 = sub_100169EB4(a2);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v20 = v15;
  uint64_t v21 = v14[3];
  if (v21 < v19 || (a3 & 1) == 0)
  {
    if (v21 >= v19 && (a3 & 1) == 0)
    {
      sub_1000ECB70();
      goto LABEL_7;
    }
    sub_1000E5D4C(v19, a3 & 1);
    unint64_t v28 = sub_100169EB4(a2);
    if ((v20 & 1) == (v29 & 1))
    {
      unint64_t v16 = v28;
      uint64_t v22 = *v5;
      if (v20) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a2, v9);
      sub_1000EBAB8(v16, (uint64_t)v13, v32, v22);
      uint64_t v30 = type metadata accessor for SessionLog.Element();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(a4, 1, 1, v30);
    }
LABEL_15:
    uint64_t result = sub_1001C18C0();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v22 = *v5;
  if ((v20 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v23 = v22[7];
  uint64_t v24 = type metadata accessor for SessionLog.Element();
  uint64_t v31 = *(void *)(v24 - 8);
  unint64_t v25 = *(void *)(v31 + 72) * v16;
  sub_10002080C(v23 + v25, a4);
  sub_10002080C(v32, v22[7] + v25);
  uint64_t v26 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v31 + 56);
  return v26(a4, 0, 1, v24);
}

uint64_t *sub_100020DCC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1001BF2C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_100020E98(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_1001BF2C0();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

void *sub_100020F00(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1001BF2C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

void *sub_100020F7C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1001BF2C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

void *sub_100020FF8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1001BF2C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_100021074(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1001BF2C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1000210F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100021104);
}

uint64_t sub_100021104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = sub_1001BF2C0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(v4, a2, v5);
}

uint64_t sub_100021174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100021188);
}

uint64_t sub_100021188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = sub_1001BF2C0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, a2, a2, v6);
}

uint64_t sub_1000211FC()
{
  uint64_t result = sub_1001BF2C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionLog()
{
  return &type metadata for SessionLog;
}

uint64_t sub_1000212A8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E756F63 && a2 == 0xE500000000000000;
  if (v2 || (sub_1001C1840() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1001C1840();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void *sub_1000213A0(void *a1)
{
  uint64_t v3 = sub_100003918(&qword_100208860);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000552DC((uint64_t)&_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_10000D934(a1, a1[3]);
  sub_100021528();
  sub_1001C19B0();
  if (v1)
  {
    sub_100003E90((uint64_t)a1);
  }
  else
  {
    sub_100003918(&qword_100208870);
    sub_10002157C();
    sub_1001C1690();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    uint64_t v8 = (void *)v10[1];
    sub_100003E90((uint64_t)a1);
  }
  return v8;
}

unint64_t sub_100021528()
{
  unint64_t result = qword_100208868;
  if (!qword_100208868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100208868);
  }
  return result;
}

unint64_t sub_10002157C()
{
  unint64_t result = qword_100208878;
  if (!qword_100208878)
  {
    sub_1000166C8(&qword_100208870);
    sub_100021788(&qword_100208880, (void (*)(uint64_t))&type metadata accessor for UUID);
    sub_100021788(&qword_100208888, (void (*)(uint64_t))type metadata accessor for SessionLog.Element);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100208878);
  }
  return result;
}

unint64_t sub_100021658()
{
  unint64_t result = qword_100208898;
  if (!qword_100208898)
  {
    sub_1000166C8(&qword_100208870);
    sub_100021788(&qword_1002088A0, (void (*)(uint64_t))&type metadata accessor for UUID);
    sub_100021788(&qword_1002088A8, (void (*)(uint64_t))type metadata accessor for SessionLog.Element);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100208898);
  }
  return result;
}

unint64_t sub_100021734()
{
  unint64_t result = qword_1002088B8;
  if (!qword_1002088B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002088B8);
  }
  return result;
}

uint64_t sub_100021788(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SessionLog.Element.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10002189CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionLog.Element.CodingKeys()
{
  return &type metadata for SessionLog.Element.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SessionLog.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100021970);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionLog.CodingKeys()
{
  return &type metadata for SessionLog.CodingKeys;
}

unint64_t sub_1000219AC()
{
  unint64_t result = qword_1002088C8;
  if (!qword_1002088C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002088C8);
  }
  return result;
}

unint64_t sub_100021A04()
{
  unint64_t result = qword_1002088D0;
  if (!qword_1002088D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002088D0);
  }
  return result;
}

unint64_t sub_100021A5C()
{
  unint64_t result = qword_1002088D8;
  if (!qword_1002088D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002088D8);
  }
  return result;
}

unint64_t sub_100021AB4()
{
  unint64_t result = qword_1002088E0;
  if (!qword_1002088E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002088E0);
  }
  return result;
}

unint64_t sub_100021B0C()
{
  unint64_t result = qword_1002088E8;
  if (!qword_1002088E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002088E8);
  }
  return result;
}

unint64_t sub_100021B64()
{
  unint64_t result = qword_1002088F0;
  if (!qword_1002088F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002088F0);
  }
  return result;
}

uint64_t NWActivity.init(domain:label:)()
{
  return sub_1001C03F0();
}

BOOL TC2NetworkActivityDomain.init(rawValue:)(uint64_t a1)
{
  return a1 != 55;
}

uint64_t TC2NetworkActivityDomain.rawValue.getter()
{
  return 55;
}

Swift::Int sub_100021BDC()
{
  return sub_1001C1990();
}

void sub_100021C20()
{
}

Swift::Int sub_100021C48()
{
  return sub_1001C1990();
}

void *sub_100021C88@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 55;
  return result;
}

void sub_100021C9C(void *a1@<X8>)
{
  *a1 = 55;
}

uint64_t TC2NetworkActivityLabel.rawValue.getter(unsigned __int8 a1)
{
  return a1 + 1;
}

Swift::Int sub_100021CB8()
{
  uint64_t v1 = *v0;
  sub_1001C1950();
  sub_1001C1960(v1 + 1);
  return sub_1001C1990();
}

void sub_100021D00()
{
  sub_1001C1960(*v0 + 1);
}

Swift::Int sub_100021D30()
{
  uint64_t v1 = *v0;
  sub_1001C1950();
  sub_1001C1960(v1 + 1);
  return sub_1001C1990();
}

uint64_t sub_100021D74@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = _s20privatecloudcomputed23TC2NetworkActivityLabelO8rawValueACSgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_100021DA0(void *a1@<X8>)
{
  *a1 = *v1 + 1;
}

uint64_t NWConnection.withActivity<A>(activity:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  uint64_t v6 = sub_1001C03E0();
  v5[7] = v6;
  v5[8] = *(void *)(v6 - 8);
  v5[9] = swift_task_alloc();
  return _swift_task_switch(sub_100021E78, 0, 0);
}

uint64_t sub_100021E78()
{
  uint64_t v1 = (int *)v0[4];
  sub_1001C0510();
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)v1 + *v1);
  BOOL v2 = (void *)swift_task_alloc();
  v0[10] = v2;
  *BOOL v2 = v0;
  v2[1] = sub_100021F5C;
  uint64_t v3 = v0[2];
  return v5(v3);
}

uint64_t sub_100021F5C()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0) {
    BOOL v2 = sub_100022130;
  }
  else {
    BOOL v2 = sub_100022070;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100022070()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[7];
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for NWActivity.CompletionReason.success(_:), v3);
  sub_1001C0400();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100022130()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[7];
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for NWActivity.CompletionReason.failure(_:), v3);
  sub_1001C0400();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_willThrow();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t _s20privatecloudcomputed23TC2NetworkActivityLabelO8rawValueACSgSi_tcfC_0(unint64_t a1)
{
  if (a1 >= 5) {
    return 4;
  }
  else {
    return (0x302010004uLL >> (8 * a1));
  }
}

unint64_t sub_100022228()
{
  unint64_t result = qword_100208900;
  if (!qword_100208900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100208900);
  }
  return result;
}

unint64_t sub_100022280()
{
  unint64_t result = qword_100208908;
  if (!qword_100208908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100208908);
  }
  return result;
}

unint64_t sub_1000222D8()
{
  unint64_t result = qword_100208910;
  if (!qword_100208910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100208910);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TC2NetworkActivityDomain(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1000223C8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TC2NetworkActivityDomain()
{
  return &type metadata for TC2NetworkActivityDomain;
}

uint64_t getEnumTagSinglePayload for TC2NetworkActivityLabel(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TC2NetworkActivityLabel(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10002255CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TC2NetworkActivityLabel()
{
  return &type metadata for TC2NetworkActivityLabel;
}

unsigned char *storeEnumTagSinglePayload for TC2NetworkActivityResult(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100022660);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TC2NetworkActivityResult()
{
  return &type metadata for TC2NetworkActivityResult;
}

uint64_t destroy for RateLimitFilter()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for RateLimitFilter(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for RateLimitFilter(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for RateLimitFilter(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for RateLimitFilter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RateLimiterRequestMetadata(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RateLimiterRequestMetadata(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RateLimiterRequestMetadata()
{
  return &type metadata for RateLimiterRequestMetadata;
}

uint64_t sub_10002291C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100003918(&qword_100208940);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000D934(a1, a1[3]);
  sub_100023630();
  sub_1001C19C0();
  char v15 = 0;
  sub_1001C1700();
  if (!v2)
  {
    char v14 = 1;
    sub_1001C1700();
    char v13 = 2;
    sub_1001C1700();
    uint64_t v12 = *(void *)(v3 + 48);
    v11[15] = 3;
    sub_100003918(&qword_100208930);
    sub_100023684((unint64_t *)&qword_100208948);
    sub_1001C1740();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_100022B14()
{
  uint64_t result = 0x4449656C646E7562;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x4965727574616566;
      break;
    case 2:
    case 3:
      uint64_t result = 0x64616F6C6B726F77;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100022BA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000230A4(a1, a2);
  *a3 = result;
  return result;
}

void sub_100022BCC(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_100022BD8(uint64_t a1)
{
  unint64_t v2 = sub_100023630();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100022C14(uint64_t a1)
{
  unint64_t v2 = sub_100023630();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100022C50(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v6 = a1[5];
  uint64_t v5 = a1[6];
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v9 = a2[4];
  uint64_t v10 = a2[5];
  uint64_t v11 = a2[6];
  if ((*a1 != *a2 || a1[1] != a2[1]) && (sub_1001C1840() & 1) == 0
    || (v2 != v7 || v4 != v8) && (sub_1001C1840() & 1) == 0
    || (v3 != v9 || v6 != v10) && (sub_1001C1840() & 1) == 0)
  {
    return 0;
  }
  return sub_10016839C(v5, v11);
}

Swift::Int sub_100022D60()
{
  uint64_t v1 = *(void *)(v0 + 48);
  sub_1001C1950();
  swift_bridgeObjectRetain();
  sub_1001C0CB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1001C0CB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1001C0CB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10018FB7C((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_1001C1990();
}

uint64_t sub_100022E3C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 48);
  swift_bridgeObjectRetain();
  sub_1001C0CB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1001C0CB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1001C0CB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10018FB7C(a1, v3);
  return swift_bridgeObjectRelease();
}

Swift::Int sub_100022F0C()
{
  uint64_t v1 = *(void *)(v0 + 48);
  sub_1001C1950();
  swift_bridgeObjectRetain();
  sub_1001C0CB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1001C0CB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1001C0CB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10018FB7C((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_1001C1990();
}

double sub_100022FE4@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100023294(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    double result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(void *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_100023034(void *a1)
{
  return sub_10002291C(a1);
}

unint64_t sub_100023050()
{
  unint64_t result = qword_100208918;
  if (!qword_100208918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100208918);
  }
  return result;
}

uint64_t sub_1000230A4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4449656C646E7562 && a2 == 0xE800000000000000;
  if (v2 || (sub_1001C1840() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4965727574616566 && a2 == 0xE900000000000044 || (sub_1001C1840() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64616F6C6B726F77 && a2 == 0xEC00000065707954 || (sub_1001C1840() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x64616F6C6B726F77 && a2 == 0xEC00000073676154)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1001C1840();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_100023294@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_100003918(&qword_100208920);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D934(a1, a1[3]);
  sub_100023630();
  sub_1001C19B0();
  if (v2) {
    return sub_100003E90((uint64_t)a1);
  }
  char v30 = 0;
  uint64_t v10 = sub_1001C1650();
  uint64_t v12 = v11;
  uint64_t v24 = v10;
  char v29 = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1001C1650();
  uint64_t v25 = v14;
  uint64_t v22 = v13;
  char v28 = 2;
  swift_bridgeObjectRetain();
  uint64_t v23 = 0;
  uint64_t v21 = sub_1001C1650();
  uint64_t v16 = v15;
  sub_100003918(&qword_100208930);
  char v27 = 3;
  sub_100023684(&qword_100208938);
  swift_bridgeObjectRetain();
  sub_1001C1690();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t v17 = v26;
  swift_bridgeObjectRetain();
  uint64_t v18 = v16;
  uint64_t v19 = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100003E90((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v24;
  a2[1] = v12;
  a2[2] = v22;
  a2[3] = v19;
  a2[4] = v21;
  a2[5] = v18;
  a2[6] = v17;
  return result;
}

unint64_t sub_100023630()
{
  unint64_t result = qword_100208928;
  if (!qword_100208928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100208928);
  }
  return result;
}

uint64_t sub_100023684(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000166C8(&qword_100208930);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RateLimiterRequestMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000237B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RateLimiterRequestMetadata.CodingKeys()
{
  return &type metadata for RateLimiterRequestMetadata.CodingKeys;
}

unint64_t sub_1000237F0()
{
  unint64_t result = qword_100208950;
  if (!qword_100208950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100208950);
  }
  return result;
}

unint64_t sub_100023848()
{
  unint64_t result = qword_100208958;
  if (!qword_100208958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100208958);
  }
  return result;
}

unint64_t sub_1000238A0()
{
  unint64_t result = qword_100208960;
  if (!qword_100208960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100208960);
  }
  return result;
}

uint64_t sub_1000238F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1001BF940();
  if (*(void *)(v2 + 16) && (unint64_t v3 = sub_100169E3C(0x6C65646F6DLL, 0xE500000000000000), (v4 & 1) != 0))
  {
    uint64_t v5 = (uint64_t *)(*(void *)(v2 + 56) + 16 * v3);
    uint64_t v7 = *v5;
    uint64_t v6 = v5[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_100003918(qword_100208968);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1001CC760;
    *(void *)(inited + 32) = 0x6C65646F6DLL;
    *(void *)(inited + 40) = 0xE500000000000000;
    *(void *)(inited + 48) = v7;
    *(void *)(inited + 56) = v6;
    sub_100054A9C(inited);
    uint64_t v9 = sub_1001BF940();
    if (*(void *)(v9 + 16) && (unint64_t v10 = sub_100169E3C(0x72657470616461, 0xE700000000000000), (v11 & 1) != 0))
    {
      uint64_t v12 = (uint64_t *)(*(void *)(v9 + 56) + 16 * v10);
      uint64_t v13 = *v12;
      uint64_t v14 = v12[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v16 = v13;
      uint64_t v17 = v14;
    }
    else
    {
      swift_bridgeObjectRelease();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v16 = 0;
      uint64_t v17 = 0xE000000000000000;
    }
    sub_1000EAA24(v16, v17, 0x72657470616461, 0xE700000000000000, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    sub_1001BF930();
    sub_1001BF920();
    uint64_t v21 = sub_1001BF950();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(a1, 0, 1, v21);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = sub_1001BF950();
    uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    return v19(a1, 1, 1, v18);
  }
}

uint64_t sub_100023B38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1001BF930();
  uint64_t v4 = v3;
  uint64_t v5 = sub_1001BF940();
  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_100169E3C(0x6C65646F6DLL, 0xE500000000000000), (v7 & 1) != 0))
  {
    uint64_t v8 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v6);
    uint64_t v10 = *v8;
    unint64_t v9 = v8[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v10 = 0;
    unint64_t v9 = 0xE000000000000000;
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_1001BF940();
  if (*(void *)(v11 + 16) && (unint64_t v12 = sub_100169E3C(0x72657470616461, 0xE700000000000000), (v13 & 1) != 0))
  {
    uint64_t v14 = (uint64_t *)(*(void *)(v11 + 56) + 16 * v12);
    uint64_t v16 = *v14;
    unint64_t v15 = v14[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v16 = 0;
    unint64_t v15 = 0xE000000000000000;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  a1[1] = v4;
  a1[2] = v10;
  a1[3] = v9;
  a1[4] = v16;
  a1[5] = v15;
  return result;
}

void sub_100023C3C()
{
  sub_1001C0340();
  if (v0 <= 0x3F)
  {
    sub_1000101F4();
    if (v1 <= 0x3F) {
      swift_initClassMetadata2();
    }
  }
}

uint64_t sub_100023D14()
{
  v1[2] = v0;
  v1[3] = type metadata accessor for ThimbledEvent();
  v1[4] = swift_task_alloc();
  uint64_t v2 = sub_100003918(&qword_100208A00);
  v1[5] = v2;
  void v1[6] = *(void *)(v2 - 8);
  v1[7] = swift_task_alloc();
  return _swift_task_switch(sub_100023E08, 0, 0);
}

uint64_t sub_100023E08()
{
  unint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C1200();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Running nodeDistributionReport activity", v3, 2u);
    swift_slowDealloc();
  }

  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v4;
  void *v4 = v0;
  v4[1] = sub_100023F28;
  return sub_1000E0B04();
}

uint64_t sub_100023F28(uint64_t a1)
{
  *(void *)(*(void *)v1 + 72) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100024028, 0, 0);
}

uint64_t sub_100024028()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[9];
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v16 = v0[4];
    unint64_t v15 = (void (**)(uint64_t, uint64_t))(v0[6] + 8);
    unint64_t v14 = sub_100024440();
    uint64_t v4 = (uint64_t *)(v2 + 64);
    do
    {
      uint64_t v5 = (void *)v1[4];
      uint64_t v17 = v1[7];
      uint64_t v18 = v1[5];
      uint64_t v6 = *(v4 - 4);
      uint64_t v7 = *(v4 - 3);
      uint64_t v8 = *(v4 - 2);
      uint64_t v9 = *(v4 - 1);
      uint64_t v10 = *v4;
      v4 += 5;
      *(void *)(v16 + 24) = &type metadata for TC2AttestationDistributionMetric;
      *(void *)(v16 + 32) = v14;
      uint64_t v11 = (void *)swift_allocObject();
      *uint64_t v5 = v11;
      _OWORD v11[2] = v6;
      v11[3] = v7;
      v11[4] = v8;
      v11[5] = v9;
      v11[6] = v10;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100003918(qword_100208000);
      sub_1001C0FE0();
      (*v15)(v17, v18);
      --v3;
    }
    while (v3);
  }
  swift_bridgeObjectRelease();
  sub_1000241D8();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v12 = (uint64_t (*)(void))v1[1];
  return v12();
}

void sub_1000241D8()
{
  osos_log_t log = sub_1001C0330();
  os_log_type_t v0 = sub_1001C1200();
  if (os_log_type_enabled(oslog, v0))
  {
    uint64_t v1 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v1 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v0, "Finished nodeDistributionReport activity", v1, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_100024284()
{
  uint64_t v1 = v0 + qword_10021F908;
  uint64_t v2 = sub_1001C0340();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + qword_10021F910;
  uint64_t v4 = sub_100003918(qword_100208000);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  return v0;
}

uint64_t sub_100024340()
{
  sub_100024284();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NodeDistributionAnalyzerReportActivity()
{
  return sub_10000E738();
}

uint64_t sub_1000243B0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000074CC;
  return sub_100023D14();
}

unint64_t sub_100024440()
{
  unint64_t result = qword_100208A08[0];
  if (!qword_100208A08[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100208A08);
  }
  return result;
}

uint64_t sub_100024494()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t Message.loggingDescription.getter()
{
  swift_getDynamicType();
  swift_getMetatypeMetadata();
  uint64_t v4 = sub_1001C0C50();
  v5._countAndFlagsBits = 2618;
  v5._object = (void *)0xE200000000000000;
  sub_1001C0D00(v5);
  uint64_t v0 = sub_1001C0040();
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  v6._countAndFlagsBits = v0;
  v6._object = v2;
  sub_1001C0D00(v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1000245A4()
{
  type metadata accessor for RequestMetrics.State();
  uint64_t AssociatedTypeWitness = sub_1001BF4C0();
  if (v1 <= 0x3F)
  {
    uint64_t AssociatedTypeWitness = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t v3 = sub_1001BF310();
      if (v4 > 0x3F) {
        return v3;
      }
      uint64_t v3 = sub_1001BF2C0();
      if (v5 > 0x3F)
      {
        return v3;
      }
      else
      {
        uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
        if (v6 <= 0x3F)
        {
          sub_10002B3E8(319, (unint64_t *)&qword_100208A90, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
          uint64_t AssociatedTypeWitness = v7;
          if (v8 <= 0x3F)
          {
            uint64_t AssociatedTypeWitness = sub_1001BF950();
            if (v9 <= 0x3F)
            {
              uint64_t AssociatedTypeWitness = sub_1001C0340();
              if (v10 <= 0x3F)
              {
                sub_10002B3E8(319, (unint64_t *)&qword_100207FC8, (uint64_t (*)(uint64_t))type metadata accessor for ThimbledEvent, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for AsyncStream.Continuation);
                uint64_t AssociatedTypeWitness = v11;
                if (v12 <= 0x3F)
                {
                  uint64_t AssociatedTypeWitness = sub_1001C02D0();
                  if (v13 <= 0x3F)
                  {
                    uint64_t AssociatedTypeWitness = sub_1001C02A0();
                    if (v14 <= 0x3F)
                    {
                      uint64_t AssociatedTypeWitness = sub_1001C12F0();
                      if (v15 <= 0x3F) {
                        return swift_initClassMetadata2();
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return AssociatedTypeWitness;
}

uint64_t sub_100024A08(uint64_t a1)
{
  *(void *)(v2 + 112) = a1;
  *(void *)(v2 + 120) = v1;
  return _swift_task_switch(sub_100024A28, 0, 0);
}

uint64_t sub_100024A28()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100024ADC;
  return sub_1000BA828(v0 + 64);
}

uint64_t sub_100024ADC()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100024D7C;
  }
  else {
    uint64_t v2 = sub_100024BF0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100024BF0()
{
  sub_10002C318((uint64_t)(v0 + 8), (uint64_t)(v0 + 2), &qword_100208CC8);
  unint64_t v1 = v0[3];
  if (v1 >> 60 == 15)
  {
    sub_10002C2C4();
    swift_allocError();
    *(unsigned char *)uint64_t v2 = 1;
    *(void *)(v2 + 8) = &_swiftEmptyArrayStorage;
    swift_willThrow();
  }
  else
  {
    uint64_t v4 = (uint64_t *)v0[14];
    uint64_t v5 = v0[2];
    uint64_t v6 = v0[4];
    unint64_t v7 = v0[5];
    uint64_t v8 = v0[6];
    unint64_t v9 = v0[7];
    sub_100007B14(v5, v0[3]);
    sub_100007B14(v6, v7);
    sub_100007B14(v8, v9);
    sub_10000792C(v8, v9);
    sub_10000792C(v6, v7);
    sub_100007B14(v5, v1);
    sub_100007B14(v6, v7);
    sub_100007B14(v8, v9);
    sub_10000792C(v8, v9);
    sub_10000792C(v5, v1);
    sub_10000792C(v6, v7);
    sub_10000792C(v5, v1);
    uint64_t *v4 = v5;
    v4[1] = v1;
    v4[2] = v6;
    v4[3] = v7;
    v4[4] = v8;
    v4[5] = v9;
  }
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100024D7C()
{
  uint64_t v1 = *(void *)(v0 + 136);
  sub_100003918(&qword_100208CC0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1001CC760;
  *(void *)(v2 + 32) = v1;
  sub_10002C2C4();
  swift_allocError();
  *(unsigned char *)uint64_t v3 = 1;
  *(void *)(v3 + 8) = v2;
  swift_willThrow();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100024E44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  uint64_t v4 = sub_1001C14C0();
  v3[15] = v4;
  v3[16] = *(void *)(v4 - 8);
  v3[17] = swift_task_alloc();
  swift_retain();
  return _swift_task_switch(sub_100024F18, 0, 0);
}

uint64_t sub_100024F18()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v1 + *(void *)(*(void *)v1 + 272);
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 280);
  unint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t))((char *)&dword_100208C78
                                                                                          + dword_100208C78);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[18] = v4;
  void *v4 = v0;
  v4[1] = sub_100025020;
  uint64_t v5 = v0[14];
  return v7((uint64_t)(v0 + 2), (uint64_t)"FetchOTT", 8, 2, v3, v2, v5);
}

uint64_t sub_100025020()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  return _swift_task_switch(sub_100025120, 0, 0);
}

void sub_100025120()
{
  uint64_t v18 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 104);
  sub_1001C14E0();
  sub_10002C1AC(&qword_100208C80, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  sub_1001C18D0();
  sub_10002C1AC(&qword_100208C88, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
  sub_1001C1500();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v6 = *(void *)(v0 + 80);
  unint64_t v7 = (void *)swift_task_alloc();
  v7[2] = v0 + 16;
  v7[3] = v5;
  v7[4] = v6;
  uint64_t v8 = (os_unfair_lock_s *)(v4 + *(void *)(*(void *)v4 + 128));
  os_unfair_lock_lock(v8);
  uint64_t v9 = sub_100003918(&qword_100208C90);
  sub_10002C1F4((uint64_t)v8 + *(int *)(v9 + 28));
  os_unfair_lock_unlock(v8);
  if (!v18)
  {
    swift_task_dealloc();
    uint64_t v10 = *(void *)(v0 + 16);
    if (*(unsigned char *)(v0 + 64))
    {
      *(void *)(v0 + 88) = v10;
      sub_100003918(&qword_100208C98);
      swift_willThrowTypedImpl();
      swift_release();
    }
    else
    {
      uint64_t v12 = *(void *)(v0 + 24);
      uint64_t v13 = *(void *)(v0 + 32);
      uint64_t v14 = *(void *)(v0 + 40);
      uint64_t v15 = *(void *)(v0 + 48);
      uint64_t v16 = *(void *)(v0 + 56);
      uint64_t v17 = *(void **)(v0 + 96);
      swift_release();
      *uint64_t v17 = v10;
      v17[1] = v12;
      v17[2] = v13;
      v17[3] = v14;
      v17[4] = v15;
      v17[5] = v16;
    }
    swift_task_dealloc();
    uint64_t v11 = *(void (**)(void))(v0 + 8);
    v11();
  }
}

uint64_t sub_1000253AC()
{
  v1[8] = v0;
  sub_100003918(&qword_100208C60);
  v1[9] = swift_task_alloc();
  uint64_t v2 = sub_1001BF950();
  v1[10] = v2;
  v1[11] = *(void *)(v2 - 8);
  v1[12] = swift_task_alloc();
  return _swift_task_switch(sub_10002549C, 0, 0);
}

uint64_t sub_10002549C()
{
  char v28 = v0;
  uint64_t v1 = *(void *)(v0[8] + *(void *)(*(void *)v0[8] + 280));
  v0[13] = v1;
  if (!v1)
  {
    swift_retain_n();
    uint64_t v13 = sub_1001C0330();
    os_log_type_t v14 = sub_1001C11F0();
    BOOL v15 = os_log_type_enabled(v13, v14);
    uint64_t v16 = v0[8];
    if (v15)
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315138;
      uint64_t v18 = (uint64_t *)(v16 + *(void *)(*(void *)v16 + 368));
      uint64_t v19 = *v18;
      unint64_t v20 = v18[1];
      swift_bridgeObjectRetain();
      v0[2] = sub_1000DF238(v19, v20, &v27);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "%s unable to access attestation store", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
LABEL_13:
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void *))v0[1];
    return v25(_swiftEmptyArrayStorage);
  }
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[9];
  swift_retain();
  sub_1000238F4(v4);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) == 1)
  {
    sub_100010360(v0[9], &qword_100208C60);
    swift_retain_n();
    uint64_t v5 = sub_1001C0330();
    os_log_type_t v6 = sub_1001C11F0();
    BOOL v7 = os_log_type_enabled(v5, v6);
    uint64_t v8 = v0[8];
    if (v7)
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315138;
      uint64_t v10 = (uint64_t *)(v8 + *(void *)(*(void *)v8 + 368));
      uint64_t v12 = *v10;
      unint64_t v11 = v10[1];
      swift_bridgeObjectRetain();
      v0[3] = sub_1000DF238(v12, v11, &v27);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "%s invalid set of parameters for prefetching", v9, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    swift_release();
    goto LABEL_13;
  }
  uint64_t v21 = v0[8];
  (*(void (**)(void, void, void))(v0[11] + 32))(v0[12], v0[9], v0[10]);
  uint64_t v22 = qword_10021F8D8;
  v0[14] = *(void *)(v21 + qword_10021F8E0);
  v0[15] = v22;
  type metadata accessor for TC2AttestationStore();
  sub_10002C1AC(&qword_10020C4E0, (void (*)(uint64_t))type metadata accessor for TC2AttestationStore);
  uint64_t v24 = sub_1001C0EA0();
  return _swift_task_switch(sub_100025970, v24, v23);
}

uint64_t sub_100025970()
{
  v0[16] = sub_1000C596C(v0[12], v0[8] + v0[15], v0[14]);
  return _swift_task_switch(sub_1000259E8, 0, 0);
}

uint64_t sub_1000259E8()
{
  uint64_t v23 = v0;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C1200();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[16];
    uint64_t v20 = v0[14];
    uint64_t v4 = v0[8];
    os_log_type_t type = v2;
    uint64_t v5 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315650;
    os_log_type_t v6 = (uint64_t *)(v4 + *(void *)(*(void *)v4 + 368));
    uint64_t v7 = *v6;
    unint64_t v8 = v6[1];
    swift_bridgeObjectRetain();
    v0[5] = sub_1000DF238(v7, v8, &v22);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v5 + 12) = 2048;
    uint64_t v9 = *(void *)(v3 + 16);
    swift_bridgeObjectRelease();
    v0[6] = v9;
    sub_1001C1310();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 22) = 2048;
    v0[7] = v20;
    sub_1001C1310();
    _os_log_impl((void *)&_mh_execute_header, v1, type, "%s Total cached attestations from store: %ld maxPrefetchedAttestations: %ld", (uint8_t *)v5, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();

    swift_release_n();
  }
  uint64_t v10 = v0[16];
  uint64_t v11 = v0[12];
  uint64_t v12 = v0[10];
  uint64_t v13 = v0[11];
  uint64_t v14 = v0[8];
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 0;
  uint64_t v16 = swift_task_alloc();
  *(void *)(v16 + 16) = v15;
  *(void *)(v16 + 24) = v14;
  uint64_t v17 = sub_10002B7F0(v10, (void (*)(void, void, char *))sub_10002C0DC, v16);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(uint64_t))v0[1];
  return v18(v17);
}

uint64_t sub_100025D04@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = (void *)(a4 + 16);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v13 = sub_1001C0330();
  os_log_type_t v14 = sub_1001C1200();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v22 = a3;
    uint64_t v23 = a6;
    uint64_t v15 = swift_slowAlloc();
    v24[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315650;
    uint64_t v16 = (uint64_t *)(a5 + *(void *)(*(void *)a5 + 368));
    uint64_t v18 = *v16;
    unint64_t v17 = v16[1];
    swift_bridgeObjectRetain();
    sub_1000DF238(v18, v17, v24);
    sub_1001C1310();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1000DF238(a1, a2, v24);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v15 + 22) = 2048;
    swift_beginAccess();
    uint64_t v19 = *(void *)(a4 + 16);
    swift_release();
    if (__OFADD__(v19, 10))
    {
LABEL_11:
      __break(1u);
      goto LABEL_12;
    }
    sub_1001C1310();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%s creating verified node with identifier: %s, ohttpcontext: %ld", (uint8_t *)v15, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a3 = v22;
    a6 = v23;
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_release_n();

    swift_release_n();
  }
  sub_10002C0E4(a3, a6);
  swift_beginAccess();
  uint64_t v20 = *v12 + 10;
  if (__OFADD__(*v12, 10))
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((v20 & 0x8000000000000000) == 0)
  {
    *(void *)(a6 + *(int *)(sub_100003918(&qword_100208188) + 48)) = v20;
    type metadata accessor for ValidatedAttestationOrAttestation();
    swift_storeEnumTagMultiPayload();
    uint64_t result = swift_beginAccess();
    if (!__OFADD__(*v12, 1))
    {
      ++*v12;
      return result;
    }
    goto LABEL_10;
  }
LABEL_12:
  uint64_t result = sub_1001C1570();
  __break(1u);
  return result;
}

unint64_t sub_100026064(uint64_t a1)
{
  uint64_t v3 = sub_1001BF810();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v6 = __chkstk_darwin(v3, v5);
  unint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v11, v1, a1);
  unint64_t v13 = 0x696C616974696E49;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      swift_release();
      unint64_t v13 = 0x2074736575716552;
      break;
    case 2u:
      swift_release();
      unint64_t v13 = 0xD000000000000016;
      break;
    case 3u:
      unint64_t v13 = 0x64656873696E6946;
      break;
    case 4u:
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v8, v11, v3);
      uint64_t v15 = 0;
      unint64_t v16 = 0xE000000000000000;
      sub_1001C1420(18);
      swift_bridgeObjectRelease();
      uint64_t v15 = 0x282064656C696146;
      unint64_t v16 = 0xEF203A726F727265;
      sub_10002C1AC(&qword_100208C38, (void (*)(uint64_t))&type metadata accessor for TrustedCloudComputeError);
      v17._countAndFlagsBits = sub_1001C1780();
      sub_1001C0D00(v17);
      swift_bridgeObjectRelease();
      v18._countAndFlagsBits = 41;
      v18._object = (void *)0xE100000000000000;
      sub_1001C0D00(v18);
      unint64_t v13 = v15;
      (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v3);
      break;
    case 5u:
      return v13;
    case 6u:
      unint64_t v13 = 0xD000000000000015;
      break;
    case 7u:
      unint64_t v13 = 0x6C65732065646F4ELL;
      break;
    default:
      swift_release();
      unint64_t v13 = 0xD000000000000022;
      break;
  }
  return v13;
}

uint64_t sub_1000263BC(uint64_t a1, char a2)
{
  uint64_t result = 0x6C65732065646F4ELL;
  switch(a2)
  {
    case 1:
      return result;
    case 2:
      uint64_t result = 0x64656873696E6946;
      break;
    case 3:
      unint64_t v4 = 0;
      swift_errorRetain();
      sub_1001C1420(18);
      v7._countAndFlagsBits = 0x282064656C696146;
      v7._object = (void *)0xEF203A726F727265;
      sub_1001C0D00(v7);
      sub_100003918(&qword_100208C98);
      sub_1001C1510();
      v8._countAndFlagsBits = 41;
      v8._object = (void *)0xE100000000000000;
      sub_1001C0D00(v8);
      sub_100028984(a1, 3);
      goto LABEL_6;
    case 4:
      if (a1) {
        uint64_t result = 0x656B6F5468747541;
      }
      else {
        uint64_t result = 0x696C616974696E49;
      }
      break;
    default:
      sub_1001C1420(32);
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD00000000000001DLL;
      if (__OFSUB__(0x10000, a1))
      {
        __break(1u);
        JUMPOUT(0x1000265B8);
      }
      v5._countAndFlagsBits = sub_1001C1780();
      sub_1001C0D00(v5);
      swift_bridgeObjectRelease();
      v6._countAndFlagsBits = 41;
      v6._object = (void *)0xE100000000000000;
      sub_1001C0D00(v6);
LABEL_6:
      uint64_t result = v4;
      break;
  }
  return result;
}

uint64_t sub_1000265CC()
{
  return sub_1000263BC(*(void *)v0, *(unsigned char *)(v0 + 8));
}

unint64_t sub_1000265E8(uint64_t a1, void *a2, uint64_t a3, unint64_t a4)
{
  unint64_t result = 0xD000000000000019;
  switch(a4 >> 61)
  {
    case 1uLL:
      unint64_t result = 0xD000000000000010;
      break;
    case 2uLL:
      sub_1001C1420(17);
      swift_bridgeObjectRelease();
      uint64_t v9 = 0x6E69766965636552;
      v10._countAndFlagsBits = a1;
      v10._object = a2;
      sub_1001C0D00(v10);
      goto LABEL_6;
    case 3uLL:
      unint64_t result = 0x64656873696E6946;
      break;
    case 4uLL:
      uint64_t v9 = 0;
      swift_errorRetain();
      sub_1001C1420(18);
      v11._countAndFlagsBits = 0x282064656C696146;
      v11._object = (void *)0xEF203A726F727265;
      sub_1001C0D00(v11);
      sub_100003918(&qword_100208C98);
      sub_1001C1510();
      v12._countAndFlagsBits = 41;
      v12._object = (void *)0xE100000000000000;
      sub_1001C0D00(v12);
      sub_100028998(a1, (uint64_t)a2, a3, a4);
LABEL_6:
      unint64_t result = v9;
      break;
    case 5uLL:
      unint64_t result = 0x696C616974696E49;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_1000267D4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2 >> 60 == 15) {
    return a4 >> 60 == 15;
  }
  if (a4 >> 60 == 15) {
    return 0;
  }
  sub_10000D9E0(a1, a2);
  sub_10000D9E0(a3, a4);
  char v9 = sub_10004C464(a1, a2, a3, a4);
  sub_100007918(a3, a4);
  sub_100007918(a1, a2);
  return v9 & 1;
}

unint64_t sub_100026888()
{
  return sub_1000265E8(*(void *)v0, *(void **)(v0 + 8), *(void *)(v0 + 16), *(void *)(v0 + 24));
}

BOOL sub_1000268C4(uint64_t a1, uint64_t a2)
{
  return sub_1000267D4(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8));
}

uint64_t sub_10002690C(unint64_t a1)
{
  unint64_t v1 = a1 >> 62;
  uint64_t result = 0x6465696669726576;
  switch(v1)
  {
    case 1uLL:
      uint64_t v4 = 0x766965636572;
LABEL_6:
      uint64_t result = v4 & 0xFFFFFFFFFFFFLL | 0x6E69000000000000;
      break;
    case 2uLL:
      uint64_t result = 0x64656873696E6966;
      break;
    case 3uLL:
      uint64_t result = 0x6966697265766E75;
      switch(a1)
      {
        case 0xC000000000000001:
          uint64_t v4 = 0x796669726576;
          goto LABEL_6;
        case 0xC000000000000002:
        case 0xC000000000000003:
        case 0xC000000000000004:
        case 0xC000000000000005:
        case 0xC000000000000006:
        case 0xC000000000000007:
          __break(1u);
          JUMPOUT(0x100026A10);
        case 0xC000000000000008:
          return 0x6465696669726576;
        case 0xC000000000000009:
          return 0x79654B746E6573;
        default:
          return result;
      }
    default:
      return result;
  }
  return result;
}

uint64_t sub_100026A48()
{
  return sub_10002690C(*v0);
}

uint64_t sub_100026A60(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 56) = a7;
  *(void *)(v8 + 64) = a8;
  *(void *)(v8 + 40) = a5;
  *(void *)(v8 + 48) = a6;
  *(unsigned char *)(v8 + 144) = a4;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = a3;
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 72) = sub_100003918(&qword_100208C48);
  *(void *)(v8 + 80) = swift_task_alloc();
  *(void *)(v8 + 88) = swift_task_alloc();
  uint64_t v9 = sub_1001C02A0();
  *(void *)(v8 + 96) = v9;
  *(void *)(v8 + 104) = *(void *)(v9 - 8);
  *(void *)(v8 + 112) = swift_task_alloc();
  return _swift_task_switch(sub_100026B74, 0, 0);
}

uint64_t sub_100026B74()
{
  unint64_t v1 = sub_1001C02C0();
  os_signpost_type_t v2 = sub_1001C1290();
  uint64_t result = sub_1001C12D0();
  if ((result & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t v4 = *(char **)(v0 + 24);
  if (*(unsigned char *)(v0 + 144))
  {
    if ((unint64_t)v4 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v4 >> 11 == 27)
      {
LABEL_16:
        __break(1u);
        return result;
      }
      if (v4 >> 16 <= 0x10)
      {
        uint64_t v4 = sub_100155C18();
        goto LABEL_10;
      }
    }
    __break(1u);
    goto LABEL_16;
  }
  if (v4)
  {
LABEL_10:
    uint64_t v8 = *(void *)(v0 + 104);
    uint64_t v7 = *(void *)(v0 + 112);
    uint64_t v9 = *(void *)(v0 + 96);
    Swift::String v6 = *(void (**)(uint64_t, void, uint64_t))(v8 + 16);
    v6(v7, *(void *)(v0 + 40), v9);
    Swift::String v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)Swift::String v10 = 0;
    os_signpost_id_t v11 = sub_1001C0290();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v1, v2, v11, v4, "", v10, 2u);
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    goto LABEL_11;
  }
  __break(1u);
LABEL_5:
  uint64_t v5 = *(void *)(v0 + 104);

  Swift::String v6 = *(void (**)(uint64_t, void, uint64_t))(v5 + 16);
LABEL_11:
  Swift::String v12 = *(int **)(v0 + 56);
  v6(*(void *)(v0 + 112), *(void *)(v0 + 40), *(void *)(v0 + 96));
  sub_1001C0310();
  swift_allocObject();
  *(void *)(v0 + 120) = sub_1001C0300();
  uint64_t v15 = (uint64_t (*)(uint64_t))((char *)v12 + *v12);
  unint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v13;
  *unint64_t v13 = v0;
  v13[1] = sub_100026DD0;
  uint64_t v14 = *(void *)(v0 + 80);
  return v15(v14);
}

uint64_t sub_100026DD0()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    os_signpost_type_t v2 = sub_100026FE8;
  }
  else {
    os_signpost_type_t v2 = sub_100026EE4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100026EE4()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  swift_storeEnumTagMultiPayload();
  sub_10002C318(v1, v2, &qword_100208C48);
  uint64_t v3 = *(void *)(v0 + 48);
  unint64_t v5 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  char v6 = *(unsigned char *)(v0 + 144);
  sub_10002C318(*(void *)(v0 + 88), *(void *)(v0 + 16), &qword_100208C48);
  sub_10002B44C(v3, v5, v4, v6);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_100026FE8()
{
  **(void **)(v0 + 88) = *(void *)(v0 + 136);
  swift_storeEnumTagMultiPayload();
  uint64_t v1 = *(void *)(v0 + 48);
  unint64_t v3 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  char v4 = *(unsigned char *)(v0 + 144);
  sub_10002C318(*(void *)(v0 + 88), *(void *)(v0 + 16), &qword_100208C48);
  sub_10002B44C(v1, v3, v2, v4);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1000270D4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 96) = a6;
  *(void *)(v7 + 104) = a7;
  *(unsigned char *)(v7 + 208) = a4;
  *(void *)(v7 + 80) = a3;
  *(void *)(v7 + 88) = a5;
  *(void *)(v7 + 64) = a1;
  *(void *)(v7 + 72) = a2;
  uint64_t v8 = sub_1001C02A0();
  *(void *)(v7 + 112) = v8;
  *(void *)(v7 + 120) = *(void *)(v8 - 8);
  *(void *)(v7 + 128) = swift_task_alloc();
  swift_retain();
  return _swift_task_switch(sub_1000271B0, 0, 0);
}

uint64_t sub_1000271B0()
{
  uint64_t v1 = sub_1001C02C0();
  os_signpost_type_t v2 = sub_1001C1290();
  uint64_t v3 = sub_1001C12D0();
  if ((v3 & 1) == 0) {
    goto LABEL_5;
  }
  char v6 = *(char **)(v0 + 72);
  if (*(unsigned char *)(v0 + 208))
  {
    if ((unint64_t)v6 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v6 >> 11 == 27)
      {
LABEL_16:
        __break(1u);
        return _swift_task_switch(v3, v4, v5);
      }
      if (v6 >> 16 <= 0x10)
      {
        char v6 = sub_100155C18();
        goto LABEL_10;
      }
    }
    __break(1u);
    goto LABEL_16;
  }
  if (!v6)
  {
    __break(1u);
LABEL_5:
    uint64_t v7 = *(void *)(v0 + 120);

    (*(void (**)(void, void, void))(v7 + 16))(*(void *)(v0 + 128), *(void *)(v0 + 88), *(void *)(v0 + 112));
    goto LABEL_11;
  }
LABEL_10:
  uint64_t v9 = *(void *)(v0 + 120);
  uint64_t v8 = *(void *)(v0 + 128);
  uint64_t v10 = *(void *)(v0 + 112);
  os_signpost_id_t v11 = *(void (**)(uint64_t, void, uint64_t))(v9 + 16);
  v11(v8, *(void *)(v0 + 88), v10);
  Swift::String v12 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)Swift::String v12 = 0;
  os_signpost_id_t v13 = sub_1001C0290();
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v1, v2, v13, v6, "", v12, 2u);
  swift_slowDealloc();

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  v11(*(void *)(v0 + 128), *(void *)(v0 + 88), *(void *)(v0 + 112));
LABEL_11:
  sub_1001C0310();
  swift_allocObject();
  *(void *)(v0 + 136) = sub_1001C0300();
  swift_retain();
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_1000273F0;
  uint64_t v15 = *(void *)(v0 + 104);
  v14[14] = v0 + 16;
  v14[15] = v15;
  uint64_t v3 = (uint64_t)sub_100024A28;
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_1000273F0()
{
  os_signpost_type_t v2 = *(_OWORD **)v1;
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1000275D8;
  }
  else
  {
    long long v4 = v2[2];
    v2[10] = v2[1];
    v2[11] = v4;
    v2[12] = v2[3];
    uint64_t v3 = sub_100027514;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100027514()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 96);
  unint64_t v2 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 64);
  BOOL v5 = *(void *)(v0 + 152) != 0;
  long long v6 = *(_OWORD *)(v0 + 176);
  long long v7 = *(_OWORD *)(v0 + 192);
  char v8 = *(unsigned char *)(v0 + 208);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v4 + 16) = v6;
  *(_OWORD *)(v4 + 32) = v7;
  *(unsigned char *)(v4 + 48) = v5;
  sub_10002B44C(v1, v2, v3, v8);
  swift_release();
  swift_release_n();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_1000275D8()
{
  uint64_t v1 = *(void *)(v0 + 152);
  swift_release();
  uint64_t v2 = *(void *)(v0 + 96);
  unint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v5 = *(void *)(v0 + 64);
  BOOL v6 = *(void *)(v0 + 152) != 0;
  char v7 = *(unsigned char *)(v0 + 208);
  *(void *)uint64_t v5 = v1;
  *(_OWORD *)(v5 + 8) = 0u;
  *(_OWORD *)(v5 + 24) = 0u;
  *(void *)(v5 + 40) = 0;
  *(unsigned char *)(v5 + 48) = v6;
  sub_10002B44C(v2, v3, v4, v7);
  swift_release();
  swift_release_n();
  swift_task_dealloc();
  char v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1000276A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10002C318(a2, (uint64_t)v15, &qword_100208CA0);
  uint64_t v8 = v15[0];
  sub_10002C318(a2, (uint64_t)v16, &qword_100208CA0);
  if (v16[48])
  {
    swift_errorRetain();
    swift_errorRetain();
    sub_100003918(&qword_100208C98);
    if (swift_dynamicCast())
    {
      if (*(void *)(v14 + 16))
      {
        uint64_t v8 = *(void *)(v14 + 32);
        swift_errorRetain();
        sub_10002C218(a2);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_10002C2C4();
        uint64_t v8 = swift_allocError();
        *(unsigned char *)uint64_t v11 = v13;
        *(void *)(v11 + 8) = v14;
        sub_10002C218(a2);
      }
    }
    uint64_t v12 = a1 + *(int *)(sub_100003918(&qword_100208CA8) + 84);
    uint64_t result = sub_100028A6C(*(void *)v12, *(void *)(v12 + 8), *(void *)(v12 + 16), *(unsigned char *)(v12 + 24));
    *(void *)uint64_t v12 = v8;
    *(void *)(v12 + 8) = a3;
    *(void *)(v12 + 16) = a4;
    *(unsigned char *)(v12 + 24) = 1;
  }
  else
  {
    uint64_t v9 = a1 + *(int *)(sub_100003918(&qword_100208CA8) + 84);
    uint64_t result = sub_100028A6C(*(void *)v9, *(void *)(v9 + 8), *(void *)(v9 + 16), *(unsigned char *)(v9 + 24));
    *(void *)uint64_t v9 = a3;
    *(void *)(v9 + 8) = a4;
    *(void *)(v9 + 16) = 0;
    *(unsigned char *)(v9 + 24) = 0;
  }
  return result;
}

uint64_t sub_100027834()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  uint64_t v2 = v0 + *(void *)(*(void *)v0 + 128);
  type metadata accessor for RequestMetrics.State();
  uint64_t v3 = sub_1001BF4C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + *(void *)(*(void *)v0 + 136), v1);
  uint64_t v4 = v0 + *(void *)(*(void *)v0 + 144);
  uint64_t v5 = sub_1001BF310();
  BOOL v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(v0 + *(void *)(*(void *)v0 + 152), v5);
  uint64_t v7 = v0 + *(void *)(*(void *)v0 + 160);
  uint64_t v8 = sub_1001BF2C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v0 + *(void *)(*(void *)v0 + 168);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v9, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100010360(v0 + *(void *)(*(void *)v0 + 200), qword_100208CD0);
  swift_bridgeObjectRelease();
  uint64_t v11 = v0 + *(void *)(*(void *)v0 + 224);
  uint64_t v12 = sub_1001BF950();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = v0 + *(void *)(*(void *)v0 + 248);
  uint64_t v14 = sub_1001C0340();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease();
  uint64_t v15 = v0 + *(void *)(*(void *)v0 + 264);
  uint64_t v16 = sub_100003918(qword_100208000);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = v0 + *(void *)(*(void *)v0 + 272);
  uint64_t v18 = sub_1001C02D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = v0 + *(void *)(*(void *)v0 + 280);
  uint64_t v20 = sub_1001C02A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  swift_release();
  v6(v0 + *(void *)(*(void *)v0 + 296), v5);
  uint64_t v21 = v0 + *(void *)(*(void *)v0 + 304);
  uint64_t v22 = sub_1001C12F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  swift_release();
  return v0;
}

uint64_t sub_100027E0C()
{
  sub_100027834();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RequestMetrics()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for RequestMetrics.State()
{
  return swift_getGenericMetadata();
}

char *sub_100027E94()
{
  if (!&swift_runtimeSupportsNoncopyableTypes) {
    return (char *)&type metadata for () + 8;
  }
  type metadata accessor for RequestMetrics.State();
  return (char *)sub_1001BF4C0();
}

uint64_t sub_100027EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 120);
}

uint64_t sub_100027F00()
{
  uint64_t result = type metadata accessor for RequestMetrics.State.OHTTPConnectionEstablishmentState();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for RequestMetrics.State.RopesRequestState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_100028080(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v7 = type metadata accessor for RequestMetrics.State.OHTTPConnectionEstablishmentState();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v15 = a2[2];
    swift_errorRetain();
    a1[2] = v15;
LABEL_10:
    swift_storeEnumTagMultiPayload();
    goto LABEL_11;
  }
  if (!EnumCaseMultiPayload)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v9 = *(int *)(sub_100003918(&qword_100208A98) + 48);
    __dst = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = sub_1001C05B0();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = sub_100003918(&qword_100208AA0);
      memcpy(__dst, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    goto LABEL_10;
  }
  memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_11:
  uint64_t v16 = a3[17];
  uint64_t v17 = (uint64_t *)((char *)a1 + v16);
  uint64_t v18 = (uint64_t *)((char *)a2 + v16);
  uint64_t v19 = type metadata accessor for RequestMetrics.State.RopesRequestState();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
      *uint64_t v17 = *v18;
      swift_retain();
      goto LABEL_15;
    case 4u:
      uint64_t v20 = sub_1001BF810();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v17, v18, v20);
      uint64_t v21 = sub_100003918(qword_100208AA8);
      *(_OWORD *)((char *)v17 + *(int *)(v21 + 48)) = *(_OWORD *)((char *)v18 + *(int *)(v21 + 48));
LABEL_15:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
      break;
  }
  uint64_t v22 = a3[18];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = *(void *)v24;
  uint64_t v26 = *((void *)v24 + 1);
  uint64_t v27 = *((void *)v24 + 2);
  char v28 = v24[24];
  sub_100028718(*(void *)v24, v26, v27, v28);
  *(void *)uint64_t v23 = v25;
  *((void *)v23 + 1) = v26;
  *((void *)v23 + 2) = v27;
  v23[24] = v28;
  uint64_t v29 = a3[19];
  char v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = *(void *)v31;
  LOBYTE(v26) = v31[8];
  sub_100028630(*(void *)v31, v26);
  *(void *)char v30 = v32;
  v30[8] = v26;
  uint64_t v33 = a3[20];
  uint64_t v34 = (uint64_t *)((char *)a1 + v33);
  uint64_t v35 = (uint64_t *)((char *)a2 + v33);
  uint64_t v36 = *v35;
  uint64_t v37 = v35[1];
  uint64_t v38 = v35[2];
  unint64_t v39 = v35[3];
  sub_100028644(*v35, v37, v38, v39);
  *uint64_t v34 = v36;
  v34[1] = v37;
  v34[2] = v38;
  v34[3] = v39;
  uint64_t v40 = a3[21];
  uint64_t v41 = (char *)a1 + v40;
  unint64_t v42 = (char *)a2 + v40;
  uint64_t v43 = *(void *)v42;
  uint64_t v44 = *((void *)v42 + 1);
  uint64_t v45 = *((void *)v42 + 2);
  LOBYTE(v39) = v42[24];
  sub_100028718(*(void *)v42, v44, v45, v39);
  *(void *)uint64_t v41 = v43;
  *((void *)v41 + 1) = v44;
  *((void *)v41 + 2) = v45;
  v41[24] = v39;
  uint64_t v46 = a3[22];
  char v47 = (char *)a1 + v46;
  uint64_t v48 = (char *)a2 + v46;
  uint64_t v49 = *(void *)v48;
  uint64_t v50 = *((void *)v48 + 1);
  uint64_t v51 = *((void *)v48 + 2);
  LOBYTE(v39) = v48[24];
  sub_100028718(*(void *)v48, v50, v51, v39);
  *(void *)char v47 = v49;
  *((void *)v47 + 1) = v50;
  *((void *)v47 + 2) = v51;
  v47[24] = v39;
  uint64_t v52 = a3[23];
  uint64_t v53 = a3[24];
  uint64_t v54 = (char *)a1 + v52;
  uint64_t v55 = (char *)a2 + v52;
  *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
  v54[16] = v55[16];
  uint64_t v56 = (_OWORD *)((char *)a1 + v53);
  uint64_t v57 = (_OWORD *)((char *)a2 + v53);
  *uint64_t v56 = *v57;
  *(_OWORD *)((char *)v56 + 9) = *(_OWORD *)((char *)v57 + 9);
  uint64_t v58 = a3[25];
  uint64_t v59 = a3[26];
  uint64_t v60 = (_OWORD *)((char *)a1 + v58);
  uint64_t v61 = (_OWORD *)((char *)a2 + v58);
  *uint64_t v60 = *v61;
  *(_OWORD *)((char *)v60 + 9) = *(_OWORD *)((char *)v61 + 9);
  uint64_t v62 = (char *)a1 + v59;
  uint64_t v63 = (char *)a2 + v59;
  *(_OWORD *)uint64_t v62 = *(_OWORD *)v63;
  v62[16] = v63[16];
  uint64_t v64 = a3[27];
  uint64_t v65 = a3[28];
  unint64_t v66 = (char *)a1 + v64;
  unint64_t v67 = (char *)a2 + v64;
  long long v68 = *(_OWORD *)v67;
  v66[16] = v67[16];
  *(_OWORD *)unint64_t v66 = v68;
  unint64_t v69 = (char *)a1 + v65;
  uint64_t v70 = (char *)a2 + v65;
  v69[16] = v70[16];
  *(_OWORD *)unint64_t v69 = *(_OWORD *)v70;
  uint64_t v71 = a3[29];
  uint64_t v72 = a3[30];
  uint64_t v73 = (char *)a1 + v71;
  uint64_t v74 = (char *)a2 + v71;
  v73[8] = v74[8];
  *(void *)uint64_t v73 = *(void *)v74;
  uint64_t v75 = (uint64_t *)((char *)a1 + v72);
  uint64_t v76 = (uint64_t *)((char *)a2 + v72);
  uint64_t v77 = v76[1];
  *uint64_t v75 = *v76;
  v75[1] = v77;
  uint64_t v78 = a3[32];
  *(uint64_t *)((char *)a1 + a3[31]) = *(uint64_t *)((char *)a2 + a3[31]);
  *(uint64_t *)((char *)a1 + v78) = *(uint64_t *)((char *)a2 + v78);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t type metadata accessor for RequestMetrics.State.OHTTPConnectionEstablishmentState()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for RequestMetrics.State.RopesRequestState()
{
  return swift_getGenericMetadata();
}

uint64_t sub_100028630(uint64_t a1, char a2)
{
  if (a2 == 3) {
    return swift_errorRetain();
  }
  return result;
}

uint64_t sub_100028644(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  switch(a4 >> 61)
  {
    case 0uLL:
      goto LABEL_4;
    case 1uLL:
      swift_retain();
      goto LABEL_4;
    case 2uLL:
      swift_bridgeObjectRetain();
LABEL_4:
      uint64_t result = swift_retain();
      break;
    case 3uLL:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    case 4uLL:
      uint64_t result = swift_errorRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100028718(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 1) {
    return swift_errorRetain();
  }
  return result;
}

uint64_t sub_10002872C(uint64_t a1, int *a2)
{
  type metadata accessor for RequestMetrics.State.OHTTPConnectionEstablishmentState();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    swift_errorRelease();
  }
  else if (!EnumCaseMultiPayload)
  {
    uint64_t v5 = a1 + *(int *)(sub_100003918(&qword_100208A98) + 48);
    uint64_t v6 = sub_1001C05B0();
    uint64_t v10 = *(void *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v5, v6);
    }
  }
  uint64_t v7 = a1 + a2[17];
  type metadata accessor for RequestMetrics.State.RopesRequestState();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
      swift_release();
      break;
    case 4u:
      uint64_t v8 = sub_1001BF810();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
      break;
    default:
      break;
  }
  sub_100028A6C(*(void *)(a1 + a2[18]), *(void *)(a1 + a2[18] + 8), *(void *)(a1 + a2[18] + 16), *(unsigned char *)(a1 + a2[18] + 24));
  sub_100028984(*(void *)(a1 + a2[19]), *(unsigned char *)(a1 + a2[19] + 8));
  sub_100028998(*(void *)(a1 + a2[20]), *(void *)(a1 + a2[20] + 8), *(void *)(a1 + a2[20] + 16), *(void *)(a1 + a2[20] + 24));
  sub_100028A6C(*(void *)(a1 + a2[21]), *(void *)(a1 + a2[21] + 8), *(void *)(a1 + a2[21] + 16), *(unsigned char *)(a1 + a2[21] + 24));
  sub_100028A6C(*(void *)(a1 + a2[22]), *(void *)(a1 + a2[22] + 8), *(void *)(a1 + a2[22] + 16), *(unsigned char *)(a1 + a2[22] + 24));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100028984(uint64_t a1, char a2)
{
  if (a2 == 3) {
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_100028998(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  switch(a4 >> 61)
  {
    case 0uLL:
      goto LABEL_4;
    case 1uLL:
      swift_release();
      goto LABEL_4;
    case 2uLL:
      swift_bridgeObjectRelease();
LABEL_4:
      uint64_t result = swift_release();
      break;
    case 3uLL:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 4uLL:
      uint64_t result = swift_errorRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100028A6C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 1) {
    return swift_errorRelease();
  }
  return result;
}

void *sub_100028A80(void *a1, void *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for RequestMetrics.State.OHTTPConnectionEstablishmentState();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v13 = a2[2];
    swift_errorRetain();
    a1[2] = v13;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_9;
    }
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v8 = *(int *)(sub_100003918(&qword_100208A98) + 48);
    __dst = (char *)a1 + v8;
    uint64_t v9 = (char *)a2 + v8;
    uint64_t v10 = sub_1001C05B0();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_100003918(&qword_100208AA0);
      memcpy(__dst, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
    }
  }
  swift_storeEnumTagMultiPayload();
LABEL_9:
  uint64_t v14 = a3[17];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v17 = type metadata accessor for RequestMetrics.State.RopesRequestState();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
      *uint64_t v15 = *v16;
      swift_retain();
      goto LABEL_13;
    case 4u:
      uint64_t v18 = sub_1001BF810();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v15, v16, v18);
      uint64_t v19 = sub_100003918(qword_100208AA8);
      *(_OWORD *)((char *)v15 + *(int *)(v19 + 48)) = *(_OWORD *)((char *)v16 + *(int *)(v19 + 48));
LABEL_13:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
      break;
  }
  uint64_t v20 = a3[18];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = *(void *)v22;
  uint64_t v24 = *((void *)v22 + 1);
  uint64_t v25 = *((void *)v22 + 2);
  char v26 = v22[24];
  sub_100028718(*(void *)v22, v24, v25, v26);
  *(void *)uint64_t v21 = v23;
  *((void *)v21 + 1) = v24;
  *((void *)v21 + 2) = v25;
  v21[24] = v26;
  uint64_t v27 = a3[19];
  char v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = *(void *)v29;
  LOBYTE(v24) = v29[8];
  sub_100028630(*(void *)v29, v24);
  *(void *)char v28 = v30;
  v28[8] = v24;
  uint64_t v31 = a3[20];
  uint64_t v32 = (void *)((char *)a1 + v31);
  uint64_t v33 = (void *)((char *)a2 + v31);
  uint64_t v34 = *v33;
  uint64_t v35 = v33[1];
  uint64_t v36 = v33[2];
  unint64_t v37 = v33[3];
  sub_100028644(*v33, v35, v36, v37);
  *uint64_t v32 = v34;
  v32[1] = v35;
  v32[2] = v36;
  v32[3] = v37;
  uint64_t v38 = a3[21];
  unint64_t v39 = (char *)a1 + v38;
  uint64_t v40 = (char *)a2 + v38;
  uint64_t v41 = *(void *)v40;
  uint64_t v42 = *((void *)v40 + 1);
  uint64_t v43 = *((void *)v40 + 2);
  LOBYTE(v37) = v40[24];
  sub_100028718(*(void *)v40, v42, v43, v37);
  *(void *)unint64_t v39 = v41;
  *((void *)v39 + 1) = v42;
  *((void *)v39 + 2) = v43;
  v39[24] = v37;
  uint64_t v44 = a3[22];
  uint64_t v45 = (char *)a1 + v44;
  uint64_t v46 = (char *)a2 + v44;
  uint64_t v47 = *(void *)v46;
  uint64_t v48 = *((void *)v46 + 1);
  uint64_t v49 = *((void *)v46 + 2);
  LOBYTE(v37) = v46[24];
  sub_100028718(*(void *)v46, v48, v49, v37);
  *(void *)uint64_t v45 = v47;
  *((void *)v45 + 1) = v48;
  *((void *)v45 + 2) = v49;
  v45[24] = v37;
  uint64_t v50 = a3[23];
  uint64_t v51 = a3[24];
  uint64_t v52 = (char *)a1 + v50;
  uint64_t v53 = (char *)a2 + v50;
  *(_OWORD *)uint64_t v52 = *(_OWORD *)v53;
  v52[16] = v53[16];
  uint64_t v54 = (_OWORD *)((char *)a1 + v51);
  uint64_t v55 = (_OWORD *)((char *)a2 + v51);
  *uint64_t v54 = *v55;
  *(_OWORD *)((char *)v54 + 9) = *(_OWORD *)((char *)v55 + 9);
  uint64_t v56 = a3[25];
  uint64_t v57 = a3[26];
  uint64_t v58 = (_OWORD *)((char *)a1 + v56);
  uint64_t v59 = (_OWORD *)((char *)a2 + v56);
  *uint64_t v58 = *v59;
  *(_OWORD *)((char *)v58 + 9) = *(_OWORD *)((char *)v59 + 9);
  uint64_t v60 = (char *)a1 + v57;
  uint64_t v61 = (char *)a2 + v57;
  *(_OWORD *)uint64_t v60 = *(_OWORD *)v61;
  v60[16] = v61[16];
  uint64_t v62 = a3[27];
  uint64_t v63 = a3[28];
  uint64_t v64 = (char *)a1 + v62;
  uint64_t v65 = (char *)a2 + v62;
  long long v66 = *(_OWORD *)v65;
  v64[16] = v65[16];
  *(_OWORD *)uint64_t v64 = v66;
  unint64_t v67 = (char *)a1 + v63;
  long long v68 = (char *)a2 + v63;
  v67[16] = v68[16];
  *(_OWORD *)unint64_t v67 = *(_OWORD *)v68;
  uint64_t v69 = a3[29];
  uint64_t v70 = a3[30];
  uint64_t v71 = (char *)a1 + v69;
  uint64_t v72 = (char *)a2 + v69;
  v71[8] = v72[8];
  *(void *)uint64_t v71 = *(void *)v72;
  uint64_t v73 = (void *)((char *)a1 + v70);
  uint64_t v74 = (void *)((char *)a2 + v70);
  uint64_t v75 = v74[1];
  *uint64_t v73 = *v74;
  v73[1] = v75;
  uint64_t v76 = a3[32];
  *(void *)((char *)a1 + a3[31]) = *(void *)((char *)a2 + a3[31]);
  *(void *)((char *)a1 + v76) = *(void *)((char *)a2 + v76);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100028FB0(void *a1, void *a2, int *a3)
{
  if (a1 == a2) {
    goto LABEL_15;
  }
  uint64_t v6 = type metadata accessor for RequestMetrics.State.OHTTPConnectionEstablishmentState();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v14 = a2[2];
    swift_errorRetain();
    a1[2] = v14;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v7 + 64));
      goto LABEL_10;
    }
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v9 = *(int *)(sub_100003918(&qword_100208A98) + 48);
    __dst = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = sub_1001C05B0();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = sub_100003918(&qword_100208AA0);
      memcpy(__dst, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
  }
  swift_storeEnumTagMultiPayload();
LABEL_10:
  uint64_t v15 = a3[17];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t v18 = type metadata accessor for RequestMetrics.State.RopesRequestState();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(void *, uint64_t))(v19 + 8))(v16, v18);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
      *uint64_t v16 = *v17;
      swift_retain();
      goto LABEL_14;
    case 4u:
      uint64_t v20 = sub_1001BF810();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v16, v17, v20);
      uint64_t v21 = sub_100003918(qword_100208AA8);
      *(_OWORD *)((char *)v16 + *(int *)(v21 + 48)) = *(_OWORD *)((char *)v17 + *(int *)(v21 + 48));
LABEL_14:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v16, v17, *(void *)(v19 + 64));
      break;
  }
LABEL_15:
  uint64_t v22 = a3[18];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = *(void *)v24;
  uint64_t v26 = *((void *)v24 + 1);
  uint64_t v27 = *((void *)v24 + 2);
  char v28 = v24[24];
  sub_100028718(*(void *)v24, v26, v27, v28);
  uint64_t v29 = *(void *)v23;
  uint64_t v30 = *((void *)v23 + 1);
  uint64_t v31 = *((void *)v23 + 2);
  *(void *)uint64_t v23 = v25;
  *((void *)v23 + 1) = v26;
  *((void *)v23 + 2) = v27;
  char v32 = v23[24];
  v23[24] = v28;
  sub_100028A6C(v29, v30, v31, v32);
  uint64_t v33 = a3[19];
  uint64_t v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  uint64_t v36 = *(void *)v35;
  LOBYTE(v26) = v35[8];
  sub_100028630(*(void *)v35, v26);
  uint64_t v37 = *(void *)v34;
  *(void *)uint64_t v34 = v36;
  char v38 = v34[8];
  v34[8] = v26;
  sub_100028984(v37, v38);
  uint64_t v39 = a3[20];
  uint64_t v40 = (void *)((char *)a1 + v39);
  uint64_t v41 = (void *)((char *)a2 + v39);
  uint64_t v42 = *v41;
  uint64_t v43 = v41[1];
  uint64_t v44 = v41[2];
  unint64_t v45 = v41[3];
  sub_100028644(*v41, v43, v44, v45);
  uint64_t v46 = *v40;
  uint64_t v47 = v40[1];
  uint64_t v48 = v40[2];
  unint64_t v49 = v40[3];
  *uint64_t v40 = v42;
  v40[1] = v43;
  v40[2] = v44;
  v40[3] = v45;
  sub_100028998(v46, v47, v48, v49);
  uint64_t v50 = a3[21];
  uint64_t v51 = (char *)a1 + v50;
  uint64_t v52 = (char *)a2 + v50;
  uint64_t v53 = *(void *)v52;
  uint64_t v54 = *((void *)v52 + 1);
  uint64_t v55 = *((void *)v52 + 2);
  LOBYTE(v45) = v52[24];
  sub_100028718(*(void *)v52, v54, v55, v45);
  uint64_t v56 = *(void *)v51;
  uint64_t v57 = *((void *)v51 + 1);
  uint64_t v58 = *((void *)v51 + 2);
  *(void *)uint64_t v51 = v53;
  *((void *)v51 + 1) = v54;
  *((void *)v51 + 2) = v55;
  char v59 = v51[24];
  v51[24] = v45;
  sub_100028A6C(v56, v57, v58, v59);
  uint64_t v60 = a3[22];
  uint64_t v61 = (char *)a1 + v60;
  uint64_t v62 = (char *)a2 + v60;
  uint64_t v63 = *(void *)v62;
  uint64_t v64 = *((void *)v62 + 1);
  uint64_t v65 = *((void *)v62 + 2);
  LOBYTE(v45) = v62[24];
  sub_100028718(*(void *)v62, v64, v65, v45);
  uint64_t v66 = *(void *)v61;
  uint64_t v67 = *((void *)v61 + 1);
  uint64_t v68 = *((void *)v61 + 2);
  *(void *)uint64_t v61 = v63;
  *((void *)v61 + 1) = v64;
  *((void *)v61 + 2) = v65;
  char v69 = v61[24];
  v61[24] = v45;
  sub_100028A6C(v66, v67, v68, v69);
  uint64_t v70 = a3[23];
  uint64_t v71 = (char *)a1 + v70;
  uint64_t v72 = (char *)a2 + v70;
  long long v73 = *(_OWORD *)v72;
  v71[16] = v72[16];
  *(_OWORD *)uint64_t v71 = v73;
  uint64_t v74 = a3[24];
  uint64_t v75 = (_OWORD *)((char *)a1 + v74);
  uint64_t v76 = (_OWORD *)((char *)a2 + v74);
  long long v77 = *(_OWORD *)((char *)v76 + 9);
  *uint64_t v75 = *v76;
  *(_OWORD *)((char *)v75 + 9) = v77;
  uint64_t v78 = a3[25];
  os_log_t v79 = (_OWORD *)((char *)a1 + v78);
  os_log_type_t v80 = (_OWORD *)((char *)a2 + v78);
  long long v81 = *(_OWORD *)((char *)v80 + 9);
  *os_log_t v79 = *v80;
  *(_OWORD *)((char *)v79 + 9) = v81;
  uint64_t v82 = a3[26];
  uint64_t v83 = (char *)a1 + v82;
  uint64_t v84 = (char *)a2 + v82;
  char v85 = v84[16];
  *(_OWORD *)uint64_t v83 = *(_OWORD *)v84;
  v83[16] = v85;
  uint64_t v86 = a3[27];
  uint64_t v87 = (char *)a1 + v86;
  unint64_t v88 = (char *)a2 + v86;
  char v89 = v88[16];
  *(_OWORD *)uint64_t v87 = *(_OWORD *)v88;
  v87[16] = v89;
  uint64_t v90 = a3[28];
  uint64_t v91 = (char *)a1 + v90;
  uint64_t v92 = (char *)a2 + v90;
  char v93 = v92[16];
  *(_OWORD *)uint64_t v91 = *(_OWORD *)v92;
  v91[16] = v93;
  uint64_t v94 = a3[29];
  uint64_t v95 = (char *)a1 + v94;
  uint64_t v96 = (char *)a2 + v94;
  char v97 = v96[8];
  *(void *)uint64_t v95 = *(void *)v96;
  v95[8] = v97;
  uint64_t v98 = a3[30];
  uint64_t v99 = (void *)((char *)a1 + v98);
  Swift::String v100 = (void *)((char *)a2 + v98);
  *uint64_t v99 = *v100;
  v99[1] = v100[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[31]) = *(void *)((char *)a2 + a3[31]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[32]) = *(void *)((char *)a2 + a3[32]);
  return a1;
}

_OWORD *sub_1000295D0(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for RequestMetrics.State.OHTTPConnectionEstablishmentState();
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = *(int *)(sub_100003918(&qword_100208A98) + 48);
    uint64_t v58 = (char *)a1 + v7;
    uint64_t v8 = (char *)a2 + v7;
    uint64_t v9 = sub_1001C05B0();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      uint64_t v11 = sub_100003918(&qword_100208AA0);
      memcpy(v58, v8, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v58, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v58, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v12 = a3[17];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for RequestMetrics.State.RopesRequestState();
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    uint64_t v16 = sub_1001BF810();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
    uint64_t v17 = sub_100003918(qword_100208AA8);
    *(_OWORD *)&v13[*(int *)(v17 + 48)] = *(_OWORD *)&v14[*(int *)(v17 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  uint64_t v18 = a3[18];
  uint64_t v19 = a3[19];
  uint64_t v20 = (_OWORD *)((char *)a1 + v18);
  uint64_t v21 = (_OWORD *)((char *)a2 + v18);
  *uint64_t v20 = *v21;
  *(_OWORD *)((char *)v20 + 9) = *(_OWORD *)((char *)v21 + 9);
  uint64_t v22 = (char *)a1 + v19;
  uint64_t v23 = (char *)a2 + v19;
  *(void *)uint64_t v22 = *(void *)v23;
  v22[8] = v23[8];
  uint64_t v24 = a3[20];
  uint64_t v25 = a3[21];
  uint64_t v26 = (_OWORD *)((char *)a1 + v24);
  uint64_t v27 = (_OWORD *)((char *)a2 + v24);
  long long v28 = v27[1];
  *uint64_t v26 = *v27;
  v26[1] = v28;
  uint64_t v29 = (_OWORD *)((char *)a1 + v25);
  uint64_t v30 = (_OWORD *)((char *)a2 + v25);
  *uint64_t v29 = *v30;
  *(_OWORD *)((char *)v29 + 9) = *(_OWORD *)((char *)v30 + 9);
  uint64_t v31 = a3[22];
  uint64_t v32 = a3[23];
  uint64_t v33 = (_OWORD *)((char *)a1 + v31);
  uint64_t v34 = (_OWORD *)((char *)a2 + v31);
  long long v35 = *v34;
  *(_OWORD *)((char *)v33 + 9) = *(long long *)((char *)v34 + 9);
  _OWORD *v33 = v35;
  uint64_t v36 = (char *)a1 + v32;
  uint64_t v37 = (char *)a2 + v32;
  v36[16] = v37[16];
  *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
  uint64_t v38 = a3[24];
  uint64_t v39 = a3[25];
  uint64_t v40 = (_OWORD *)((char *)a1 + v38);
  uint64_t v41 = (_OWORD *)((char *)a2 + v38);
  *(_OWORD *)((char *)v40 + 9) = *(_OWORD *)((char *)v41 + 9);
  *uint64_t v40 = *v41;
  uint64_t v42 = (_OWORD *)((char *)a1 + v39);
  uint64_t v43 = (_OWORD *)((char *)a2 + v39);
  *(_OWORD *)((char *)v42 + 9) = *(_OWORD *)((char *)v43 + 9);
  *uint64_t v42 = *v43;
  uint64_t v44 = a3[26];
  uint64_t v45 = a3[27];
  uint64_t v46 = (char *)a1 + v44;
  uint64_t v47 = (char *)a2 + v44;
  v46[16] = v47[16];
  *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
  uint64_t v48 = (char *)a1 + v45;
  unint64_t v49 = (char *)a2 + v45;
  v48[16] = v49[16];
  *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
  uint64_t v50 = a3[28];
  uint64_t v51 = a3[29];
  uint64_t v52 = (char *)a1 + v50;
  uint64_t v53 = (char *)a2 + v50;
  v52[16] = v53[16];
  *(_OWORD *)uint64_t v52 = *(_OWORD *)v53;
  uint64_t v54 = (char *)a1 + v51;
  uint64_t v55 = (char *)a2 + v51;
  v54[8] = v55[8];
  *(void *)uint64_t v54 = *(void *)v55;
  uint64_t v56 = a3[31];
  *(_OWORD *)((char *)a1 + a3[30]) = *(_OWORD *)((char *)a2 + a3[30]);
  *(void *)((char *)a1 + v56) = *(void *)((char *)a2 + v56);
  *(void *)((char *)a1 + a3[32]) = *(void *)((char *)a2 + a3[32]);
  return a1;
}

_OWORD *sub_1000299AC(_OWORD *a1, _OWORD *a2, int *a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = type metadata accessor for RequestMetrics.State.OHTTPConnectionEstablishmentState();
    uint64_t v7 = *(void *)(v6 - 8);
    (*(void (**)(_OWORD *, uint64_t))(v7 + 8))(a1, v6);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(v7 + 64));
    }
    else
    {
      *a1 = *a2;
      uint64_t v8 = *(int *)(sub_100003918(&qword_100208A98) + 48);
      unint64_t v88 = (char *)a1 + v8;
      uint64_t v9 = (char *)a2 + v8;
      uint64_t v10 = sub_1001C05B0();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        uint64_t v12 = sub_100003918(&qword_100208AA0);
        memcpy(v88, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v88, v9, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v88, 0, 1, v10);
      }
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v13 = a3[17];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = type metadata accessor for RequestMetrics.State.RopesRequestState();
    uint64_t v17 = *(void *)(v16 - 8);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      uint64_t v18 = sub_1001BF810();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v14, v15, v18);
      uint64_t v19 = sub_100003918(qword_100208AA8);
      *(_OWORD *)&v14[*(int *)(v19 + 48)] = *(_OWORD *)&v15[*(int *)(v19 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(void *)(v17 + 64));
    }
  }
  uint64_t v20 = a3[18];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = *((void *)v22 + 2);
  char v24 = v22[24];
  uint64_t v25 = *(void *)v21;
  uint64_t v26 = *((void *)v21 + 1);
  uint64_t v27 = *((void *)v21 + 2);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *((void *)v21 + 2) = v23;
  char v28 = v21[24];
  v21[24] = v24;
  sub_100028A6C(v25, v26, v27, v28);
  uint64_t v29 = a3[19];
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = *(void *)v31;
  LOBYTE(v31) = v31[8];
  uint64_t v33 = *(void *)v30;
  *(void *)uint64_t v30 = v32;
  char v34 = v30[8];
  v30[8] = (char)v31;
  sub_100028984(v33, v34);
  uint64_t v35 = a3[20];
  uint64_t v36 = (uint64_t *)((char *)a1 + v35);
  uint64_t v37 = (_OWORD *)((char *)a2 + v35);
  uint64_t v38 = *v36;
  uint64_t v39 = v36[1];
  uint64_t v40 = v36[2];
  unint64_t v41 = v36[3];
  long long v42 = v37[1];
  *(_OWORD *)uint64_t v36 = *v37;
  *((_OWORD *)v36 + 1) = v42;
  sub_100028998(v38, v39, v40, v41);
  uint64_t v43 = a3[21];
  uint64_t v44 = (char *)a1 + v43;
  uint64_t v45 = (char *)a2 + v43;
  uint64_t v46 = *((void *)v45 + 2);
  char v47 = v45[24];
  uint64_t v48 = *(void *)v44;
  uint64_t v49 = *((void *)v44 + 1);
  uint64_t v50 = *((void *)v44 + 2);
  *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
  *((void *)v44 + 2) = v46;
  char v51 = v44[24];
  v44[24] = v47;
  sub_100028A6C(v48, v49, v50, v51);
  uint64_t v52 = a3[22];
  uint64_t v53 = (char *)a1 + v52;
  uint64_t v54 = (char *)a2 + v52;
  uint64_t v55 = *((void *)v54 + 2);
  char v56 = v54[24];
  uint64_t v57 = *(void *)v53;
  uint64_t v58 = *((void *)v53 + 1);
  uint64_t v59 = *((void *)v53 + 2);
  *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
  *((void *)v53 + 2) = v55;
  char v60 = v53[24];
  v53[24] = v56;
  sub_100028A6C(v57, v58, v59, v60);
  uint64_t v61 = a3[23];
  uint64_t v62 = a3[24];
  uint64_t v63 = (char *)a1 + v61;
  uint64_t v64 = (char *)a2 + v61;
  *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
  v63[16] = v64[16];
  uint64_t v65 = (_OWORD *)((char *)a1 + v62);
  uint64_t v66 = (_OWORD *)((char *)a2 + v62);
  *uint64_t v65 = *v66;
  *(_OWORD *)((char *)v65 + 9) = *(_OWORD *)((char *)v66 + 9);
  uint64_t v67 = a3[25];
  uint64_t v68 = a3[26];
  char v69 = (_OWORD *)((char *)a1 + v67);
  uint64_t v70 = (_OWORD *)((char *)a2 + v67);
  *char v69 = *v70;
  *(_OWORD *)((char *)v69 + 9) = *(_OWORD *)((char *)v70 + 9);
  uint64_t v71 = (char *)a1 + v68;
  uint64_t v72 = (char *)a2 + v68;
  v71[16] = v72[16];
  *(_OWORD *)uint64_t v71 = *(_OWORD *)v72;
  uint64_t v73 = a3[27];
  uint64_t v74 = a3[28];
  uint64_t v75 = (char *)a1 + v73;
  uint64_t v76 = (char *)a2 + v73;
  *(_OWORD *)uint64_t v75 = *(_OWORD *)v76;
  v75[16] = v76[16];
  long long v77 = (char *)a1 + v74;
  uint64_t v78 = (char *)a2 + v74;
  *(_OWORD *)long long v77 = *(_OWORD *)v78;
  v77[16] = v78[16];
  uint64_t v79 = a3[29];
  uint64_t v80 = a3[30];
  long long v81 = (char *)a1 + v79;
  uint64_t v82 = (char *)a2 + v79;
  *(void *)long long v81 = *(void *)v82;
  v81[8] = v82[8];
  uint64_t v83 = (void *)((char *)a1 + v80);
  uint64_t v84 = (uint64_t *)((char *)a2 + v80);
  uint64_t v86 = *v84;
  uint64_t v85 = v84[1];
  *uint64_t v83 = v86;
  v83[1] = v85;
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[31]) = *(void *)((char *)a2 + a3[31]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[32]) = *(void *)((char *)a2 + a3[32]);
  return a1;
}

uint64_t sub_100029E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100029E90);
}

uint64_t sub_100029E90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for RequestMetrics.State.OHTTPConnectionEstablishmentState();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  uint64_t v9 = type metadata accessor for RequestMetrics.State.RopesRequestState();
  uint64_t v10 = *(void *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) == a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + *(int *)(a3 + 68), a2, v9);
  }
  unint64_t v11 = *(void *)(a1 + *(int *)(a3 + 124));
  if (v11 >= 0xFFFFFFFF) {
    LODWORD(v11) = -1;
  }
  return (v11 + 1);
}

uint64_t sub_100029FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100029FEC);
}

uint64_t sub_100029FEC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for RequestMetrics.State.OHTTPConnectionEstablishmentState();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, v8);
  }
  uint64_t result = type metadata accessor for RequestMetrics.State.RopesRequestState();
  uint64_t v11 = *(void *)(result - 8);
  if (*(_DWORD *)(v11 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a1 + *(int *)(a4 + 68), a2, a2, result);
  }
  *(void *)(a1 + *(int *)(a4 + 124)) = (a2 - 1);
  return result;
}

uint64_t sub_10002A130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 56);
}

uint64_t sub_10002A138()
{
  uint64_t v3 = (char *)&value witness table for Builtin.NativeObject + 64;
  uint64_t v4 = (char *)&value witness table for Builtin.NativeObject + 64;
  uint64_t v5 = (char *)&value witness table for Builtin.NativeObject + 64;
  uint64_t v6 = &unk_1001CC978;
  uint64_t result = sub_1001BF810();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v7 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_10002A1F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
        *a1 = *a2;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v9 = sub_1001BF810();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        uint64_t v10 = sub_100003918(qword_100208AA8);
        *(_OWORD *)((char *)a1 + *(int *)(v10 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v10 + 48));
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_10002A39C(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
      uint64_t result = swift_release();
      break;
    case 4:
      uint64_t v3 = sub_1001BF810();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

void *sub_10002A470(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
      *a1 = *a2;
      swift_retain();
      goto LABEL_5;
    case 4u:
      uint64_t v6 = sub_1001BF810();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = sub_100003918(qword_100208AA8);
      *(_OWORD *)((char *)a1 + *(int *)(v7 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v7 + 48));
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *sub_10002A5CC(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 - 8);
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, a3);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
        *a1 = *a2;
        swift_retain();
        goto LABEL_6;
      case 4u:
        uint64_t v6 = sub_1001BF810();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = sub_100003918(qword_100208AA8);
        *(_OWORD *)((char *)a1 + *(int *)(v7 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v7 + 48));
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v5 + 64));
        break;
    }
  }
  return a1;
}

char *sub_10002A77C(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    uint64_t v6 = sub_1001BF810();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = sub_100003918(qword_100208AA8);
    *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_10002A84C(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 - 8);
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      uint64_t v6 = sub_1001BF810();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = sub_100003918(qword_100208AA8);
      *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v5 + 64));
    }
  }
  return a1;
}

void sub_10002A978()
{
  sub_10002B3E8(319, &qword_100208C30, (uint64_t (*)(uint64_t))&type metadata accessor for NWConnection.EstablishmentReport, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v1[4] = v1;
    v1[5] = &unk_1001CC9C8;
    swift_initEnumMetadataMultiPayload();
  }
}

uint64_t *sub_10002AA4C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v15 = a2[2];
      swift_errorRetain();
      a1[2] = v15;
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v8 = *(int *)(sub_100003918(&qword_100208A98) + 48);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_1001C05B0();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        uint64_t v13 = sub_100003918(&qword_100208AA0);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      goto LABEL_10;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t sub_10002AC2C(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    return swift_errorRelease();
  }
  else if (!result)
  {
    uint64_t v3 = a1 + *(int *)(sub_100003918(&qword_100208A98) + 48);
    uint64_t v4 = sub_1001C05B0();
    uint64_t v6 = *(void *)(v4 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v3, 1, v4);
    if (!result)
    {
      int v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
      return v5(v3, v4);
    }
  }
  return result;
}

void *sub_10002AD30(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v13 = a2[2];
    swift_errorRetain();
    a1[2] = v13;
LABEL_8:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = *(int *)(sub_100003918(&qword_100208A98) + 48);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1001C05B0();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_100003918(&qword_100208AA0);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    goto LABEL_8;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *sub_10002AECC(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 - 8);
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, a3);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v13 = a2[2];
      swift_errorRetain();
      a1[2] = v13;
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v7 = *(int *)(sub_100003918(&qword_100208A98) + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_1001C05B0();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        uint64_t v12 = sub_100003918(&qword_100208AA0);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      goto LABEL_9;
    }
    memcpy(a1, a2, *(void *)(v5 + 64));
  }
  return a1;
}

_OWORD *sub_10002B0BC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v6 = *(int *)(sub_100003918(&qword_100208A98) + 48);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1001C05B0();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      uint64_t v11 = sub_100003918(&qword_100208AA0);
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_10002B228(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 - 8);
    (*(void (**)(_OWORD *, uint64_t))(v5 + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(v5 + 64));
    }
    else
    {
      *a1 = *a2;
      uint64_t v6 = *(int *)(sub_100003918(&qword_100208A98) + 48);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_1001C05B0();
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        uint64_t v11 = sub_100003918(&qword_100208AA0);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void sub_10002B3E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_10002B44C(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  unint64_t v29 = a2;
  uint64_t v5 = sub_1001C02E0();
  uint64_t v28 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v6);
  unint64_t v8 = &v26[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1001C02A0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v12 = __chkstk_darwin(v9, v11);
  uint64_t v14 = &v26[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12, v15);
  uint64_t v17 = &v26[-v16];
  uint64_t v18 = sub_1001C02C0();
  sub_1001C02F0();
  int v27 = sub_1001C1280();
  if ((sub_1001C12D0() & 1) == 0) {
    goto LABEL_5;
  }
  if ((a4 & 1) == 0)
  {
    uint64_t v19 = (char *)v29;
    if (!v29)
    {
      __break(1u);
LABEL_5:

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v17, v9);
    }
    goto LABEL_10;
  }
  uint64_t result = v29;
  if (HIDWORD(v29))
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v29 >> 11 == 27)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  if (WORD1(v29) > 0x10u)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v19 = sub_100155C18();
LABEL_10:
  swift_retain();
  sub_1001C0320();
  swift_release();
  uint64_t v21 = v28;
  if ((*(unsigned int (**)(unsigned char *, uint64_t))(v28 + 88))(v8, v5) == enum case for OSSignpostError.doubleEnd(_:))
  {
    uint64_t v22 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v21 + 8))(v8, v5);
    uint64_t v22 = "";
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v14, v17, v9);
  uint64_t v23 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v23 = 0;
  os_signpost_id_t v24 = sub_1001C0290();
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v18, (os_signpost_type_t)v27, v24, v19, v22, v23, 2u);
  swift_slowDealloc();

  uint64_t v25 = *(void (**)(unsigned char *, uint64_t))(v10 + 8);
  v25(v17, v9);
  return ((uint64_t (*)(unsigned char *, uint64_t))v25)(v14, v9);
}

uint64_t sub_10002B764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10002C318(a2, (uint64_t)v8, &qword_100208CA0);
  return sub_1000276A4(a1, (uint64_t)v8, a3, a4);
}

uint64_t sub_10002B7F0(uint64_t a1, void (*a2)(void, void, char *), uint64_t a3)
{
  uint64_t v58 = a2;
  uint64_t v59 = a3;
  uint64_t v57 = sub_100003918(&qword_100208C68);
  uint64_t v6 = __chkstk_darwin(v57, v5);
  char v56 = (char *)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6, v8);
  uint64_t v55 = (void *)((char *)v46 - v10);
  __chkstk_darwin(v9, v11);
  uint64_t v54 = (char *)v46 - v12;
  uint64_t v13 = type metadata accessor for ValidatedAttestationOrAttestation();
  uint64_t v53 = *(void *)(v13 - 8);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v16 = (char *)v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v17 = *(void *)(a1 + 16);
  uint64_t v18 = _swiftEmptyArrayStorage;
  if (!v17) {
    return (uint64_t)v18;
  }
  v46[1] = v3;
  uint64_t v61 = _swiftEmptyArrayStorage;
  sub_10018F1D0(0, v17, 0);
  uint64_t result = sub_100156990(a1);
  uint64_t v21 = result;
  uint64_t v22 = 0;
  uint64_t v23 = a1 + 64;
  uint64_t v47 = a1 + 80;
  int64_t v48 = v17;
  char v51 = v16;
  uint64_t v52 = a1;
  uint64_t v49 = v20;
  uint64_t v50 = a1 + 64;
  while ((v21 & 0x8000000000000000) == 0 && v21 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v26 = (unint64_t)v21 >> 6;
    if ((*(void *)(v23 + 8 * ((unint64_t)v21 >> 6)) & (1 << v21)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v20) {
      goto LABEL_26;
    }
    uint64_t v60 = v22;
    uint64_t v27 = v57;
    uint64_t v28 = v54;
    uint64_t v29 = (uint64_t)&v54[*(int *)(v57 + 48)];
    uint64_t v30 = *(void *)(a1 + 56);
    uint64_t v31 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v21);
    uint64_t v33 = *v31;
    uint64_t v32 = v31[1];
    uint64_t v34 = type metadata accessor for ValidatedAttestation();
    sub_10002C0E4(v30 + *(void *)(*(void *)(v34 - 8) + 72) * v21, v29);
    *uint64_t v28 = v33;
    v28[1] = v32;
    uint64_t v35 = (uint64_t)v55;
    *uint64_t v55 = v33;
    *(void *)(v35 + 8) = v32;
    sub_10002C0E4(v29, v35 + *(int *)(v27 + 48));
    uint64_t v36 = v56;
    sub_10002C318(v35, (uint64_t)v56, &qword_100208C68);
    swift_bridgeObjectRetain_n();
    uint64_t v37 = (uint64_t)v28;
    uint64_t v38 = (uint64_t)v51;
    sub_100010360(v37, &qword_100208C68);
    v58(*(void *)v36, *((void *)v36 + 1), &v36[*(int *)(v27 + 48)]);
    sub_100010360((uint64_t)v36, &qword_100208C68);
    uint64_t v18 = v61;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_10018F1D0(0, v18[2] + 1, 1);
      uint64_t v18 = v61;
    }
    unint64_t v40 = v18[2];
    unint64_t v39 = v18[3];
    if (v40 >= v39 >> 1)
    {
      sub_10018F1D0(v39 > 1, v40 + 1, 1);
      uint64_t v18 = v61;
    }
    v18[2] = v40 + 1;
    uint64_t result = sub_10002C148(v38, (uint64_t)v18+ ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80))+ *(void *)(v53 + 72) * v40);
    a1 = v52;
    int64_t v24 = 1 << *(unsigned char *)(v52 + 32);
    if (v21 >= v24) {
      goto LABEL_27;
    }
    uint64_t v23 = v50;
    uint64_t v41 = *(void *)(v50 + 8 * v26);
    if ((v41 & (1 << v21)) == 0) {
      goto LABEL_28;
    }
    LODWORD(v20) = v49;
    if (*(_DWORD *)(v52 + 36) != v49) {
      goto LABEL_29;
    }
    unint64_t v42 = v41 & (-2 << (v21 & 0x3F));
    if (v42)
    {
      int64_t v24 = __clz(__rbit64(v42)) | v21 & 0xFFFFFFFFFFFFFFC0;
      int64_t v25 = v48;
    }
    else
    {
      unint64_t v43 = v26 + 1;
      unint64_t v44 = (unint64_t)(v24 + 63) >> 6;
      int64_t v25 = v48;
      if (v26 + 1 < v44)
      {
        unint64_t v45 = *(void *)(v50 + 8 * v43);
        if (v45)
        {
LABEL_22:
          int64_t v24 = __clz(__rbit64(v45)) + (v43 << 6);
        }
        else
        {
          while (v44 - 2 != v26)
          {
            unint64_t v45 = *(void *)(v47 + 8 * v26++);
            if (v45)
            {
              unint64_t v43 = v26 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    uint64_t v22 = v60 + 1;
    uint64_t v21 = v24;
    if (v60 + 1 == v25) {
      return (uint64_t)v18;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_10002BC08(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 40) = a5;
  *(void *)(v6 + 48) = a6;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = a4;
  *(unsigned char *)(v6 + 104) = a3;
  *(void *)(v6 + 16) = a1;
  uint64_t v7 = sub_1001C02A0();
  *(void *)(v6 + 56) = v7;
  *(void *)(v6 + 64) = *(void *)(v7 - 8);
  *(void *)(v6 + 72) = swift_task_alloc();
  swift_retain();
  return _swift_task_switch(sub_10002BCE4, 0, 0);
}

uint64_t sub_10002BCE4()
{
  unint64_t v1 = sub_1001C02C0();
  os_signpost_type_t v2 = sub_1001C1290();
  uint64_t result = sub_1001C12D0();
  if ((result & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t v4 = *(char **)(v0 + 16);
  if (*(unsigned char *)(v0 + 104))
  {
    if ((unint64_t)v4 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v4 >> 11 == 27)
      {
LABEL_16:
        __break(1u);
        return result;
      }
      if (v4 >> 16 <= 0x10)
      {
        uint64_t v4 = sub_100155C18();
        goto LABEL_10;
      }
    }
    __break(1u);
    goto LABEL_16;
  }
  if (v4)
  {
LABEL_10:
    uint64_t v7 = *(void *)(v0 + 64);
    uint64_t v6 = *(void *)(v0 + 72);
    uint64_t v8 = *(void *)(v0 + 56);
    uint64_t v9 = *(void (**)(uint64_t, void, uint64_t))(v7 + 16);
    v9(v6, *(void *)(v0 + 32), v8);
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    os_signpost_id_t v11 = sub_1001C0290();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v1, v2, v11, v4, "", v10, 2u);
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    v9(*(void *)(v0 + 72), *(void *)(v0 + 32), *(void *)(v0 + 56));
    goto LABEL_11;
  }
  __break(1u);
LABEL_5:
  uint64_t v5 = *(void *)(v0 + 64);

  (*(void (**)(void, void, void))(v5 + 16))(*(void *)(v0 + 72), *(void *)(v0 + 32), *(void *)(v0 + 56));
LABEL_11:
  sub_1001C0310();
  swift_allocObject();
  *(void *)(v0 + 80) = sub_1001C0300();
  swift_retain();
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v12;
  void *v12 = v0;
  v12[1] = sub_10002BF04;
  return sub_1000253AC();
}

uint64_t sub_10002BF04(uint64_t a1)
{
  *(void *)(*(void *)v1 + 96) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10002C004, 0, 0);
}

uint64_t sub_10002C004()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 40);
  unint64_t v4 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  char v5 = *(unsigned char *)(v0 + 104);
  swift_release();
  sub_10002B44C(v2, v4, v3, v5);
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(uint64_t, void))(v0 + 8);
  return v6(v1, 0);
}

uint64_t sub_10002C0CC()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10002C0DC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_100025D04(a1, a2, a3, *(void *)(v4 + 16), *(void *)(v4 + 24), a4);
}

uint64_t sub_10002C0E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ValidatedAttestation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002C148(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ValidatedAttestationOrAttestation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002C1AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10002C1F4(uint64_t a1)
{
  return sub_10002B764(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10002C218(uint64_t a1)
{
  return a1;
}

uint64_t sub_10002C254(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, char a7)
{
  if (a7)
  {
    return swift_errorRelease();
  }
  else
  {
    sub_10000792C(a1, a2);
    sub_10000792C(a3, a4);
    return sub_10000792C(a5, a6);
  }
}

unint64_t sub_10002C2C4()
{
  unint64_t result = qword_100208CB0;
  if (!qword_100208CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100208CB0);
  }
  return result;
}

uint64_t sub_10002C318(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100003918(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10002C37C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 48);
}

unint64_t sub_10002C384(unint64_t result)
{
  unint64_t v1 = result >> 62;
  if (result >> 62 && v1 != 2)
  {
    if (v1 != 1) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_10002C3F4(uint64_t a1, uint64_t a2)
{
  return sub_10002C654(a1, a2, (uint64_t (*)(void, void, void, void, void))sub_10002C40C);
}

unint64_t sub_10002C40C(unint64_t result)
{
  unint64_t v1 = result >> 62;
  if (result >> 62 && v1 != 2)
  {
    if (v1 != 1) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_10002C47C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_10002C6D4(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t))sub_10002C384);
}

uint64_t *sub_10002C494(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_10002C76C(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t))sub_10002C384, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10002C40C);
}

__n128 sub_10002C4C0(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t *sub_10002C4D4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_10002C810(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10002C40C);
}

uint64_t sub_10002C4EC(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t sub_10002C548(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 126;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)__n128 result = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(void *)(result + 24) = 0;
      *(unsigned char *)(result + 32) = 0;
    }
  }
  return result;
}

uint64_t sub_10002C5A8(void *a1)
{
  return *a1 >> 62;
}

void *sub_10002C5B4(void *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t *sub_10002C5C4(uint64_t *result, uint64_t a2)
{
  *__n128 result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  return result;
}

uint64_t type metadata accessor for RequestMetrics.NodeResponseStreamFailedAction()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10002C5F0(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    swift_retain();
  }
  else if (((v2 ^ (2 * v2)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  return swift_retain();
}

uint64_t sub_10002C63C(uint64_t a1, uint64_t a2)
{
  return sub_10002C654(a1, a2, (uint64_t (*)(void, void, void, void, void))sub_10002C670);
}

uint64_t sub_10002C654(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void, void, void, void))
{
  return a3(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
}

uint64_t sub_10002C670(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    swift_release();
  }
  else if (((v2 ^ (2 * v2)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  return swift_release();
}

uint64_t sub_10002C6BC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_10002C6D4(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t))sub_10002C5F0);
}

uint64_t sub_10002C6D4(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v9 = *((unsigned __int8 *)a2 + 32);
  a4(*a2, v6, v7, v8, v9);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 32) = v9;
  return a1;
}

uint64_t *sub_10002C740(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_10002C76C(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t))sub_10002C5F0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10002C670);
}

uint64_t *sub_10002C76C(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v10 = a2[3];
  uint64_t v11 = *((unsigned __int8 *)a2 + 32);
  a4(*a2, v8, v9, v10, v11);
  uint64_t v12 = *a1;
  uint64_t v13 = a1[1];
  uint64_t v14 = a1[2];
  uint64_t v15 = a1[3];
  *a1 = v7;
  a1[1] = v8;
  a1[2] = v9;
  a1[3] = v10;
  uint64_t v16 = *((unsigned __int8 *)a1 + 32);
  *((unsigned char *)a1 + 32) = v11;
  a5(v12, v13, v14, v15, v16);
  return a1;
}

uint64_t *sub_10002C7F8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_10002C810(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10002C670);
}

uint64_t *sub_10002C810(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  char v6 = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v8 = a1[2];
  uint64_t v10 = a1[3];
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v11;
  uint64_t v12 = *((unsigned __int8 *)a1 + 32);
  *((unsigned char *)a1 + 32) = v6;
  a4(v7, v9, v8, v10, v12);
  return a1;
}

uint64_t sub_10002C864(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3FFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 0x3FFF);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 50) >> 13) | (2
                                                           * ((*(void *)(a1 + 8) >> 50) & 0x1C00 | ((*(void *)(a1 + 8) & 7) << 7) | (*(void *)a1 >> 57) & 0x78 | *(void *)a1 & 7))) ^ 0x3FFF;
  if (v3 >= 0x3FFE) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t sub_10002C8DC(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3FFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 0x3FFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x3FFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3FFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2)
    {
      unint64_t v3 = (-a2 >> 1) & 0x1FFF | ((-a2 & 0x3FFF) << 13);
      *(void *)__n128 result = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(void *)(result + 8) = ((v3 >> 7) | (v3 << 50)) & 0xF000000000000007;
      *(void *)(result + 16) = 0;
      *(void *)(result + 24) = 0;
      *(unsigned char *)(result + 32) = 0;
    }
  }
  return result;
}

uint64_t sub_10002C958(uint64_t a1)
{
  return *(void *)(a1 + 8) >> 63;
}

uint64_t sub_10002C964(uint64_t result)
{
  *(void *)(result + 8) &= ~0x8000000000000000;
  return result;
}

void *sub_10002C974(void *result, uint64_t a2)
{
  uint64_t v2 = result[1] & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  *result &= 0xFFFFFFFFFFFFFF8uLL;
  result[1] = v2;
  return result;
}

uint64_t type metadata accessor for RequestMetrics.NodeResponseStreamFirstMessageAction()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10002C9A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 80);
}

unint64_t sub_10002C9AC(unint64_t result)
{
  if (!(result >> 62)) {
    return swift_errorRetain();
  }
  return result;
}

uint64_t sub_10002C9BC(unint64_t *a1)
{
  sub_10002CA34(*a1);
  swift_bridgeObjectRelease();
  unint64_t v2 = a1[5];
  if (v2 >> 60 != 15) {
    sub_10000792C(a1[4], v2);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_10002CA34(unint64_t result)
{
  if (!(result >> 62)) {
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_10002CA44(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  sub_10002C9AC(*(void *)a2);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = (_OWORD *)(a2 + 32);
  unint64_t v8 = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  if (v8 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 32) = *v7;
  }
  else
  {
    uint64_t v9 = *(void *)v7;
    sub_100007B14(v9, v8);
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v8;
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  uint64_t v11 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v11;
  uint64_t v12 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v12;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t *sub_10002CB10(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_10002C9AC(*a2);
  unint64_t v6 = *a1;
  *a1 = v4;
  a1[1] = v5;
  sub_10002CA34(v6);
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = (uint64_t *)(a2 + 4);
  unint64_t v8 = a2[5];
  if (a1[5] >> 60 != 15)
  {
    if (v8 >> 60 != 15)
    {
      uint64_t v10 = *v7;
      sub_100007B14(*v7, a2[5]);
      uint64_t v11 = a1[4];
      unint64_t v12 = a1[5];
      a1[4] = v10;
      a1[5] = v8;
      sub_10000792C(v11, v12);
      goto LABEL_8;
    }
    sub_10002CC88((uint64_t)(a1 + 4));
    goto LABEL_6;
  }
  if (v8 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 2) = *(_OWORD *)v7;
    goto LABEL_8;
  }
  uint64_t v9 = *v7;
  sub_100007B14(*v7, a2[5]);
  a1[4] = v9;
  a1[5] = v8;
LABEL_8:
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  a1[14] = a2[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10002CC88(uint64_t a1)
{
  return a1;
}

__n128 sub_10002CCDC(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t sub_10002CD08(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)a1;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_10002CA34(v4);
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  long long v6 = (void *)(a2 + 32);
  unint64_t v7 = *(void *)(a1 + 40);
  if (v7 >> 60 != 15)
  {
    unint64_t v8 = *(void *)(a2 + 40);
    if (v8 >> 60 != 15)
    {
      uint64_t v9 = *(void *)(a1 + 32);
      *(void *)(a1 + 32) = *v6;
      *(void *)(a1 + 40) = v8;
      sub_10000792C(v9, v7);
      goto LABEL_6;
    }
    sub_10002CC88(a1 + 32);
  }
  *(_OWORD *)(a1 + 32) = *(_OWORD *)v6;
LABEL_6:
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v12;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10002CDF0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_10002CE38(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for RequestMetrics.State.NodeMetadata()
{
  return swift_getGenericMetadata();
}

__n128 initializeWithTake for NWConnectionReceived(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t type metadata accessor for RequestMetrics.State.KDataSendState()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10002CED8(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_10002CEF8(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)__n128 result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 25) = v3;
  return result;
}

uint64_t sub_10002CF2C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_10002CF48(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(unsigned char *)(result + 24) = 1;
  }
  else
  {
    *(unsigned char *)(result + 24) = 0;
  }
  return result;
}

uint64_t type metadata accessor for RequestMetrics.State.AttestationsReceivedState()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10002CF84(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 2;
  unsigned int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    unsigned int v5 = -1;
  }
  if (v5 + 1 >= 2) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_10002CFD8(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 0;
    *(_DWORD *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 2;
    }
  }
  return result;
}

uint64_t sub_10002D020(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 16);
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_10002D03C(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
  }
  else if (a2)
  {
    *(unsigned char *)(result + 16) = a2 + 1;
  }
  return result;
}

uint64_t type metadata accessor for RequestMetrics.State.FirstChunkSentState()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10002D07C(uint64_t a1)
{
  return sub_100028A6C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t sub_10002D090(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_10002D5B0(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t))sub_100028718);
}

uint64_t *sub_10002D0A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_10002D618(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t))sub_100028718, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100028A6C);
}

uint64_t *sub_10002D0D4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_10002D698(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100028A6C);
}

uint64_t sub_10002D0F4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 1u) {
    return *(unsigned __int8 *)(a1 + 24);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_10002D10C(uint64_t result, unsigned int a2)
{
  uint64_t v2 = a2 - 2;
  if (a2 >= 2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    LOBYTE(a2) = 2;
    *(void *)__n128 result = v2;
  }
  *(unsigned char *)(result + 24) = a2;
  return result;
}

uint64_t type metadata accessor for RequestMetrics.State.AuthTokenSendState()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10002D140(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_10002D5B0(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t))sub_10002DC2C);
}

uint64_t *sub_10002D158(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_10002D618(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t))sub_10002DC2C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10002DC30);
}

uint64_t *sub_10002D184(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_10002D698(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10002DC30);
}

uint64_t type metadata accessor for RequestMetrics.State.AuthTokenFetchState()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10002D1B4(uint64_t a1)
{
  return sub_100028998(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24));
}

uint64_t *sub_10002D1C4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = a2[3];
  sub_100028644(*a2, v4, v5, v6);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return a1;
}

uint64_t *sub_10002D21C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = a2[3];
  sub_100028644(*a2, v4, v5, v6);
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v9 = a1[2];
  unint64_t v10 = a1[3];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  sub_100028998(v7, v8, v9, v10);
  return a1;
}

__n128 initializeWithTake for RateLimitFilter.WorkloadTag(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t *sub_10002D28C(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v4 = a1[2];
  unint64_t v6 = a1[3];
  long long v7 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v7;
  sub_100028998(v3, v5, v4, v6);
  return a1;
}

uint64_t sub_10002D2CC(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7B && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 123);
  }
  unsigned int v3 = (((*(void *)(a1 + 24) >> 57) >> 4) | (8
                                                           * ((*(void *)(a1 + 24) >> 57) & 8 | *(void *)(a1 + 24) & 7))) ^ 0x7F;
  if (v3 >= 0x7A) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t sub_10002D328(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7A)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 123;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7B) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7B) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(void *)(result + 24) = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_10002D380(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24) >> 61;
  if (v1 <= 4) {
    return v1;
  }
  else {
    return (*(_DWORD *)a1 + 5);
  }
}

uint64_t sub_10002D39C(uint64_t result)
{
  *(void *)(result + 24) &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

void *sub_10002D3AC(void *result, uint64_t a2)
{
  if (a2 < 5)
  {
    result[3] = result[3] & 0xFFFFFFFFFFFFFF8 | (a2 << 61);
  }
  else
  {
    *__n128 result = (a2 - 5);
    result[1] = 0;
    result[2] = 0;
    result[3] = 0xA000000000000000;
  }
  return result;
}

uint64_t type metadata accessor for RequestMetrics.State.ResponseStreamState()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10002D3F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_100028630(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_10002D438(uint64_t a1)
{
  return sub_100028984(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t sub_10002D448(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_100028630(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  *(void *)a1 = v3;
  char v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_100028984(v5, v6);
  return a1;
}

uint64_t sub_10002D49C(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_100028984(v4, v5);
  return a1;
}

uint64_t sub_10002D4DC(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t sub_10002D524(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)__n128 result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10002D568(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 3u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_10002D580(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)__n128 result = a2 - 4;
    LOBYTE(a2) = 4;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

uint64_t type metadata accessor for RequestMetrics.State.DataStreamState()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10002D5B0(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v8 = *((unsigned __int8 *)a2 + 24);
  a4(*a2, v6, v7, v8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 24) = v8;
  return a1;
}

uint64_t *sub_10002D618(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v10 = *((unsigned __int8 *)a2 + 24);
  a4(*a2, v8, v9, v10);
  uint64_t v11 = *a1;
  uint64_t v12 = a1[1];
  uint64_t v13 = a1[2];
  *a1 = v7;
  a1[1] = v8;
  a1[2] = v9;
  uint64_t v14 = *((unsigned __int8 *)a1 + 24);
  *((unsigned char *)a1 + 24) = v10;
  a5(v11, v12, v13, v14);
  return a1;
}

uint64_t *sub_10002D698(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  uint64_t v8 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v9 = a1[2];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v6;
  uint64_t v11 = *((unsigned __int8 *)a1 + 24);
  *((unsigned char *)a1 + 24) = v7;
  a4(v8, v10, v9, v11);
  return a1;
}

uint64_t sub_10002D6F0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t sub_10002D738(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t type metadata accessor for RequestMetrics.State.RopesRequestSentState()
{
  return swift_getGenericMetadata();
}

uint64_t *sub_10002D79C(uint64_t *result)
{
  unint64_t v1 = result[1];
  if ((v1 & 0x3000000000000000) == 0) {
    return (uint64_t *)sub_10000792C(*result, v1);
  }
  return result;
}

uint64_t sub_10002D7B4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = a2[1];
  if ((v3 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v4 = *a2;
    sub_100007B14(*a2, a2[1]);
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v3;
  }
  return a1;
}

uint64_t *sub_10002D80C(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4 = a1[1];
  unint64_t v5 = a2[1];
  uint64_t v6 = v5 & 0x3000000000000000;
  if ((v4 & 0x3000000000000000) == 0)
  {
    if (!v6)
    {
      uint64_t v9 = *a2;
      sub_100007B14(v9, v5);
      uint64_t v10 = *a1;
      unint64_t v11 = a1[1];
      *a1 = v9;
      a1[1] = v5;
      sub_10000792C(v10, v11);
      return a1;
    }
    sub_10000792C(*a1, v4);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  uint64_t v7 = *a2;
  sub_100007B14(v7, v5);
  *a1 = v7;
  a1[1] = v5;
  return a1;
}

uint64_t *sub_10002D8A0(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4 = a1[1];
  if ((v4 & 0x3000000000000000) == 0)
  {
    uint64_t v5 = a2[1];
    if ((v5 & 0x3000000000000000) == 0)
    {
      uint64_t v7 = *a1;
      *a1 = *a2;
      a1[1] = v5;
      sub_10000792C(v7, v4);
      return a1;
    }
    sub_10000792C(*a1, v4);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t sub_10002D904(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xC && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 12);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  if (v3 + 1 >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t sub_10002D958(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xB)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)__n128 result = a2 - 12;
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = (unint64_t)((4 * (a2 ^ 0xF)) | ((a2 ^ 0xF) >> 2)) << 60;
    }
  }
  return result;
}

uint64_t sub_10002D9A8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8) >> 60;
  if (((4 * v1) & 0xC) != 0) {
    return 16 - ((4 * v1) & 0xC | (v1 >> 2));
  }
  else {
    return 0;
  }
}

void *sub_10002D9D0(void *result, unsigned int a2)
{
  if (a2 > 0xC)
  {
    *__n128 result = a2 - 13;
    result[1] = 0;
  }
  else if (a2)
  {
    *__n128 result = 0;
    result[1] = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
  }
  return result;
}

uint64_t type metadata accessor for RequestMetrics.State.AttestationBundleRef()
{
  return swift_getGenericMetadata();
}

unint64_t *sub_10002DA18(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_10002C9AC(*a2);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

unint64_t sub_10002DA58(unint64_t *a1)
{
  return sub_10002CA34(*a1);
}

unint64_t *sub_10002DA64(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_10002C9AC(*a2);
  unint64_t v5 = *a1;
  *a1 = v3;
  a1[1] = v4;
  sub_10002CA34(v5);
  return a1;
}

unint64_t *sub_10002DAAC(unint64_t *a1, _OWORD *a2)
{
  unint64_t v3 = *a1;
  *(_OWORD *)a1 = *a2;
  sub_10002CA34(v3);
  return a1;
}

uint64_t sub_10002DAE8(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3D && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 61);
  }
  unsigned int v3 = (((*(void *)a1 >> 58) >> 4) | (4
                                                    * ((*(void *)a1 >> 58) & 0xC | (*(void *)a1 >> 1) & 3))) ^ 0x3F;
  if (v3 >= 0x3C) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t sub_10002DB44(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3C)
  {
    *(void *)__n128 result = a2 - 61;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x3D) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3D) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0xF | (16 * (-a2 & 0x3F));
      *(void *)__n128 result = ((v3 << 58) | (2 * v3)) & 0xF000000000000007;
      *(void *)(result + 8) = 0;
    }
  }
  return result;
}

uint64_t sub_10002DB98(void *a1)
{
  uint64_t v1 = *a1 >> 62;
  if (v1 == 3) {
    return ((*a1 >> 2) & 0xFFFFFFFE | *a1 & 1) + 3;
  }
  else {
    return v1;
  }
}

void *sub_10002DBB8(void *result, uint64_t a2)
{
  if (a2 < 3)
  {
    *__n128 result = *result & 0xFFFFFFFFFFFFFF9 | (a2 << 62);
  }
  else
  {
    *__n128 result = (4 * (a2 - 3)) & 0x3FFFFFFF8 | ((int)a2 - 3) & 1 | 0xC000000000000000;
    result[1] = 0;
  }
  return result;
}

uint64_t type metadata accessor for RequestMetrics.State.NodeMetadata.State()
{
  return swift_getGenericMetadata();
}

uint64_t static TrustedCloudComputeError.wrapAny(error:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v73 = a2;
  uint64_t v72 = sub_1001C07C0();
  uint64_t v67 = *(void *)(v72 - 8);
  uint64_t v4 = __chkstk_darwin(v72, v3);
  char v69 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v68 = (char *)&v61 - v8;
  __chkstk_darwin(v7, v9);
  uint64_t v71 = (char *)&v61 - v10;
  uint64_t v11 = sub_1001BF710();
  uint64_t v70 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11, v12);
  uint64_t v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v13, v16);
  uint64_t v19 = (char *)&v61 - v18;
  __chkstk_darwin(v17, v20);
  uint64_t v22 = (char *)&v61 - v21;
  uint64_t v23 = sub_1001BF810();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v26 = __chkstk_darwin(v23, v25);
  uint64_t v28 = (char *)&v61 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26, v29);
  uint64_t v31 = (char *)&v61 - v30;
  uint64_t v74 = (uint64_t)a1;
  swift_errorRetain();
  sub_100003918(&qword_100208C98);
  if (swift_dynamicCast())
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v73, v31, v23);
    return swift_errorRelease();
  }
  uint64_t v62 = v22;
  uint64_t v63 = v15;
  uint64_t v34 = v70;
  uint64_t v33 = v71;
  uint64_t v35 = v72;
  uint64_t v64 = v28;
  uint64_t v65 = v24;
  uint64_t v66 = v23;
  swift_errorRelease();
  id v76 = a1;
  swift_errorRetain();
  if (swift_dynamicCast())
  {
    char v36 = v74;
    uint64_t v37 = v19;
    (*(void (**)(char *, void, uint64_t))(v34 + 104))(v19, *(unsigned int *)*(&off_1001FE350 + (char)v74), v11);
    uint64_t v38 = v62;
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v62, v37, v11);
    sub_100016BAC(v36);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v63, v38, v11);
    unint64_t v39 = v64;
    sub_1001BF730();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v38, v11);
    uint64_t v41 = v65;
    uint64_t v40 = v66;
    (*(void (**)(char *, void, uint64_t))(v65 + 104))(v39, enum case for TrustedCloudComputeError.internalError(_:), v66);
    (*(void (**)(uint64_t, char *, uint64_t))(v41 + 32))(v73, v39, v40);
    return swift_errorRelease();
  }
  swift_errorRelease();
  uint64_t v74 = (uint64_t)a1;
  swift_errorRetain();
  uint64_t v42 = v35;
  if (swift_dynamicCast())
  {
    uint64_t v44 = v67;
    unint64_t v43 = v68;
    (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v68, v33, v35);
    unint64_t v45 = v69;
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v69, v43, v35);
    int v46 = (*(uint64_t (**)(char *, uint64_t))(v44 + 88))(v45, v35);
    if (v46 == enum case for NWError.posix(_:))
    {
      (*(void (**)(char *, uint64_t))(v44 + 96))(v45, v35);
      sub_1001C0380();
    }
    else
    {
      if (v46 != enum case for NWError.dns(_:))
      {
        uint64_t v57 = v73;
        uint64_t v59 = v65;
        uint64_t v58 = v66;
        uint64_t v60 = v64;
        if (v46 == enum case for NWError.tls(_:)) {
          (*(void (**)(char *, uint64_t))(v44 + 96))(v45, v42);
        }
        else {
          (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v42);
        }
        goto LABEL_14;
      }
      (*(void (**)(char *, uint64_t))(v44 + 96))(v45, v35);
    }
    uint64_t v57 = v73;
    uint64_t v59 = v65;
    uint64_t v58 = v66;
    uint64_t v60 = v64;
LABEL_14:
    sub_10002E434();
    sub_1001C18F0();
    sub_1001BF6B0();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v42);
    (*(void (**)(char *, void, uint64_t))(v59 + 104))(v60, enum case for TrustedCloudComputeError.networkError(_:), v58);
    (*(void (**)(uint64_t, char *, uint64_t))(v59 + 32))(v57, v60, v58);
    return swift_errorRelease();
  }
  swift_errorRelease();
  uint64_t v47 = (void *)sub_1001BEFD0();
  uint64_t v74 = 0;
  unint64_t v75 = 0xE000000000000000;
  sub_1001C1420(38);
  swift_bridgeObjectRelease();
  uint64_t v74 = 0x20726F727245534ELL;
  unint64_t v75 = 0xEF3D6E69616D6F64;
  id v48 = [v47 domain];
  uint64_t v49 = sub_1001C0BF0();
  char v51 = v50;

  v77._countAndFlagsBits = v49;
  v77._object = v51;
  sub_1001C0D00(v77);
  swift_bridgeObjectRelease();
  v78._countAndFlagsBits = 0x3D65646F63202CLL;
  v78._object = (void *)0xE700000000000000;
  sub_1001C0D00(v78);
  id v76 = [v47 code];
  v79._countAndFlagsBits = sub_1001C1780();
  sub_1001C0D00(v79);
  swift_bridgeObjectRelease();
  v80._countAndFlagsBits = 0x67617373656D202CLL;
  v80._object = (void *)0xEA00000000003D65;
  sub_1001C0D00(v80);
  id v52 = [v47 localizedDescription];
  uint64_t v53 = sub_1001C0BF0();
  uint64_t v55 = v54;

  v81._countAndFlagsBits = v53;
  v81._object = v55;
  sub_1001C0D00(v81);
  swift_bridgeObjectRelease();
  uint64_t v56 = v73;
  sub_1001BF740();

  return (*(uint64_t (**)(uint64_t, void, uint64_t))(v65 + 104))(v56, enum case for TrustedCloudComputeError.internalError(_:), v66);
}

unint64_t sub_10002E434()
{
  unint64_t result = qword_100209358;
  if (!qword_100209358)
  {
    sub_1001C07C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100209358);
  }
  return result;
}

uint64_t sub_10002E48C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v120 = a3;
  Swift::String v121 = a4;
  uint64_t v122 = a1;
  uint64_t v5 = sub_100003918(&qword_100209360);
  uint64_t v7 = __chkstk_darwin(v5 - 8, v6);
  uint64_t v116 = (char *)&v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v9);
  uint64_t v114 = (char *)&v96 - v10;
  uint64_t v119 = sub_1001BFE20();
  unint64_t v117 = *(void *)(v119 - 8);
  uint64_t v12 = __chkstk_darwin(v119, v11);
  uint64_t v115 = (char *)&v96 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)&v96 - v15;
  uint64_t v17 = sub_100003918(&qword_100209368);
  uint64_t v19 = __chkstk_darwin(v17 - 8, v18);
  uint64_t v21 = (char *)&v96 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v22);
  uint64_t v24 = (char *)&v96 - v23;
  uint64_t v25 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate(0);
  uint64_t v118 = *(void *)(v25 - 8);
  uint64_t v27 = __chkstk_darwin(v25, v26);
  uint64_t v29 = (char *)&v96 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v30);
  uint64_t v32 = (char *)&v96 - v31;
  uint64_t v33 = sub_1001BF2C0();
  uint64_t v34 = *(void *)(v33 - 8);
  __chkstk_darwin(v33, v35);
  uint64_t v37 = (char *)&v96 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for RateLimitTimingDetails(0);
  __chkstk_darwin(v38 - 8, v39);
  if (a2[7])
  {
    sub_100003E90(v120);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v122, v33);
    sub_1000327CC((uint64_t)a2, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
    uint64_t v41 = type metadata accessor for RateLimitConfiguration(0);
    uint64_t v42 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56);
    uint64_t v43 = v41;
    uint64_t v44 = v121;
    return v42(v44, 1, 1, v43);
  }
  else
  {
    char v97 = v32;
    uint64_t v106 = v24;
    uint64_t v107 = v25;
    uint64_t v108 = v21;
    uint64_t v111 = v29;
    uint64_t v112 = v37;
    Swift::String v100 = v16;
    uint64_t v110 = (uint64_t)&v96 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v113 = v33;
    unint64_t v46 = v117;
    unint64_t v47 = a2[1];
    id v48 = a2;
    uint64_t v49 = HIBYTE(v47) & 0xF;
    if ((v47 & 0x2000000000000000) == 0) {
      uint64_t v49 = *a2 & 0xFFFFFFFFFFFFLL;
    }
    if (v49)
    {
      uint64_t v98 = *a2;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v98 = 0;
      unint64_t v47 = 0;
    }
    uint64_t v50 = v34;
    char v51 = v112;
    uint64_t v52 = v113;
    uint64_t v53 = (uint64_t)a2;
    unint64_t v54 = a2[3];
    uint64_t v55 = HIBYTE(v54) & 0xF;
    if ((v54 & 0x2000000000000000) == 0) {
      uint64_t v55 = a2[2] & 0xFFFFFFFFFFFFLL;
    }
    if (v55)
    {
      uint64_t v104 = a2[2];
      unint64_t v103 = v54;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v104 = 0;
      unint64_t v103 = 0;
    }
    unint64_t v56 = a2[5];
    uint64_t v57 = HIBYTE(v56) & 0xF;
    if ((v56 & 0x2000000000000000) == 0) {
      uint64_t v57 = a2[4] & 0xFFFFFFFFFFFFLL;
    }
    if (v57)
    {
      uint64_t v102 = a2[4];
      unint64_t v101 = v56;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v102 = 0;
      unint64_t v101 = 0;
    }
    uint64_t v58 = swift_bridgeObjectRetain();
    uint64_t v99 = sub_10003114C(v58);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v51, v122, v52);
    uint64_t v59 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration(0);
    uint64_t v60 = (char *)a2 + *(int *)(v59 + 44);
    uint64_t v61 = (uint64_t)v106;
    sub_10003282C((uint64_t)v48 + *(int *)(v59 + 44), (uint64_t)v106, &qword_100209368);
    uint64_t v62 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v118 + 48);
    uint64_t v63 = v107;
    int v64 = v62(v61, 1, v107);
    uint64_t v105 = v59;
    if (v64 == 1)
    {
      uint64_t v65 = v97;
      *(_DWORD *)char v97 = 0;
      _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56))(&v65[*(int *)(v63 + 24)], 1, 1, v119);
      sub_100010360(v61, &qword_100209368);
      uint64_t v66 = v65;
    }
    else
    {
      uint64_t v67 = v61;
      uint64_t v68 = (unsigned int *)v97;
      sub_1000328F4(v67, (uint64_t)v97, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate);
      uint64_t v66 = (char *)v68;
    }
    char v69 = v100;
    uint64_t v70 = (uint64_t)v114;
    uint64_t v118 = *(unsigned int *)v66;
    sub_1000327CC((uint64_t)v66, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate);
    uint64_t v71 = (uint64_t)v60;
    uint64_t v72 = (uint64_t)v108;
    sub_10003282C(v71, (uint64_t)v108, &qword_100209368);
    int v73 = v62(v72, 1, v63);
    uint64_t v109 = v50;
    if (v73 == 1)
    {
      uint64_t v74 = v72;
      unint64_t v75 = v111;
      *(_DWORD *)uint64_t v111 = 0;
      _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
      uint64_t v76 = v119;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56))(&v75[*(int *)(v63 + 24)], 1, 1, v119);
      sub_100010360(v74, &qword_100209368);
    }
    else
    {
      uint64_t v77 = v72;
      unint64_t v75 = v111;
      sub_1000328F4(v77, (uint64_t)v111, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate);
      uint64_t v76 = v119;
    }
    sub_10003282C((uint64_t)&v75[*(int *)(v63 + 24)], v70, &qword_100209360);
    Swift::String v78 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v46 + 48);
    int v79 = v78(v70, 1, v76);
    unint64_t v117 = v47;
    uint64_t v80 = v98;
    if (v79 == 1)
    {
      sub_1001BFE10();
      sub_100010360(v70, &qword_100209360);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v46 + 32))(v69, v70, v76);
    }
    uint64_t v81 = (uint64_t)v116;
    sub_1000327CC((uint64_t)v111, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate);
    sub_1001BFE00();
    double v83 = v82;
    uint64_t v84 = *(void (**)(char *, uint64_t))(v46 + 8);
    v84(v69, v76);
    sub_10003282C(v53 + *(int *)(v105 + 48), v81, &qword_100209360);
    if (v78(v81, 1, v76) == 1)
    {
      uint64_t v85 = v115;
      sub_1001BFE10();
      sub_100010360(v81, &qword_100209360);
    }
    else
    {
      uint64_t v85 = v115;
      (*(void (**)(char *, uint64_t, uint64_t))(v46 + 32))(v115, v81, v76);
    }
    uint64_t v87 = v120;
    uint64_t v86 = v121;
    uint64_t v88 = (uint64_t)v112;
    uint64_t v89 = v99;
    sub_1001BFE00();
    v84(v85, v76);
    double v90 = *(double *)(v53 + 72);
    sub_100032890(v87, (uint64_t)v123);
    uint64_t v91 = v110;
    sub_10002FDA4(v88, v118, v123, v110, v83, v90);
    sub_100003E90(v87);
    (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v122, v113);
    unint64_t v92 = v117;
    void *v86 = v80;
    v86[1] = v92;
    unint64_t v93 = v103;
    uint64_t v86[2] = v104;
    v86[3] = v93;
    unint64_t v94 = v101;
    v86[4] = v102;
    v86[5] = v94;
    v86[6] = v89;
    uint64_t v95 = type metadata accessor for RateLimitConfiguration(0);
    sub_1000328F4(v91, (uint64_t)v86 + *(int *)(v95 + 20), type metadata accessor for RateLimitTimingDetails);
    sub_1000327CC(v53, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
    return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v95 - 8) + 56))(v86, 0, 1, v95);
  }
}

uint64_t sub_10002EE38(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v13[0] = a4;
  v13[1] = a5;
  uint64_t v7 = sub_100003918(&qword_100209530);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D934(a1, a1[3]);
  sub_100034E14();
  sub_1001C19C0();
  char v15 = 0;
  sub_1001C1700();
  if (!v5)
  {
    char v14 = 1;
    sub_1001C1700();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_10002EFB4()
{
  if (*v0) {
    return 0x65756C6176;
  }
  else {
    return 7955819;
  }
}

uint64_t sub_10002EFE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100034130(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10002F00C(uint64_t a1)
{
  unint64_t v2 = sub_100034E14();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10002F048(uint64_t a1)
{
  unint64_t v2 = sub_100034E14();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10002F084(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_1001C1840(), uint64_t result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_1001C1840();
    }
  }
  return result;
}

Swift::Int sub_10002F128()
{
  return sub_1001C1990();
}

uint64_t sub_10002F190()
{
  sub_1001C0CB0();
  return sub_1001C0CB0();
}

Swift::Int sub_10002F1E0()
{
  return sub_1001C1990();
}

uint64_t sub_10002F244@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_10003420C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_10002F274(void *a1)
{
  return sub_10002EE38(a1, *v1, v1[1], v1[2], v1[3]);
}

void sub_10002F294()
{
  if (v0[1])
  {
    sub_1001C1970(1u);
    swift_bridgeObjectRetain();
    sub_1001C0CB0();
    swift_bridgeObjectRelease();
    if (v0[3]) {
      goto LABEL_3;
    }
LABEL_6:
    sub_1001C1970(0);
    if (v0[5]) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  sub_1001C1970(0);
  if (!v0[3]) {
    goto LABEL_6;
  }
LABEL_3:
  sub_1001C1970(1u);
  swift_bridgeObjectRetain();
  sub_1001C0CB0();
  swift_bridgeObjectRelease();
  if (v0[5])
  {
LABEL_4:
    sub_1001C1970(1u);
    swift_bridgeObjectRetain();
    sub_1001C0CB0();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
LABEL_7:
  sub_1001C1970(0);
LABEL_8:
  uint64_t v1 = v0[6];
  uint64_t v4 = v1;
  Swift::UInt v2 = *(void *)(v1 + 16);
  sub_1001C1960(v2);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = v1 + 56;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1001C0CB0();
      sub_1001C0CB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 += 32;
      --v2;
    }
    while (v2);
    sub_1000324F8((uint64_t)&v4);
  }
}

uint64_t sub_10002F420(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100003918(&qword_100209560);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000D934(a1, a1[3]);
  sub_100034E68();
  sub_1001C19C0();
  char v15 = 0;
  sub_1001C16C0();
  if (!v2)
  {
    char v14 = 1;
    sub_1001C16C0();
    char v13 = 2;
    sub_1001C16C0();
    uint64_t v12 = *(void *)(v3 + 48);
    v11[15] = 3;
    sub_100003918(&qword_100209548);
    sub_100034F10(&qword_100209568, (void (*)(void))sub_100034F80);
    sub_1001C1740();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_10002F624()
{
  uint64_t result = 0x4449656C646E7562;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x4965727574616566;
      break;
    case 2:
    case 3:
      uint64_t result = 0x64616F6C6B726F77;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10002F6B4(uint64_t a1)
{
  unint64_t v2 = sub_100034E68();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10002F6F0(uint64_t a1)
{
  unint64_t v2 = sub_100034E68();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10002F72C(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v5[2] = *(_OWORD *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 48);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v7[2] = *(_OWORD *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  return sub_100032524(v5, v7) & 1;
}

Swift::Int sub_10002F788()
{
  return sub_1001C1990();
}

Swift::Int sub_10002F7CC()
{
  return sub_1001C1990();
}

double sub_10002F808@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100034414(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    double result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(void *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_10002F858(void *a1)
{
  return sub_10002F420(a1);
}

uint64_t sub_10002F870(void *a1)
{
  uint64_t v3 = v1[1];
  if (v3)
  {
    BOOL v4 = *v1 == *a1 && v3 == a1[1];
    if (!v4 && (sub_1001C1840() & 1) == 0) {
      return 0;
    }
  }
  unint64_t v5 = v1[3];
  if (v5)
  {
    uint64_t v7 = a1[2];
    unint64_t v6 = a1[3];
    uint64_t v8 = v1[2];
    if ((v8 != v7 || v5 != v6) && (sub_1001C1840() & 1) == 0)
    {
      sub_10018C7C0(46, 0xE100000000000000, v7, v6);
      if (v10) {
        return 0;
      }
      swift_bridgeObjectRetain();
      unint64_t v11 = sub_1001C0D50();
      unint64_t v13 = v12;
      uint64_t v15 = v14;
      uint64_t v17 = v16;
      swift_bridgeObjectRelease();
      char v18 = sub_10018FE0C(v8, v5, v11, v13, v15, v17);
      swift_bridgeObjectRelease();
      if ((v18 & 1) == 0) {
        return 0;
      }
    }
  }
  uint64_t v19 = v1[5];
  if (v19 && (v1[4] != a1[4] || v19 != a1[5]) && (sub_1001C1840() & 1) == 0) {
    return 0;
  }
  uint64_t v20 = a1[6];
  return sub_10002F9EC(v20);
}

uint64_t sub_10002F9EC(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + 48);
  uint64_t v31 = v2;
  uint64_t v3 = v2[2];
  if (!v3) {
    return 1;
  }
  if (*(void *)(a1 + 16))
  {
    uint64_t v6 = v2[6];
    uint64_t v5 = v2[7];
    uint64_t v8 = v2[4];
    uint64_t v7 = v2[5];
    swift_bridgeObjectRetain_n();
    sub_1000324CC((uint64_t)&v31);
    swift_bridgeObjectRetain();
    unint64_t v9 = sub_100169E3C(v8, v7);
    if ((v10 & 1) == 0)
    {
LABEL_26:
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
LABEL_27:
      uint64_t v16 = 0;
      goto LABEL_28;
    }
    unint64_t v11 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v9);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (v13 == v6 && v12 == v5)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      uint64_t v17 = v3 - 1;
      if (v17) {
        goto LABEL_15;
      }
    }
    else
    {
      char v15 = sub_1001C1840();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v16 = 0;
      if ((v15 & 1) == 0)
      {
LABEL_28:
        sub_1000324F8((uint64_t)&v31);
        return v16;
      }
      uint64_t v17 = v3 - 1;
      if (v17)
      {
LABEL_15:
        char v18 = v2 + 11;
        while (*(void *)(a1 + 16))
        {
          uint64_t v20 = *(v18 - 1);
          uint64_t v19 = *v18;
          uint64_t v22 = *(v18 - 3);
          uint64_t v21 = *(v18 - 2);
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          unint64_t v23 = sub_100169E3C(v22, v21);
          if ((v24 & 1) == 0) {
            goto LABEL_26;
          }
          uint64_t v25 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v23);
          uint64_t v27 = *v25;
          uint64_t v26 = v25[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          if (v27 == v20 && v26 == v19)
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
          }
          else
          {
            char v29 = sub_1001C1840();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v29 & 1) == 0) {
              goto LABEL_27;
            }
          }
          v18 += 4;
          if (!--v17) {
            goto LABEL_14;
          }
        }
        goto LABEL_27;
      }
    }
LABEL_14:
    uint64_t v16 = 1;
    goto LABEL_28;
  }
  return 0;
}

uint64_t sub_10002FC04(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (!a2)
  {
    if (!a4) {
      return 1;
    }
    unint64_t v12 = v4[3];
    if (!v12) {
      return 1;
    }
    uint64_t v13 = v4[2];
    if (v13 == a3 && v12 == a4) {
      return 1;
    }
LABEL_19:
    if ((sub_1001C1840() & 1) == 0)
    {
      sub_10018C7C0(46, 0xE100000000000000, a3, a4);
      if (v15) {
        return 0;
      }
      swift_bridgeObjectRetain();
      unint64_t v16 = sub_1001C0D50();
      unint64_t v18 = v17;
      uint64_t v20 = v19;
      uint64_t v22 = v21;
      swift_bridgeObjectRelease();
      char v23 = sub_10018FE0C(v13, v12, v16, v18, v20, v22);
      swift_bridgeObjectRelease();
      return v23 & 1;
    }
    return 1;
  }
  if (a4)
  {
    uint64_t v8 = v4[1];
    if (!v8 || (*v4 == a1 ? (v9 = v8 == a2) : (v9 = 0), v9 || (v10 = sub_1001C1840(), uint64_t result = 0, (v10 & 1) != 0)))
    {
      unint64_t v12 = v4[3];
      if (!v12) {
        return 1;
      }
      uint64_t v13 = v4[2];
      if (v13 == a3 && v12 == a4) {
        return 1;
      }
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v24 = v4[1];
    if (!v24) {
      return 1;
    }
    if (*v4 == a1 && v24 == a2) {
      return 1;
    }
    return sub_1001C1840();
  }
  return result;
}

uint64_t sub_10002FDA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D2>)
{
  uint64_t v41 = a1;
  uint64_t v42 = a4;
  uint64_t v40 = sub_100003918(&qword_10020C350);
  uint64_t v10 = *(void *)(v40 - 8);
  uint64_t v12 = __chkstk_darwin(v40, v11);
  uint64_t v38 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12, v14);
  unint64_t v17 = (char *)&v37 - v16;
  __chkstk_darwin(v15, v18);
  uint64_t v20 = (char *)&v37 - v19;
  uint64_t v43 = type metadata accessor for RateLimitTimingDetails(0);
  __chkstk_darwin(v43, v21);
  char v23 = (double *)((char *)&v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(void *)char v23 = a2;
  if (a5 < 0.0) {
    a5 = 0.0;
  }
  sub_10000D934(a3, a3[3]);
  sub_1001BFAA0();
  sub_1001BF8F0();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v24 = v10 + 8;
  uint64_t v25 = v26;
  uint64_t v27 = v20;
  uint64_t v28 = v40;
  v26(v27, v40);
  if (v44 < a5) {
    a5 = v44;
  }
  v23[1] = a5;
  sub_10000D934(a3, a3[3]);
  sub_1001BFA90();
  sub_1001BF8F0();
  char v29 = v17;
  uint64_t v30 = v41;
  uint64_t v39 = v24;
  uint64_t v37 = v25;
  v25(v29, v28);
  sub_1001BF250();
  if (a6 == 0.0)
  {
    sub_10000D934(a3, a3[3]);
    uint64_t v31 = v38;
    sub_1001BFA80();
    sub_1001BF8F0();
    v37(v31, v28);
    a6 = v44;
  }
  double v32 = 1.0;
  if (a6 <= 1.0) {
    double v32 = a6;
  }
  if (a6 < 0.0) {
    double v33 = 0.0;
  }
  else {
    double v33 = v32;
  }
  uint64_t v34 = sub_1001BF2C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v30, v34);
  uint64_t v35 = v42;
  *(double *)((char *)v23 + *(int *)(v43 + 28)) = a5 * v33;
  sub_1000328F4((uint64_t)v23, v35, type metadata accessor for RateLimitTimingDetails);
  return sub_100003E90((uint64_t)a3);
}

void sub_100030114()
{
  sub_1001C1960(*v0);
  if ((v0[1] & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v1 = v0[1];
  }
  else {
    Swift::UInt64 v1 = 0;
  }
  sub_1001C1980(v1);
  uint64_t v2 = type metadata accessor for RateLimitTimingDetails(0);
  sub_1001BF2C0();
  sub_100033FF0(&qword_1002084E0, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1001C0BB0();
  if ((*(Swift::UInt *)((char *)v0 + *(int *)(v2 + 28)) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = *(Swift::UInt *)((char *)v0 + *(int *)(v2 + 28));
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  sub_1001C1980(v3);
}

uint64_t sub_1000301E0(void *a1)
{
  uint64_t v3 = sub_100003918(&qword_100209588);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000D934(a1, a1[3]);
  sub_100034FD4();
  sub_1001C19C0();
  v9[15] = 0;
  sub_1001C1730();
  if (!v1)
  {
    v9[14] = 1;
    sub_1001C1710();
    type metadata accessor for RateLimitTimingDetails(0);
    v9[13] = 2;
    sub_1001BF2C0();
    sub_100033FF0(qword_1002084E8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1001C1740();
    v9[12] = 3;
    sub_1001C1710();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1000303F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v3 = sub_1001BF2C0();
  uint64_t v24 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v4);
  uint64_t v5 = sub_100003918(&qword_100209578);
  uint64_t v25 = *(void *)(v5 - 8);
  uint64_t v26 = v5;
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for RateLimitTimingDetails(0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (uint64_t *)((char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000D934(a1, a1[3]);
  sub_100034FD4();
  uint64_t v13 = v27;
  sub_1001C19B0();
  if (v13) {
    return sub_100003E90((uint64_t)a1);
  }
  uint64_t v14 = v25;
  char v31 = 0;
  uint64_t *v12 = sub_1001C1680();
  char v30 = 1;
  sub_1001C1660();
  v12[1] = v15;
  char v29 = 2;
  sub_100033FF0(&qword_1002084D8, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1001C1690();
  uint64_t v22 = v9;
  uint64_t v16 = *(void (**)(void))(v24 + 32);
  uint64_t v27 = (char *)v12 + *(int *)(v9 + 24);
  v16();
  char v28 = 3;
  sub_1001C1660();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v26);
  uint64_t v19 = v23;
  *(uint64_t *)((char *)v12 + *(int *)(v22 + 28)) = v18;
  sub_1000329C4((uint64_t)v12, v19, type metadata accessor for RateLimitTimingDetails);
  sub_100003E90((uint64_t)a1);
  return sub_1000327CC((uint64_t)v12, type metadata accessor for RateLimitTimingDetails);
}

uint64_t sub_10003079C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100003918(&qword_1002095A0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000D934(a1, a1[3]);
  sub_100035028();
  sub_1001C19C0();
  uint64_t v10 = *((void *)v3 + 6);
  long long v11 = v3[1];
  long long v14 = *v3;
  long long v15 = v11;
  long long v16 = v3[2];
  uint64_t v17 = v10;
  v13[15] = 0;
  sub_100034DC0();
  sub_1001C1740();
  if (!v2)
  {
    type metadata accessor for RateLimitConfiguration(0);
    LOBYTE(v14) = 1;
    type metadata accessor for RateLimitTimingDetails(0);
    sub_100033FF0(&qword_100209518, (void (*)(uint64_t))type metadata accessor for RateLimitTimingDetails);
    sub_1001C1740();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_10003097C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v22 = type metadata accessor for RateLimitTimingDetails(0);
  __chkstk_darwin(v22, v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100003918(&qword_100209590);
  uint64_t v23 = *(void *)(v7 - 8);
  uint64_t v24 = v7;
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for RateLimitConfiguration(0);
  __chkstk_darwin(v11, v12);
  long long v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D934(a1, a1[3]);
  sub_100035028();
  sub_1001C19B0();
  if (v2) {
    return sub_100003E90((uint64_t)a1);
  }
  uint64_t v19 = v11;
  uint64_t v20 = a1;
  char v29 = 0;
  sub_100034CC0();
  uint64_t v15 = v24;
  sub_1001C1690();
  uint64_t v16 = v28;
  long long v17 = v26;
  *(_OWORD *)long long v14 = v25;
  *((_OWORD *)v14 + 1) = v17;
  *((_OWORD *)v14 + 2) = v27;
  *((void *)v14 + 6) = v16;
  LOBYTE(v25) = 1;
  sub_100033FF0(&qword_1002094F8, (void (*)(uint64_t))type metadata accessor for RateLimitTimingDetails);
  sub_1001C1690();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  sub_1000328F4((uint64_t)v6, (uint64_t)&v14[*(int *)(v19 + 20)], type metadata accessor for RateLimitTimingDetails);
  sub_1000329C4((uint64_t)v14, v21, type metadata accessor for RateLimitConfiguration);
  sub_100003E90((uint64_t)v20);
  return sub_1000327CC((uint64_t)v14, type metadata accessor for RateLimitConfiguration);
}

uint64_t sub_100030CD4()
{
  uint64_t result = 0x746E756F63;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E6F697461727564;
      break;
    case 2:
      uint64_t result = 0x72697078456C7474;
      break;
    case 3:
      uint64_t result = 0x72657474696ALL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100030D68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100034784(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100030D90(uint64_t a1)
{
  unint64_t v2 = sub_100034FD4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100030DCC(uint64_t a1)
{
  unint64_t v2 = sub_100034FD4();
  return CodingKey.debugDescription.getter(a1, v2);
}

Swift::Int sub_100030E0C()
{
  return sub_1001C1990();
}

Swift::Int sub_100030E50()
{
  return sub_1001C1990();
}

uint64_t sub_100030E8C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000303F0(a1, a2);
}

uint64_t sub_100030EA4(void *a1)
{
  return sub_1000301E0(a1);
}

uint64_t sub_100030EBC()
{
  if (*v0) {
    return 0x676E696D6974;
  }
  else {
    return 0x7265746C6966;
  }
}

uint64_t sub_100030EE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100034954(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100030F10(uint64_t a1)
{
  unint64_t v2 = sub_100035028();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100030F4C(uint64_t a1)
{
  unint64_t v2 = sub_100035028();
  return CodingKey.debugDescription.getter(a1, v2);
}

Swift::Int sub_100030F8C()
{
  sub_1001C1950();
  long long v1 = *(_OWORD *)(v0 + 16);
  v3[0] = *(_OWORD *)v0;
  v3[1] = v1;
  v3[2] = *(_OWORD *)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 48);
  sub_100032A2C((uint64_t)v3);
  sub_10002F294();
  sub_100032A84((uint64_t)v3);
  sub_100030114();
  return sub_1001C1990();
}

void sub_100031018()
{
  long long v1 = *(_OWORD *)(v0 + 16);
  v2[0] = *(_OWORD *)v0;
  v2[1] = v1;
  v2[2] = *(_OWORD *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 48);
  sub_100032A2C((uint64_t)v2);
  sub_10002F294();
  sub_100032A84((uint64_t)v2);
  sub_100030114();
}

Swift::Int sub_100031094()
{
  sub_1001C1950();
  long long v1 = *(_OWORD *)(v0 + 16);
  v3[0] = *(_OWORD *)v0;
  v3[1] = v1;
  v3[2] = *(_OWORD *)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 48);
  sub_100032A2C((uint64_t)v3);
  sub_10002F294();
  sub_100032A84((uint64_t)v3);
  sub_100030114();
  return sub_1001C1990();
}

uint64_t sub_10003111C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10003097C(a1, a2);
}

uint64_t sub_100031134(void *a1)
{
  return sub_10003079C(a1);
}

uint64_t sub_10003114C(uint64_t a1)
{
  uint64_t v43 = sub_100003918(&qword_100209370);
  uint64_t v3 = __chkstk_darwin(v43, v2);
  uint64_t v5 = (uint64_t *)((char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v3, v6);
  uint64_t v42 = (char *)&v38 - v7;
  uint64_t v49 = &_swiftEmptyArrayStorage;
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v39 = a1 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v41 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v44 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  uint64_t v40 = v5;
  while (1)
  {
    if (v11)
    {
      unint64_t v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v15 = v14 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v16 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v16 >= v41) {
      goto LABEL_29;
    }
    unint64_t v17 = *(void *)(v39 + 8 * v16);
    ++v13;
    if (!v17)
    {
      int64_t v13 = v16 + 1;
      if (v16 + 1 >= v41) {
        goto LABEL_29;
      }
      unint64_t v17 = *(void *)(v39 + 8 * v13);
      if (!v17)
      {
        int64_t v13 = v16 + 2;
        if (v16 + 2 >= v41) {
          goto LABEL_29;
        }
        unint64_t v17 = *(void *)(v39 + 8 * v13);
        if (!v17)
        {
          int64_t v13 = v16 + 3;
          if (v16 + 3 >= v41) {
            goto LABEL_29;
          }
          unint64_t v17 = *(void *)(v39 + 8 * v13);
          if (!v17)
          {
            int64_t v18 = v16 + 4;
            if (v18 >= v41)
            {
LABEL_29:
              swift_release();
              return (uint64_t)v49;
            }
            unint64_t v17 = *(void *)(v39 + 8 * v18);
            int64_t v13 = v18;
            if (!v17) {
              break;
            }
          }
        }
      }
    }
LABEL_21:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
LABEL_22:
    uint64_t v19 = *(void *)(v44 + 56);
    uint64_t v20 = (uint64_t *)(*(void *)(v44 + 48) + 16 * v15);
    uint64_t v22 = *v20;
    uint64_t v21 = v20[1];
    uint64_t v23 = v19 + *(void *)(*(void *)(type metadata accessor for Proto_Ropes_RateLimit_Values(0) - 8) + 72) * v15;
    long long v25 = v42;
    uint64_t v24 = v43;
    sub_1000329C4(v23, (uint64_t)&v42[*(int *)(v43 + 48)], type metadata accessor for Proto_Ropes_RateLimit_Values);
    *long long v25 = v22;
    v25[1] = v21;
    sub_10003295C((uint64_t)v25, (uint64_t)v5);
    uint64_t v26 = *(void *)((char *)v5 + *(int *)(v24 + 48));
    int64_t v27 = *(void *)(v26 + 16);
    if (v27)
    {
      unint64_t v46 = v11;
      int64_t v47 = v13;
      unint64_t v28 = *v5;
      unint64_t v29 = v5[1];
      id v48 = (unint64_t *)&_swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10018F248(0, v27, 0);
      unint64_t v30 = v28;
      char v31 = v48;
      uint64_t v45 = v26;
      double v32 = (unint64_t *)(v26 + 40);
      do
      {
        unint64_t v34 = *(v32 - 1);
        unint64_t v33 = *v32;
        id v48 = v31;
        unint64_t v36 = v31[2];
        unint64_t v35 = v31[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v36 >= v35 >> 1)
        {
          sub_10018F248(v35 > 1, v36 + 1, 1);
          char v31 = v48;
        }
        v32 += 2;
        v31[2] = v36 + 1;
        uint64_t v37 = &v31[4 * v36];
        v37[4] = v30;
        v37[5] = v29;
        v37[6] = v34;
        v37[7] = v33;
        --v27;
      }
      while (v27);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v5 = v40;
      unint64_t v11 = v46;
      int64_t v13 = v47;
    }
    else
    {
      swift_bridgeObjectRetain();
      char v31 = (unint64_t *)&_swiftEmptyArrayStorage;
    }
    sub_100010360((uint64_t)v5, &qword_100209370);
    uint64_t result = sub_1000D052C((uint64_t)v31);
  }
  while (1)
  {
    int64_t v13 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v13 >= v41) {
      goto LABEL_29;
    }
    unint64_t v17 = *(void *)(v39 + 8 * v13);
    ++v18;
    if (v17) {
      goto LABEL_21;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1000314E8(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_100003918(&qword_100209500);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D934(a1, a1[3]);
  sub_100034BC0();
  sub_1001C19C0();
  v10[1] = a2;
  sub_100003918(&qword_1002094E0);
  sub_100034D14();
  sub_1001C1740();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_100031638()
{
  return 0x72756769666E6F63;
}

uint64_t sub_10003165C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x72756769666E6F63 && a2 == 0xEE00736E6F697461)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1001C1840();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_100031718(uint64_t a1)
{
  unint64_t v2 = sub_100034BC0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100031754(uint64_t a1)
{
  unint64_t v2 = sub_100034BC0();
  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_100031790@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_100034A38(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1000317BC(void *a1)
{
  return sub_1000314E8(a1, *v1);
}

uint64_t sub_1000317D8@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v37 = a3;
  uint64_t v38 = a4;
  uint64_t v39 = a2;
  uint64_t v40 = a5;
  uint64_t v6 = sub_1001BF2C0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100003918(&qword_100209378);
  uint64_t v13 = __chkstk_darwin(v11, v12);
  unint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v13, v16);
  uint64_t v19 = (char *)&v37 - v18;
  uint64_t v20 = *(int *)(v17 + 48);
  uint64_t v21 = (uint64_t)&v37 + v20 - v18;
  uint64_t v22 = (uint64_t)a1 + v20;
  uint64_t v23 = *((void *)a1 + 6);
  long long v24 = a1[1];
  *(_OWORD *)uint64_t v19 = *a1;
  *((_OWORD *)v19 + 1) = v24;
  *((_OWORD *)v19 + 2) = a1[2];
  *((void *)v19 + 6) = v23;
  sub_1000329C4(v22, v21, type metadata accessor for RateLimitTimingDetails);
  uint64_t v25 = type metadata accessor for RateLimitTimingDetails(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v21 + *(int *)(v25 + 24), v6);
  sub_1000327CC(v21, type metadata accessor for RateLimitTimingDetails);
  LOBYTE(v21) = sub_1001BF240();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  if (v21)
  {
    *uint64_t v37 = 1;
    uint64_t v26 = type metadata accessor for RateLimitConfiguration(0);
    int64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
    uint64_t v28 = v40;
  }
  else
  {
    uint64_t v29 = v40;
    long long v30 = a1[1];
    long long v41 = *a1;
    long long v42 = v30;
    long long v43 = a1[2];
    uint64_t v44 = *((void *)a1 + 6);
    if (sub_10002F870(v38))
    {
      uint64_t v31 = (uint64_t)&v19[*(int *)(v11 + 48)];
      long long v32 = v42;
      *(_OWORD *)uint64_t v19 = v41;
      *((_OWORD *)v19 + 1) = v32;
      *((_OWORD *)v19 + 2) = v43;
      *((void *)v19 + 6) = v44;
      sub_1000329C4(v22, v31, type metadata accessor for RateLimitTimingDetails);
      uint64_t v33 = (uint64_t)&v15[*(int *)(v11 + 48)];
      sub_1000329C4(v22, v33, type metadata accessor for RateLimitTimingDetails);
      long long v34 = v42;
      *(_OWORD *)uint64_t v29 = v41;
      *(_OWORD *)(v29 + 16) = v34;
      *(_OWORD *)(v29 + 32) = v43;
      *(void *)(v29 + 48) = v44;
      uint64_t v35 = type metadata accessor for RateLimitConfiguration(0);
      sub_1000328F4(v33, v29 + *(int *)(v35 + 20), type metadata accessor for RateLimitTimingDetails);
      sub_100032A2C((uint64_t)&v41);
      sub_1000327CC(v31, type metadata accessor for RateLimitTimingDetails);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v29, 0, 1, v35);
    }
    uint64_t v26 = type metadata accessor for RateLimitConfiguration(0);
    int64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
    uint64_t v28 = v29;
  }
  return v27(v28, 1, 1, v26);
}

uint64_t sub_100031B70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v71 = a2;
  uint64_t v69 = a1;
  uint64_t v66 = sub_1001BF2C0();
  uint64_t v4 = *(void *)(v66 - 8);
  __chkstk_darwin(v66, v5);
  uint64_t v68 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_100003918(&qword_100209378);
  uint64_t v8 = __chkstk_darwin(v67, v7);
  uint64_t v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v8, v11);
  uint64_t v14 = (char *)&v60 - v13;
  __chkstk_darwin(v12, v15);
  uint64_t v17 = (char *)&v60 - v16;
  uint64_t v18 = *(void *)(a3 + 64);
  uint64_t v62 = a3 + 64;
  uint64_t v19 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v18;
  uint64_t v65 = (void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  int64_t v63 = (unint64_t)(v19 + 63) >> 6;
  int v64 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v70 = a3;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v23 = 0;
  while (v21)
  {
    unint64_t v24 = __clz(__rbit64(v21));
    v21 &= v21 - 1;
    unint64_t v25 = v24 | (v23 << 6);
LABEL_21:
    uint64_t v29 = *(void *)(v70 + 56);
    uint64_t v30 = *(void *)(v70 + 48) + 56 * v25;
    long long v32 = *(_OWORD *)(v30 + 16);
    long long v31 = *(_OWORD *)(v30 + 32);
    long long v33 = *(_OWORD *)v30;
    uint64_t v75 = *(void *)(v30 + 48);
    long long v73 = v32;
    long long v74 = v31;
    long long v72 = v33;
    long long v35 = *(_OWORD *)(v30 + 16);
    long long v34 = *(_OWORD *)(v30 + 32);
    long long v36 = *(_OWORD *)v30;
    *((void *)v17 + 6) = *(void *)(v30 + 48);
    *((_OWORD *)v17 + 1) = v35;
    *((_OWORD *)v17 + 2) = v34;
    *(_OWORD *)uint64_t v17 = v36;
    uint64_t v37 = (int *)(type metadata accessor for RateLimitTimingDetails(0) - 8);
    uint64_t v38 = v29 + *(void *)(*(void *)v37 + 72) * v25;
    uint64_t v39 = v67;
    uint64_t v40 = (uint64_t)&v17[*(int *)(v67 + 48)];
    sub_1000329C4(v38, v40, type metadata accessor for RateLimitTimingDetails);
    uint64_t v41 = (uint64_t)&v14[*(int *)(v39 + 48)];
    *((void *)v14 + 6) = v75;
    long long v42 = v73;
    *(_OWORD *)uint64_t v14 = v72;
    *((_OWORD *)v14 + 1) = v42;
    *((_OWORD *)v14 + 2) = v74;
    sub_1000328F4(v40, v41, type metadata accessor for RateLimitTimingDetails);
    uint64_t v43 = (uint64_t)&v10[*(int *)(v39 + 48)];
    *((void *)v10 + 6) = v75;
    long long v44 = v73;
    *(_OWORD *)uint64_t v10 = v72;
    *((_OWORD *)v10 + 1) = v44;
    *((_OWORD *)v10 + 2) = v74;
    sub_1000329C4(v41, v43, type metadata accessor for RateLimitTimingDetails);
    uint64_t v45 = v66;
    unint64_t v46 = v68;
    (*v65)(v68, v43 + v37[8], v66);
    sub_100032A2C((uint64_t)&v72);
    sub_100032A2C((uint64_t)&v72);
    sub_1000327CC(v43, type metadata accessor for RateLimitTimingDetails);
    sub_100033FF0(&qword_10020C540, (void (*)(uint64_t))&type metadata accessor for Date);
    LOBYTE(v37) = sub_1001C0BC0();
    (*v64)(v46, v45);
    if (v37)
    {
      sub_100010360((uint64_t)v14, &qword_100209378);
      uint64_t result = sub_100032A84((uint64_t)&v72);
    }
    else
    {
      if (*((void *)&v72 + 1) && v72 != *(_OWORD *)v71 && (sub_1001C1840() & 1) == 0) {
        goto LABEL_35;
      }
      unint64_t v47 = *((void *)&v73 + 1);
      if (*((void *)&v73 + 1))
      {
        uint64_t v48 = *(void *)(v71 + 16);
        unint64_t v49 = *(void *)(v71 + 24);
        uint64_t v50 = v73;
        if (v73 != __PAIR128__(v49, v48) && (sub_1001C1840() & 1) == 0)
        {
          sub_10018C7C0(46, 0xE100000000000000, v48, v49);
          if (v51) {
            goto LABEL_35;
          }
          swift_bridgeObjectRetain();
          unint64_t v52 = sub_1001C0D50();
          uint64_t v60 = v54;
          unint64_t v61 = v53;
          uint64_t v56 = v55;
          swift_bridgeObjectRelease();
          char v57 = sub_10018FE0C(v50, v47, v52, v61, v60, v56);
          swift_bridgeObjectRelease();
          if ((v57 & 1) == 0) {
            goto LABEL_35;
          }
        }
      }
      if (!*((void *)&v74 + 1) || v74 == *(_OWORD *)(v71 + 32) || (sub_1001C1840() & 1) != 0)
      {
        char v58 = sub_10002F9EC(*(void *)(v71 + 48));
        sub_100032A84((uint64_t)&v72);
        uint64_t result = sub_100010360((uint64_t)v14, &qword_100209378);
        if (v58)
        {
          uint64_t v59 = 1;
LABEL_37:
          swift_release();
          return v59;
        }
      }
      else
      {
LABEL_35:
        sub_100032A84((uint64_t)&v72);
        uint64_t result = sub_100010360((uint64_t)v14, &qword_100209378);
      }
    }
  }
  int64_t v26 = v23 + 1;
  if (__OFADD__(v23, 1))
  {
    __break(1u);
    goto LABEL_39;
  }
  if (v26 >= v63) {
    goto LABEL_36;
  }
  unint64_t v27 = *(void *)(v62 + 8 * v26);
  ++v23;
  if (v27) {
    goto LABEL_20;
  }
  int64_t v23 = v26 + 1;
  if (v26 + 1 >= v63) {
    goto LABEL_36;
  }
  unint64_t v27 = *(void *)(v62 + 8 * v23);
  if (v27) {
    goto LABEL_20;
  }
  int64_t v23 = v26 + 2;
  if (v26 + 2 >= v63) {
    goto LABEL_36;
  }
  unint64_t v27 = *(void *)(v62 + 8 * v23);
  if (v27)
  {
LABEL_20:
    unint64_t v21 = (v27 - 1) & v27;
    unint64_t v25 = __clz(__rbit64(v27)) + (v23 << 6);
    goto LABEL_21;
  }
  int64_t v28 = v26 + 3;
  if (v28 >= v63)
  {
LABEL_36:
    uint64_t v59 = 0;
    goto LABEL_37;
  }
  unint64_t v27 = *(void *)(v62 + 8 * v28);
  if (v27)
  {
    int64_t v23 = v28;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v23 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v23 >= v63) {
      goto LABEL_36;
    }
    unint64_t v27 = *(void *)(v62 + 8 * v23);
    ++v28;
    if (v27) {
      goto LABEL_20;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

void *sub_100032154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v15 = 0;
  v14[6] = a1;
  v14[7] = &v15;
  v14[8] = a2;
  v14[9] = a3;
  v14[10] = a4;
  v14[11] = a5;
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = sub_100032AE8(v7, (void (*)(long long *, uint64_t))sub_100032AD8);
  uint64_t v9 = swift_bridgeObjectRelease();
  if (v15 == 1)
  {
    __chkstk_darwin(v9, v10);
    v14[2] = a1;
    uint64_t v12 = sub_100091D10((void (*)(uint64_t))sub_100032F9C, (uint64_t)v14, v11);
    swift_bridgeObjectRelease();
    *uint64_t v5 = v12;
  }
  return v8;
}

uint64_t sub_100032240@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, unint64_t a7@<X7>, uint64_t a8@<X8>)
{
  type metadata accessor for RateLimitTimingDetails(0);
  if (sub_1001BF240())
  {
    *a3 = 1;
    uint64_t v16 = type metadata accessor for RateLimitConfiguration(0);
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    uint64_t v18 = v16;
    uint64_t v19 = a8;
LABEL_8:
    return v17(v19, 1, 1, v18);
  }
  char v20 = sub_10002FC04(a4, a5, a6, a7);
  uint64_t v21 = type metadata accessor for RateLimitConfiguration(0);
  uint64_t v22 = v21;
  if ((v20 & 1) == 0)
  {
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
    uint64_t v19 = a8;
    uint64_t v18 = v22;
    goto LABEL_8;
  }
  sub_1000329C4(a2, a8 + *(int *)(v21 + 20), type metadata accessor for RateLimitTimingDetails);
  long long v23 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a8 = *(_OWORD *)a1;
  *(_OWORD *)(a8 + 16) = v23;
  *(_OWORD *)(a8 + 32) = *(_OWORD *)(a1 + 32);
  *(void *)(a8 + 48) = *(void *)(a1 + 48);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a8, 0, 1, v22);
  return sub_100032A2C(a1);
}

uint64_t sub_10003240C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for RateLimitTimingDetails(0);
  if (sub_1001BF240())
  {
    uint64_t v5 = 1;
  }
  else
  {
    sub_1000329C4(a1, a2, type metadata accessor for RateLimitTimingDetails);
    uint64_t v5 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a2, v5, 1, v4);
}

uint64_t sub_1000324CC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000324F8(uint64_t a1)
{
  return a1;
}

uint64_t sub_100032524(void *a1, void *a2)
{
  uint64_t v4 = a1[1];
  uint64_t v5 = a2[1];
  if (v4)
  {
    if (!v5) {
      return 0;
    }
    BOOL v6 = *a1 == *a2 && v4 == v5;
    if (!v6 && (sub_1001C1840() & 1) == 0) {
      return 0;
    }
  }
  else if (v5)
  {
    return 0;
  }
  uint64_t v7 = a1[3];
  uint64_t v8 = a2[3];
  if (v7)
  {
    if (!v8 || (a1[2] != a2[2] || v7 != v8) && (sub_1001C1840() & 1) == 0) {
      return 0;
    }
  }
  else if (v8)
  {
    return 0;
  }
  uint64_t v9 = a1[5];
  uint64_t v10 = a2[5];
  if (v9)
  {
    if (v10 && (a1[4] == a2[4] && v9 == v10 || (sub_1001C1840() & 1) != 0)) {
      goto LABEL_22;
    }
    return 0;
  }
  if (v10) {
    return 0;
  }
LABEL_22:
  uint64_t v11 = a1[6];
  uint64_t v12 = a2[6];
  return sub_100169B84(v11, v12);
}

BOOL sub_10003261C(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v4;
  _OWORD v11[2] = *(_OWORD *)(a1 + 32);
  uint64_t v12 = *(void *)(a1 + 48);
  long long v5 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v5;
  void v13[2] = *(_OWORD *)(a2 + 32);
  uint64_t v14 = *(void *)(a2 + 48);
  BOOL result = 0;
  if (sub_100032524(v11, v13))
  {
    uint64_t v6 = *(int *)(type metadata accessor for RateLimitConfiguration(0) + 20);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = a2 + v6;
    if (*(void *)v7 == *(void *)(a2 + v6) && *(double *)(v7 + 8) == *(double *)(v8 + 8))
    {
      uint64_t v9 = type metadata accessor for RateLimitTimingDetails(0);
      if ((sub_1001BF290() & 1) != 0 && *(double *)(v7 + *(int *)(v9 + 28)) == *(double *)(v8 + *(int *)(v9 + 28))) {
        return 1;
      }
    }
  }
  return result;
}

BOOL sub_100032704(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 == *(void *)a2
    && *(double *)(a1 + 8) == *(double *)(a2 + 8)
    && (uint64_t v4 = type metadata accessor for RateLimitTimingDetails(0), (sub_1001BF290() & 1) != 0))
  {
    return *(double *)(a1 + *(int *)(v4 + 28)) == *(double *)(a2 + *(int *)(v4 + 28));
  }
  else
  {
    return 0;
  }
}

uint64_t type metadata accessor for RateLimitTimingDetails(uint64_t a1)
{
  return sub_10001C958(a1, qword_1002093E0);
}

uint64_t type metadata accessor for RateLimitConfiguration(uint64_t a1)
{
  return sub_10001C958(a1, qword_100209478);
}

uint64_t sub_1000327CC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10003282C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100003918(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100032890(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1000328F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10003295C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100003918(&qword_100209370);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000329C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100032A2C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100032A84(uint64_t a1)
{
  return a1;
}

uint64_t sub_100032AD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_100032240(a1, a2, *(unsigned char **)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 56), a3);
}

void *sub_100032AE8(uint64_t a1, void (*a2)(long long *, uint64_t))
{
  uint64_t v54 = a2;
  uint64_t v3 = sub_100003918(&qword_100209380);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for RateLimitConfiguration(0);
  uint64_t v7 = *(void *)(v49 - 8);
  uint64_t v9 = __chkstk_darwin(v49, v8);
  uint64_t v44 = (uint64_t)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v11);
  uint64_t v42 = (uint64_t)&v41 - v12;
  uint64_t v48 = sub_100003918(&qword_100209378);
  __chkstk_darwin(v48, v13);
  char v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a1 + 64);
  uint64_t v46 = a1 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  int64_t v47 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v43 = v7;
  char v20 = (unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  BOOL result = (void *)swift_bridgeObjectRetain();
  int64_t v22 = 0;
  uint64_t v45 = _swiftEmptyArrayStorage;
  if (!v19) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v23 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (unint64_t i = v23 | (v22 << 6); ; unint64_t i = __clz(__rbit64(v34)) + (v22 << 6))
  {
    uint64_t v25 = *(void *)(a1 + 56);
    uint64_t v26 = *(void *)(a1 + 48) + 56 * i;
    long long v28 = *(_OWORD *)(v26 + 16);
    long long v27 = *(_OWORD *)(v26 + 32);
    long long v29 = *(_OWORD *)v26;
    uint64_t v53 = *(void *)(v26 + 48);
    long long v51 = v28;
    long long v52 = v27;
    long long v50 = v29;
    uint64_t v30 = v25 + *(void *)(*(void *)(type metadata accessor for RateLimitTimingDetails(0) - 8) + 72) * i;
    uint64_t v31 = (uint64_t)&v15[*(int *)(v48 + 48)];
    sub_1000329C4(v30, v31, type metadata accessor for RateLimitTimingDetails);
    long long v32 = v51;
    *(_OWORD *)char v15 = v50;
    *((_OWORD *)v15 + 1) = v32;
    *((_OWORD *)v15 + 2) = v52;
    *((void *)v15 + 6) = v53;
    sub_100032A2C((uint64_t)&v50);
    v54(&v50, v31);
    sub_100010360((uint64_t)v15, &qword_100209378);
    if ((*v20)(v6, 1, v49) == 1)
    {
      BOOL result = (void *)sub_100010360((uint64_t)v6, &qword_100209380);
      if (v19) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v36 = v42;
      sub_1000328F4((uint64_t)v6, v42, type metadata accessor for RateLimitConfiguration);
      sub_1000328F4(v36, v44, type metadata accessor for RateLimitConfiguration);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v45 = (void *)sub_1000E3C5C(0, v45[2] + 1, 1, (unint64_t)v45);
      }
      unint64_t v38 = v45[2];
      unint64_t v37 = v45[3];
      if (v38 >= v37 >> 1) {
        uint64_t v45 = (void *)sub_1000E3C5C(v37 > 1, v38 + 1, 1, (unint64_t)v45);
      }
      uint64_t v39 = v44;
      uint64_t v40 = v45;
      v45[2] = v38 + 1;
      BOOL result = (void *)sub_1000328F4(v39, (uint64_t)v40+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(void *)(v43 + 72) * v38, type metadata accessor for RateLimitConfiguration);
      if (v19) {
        goto LABEL_4;
      }
    }
LABEL_7:
    int64_t v33 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v33 >= v47) {
      goto LABEL_29;
    }
    unint64_t v34 = *(void *)(v46 + 8 * v33);
    ++v22;
    if (!v34)
    {
      int64_t v22 = v33 + 1;
      if (v33 + 1 >= v47) {
        goto LABEL_29;
      }
      unint64_t v34 = *(void *)(v46 + 8 * v22);
      if (!v34)
      {
        int64_t v22 = v33 + 2;
        if (v33 + 2 >= v47) {
          goto LABEL_29;
        }
        unint64_t v34 = *(void *)(v46 + 8 * v22);
        if (!v34)
        {
          int64_t v22 = v33 + 3;
          if (v33 + 3 >= v47) {
            goto LABEL_29;
          }
          unint64_t v34 = *(void *)(v46 + 8 * v22);
          if (!v34) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v19 = (v34 - 1) & v34;
  }
  int64_t v35 = v33 + 4;
  if (v35 >= v47)
  {
LABEL_29:
    swift_release();
    return v45;
  }
  unint64_t v34 = *(void *)(v46 + 8 * v35);
  if (v34)
  {
    int64_t v22 = v35;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v22 = v35 + 1;
    if (__OFADD__(v35, 1)) {
      break;
    }
    if (v22 >= v47) {
      goto LABEL_29;
    }
    unint64_t v34 = *(void *)(v46 + 8 * v22);
    ++v35;
    if (v34) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_100032F9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10003240C(a1, a2);
}

uint64_t destroy for RateLimitFilter.WorkloadTag()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for RateLimitFilter.WorkloadTag(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for RateLimitFilter.WorkloadTag(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for RateLimitFilter.WorkloadTag(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RateLimitFilter.WorkloadTag(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RateLimitFilter.WorkloadTag(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)BOOL result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RateLimitFilter.WorkloadTag()
{
  return &type metadata for RateLimitFilter.WorkloadTag;
}

uint64_t getEnumTagSinglePayload for RateLimitFilter(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RateLimitFilter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)BOOL result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RateLimitFilter()
{
  return &type metadata for RateLimitFilter;
}

uint64_t *sub_100033228(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1001BF2C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
  }
  return v4;
}

uint64_t sub_100033310(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = sub_1001BF2C0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

_OWORD *sub_100033378(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001BF2C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

void *sub_100033410(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001BF2C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

_OWORD *sub_1000334B0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001BF2C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

void *sub_100033548(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001BF2C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1000335E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000335FC);
}

uint64_t sub_1000335FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 24);
  uint64_t v5 = sub_1001BF2C0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(v4, a2, v5);
}

uint64_t sub_10003366C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100033680);
}

uint64_t sub_100033680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 24);
  uint64_t v6 = sub_1001BF2C0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, a2, a2, v6);
}

uint64_t sub_1000336F4()
{
  uint64_t result = sub_1001BF2C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for RateLimitConfigurationSet()
{
  return &type metadata for RateLimitConfigurationSet;
}

uint64_t *sub_1000337A0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    a1[6] = a2[6];
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    *(_OWORD *)((char *)a1 + v8) = *(_OWORD *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for RateLimitTimingDetails(0);
    uint64_t v12 = *(int *)(v11 + 24);
    uint64_t v17 = &v10[v12];
    uint64_t v18 = &v9[v12];
    uint64_t v13 = sub_1001BF2C0();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v18, v17, v13);
    *(void *)&v9[*(int *)(v11 + 28)] = *(void *)&v10[*(int *)(v11 + 28)];
  }
  return v3;
}

uint64_t sub_1000338FC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = v4 + *(int *)(type metadata accessor for RateLimitTimingDetails(0) + 24);
  uint64_t v6 = sub_1001BF2C0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  return v7(v5, v6);
}

void *sub_10003399C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  a1[6] = a2[6];
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  *(_OWORD *)((char *)a1 + v7) = *(_OWORD *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for RateLimitTimingDetails(0);
  uint64_t v11 = *(int *)(v10 + 24);
  char v15 = &v9[v11];
  uint64_t v16 = &v8[v11];
  uint64_t v12 = sub_1001BF2C0();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14(v16, v15, v12);
  *(void *)&v8[*(int *)(v10 + 28)] = *(void *)&v9[*(int *)(v10 + 28)];
  return a1;
}

void *sub_100033AA8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (char *)a2 + v6;
  *uint64_t v7 = *(void *)((char *)a2 + v6);
  v7[1] = *(void *)((char *)a2 + v6 + 8);
  uint64_t v9 = type metadata accessor for RateLimitTimingDetails(0);
  uint64_t v10 = *(int *)(v9 + 24);
  uint64_t v11 = (char *)v7 + v10;
  uint64_t v12 = &v8[v10];
  uint64_t v13 = sub_1001BF2C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  *(void *)((char *)v7 + *(int *)(v9 + 28)) = *(void *)&v8[*(int *)(v9 + 28)];
  return a1;
}

uint64_t sub_100033BD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  *(_OWORD *)(a1 + v5) = *(_OWORD *)(a2 + v5);
  uint64_t v8 = type metadata accessor for RateLimitTimingDetails(0);
  uint64_t v9 = *(int *)(v8 + 24);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = v7 + v9;
  uint64_t v12 = sub_1001BF2C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  *(void *)(v6 + *(int *)(v8 + 28)) = *(void *)(v7 + *(int *)(v8 + 28));
  return a1;
}

void *sub_100033C98(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (void *)((char *)a1 + v9);
  uint64_t v11 = (char *)a2 + v9;
  *uint64_t v10 = *(void *)((char *)a2 + v9);
  v10[1] = *(void *)((char *)a2 + v9 + 8);
  uint64_t v12 = type metadata accessor for RateLimitTimingDetails(0);
  uint64_t v13 = *(int *)(v12 + 24);
  uint64_t v14 = (char *)v10 + v13;
  char v15 = &v11[v13];
  uint64_t v16 = sub_1001BF2C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  *(void *)((char *)v10 + *(int *)(v12 + 28)) = *(void *)&v11[*(int *)(v12 + 28)];
  return a1;
}

uint64_t sub_100033D90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100033DA4);
}

uint64_t sub_100033DA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 48);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for RateLimitTimingDetails(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100033E54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100033E68);
}

uint64_t sub_100033E68(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 48) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for RateLimitTimingDetails(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100033F10()
{
  uint64_t result = type metadata accessor for RateLimitTimingDetails(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100033FA8()
{
  return sub_100033FF0(&qword_1002094B0, (void (*)(uint64_t))type metadata accessor for RateLimitConfiguration);
}

uint64_t sub_100033FF0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100034038()
{
  return sub_100033FF0(&qword_1002094B8, (void (*)(uint64_t))type metadata accessor for RateLimitTimingDetails);
}

unint64_t sub_100034084()
{
  unint64_t result = qword_1002094C0;
  if (!qword_1002094C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002094C0);
  }
  return result;
}

unint64_t sub_1000340DC()
{
  unint64_t result = qword_1002094C8;
  if (!qword_1002094C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002094C8);
  }
  return result;
}

uint64_t sub_100034130(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7955819 && a2 == 0xE300000000000000;
  if (v2 || (sub_1001C1840() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1001C1840();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_10003420C(void *a1)
{
  uint64_t v3 = sub_100003918(&qword_100209520);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[4];
  sub_10000D934(a1, a1[3]);
  sub_100034E14();
  sub_1001C19B0();
  if (v1)
  {
    sub_100003E90((uint64_t)a1);
  }
  else
  {
    char v12 = 0;
    uint64_t v8 = sub_1001C1650();
    char v11 = 1;
    swift_bridgeObjectRetain();
    sub_1001C1650();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    swift_bridgeObjectRetain();
    sub_100003E90((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t sub_100034414@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_100003918(&qword_100209538);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D934(a1, a1[3]);
  sub_100034E68();
  sub_1001C19B0();
  if (v2)
  {
    sub_100003E90((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v31 = 0;
    uint64_t v10 = sub_1001C1610();
    uint64_t v12 = v11;
    uint64_t v26 = v10;
    char v30 = 1;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1001C1610();
    uint64_t v15 = v14;
    uint64_t v24 = v13;
    uint64_t v25 = a2;
    char v29 = 2;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1001C1610();
    uint64_t v18 = v17;
    uint64_t v23 = v16;
    sub_100003918(&qword_100209548);
    char v28 = 3;
    sub_100034F10(&qword_100209550, (void (*)(void))sub_100034EBC);
    swift_bridgeObjectRetain();
    sub_1001C1690();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    uint64_t v19 = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100003E90((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v21 = v25;
    *uint64_t v25 = v26;
    v21[1] = v12;
    v21[2] = v24;
    v21[3] = v15;
    v21[4] = v23;
    v21[5] = v18;
    v21[6] = v19;
  }
  return result;
}

uint64_t sub_100034784(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E756F63 && a2 == 0xE500000000000000;
  if (v2 || (sub_1001C1840() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 || (sub_1001C1840() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x72697078456C7474 && a2 == 0xED00006E6F697461 || (sub_1001C1840() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x72657474696ALL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1001C1840();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_100034954(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7265746C6966 && a2 == 0xE600000000000000;
  if (v2 || (sub_1001C1840() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E696D6974 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1001C1840();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void *sub_100034A38(void *a1)
{
  uint64_t v3 = sub_100003918(&qword_1002094D0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100055648((uint64_t)&_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_10000D934(a1, a1[3]);
  sub_100034BC0();
  sub_1001C19B0();
  if (v1)
  {
    sub_100003E90((uint64_t)a1);
  }
  else
  {
    sub_100003918(&qword_1002094E0);
    sub_100034C14();
    sub_1001C1690();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    uint64_t v8 = (void *)v10[1];
    sub_100003E90((uint64_t)a1);
  }
  return v8;
}

unint64_t sub_100034BC0()
{
  unint64_t result = qword_1002094D8;
  if (!qword_1002094D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002094D8);
  }
  return result;
}

unint64_t sub_100034C14()
{
  unint64_t result = qword_1002094E8;
  if (!qword_1002094E8)
  {
    sub_1000166C8(&qword_1002094E0);
    sub_100034CC0();
    sub_100033FF0(&qword_1002094F8, (void (*)(uint64_t))type metadata accessor for RateLimitTimingDetails);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002094E8);
  }
  return result;
}

unint64_t sub_100034CC0()
{
  unint64_t result = qword_1002094F0;
  if (!qword_1002094F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002094F0);
  }
  return result;
}

unint64_t sub_100034D14()
{
  unint64_t result = qword_100209508;
  if (!qword_100209508)
  {
    sub_1000166C8(&qword_1002094E0);
    sub_100034DC0();
    sub_100033FF0(&qword_100209518, (void (*)(uint64_t))type metadata accessor for RateLimitTimingDetails);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100209508);
  }
  return result;
}

unint64_t sub_100034DC0()
{
  unint64_t result = qword_100209510;
  if (!qword_100209510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100209510);
  }
  return result;
}

unint64_t sub_100034E14()
{
  unint64_t result = qword_100209528;
  if (!qword_100209528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100209528);
  }
  return result;
}

unint64_t sub_100034E68()
{
  unint64_t result = qword_100209540;
  if (!qword_100209540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100209540);
  }
  return result;
}

unint64_t sub_100034EBC()
{
  unint64_t result = qword_100209558;
  if (!qword_100209558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100209558);
  }
  return result;
}

uint64_t sub_100034F10(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000166C8(&qword_100209548);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100034F80()
{
  unint64_t result = qword_100209570;
  if (!qword_100209570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100209570);
  }
  return result;
}

unint64_t sub_100034FD4()
{
  unint64_t result = qword_100209580;
  if (!qword_100209580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100209580);
  }
  return result;
}

unint64_t sub_100035028()
{
  unint64_t result = qword_100209598;
  if (!qword_100209598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100209598);
  }
  return result;
}

ValueMetadata *type metadata accessor for RateLimitConfiguration.CodingKeys()
{
  return &type metadata for RateLimitConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for RateLimitTimingDetails.CodingKeys()
{
  return &type metadata for RateLimitTimingDetails.CodingKeys;
}

unsigned char *_s20privatecloudcomputed22RateLimitTimingDetailsV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100035178);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RateLimitFilter.CodingKeys()
{
  return &type metadata for RateLimitFilter.CodingKeys;
}

unsigned char *_s20privatecloudcomputed22RateLimitConfigurationV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10003527CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RateLimitFilter.WorkloadTag.CodingKeys()
{
  return &type metadata for RateLimitFilter.WorkloadTag.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for RateLimitConfigurationSet.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100035350);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RateLimitConfigurationSet.CodingKeys()
{
  return &type metadata for RateLimitConfigurationSet.CodingKeys;
}

unint64_t sub_10003538C()
{
  unint64_t result = qword_1002095A8;
  if (!qword_1002095A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002095A8);
  }
  return result;
}

unint64_t sub_1000353E4()
{
  unint64_t result = qword_1002095B0;
  if (!qword_1002095B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002095B0);
  }
  return result;
}

unint64_t sub_10003543C()
{
  unint64_t result = qword_1002095B8;
  if (!qword_1002095B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002095B8);
  }
  return result;
}

unint64_t sub_100035494()
{
  unint64_t result = qword_1002095C0;
  if (!qword_1002095C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002095C0);
  }
  return result;
}

unint64_t sub_1000354EC()
{
  unint64_t result = qword_1002095C8;
  if (!qword_1002095C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002095C8);
  }
  return result;
}

unint64_t sub_100035544()
{
  unint64_t result = qword_1002095D0;
  if (!qword_1002095D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002095D0);
  }
  return result;
}

unint64_t sub_10003559C()
{
  unint64_t result = qword_1002095D8;
  if (!qword_1002095D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002095D8);
  }
  return result;
}

unint64_t sub_1000355F4()
{
  unint64_t result = qword_1002095E0;
  if (!qword_1002095E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002095E0);
  }
  return result;
}

unint64_t sub_10003564C()
{
  unint64_t result = qword_1002095E8;
  if (!qword_1002095E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002095E8);
  }
  return result;
}

unint64_t sub_1000356A4()
{
  unint64_t result = qword_1002095F0;
  if (!qword_1002095F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002095F0);
  }
  return result;
}

unint64_t sub_1000356FC()
{
  unint64_t result = qword_1002095F8;
  if (!qword_1002095F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002095F8);
  }
  return result;
}

unint64_t sub_100035754()
{
  unint64_t result = qword_100209600;
  if (!qword_100209600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100209600);
  }
  return result;
}

unint64_t sub_1000357AC()
{
  unint64_t result = qword_100209608;
  if (!qword_100209608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100209608);
  }
  return result;
}

unint64_t sub_100035804()
{
  unint64_t result = qword_100209610;
  if (!qword_100209610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100209610);
  }
  return result;
}

unint64_t sub_10003585C()
{
  unint64_t result = qword_100209618;
  if (!qword_100209618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100209618);
  }
  return result;
}

uint64_t sub_1000358C8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v40 = a1;
  uint64_t v41 = sub_1001BEFF0();
  uint64_t v39 = *(void *)(v41 - 8);
  __chkstk_darwin(v41, v3);
  uint64_t v36 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1001BF0B0();
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  __chkstk_darwin(v5, v6);
  int64_t v35 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_1001C1230();
  uint64_t v8 = *(void *)(v34 - 8);
  __chkstk_darwin(v34, v9);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1001C12B0();
  __chkstk_darwin(v12, v13);
  uint64_t v14 = sub_1001C08B0();
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v16 = sub_1001BF8E0();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v18);
  char v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + OBJC_IVAR____TtC20privatecloudcomputed35NodeDistributionAnalyzerStoreHelper_fileHandle) = 0;
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v20, enum case for TC2LogCategory.metricReporter(_:), v16);
  sub_1001BFDD0();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  uint64_t v33 = OBJC_IVAR____TtC20privatecloudcomputed35NodeDistributionAnalyzerStoreHelper_queue;
  sub_1000376D4(0, &qword_1002097D0);
  if (qword_100207988 != -1) {
    swift_once();
  }
  id v21 = (id)blockingIOQueue;
  sub_1001C08A0();
  uint64_t v42 = &_swiftEmptyArrayStorage;
  sub_100037710(&qword_1002097D8, 255, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue_serial.Attributes);
  sub_100003918(&qword_1002097E0);
  sub_100037758();
  sub_1001C13D0();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v11, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v34);
  *(void *)(v1 + v33) = sub_1001C12C0();
  uint64_t v42 = (void *)0xD000000000000011;
  unint64_t v43 = 0x80000001001C37A0;
  uint64_t v22 = v39;
  uint64_t v23 = v36;
  uint64_t v24 = v41;
  (*(void (**)(char *, void, uint64_t))(v39 + 104))(v36, enum case for URL.DirectoryHint.inferFromPath(_:), v41);
  sub_10001A364();
  uint64_t v25 = v35;
  uint64_t v26 = v40;
  sub_1001BF0A0();
  uint64_t v27 = v37;
  uint64_t v28 = v26;
  uint64_t v29 = v38;
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v28, v38);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v24);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v2 + OBJC_IVAR____TtC20privatecloudcomputed35NodeDistributionAnalyzerStoreHelper_storeURL, v25, v29);
  char v30 = *(void **)(v2 + OBJC_IVAR____TtC20privatecloudcomputed35NodeDistributionAnalyzerStoreHelper_fileHandle);
  *(void *)(v2 + OBJC_IVAR____TtC20privatecloudcomputed35NodeDistributionAnalyzerStoreHelper_fileHandle) = 0;

  return v2;
}

uint64_t sub_100035E24()
{
  uint64_t v1 = OBJC_IVAR____TtC20privatecloudcomputed35NodeDistributionAnalyzerStoreHelper_fileHandle;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC20privatecloudcomputed35NodeDistributionAnalyzerStoreHelper_fileHandle);
  if (v2)
  {
    id v11 = 0;
    id v3 = v2;
    if ([v3 closeAndReturnError:&v11])
    {
      id v4 = v11;
    }
    else
    {
      id v5 = v11;
      sub_1001BEFE0();

      swift_willThrow();
      swift_errorRelease();
    }
  }
  uint64_t v6 = v0 + OBJC_IVAR____TtC20privatecloudcomputed35NodeDistributionAnalyzerStoreHelper_storeURL;
  uint64_t v7 = sub_1001BF0B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  uint64_t v8 = v0 + OBJC_IVAR____TtC20privatecloudcomputed35NodeDistributionAnalyzerStoreHelper_logger;
  uint64_t v9 = sub_1001C0340();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);

  return swift_deallocClassInstance();
}

uint64_t sub_100035FC4()
{
  return type metadata accessor for NodeDistributionAnalyzerStoreHelper(0);
}

uint64_t type metadata accessor for NodeDistributionAnalyzerStoreHelper(uint64_t a1)
{
  return sub_10001C958(a1, qword_100209660);
}

uint64_t sub_100035FEC()
{
  uint64_t result = sub_1001BF0B0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1001C0340();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1000360CC(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_1000360EC, 0, 0);
}

uint64_t sub_1000360EC()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC20privatecloudcomputed35NodeDistributionAnalyzerStoreHelper_queue);
  uint64_t v4 = swift_allocObject();
  v0[4] = v4;
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v1;
  swift_retain();
  swift_bridgeObjectRetain();
  id v5 = (void *)swift_task_alloc();
  v0[5] = v5;
  v5[2] = v3;
  _OWORD v5[3] = sub_100037414;
  v5[4] = v4;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[6] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_100036230;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v6, 0, 0, 0xD000000000000024, 0x80000001001C3770, sub_100037430, v5, (char *)&type metadata for () + 8);
}

uint64_t sub_100036230()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10003636C;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v2 = sub_100036354;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100036354()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10003636C()
{
  swift_task_dealloc();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1000363D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1001BF0B0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = OBJC_IVAR____TtC20privatecloudcomputed35NodeDistributionAnalyzerStoreHelper_fileHandle;
  uint64_t v12 = *(void **)(a1 + OBJC_IVAR____TtC20privatecloudcomputed35NodeDistributionAnalyzerStoreHelper_fileHandle);
  if (v12) {
    goto LABEL_2;
  }
  uint64_t v30 = a2;
  id v20 = [self defaultManager];
  uint64_t v21 = a1 + OBJC_IVAR____TtC20privatecloudcomputed35NodeDistributionAnalyzerStoreHelper_storeURL;
  sub_1001BF060(1);
  uint64_t v31 = v2;
  NSString v22 = sub_1001C0BE0();
  swift_bridgeObjectRelease();
  [v20 createFileAtPath:v22 contents:0 attributes:0];

  sub_1000376D4(0, &qword_1002097C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v21, v6);
  uint64_t v23 = v31;
  id v24 = sub_1000366E8((uint64_t)v10);
  if (!v23)
  {
    id v25 = v24;
    sub_1001C11B0();
    uint64_t v3 = 0;
    uint64_t v27 = *(void **)(a1 + v11);
    *(void *)(a1 + v11) = v25;

    uint64_t v12 = *(void **)(a1 + v11);
    a2 = v30;
    if (v12)
    {
LABEL_2:
      _s27FileHandle_UTF8OutputStreamCMa();
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = v12;
      uint64_t v33 = v13;
      uint64_t v14 = *(void *)(a2 + 16);
      if (v14)
      {
        uint64_t v31 = v3;
        id v29 = v12;
        swift_bridgeObjectRetain();
        uint64_t v30 = a2;
        uint64_t v15 = (uint64_t *)(a2 + 40);
        long long v32 = xmmword_1001CC760;
        do
        {
          uint64_t v16 = *(v15 - 1);
          uint64_t v17 = *v15;
          sub_100003918(&qword_1002097B8);
          uint64_t v18 = swift_allocObject();
          *(_OWORD *)(v18 + 16) = v32;
          *(void *)(v18 + 56) = &type metadata for String;
          *(void *)(v18 + 32) = v16;
          *(void *)(v18 + 40) = v17;
          sub_100037710(&qword_1002097C0, v19, (void (*)(uint64_t))_s27FileHandle_UTF8OutputStreamCMa);
          swift_bridgeObjectRetain();
          sub_1001C1940();
          swift_bridgeObjectRelease();
          v15 += 2;
          --v14;
        }
        while (v14);
        swift_bridgeObjectRelease();
      }
      else
      {
        id v26 = v12;
      }
      swift_release();
    }
  }
}

id sub_1000366E8(uint64_t a1)
{
  sub_1001BF020(__stack_chk_guard);
  uint64_t v3 = v2;
  id v12 = 0;
  id v4 = [(id)swift_getObjCClassFromMetadata() fileHandleForWritingToURL:v2 error:&v12];

  id v5 = v12;
  if (v4)
  {
    uint64_t v6 = sub_1001BF0B0();
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    id v8 = v5;
    v7(a1, v6);
  }
  else
  {
    id v9 = v12;
    sub_1001BEFE0();

    swift_willThrow();
    uint64_t v10 = sub_1001BF0B0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(a1, v10);
  }
  return v4;
}

uint64_t sub_100036840()
{
  *(void *)(v1 + 32) = v0;
  return _swift_task_switch(sub_100036860, 0, 0);
}

uint64_t sub_100036860()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC20privatecloudcomputed35NodeDistributionAnalyzerStoreHelper_queue);
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  v3[2] = v2;
  _OWORD v3[3] = sub_100037358;
  v3[4] = v1;
  id v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  void *v4 = v0;
  v4[1] = sub_100036984;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000024, 0x80000001001C3770, sub_100037374, v3, &type metadata for Data);
}

uint64_t sub_100036984()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10003636C;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v2 = sub_100036AA8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100036AA8()
{
  return (*(uint64_t (**)(void, void))(v0 + 8))(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_100036AC4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v43 = a2;
  uint64_t v42 = sub_1001BEFF0();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42, v3);
  id v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100003918(&qword_10020C370);
  __chkstk_darwin(v6 - 8, v7);
  id v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1001BF0B0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v13 = __chkstk_darwin(v10, v12);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = OBJC_IVAR____TtC20privatecloudcomputed35NodeDistributionAnalyzerStoreHelper_fileHandle;
  uint64_t v17 = *(void **)(a1 + OBJC_IVAR____TtC20privatecloudcomputed35NodeDistributionAnalyzerStoreHelper_fileHandle);
  uint64_t v41 = v13;
  if (v17)
  {
    id v45 = 0;
    id v18 = v17;
    if ([v18 closeAndReturnError:&v45])
    {
      id v19 = v45;
    }
    else
    {
      id v20 = v45;
      sub_1001BEFE0();

      swift_willThrow();
      swift_errorRelease();
      unint64_t v44 = 0;
    }
    uint64_t v21 = *(void **)(a1 + v16);
    *(void *)(a1 + v16) = 0;
  }
  NSString v22 = self;
  id v23 = [v22 defaultManager];
  sub_1001BF060(1);
  NSString v24 = sub_1001C0BE0();
  swift_bridgeObjectRelease();
  unsigned __int8 v25 = [v23 fileExistsAtPath:v24];

  if (v25)
  {
    sub_1001BF060(1);
    uint64_t v26 = v41;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v41);
    (*(void (**)(char *, void, uint64_t))(v40 + 104))(v5, enum case for URL.DirectoryHint.inferFromPath(_:), v42);
    sub_1001BF090();
    unint64_t v27 = v44;
    uint64_t v28 = sub_1001BF0D0();
    if (v27)
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v26);
    }
    else
    {
      uint64_t v30 = v28;
      unint64_t v44 = v29;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v26);
      id v31 = [v22 defaultManager];
      sub_1001BF060(1);
      NSString v32 = sub_1001C0BE0();
      swift_bridgeObjectRelease();
      id v45 = 0;
      unsigned int v33 = [v31 removeItemAtPath:v32 error:&v45];

      id v34 = v45;
      if (v33)
      {
        int64_t v35 = v43;
        unint64_t v36 = v44;
        *unint64_t v43 = v30;
        v35[1] = v36;
        id v37 = v34;
      }
      else
      {
        id v38 = v45;
        sub_1001BEFE0();

        swift_willThrow();
        sub_10000792C(v30, v44);
      }
    }
  }
  else
  {
    *(_OWORD *)unint64_t v43 = xmmword_1001CB200;
  }
}

uint64_t sub_100036EF0(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_100036F10, 0, 0);
}

uint64_t sub_100036F10()
{
  uint64_t v1 = *(Swift::UInt8 **)(v0 + 16);
  Swift::UInt8_optional v2 = sub_1001BF1C0();
  *uint64_t v1 = v2.value;
  v1[1] = v2.is_nil;
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100036F80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return _swift_task_switch(sub_100036FA4, 0, 0);
}

uint64_t sub_100036FA4()
{
  uint64_t v1 = *(void *)(v0 + 24);
  *(Swift::UInt8_optional *)(v0 + 48) = sub_1001BF1C0();
  if (v1)
  {
    swift_getObjectType();
    uint64_t v2 = sub_1001C0EA0();
    uint64_t v4 = v3;
  }
  else
  {
    uint64_t v2 = 0;
    uint64_t v4 = 0;
  }
  return _swift_task_switch(sub_10003703C, v2, v4);
}

uint64_t sub_10003703C()
{
  __int16 v1 = *(_WORD *)(v0 + 48);
  uint64_t v2 = *(unsigned char **)(v0 + 16);
  *uint64_t v2 = v1;
  v2[1] = HIBYTE(v1) & 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100037068@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1001BF1D0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)v1;
  unint64_t v9 = *(void *)(v1 + 8);
  switch(v9 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_100007B14(*(void *)v1, *(void *)(v1 + 8));
      break;
    default:
      break;
  }
  sub_1001BF1E0();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(a1, v7, v3);
  return sub_10000792C(v8, v9);
}

uint64_t sub_1000371AC()
{
  return swift_deallocClassInstance();
}

uint64_t _s27FileHandle_UTF8OutputStreamCMa()
{
  return self;
}

uint64_t sub_100037210()
{
  uint64_t v0 = sub_1001C0C30();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001C0C20();
  uint64_t v5 = sub_1001C0C00();
  unint64_t v7 = v6;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  if (v7 >> 60 != 15)
  {
    v9[2] = v5;
    v9[3] = v7;
    sub_100037380();
    sub_1001C11A0();
    return sub_100007918(v5, v7);
  }
  return result;
}

void sub_100037358(uint64_t *a1@<X8>)
{
  sub_100036AC4(v1, a1);
}

uint64_t sub_100037374(uint64_t a1)
{
  return sub_100165DD4(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_100037380()
{
  unint64_t result = qword_1002097A8;
  if (!qword_1002097A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1002097A8);
  }
  return result;
}

uint64_t sub_1000373D4()
{
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100037414()
{
  sub_1000363D8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100037430(uint64_t a1)
{
  return sub_100165DA4(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10003743C(uint64_t a1, uint64_t a2)
{
  uint64_t v26 = a2;
  uint64_t v2 = sub_1001BEFF0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  unint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1001BF0B0();
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  uint64_t v9 = __chkstk_darwin(v7, v8);
  id v23 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v11);
  uint64_t v22 = (uint64_t)&v21 - v12;
  unint64_t v27 = 0xD000000000000011;
  unint64_t v28 = 0x80000001001C37A0;
  uint64_t v13 = enum case for URL.DirectoryHint.inferFromPath(_:);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v14(v6, enum case for URL.DirectoryHint.inferFromPath(_:), v2);
  sub_10001A364();
  sub_1001BF0A0();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v3 + 8);
  v15(v6, v2);
  swift_bridgeObjectRelease();
  unint64_t v27 = 0xD000000000000011;
  unint64_t v28 = 0x80000001001C37A0;
  v14(v6, v13, v2);
  uint64_t v16 = (uint64_t)v23;
  sub_1001BF0A0();
  v15(v6, v2);
  swift_bridgeObjectRelease();
  uint64_t v17 = v22;
  sub_1000EF924(v22, v16);
  id v18 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
  uint64_t v19 = v25;
  v18(v16, v25);
  return ((uint64_t (*)(uint64_t, uint64_t))v18)(v17, v19);
}

uint64_t sub_1000376D4(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_100037710(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100037758()
{
  unint64_t result = qword_1002097E8;
  if (!qword_1002097E8)
  {
    sub_1000166C8(&qword_1002097E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002097E8);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for DataAsyncSequence(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_100007B14(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t destroy for DataAsyncSequence(uint64_t a1)
{
  return sub_10000792C(*(void *)a1, *(void *)(a1 + 8));
}

uint64_t *assignWithCopy for DataAsyncSequence(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_100007B14(*a2, v4);
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_10000792C(v5, v6);
  return a1;
}

uint64_t *assignWithTake for DataAsyncSequence(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_10000792C(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for DataAsyncSequence(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for DataAsyncSequence(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)unint64_t result = a2 - 13;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DataAsyncSequence()
{
  return &type metadata for DataAsyncSequence;
}

uint64_t sub_100037934()
{
  return sub_100037710(qword_1002097F0, 255, (void (*)(uint64_t))type metadata accessor for DataAsyncSequence.DataAsyncIterator);
}

uint64_t type metadata accessor for DataAsyncSequence.DataAsyncIterator(uint64_t a1)
{
  return sub_10001C958(a1, qword_100209860);
}

void *sub_1000379A0()
{
  return &protocol witness table for Never;
}

uint64_t sub_1000379AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BF1D0();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t sub_100037A18(uint64_t a1)
{
  uint64_t v2 = sub_1001BF1D0();
  unsigned int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t sub_100037A7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BF1D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_100037AE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BF1D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_100037B44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BF1D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_100037BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BF1D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_100037C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100037C20);
}

uint64_t sub_100037C20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BF1D0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_100037C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100037CA0);
}

uint64_t sub_100037CA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BF1D0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_100037D10()
{
  uint64_t result = sub_1001BF1D0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t Proto_Ropes_Common_Attestation.ohttpContext.getter()
{
  unint64_t v1 = (unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Ropes_Common_Attestation(0) + 28));
  if (v1[4]) {
    return 0;
  }
  else {
    return *(unsigned int *)v1;
  }
}

uint64_t type metadata accessor for Proto_Ropes_Common_Attestation(uint64_t a1)
{
  return sub_10001C958(a1, (uint64_t *)&unk_100209D48);
}

void sub_100037E08()
{
  static Proto_Ropes_Common_CompressionAlgorithm.allCases = (uint64_t)&off_1001FBAA8;
}

uint64_t *Proto_Ropes_Common_CompressionAlgorithm.allCases.unsafeMutableAddressor()
{
  if (qword_100207780 != -1) {
    swift_once();
  }
  return &static Proto_Ropes_Common_CompressionAlgorithm.allCases;
}

uint64_t static Proto_Ropes_Common_CompressionAlgorithm.allCases.getter()
{
  if (qword_100207780 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

void sub_100037EC4(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

unint64_t sub_100037ED4@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 3;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

uint64_t sub_100037EEC()
{
  return *(void *)v0;
}

uint64_t sub_100037EF4@<X0>(void *a1@<X8>)
{
  if (qword_100207780 != -1) {
    swift_once();
  }
  *a1 = static Proto_Ropes_Common_CompressionAlgorithm.allCases;
  return swift_bridgeObjectRetain();
}

void *sub_100037F60@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2 = *result >= 3uLL;
  *(void *)a2 = *result;
  char v3 = !v2;
  *(unsigned char *)(a2 + 8) = v3;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

void sub_100037F7C(void *a1@<X8>)
{
  *a1 = *v1;
}

Swift::Int sub_100037F88()
{
  return sub_1001C1990();
}

uint64_t sub_100037FF4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10004076C();
  return Enum.hash(into:)(a1, a2, v4);
}

Swift::Int sub_100038040()
{
  return sub_1001C1990();
}

BOOL sub_1000380A8(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t Proto_Ropes_Common_TenantInfo.bundleID.getter()
{
  unint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for Proto_Ropes_Common_TenantInfo(0) + 20));
  if (v1[1]) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t type metadata accessor for Proto_Ropes_Common_TenantInfo(uint64_t a1)
{
  return sub_10001C958(a1, qword_100209A48);
}

uint64_t Proto_Ropes_Common_TenantInfo.bundleID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for Proto_Ropes_Common_TenantInfo(0) + 20));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*Proto_Ropes_Common_TenantInfo.bundleID.modify(uint64_t a1))()
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Ropes_Common_TenantInfo(0) + 20);
  *(_DWORD *)(a1 + 24) = v3;
  unint64_t v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_1000381F4;
}

BOOL Proto_Ropes_Common_TenantInfo.hasBundleID.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for Proto_Ropes_Common_TenantInfo(0) + 20) + 8) != 0;
}

Swift::Void __swiftcall Proto_Ropes_Common_TenantInfo.clearBundleID()()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for Proto_Ropes_Common_TenantInfo(0) + 20));
  swift_bridgeObjectRelease();
  *uint64_t v1 = 0;
  v1[1] = 0;
}

uint64_t Proto_Ropes_Common_TenantInfo.bundleVersion.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for Proto_Ropes_Common_TenantInfo(0) + 24));
  if (v1[1]) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t Proto_Ropes_Common_TenantInfo.bundleVersion.setter(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for Proto_Ropes_Common_TenantInfo(0) + 24));
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*Proto_Ropes_Common_TenantInfo.bundleVersion.modify(uint64_t a1))()
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Ropes_Common_TenantInfo(0) + 24);
  *(_DWORD *)(a1 + 24) = v3;
  unint64_t v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_1000381F4;
}

BOOL Proto_Ropes_Common_TenantInfo.hasBundleVersion.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for Proto_Ropes_Common_TenantInfo(0) + 24) + 8) != 0;
}

Swift::Void __swiftcall Proto_Ropes_Common_TenantInfo.clearBundleVersion()()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for Proto_Ropes_Common_TenantInfo(0) + 24));
  swift_bridgeObjectRelease();
  *uint64_t v1 = 0;
  v1[1] = 0;
}

uint64_t Proto_Ropes_Common_TenantInfo.featureID.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for Proto_Ropes_Common_TenantInfo(0) + 28));
  if (v1[1]) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t Proto_Ropes_Common_TenantInfo.featureID.setter(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for Proto_Ropes_Common_TenantInfo(0) + 28));
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*Proto_Ropes_Common_TenantInfo.featureID.modify(uint64_t a1))()
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Ropes_Common_TenantInfo(0) + 28);
  *(_DWORD *)(a1 + 24) = v3;
  unint64_t v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_1000381F4;
}

BOOL Proto_Ropes_Common_TenantInfo.hasFeatureID.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for Proto_Ropes_Common_TenantInfo(0) + 28) + 8) != 0;
}

Swift::Void __swiftcall Proto_Ropes_Common_TenantInfo.clearFeatureID()()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for Proto_Ropes_Common_TenantInfo(0) + 28));
  swift_bridgeObjectRelease();
  *uint64_t v1 = 0;
  v1[1] = 0;
}

uint64_t Proto_Ropes_Common_TenantInfo.clientInfo.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for Proto_Ropes_Common_TenantInfo(0) + 32));
  if (v1[1]) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t Proto_Ropes_Common_TenantInfo.clientInfo.setter(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for Proto_Ropes_Common_TenantInfo(0) + 32));
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*Proto_Ropes_Common_TenantInfo.clientInfo.modify(uint64_t a1))()
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Ropes_Common_TenantInfo(0) + 32);
  *(_DWORD *)(a1 + 24) = v3;
  unint64_t v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_1000381F4;
}

BOOL Proto_Ropes_Common_TenantInfo.hasClientInfo.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for Proto_Ropes_Common_TenantInfo(0) + 32) + 8) != 0;
}

Swift::Void __swiftcall Proto_Ropes_Common_TenantInfo.clearClientInfo()()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for Proto_Ropes_Common_TenantInfo(0) + 32));
  swift_bridgeObjectRelease();
  *uint64_t v1 = 0;
  v1[1] = 0;
}

uint64_t Proto_Ropes_Common_TenantInfo.automatedDeviceGroup.getter()
{
  return sub_100039760(type metadata accessor for Proto_Ropes_Common_TenantInfo);
}

uint64_t Proto_Ropes_Common_TenantInfo.automatedDeviceGroup.setter(uint64_t a1, uint64_t a2)
{
  return sub_1000397D4(a1, a2, type metadata accessor for Proto_Ropes_Common_TenantInfo);
}

uint64_t (*Proto_Ropes_Common_TenantInfo.automatedDeviceGroup.modify(uint64_t a1))()
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Ropes_Common_TenantInfo(0) + 36);
  *(_DWORD *)(a1 + 24) = v3;
  unint64_t v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_1000381F4;
}

BOOL Proto_Ropes_Common_TenantInfo.hasAutomatedDeviceGroup.getter()
{
  return sub_1000398B4(type metadata accessor for Proto_Ropes_Common_TenantInfo);
}

Swift::Void __swiftcall Proto_Ropes_Common_TenantInfo.clearAutomatedDeviceGroup()()
{
}

uint64_t Proto_PrivateCloudCompute_FinalMessage.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1001BFE60();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t Proto_PrivateCloudCompute_FinalMessage.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = sub_1001BFE60();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

uint64_t (*Proto_Ropes_HttpService_PrefetchUnaryResponse.attestation.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

int *Proto_Ropes_Common_TenantInfo.init()@<X0>(uint64_t a1@<X8>)
{
  _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t result = (int *)type metadata accessor for Proto_Ropes_Common_TenantInfo(0);
  uint64_t v3 = (void *)(a1 + result[5]);
  *uint64_t v3 = 0;
  v3[1] = 0;
  unint64_t v4 = (void *)(a1 + result[6]);
  void *v4 = 0;
  v4[1] = 0;
  unint64_t v5 = (void *)(a1 + result[7]);
  *unint64_t v5 = 0;
  v5[1] = 0;
  uint64_t v6 = (void *)(a1 + result[8]);
  *uint64_t v6 = 0;
  v6[1] = 0;
  unint64_t v7 = (void *)(a1 + result[9]);
  *unint64_t v7 = 0;
  v7[1] = 0;
  return result;
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping.nodeIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping.nodeIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t Proto_Ropes_HttpService_AdminApiResponse.Workload.mandatoryKeys.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Proto_Ropes_HttpService_AdminApiResponse.Workload.mandatoryKeys.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*Proto_Ropes_Common_CompressedAttestationList.compressedBytes.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t Proto_Ropes_Common_Workload.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100038A80(type metadata accessor for Proto_Ropes_Common_Workload, a1);
}

uint64_t type metadata accessor for Proto_Ropes_Common_Workload(uint64_t a1)
{
  return sub_10001C958(a1, qword_100209AE8);
}

uint64_t Proto_Ropes_Common_Workload.unknownFields.setter(uint64_t a1)
{
  return sub_100038B38(a1, type metadata accessor for Proto_Ropes_Common_Workload);
}

uint64_t (*Proto_Ropes_Common_Workload.unknownFields.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t Proto_Ropes_Common_Workload.Parameter.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100038A80(type metadata accessor for Proto_Ropes_Common_Workload.Parameter, a1);
}

uint64_t sub_100038A80@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 24);
  uint64_t v5 = sub_1001BFE60();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t type metadata accessor for Proto_Ropes_Common_Workload.Parameter(uint64_t a1)
{
  return sub_10001C958(a1, qword_100209B80);
}

uint64_t Proto_Ropes_Common_Workload.Parameter.unknownFields.setter(uint64_t a1)
{
  return sub_100038B38(a1, type metadata accessor for Proto_Ropes_Common_Workload.Parameter);
}

uint64_t sub_100038B38(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 24);
  uint64_t v5 = sub_1001BFE60();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*Proto_Ropes_Common_Workload.Parameter.unknownFields.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t Proto_Ropes_Common_Workload.Parameter.init()@<X0>(void *a1@<X8>)
{
  return sub_100038C2C((void (*)(void))type metadata accessor for Proto_Ropes_Common_Workload.Parameter, a1);
}

uint64_t Proto_Ropes_Common_Workload.init()@<X0>(void *a1@<X8>)
{
  return sub_100038C2C((void (*)(void))type metadata accessor for Proto_Ropes_Common_Workload, a1);
}

uint64_t sub_100038C2C@<X0>(void (*a1)(void)@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a2[2] = &_swiftEmptyArrayStorage;
  a1(0);
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t Proto_PrivateCloudCompute_AuthToken.ottSalt.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_100007B14(v1, *(void *)(v0 + 24));
  return v1;
}

uint64_t Proto_PrivateCloudCompute_AuthToken.ottSalt.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_10000792C(*(void *)(v2 + 16), *(void *)(v2 + 24));
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t Proto_Ropes_Common_DecryptionKey.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100038A80(type metadata accessor for Proto_Ropes_Common_DecryptionKey, a1);
}

uint64_t type metadata accessor for Proto_Ropes_Common_DecryptionKey(uint64_t a1)
{
  return sub_10001C958(a1, qword_100209C18);
}

uint64_t Proto_Ropes_Common_DecryptionKey.unknownFields.setter(uint64_t a1)
{
  return sub_100038B38(a1, type metadata accessor for Proto_Ropes_Common_DecryptionKey);
}

uint64_t (*Proto_Ropes_Common_DecryptionKey.unknownFields.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t Proto_Ropes_Common_DecryptionKey.init()@<X0>(_OWORD *a1@<X8>)
{
  *a1 = xmmword_1001CB200;
  a1[1] = xmmword_1001CB200;
  type metadata accessor for Proto_Ropes_Common_DecryptionKey(0);
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t Proto_PrivateCloudCompute_AuthToken.tokenGrantingToken.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_100007B14(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t Proto_PrivateCloudCompute_AuthToken.tokenGrantingToken.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_10000792C(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t Proto_Ropes_Common_Chunk.isFinal.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t Proto_Ropes_Common_Chunk.isFinal.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t Proto_Ropes_Common_Chunk.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100038A80(type metadata accessor for Proto_Ropes_Common_Chunk, a1);
}

uint64_t type metadata accessor for Proto_Ropes_Common_Chunk(uint64_t a1)
{
  return sub_10001C958(a1, qword_100209CB0);
}

uint64_t Proto_Ropes_Common_Chunk.unknownFields.setter(uint64_t a1)
{
  return sub_100038B38(a1, type metadata accessor for Proto_Ropes_Common_Chunk);
}

uint64_t (*Proto_Ropes_Common_Chunk.unknownFields.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t Proto_Ropes_Common_Chunk.init()@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1001CB200;
  *(unsigned char *)(a1 + 16) = 0;
  type metadata accessor for Proto_Ropes_Common_Chunk(0);
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t Proto_Ropes_Common_Attestation.nodeIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Proto_Ropes_Common_Attestation.nodeIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t Proto_Ropes_Common_Attestation.ohttpContext.setter(int a1)
{
  uint64_t result = type metadata accessor for Proto_Ropes_Common_Attestation(0);
  uint64_t v4 = v1 + *(int *)(result + 28);
  *(_DWORD *)uint64_t v4 = a1;
  *(unsigned char *)(v4 + 4) = 0;
  return result;
}

uint64_t (*Proto_Ropes_Common_Attestation.ohttpContext.modify(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Ropes_Common_Attestation(0) + 28);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_100039020;
}

uint64_t sub_100039020(uint64_t result)
{
  uint64_t v1 = *(void *)result + *(int *)(result + 12);
  *(_DWORD *)uint64_t v1 = *(_DWORD *)(result + 8);
  *(unsigned char *)(v1 + 4) = 0;
  return result;
}

BOOL Proto_Ropes_Common_Attestation.hasOhttpContext.getter()
{
  return (*(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Ropes_Common_Attestation(0) + 28) + 4) & 1) == 0;
}

Swift::Void __swiftcall Proto_Ropes_Common_Attestation.clearOhttpContext()()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for Proto_Ropes_Common_Attestation(0) + 28);
  *(_DWORD *)uint64_t v1 = 0;
  *(unsigned char *)(v1 + 4) = 1;
}

uint64_t Proto_Ropes_Common_Attestation.expirationTime.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003918(&qword_100209898);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Proto_Ropes_Common_Attestation(0);
  sub_1000391C0(v1 + *(int *)(v7 + 32), (uint64_t)v6);
  uint64_t v8 = sub_1001BFDF0();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v6, v8);
  }
  sub_1001BFDE0();
  return sub_100010360((uint64_t)v6, &qword_100209898);
}

uint64_t sub_1000391C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100003918(&qword_100209898);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t Proto_Ropes_Common_Attestation.expirationTime.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Proto_Ropes_Common_Attestation(0) + 32);
  sub_100010360(v3, &qword_100209898);
  uint64_t v4 = sub_1001BFDF0();
  uint64_t v7 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v3, a1, v4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);
  return v5(v3, 0, 1, v4);
}

void (*Proto_Ropes_Common_Attestation.expirationTime.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100003918(&qword_100209898);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = sub_1001BFDF0();
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  _OWORD v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Ropes_Common_Attestation(0) + 32);
  *((_DWORD *)v3 + 12) = v11;
  sub_1000391C0(v1 + v11, (uint64_t)v5);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    sub_1001BFDE0();
    sub_100010360((uint64_t)v5, &qword_100209898);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v10, v5, v6);
  }
  return sub_100039484;
}

void sub_100039484(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(int *)(*(void *)a1 + 48);
  uint64_t v4 = *(void **)(*(void *)a1 + 32);
  uint64_t v5 = *(void **)(*(void *)a1 + 40);
  uint64_t v6 = *(void *)(*(void *)a1 + 16);
  uint64_t v7 = *(void *)(*(void *)a1 + 24);
  uint64_t v8 = *(void **)(*(void *)a1 + 8);
  uint64_t v9 = **(void **)a1 + v3;
  if (a2)
  {
    (*(void (**)(void, void *, uint64_t))(v7 + 16))(*(void *)(*(void *)a1 + 32), v5, v6);
    sub_100010360(v9, &qword_100209898);
    (*(void (**)(uint64_t, void *, uint64_t))(v7 + 32))(v9, v4, v6);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
    (*(void (**)(void *, uint64_t))(v7 + 8))(v5, v6);
  }
  else
  {
    sub_100010360(**(void **)a1 + v3, &qword_100209898);
    (*(void (**)(uint64_t, void *, uint64_t))(v7 + 32))(v9, v5, v6);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
  }
  free(v5);
  free(v4);
  free(v8);
  free(v2);
}

BOOL Proto_Ropes_Common_Attestation.hasExpirationTime.getter()
{
  uint64_t v1 = sub_100003918(&qword_100209898);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Proto_Ropes_Common_Attestation(0);
  sub_1000391C0(v0 + *(int *)(v5 + 32), (uint64_t)v4);
  uint64_t v6 = sub_1001BFDF0();
  BOOL v7 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 1, v6) != 1;
  sub_100010360((uint64_t)v4, &qword_100209898);
  return v7;
}

Swift::Void __swiftcall Proto_Ropes_Common_Attestation.clearExpirationTime()()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for Proto_Ropes_Common_Attestation(0) + 32);
  sub_100010360(v1, &qword_100209898);
  uint64_t v2 = sub_1001BFDF0();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
}

uint64_t Proto_Ropes_Common_Attestation.cloudosVersion.getter()
{
  return sub_100039760(type metadata accessor for Proto_Ropes_Common_Attestation);
}

uint64_t sub_100039760(uint64_t (*a1)(void))
{
  uint64_t v2 = (uint64_t *)(v1 + *(int *)(a1(0) + 36));
  if (v2[1]) {
    uint64_t v3 = *v2;
  }
  else {
    uint64_t v3 = 0;
  }
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t Proto_Ropes_Common_Attestation.cloudosVersion.setter(uint64_t a1, uint64_t a2)
{
  return sub_1000397D4(a1, a2, type metadata accessor for Proto_Ropes_Common_Attestation);
}

uint64_t sub_1000397D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = (void *)(v3 + *(int *)(a3(0) + 36));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*Proto_Ropes_Common_Attestation.cloudosVersion.modify(uint64_t a1))()
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Ropes_Common_Attestation(0) + 36);
  *(_DWORD *)(a1 + 24) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_1000381F4;
}

BOOL Proto_Ropes_Common_Attestation.hasCloudosVersion.getter()
{
  return sub_1000398B4(type metadata accessor for Proto_Ropes_Common_Attestation);
}

BOOL sub_1000398B4(uint64_t (*a1)(void))
{
  return *(void *)(v1 + *(int *)(a1(0) + 36) + 8) != 0;
}

Swift::Void __swiftcall Proto_Ropes_Common_Attestation.clearCloudosVersion()()
{
}

uint64_t sub_100039904(uint64_t (*a1)(void))
{
  uint64_t v2 = (void *)(v1 + *(int *)(a1(0) + 36));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = 0;
  v2[1] = 0;
  return result;
}

uint64_t Proto_Ropes_Common_Attestation.cloudosReleaseType.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for Proto_Ropes_Common_Attestation(0) + 40));
  if (v1[1]) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t Proto_Ropes_Common_Attestation.cloudosReleaseType.setter(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for Proto_Ropes_Common_Attestation(0) + 40));
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*Proto_Ropes_Common_Attestation.cloudosReleaseType.modify(uint64_t a1))()
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Ropes_Common_Attestation(0) + 40);
  *(_DWORD *)(a1 + 24) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_1000381F4;
}

BOOL Proto_Ropes_Common_Attestation.hasCloudosReleaseType.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for Proto_Ropes_Common_Attestation(0) + 40) + 8) != 0;
}

Swift::Void __swiftcall Proto_Ropes_Common_Attestation.clearCloudosReleaseType()()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for Proto_Ropes_Common_Attestation(0) + 40));
  swift_bridgeObjectRelease();
  *uint64_t v1 = 0;
  v1[1] = 0;
}

uint64_t Proto_Ropes_Common_Attestation.cellID.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for Proto_Ropes_Common_Attestation(0) + 44));
  if (v1[1]) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t Proto_Ropes_Common_Attestation.cellID.setter(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for Proto_Ropes_Common_Attestation(0) + 44));
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*Proto_Ropes_Common_Attestation.cellID.modify(uint64_t a1))()
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Ropes_Common_Attestation(0) + 44);
  *(_DWORD *)(a1 + 24) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_1000381F4;
}

BOOL Proto_Ropes_Common_Attestation.hasCellID.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for Proto_Ropes_Common_Attestation(0) + 44) + 8) != 0;
}

Swift::Void __swiftcall Proto_Ropes_Common_Attestation.clearCellID()()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for Proto_Ropes_Common_Attestation(0) + 44));
  swift_bridgeObjectRelease();
  *uint64_t v1 = 0;
  v1[1] = 0;
}

uint64_t Proto_Ropes_Common_Attestation.ensembleID.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for Proto_Ropes_Common_Attestation(0) + 48));
  if (v1[1]) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t Proto_Ropes_Common_Attestation.ensembleID.setter(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for Proto_Ropes_Common_Attestation(0) + 48));
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*Proto_Ropes_Common_Attestation.ensembleID.modify(uint64_t a1))()
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Ropes_Common_Attestation(0) + 48);
  *(_DWORD *)(a1 + 24) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_1000381F4;
}

uint64_t sub_100039D5C(uint64_t *a1, char a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = (void *)(a1[2] + *((int *)a1 + 6));
  uint64_t v4 = *a1;
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *uint64_t v3 = v4;
    v3[1] = v2;
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v3 = v4;
    v3[1] = v2;
  }
  return result;
}

BOOL Proto_Ropes_Common_Attestation.hasEnsembleID.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for Proto_Ropes_Common_Attestation(0) + 48) + 8) != 0;
}

Swift::Void __swiftcall Proto_Ropes_Common_Attestation.clearEnsembleID()()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for Proto_Ropes_Common_Attestation(0) + 48));
  swift_bridgeObjectRelease();
  *uint64_t v1 = 0;
  v1[1] = 0;
}

uint64_t Proto_Ropes_Common_Attestation.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100038A80(type metadata accessor for Proto_Ropes_Common_Attestation, a1);
}

uint64_t Proto_Ropes_Common_Attestation.unknownFields.setter(uint64_t a1)
{
  return sub_100038B38(a1, type metadata accessor for Proto_Ropes_Common_Attestation);
}

uint64_t (*Proto_Ropes_Common_Attestation.unknownFields.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t Proto_Ropes_Common_Attestation.init()@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1001CB200;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0xE000000000000000;
  uint64_t v2 = (int *)type metadata accessor for Proto_Ropes_Common_Attestation(0);
  _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v3 = a1 + v2[7];
  *(_DWORD *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 4) = 1;
  uint64_t v4 = a1 + v2[8];
  uint64_t v5 = sub_1001BFDF0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  unint64_t v7 = (void *)(a1 + v2[9]);
  *unint64_t v7 = 0;
  v7[1] = 0;
  uint64_t v8 = (void *)(a1 + v2[10]);
  void *v8 = 0;
  v8[1] = 0;
  uint64_t v9 = (void *)(a1 + v2[11]);
  *uint64_t v9 = 0;
  v9[1] = 0;
  uint64_t v10 = (void *)(a1 + v2[12]);
  *uint64_t v10 = 0;
  v10[1] = 0;
  return result;
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList.nodeIdentifier.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList.nodeIdentifier.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList.shouldClearCache.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList.shouldClearCache.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 8) = result;
  return result;
}

uint64_t (*Proto_Ropes_HttpService_AdminApiResponse.publicApiEndpoints.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t Proto_Ropes_Common_Capabilities.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100038A80(type metadata accessor for Proto_Ropes_Common_Capabilities, a1);
}

uint64_t type metadata accessor for Proto_Ropes_Common_Capabilities(uint64_t a1)
{
  return sub_10001C958(a1, qword_100209E00);
}

uint64_t Proto_Ropes_Common_Capabilities.unknownFields.setter(uint64_t a1)
{
  return sub_100038B38(a1, type metadata accessor for Proto_Ropes_Common_Capabilities);
}

uint64_t (*Proto_Ropes_Common_Capabilities.unknownFields.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t Proto_Ropes_Common_Capabilities.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = &_swiftEmptyArrayStorage;
  *(unsigned char *)(a1 + 8) = 0;
  type metadata accessor for Proto_Ropes_Common_Capabilities(0);
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t Proto_Ropes_Common_AttestationList.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Proto_Ropes_Common_AttestationList(0) + 20);
  uint64_t v4 = sub_1001BFE60();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for Proto_Ropes_Common_AttestationList(uint64_t a1)
{
  return sub_10001C958(a1, qword_100209E98);
}

uint64_t Proto_Ropes_Common_AttestationList.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Proto_Ropes_Common_AttestationList(0) + 20);
  uint64_t v4 = sub_1001BFE60();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*Proto_Ropes_Common_AttestationList.unknownFields.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t Proto_Ropes_Common_AttestationList.init()@<X0>(void *a1@<X8>)
{
  *a1 = &_swiftEmptyArrayStorage;
  type metadata accessor for Proto_Ropes_Common_AttestationList(0);
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t Proto_Ropes_Common_CompressedAttestationList.compressionAlgorithm.getter()
{
  return *(void *)v0;
}

uint64_t Proto_Ropes_Common_CompressedAttestationList.compressionAlgorithm.setter(uint64_t result, char a2)
{
  *(void *)uint64_t v2 = result;
  *(unsigned char *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t Proto_Ropes_Common_CompressedAttestationList.uncompressedLengthHint.getter()
{
  return *(unsigned int *)(v0 + 32);
}

uint64_t Proto_Ropes_Common_CompressedAttestationList.uncompressedLengthHint.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 32) = result;
  return result;
}

uint64_t (*Proto_Ropes_Common_CompressedAttestationList.uncompressedLengthHint.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t Proto_Ropes_Common_CompressedAttestationList.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0) + 28);
  uint64_t v4 = sub_1001BFE60();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(uint64_t a1)
{
  return sub_10001C958(a1, qword_100209F28);
}

uint64_t Proto_Ropes_Common_CompressedAttestationList.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0) + 28);
  uint64_t v4 = sub_1001BFE60();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*Proto_Ropes_Common_CompressedAttestationList.unknownFields.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t Proto_Ropes_Common_CompressedAttestationList.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  *(_OWORD *)(a1 + 16) = xmmword_1001CB200;
  *(_DWORD *)(a1 + 32) = 0;
  type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0);
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t sub_10003A468()
{
  uint64_t v0 = sub_1001C0160();
  sub_100044F74(v0, static Proto_Ropes_Common_CompressionAlgorithm._protobuf_nameMap);
  sub_10000D978(v0, (uint64_t)static Proto_Ropes_Common_CompressionAlgorithm._protobuf_nameMap);
  sub_100003918(&qword_100209FB8);
  uint64_t v1 = (int *)(sub_100003918(&qword_100209FC0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001CD7D0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 0;
  *(void *)unint64_t v6 = "NONE";
  *(void *)(v6 + 8) = 4;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_1001C0130();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 1;
  *(void *)uint64_t v10 = "BROTLI";
  *((void *)v10 + 1) = 6;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 2;
  *(void *)uint64_t v11 = "ZSTD";
  *(void *)(v11 + 8) = 4;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_1001C0140();
}

uint64_t Proto_Ropes_Common_CompressionAlgorithm._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_100207788, (uint64_t)static Proto_Ropes_Common_CompressionAlgorithm._protobuf_nameMap);
}

uint64_t static Proto_Ropes_Common_CompressionAlgorithm._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_100207788, (uint64_t)static Proto_Ropes_Common_CompressionAlgorithm._protobuf_nameMap, a1);
}

uint64_t sub_10003A6B0@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_100207788, (uint64_t)static Proto_Ropes_Common_CompressionAlgorithm._protobuf_nameMap, a1);
}

void *Proto_Ropes_Common_TenantInfo.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Ropes_Common_TenantInfo.protoMessageName;
}

unint64_t static Proto_Ropes_Common_TenantInfo.protoMessageName.getter()
{
  return 0xD000000000000024;
}

uint64_t sub_10003A6FC()
{
  uint64_t v0 = sub_1001C0160();
  sub_100044F74(v0, static Proto_Ropes_Common_TenantInfo._protobuf_nameMap);
  sub_10000D978(v0, (uint64_t)static Proto_Ropes_Common_TenantInfo._protobuf_nameMap);
  sub_100003918(&qword_100209FB8);
  uint64_t v1 = (int *)(sub_100003918(&qword_100209FC0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001CD7E0;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "bundle_id";
  *(void *)(v6 + 8) = 9;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v8 = sub_1001C0130();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "bundle_version";
  *(void *)(v10 + 8) = 14;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "feature_id";
  *((void *)v12 + 1) = 10;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "client_info";
  *((void *)v14 + 1) = 11;
  v14[16] = 2;
  v9();
  uint64_t v15 = v5 + 4 * v2 + v1[14];
  *(void *)(v5 + 4 * v2) = 5;
  *(void *)uint64_t v15 = "automated_device_group";
  *(void *)(v15 + 8) = 22;
  *(unsigned char *)(v15 + 16) = 2;
  v9();
  return sub_1001C0140();
}

uint64_t Proto_Ropes_Common_TenantInfo._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_100207790, (uint64_t)static Proto_Ropes_Common_TenantInfo._protobuf_nameMap);
}

uint64_t static Proto_Ropes_Common_TenantInfo._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_100207790, (uint64_t)static Proto_Ropes_Common_TenantInfo._protobuf_nameMap, a1);
}

uint64_t Proto_Ropes_Common_TenantInfo.decodeMessage<A>(decoder:)()
{
  while (1)
  {
    uint64_t result = sub_1001BFF00();
    if (v0 || (v2 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
        type metadata accessor for Proto_Ropes_Common_TenantInfo(0);
        sub_1001BFF90();
        break;
      default:
        continue;
    }
  }
}

uint64_t Proto_Ropes_Common_TenantInfo.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_10003ABA4(v3);
  if (!v4)
  {
    sub_10003AC1C(v3);
    sub_10003AC94(v3);
    sub_10003AD0C(v3);
    sub_10003D4B8(v3, a1, a2, a3, type metadata accessor for Proto_Ropes_Common_TenantInfo);
    return sub_1001BFE40();
  }
  return result;
}

uint64_t sub_10003ABA4(uint64_t a1)
{
  uint64_t result = type metadata accessor for Proto_Ropes_Common_TenantInfo(0);
  if (*(void *)(a1 + *(int *)(result + 20) + 8)) {
    return sub_1001C00F0();
  }
  return result;
}

uint64_t sub_10003AC1C(uint64_t a1)
{
  uint64_t result = type metadata accessor for Proto_Ropes_Common_TenantInfo(0);
  if (*(void *)(a1 + *(int *)(result + 24) + 8)) {
    return sub_1001C00F0();
  }
  return result;
}

uint64_t sub_10003AC94(uint64_t a1)
{
  uint64_t result = type metadata accessor for Proto_Ropes_Common_TenantInfo(0);
  if (*(void *)(a1 + *(int *)(result + 28) + 8)) {
    return sub_1001C00F0();
  }
  return result;
}

uint64_t sub_10003AD0C(uint64_t a1)
{
  uint64_t result = type metadata accessor for Proto_Ropes_Common_TenantInfo(0);
  if (*(void *)(a1 + *(int *)(result + 32) + 8)) {
    return sub_1001C00F0();
  }
  return result;
}

Swift::Int Proto_Ropes_Common_TenantInfo.hashValue.getter()
{
  return sub_10003ED5C((void (*)(void))type metadata accessor for Proto_Ropes_Common_TenantInfo, &qword_1002098A0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_TenantInfo);
}

uint64_t sub_10003ADD0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v5 = a1[6];
  unint64_t v6 = (void *)(a2 + a1[5]);
  *unint64_t v6 = 0;
  v6[1] = 0;
  uint64_t v7 = (void *)(a2 + v5);
  *uint64_t v7 = 0;
  v7[1] = 0;
  uint64_t v8 = a1[8];
  uint64_t v9 = (void *)(a2 + a1[7]);
  *uint64_t v9 = 0;
  v9[1] = 0;
  unint64_t v10 = (void *)(a2 + v8);
  *unint64_t v10 = 0;
  v10[1] = 0;
  uint64_t v11 = (void *)(a2 + a1[9]);
  *uint64_t v11 = 0;
  v11[1] = 0;
  return result;
}

uint64_t sub_10003AE30()
{
  return Proto_Ropes_Common_TenantInfo.decodeMessage<A>(decoder:)();
}

uint64_t sub_10003AE48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Ropes_Common_TenantInfo.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_10003AE64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100040368(&qword_100209FA8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_TenantInfo);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10003AEE4@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_100207790, (uint64_t)static Proto_Ropes_Common_TenantInfo._protobuf_nameMap, a1);
}

uint64_t sub_10003AF08(uint64_t a1)
{
  uint64_t v2 = sub_100040368(&qword_100209930, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_TenantInfo);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10003AF78()
{
  sub_100040368(&qword_100209930, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_TenantInfo);
  return sub_1001C0050();
}

void *Proto_Ropes_Common_Workload.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Ropes_Common_Workload.protoMessageName;
}

unint64_t static Proto_Ropes_Common_Workload.protoMessageName.getter()
{
  return 0xD000000000000022;
}

uint64_t sub_10003B020()
{
  uint64_t v0 = sub_1001C0160();
  sub_100044F74(v0, static Proto_Ropes_Common_Workload._protobuf_nameMap);
  sub_10000D978(v0, (uint64_t)static Proto_Ropes_Common_Workload._protobuf_nameMap);
  sub_100003918(&qword_100209FB8);
  uint64_t v1 = (int *)(sub_100003918(&qword_100209FC0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001CD7F0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "type";
  *(void *)(v6 + 8) = 4;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_1001C0130();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 3;
  *(void *)unint64_t v10 = "param";
  *((void *)v10 + 1) = 5;
  v10[16] = 2;
  v9();
  return sub_1001C0140();
}

uint64_t Proto_Ropes_Common_Workload._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_100207798, (uint64_t)static Proto_Ropes_Common_Workload._protobuf_nameMap);
}

uint64_t static Proto_Ropes_Common_Workload._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_100207798, (uint64_t)static Proto_Ropes_Common_Workload._protobuf_nameMap, a1);
}

uint64_t Proto_Ropes_Common_Workload.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_1001BFF00();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 3)
      {
        type metadata accessor for Proto_Ropes_Common_Workload.Parameter(0);
        sub_100040368(&qword_1002098A8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Workload.Parameter);
        sub_1001BFFD0();
      }
      else if (result == 1)
      {
        sub_1001BFFA0();
      }
      uint64_t result = sub_1001BFF00();
    }
  }
  return result;
}

uint64_t Proto_Ropes_Common_Workload.traverse<A>(visitor:)()
{
  unint64_t v2 = v0[1];
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = *v0 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3 || (uint64_t result = sub_1001C00F0(), !v1))
  {
    if (!*(void *)(v0[2] + 16)
      || (type metadata accessor for Proto_Ropes_Common_Workload.Parameter(0),
          sub_100040368(&qword_1002098A8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Workload.Parameter), uint64_t result = sub_1001C0110(), !v1))
    {
      type metadata accessor for Proto_Ropes_Common_Workload(0);
      return sub_1001BFE40();
    }
  }
  return result;
}

uint64_t static Proto_Ropes_Common_Workload.== infix(_:_:)(char *a1, char *a2)
{
  return sub_1000403B0(a1, a2, sub_100169874, type metadata accessor for Proto_Ropes_Common_Workload) & 1;
}

Swift::Int Proto_Ropes_Common_Workload.hashValue.getter()
{
  return sub_10003ED5C((void (*)(void))type metadata accessor for Proto_Ropes_Common_Workload, &qword_1002098B0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Workload);
}

uint64_t (*sub_10003B4FC())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t sub_10003B520()
{
  return Proto_Ropes_Common_Workload.decodeMessage<A>(decoder:)();
}

uint64_t sub_10003B538()
{
  return Proto_Ropes_Common_Workload.traverse<A>(visitor:)();
}

uint64_t sub_10003B550(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100040368(&qword_100209FA0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Workload);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10003B5CC@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_100207798, (uint64_t)static Proto_Ropes_Common_Workload._protobuf_nameMap, a1);
}

uint64_t sub_10003B5F0(uint64_t a1)
{
  uint64_t v2 = sub_100040368(&qword_100209948, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Workload);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10003B65C()
{
  sub_100040368(&qword_100209948, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Workload);
  return sub_1001C0050();
}

void sub_10003B6D8()
{
  v0._countAndFlagsBits = 0x74656D617261502ELL;
  v0._object = (void *)0xEA00000000007265;
  sub_1001C0D00(v0);
  static Proto_Ropes_Common_Workload.Parameter.protoMessageName = 0xD000000000000022;
  unk_10021F980 = 0x80000001001C3840;
}

uint64_t *Proto_Ropes_Common_Workload.Parameter.protoMessageName.unsafeMutableAddressor()
{
  if (qword_1002077A0 != -1) {
    swift_once();
  }
  return &static Proto_Ropes_Common_Workload.Parameter.protoMessageName;
}

uint64_t static Proto_Ropes_Common_Workload.Parameter.protoMessageName.getter()
{
  if (qword_1002077A0 != -1) {
    swift_once();
  }
  uint64_t v0 = static Proto_Ropes_Common_Workload.Parameter.protoMessageName;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_10003B7FC()
{
  uint64_t v0 = sub_1001C0160();
  sub_100044F74(v0, static Proto_Ropes_Common_Workload.Parameter._protobuf_nameMap);
  sub_10000D978(v0, (uint64_t)static Proto_Ropes_Common_Workload.Parameter._protobuf_nameMap);
  sub_100003918(&qword_100209FB8);
  uint64_t v1 = (int *)(sub_100003918(&qword_100209FC0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001CD7F0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "key";
  *(void *)(v6 + 8) = 3;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_1001C0130();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)unint64_t v10 = "value";
  *((void *)v10 + 1) = 5;
  v10[16] = 2;
  v9();
  return sub_1001C0140();
}

uint64_t Proto_Ropes_Common_Workload.Parameter._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_1002077A8, (uint64_t)static Proto_Ropes_Common_Workload.Parameter._protobuf_nameMap);
}

uint64_t static Proto_Ropes_Common_Workload.Parameter._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_1002077A8, (uint64_t)static Proto_Ropes_Common_Workload.Parameter._protobuf_nameMap, a1);
}

uint64_t Proto_Ropes_Common_Workload.Parameter.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_1001BFF00();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_1001BFF70();
      }
      else if (result == 1)
      {
        sub_1001BFFA0();
      }
      uint64_t result = sub_1001BFF00();
    }
  }
  return result;
}

uint64_t Proto_Ropes_Common_Workload.Parameter.traverse<A>(visitor:)()
{
  unint64_t v2 = v0[1];
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = *v0 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3 || (uint64_t result = sub_1001C00F0(), !v1))
  {
    if (!*(void *)(v0[2] + 16) || (uint64_t result = sub_1001C00D0(), !v1))
    {
      type metadata accessor for Proto_Ropes_Common_Workload.Parameter(0);
      return sub_1001BFE40();
    }
  }
  return result;
}

uint64_t static Proto_Ropes_Common_Workload.Parameter.== infix(_:_:)(char *a1, char *a2)
{
  return sub_1000403B0(a1, a2, (uint64_t (*)(void, void))sub_1001694D0, type metadata accessor for Proto_Ropes_Common_Workload.Parameter) & 1;
}

Swift::Int Proto_Ropes_Common_Workload.Parameter.hashValue.getter()
{
  return sub_10003ED5C((void (*)(void))type metadata accessor for Proto_Ropes_Common_Workload.Parameter, &qword_1002098B8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Workload.Parameter);
}

uint64_t sub_10003BBFC@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = &_swiftEmptyArrayStorage;
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t sub_10003BC30()
{
  return Proto_Ropes_Common_Workload.Parameter.decodeMessage<A>(decoder:)();
}

uint64_t sub_10003BC48()
{
  return Proto_Ropes_Common_Workload.Parameter.traverse<A>(visitor:)();
}

uint64_t sub_10003BC60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100040368(&qword_100209F98, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Workload.Parameter);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10003BCDC@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_1002077A8, (uint64_t)static Proto_Ropes_Common_Workload.Parameter._protobuf_nameMap, a1);
}

uint64_t sub_10003BD00(uint64_t a1)
{
  uint64_t v2 = sub_100040368(&qword_1002098A8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Workload.Parameter);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10003BD6C()
{
  sub_100040368(&qword_1002098A8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Workload.Parameter);
  return sub_1001C0050();
}

void *Proto_Ropes_Common_DecryptionKey.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Ropes_Common_DecryptionKey.protoMessageName;
}

unint64_t static Proto_Ropes_Common_DecryptionKey.protoMessageName.getter()
{
  return 0xD000000000000027;
}

uint64_t sub_10003BE10()
{
  uint64_t v0 = sub_1001C0160();
  sub_100044F74(v0, static Proto_Ropes_Common_DecryptionKey._protobuf_nameMap);
  sub_10000D978(v0, (uint64_t)static Proto_Ropes_Common_DecryptionKey._protobuf_nameMap);
  sub_100003918(&qword_100209FB8);
  uint64_t v1 = (int *)(sub_100003918(&qword_100209FC0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001CD7F0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "encrypted_payload";
  *(void *)(v6 + 8) = 17;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v8 = sub_1001C0130();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 3;
  *(void *)unint64_t v10 = "key_id";
  *((void *)v10 + 1) = 6;
  v10[16] = 2;
  v9();
  return sub_1001C0140();
}

uint64_t Proto_Ropes_Common_DecryptionKey._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_1002077B0, (uint64_t)static Proto_Ropes_Common_DecryptionKey._protobuf_nameMap);
}

uint64_t static Proto_Ropes_Common_DecryptionKey._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_1002077B0, (uint64_t)static Proto_Ropes_Common_DecryptionKey._protobuf_nameMap, a1);
}

uint64_t Proto_Ropes_Common_DecryptionKey.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_1001BFF00();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 3 || result == 1) {
        sub_1001BFF60();
      }
      uint64_t result = sub_1001BFF00();
    }
  }
  return result;
}

uint64_t Proto_Ropes_Common_DecryptionKey.traverse<A>(visitor:)()
{
  uint64_t v2 = *v0;
  unint64_t v3 = v0[1];
  switch(v3 >> 62)
  {
    case 1uLL:
      if ((int)v2 != v2 >> 32) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 2uLL:
      if (*(void *)(v2 + 16) != *(void *)(v2 + 24)) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 3uLL:
      goto LABEL_8;
    default:
      if ((v3 & 0xFF000000000000) == 0) {
        goto LABEL_8;
      }
LABEL_7:
      uint64_t result = sub_1001C00C0();
      if (!v1)
      {
LABEL_8:
        uint64_t v5 = v0[2];
        unint64_t v6 = v0[3];
        switch(v6 >> 62)
        {
          case 1uLL:
            if ((int)v5 != v5 >> 32) {
              goto LABEL_14;
            }
            goto LABEL_15;
          case 2uLL:
            if (*(void *)(v5 + 16) != *(void *)(v5 + 24)) {
              goto LABEL_14;
            }
            goto LABEL_15;
          case 3uLL:
            goto LABEL_15;
          default:
            if ((v6 & 0xFF000000000000) == 0) {
              goto LABEL_15;
            }
LABEL_14:
            uint64_t result = sub_1001C00C0();
            if (!v1)
            {
LABEL_15:
              type metadata accessor for Proto_Ropes_Common_DecryptionKey(0);
              uint64_t result = sub_1001BFE40();
            }
            break;
        }
      }
      return result;
  }
}

Swift::Int Proto_Ropes_Common_DecryptionKey.hashValue.getter()
{
  return sub_10003ED5C((void (*)(void))type metadata accessor for Proto_Ropes_Common_DecryptionKey, &qword_1002098C0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_DecryptionKey);
}

uint64_t sub_10003C268@<X0>(_OWORD *a1@<X8>)
{
  *a1 = xmmword_1001CB200;
  a1[1] = xmmword_1001CB200;
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t sub_10003C294()
{
  return Proto_Ropes_Common_DecryptionKey.decodeMessage<A>(decoder:)();
}

uint64_t sub_10003C2AC()
{
  return Proto_Ropes_Common_DecryptionKey.traverse<A>(visitor:)();
}

uint64_t sub_10003C2C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100040368(&qword_100209F90, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_DecryptionKey);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10003C340@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_1002077B0, (uint64_t)static Proto_Ropes_Common_DecryptionKey._protobuf_nameMap, a1);
}

uint64_t sub_10003C364(uint64_t a1)
{
  uint64_t v2 = sub_100040368(&qword_100209970, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_DecryptionKey);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10003C3D0()
{
  sub_100040368(&qword_100209970, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_DecryptionKey);
  return sub_1001C0050();
}

void *Proto_Ropes_Common_Chunk.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Ropes_Common_Chunk.protoMessageName;
}

unint64_t static Proto_Ropes_Common_Chunk.protoMessageName.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_10003C474()
{
  uint64_t v0 = sub_1001C0160();
  sub_100044F74(v0, static Proto_Ropes_Common_Chunk._protobuf_nameMap);
  sub_10000D978(v0, (uint64_t)static Proto_Ropes_Common_Chunk._protobuf_nameMap);
  sub_100003918(&qword_100209FB8);
  uint64_t v1 = (int *)(sub_100003918(&qword_100209FC0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001CD7F0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "encrypted_payload";
  *(void *)(v6 + 8) = 17;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v8 = sub_1001C0130();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)unint64_t v10 = "is_final";
  *((void *)v10 + 1) = 8;
  v10[16] = 2;
  v9();
  return sub_1001C0140();
}

uint64_t Proto_Ropes_Common_Chunk._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_1002077B8, (uint64_t)static Proto_Ropes_Common_Chunk._protobuf_nameMap);
}

uint64_t static Proto_Ropes_Common_Chunk._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_1002077B8, (uint64_t)static Proto_Ropes_Common_Chunk._protobuf_nameMap, a1);
}

uint64_t Proto_Ropes_Common_Chunk.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_1001BFF00();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_1001BFF30();
      }
      else if (result == 1)
      {
        sub_1001BFF60();
      }
      uint64_t result = sub_1001BFF00();
    }
  }
  return result;
}

uint64_t Proto_Ropes_Common_Chunk.traverse<A>(visitor:)()
{
  uint64_t v2 = *(void *)v0;
  unint64_t v3 = *(void *)(v0 + 8);
  switch(v3 >> 62)
  {
    case 1uLL:
      if ((int)v2 != v2 >> 32) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 2uLL:
      if (*(void *)(v2 + 16) != *(void *)(v2 + 24)) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 3uLL:
      goto LABEL_8;
    default:
      if ((v3 & 0xFF000000000000) == 0) {
        goto LABEL_8;
      }
LABEL_7:
      uint64_t result = sub_1001C00C0();
      if (!v1)
      {
LABEL_8:
        if (*(unsigned char *)(v0 + 16) != 1 || (uint64_t result = sub_1001C00A0(), !v1))
        {
          type metadata accessor for Proto_Ropes_Common_Chunk(0);
          return sub_1001BFE40();
        }
      }
      return result;
  }
}

Swift::Int Proto_Ropes_Common_Chunk.hashValue.getter()
{
  return sub_10003ED5C((void (*)(void))type metadata accessor for Proto_Ropes_Common_Chunk, &qword_1002098C8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Chunk);
}

uint64_t sub_10003C884@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1001CB200;
  *(unsigned char *)(a1 + 16) = 0;
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t sub_10003C8B4()
{
  return Proto_Ropes_Common_Chunk.decodeMessage<A>(decoder:)();
}

uint64_t sub_10003C8CC()
{
  return Proto_Ropes_Common_Chunk.traverse<A>(visitor:)();
}

uint64_t sub_10003C8E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100040368(&qword_100209F88, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Chunk);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10003C960@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_1002077B8, (uint64_t)static Proto_Ropes_Common_Chunk._protobuf_nameMap, a1);
}

uint64_t sub_10003C984(uint64_t a1)
{
  uint64_t v2 = sub_100040368(&qword_100209988, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Chunk);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10003C9F0()
{
  sub_100040368(&qword_100209988, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Chunk);
  return sub_1001C0050();
}

void *Proto_Ropes_Common_Attestation.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Ropes_Common_Attestation.protoMessageName;
}

unint64_t static Proto_Ropes_Common_Attestation.protoMessageName.getter()
{
  return 0xD000000000000025;
}

uint64_t sub_10003CA94()
{
  uint64_t v0 = sub_1001C0160();
  sub_100044F74(v0, static Proto_Ropes_Common_Attestation._protobuf_nameMap);
  sub_10000D978(v0, (uint64_t)static Proto_Ropes_Common_Attestation._protobuf_nameMap);
  sub_100003918(&qword_100209FB8);
  uint64_t v1 = (int *)(sub_100003918(&qword_100209FC0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1001CD800;
  unint64_t v4 = v23 + v3;
  unint64_t v5 = v23 + v3 + v1[14];
  *(void *)(v23 + v3) = 1;
  *(void *)unint64_t v5 = "attestation_bundle";
  *(void *)(v5 + 8) = 18;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v7 = sub_1001C0130();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v4 + v2 + v1[14];
  *(void *)(v4 + v2) = 2;
  *(void *)unint64_t v9 = "node_identifier";
  *(void *)(v9 + 8) = 15;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  unint64_t v10 = (void *)(v4 + 2 * v2);
  uint64_t v11 = (char *)v10 + v1[14];
  *unint64_t v10 = 3;
  *(void *)uint64_t v11 = "ohttp_context";
  *((void *)v11 + 1) = 13;
  unsigned char v11[16] = 2;
  v8();
  uint64_t v12 = (void *)(v4 + 3 * v2);
  uint64_t v13 = (char *)v12 + v1[14];
  void *v12 = 4;
  *(void *)uint64_t v13 = "expiration_time";
  *((void *)v13 + 1) = 15;
  unsigned char v13[16] = 2;
  v8();
  uint64_t v14 = (void *)(v4 + 4 * v2);
  uint64_t v15 = (char *)v14 + v1[14];
  *uint64_t v14 = 5;
  *(void *)uint64_t v15 = "cloudos_version";
  *((void *)v15 + 1) = 15;
  v15[16] = 2;
  v8();
  uint64_t v16 = (void *)(v4 + 5 * v2);
  uint64_t v17 = (char *)v16 + v1[14];
  *uint64_t v16 = 6;
  *(void *)uint64_t v17 = "cloudos_release_type";
  *((void *)v17 + 1) = 20;
  v17[16] = 2;
  v8();
  id v18 = (void *)(v4 + 6 * v2);
  uint64_t v19 = (char *)v18 + v1[14];
  *id v18 = 7;
  *(void *)uint64_t v19 = "cell_id";
  *((void *)v19 + 1) = 7;
  char v19[16] = 2;
  v8();
  id v20 = (void *)(v4 + 7 * v2);
  uint64_t v21 = (char *)v20 + v1[14];
  *id v20 = 8;
  *(void *)uint64_t v21 = "ensemble_id";
  *((void *)v21 + 1) = 11;
  v21[16] = 2;
  v8();
  return sub_1001C0140();
}

uint64_t Proto_Ropes_Common_Attestation._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_1002077C0, (uint64_t)static Proto_Ropes_Common_Attestation._protobuf_nameMap);
}

uint64_t static Proto_Ropes_Common_Attestation._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_1002077C0, (uint64_t)static Proto_Ropes_Common_Attestation._protobuf_nameMap, a1);
}

uint64_t Proto_Ropes_Common_Attestation.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_1001BFF00();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          uint64_t v4 = v3;
          sub_1001BFF60();
          goto LABEL_10;
        case 2:
          uint64_t v4 = v3;
          sub_1001BFFA0();
          goto LABEL_10;
        case 3:
          type metadata accessor for Proto_Ropes_Common_Attestation(0);
          uint64_t v4 = v3;
          sub_1001BFFB0();
          goto LABEL_10;
        case 4:
          uint64_t v4 = v3;
          sub_10003CF98();
          goto LABEL_10;
        case 5:
        case 6:
        case 7:
        case 8:
          type metadata accessor for Proto_Ropes_Common_Attestation(0);
          uint64_t v4 = v3;
          sub_1001BFF90();
LABEL_10:
          uint64_t v3 = v4;
          break;
        default:
          break;
      }
      uint64_t result = sub_1001BFF00();
    }
  }
  return result;
}

uint64_t sub_10003CF98()
{
  return sub_1001BFFE0();
}

uint64_t Proto_Ropes_Common_Attestation.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  unint64_t v8 = v3[1];
  switch(v8 >> 62)
  {
    case 1uLL:
      if ((int)v7 != v7 >> 32) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 2uLL:
      if (*(void *)(v7 + 16) != *(void *)(v7 + 24)) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 3uLL:
      goto LABEL_8;
    default:
      if ((v8 & 0xFF000000000000) == 0) {
        goto LABEL_8;
      }
LABEL_7:
      uint64_t result = sub_1001C00C0();
      if (!v4)
      {
LABEL_8:
        unint64_t v11 = v3[3];
        uint64_t v12 = HIBYTE(v11) & 0xF;
        if ((v11 & 0x2000000000000000) == 0) {
          uint64_t v12 = v3[2] & 0xFFFFFFFFFFFFLL;
        }
        if (!v12 || (uint64_t result = sub_1001C00F0(), !v4))
        {
          uint64_t result = sub_10003D244((uint64_t)v3);
          if (!v4)
          {
            sub_10003D2BC((uint64_t)v3);
            sub_10003D4B8((uint64_t)v3, a1, a2, a3, type metadata accessor for Proto_Ropes_Common_Attestation);
            sub_10003D534((uint64_t)v3);
            sub_10003D5AC((uint64_t)v3);
            sub_10003D624((uint64_t)v3);
            type metadata accessor for Proto_Ropes_Common_Attestation(0);
            return sub_1001BFE40();
          }
        }
      }
      return result;
  }
}

uint64_t sub_10003D244(uint64_t a1)
{
  uint64_t result = type metadata accessor for Proto_Ropes_Common_Attestation(0);
  if ((*(unsigned char *)(a1 + *(int *)(result + 28) + 4) & 1) == 0) {
    return sub_1001C0100();
  }
  return result;
}

uint64_t sub_10003D2BC(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_100209898);
  __chkstk_darwin(v2 - 8, v3);
  unint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1001BFDF0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  unint64_t v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Proto_Ropes_Common_Attestation(0);
  sub_1000391C0(a1 + *(int *)(v11 + 32), (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1) {
    return sub_100010360((uint64_t)v5, &qword_100209898);
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
  sub_100040368(&qword_100209FD8, (void (*)(uint64_t))&type metadata accessor for Google_Protobuf_Timestamp);
  sub_1001C0120();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_10003D4B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t result = a5(0);
  if (*(void *)(a1 + *(int *)(result + 36) + 8)) {
    return sub_1001C00F0();
  }
  return result;
}

uint64_t sub_10003D534(uint64_t a1)
{
  uint64_t result = type metadata accessor for Proto_Ropes_Common_Attestation(0);
  if (*(void *)(a1 + *(int *)(result + 40) + 8)) {
    return sub_1001C00F0();
  }
  return result;
}

uint64_t sub_10003D5AC(uint64_t a1)
{
  uint64_t result = type metadata accessor for Proto_Ropes_Common_Attestation(0);
  if (*(void *)(a1 + *(int *)(result + 44) + 8)) {
    return sub_1001C00F0();
  }
  return result;
}

uint64_t sub_10003D624(uint64_t a1)
{
  uint64_t result = type metadata accessor for Proto_Ropes_Common_Attestation(0);
  if (*(void *)(a1 + *(int *)(result + 48) + 8)) {
    return sub_1001C00F0();
  }
  return result;
}

Swift::Int Proto_Ropes_Common_Attestation.hashValue.getter()
{
  return sub_10003ED5C((void (*)(void))type metadata accessor for Proto_Ropes_Common_Attestation, &qword_1002098D0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Attestation);
}

uint64_t sub_10003D6E8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  *(_OWORD *)a2 = xmmword_1001CB200;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0xE000000000000000;
  _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v4 = a1[8];
  uint64_t v5 = a2 + a1[7];
  *(_DWORD *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 4) = 1;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1001BFDF0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v9 = a1[10];
  unint64_t v10 = (void *)(a2 + a1[9]);
  *unint64_t v10 = 0;
  v10[1] = 0;
  uint64_t v11 = (void *)(a2 + v9);
  *uint64_t v11 = 0;
  v11[1] = 0;
  uint64_t v12 = a1[12];
  uint64_t v13 = (void *)(a2 + a1[11]);
  *uint64_t v13 = 0;
  v13[1] = 0;
  uint64_t v14 = (void *)(a2 + v12);
  *uint64_t v14 = 0;
  v14[1] = 0;
  return result;
}

uint64_t sub_10003D7B4()
{
  return Proto_Ropes_Common_Attestation.decodeMessage<A>(decoder:)();
}

uint64_t sub_10003D7CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Ropes_Common_Attestation.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_10003D7E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100040368(&qword_100209F80, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Attestation);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10003D860@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_1002077C0, (uint64_t)static Proto_Ropes_Common_Attestation._protobuf_nameMap, a1);
}

uint64_t sub_10003D884(uint64_t a1)
{
  uint64_t v2 = sub_100040368(&qword_1002098E8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Attestation);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10003D8F0()
{
  sub_100040368(&qword_1002098E8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Attestation);
  return sub_1001C0050();
}

void *Proto_Ropes_Common_Capabilities.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Ropes_Common_Capabilities.protoMessageName;
}

unint64_t static Proto_Ropes_Common_Capabilities.protoMessageName.getter()
{
  return 0xD000000000000026;
}

uint64_t sub_10003D994()
{
  uint64_t v0 = sub_1001C0160();
  sub_100044F74(v0, static Proto_Ropes_Common_Capabilities._protobuf_nameMap);
  sub_10000D978(v0, (uint64_t)static Proto_Ropes_Common_Capabilities._protobuf_nameMap);
  sub_100003918(&qword_100209FB8);
  uint64_t v1 = (int *)(sub_100003918(&qword_100209FC0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001CD7F0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "compression_algorithm";
  *(void *)(v6 + 8) = 21;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v8 = sub_1001C0130();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)unint64_t v10 = "attestation_streaming";
  *((void *)v10 + 1) = 21;
  v10[16] = 2;
  v9();
  return sub_1001C0140();
}

uint64_t Proto_Ropes_Common_Capabilities._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_1002077C8, (uint64_t)static Proto_Ropes_Common_Capabilities._protobuf_nameMap);
}

uint64_t static Proto_Ropes_Common_Capabilities._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_1002077C8, (uint64_t)static Proto_Ropes_Common_Capabilities._protobuf_nameMap, a1);
}

uint64_t Proto_Ropes_Common_Capabilities.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_1001BFF00();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_1001BFF30();
      }
      else if (result == 1)
      {
        sub_10004076C();
        sub_1001BFF20();
      }
      uint64_t result = sub_1001BFF00();
    }
  }
  return result;
}

uint64_t Proto_Ropes_Common_Capabilities.traverse<A>(visitor:)()
{
  if (!*(void *)(*(void *)v0 + 16) || (sub_10004076C(), uint64_t result = sub_1001C0090(), !v1))
  {
    if (v0[8] != 1 || (uint64_t result = sub_1001C00A0(), !v1))
    {
      type metadata accessor for Proto_Ropes_Common_Capabilities(0);
      return sub_1001BFE40();
    }
  }
  return result;
}

Swift::Int Proto_Ropes_Common_Capabilities.hashValue.getter()
{
  return sub_10003ED5C((void (*)(void))type metadata accessor for Proto_Ropes_Common_Capabilities, &qword_1002098E0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Capabilities);
}

uint64_t sub_10003DDA8@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = &_swiftEmptyArrayStorage;
  *(unsigned char *)(a1 + 8) = 0;
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t sub_10003DDD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 24);
  uint64_t v5 = sub_1001BFE60();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_10003DE48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1001BFE60();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t sub_10003DEB8()
{
  return Proto_Ropes_Common_Capabilities.decodeMessage<A>(decoder:)();
}

uint64_t sub_10003DED0()
{
  return Proto_Ropes_Common_Capabilities.traverse<A>(visitor:)();
}

uint64_t sub_10003DEE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100040368(&qword_100209F78, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Capabilities);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10003DF64@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_1002077C8, (uint64_t)static Proto_Ropes_Common_Capabilities._protobuf_nameMap, a1);
}

uint64_t sub_10003DF88(uint64_t a1)
{
  uint64_t v2 = sub_100040368(&qword_1002099B0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Capabilities);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10003DFF4()
{
  sub_100040368(&qword_1002099B0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Capabilities);
  return sub_1001C0050();
}

void *Proto_Ropes_Common_AttestationList.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Ropes_Common_AttestationList.protoMessageName;
}

unint64_t static Proto_Ropes_Common_AttestationList.protoMessageName.getter()
{
  return 0xD000000000000029;
}

uint64_t sub_10003E098()
{
  uint64_t v0 = sub_1001C0160();
  sub_100044F74(v0, static Proto_Ropes_Common_AttestationList._protobuf_nameMap);
  sub_10000D978(v0, (uint64_t)static Proto_Ropes_Common_AttestationList._protobuf_nameMap);
  sub_100003918(&qword_100209FB8);
  uint64_t v1 = (int *)(sub_100003918(&qword_100209FC0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1001CC760;
  unint64_t v4 = v3 + v2 + v1[14];
  *(void *)(v3 + v2) = 1;
  *(void *)unint64_t v4 = "attestation";
  *(void *)(v4 + 8) = 11;
  *(unsigned char *)(v4 + 16) = 2;
  uint64_t v5 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v6 = sub_1001C0130();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v4, v5, v6);
  return sub_1001C0140();
}

uint64_t Proto_Ropes_Common_AttestationList._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_1002077D0, (uint64_t)static Proto_Ropes_Common_AttestationList._protobuf_nameMap);
}

uint64_t static Proto_Ropes_Common_AttestationList._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_1002077D0, (uint64_t)static Proto_Ropes_Common_AttestationList._protobuf_nameMap, a1);
}

uint64_t Proto_Ropes_Common_AttestationList.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_1001BFF00();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 1)
      {
        type metadata accessor for Proto_Ropes_Common_Attestation(0);
        sub_100040368(&qword_1002098E8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Attestation);
        sub_1001BFFD0();
      }
      uint64_t result = sub_1001BFF00();
    }
  }
  return result;
}

uint64_t Proto_Ropes_Common_AttestationList.traverse<A>(visitor:)()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for Proto_Ropes_Common_Attestation(0),
        sub_100040368(&qword_1002098E8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Attestation), uint64_t result = sub_1001C0110(), !v1))
  {
    type metadata accessor for Proto_Ropes_Common_AttestationList(0);
    return sub_1001BFE40();
  }
  return result;
}

Swift::Int Proto_Ropes_Common_AttestationList.hashValue.getter()
{
  return sub_10003ED5C((void (*)(void))type metadata accessor for Proto_Ropes_Common_AttestationList, &qword_1002098F0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_AttestationList);
}

uint64_t sub_10003E464@<X0>(void *a1@<X8>)
{
  *a1 = &_swiftEmptyArrayStorage;
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t sub_10003E490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = sub_1001BFE60();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_10003E500(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1001BFE60();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*sub_10003E570())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t sub_10003E594()
{
  return Proto_Ropes_Common_AttestationList.decodeMessage<A>(decoder:)();
}

uint64_t sub_10003E5AC()
{
  return Proto_Ropes_Common_AttestationList.traverse<A>(visitor:)();
}

uint64_t sub_10003E5C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100040368(&qword_100209F70, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_AttestationList);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10003E640@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_1002077D0, (uint64_t)static Proto_Ropes_Common_AttestationList._protobuf_nameMap, a1);
}

uint64_t sub_10003E664(uint64_t a1)
{
  uint64_t v2 = sub_100040368((unint64_t *)&qword_1002099C8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_AttestationList);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10003E6D0()
{
  sub_100040368((unint64_t *)&qword_1002099C8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_AttestationList);
  return sub_1001C0050();
}

void *Proto_Ropes_Common_CompressedAttestationList.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Ropes_Common_CompressedAttestationList.protoMessageName;
}

unint64_t static Proto_Ropes_Common_CompressedAttestationList.protoMessageName.getter()
{
  return 0xD000000000000033;
}

uint64_t sub_10003E774()
{
  uint64_t v0 = sub_1001C0160();
  sub_100044F74(v0, static Proto_Ropes_Common_CompressedAttestationList._protobuf_nameMap);
  sub_10000D978(v0, (uint64_t)static Proto_Ropes_Common_CompressedAttestationList._protobuf_nameMap);
  sub_100003918(&qword_100209FB8);
  uint64_t v1 = (int *)(sub_100003918(&qword_100209FC0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001CD7D0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "compression_algorithm";
  *(void *)(v6 + 8) = 21;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v8 = sub_1001C0130();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)unint64_t v10 = "compressed_bytes";
  *((void *)v10 + 1) = 16;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 3;
  *(void *)uint64_t v11 = "uncompressed_length_hint";
  *(void *)(v11 + 8) = 24;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_1001C0140();
}

uint64_t Proto_Ropes_Common_CompressedAttestationList._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_1002077D8, (uint64_t)static Proto_Ropes_Common_CompressedAttestationList._protobuf_nameMap);
}

uint64_t sub_10003E99C(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1001C0160();
  return sub_10000D978(v3, a2);
}

uint64_t static Proto_Ropes_Common_CompressedAttestationList._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_1002077D8, (uint64_t)static Proto_Ropes_Common_CompressedAttestationList._protobuf_nameMap, a1);
}

uint64_t sub_10003EA14@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1001C0160();
  uint64_t v6 = sub_10000D978(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v7(a3, v6, v5);
}

uint64_t Proto_Ropes_Common_CompressedAttestationList.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_1001BFF00();
  uint64_t v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 3) {
        break;
      }
      if (result == 2)
      {
        uint64_t v4 = v3;
        sub_1001BFF60();
        goto LABEL_5;
      }
      if (result == 1)
      {
        sub_10004076C();
        uint64_t v4 = v3;
        sub_1001BFF40();
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = sub_1001BFF00();
    }
    uint64_t v4 = v3;
    sub_1001BFFC0();
LABEL_5:
    uint64_t v3 = v4;
    goto LABEL_6;
  }
  return result;
}

uint64_t Proto_Ropes_Common_CompressedAttestationList.traverse<A>(visitor:)()
{
  if (!*(void *)v0 || (sub_10004076C(), uint64_t result = sub_1001C00B0(), !v1))
  {
    uint64_t v3 = *(void *)(v0 + 16);
    unint64_t v4 = *(void *)(v0 + 24);
    switch(v4 >> 62)
    {
      case 1uLL:
        if ((int)v3 != v3 >> 32) {
          goto LABEL_9;
        }
        goto LABEL_10;
      case 2uLL:
        if (*(void *)(v3 + 16) != *(void *)(v3 + 24)) {
          goto LABEL_9;
        }
        goto LABEL_10;
      case 3uLL:
        goto LABEL_10;
      default:
        if ((v4 & 0xFF000000000000) == 0) {
          goto LABEL_10;
        }
LABEL_9:
        uint64_t result = sub_1001C00C0();
        if (!v1)
        {
LABEL_10:
          if (!*(_DWORD *)(v0 + 32) || (uint64_t result = sub_1001C0100(), !v1))
          {
            type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0);
            uint64_t result = sub_1001BFE40();
          }
        }
        break;
    }
  }
  return result;
}

Swift::Int Proto_Ropes_Common_CompressedAttestationList.hashValue.getter()
{
  return sub_10003ED5C((void (*)(void))type metadata accessor for Proto_Ropes_Common_CompressedAttestationList, &qword_1002098F8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
}

Swift::Int sub_10003ED5C(void (*a1)(void), unint64_t *a2, void (*a3)(uint64_t))
{
  return sub_1001C1990();
}

uint64_t sub_10003EDE4@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  *(_OWORD *)(a1 + 16) = xmmword_1001CB200;
  *(_DWORD *)(a1 + 32) = 0;
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t sub_10003EE20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 28);
  uint64_t v5 = sub_1001BFE60();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_10003EE90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 28);
  uint64_t v5 = sub_1001BFE60();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*sub_10003EF00())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t sub_10003EF24()
{
  return Proto_Ropes_Common_CompressedAttestationList.decodeMessage<A>(decoder:)();
}

uint64_t sub_10003EF3C()
{
  return Proto_Ropes_Common_CompressedAttestationList.traverse<A>(visitor:)();
}

uint64_t sub_10003EF54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100040368(&qword_100209F68, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10003EFD0@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_1002077D8, (uint64_t)static Proto_Ropes_Common_CompressedAttestationList._protobuf_nameMap, a1);
}

uint64_t sub_10003EFF4@<X0>(void *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1001C0160();
  uint64_t v6 = sub_10000D978(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v7(a3, v6, v5);
}

uint64_t sub_10003F090(uint64_t a1)
{
  uint64_t v2 = sub_100040368(&qword_1002099E0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
  return Message.debugDescription.getter(a1, v2);
}

Swift::Int sub_10003F0FC()
{
  return sub_1001C1990();
}

uint64_t sub_10003F154()
{
  sub_100040368(&qword_1002099E0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
  return sub_1001C0050();
}

Swift::Int sub_10003F1D0()
{
  return sub_1001C1990();
}

uint64_t _s20privatecloudcomputed44Proto_Ropes_Common_CompressedAttestationListV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_1001BFE60();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v12 = (char *)&v20 - v11;
  uint64_t v13 = *a1;
  uint64_t v14 = *a2;
  if (*((unsigned char *)a2 + 8) != 1)
  {
    if (v13 == v14) {
      goto LABEL_11;
    }
    goto LABEL_14;
  }
  if (!v14)
  {
    if (!v13) {
      goto LABEL_11;
    }
    goto LABEL_14;
  }
  if (v14 != 1)
  {
    if (v13 == 2) {
      goto LABEL_11;
    }
LABEL_14:
    char v17 = 0;
    return v17 & 1;
  }
  if (v13 != 1) {
    goto LABEL_14;
  }
LABEL_11:
  if ((sub_10004C464(a1[2], a1[3], a2[2], a2[3]) & 1) == 0 || *((_DWORD *)a1 + 8) != *((_DWORD *)a2 + 8)) {
    goto LABEL_14;
  }
  uint64_t v15 = type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0);
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v16(v12, (char *)a1 + *(int *)(v15 + 28), v4);
  v16(v9, (char *)a2 + *(int *)(v15 + 28), v4);
  sub_100040368(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v17 = sub_1001C0BD0();
  id v18 = *(void (**)(char *, uint64_t))(v5 + 8);
  v18(v9, v4);
  v18(v12, v4);
  return v17 & 1;
}

uint64_t _s20privatecloudcomputed34Proto_Ropes_Common_AttestationListV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_1001BFE60();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v12 = (char *)&v18 - v11;
  if (sub_100168BBC(*a1, *a2))
  {
    uint64_t v13 = type metadata accessor for Proto_Ropes_Common_AttestationList(0);
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v14(v12, (char *)a1 + *(int *)(v13 + 20), v4);
    v14(v9, (char *)a2 + *(int *)(v13 + 20), v4);
    sub_100040368(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v15 = sub_1001C0BD0();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v9, v4);
    v16(v12, v4);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t _s20privatecloudcomputed32Proto_Ropes_Common_DecryptionKeyV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BFE60();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v12 = (char *)&v18 - v11;
  if ((sub_10004C464(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8)) & 1) != 0
    && (sub_10004C464(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a2 + 16), *(void *)(a2 + 24)) & 1) != 0)
  {
    uint64_t v13 = type metadata accessor for Proto_Ropes_Common_DecryptionKey(0);
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v14(v12, a1 + *(int *)(v13 + 24), v4);
    v14(v9, a2 + *(int *)(v13 + 24), v4);
    sub_100040368(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v15 = sub_1001C0BD0();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v9, v4);
    v16(v12, v4);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t _s20privatecloudcomputed31Proto_Ropes_Common_CapabilitiesV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BFE60();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v12 = (char *)&v18 - v11;
  if ((sub_1001697EC(*(void *)a1, *(void *)a2) & 1) != 0
    && *(unsigned __int8 *)(a1 + 8) == *(unsigned __int8 *)(a2 + 8))
  {
    uint64_t v14 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
    char v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v15(v12, a1 + *(int *)(v14 + 24), v4);
    v15(v9, a2 + *(int *)(v14 + 24), v4);
    sub_100040368(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v13 = sub_1001C0BD0();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v9, v4);
    v16(v12, v4);
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t _s20privatecloudcomputed30Proto_Ropes_Common_AttestationV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_1001BFE60();
  uint64_t v78 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v77 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v8);
  uint64_t v76 = (char *)&v72 - v9;
  uint64_t v10 = sub_1001BFDF0();
  uint64_t v79 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v11);
  char v13 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100003918(&qword_100209FC8);
  __chkstk_darwin(v14, v15);
  char v17 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100003918(&qword_100209898);
  uint64_t v20 = __chkstk_darwin(v18 - 8, v19);
  uint64_t v22 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v20, v23);
  uint64_t v26 = (char *)&v72 - v25;
  __chkstk_darwin(v24, v27);
  unint64_t v29 = (char *)&v72 - v28;
  if ((sub_10004C464(*a1, a1[1], *a2, a2[1]) & 1) == 0) {
    goto LABEL_46;
  }
  uint64_t v75 = v4;
  if (a1[2] == a2[2] && a1[3] == a2[3] || (char v30 = 0, (sub_1001C1840() & 1) != 0))
  {
    uint64_t v31 = type metadata accessor for Proto_Ropes_Common_Attestation(0);
    NSString v32 = (int *)v31;
    uint64_t v33 = *(int *)(v31 + 28);
    id v34 = (_DWORD *)((char *)a1 + v33);
    char v35 = *((unsigned char *)a1 + v33 + 4);
    unint64_t v36 = (_DWORD *)((char *)a2 + v33);
    int v37 = *((unsigned __int8 *)a2 + v33 + 4);
    if (v35)
    {
      if (!v37) {
        goto LABEL_46;
      }
    }
    else
    {
      if (*v34 != *v36) {
        LOBYTE(v37) = 1;
      }
      if (v37) {
        goto LABEL_46;
      }
    }
    sub_1000391C0((uint64_t)a1 + *(int *)(v31 + 32), (uint64_t)v29);
    long long v73 = v32;
    sub_1000391C0((uint64_t)a2 + v32[8], (uint64_t)v26);
    uint64_t v38 = (uint64_t)&v17[*(int *)(v14 + 48)];
    sub_1000391C0((uint64_t)v29, (uint64_t)v17);
    uint64_t v74 = v38;
    sub_1000391C0((uint64_t)v26, v38);
    uint64_t v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48);
    if (v39((uint64_t)v17, 1, v10) == 1)
    {
      sub_100010360((uint64_t)v26, &qword_100209898);
      sub_100010360((uint64_t)v29, &qword_100209898);
      if (v39(v74, 1, v10) == 1)
      {
        sub_100010360((uint64_t)v17, &qword_100209898);
LABEL_18:
        uint64_t v42 = v73[9];
        unint64_t v43 = (uint64_t *)((char *)a1 + v42);
        uint64_t v44 = *(uint64_t *)((char *)a1 + v42 + 8);
        id v45 = (uint64_t *)((char *)a2 + v42);
        uint64_t v46 = v45[1];
        if (v44)
        {
          if (!v46) {
            goto LABEL_46;
          }
          if (*v43 != *v45 || v44 != v46)
          {
            char v30 = 0;
            if ((sub_1001C1840() & 1) == 0) {
              return v30 & 1;
            }
          }
        }
        else if (v46)
        {
          goto LABEL_46;
        }
        uint64_t v47 = v73[10];
        uint64_t v48 = (uint64_t *)((char *)a1 + v47);
        uint64_t v49 = *(uint64_t *)((char *)a1 + v47 + 8);
        long long v50 = (uint64_t *)((char *)a2 + v47);
        uint64_t v51 = v50[1];
        if (v49)
        {
          if (!v51) {
            goto LABEL_46;
          }
          if (*v48 != *v50 || v49 != v51)
          {
            char v30 = 0;
            if ((sub_1001C1840() & 1) == 0) {
              return v30 & 1;
            }
          }
        }
        else if (v51)
        {
          goto LABEL_46;
        }
        uint64_t v52 = v73[11];
        uint64_t v53 = (uint64_t *)((char *)a1 + v52);
        uint64_t v54 = *(uint64_t *)((char *)a1 + v52 + 8);
        uint64_t v55 = (uint64_t *)((char *)a2 + v52);
        uint64_t v56 = v55[1];
        if (v54)
        {
          if (!v56) {
            goto LABEL_46;
          }
          if (*v53 != *v55 || v54 != v56)
          {
            char v30 = 0;
            if ((sub_1001C1840() & 1) == 0) {
              return v30 & 1;
            }
          }
        }
        else if (v56)
        {
          goto LABEL_46;
        }
        uint64_t v57 = v73[12];
        char v58 = (uint64_t *)((char *)a1 + v57);
        uint64_t v59 = *(uint64_t *)((char *)a1 + v57 + 8);
        uint64_t v60 = (uint64_t *)((char *)a2 + v57);
        uint64_t v61 = v60[1];
        if (v59)
        {
          if (v61)
          {
            if (*v58 != *v60 || v59 != v61)
            {
              char v30 = 0;
              if ((sub_1001C1840() & 1) == 0) {
                return v30 & 1;
              }
            }
LABEL_48:
            int64_t v63 = v73;
            int v64 = (char *)a1 + v73[6];
            uint64_t v65 = v78;
            uint64_t v66 = *(void (**)(char *, char *, uint64_t))(v78 + 16);
            uint64_t v67 = v75;
            uint64_t v68 = v76;
            v66(v76, v64, v75);
            uint64_t v69 = (char *)a2 + v63[6];
            uint64_t v70 = v77;
            v66(v77, v69, v67);
            sub_100040368(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
            char v30 = sub_1001C0BD0();
            uint64_t v71 = *(void (**)(char *, uint64_t))(v65 + 8);
            v71(v70, v67);
            v71(v68, v67);
            return v30 & 1;
          }
        }
        else if (!v61)
        {
          goto LABEL_48;
        }
LABEL_46:
        char v30 = 0;
        return v30 & 1;
      }
    }
    else
    {
      sub_1000391C0((uint64_t)v17, (uint64_t)v22);
      if (v39(v74, 1, v10) != 1)
      {
        uint64_t v40 = v79;
        (*(void (**)(char *, uint64_t, uint64_t))(v79 + 32))(v13, v74, v10);
        sub_100040368(&qword_100209FD0, (void (*)(uint64_t))&type metadata accessor for Google_Protobuf_Timestamp);
        LODWORD(v74) = sub_1001C0BD0();
        uint64_t v41 = *(void (**)(char *, uint64_t))(v40 + 8);
        v41(v13, v10);
        sub_100010360((uint64_t)v26, &qword_100209898);
        sub_100010360((uint64_t)v29, &qword_100209898);
        v41(v22, v10);
        sub_100010360((uint64_t)v17, &qword_100209898);
        if ((v74 & 1) == 0) {
          goto LABEL_46;
        }
        goto LABEL_18;
      }
      sub_100010360((uint64_t)v26, &qword_100209898);
      sub_100010360((uint64_t)v29, &qword_100209898);
      (*(void (**)(char *, uint64_t))(v79 + 8))(v22, v10);
    }
    sub_100010360((uint64_t)v17, &qword_100209FC8);
    goto LABEL_46;
  }
  return v30 & 1;
}

uint64_t _s20privatecloudcomputed29Proto_Ropes_Common_TenantInfoV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BFE60();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v12 = (char *)&v47 - v11;
  char v13 = (int *)type metadata accessor for Proto_Ropes_Common_TenantInfo(0);
  uint64_t v14 = v13[5];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = *(void *)(a1 + v14 + 8);
  char v17 = (void *)(a2 + v14);
  uint64_t v18 = v17[1];
  if (!v16)
  {
    if (v18) {
      goto LABEL_44;
    }
    goto LABEL_10;
  }
  if (!v18) {
    goto LABEL_44;
  }
  BOOL v19 = *v15 == *v17 && v16 == v18;
  if (v19 || (char v20 = 0, (sub_1001C1840() & 1) != 0))
  {
LABEL_10:
    uint64_t v21 = v13[6];
    uint64_t v22 = (void *)(a1 + v21);
    uint64_t v23 = *(void *)(a1 + v21 + 8);
    uint64_t v24 = (void *)(a2 + v21);
    uint64_t v25 = v24[1];
    if (v23)
    {
      if (!v25) {
        goto LABEL_44;
      }
      if (*v22 != *v24 || v23 != v25)
      {
        char v20 = 0;
        if ((sub_1001C1840() & 1) == 0) {
          return v20 & 1;
        }
      }
    }
    else if (v25)
    {
      goto LABEL_44;
    }
    uint64_t v27 = v13[7];
    uint64_t v28 = (void *)(a1 + v27);
    uint64_t v29 = *(void *)(a1 + v27 + 8);
    char v30 = (void *)(a2 + v27);
    uint64_t v31 = v30[1];
    if (v29)
    {
      if (!v31) {
        goto LABEL_44;
      }
      if (*v28 != *v30 || v29 != v31)
      {
        char v20 = 0;
        if ((sub_1001C1840() & 1) == 0) {
          return v20 & 1;
        }
      }
    }
    else if (v31)
    {
      goto LABEL_44;
    }
    uint64_t v33 = v13[8];
    id v34 = (void *)(a1 + v33);
    uint64_t v35 = *(void *)(a1 + v33 + 8);
    unint64_t v36 = (void *)(a2 + v33);
    uint64_t v37 = v36[1];
    if (v35)
    {
      if (!v37) {
        goto LABEL_44;
      }
      if (*v34 != *v36 || v35 != v37)
      {
        char v20 = 0;
        if ((sub_1001C1840() & 1) == 0) {
          return v20 & 1;
        }
      }
    }
    else if (v37)
    {
      goto LABEL_44;
    }
    uint64_t v39 = v13[9];
    uint64_t v40 = (void *)(a1 + v39);
    uint64_t v41 = *(void *)(a1 + v39 + 8);
    uint64_t v42 = (void *)(a2 + v39);
    uint64_t v43 = v42[1];
    if (v41)
    {
      if (v43)
      {
        if (*v40 != *v42 || v41 != v43)
        {
          char v20 = 0;
          if ((sub_1001C1840() & 1) == 0) {
            return v20 & 1;
          }
        }
LABEL_46:
        id v45 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
        v45(v12, a1, v4);
        v45(v9, a2, v4);
        sub_100040368(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        char v20 = sub_1001C0BD0();
        uint64_t v46 = *(void (**)(char *, uint64_t))(v5 + 8);
        v46(v9, v4);
        v46(v12, v4);
        return v20 & 1;
      }
    }
    else if (!v43)
    {
      goto LABEL_46;
    }
LABEL_44:
    char v20 = 0;
  }
  return v20 & 1;
}

uint64_t sub_100040368(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000403B0(char *a1, char *a2, uint64_t (*a3)(void, void), uint64_t (*a4)(void))
{
  uint64_t v8 = sub_1001BFE60();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v11 = __chkstk_darwin(v8, v10);
  char v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v14);
  uint64_t v16 = (char *)&v23 - v15;
  BOOL v17 = *(void *)a1 == *(void *)a2 && *((void *)a1 + 1) == *((void *)a2 + 1);
  if (v17 || (char v18 = 0, (sub_1001C1840() & 1) != 0))
  {
    if (a3(*((void *)a1 + 2), *((void *)a2 + 2)))
    {
      uint64_t v19 = a4(0);
      char v20 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
      v20(v16, &a1[*(int *)(v19 + 24)], v8);
      v20(v13, &a2[*(int *)(v19 + 24)], v8);
      sub_100040368(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v18 = sub_1001C0BD0();
      uint64_t v21 = *(void (**)(char *, uint64_t))(v9 + 8);
      v21(v13, v8);
      v21(v16, v8);
    }
    else
    {
      char v18 = 0;
    }
  }
  return v18 & 1;
}

uint64_t _s20privatecloudcomputed24Proto_Ropes_Common_ChunkV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BFE60();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v12 = (char *)&v18 - v11;
  if ((sub_10004C464(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8)) & 1) != 0
    && *(unsigned __int8 *)(a1 + 16) == *(unsigned __int8 *)(a2 + 16))
  {
    uint64_t v14 = type metadata accessor for Proto_Ropes_Common_Chunk(0);
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v15(v12, a1 + *(int *)(v14 + 24), v4);
    v15(v9, a2 + *(int *)(v14 + 24), v4);
    sub_100040368(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v13 = sub_1001C0BD0();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v9, v4);
    v16(v12, v4);
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

unint64_t sub_10004076C()
{
  unint64_t result = qword_1002098D8;
  if (!qword_1002098D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002098D8);
  }
  return result;
}

unint64_t sub_1000407C4()
{
  unint64_t result = qword_100209900;
  if (!qword_100209900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100209900);
  }
  return result;
}

unint64_t sub_10004081C()
{
  unint64_t result = qword_100209908;
  if (!qword_100209908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100209908);
  }
  return result;
}

unint64_t sub_100040874()
{
  unint64_t result = qword_100209910;
  if (!qword_100209910)
  {
    sub_1000166C8(&qword_100209918);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100209910);
  }
  return result;
}

unint64_t sub_1000408D4()
{
  unint64_t result = qword_100209920;
  if (!qword_100209920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100209920);
  }
  return result;
}

uint64_t sub_100040928()
{
  return sub_100040368(&qword_100209928, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_TenantInfo);
}

uint64_t sub_100040970()
{
  return sub_100040368(&qword_100209930, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_TenantInfo);
}

uint64_t sub_1000409B8()
{
  return sub_100040368(&qword_1002098A0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_TenantInfo);
}

uint64_t sub_100040A00()
{
  return sub_100040368(&qword_100209938, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_TenantInfo);
}

uint64_t sub_100040A48()
{
  return sub_100040368(&qword_100209940, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Workload);
}

uint64_t sub_100040A90()
{
  return sub_100040368(&qword_100209948, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Workload);
}

uint64_t sub_100040AD8()
{
  return sub_100040368(&qword_1002098B0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Workload);
}

uint64_t sub_100040B20()
{
  return sub_100040368(&qword_100209950, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Workload);
}

uint64_t sub_100040B68()
{
  return sub_100040368(&qword_100209958, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Workload.Parameter);
}

uint64_t sub_100040BB0()
{
  return sub_100040368(&qword_1002098A8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Workload.Parameter);
}

uint64_t sub_100040BF8()
{
  return sub_100040368(&qword_1002098B8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Workload.Parameter);
}

uint64_t sub_100040C40()
{
  return sub_100040368(&qword_100209960, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Workload.Parameter);
}

uint64_t sub_100040C88()
{
  return sub_100040368(&qword_100209968, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_DecryptionKey);
}

uint64_t sub_100040CD0()
{
  return sub_100040368(&qword_100209970, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_DecryptionKey);
}

uint64_t sub_100040D18()
{
  return sub_100040368(&qword_1002098C0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_DecryptionKey);
}

uint64_t sub_100040D60()
{
  return sub_100040368(&qword_100209978, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_DecryptionKey);
}

uint64_t sub_100040DA8()
{
  return sub_100040368(&qword_100209980, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Chunk);
}

uint64_t sub_100040DF0()
{
  return sub_100040368(&qword_100209988, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Chunk);
}

uint64_t sub_100040E38()
{
  return sub_100040368(&qword_1002098C8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Chunk);
}

uint64_t sub_100040E80()
{
  return sub_100040368(&qword_100209990, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Chunk);
}

uint64_t sub_100040EC8()
{
  return sub_100040368(&qword_100209998, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Attestation);
}

uint64_t sub_100040F10()
{
  return sub_100040368(&qword_1002098E8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Attestation);
}

uint64_t sub_100040F58()
{
  return sub_100040368(&qword_1002098D0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Attestation);
}

uint64_t sub_100040FA0()
{
  return sub_100040368(&qword_1002099A0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Attestation);
}

uint64_t sub_100040FE8()
{
  return sub_100040368(&qword_1002099A8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Capabilities);
}

uint64_t sub_100041030()
{
  return sub_100040368(&qword_1002099B0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Capabilities);
}

uint64_t sub_100041078()
{
  return sub_100040368(&qword_1002098E0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Capabilities);
}

uint64_t sub_1000410C0()
{
  return sub_100040368(&qword_1002099B8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Capabilities);
}

uint64_t sub_100041108()
{
  return sub_100040368(&qword_1002099C0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_AttestationList);
}

uint64_t sub_100041150()
{
  return sub_100040368((unint64_t *)&qword_1002099C8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_AttestationList);
}

uint64_t sub_100041198()
{
  return sub_100040368(&qword_1002098F0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_AttestationList);
}

uint64_t sub_1000411E0()
{
  return sub_100040368(&qword_1002099D0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_AttestationList);
}

uint64_t sub_100041228()
{
  return sub_100040368(&qword_1002099D8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
}

uint64_t sub_100041270()
{
  return sub_100040368(&qword_1002099E0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
}

uint64_t sub_1000412B8()
{
  return sub_100040368(&qword_1002098F8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
}

uint64_t sub_100041300()
{
  return sub_100040368(&qword_1002099E8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
}

uint64_t getEnumTagSinglePayload for Proto_Ropes_Common_CompressionAlgorithm(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Proto_Ropes_Common_CompressionAlgorithm(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_100041398(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1000413B4(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Proto_Ropes_Common_CompressionAlgorithm()
{
  return &type metadata for Proto_Ropes_Common_CompressionAlgorithm;
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Ropes_Common_TenantInfo(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1001BFE60();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    char v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *char v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    uint64_t v18 = (uint64_t *)((char *)a1 + v16);
    uint64_t v19 = (uint64_t *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = (uint64_t *)((char *)a1 + v17);
    uint64_t v22 = (uint64_t *)((char *)a2 + v17);
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = a3[9];
    uint64_t v25 = (uint64_t *)((char *)a1 + v24);
    uint64_t v26 = (uint64_t *)((char *)a2 + v24);
    uint64_t v27 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for Proto_Ropes_Common_TenantInfo(uint64_t a1)
{
  uint64_t v2 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Proto_Ropes_Common_TenantInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  char v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  void *v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v15);
  uint64_t v18 = (void *)(a2 + v15);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = (void *)(a1 + v16);
  uint64_t v21 = (void *)(a2 + v16);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = a3[9];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Proto_Ropes_Common_TenantInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[9];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for Proto_Ropes_Common_TenantInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for Proto_Ropes_Common_TenantInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[9];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (uint64_t *)(a2 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  *uint64_t v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Ropes_Common_TenantInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000419DC);
}

uint64_t sub_1000419DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001BFE60();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for Proto_Ropes_Common_TenantInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100041AC0);
}

uint64_t sub_100041AC0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1001BFE60();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  return result;
}

uint64_t sub_100041B80()
{
  uint64_t result = sub_1001BFE60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Proto_Ropes_Common_Workload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100041C48);
}

uint64_t storeEnumTagSinglePayload for Proto_Ropes_Common_Workload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100041C60);
}

uint64_t sub_100041C64()
{
  return sub_1000442D4();
}

uint64_t *_s20privatecloudcomputed27Proto_Ropes_Common_WorkloadV9ParameterVwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  char v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *char v3 = *a2;
    char v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    a1[2] = a2[2];
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1001BFE60();
    unint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t _s20privatecloudcomputed27Proto_Ropes_Common_WorkloadV9ParameterVwxx_0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1001BFE60();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *_s20privatecloudcomputed27Proto_Ropes_Common_WorkloadV9ParameterVwcp_0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1001BFE60();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *_s20privatecloudcomputed27Proto_Ropes_Common_WorkloadV9ParameterVwca_0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t _s20privatecloudcomputed27Proto_Ropes_Common_WorkloadV9ParameterVwtk_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *_s20privatecloudcomputed27Proto_Ropes_Common_WorkloadV9ParameterVwta_0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Ropes_Common_Workload.Parameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100042084);
}

uint64_t sub_100042088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1001BFE60();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Proto_Ropes_Common_Workload.Parameter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004214C);
}

uint64_t sub_100042150(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1001BFE60();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Ropes_Common_DecryptionKey(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    unint64_t v8 = a2[1];
    sub_100007B14(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    uint64_t v9 = a2[2];
    unint64_t v10 = a2[3];
    sub_100007B14(v9, v10);
    a1[2] = v9;
    a1[3] = v10;
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_1001BFE60();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t destroy for Proto_Ropes_Common_DecryptionKey(uint64_t a1, uint64_t a2)
{
  sub_10000792C(*(void *)a1, *(void *)(a1 + 8));
  sub_10000792C(*(void *)(a1 + 16), *(void *)(a1 + 24));
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1001BFE60();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t *initializeWithCopy for Proto_Ropes_Common_DecryptionKey(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_100007B14(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  uint64_t v8 = a2[2];
  unint64_t v9 = a2[3];
  sub_100007B14(v8, v9);
  a1[2] = v8;
  a1[3] = v9;
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  return a1;
}

uint64_t *assignWithCopy for Proto_Ropes_Common_DecryptionKey(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_100007B14(*a2, v7);
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_10000792C(v8, v9);
  uint64_t v10 = a2[2];
  unint64_t v11 = a2[3];
  sub_100007B14(v10, v11);
  uint64_t v12 = a1[2];
  unint64_t v13 = a1[3];
  a1[2] = v10;
  a1[3] = v11;
  sub_10000792C(v12, v13);
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

_OWORD *initializeWithTake for Proto_Ropes_Common_DecryptionKey(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  unint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t *assignWithTake for Proto_Ropes_Common_DecryptionKey(uint64_t *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_10000792C(v6, v7);
  uint64_t v8 = a1[2];
  unint64_t v9 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  sub_10000792C(v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  unint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Ropes_Common_DecryptionKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100042610);
}

uint64_t sub_100042610(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 12)
  {
    uint64_t v4 = *(void *)(a1 + 8) >> 60;
    if (((4 * v4) & 0xC) != 0) {
      return 16 - ((4 * v4) & 0xC | (v4 >> 2));
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_1001BFE60();
    unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Proto_Ropes_Common_DecryptionKey(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000426E0);
}

void *sub_1000426E0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 12)
  {
    *uint64_t result = 0;
    result[1] = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * a2) << 60;
  }
  else
  {
    uint64_t v7 = sub_1001BFE60();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100042790()
{
  return sub_1000442D4();
}

unint64_t initializeBufferWithCopyOfBuffer for Proto_Ropes_Common_Chunk(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    unint64_t v8 = *(void *)(a2 + 8);
    sub_100007B14(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = a1 + v9;
    uint64_t v11 = a2 + v9;
    uint64_t v12 = sub_1001BFE60();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  return a1;
}

uint64_t destroy for Proto_Ropes_Common_Chunk(uint64_t a1, uint64_t a2)
{
  sub_10000792C(*(void *)a1, *(void *)(a1 + 8));
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1001BFE60();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for Proto_Ropes_Common_Chunk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  unint64_t v7 = *(void *)(a2 + 8);
  sub_100007B14(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  return a1;
}

uint64_t assignWithCopy for Proto_Ropes_Common_Chunk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  unint64_t v7 = *(void *)(a2 + 8);
  sub_100007B14(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  unint64_t v9 = *(void *)(a1 + 8);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  sub_10000792C(v8, v9);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t initializeWithTake for Proto_Ropes_Common_Chunk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for Proto_Ropes_Common_Chunk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_10000792C(v6, v7);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Ropes_Common_Chunk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100042B84);
}

uint64_t sub_100042B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 16);
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = sub_1001BFE60();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 24);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for Proto_Ropes_Common_Chunk(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100042C48);
}

uint64_t sub_100042C48(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 16) = a2 + 1;
  }
  else
  {
    uint64_t v7 = sub_1001BFE60();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100042CEC()
{
  return sub_1000442D4();
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Ropes_Common_Attestation(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    unint64_t v8 = a2[1];
    sub_100007B14(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    uint64_t v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    uint64_t v10 = a3[6];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_1001BFE60();
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    uint64_t v15 = a3[7];
    uint64_t v16 = a3[8];
    uint64_t v17 = (char *)a1 + v15;
    uint64_t v18 = (char *)a2 + v15;
    *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
    v17[4] = v18[4];
    uint64_t v19 = (char *)a1 + v16;
    uint64_t v20 = (char *)a2 + v16;
    uint64_t v21 = sub_1001BFDF0();
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      uint64_t v23 = sub_100003918(&qword_100209898);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    uint64_t v25 = a3[9];
    uint64_t v26 = a3[10];
    uint64_t v27 = (uint64_t *)((char *)a1 + v25);
    uint64_t v28 = (uint64_t *)((char *)a2 + v25);
    uint64_t v29 = v28[1];
    *uint64_t v27 = *v28;
    v27[1] = v29;
    uint64_t v30 = (uint64_t *)((char *)a1 + v26);
    uint64_t v31 = (uint64_t *)((char *)a2 + v26);
    uint64_t v32 = v31[1];
    *uint64_t v30 = *v31;
    v30[1] = v32;
    uint64_t v33 = a3[11];
    uint64_t v34 = a3[12];
    uint64_t v35 = (uint64_t *)((char *)a1 + v33);
    unint64_t v36 = (uint64_t *)((char *)a2 + v33);
    uint64_t v37 = v36[1];
    *uint64_t v35 = *v36;
    v35[1] = v37;
    uint64_t v38 = (uint64_t *)((char *)a1 + v34);
    uint64_t v39 = (uint64_t *)((char *)a2 + v34);
    uint64_t v40 = v39[1];
    *uint64_t v38 = *v39;
    v38[1] = v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for Proto_Ropes_Common_Attestation(uint64_t a1, uint64_t a2)
{
  sub_10000792C(*(void *)a1, *(void *)(a1 + 8));
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  uint64_t v7 = sub_1001BFDF0();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t *initializeWithCopy for Proto_Ropes_Common_Attestation(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_100007B14(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  uint64_t v8 = a2[3];
  a1[2] = a2[2];
  a1[3] = v8;
  uint64_t v9 = a3[6];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1001BFE60();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = (char *)a1 + v14;
  uint64_t v17 = (char *)a2 + v14;
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  v16[4] = v17[4];
  uint64_t v18 = (char *)a1 + v15;
  uint64_t v19 = (char *)a2 + v15;
  uint64_t v20 = sub_1001BFDF0();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    uint64_t v22 = sub_100003918(&qword_100209898);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  uint64_t v23 = a3[9];
  uint64_t v24 = a3[10];
  uint64_t v25 = (uint64_t *)((char *)a1 + v23);
  uint64_t v26 = (uint64_t *)((char *)a2 + v23);
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  uint64_t v28 = (uint64_t *)((char *)a1 + v24);
  uint64_t v29 = (uint64_t *)((char *)a2 + v24);
  uint64_t v30 = v29[1];
  *uint64_t v28 = *v29;
  v28[1] = v30;
  uint64_t v31 = a3[11];
  uint64_t v32 = a3[12];
  uint64_t v33 = (uint64_t *)((char *)a1 + v31);
  uint64_t v34 = (uint64_t *)((char *)a2 + v31);
  uint64_t v35 = v34[1];
  void *v33 = *v34;
  v33[1] = v35;
  unint64_t v36 = (uint64_t *)((char *)a1 + v32);
  uint64_t v37 = (uint64_t *)((char *)a2 + v32);
  uint64_t v38 = v37[1];
  *unint64_t v36 = *v37;
  v36[1] = v38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for Proto_Ropes_Common_Attestation(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_100007B14(*a2, v7);
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_10000792C(v8, v9);
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  char v17 = v16[4];
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  v15[4] = v17;
  uint64_t v18 = a3[8];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_1001BFDF0();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 24))(v19, v20, v21);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
    goto LABEL_6;
  }
  if (v25)
  {
LABEL_6:
    uint64_t v26 = sub_100003918(&qword_100209898);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
LABEL_7:
  uint64_t v27 = a3[9];
  uint64_t v28 = (uint64_t *)((char *)a1 + v27);
  uint64_t v29 = (uint64_t *)((char *)a2 + v27);
  *uint64_t v28 = *v29;
  v28[1] = v29[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = a3[10];
  uint64_t v31 = (uint64_t *)((char *)a1 + v30);
  uint64_t v32 = (uint64_t *)((char *)a2 + v30);
  *uint64_t v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[11];
  uint64_t v34 = (uint64_t *)((char *)a1 + v33);
  uint64_t v35 = (uint64_t *)((char *)a2 + v33);
  *uint64_t v34 = *v35;
  v34[1] = v35[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[12];
  uint64_t v37 = (uint64_t *)((char *)a1 + v36);
  uint64_t v38 = (uint64_t *)((char *)a2 + v36);
  *uint64_t v37 = *v38;
  v37[1] = v38[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for Proto_Ropes_Common_Attestation(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  unint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = (char *)a1 + v11;
  uint64_t v14 = (char *)a2 + v11;
  *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
  v13[4] = v14[4];
  uint64_t v15 = (char *)a1 + v12;
  uint64_t v16 = (char *)a2 + v12;
  uint64_t v17 = sub_1001BFDF0();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_100003918(&qword_100209898);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v20 = a3[10];
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  *(_OWORD *)((char *)a1 + v20) = *(_OWORD *)((char *)a2 + v20);
  uint64_t v21 = a3[12];
  *(_OWORD *)((char *)a1 + a3[11]) = *(_OWORD *)((char *)a2 + a3[11]);
  *(_OWORD *)((char *)a1 + v21) = *(_OWORD *)((char *)a2 + v21);
  return a1;
}

uint64_t *assignWithTake for Proto_Ropes_Common_Attestation(uint64_t *a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_10000792C(v6, v7);
  uint64_t v8 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[6];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1001BFE60();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = (char *)a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  v15[4] = *(unsigned char *)(v16 + 4);
  uint64_t v17 = (char *)a1 + v14;
  uint64_t v18 = (char *)(a2 + v14);
  uint64_t v19 = sub_1001BFDF0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 40))(v17, v18, v19);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
    goto LABEL_6;
  }
  if (v23)
  {
LABEL_6:
    uint64_t v24 = sub_100003918(&qword_100209898);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
LABEL_7:
  uint64_t v25 = a3[9];
  uint64_t v26 = (uint64_t *)((char *)a1 + v25);
  uint64_t v27 = (uint64_t *)(a2 + v25);
  uint64_t v29 = *v27;
  uint64_t v28 = v27[1];
  *uint64_t v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  uint64_t v30 = a3[10];
  uint64_t v31 = (uint64_t *)((char *)a1 + v30);
  uint64_t v32 = (uint64_t *)(a2 + v30);
  uint64_t v34 = *v32;
  uint64_t v33 = v32[1];
  *uint64_t v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  uint64_t v35 = a3[11];
  uint64_t v36 = (uint64_t *)((char *)a1 + v35);
  uint64_t v37 = (uint64_t *)(a2 + v35);
  uint64_t v39 = *v37;
  uint64_t v38 = v37[1];
  *uint64_t v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  uint64_t v40 = a3[12];
  uint64_t v41 = (uint64_t *)((char *)a1 + v40);
  uint64_t v42 = (uint64_t *)(a2 + v40);
  uint64_t v44 = *v42;
  uint64_t v43 = v42[1];
  *uint64_t v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Ropes_Common_Attestation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000439C4);
}

uint64_t sub_1000439C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1001BFE60();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100003918(&qword_100209898);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for Proto_Ropes_Common_Attestation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100043B08);
}

uint64_t sub_100043B08(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1001BFE60();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100003918(&qword_100209898);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_100043C38()
{
  sub_1001BFE60();
  if (v0 <= 0x3F)
  {
    sub_100043D2C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100043D2C()
{
  if (!qword_100209D58)
  {
    sub_1001BFDF0();
    unint64_t v0 = sub_1001C12F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100209D58);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = sub_1001BFE60();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t destroy for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1001BFE60();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1001BFE60();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Ropes_Common_Capabilities(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100044150);
}

uint64_t sub_100044150(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1001BFE60();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Proto_Ropes_Common_Capabilities(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100044214);
}

void *sub_100044214(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1001BFE60();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1000442BC()
{
  return sub_1000442D4();
}

uint64_t sub_1000442D4()
{
  uint64_t result = sub_1001BFE60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Ropes_Common_AttestationList(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1001BFE60();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t destroy for Proto_Ropes_Common_AttestationList(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1001BFE60();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for Proto_Ropes_Common_AttestationList(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1001BFE60();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

void *assignWithCopy for Proto_Ropes_Common_AttestationList(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *initializeWithTake for Proto_Ropes_Common_AttestationList(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for Proto_Ropes_Common_AttestationList(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Ropes_Common_AttestationList(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100044708);
}

uint64_t sub_100044708(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1001BFE60();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Proto_Ropes_Common_AttestationList(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000447CC);
}

void *sub_1000447CC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1001BFE60();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100044874()
{
  uint64_t result = sub_1001BFE60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for Proto_Ropes_Common_CompressedAttestationList(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v7 = a2[2];
    unint64_t v8 = a2[3];
    sub_100007B14(v7, v8);
    *(void *)(v4 + 16) = v7;
    *(void *)(v4 + 24) = v8;
    *(_DWORD *)(v4 + 32) = *((_DWORD *)a2 + 8);
    uint64_t v9 = *(int *)(a3 + 28);
    uint64_t v10 = v4 + v9;
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = sub_1001BFE60();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  return v4;
}

uint64_t destroy for Proto_Ropes_Common_CompressedAttestationList(uint64_t a1, uint64_t a2)
{
  sub_10000792C(*(void *)(a1 + 16), *(void *)(a1 + 24));
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_1001BFE60();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for Proto_Ropes_Common_CompressedAttestationList(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  unint64_t v7 = *(void *)(a2 + 24);
  sub_100007B14(v6, v7);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  return a1;
}

uint64_t assignWithCopy for Proto_Ropes_Common_CompressedAttestationList(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  uint64_t v7 = a2[2];
  unint64_t v8 = a2[3];
  sub_100007B14(v7, v8);
  uint64_t v9 = *(void *)(a1 + 16);
  unint64_t v10 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  sub_10000792C(v9, v10);
  *(_DWORD *)(a1 + 32) = *((_DWORD *)a2 + 8);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = (uint64_t)a2 + v11;
  uint64_t v14 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for Proto_Ropes_Common_CompressedAttestationList(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for Proto_Ropes_Common_CompressedAttestationList(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  sub_10000792C(v6, v7);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Ropes_Common_CompressedAttestationList(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100044D44);
}

uint64_t sub_100044D44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 12)
  {
    uint64_t v4 = *(void *)(a1 + 24) >> 60;
    if (((4 * v4) & 0xC) != 0) {
      return 16 - ((4 * v4) & 0xC | (v4 >> 2));
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_1001BFE60();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Proto_Ropes_Common_CompressedAttestationList(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100044E14);
}

uint64_t sub_100044E14(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 12)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * a2) << 60;
  }
  else
  {
    uint64_t v7 = sub_1001BFE60();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100044EC4()
{
  uint64_t result = sub_1001BFE60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100044F74(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeRequest.authToken.setter(uint64_t a1)
{
  return sub_100046880(a1, &qword_100207FE0, type metadata accessor for Proto_PrivateCloudCompute_AuthToken, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type);
}

uint64_t type metadata accessor for Proto_PrivateCloudCompute_AuthToken(uint64_t a1)
{
  return sub_10001C958(a1, qword_10020A278);
}

uint64_t type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type(uint64_t a1)
{
  return sub_10001C958(a1, qword_10020A1E8);
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeRequest.applicationPayload.setter(uint64_t a1, uint64_t a2)
{
  return sub_10004602C(a1, a2, &qword_100207FE0, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type);
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeRequest.type.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003282C(v1, a1, &qword_100207FE0);
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeRequest.type.setter(uint64_t a1)
{
  return sub_10004E328(a1, v1, &qword_100207FE0);
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeRequest.applicationPayload.getter()
{
  return sub_100045EF0(&qword_100207FE0, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type);
}

void (*Proto_PrivateCloudCompute_PrivateCloudComputeRequest.applicationPayload.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x30uLL);
  *a1 = v4;
  v4[2] = v2;
  uint64_t v5 = sub_100003918(&qword_100207FE0);
  uint64_t v6 = (long long *)malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[3] = v6;
  sub_10003282C(v2, (uint64_t)v6, &qword_100207FE0);
  uint64_t v7 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type(0);
  v4[4] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v4[5] = v8;
  if ((*(unsigned int (**)(long long *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100010360((uint64_t)v6, &qword_100207FE0);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      long long v9 = *v6;
      goto LABEL_7;
    }
    sub_10004562C((uint64_t)v6, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type);
  }
  long long v9 = xmmword_1001CB200;
LABEL_7:
  *(_OWORD *)uint64_t v4 = v9;
  return sub_100045278;
}

void sub_100045278(uint64_t **a1, char a2)
{
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeRequest.authToken.getter@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003918(&qword_100207FE0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(v2, (uint64_t)v7, &qword_100207FE0);
  uint64_t v8 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) == 1)
  {
    sub_100010360((uint64_t)v7, &qword_100207FE0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1) {
      return sub_1000457D0((uint64_t)v7, (uint64_t)a1, type metadata accessor for Proto_PrivateCloudCompute_AuthToken);
    }
    sub_10004562C((uint64_t)v7, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type);
  }
  *a1 = xmmword_1001CB200;
  a1[1] = xmmword_1001CB200;
  type metadata accessor for Proto_PrivateCloudCompute_AuthToken(0);
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t Proto_PrivateCloudCompute_AuthToken.init()@<X0>(_OWORD *a1@<X8>)
{
  *a1 = xmmword_1001CB200;
  a1[1] = xmmword_1001CB200;
  type metadata accessor for Proto_PrivateCloudCompute_AuthToken(0);
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

void (*Proto_PrivateCloudCompute_PrivateCloudComputeRequest.authToken.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x30uLL);
  *a1 = v4;
  void *v4 = v1;
  uint64_t v5 = sub_100003918(&qword_100207FE0);
  uint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[1] = v6;
  size_t v7 = *(void *)(*(void *)(type metadata accessor for Proto_PrivateCloudCompute_AuthToken(0) - 8) + 64);
  v4[2] = malloc(v7);
  uint64_t v8 = malloc(v7);
  v4[3] = v8;
  sub_10003282C(v2, (uint64_t)v6, &qword_100207FE0);
  uint64_t v9 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type(0);
  v4[4] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v4[5] = v10;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) == 1)
  {
    sub_100010360((uint64_t)v6, &qword_100207FE0);
LABEL_6:
    _OWORD *v8 = xmmword_1001CB200;
    v8[1] = xmmword_1001CB200;
    _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    return sub_1000455F4;
  }
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_10004562C((uint64_t)v6, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type);
    goto LABEL_6;
  }
  sub_1000457D0((uint64_t)v6, (uint64_t)v8, type metadata accessor for Proto_PrivateCloudCompute_AuthToken);
  return sub_1000455F4;
}

void sub_1000455F4(uint64_t **a1, char a2)
{
}

uint64_t sub_10004562C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeRequest.finalMessage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003918(&qword_100207FE0);
  __chkstk_darwin(v4 - 8, v5);
  size_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(v2, (uint64_t)v7, &qword_100207FE0);
  uint64_t v8 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) == 1)
  {
    sub_100010360((uint64_t)v7, &qword_100207FE0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2) {
      return sub_1000457D0((uint64_t)v7, a1, type metadata accessor for Proto_PrivateCloudCompute_FinalMessage);
    }
    sub_10004562C((uint64_t)v7, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type);
  }
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t sub_1000457D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for Proto_PrivateCloudCompute_FinalMessage(uint64_t a1)
{
  return sub_10001C958(a1, qword_10020A310);
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeRequest.finalMessage.setter(uint64_t a1)
{
  return sub_100046880(a1, &qword_100207FE0, type metadata accessor for Proto_PrivateCloudCompute_FinalMessage, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type);
}

void (*Proto_PrivateCloudCompute_PrivateCloudComputeRequest.finalMessage.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x30uLL);
  *a1 = v4;
  void *v4 = v1;
  uint64_t v5 = sub_100003918(&qword_100207FE0);
  uint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[1] = v6;
  size_t v7 = *(void *)(*(void *)(type metadata accessor for Proto_PrivateCloudCompute_FinalMessage(0) - 8) + 64);
  v4[2] = malloc(v7);
  uint64_t v8 = malloc(v7);
  v4[3] = v8;
  sub_10003282C(v2, (uint64_t)v6, &qword_100207FE0);
  uint64_t v9 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type(0);
  v4[4] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v4[5] = v10;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) == 1)
  {
    sub_100010360((uint64_t)v6, &qword_100207FE0);
LABEL_6:
    _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    return sub_100045A40;
  }
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_10004562C((uint64_t)v6, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type);
    goto LABEL_6;
  }
  sub_1000457D0((uint64_t)v6, (uint64_t)v8, type metadata accessor for Proto_PrivateCloudCompute_FinalMessage);
  return sub_100045A40;
}

void sub_100045A40(uint64_t **a1, char a2)
{
}

uint64_t sub_100045A78(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeRequest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100046CEC(type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest, a1);
}

uint64_t type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest(uint64_t a1)
{
  return sub_10001C958(a1, (uint64_t *)&unk_10020A138);
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeRequest.unknownFields.setter(uint64_t a1)
{
  return sub_100046D84(a1, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest);
}

uint64_t (*Proto_PrivateCloudCompute_PrivateCloudComputeRequest.unknownFields.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t static Proto_PrivateCloudCompute_FinalMessage.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BFE60();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v12 = (char *)&v16 - v11;
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v13((char *)&v16 - v11, a1, v4);
  v13(v9, a2, v4);
  sub_10004E420(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  LOBYTE(a2) = sub_1001C0BD0();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v9, v4);
  v14(v12, v4);
  return a2 & 1;
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeRequest.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_1000477D4(type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type, (void (*)(void))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest, a1);
}

uint64_t Proto_PrivateCloudCompute_AuthToken.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Proto_PrivateCloudCompute_AuthToken(0) + 24);
  uint64_t v4 = sub_1001BFE60();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t Proto_PrivateCloudCompute_AuthToken.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Proto_PrivateCloudCompute_AuthToken(0) + 24);
  uint64_t v4 = sub_1001BFE60();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*Proto_PrivateCloudCompute_AuthToken.unknownFields.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeResponse.type.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003282C(v1, a1, &qword_100209FE0);
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeResponse.type.setter(uint64_t a1)
{
  return sub_10004E328(a1, v1, &qword_100209FE0);
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeResponse.responseUuid.getter()
{
  return sub_100045EF0(&qword_100209FE0, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type);
}

uint64_t sub_100045EF0(uint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v7 = v3;
  uint64_t v8 = sub_100003918(a1);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(v7, (uint64_t)v11, a1);
  uint64_t v12 = a2(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    sub_100010360((uint64_t)v11, a1);
    return 0;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    sub_10004562C((uint64_t)v11, a3);
    return 0;
  }
  return *(void *)v11;
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeResponse.responseUuid.setter(uint64_t a1, uint64_t a2)
{
  return sub_10004602C(a1, a2, &qword_100209FE0, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type);
}

uint64_t sub_10004602C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  sub_100010360((uint64_t)v4, a3);
  void *v4 = a1;
  v4[1] = a2;
  uint64_t v8 = a4(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = *(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
  return v9(v4, 0, 1, v8);
}

void (*Proto_PrivateCloudCompute_PrivateCloudComputeResponse.responseUuid.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x30uLL);
  *a1 = v4;
  v4[2] = v2;
  uint64_t v5 = sub_100003918(&qword_100209FE0);
  uint64_t v6 = (long long *)malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[3] = v6;
  sub_10003282C(v2, (uint64_t)v6, &qword_100209FE0);
  uint64_t v7 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type(0);
  v4[4] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v4[5] = v8;
  if ((*(unsigned int (**)(long long *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100010360((uint64_t)v6, &qword_100209FE0);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      long long v9 = *v6;
      goto LABEL_7;
    }
    sub_10004562C((uint64_t)v6, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type);
  }
  long long v9 = xmmword_1001CB200;
LABEL_7:
  *(_OWORD *)uint64_t v4 = v9;
  return sub_100046238;
}

void sub_100046238(uint64_t **a1, char a2)
{
}

void sub_100046248(uint64_t **a1, char a2, uint64_t *a3)
{
  uint64_t v4 = *a1;
  uint64_t v6 = **a1;
  unint64_t v5 = (*a1)[1];
  uint64_t v7 = (*a1)[4];
  uint64_t v8 = (*a1)[5];
  uint64_t v10 = (uint64_t *)(*a1)[2];
  long long v9 = (void *)(*a1)[3];
  if (a2)
  {
    sub_100007B14(**a1, v5);
    sub_100010360((uint64_t)v10, a3);
    *uint64_t v10 = v6;
    v10[1] = v5;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v7);
    sub_10000792C(*v4, v4[1]);
  }
  else
  {
    sub_100010360((*a1)[2], a3);
    *uint64_t v10 = v6;
    v10[1] = v5;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v7);
  }
  free(v9);
  free(v4);
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeResponse.responsePayload.getter()
{
  uint64_t v1 = sub_100003918(&qword_100209FE0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(v0, (uint64_t)v4, &qword_100209FE0);
  uint64_t v5 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5) == 1)
  {
    sub_100010360((uint64_t)v4, &qword_100209FE0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1) {
      return *(void *)v4;
    }
    sub_10004562C((uint64_t)v4, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type);
  }
  return 0;
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeResponse.responsePayload.setter(uint64_t a1, uint64_t a2)
{
  return sub_10004602C(a1, a2, &qword_100209FE0, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type);
}

void (*Proto_PrivateCloudCompute_PrivateCloudComputeResponse.responsePayload.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x30uLL);
  *a1 = v4;
  v4[2] = v2;
  uint64_t v5 = sub_100003918(&qword_100209FE0);
  uint64_t v6 = (long long *)malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[3] = v6;
  sub_10003282C(v2, (uint64_t)v6, &qword_100209FE0);
  uint64_t v7 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type(0);
  v4[4] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v4[5] = v8;
  if ((*(unsigned int (**)(long long *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100010360((uint64_t)v6, &qword_100209FE0);
LABEL_6:
    long long v9 = xmmword_1001CB200;
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_10004562C((uint64_t)v6, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type);
    goto LABEL_6;
  }
  long long v9 = *v6;
LABEL_7:
  *(_OWORD *)uint64_t v4 = v9;
  return sub_1000465F8;
}

void sub_1000465F8(uint64_t **a1, char a2)
{
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeResponse.responseSummary.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003918(&qword_100209FE0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(v2, (uint64_t)v7, &qword_100209FE0);
  uint64_t v8 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) == 1)
  {
    sub_100010360((uint64_t)v7, &qword_100209FE0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2) {
      return sub_1000457D0((uint64_t)v7, a1, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary);
    }
    sub_10004562C((uint64_t)v7, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type);
  }
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  uint64_t v10 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(0);
  _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v11 = a1 + *(int *)(v10 + 24);
  uint64_t v12 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  uint64_t v2 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(0);
  _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v3 = a1 + *(int *)(v2 + 24);
  uint64_t v4 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(v3, 1, 1, v4);
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeResponse.responseSummary.setter(uint64_t a1)
{
  return sub_100046880(a1, &qword_100209FE0, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type);
}

uint64_t sub_100046880(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  sub_100010360(v4, a2);
  sub_1000457D0(a1, v4, a3);
  uint64_t v8 = a4(0);
  swift_storeEnumTagMultiPayload();
  long long v9 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
  return v9(v4, 0, 1, v8);
}

void (*Proto_PrivateCloudCompute_PrivateCloudComputeResponse.responseSummary.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x30uLL);
  *a1 = v4;
  void *v4 = v1;
  uint64_t v5 = sub_100003918(&qword_100209FE0);
  uint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[1] = v6;
  uint64_t v7 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(0);
  size_t v8 = *(void *)(*(void *)(v7 - 8) + 64);
  v4[2] = malloc(v8);
  long long v9 = (char *)malloc(v8);
  v4[3] = v9;
  sub_10003282C(v2, (uint64_t)v6, &qword_100209FE0);
  uint64_t v10 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type(0);
  v4[4] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v4[5] = v11;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) == 1)
  {
    sub_100010360((uint64_t)v6, &qword_100209FE0);
LABEL_6:
    *(void *)long long v9 = 0;
    v9[8] = 1;
    _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v12 = &v9[*(int *)(v7 + 24)];
    uint64_t v13 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
    return sub_100046B50;
  }
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_10004562C((uint64_t)v6, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type);
    goto LABEL_6;
  }
  sub_1000457D0((uint64_t)v6, (uint64_t)v9, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary);
  return sub_100046B50;
}

void sub_100046B50(uint64_t **a1, char a2)
{
}

void sub_100046B88(uint64_t **a1, char a2, uint64_t *a3, uint64_t (*a4)(void), uint64_t a5, uint64_t (*a6)(void))
{
  size_t v8 = *a1;
  uint64_t v9 = (*a1)[4];
  uint64_t v10 = (*a1)[5];
  uint64_t v11 = (void *)(*a1)[2];
  uint64_t v12 = (void *)(*a1)[3];
  uint64_t v14 = **a1;
  uint64_t v13 = (void *)(*a1)[1];
  if (a2)
  {
    sub_100045A78((*a1)[3], (uint64_t)v11, a4);
    sub_100010360(v14, a3);
    sub_1000457D0((uint64_t)v11, v14, a4);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
    sub_10004562C((uint64_t)v12, a6);
  }
  else
  {
    sub_100010360(**a1, a3);
    sub_1000457D0((uint64_t)v12, v14, a4);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  free(v12);
  free(v11);
  free(v13);
  free(v8);
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeResponse.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100046CEC(type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse, a1);
}

uint64_t sub_100046CEC@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 20);
  uint64_t v5 = sub_1001BFE60();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeResponse.unknownFields.setter(uint64_t a1)
{
  return sub_100046D84(a1, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse);
}

uint64_t sub_100046D84(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 20);
  uint64_t v5 = sub_1001BFE60();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*Proto_PrivateCloudCompute_PrivateCloudComputeResponse.unknownFields.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

void Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseStatus.init(rawValue:)()
{
}

void sub_100046E74()
{
  static Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseStatus.allCases = (uint64_t)&off_1001FBAF8;
}

uint64_t *Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseStatus.allCases.unsafeMutableAddressor()
{
  if (qword_1002077E0 != -1) {
    swift_once();
  }
  return &static Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseStatus.allCases;
}

uint64_t static Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseStatus.allCases.getter()
{
  if (qword_1002077E0 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

void sub_100046F30(uint64_t a1@<X8>)
{
  sub_10004E40C();
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 9) = v4 & 1;
}

uint64_t sub_100046F64@<X0>(void *a1@<X8>)
{
  if (qword_1002077E0 != -1) {
    swift_once();
  }
  *a1 = static Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseStatus.allCases;
  return swift_bridgeObjectRetain();
}

void sub_100046FD0(uint64_t a1@<X8>)
{
  sub_10004E40C();
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 9) = v4 & 1;
}

uint64_t sub_100047008(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10004E468();
  return Enum.hash(into:)(a1, a2, v4);
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary.postResponseActions.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = sub_100003918(&qword_100209FE8);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(0);
  sub_10003282C(v1 + *(int *)(v7 + 24), (uint64_t)v6, &qword_100209FE8);
  uint64_t v8 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_1000457D0((uint64_t)v6, (uint64_t)a1, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions);
  }
  *a1 = 0;
  _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  return sub_100010360((uint64_t)v6, &qword_100209FE8);
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions.init()@<X0>(unsigned char *a1@<X8>)
{
  *a1 = 0;
  type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(0);
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary.postResponseActions.setter(uint64_t a1)
{
  uint64_t v3 = v1
     + *(int *)(type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(0)
              + 24);
  sub_100010360(v3, &qword_100209FE8);
  sub_1000457D0(a1, v3, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions);
  uint64_t v4 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(v3, 0, 1, v4);
}

void (*Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary.postResponseActions.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100003918(&qword_100209FE8);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  _OWORD v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(0)
               + 24);
  *((_DWORD *)v3 + 12) = v11;
  sub_10003282C(v1 + v11, (uint64_t)v5, &qword_100209FE8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = 0;
    _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_100010360((uint64_t)v5, &qword_100209FE8);
  }
  else
  {
    sub_1000457D0((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions);
  }
  return sub_1000473EC;
}

void sub_1000473EC(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(int *)(*(void *)a1 + 48);
  uint64_t v4 = *(void **)(*(void *)a1 + 32);
  uint64_t v5 = *(void **)(*(void *)a1 + 40);
  uint64_t v6 = *(void *)(*(void *)a1 + 16);
  uint64_t v7 = *(void *)(*(void *)a1 + 24);
  uint64_t v8 = *(void **)(*(void *)a1 + 8);
  uint64_t v9 = **(void **)a1 + v3;
  if (a2)
  {
    sub_100045A78(*(void *)(*(void *)a1 + 40), (uint64_t)v4, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions);
    sub_100010360(v9, &qword_100209FE8);
    sub_1000457D0((uint64_t)v4, v9, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
    sub_10004562C((uint64_t)v5, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions);
  }
  else
  {
    sub_100010360(**(void **)a1 + v3, &qword_100209FE8);
    sub_1000457D0((uint64_t)v5, v9, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
  }
  free(v5);
  free(v4);
  free(v8);
  free(v2);
}

BOOL Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary.hasPostResponseActions.getter()
{
  uint64_t v1 = sub_100003918(&qword_100209FE8);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(0);
  sub_10003282C(v0 + *(int *)(v5 + 24), (uint64_t)v4, &qword_100209FE8);
  uint64_t v6 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(0);
  BOOL v7 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 1, v6) != 1;
  sub_100010360((uint64_t)v4, &qword_100209FE8);
  return v7;
}

Swift::Void __swiftcall Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary.clearPostResponseActions()()
{
  uint64_t v1 = v0
     + *(int *)(type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(0)
              + 24);
  sub_100010360(v1, &qword_100209FE8);
  uint64_t v2 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(0);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100046CEC(type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary, a1);
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary.unknownFields.setter(uint64_t a1)
{
  return sub_100046D84(a1, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary);
}

uint64_t (*Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary.unknownFields.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions.requestDiagnostics.getter()
{
  return *v0;
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions.requestDiagnostics.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100046CEC(type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions, a1);
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions.unknownFields.setter(uint64_t a1)
{
  return sub_100046D84(a1, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions);
}

uint64_t (*Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions.unknownFields.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeResponse.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_1000477D4(type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type, (void (*)(void))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse, a1);
}

uint64_t sub_1000477D4@<X0>(uint64_t (*a1)(void)@<X0>, void (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a3, 1, 1, v5);
  a2(0);
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

void *Proto_PrivateCloudCompute_PrivateCloudComputeRequest.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_PrivateCloudCompute_PrivateCloudComputeRequest.protoMessageName;
}

unint64_t static Proto_PrivateCloudCompute_PrivateCloudComputeRequest.protoMessageName.getter()
{
  return 0xD00000000000003FLL;
}

uint64_t sub_100047880()
{
  uint64_t v0 = sub_1001C0160();
  sub_100044F74(v0, static Proto_PrivateCloudCompute_PrivateCloudComputeRequest._protobuf_nameMap);
  sub_10000D978(v0, (uint64_t)static Proto_PrivateCloudCompute_PrivateCloudComputeRequest._protobuf_nameMap);
  sub_100003918(&qword_100209FB8);
  uint64_t v1 = (int *)(sub_100003918(&qword_100209FC0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001CD7D0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "application_payload";
  *(void *)(v6 + 8) = 19;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v8 = sub_1001C0130();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 3;
  *(void *)uint64_t v10 = "auth_token";
  *((void *)v10 + 1) = 10;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 4;
  *(void *)uint64_t v11 = "final_message";
  *(void *)(v11 + 8) = 13;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_1001C0140();
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeRequest._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_1002077E8, (uint64_t)static Proto_PrivateCloudCompute_PrivateCloudComputeRequest._protobuf_nameMap);
}

uint64_t static Proto_PrivateCloudCompute_PrivateCloudComputeRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_1002077E8, (uint64_t)static Proto_PrivateCloudCompute_PrivateCloudComputeRequest._protobuf_nameMap, a1);
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = sub_1001BFF00();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 4:
          sub_100048130(v5, a1, a2, a3);
          break;
        case 3:
          sub_100047BBC(v5, a1, a2, a3);
          break;
        case 1:
          sub_100049BBC(a1, v5, a2, a3, &qword_100207FE0, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type, 0);
          break;
      }
      uint64_t result = sub_1001BFF00();
    }
  }
  return result;
}

uint64_t sub_100047BBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v56 = a4;
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  uint64_t v5 = type metadata accessor for Proto_PrivateCloudCompute_AuthToken(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = __chkstk_darwin(v5, v7);
  uint64_t v48 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v10);
  uint64_t v51 = (char *)&v44 - v11;
  uint64_t v12 = sub_100003918(&qword_100207FE0);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v22);
  uint64_t v24 = (char *)&v44 - v23;
  uint64_t v25 = sub_100003918(&qword_10020A600);
  uint64_t v27 = __chkstk_darwin(v25 - 8, v26);
  uint64_t v49 = (uint64_t)&v44 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v29);
  uint64_t v31 = (char *)&v44 - v30;
  uint64_t v50 = v6;
  uint64_t v32 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v53 = v5;
  uint64_t v33 = v5;
  uint64_t v34 = v32;
  v32((char *)&v44 - v30, 1, 1, v33);
  uint64_t v47 = a1;
  sub_10003282C(a1, (uint64_t)v15, &qword_100207FE0);
  uint64_t v46 = v17;
  int v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
  if (v35 == 1)
  {
    sub_100010360((uint64_t)v15, &qword_100207FE0);
    uint64_t v36 = v16;
  }
  else
  {
    id v45 = v34;
    uint64_t v37 = (uint64_t)v51;
    sub_1000457D0((uint64_t)v15, (uint64_t)v24, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type);
    sub_1000457D0((uint64_t)v24, (uint64_t)v21, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type);
    uint64_t v36 = v16;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_100010360((uint64_t)v31, &qword_10020A600);
      sub_1000457D0((uint64_t)v21, v37, type metadata accessor for Proto_PrivateCloudCompute_AuthToken);
      sub_1000457D0(v37, (uint64_t)v31, type metadata accessor for Proto_PrivateCloudCompute_AuthToken);
      uint64_t v38 = v53;
      v45(v31, 0, 1, v53);
      goto LABEL_7;
    }
    sub_10004562C((uint64_t)v21, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type);
  }
  uint64_t v38 = v53;
LABEL_7:
  uint64_t v39 = v52;
  sub_10004E420(&qword_10020A070, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_AuthToken);
  sub_1001BFFE0();
  if (v39) {
    return sub_100010360((uint64_t)v31, &qword_10020A600);
  }
  uint64_t v41 = v49;
  sub_10003282C((uint64_t)v31, v49, &qword_10020A600);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v41, 1, v38) == 1)
  {
    sub_100010360((uint64_t)v31, &qword_10020A600);
    return sub_100010360(v41, &qword_10020A600);
  }
  else
  {
    uint64_t v42 = v48;
    sub_1000457D0(v41, v48, type metadata accessor for Proto_PrivateCloudCompute_AuthToken);
    if (v35 != 1) {
      sub_1001BFF10();
    }
    sub_100010360((uint64_t)v31, &qword_10020A600);
    uint64_t v43 = v47;
    sub_100010360(v47, &qword_100207FE0);
    sub_1000457D0(v42, v43, type metadata accessor for Proto_PrivateCloudCompute_AuthToken);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v36);
  }
}

uint64_t sub_100048130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v56 = a4;
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  uint64_t v5 = type metadata accessor for Proto_PrivateCloudCompute_FinalMessage(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = __chkstk_darwin(v5, v7);
  uint64_t v48 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v10);
  uint64_t v51 = (char *)&v44 - v11;
  uint64_t v12 = sub_100003918(&qword_100207FE0);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v22);
  uint64_t v24 = (char *)&v44 - v23;
  uint64_t v25 = sub_100003918(&qword_10020A608);
  uint64_t v27 = __chkstk_darwin(v25 - 8, v26);
  uint64_t v49 = (uint64_t)&v44 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v29);
  uint64_t v31 = (char *)&v44 - v30;
  uint64_t v50 = v6;
  uint64_t v32 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v53 = v5;
  uint64_t v33 = v5;
  uint64_t v34 = v32;
  v32((char *)&v44 - v30, 1, 1, v33);
  uint64_t v47 = a1;
  sub_10003282C(a1, (uint64_t)v15, &qword_100207FE0);
  uint64_t v46 = v17;
  int v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
  if (v35 == 1)
  {
    sub_100010360((uint64_t)v15, &qword_100207FE0);
    uint64_t v36 = v16;
  }
  else
  {
    id v45 = v34;
    uint64_t v37 = (uint64_t)v51;
    sub_1000457D0((uint64_t)v15, (uint64_t)v24, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type);
    sub_1000457D0((uint64_t)v24, (uint64_t)v21, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type);
    uint64_t v36 = v16;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_100010360((uint64_t)v31, &qword_10020A608);
      sub_1000457D0((uint64_t)v21, v37, type metadata accessor for Proto_PrivateCloudCompute_FinalMessage);
      sub_1000457D0(v37, (uint64_t)v31, type metadata accessor for Proto_PrivateCloudCompute_FinalMessage);
      uint64_t v38 = v53;
      v45(v31, 0, 1, v53);
      goto LABEL_7;
    }
    sub_10004562C((uint64_t)v21, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type);
  }
  uint64_t v38 = v53;
LABEL_7:
  uint64_t v39 = v52;
  sub_10004E420(&qword_10020A088, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_FinalMessage);
  sub_1001BFFE0();
  if (v39) {
    return sub_100010360((uint64_t)v31, &qword_10020A608);
  }
  uint64_t v41 = v49;
  sub_10003282C((uint64_t)v31, v49, &qword_10020A608);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v41, 1, v38) == 1)
  {
    sub_100010360((uint64_t)v31, &qword_10020A608);
    return sub_100010360(v41, &qword_10020A608);
  }
  else
  {
    uint64_t v42 = v48;
    sub_1000457D0(v41, v48, type metadata accessor for Proto_PrivateCloudCompute_FinalMessage);
    if (v35 != 1) {
      sub_1001BFF10();
    }
    sub_100010360((uint64_t)v31, &qword_10020A608);
    uint64_t v43 = v47;
    sub_100010360(v47, &qword_100207FE0);
    sub_1000457D0(v42, v43, type metadata accessor for Proto_PrivateCloudCompute_FinalMessage);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v36);
  }
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = sub_100003918(&qword_100207FE0);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(v3, (uint64_t)v11, &qword_100207FE0);
  uint64_t v12 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12) == 1) {
    goto LABEL_9;
  }
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_10004562C((uint64_t)v11, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type);
    uint64_t result = sub_10004A54C(v3, a1, a2, a3, &qword_100207FE0, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type);
    if (v4) {
      return result;
    }
    goto LABEL_9;
  }
  if (EnumCaseMultiPayload == 1) {
    sub_100048894(v3);
  }
  else {
    sub_100048AB8(v3);
  }
  uint64_t result = sub_10004562C((uint64_t)v11, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type);
  if (!v4)
  {
LABEL_9:
    type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest(0);
    return sub_1001BFE40();
  }
  return result;
}

uint64_t sub_100048894(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_100207FE0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_PrivateCloudCompute_AuthToken(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(a1, (uint64_t)v5, &qword_100207FE0);
  uint64_t v10 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_100010360((uint64_t)v5, &qword_100207FE0);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1000457D0((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_PrivateCloudCompute_AuthToken);
    sub_10004E420(&qword_10020A070, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_AuthToken);
    sub_1001C0120();
    return sub_10004562C((uint64_t)v9, type metadata accessor for Proto_PrivateCloudCompute_AuthToken);
  }
  uint64_t result = sub_10004562C((uint64_t)v5, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type);
  __break(1u);
  return result;
}

uint64_t sub_100048AB8(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_100207FE0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_PrivateCloudCompute_FinalMessage(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(a1, (uint64_t)v5, &qword_100207FE0);
  uint64_t v10 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_100010360((uint64_t)v5, &qword_100207FE0);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_1000457D0((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_PrivateCloudCompute_FinalMessage);
    sub_10004E420(&qword_10020A088, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_FinalMessage);
    sub_1001C0120();
    return sub_10004562C((uint64_t)v9, type metadata accessor for Proto_PrivateCloudCompute_FinalMessage);
  }
  uint64_t result = sub_10004562C((uint64_t)v5, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type);
  __break(1u);
  return result;
}

Swift::Int Proto_PrivateCloudCompute_PrivateCloudComputeRequest.hashValue.getter()
{
  return sub_10004BD7C((void (*)(void))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest, &qword_100209FF0, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest);
}

uint64_t sub_100048D28@<X0>(uint64_t a1@<X8>)
{
  return sub_10004AAA4(type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type, a1);
}

uint64_t sub_100048D48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_PrivateCloudCompute_PrivateCloudComputeRequest.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_100048D60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_PrivateCloudCompute_PrivateCloudComputeRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_100048D78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10004E420(&qword_10020A5E0, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100048DF4@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_1002077E8, (uint64_t)static Proto_PrivateCloudCompute_PrivateCloudComputeRequest._protobuf_nameMap, a1);
}

uint64_t sub_100048E18(uint64_t a1)
{
  uint64_t v2 = sub_10004E420(&qword_10020A058, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100048E84()
{
  sub_10004E420(&qword_10020A058, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest);
  return sub_1001C0050();
}

void *Proto_PrivateCloudCompute_AuthToken.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_PrivateCloudCompute_AuthToken.protoMessageName;
}

unint64_t static Proto_PrivateCloudCompute_AuthToken.protoMessageName.getter()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_100048F28()
{
  uint64_t v0 = sub_1001C0160();
  sub_100044F74(v0, static Proto_PrivateCloudCompute_AuthToken._protobuf_nameMap);
  sub_10000D978(v0, (uint64_t)static Proto_PrivateCloudCompute_AuthToken._protobuf_nameMap);
  sub_100003918(&qword_100209FB8);
  uint64_t v1 = (int *)(sub_100003918(&qword_100209FC0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001CD7F0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "token_granting_token";
  *(void *)(v6 + 8) = 20;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v8 = sub_1001C0130();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "ott_salt";
  *((void *)v10 + 1) = 8;
  v10[16] = 2;
  v9();
  return sub_1001C0140();
}

uint64_t Proto_PrivateCloudCompute_AuthToken._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_1002077F0, (uint64_t)static Proto_PrivateCloudCompute_AuthToken._protobuf_nameMap);
}

uint64_t static Proto_PrivateCloudCompute_AuthToken._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_1002077F0, (uint64_t)static Proto_PrivateCloudCompute_AuthToken._protobuf_nameMap, a1);
}

uint64_t Proto_PrivateCloudCompute_AuthToken.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_1001BFF00();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2 || result == 1) {
        sub_1001BFF60();
      }
      uint64_t result = sub_1001BFF00();
    }
  }
  return result;
}

uint64_t Proto_PrivateCloudCompute_AuthToken.traverse<A>(visitor:)()
{
  uint64_t v2 = *v0;
  unint64_t v3 = v0[1];
  switch(v3 >> 62)
  {
    case 1uLL:
      if ((int)v2 != v2 >> 32) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 2uLL:
      if (*(void *)(v2 + 16) != *(void *)(v2 + 24)) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 3uLL:
      goto LABEL_8;
    default:
      if ((v3 & 0xFF000000000000) == 0) {
        goto LABEL_8;
      }
LABEL_7:
      uint64_t result = sub_1001C00C0();
      if (!v1)
      {
LABEL_8:
        uint64_t v5 = v0[2];
        unint64_t v6 = v0[3];
        switch(v6 >> 62)
        {
          case 1uLL:
            if ((int)v5 != v5 >> 32) {
              goto LABEL_14;
            }
            goto LABEL_15;
          case 2uLL:
            if (*(void *)(v5 + 16) != *(void *)(v5 + 24)) {
              goto LABEL_14;
            }
            goto LABEL_15;
          case 3uLL:
            goto LABEL_15;
          default:
            if ((v6 & 0xFF000000000000) == 0) {
              goto LABEL_15;
            }
LABEL_14:
            uint64_t result = sub_1001C00C0();
            if (!v1)
            {
LABEL_15:
              type metadata accessor for Proto_PrivateCloudCompute_AuthToken(0);
              uint64_t result = sub_1001BFE40();
            }
            break;
        }
      }
      return result;
  }
}

Swift::Int Proto_PrivateCloudCompute_AuthToken.hashValue.getter()
{
  return sub_10004BD7C((void (*)(void))type metadata accessor for Proto_PrivateCloudCompute_AuthToken, &qword_100209FF8, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_AuthToken);
}

uint64_t sub_100049378()
{
  return Proto_PrivateCloudCompute_AuthToken.decodeMessage<A>(decoder:)();
}

uint64_t sub_100049390()
{
  return Proto_PrivateCloudCompute_AuthToken.traverse<A>(visitor:)();
}

uint64_t sub_1000493A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10004E420(&qword_10020A5D8, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_AuthToken);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100049424@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_1002077F0, (uint64_t)static Proto_PrivateCloudCompute_AuthToken._protobuf_nameMap, a1);
}

uint64_t sub_100049448(uint64_t a1)
{
  uint64_t v2 = sub_10004E420(&qword_10020A070, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_AuthToken);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000494B4()
{
  sub_10004E420(&qword_10020A070, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_AuthToken);
  return sub_1001C0050();
}

void *Proto_PrivateCloudCompute_FinalMessage.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_PrivateCloudCompute_FinalMessage.protoMessageName;
}

unint64_t static Proto_PrivateCloudCompute_FinalMessage.protoMessageName.getter()
{
  return 0xD000000000000031;
}

uint64_t sub_100049558()
{
  uint64_t v0 = sub_1001C0160();
  sub_100044F74(v0, static Proto_PrivateCloudCompute_FinalMessage._protobuf_nameMap);
  sub_10000D978(v0, (uint64_t)static Proto_PrivateCloudCompute_FinalMessage._protobuf_nameMap);
  return sub_1001C0150();
}

uint64_t Proto_PrivateCloudCompute_FinalMessage._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_1002077F8, (uint64_t)static Proto_PrivateCloudCompute_FinalMessage._protobuf_nameMap);
}

uint64_t static Proto_PrivateCloudCompute_FinalMessage._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_1002077F8, (uint64_t)static Proto_PrivateCloudCompute_FinalMessage._protobuf_nameMap, a1);
}

uint64_t Proto_PrivateCloudCompute_FinalMessage.decodeMessage<A>(decoder:)()
{
  do
    uint64_t result = sub_1001BFF00();
  while (!v0 && (v2 & 1) == 0);
  return result;
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.NodeSelected.traverse<A>(visitor:)()
{
  return sub_1001BFE40();
}

Swift::Int Proto_PrivateCloudCompute_FinalMessage.hashValue.getter()
{
  return sub_10004BD7C((void (*)(void))type metadata accessor for Proto_PrivateCloudCompute_FinalMessage, &qword_10020A000, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_FinalMessage);
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations.decodeMessage<A>(decoder:)()
{
  return Proto_PrivateCloudCompute_FinalMessage.decodeMessage<A>(decoder:)();
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations.traverse<A>(visitor:)()
{
  return Proto_Ropes_HttpService_InvokeResponse.NodeSelected.traverse<A>(visitor:)();
}

uint64_t sub_1000496C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10004E420(&qword_10020A5D0, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_FinalMessage);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10004973C@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_1002077F8, (uint64_t)static Proto_PrivateCloudCompute_FinalMessage._protobuf_nameMap, a1);
}

uint64_t sub_100049760(uint64_t a1)
{
  uint64_t v2 = sub_10004E420(&qword_10020A088, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_FinalMessage);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000497CC()
{
  sub_10004E420(&qword_10020A088, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_FinalMessage);
  return sub_1001C0050();
}

void *Proto_PrivateCloudCompute_PrivateCloudComputeResponse.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_PrivateCloudCompute_PrivateCloudComputeResponse.protoMessageName;
}

unint64_t static Proto_PrivateCloudCompute_PrivateCloudComputeResponse.protoMessageName.getter()
{
  return 0xD000000000000040;
}

uint64_t sub_100049870()
{
  uint64_t v0 = sub_1001C0160();
  sub_100044F74(v0, static Proto_PrivateCloudCompute_PrivateCloudComputeResponse._protobuf_nameMap);
  sub_10000D978(v0, (uint64_t)static Proto_PrivateCloudCompute_PrivateCloudComputeResponse._protobuf_nameMap);
  sub_100003918(&qword_100209FB8);
  uint64_t v1 = (int *)(sub_100003918(&qword_100209FC0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001CD7D0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "response_uuid";
  *(void *)(v6 + 8) = 13;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v8 = sub_1001C0130();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "response_payload";
  *((void *)v10 + 1) = 16;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 3;
  *(void *)uint64_t v11 = "response_summary";
  *(void *)(v11 + 8) = 16;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_1001C0140();
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeResponse._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_100207800, (uint64_t)static Proto_PrivateCloudCompute_PrivateCloudComputeResponse._protobuf_nameMap);
}

uint64_t static Proto_PrivateCloudCompute_PrivateCloudComputeResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_100207800, (uint64_t)static Proto_PrivateCloudCompute_PrivateCloudComputeResponse._protobuf_nameMap, a1);
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeResponse.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = sub_1001BFF00();
  if (!v4)
  {
    while (1)
    {
      if (v10) {
        return result;
      }
      switch(result)
      {
        case 3:
          sub_100049DCC(v5, a1, a2, a3);
          goto LABEL_5;
        case 2:
          uint64_t v11 = a1;
          uint64_t v12 = v5;
          uint64_t v13 = a2;
          uint64_t v14 = a3;
          int v15 = 1;
          break;
        case 1:
          uint64_t v11 = a1;
          uint64_t v12 = v5;
          uint64_t v13 = a2;
          uint64_t v14 = a3;
          int v15 = 0;
          break;
        default:
          goto LABEL_5;
      }
      sub_100049BBC(v11, v12, v13, v14, &qword_100209FE0, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type, v15);
LABEL_5:
      uint64_t result = sub_1001BFF00();
    }
  }
  return result;
}

uint64_t sub_100049BBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(void), int a7)
{
  int v31 = a7;
  uint64_t v13 = sub_100003918(a5);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v30 = xmmword_1001CE850;
  sub_1001BFF50();
  unint64_t v18 = *((void *)&v30 + 1);
  uint64_t result = v30;
  if (v7) {
    return sub_100007918(v30, *((unint64_t *)&v30 + 1));
  }
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v29 = (uint64_t *)a2;
  if (*((void *)&v30 + 1) >> 60 != 15)
  {
    uint64_t v19 = v30;
    sub_10003282C((uint64_t)v29, (uint64_t)v16, a5);
    uint64_t v20 = a6(0);
    uint64_t v25 = *(void *)(v20 - 8);
    uint64_t v26 = v20;
    int v21 = (*(uint64_t (**)(char *, uint64_t))(v25 + 48))(v16, 1);
    sub_100007B14(v19, v18);
    sub_100010360((uint64_t)v16, a5);
    if (v21 != 1) {
      sub_1001BFF10();
    }
    sub_100007918(v19, v18);
    uint64_t v22 = v29;
    sub_100010360((uint64_t)v29, a5);
    *uint64_t v22 = v19;
    v22[1] = v18;
    uint64_t v23 = v26;
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v23);
  }
  return result;
}

uint64_t sub_100049DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v56 = a4;
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  uint64_t v5 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = __chkstk_darwin(v5, v7);
  uint64_t v48 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v10);
  uint64_t v51 = (char *)&v44 - v11;
  uint64_t v12 = sub_100003918(&qword_100209FE0);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v19 = __chkstk_darwin(v16, v18);
  int v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v22);
  uint64_t v24 = (char *)&v44 - v23;
  uint64_t v25 = sub_100003918(&qword_10020A5F0);
  uint64_t v27 = __chkstk_darwin(v25 - 8, v26);
  uint64_t v49 = (uint64_t)&v44 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v29);
  int v31 = (char *)&v44 - v30;
  uint64_t v50 = v6;
  uint64_t v32 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v53 = v5;
  uint64_t v33 = v5;
  uint64_t v34 = v32;
  v32((char *)&v44 - v30, 1, 1, v33);
  uint64_t v47 = a1;
  sub_10003282C(a1, (uint64_t)v15, &qword_100209FE0);
  uint64_t v46 = v17;
  int v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
  if (v35 == 1)
  {
    sub_100010360((uint64_t)v15, &qword_100209FE0);
    uint64_t v36 = v16;
  }
  else
  {
    id v45 = v34;
    uint64_t v37 = (uint64_t)v51;
    sub_1000457D0((uint64_t)v15, (uint64_t)v24, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type);
    sub_1000457D0((uint64_t)v24, (uint64_t)v21, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type);
    uint64_t v36 = v16;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_100010360((uint64_t)v31, &qword_10020A5F0);
      sub_1000457D0((uint64_t)v21, v37, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary);
      sub_1000457D0(v37, (uint64_t)v31, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary);
      uint64_t v38 = v53;
      v45(v31, 0, 1, v53);
      goto LABEL_7;
    }
    sub_10004562C((uint64_t)v21, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type);
  }
  uint64_t v38 = v53;
LABEL_7:
  uint64_t v39 = v52;
  sub_10004E420(&qword_10020A0B8, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary);
  sub_1001BFFE0();
  if (v39) {
    return sub_100010360((uint64_t)v31, &qword_10020A5F0);
  }
  uint64_t v41 = v49;
  sub_10003282C((uint64_t)v31, v49, &qword_10020A5F0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v41, 1, v38) == 1)
  {
    sub_100010360((uint64_t)v31, &qword_10020A5F0);
    return sub_100010360(v41, &qword_10020A5F0);
  }
  else
  {
    uint64_t v42 = v48;
    sub_1000457D0(v41, v48, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary);
    if (v35 != 1) {
      sub_1001BFF10();
    }
    sub_100010360((uint64_t)v31, &qword_10020A5F0);
    uint64_t v43 = v47;
    sub_100010360(v47, &qword_100209FE0);
    sub_1000457D0(v42, v43, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v36);
  }
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeResponse.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = sub_100003918(&qword_100209FE0);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(v3, (uint64_t)v11, &qword_100209FE0);
  uint64_t v12 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12) == 1) {
    goto LABEL_7;
  }
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_10004562C((uint64_t)v11, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type);
    uint64_t result = sub_10004A54C(v3, a1, a2, a3, &qword_100209FE0, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type);
LABEL_6:
    if (v4) {
      return result;
    }
    goto LABEL_7;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_10004562C((uint64_t)v11, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type);
    uint64_t result = sub_10004A6B0(v3);
    goto LABEL_6;
  }
  sub_10004A81C(v3);
  uint64_t result = sub_10004562C((uint64_t)v11, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type);
  if (!v4)
  {
LABEL_7:
    type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse(0);
    return sub_1001BFE40();
  }
  return result;
}

uint64_t sub_10004A54C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  uint64_t v11 = sub_100003918(a5);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (uint64_t *)((char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10003282C(a1, (uint64_t)v14, a5);
  uint64_t v15 = a6(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15) == 1)
  {
    sub_100010360((uint64_t)v14, a5);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    uint64_t v16 = *v14;
    unint64_t v17 = v14[1];
    sub_1001C00C0();
    return sub_10000792C(v16, v17);
  }
  uint64_t result = sub_10004562C((uint64_t)v14, a7);
  __break(1u);
  return result;
}

uint64_t sub_10004A6B0(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_100209FE0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (uint64_t *)((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10003282C(a1, (uint64_t)v5, &qword_100209FE0);
  uint64_t v6 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6) == 1)
  {
    sub_100010360((uint64_t)v5, &qword_100209FE0);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = *v5;
    unint64_t v7 = v5[1];
    sub_1001C00C0();
    return sub_10000792C(v8, v7);
  }
  uint64_t result = sub_10004562C((uint64_t)v5, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type);
  __break(1u);
  return result;
}

uint64_t sub_10004A81C(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_100209FE0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(a1, (uint64_t)v5, &qword_100209FE0);
  uint64_t v10 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_100010360((uint64_t)v5, &qword_100209FE0);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_1000457D0((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary);
    sub_10004E420(&qword_10020A0B8, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary);
    sub_1001C0120();
    return sub_10004562C((uint64_t)v9, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary);
  }
  uint64_t result = sub_10004562C((uint64_t)v5, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type);
  __break(1u);
  return result;
}

Swift::Int Proto_PrivateCloudCompute_PrivateCloudComputeResponse.hashValue.getter()
{
  return sub_10004BD7C((void (*)(void))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse, &qword_10020A008, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse);
}

uint64_t sub_10004AA8C@<X0>(uint64_t a1@<X8>)
{
  return sub_10004AAA4(type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type, a1);
}

uint64_t sub_10004AAA4@<X0>(uint64_t (*a1)(void)@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(a2, 1, 1, v3);
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t sub_10004AB18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_PrivateCloudCompute_PrivateCloudComputeResponse.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_10004AB30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_PrivateCloudCompute_PrivateCloudComputeResponse.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_10004AB48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10004E420(&qword_10020A5C8, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10004ABC4@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_100207800, (uint64_t)static Proto_PrivateCloudCompute_PrivateCloudComputeResponse._protobuf_nameMap, a1);
}

uint64_t sub_10004ABE8(uint64_t a1)
{
  uint64_t v2 = sub_10004E420(&qword_10020A0A0, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10004AC54()
{
  sub_10004E420(&qword_10020A0A0, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse);
  return sub_1001C0050();
}

uint64_t sub_10004ACD0()
{
  uint64_t v0 = sub_1001C0160();
  sub_100044F74(v0, static Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseStatus._protobuf_nameMap);
  sub_10000D978(v0, (uint64_t)static Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseStatus._protobuf_nameMap);
  sub_100003918(&qword_100209FB8);
  uint64_t v1 = (int *)(sub_100003918(&qword_100209FC0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001CE860;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 0;
  *(void *)unint64_t v6 = "OK";
  *(void *)(v6 + 8) = 2;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_1001C0130();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 1;
  *(void *)unint64_t v10 = "UNAUTHENTICATED";
  *(void *)(v10 + 8) = 15;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 2;
  *(void *)uint64_t v12 = "INTERNAL_ERROR";
  *((void *)v12 + 1) = 14;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 3;
  *(void *)uint64_t v14 = "INVALID_REQUEST";
  *((void *)v14 + 1) = 15;
  v14[16] = 2;
  v9();
  return sub_1001C0140();
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseStatus._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_100207808, (uint64_t)static Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseStatus._protobuf_nameMap);
}

uint64_t static Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseStatus._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_100207808, (uint64_t)static Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseStatus._protobuf_nameMap, a1);
}

uint64_t sub_10004AF48@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_100207808, (uint64_t)static Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseStatus._protobuf_nameMap, a1);
}

void sub_10004AF6C(uint64_t a1)
{
}

void *Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary.protoMessageName.unsafeMutableAddressor()
{
  if (qword_100207810 != -1) {
    swift_once();
  }
  return static Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary.protoMessageName;
}

uint64_t static Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary.protoMessageName.getter()
{
  return sub_10004BA2C(&qword_100207810, static Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary.protoMessageName);
}

uint64_t sub_10004B008()
{
  uint64_t v0 = sub_1001C0160();
  sub_100044F74(v0, static Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary._protobuf_nameMap);
  sub_10000D978(v0, (uint64_t)static Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary._protobuf_nameMap);
  sub_100003918(&qword_100209FB8);
  uint64_t v1 = (int *)(sub_100003918(&qword_100209FC0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001CD7F0;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *unint64_t v5 = 2;
  *(void *)unint64_t v6 = "post_response_actions";
  *(void *)(v6 + 8) = 21;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v8 = sub_1001C0130();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 3;
  *(void *)unint64_t v10 = "response_status";
  *((void *)v10 + 1) = 15;
  v10[16] = 2;
  v9();
  return sub_1001C0140();
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_100207818, (uint64_t)static Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary._protobuf_nameMap);
}

uint64_t static Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_100207818, (uint64_t)static Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary._protobuf_nameMap, a1);
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_1001BFF00();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 3)
      {
        sub_10004E468();
        sub_1001BFF40();
      }
      else if (result == 2)
      {
        sub_10004B2E4();
      }
      uint64_t result = sub_1001BFF00();
    }
  }
  return result;
}

uint64_t sub_10004B2E4()
{
  return sub_1001BFFE0();
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_10004B468((uint64_t)v3, a1, a2, a3);
  if (!v4)
  {
    if (*v3)
    {
      sub_10004E468();
      sub_1001C00B0();
    }
    type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(0);
    return sub_1001BFE40();
  }
  return result;
}

uint64_t sub_10004B468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_100003918(&qword_100209FE8);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(0);
  sub_10003282C(a1 + *(int *)(v14 + 24), (uint64_t)v8, &qword_100209FE8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_100010360((uint64_t)v8, &qword_100209FE8);
  }
  sub_1000457D0((uint64_t)v8, (uint64_t)v13, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions);
  sub_10004E420(&qword_10020A0D0, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions);
  sub_1001C0120();
  return sub_10004562C((uint64_t)v13, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions);
}

Swift::Int Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary.hashValue.getter()
{
  return sub_10004BD7C((void (*)(void))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary, &qword_10020A018, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary);
}

uint64_t sub_10004B6B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v4 = a2 + *(int *)(a1 + 24);
  uint64_t v5 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  return v6(v4, 1, 1, v5);
}

uint64_t sub_10004B744(uint64_t a1, uint64_t a2)
{
  return sub_10004BE50(a1, a2, &qword_100207810, static Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary.protoMessageName);
}

uint64_t sub_10004B76C()
{
  return Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary.decodeMessage<A>(decoder:)();
}

uint64_t sub_10004B784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_10004B79C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10004E420(&qword_10020A5C0, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10004B818@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_100207818, (uint64_t)static Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary._protobuf_nameMap, a1);
}

uint64_t sub_10004B83C(uint64_t a1)
{
  uint64_t v2 = sub_10004E420(&qword_10020A0B8, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10004B8A8()
{
  sub_10004E420(&qword_10020A0B8, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary);
  return sub_1001C0050();
}

void sub_10004B924(uint64_t a1)
{
}

void sub_10004B94C(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  v7._countAndFlagsBits = a2;
  v7._object = a3;
  sub_1001C0D00(v7);
  *a4 = 0xD000000000000040;
  *a5 = 0x80000001001C3BF0;
}

void *Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions.protoMessageName.unsafeMutableAddressor()
{
  if (qword_100207820 != -1) {
    swift_once();
  }
  return static Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions.protoMessageName;
}

uint64_t static Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions.protoMessageName.getter()
{
  return sub_10004BA2C(&qword_100207820, static Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions.protoMessageName);
}

uint64_t sub_10004BA2C(void *a1, uint64_t *a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_10004BA80()
{
  uint64_t v0 = sub_1001C0160();
  sub_100044F74(v0, static Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions._protobuf_nameMap);
  sub_10000D978(v0, (uint64_t)static Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions._protobuf_nameMap);
  sub_100003918(&qword_100209FB8);
  uint64_t v1 = (int *)(sub_100003918(&qword_100209FC0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1001CC760;
  unint64_t v4 = v3 + v2 + v1[14];
  *(void *)(v3 + v2) = 1;
  *(void *)unint64_t v4 = "request_diagnostics";
  *(void *)(v4 + 8) = 19;
  *(unsigned char *)(v4 + 16) = 2;
  uint64_t v5 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v6 = sub_1001C0130();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v4, v5, v6);
  return sub_1001C0140();
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_100207828, (uint64_t)static Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions._protobuf_nameMap);
}

uint64_t static Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_100207828, (uint64_t)static Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions._protobuf_nameMap, a1);
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions.decodeMessage<A>(decoder:)()
{
  while (1)
  {
    uint64_t result = sub_1001BFF00();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 1) {
      sub_1001BFF30();
    }
  }
  return result;
}

uint64_t Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions.traverse<A>(visitor:)()
{
  if (*v0 != 1 || (uint64_t result = sub_1001C00A0(), !v1))
  {
    type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(0);
    return sub_1001BFE40();
  }
  return result;
}

Swift::Int Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions.hashValue.getter()
{
  return sub_10004BD7C((void (*)(void))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions, &qword_10020A020, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions);
}

Swift::Int sub_10004BD7C(void (*a1)(void), unint64_t *a2, void (*a3)(uint64_t))
{
  return sub_1001C1990();
}

uint64_t sub_10004BE04@<X0>(unsigned char *a1@<X8>)
{
  *a1 = 0;
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t sub_10004BE28(uint64_t a1, uint64_t a2)
{
  return sub_10004BE50(a1, a2, &qword_100207820, static Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions.protoMessageName);
}

uint64_t sub_10004BE50(uint64_t a1, uint64_t a2, void *a3, uint64_t *a4)
{
  if (*a3 != -1) {
    swift_once();
  }
  uint64_t v5 = *a4;
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_10004BEA8()
{
  return Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions.decodeMessage<A>(decoder:)();
}

uint64_t sub_10004BEC0()
{
  return Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions.traverse<A>(visitor:)();
}

uint64_t sub_10004BED8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10004E420(&qword_10020A5B8, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10004BF54@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_100207828, (uint64_t)static Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions._protobuf_nameMap, a1);
}

uint64_t sub_10004BF78(uint64_t a1)
{
  uint64_t v2 = sub_10004E420(&qword_10020A0D0, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10004BFE4()
{
  sub_10004E420(&qword_10020A0D0, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions);
  return sub_1001C0050();
}

uint64_t sub_10004C060@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  Swift::String v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_100007B14(a2, a3);
      uint64_t v10 = (char *)sub_1001BEE60();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_1001BEE90();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_1001BEE80();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x10004C2C4);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_10000792C(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      unint64_t v17 = (char *)sub_1001BEE60();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_1001BEE90();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_1001BEE80();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_10004C2D4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_10004C060((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_10004C3AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_1001BEE60();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_1001BEE90();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1001BEE80();
  sub_10004C060(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_10004C464(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x10004C6CCLL);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_100007B14(a3, a4);
                  sub_100007B14(a1, a2);
                  char v17 = sub_10004C3AC((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_10000792C(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_100007B14(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_10004C3AC(v21, v22, v20, a3, a4);
                  sub_10000792C(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_100007B14(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_100007B14(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_10004C2D4(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_10000792C(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t _s20privatecloudcomputed35Proto_PrivateCloudCompute_AuthTokenV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BFE60();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v12 = (char *)&v18 - v11;
  if ((sub_10004C464(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8)) & 1) != 0
    && (sub_10004C464(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a2 + 16), *(void *)(a2 + 24)) & 1) != 0)
  {
    uint64_t v13 = type metadata accessor for Proto_PrivateCloudCompute_AuthToken(0);
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v14(v12, a1 + *(int *)(v13 + 24), v4);
    v14(v9, a2 + *(int *)(v13 + 24), v4);
    sub_10004E420(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v15 = sub_1001C0BD0();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v9, v4);
    v16(v12, v4);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t _s20privatecloudcomputed026Proto_PrivateCloudCompute_cdE8ResponseV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BFE60();
  uint64_t v50 = *(void *)(v4 - 8);
  uint64_t v51 = v4;
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v49 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v8);
  uint64_t v48 = (char *)&v44 - v9;
  uint64_t v10 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v45 = (uint64_t)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100003918(&qword_10020A5E8);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100003918(&qword_100209FE0);
  uint64_t v21 = __chkstk_darwin(v19 - 8, v20);
  int v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v21, v24);
  char v27 = (char *)&v44 - v26;
  __chkstk_darwin(v25, v28);
  char v30 = (char *)&v44 - v29;
  uint64_t v46 = a1;
  sub_10003282C(a1, (uint64_t)&v44 - v29, &qword_100209FE0);
  uint64_t v47 = a2;
  sub_10003282C(a2, (uint64_t)v27, &qword_100209FE0);
  uint64_t v31 = (uint64_t)&v18[*(int *)(v15 + 56)];
  sub_10003282C((uint64_t)v30, (uint64_t)v18, &qword_100209FE0);
  sub_10003282C((uint64_t)v27, v31, &qword_100209FE0);
  uint64_t v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v32((uint64_t)v18, 1, v10) != 1)
  {
    sub_10003282C((uint64_t)v18, (uint64_t)v23, &qword_100209FE0);
    if (v32(v31, 1, v10) != 1)
    {
      uint64_t v33 = v45;
      sub_1000457D0(v31, v45, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type);
      char v34 = _s20privatecloudcomputed026Proto_PrivateCloudCompute_cdE8ResponseV10OneOf_TypeO21__derived_enum_equalsySbAE_AEtFZ_0((uint64_t)v23, v33);
      sub_10004562C(v33, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type);
      sub_100010360((uint64_t)v27, &qword_100209FE0);
      sub_100010360((uint64_t)v30, &qword_100209FE0);
      sub_10004562C((uint64_t)v23, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type);
      sub_100010360((uint64_t)v18, &qword_100209FE0);
      if (v34) {
        goto LABEL_8;
      }
LABEL_9:
      char v41 = 0;
      return v41 & 1;
    }
    sub_100010360((uint64_t)v27, &qword_100209FE0);
    sub_100010360((uint64_t)v30, &qword_100209FE0);
    sub_10004562C((uint64_t)v23, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type);
LABEL_6:
    sub_100010360((uint64_t)v18, &qword_10020A5E8);
    goto LABEL_9;
  }
  sub_100010360((uint64_t)v27, &qword_100209FE0);
  sub_100010360((uint64_t)v30, &qword_100209FE0);
  if (v32(v31, 1, v10) != 1) {
    goto LABEL_6;
  }
  sub_100010360((uint64_t)v18, &qword_100209FE0);
LABEL_8:
  uint64_t v35 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse(0);
  uint64_t v37 = v50;
  uint64_t v36 = v51;
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 16);
  uint64_t v39 = v48;
  v38(v48, v46 + *(int *)(v35 + 20), v51);
  uint64_t v40 = v49;
  v38(v49, v47 + *(int *)(v35 + 20), v36);
  sub_10004E420(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v41 = sub_1001C0BD0();
  uint64_t v42 = *(void (**)(char *, uint64_t))(v37 + 8);
  v42(v40, v36);
  v42(v39, v36);
  return v41 & 1;
}

uint64_t _s20privatecloudcomputed026Proto_PrivateCloudCompute_cdE8ResponseV10OneOf_TypeO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (uint64_t *)((char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type(0);
  uint64_t v10 = __chkstk_darwin(v8, v9);
  uint64_t v12 = (uint64_t *)((char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = __chkstk_darwin(v10, v13);
  uint64_t v16 = (uint64_t *)((char *)&v33 - v15);
  __chkstk_darwin(v14, v17);
  uint64_t v19 = (uint64_t *)((char *)&v33 - v18);
  uint64_t v20 = sub_100003918(&qword_10020A618);
  uint64_t v22 = __chkstk_darwin(v20 - 8, v21);
  uint64_t v24 = (char *)&v33 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = (uint64_t *)&v24[*(int *)(v22 + 56)];
  sub_100045A78(a1, (uint64_t)v24, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type);
  sub_100045A78(a2, (uint64_t)v25, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_100045A78((uint64_t)v24, (uint64_t)v19, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type);
    uint64_t v27 = *v19;
    unint64_t v28 = v19[1];
    if (!swift_getEnumCaseMultiPayload()) {
      goto LABEL_4;
    }
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_100045A78((uint64_t)v24, (uint64_t)v12, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_1000457D0((uint64_t)v25, (uint64_t)v7, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary);
      char v31 = _s20privatecloudcomputed026Proto_PrivateCloudCompute_cdE8ResponseV0F7SummaryV2eeoiySbAE_AEtFZ_0(v12, v7);
      sub_10004562C((uint64_t)v7, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary);
      sub_10004562C((uint64_t)v12, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary);
      goto LABEL_9;
    }
    sub_10004562C((uint64_t)v12, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary);
LABEL_11:
    sub_100010360((uint64_t)v24, &qword_10020A618);
    char v31 = 0;
    return v31 & 1;
  }
  sub_100045A78((uint64_t)v24, (uint64_t)v16, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type);
  uint64_t v27 = *v16;
  unint64_t v28 = v16[1];
  if (swift_getEnumCaseMultiPayload() != 1)
  {
LABEL_6:
    sub_10000792C(v27, v28);
    goto LABEL_11;
  }
LABEL_4:
  uint64_t v30 = *v25;
  unint64_t v29 = v25[1];
  char v31 = sub_10004C464(v27, v28, v30, v29);
  sub_10000792C(v30, v29);
  sub_10000792C(v27, v28);
LABEL_9:
  sub_10004562C((uint64_t)v24, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type);
  return v31 & 1;
}

uint64_t _s20privatecloudcomputed026Proto_PrivateCloudCompute_cdE8ResponseV0F7SummaryV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_1001BFE60();
  uint64_t v59 = *(void *)(v4 - 8);
  uint64_t v60 = v4;
  uint64_t v6 = __chkstk_darwin(v4, v5);
  char v58 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v8);
  uint64_t v57 = (char *)&v56 - v9;
  uint64_t v10 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (unsigned __int8 *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100003918(&qword_10020A610);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100003918(&qword_100209FE8);
  uint64_t v22 = __chkstk_darwin(v20 - 8, v21);
  int64_t v63 = (unsigned __int8 *)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v22, v24);
  uint64_t v27 = (char *)&v56 - v26;
  __chkstk_darwin(v25, v28);
  uint64_t v30 = (char *)&v56 - v29;
  uint64_t v31 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(0);
  uint64_t v32 = *(int *)(v31 + 24);
  uint64_t v61 = a1;
  uint64_t v33 = (uint64_t)a1 + v32;
  uint64_t v34 = v31;
  sub_10003282C(v33, (uint64_t)v30, &qword_100209FE8);
  uint64_t v35 = *(int *)(v34 + 24);
  uint64_t v62 = a2;
  sub_10003282C((uint64_t)a2 + v35, (uint64_t)v27, &qword_100209FE8);
  uint64_t v36 = (uint64_t)&v19[*(int *)(v16 + 56)];
  sub_10003282C((uint64_t)v30, (uint64_t)v19, &qword_100209FE8);
  sub_10003282C((uint64_t)v27, v36, &qword_100209FE8);
  uint64_t v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v37((uint64_t)v19, 1, v10) != 1)
  {
    char v41 = v63;
    sub_10003282C((uint64_t)v19, (uint64_t)v63, &qword_100209FE8);
    if (v37(v36, 1, v10) != 1)
    {
      uint64_t v46 = (uint64_t)v14;
      sub_1000457D0(v36, (uint64_t)v14, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions);
      if (*v41 == *v14)
      {
        uint64_t v47 = (uint64_t)v41;
        sub_10004E420(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        char v48 = sub_1001C0BD0();
        sub_10004562C(v46, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions);
        sub_100010360((uint64_t)v27, &qword_100209FE8);
        sub_100010360((uint64_t)v30, &qword_100209FE8);
        sub_10004562C(v47, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions);
        sub_100010360((uint64_t)v19, &qword_100209FE8);
        if ((v48 & 1) == 0) {
          goto LABEL_12;
        }
        goto LABEL_4;
      }
      sub_10004562C((uint64_t)v14, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions);
      sub_100010360((uint64_t)v27, &qword_100209FE8);
      sub_100010360((uint64_t)v30, &qword_100209FE8);
      sub_10004562C((uint64_t)v41, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions);
      uint64_t v43 = (uint64_t)v19;
      uint64_t v42 = &qword_100209FE8;
LABEL_11:
      sub_100010360(v43, v42);
      goto LABEL_12;
    }
    sub_100010360((uint64_t)v27, &qword_100209FE8);
    sub_100010360((uint64_t)v30, &qword_100209FE8);
    sub_10004562C((uint64_t)v41, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions);
LABEL_10:
    uint64_t v42 = &qword_10020A610;
    uint64_t v43 = (uint64_t)v19;
    goto LABEL_11;
  }
  sub_100010360((uint64_t)v27, &qword_100209FE8);
  sub_100010360((uint64_t)v30, &qword_100209FE8);
  if (v37(v36, 1, v10) != 1) {
    goto LABEL_10;
  }
  sub_100010360((uint64_t)v19, &qword_100209FE8);
LABEL_4:
  uint64_t v38 = v62;
  uint64_t v39 = *v61;
  uint64_t v40 = *v62;
  if (*((unsigned char *)v62 + 8) == 1)
  {
    switch(v40)
    {
      case 1:
        if (v39 == 1) {
          goto LABEL_25;
        }
        goto LABEL_12;
      case 2:
        if (v39 == 2) {
          goto LABEL_25;
        }
        goto LABEL_12;
      case 3:
        if (v39 == 3) {
          goto LABEL_25;
        }
        goto LABEL_12;
      default:
        if (!v39) {
          goto LABEL_25;
        }
        goto LABEL_12;
    }
  }
  if (v39 == v40)
  {
LABEL_25:
    uint64_t v50 = v59;
    uint64_t v49 = v60;
    uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v59 + 16);
    uint64_t v52 = v57;
    v51(v57, (char *)v61 + *(int *)(v34 + 20), v60);
    uint64_t v53 = (char *)v38 + *(int *)(v34 + 20);
    uint64_t v54 = v58;
    v51(v58, v53, v49);
    sub_10004E420(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v44 = sub_1001C0BD0();
    uint64_t v55 = *(void (**)(char *, uint64_t))(v50 + 8);
    v55(v54, v49);
    v55(v52, v49);
    return v44 & 1;
  }
LABEL_12:
  char v44 = 0;
  return v44 & 1;
}

uint64_t _s20privatecloudcomputed026Proto_PrivateCloudCompute_cdE8ResponseV04PostF7ActionsV2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4 = sub_1001BFE60();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v12 = (char *)&v18 - v11;
  if (*a1 == *a2)
  {
    uint64_t v14 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(0);
    uint64_t v15 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v5 + 16);
    v15(v12, &a1[*(int *)(v14 + 20)], v4);
    v15(v9, &a2[*(int *)(v14 + 20)], v4);
    sub_10004E420(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v13 = sub_1001C0BD0();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v9, v4);
    v16(v12, v4);
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t _s20privatecloudcomputed026Proto_PrivateCloudCompute_cdE7RequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BFE60();
  uint64_t v50 = *(void *)(v4 - 8);
  uint64_t v51 = v4;
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v49 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v8);
  char v48 = (char *)&v44 - v9;
  uint64_t v10 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v45 = (uint64_t)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100003918(&qword_10020A5F8);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100003918(&qword_100207FE0);
  uint64_t v21 = __chkstk_darwin(v19 - 8, v20);
  uint64_t v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v21, v24);
  uint64_t v27 = (char *)&v44 - v26;
  __chkstk_darwin(v25, v28);
  uint64_t v30 = (char *)&v44 - v29;
  uint64_t v46 = a1;
  sub_10003282C(a1, (uint64_t)&v44 - v29, &qword_100207FE0);
  uint64_t v47 = a2;
  sub_10003282C(a2, (uint64_t)v27, &qword_100207FE0);
  uint64_t v31 = (uint64_t)&v18[*(int *)(v15 + 56)];
  sub_10003282C((uint64_t)v30, (uint64_t)v18, &qword_100207FE0);
  sub_10003282C((uint64_t)v27, v31, &qword_100207FE0);
  uint64_t v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v32((uint64_t)v18, 1, v10) != 1)
  {
    sub_10003282C((uint64_t)v18, (uint64_t)v23, &qword_100207FE0);
    if (v32(v31, 1, v10) != 1)
    {
      uint64_t v33 = v45;
      sub_1000457D0(v31, v45, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type);
      char v34 = _s20privatecloudcomputed026Proto_PrivateCloudCompute_cdE7RequestV10OneOf_TypeO21__derived_enum_equalsySbAE_AEtFZ_0((uint64_t)v23, v33);
      sub_10004562C(v33, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type);
      sub_100010360((uint64_t)v27, &qword_100207FE0);
      sub_100010360((uint64_t)v30, &qword_100207FE0);
      sub_10004562C((uint64_t)v23, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type);
      sub_100010360((uint64_t)v18, &qword_100207FE0);
      if (v34) {
        goto LABEL_8;
      }
LABEL_9:
      char v41 = 0;
      return v41 & 1;
    }
    sub_100010360((uint64_t)v27, &qword_100207FE0);
    sub_100010360((uint64_t)v30, &qword_100207FE0);
    sub_10004562C((uint64_t)v23, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type);
LABEL_6:
    sub_100010360((uint64_t)v18, &qword_10020A5F8);
    goto LABEL_9;
  }
  sub_100010360((uint64_t)v27, &qword_100207FE0);
  sub_100010360((uint64_t)v30, &qword_100207FE0);
  if (v32(v31, 1, v10) != 1) {
    goto LABEL_6;
  }
  sub_100010360((uint64_t)v18, &qword_100207FE0);
LABEL_8:
  uint64_t v35 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest(0);
  uint64_t v37 = v50;
  uint64_t v36 = v51;
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 16);
  uint64_t v39 = v48;
  v38(v48, v46 + *(int *)(v35 + 20), v51);
  uint64_t v40 = v49;
  v38(v49, v47 + *(int *)(v35 + 20), v36);
  sub_10004E420(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v41 = sub_1001C0BD0();
  uint64_t v42 = *(void (**)(char *, uint64_t))(v37 + 8);
  v42(v40, v36);
  v42(v39, v36);
  return v41 & 1;
}

uint64_t _s20privatecloudcomputed026Proto_PrivateCloudCompute_cdE7RequestV10OneOf_TypeO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Proto_PrivateCloudCompute_FinalMessage(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v39 = (uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for Proto_PrivateCloudCompute_AuthToken(0);
  __chkstk_darwin(v38, v7);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type(0);
  uint64_t v12 = __chkstk_darwin(v10, v11);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v12, v15);
  uint64_t v18 = (char *)&v38 - v17;
  __chkstk_darwin(v16, v19);
  uint64_t v21 = (uint64_t *)((char *)&v38 - v20);
  uint64_t v22 = sub_100003918(&qword_10020A620);
  uint64_t v24 = __chkstk_darwin(v22 - 8, v23);
  uint64_t v26 = (char *)&v38 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = (uint64_t *)&v26[*(int *)(v24 + 56)];
  sub_100045A78(a1, (uint64_t)v26, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type);
  sub_100045A78(a2, (uint64_t)v27, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_100045A78((uint64_t)v26, (uint64_t)v21, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type);
    uint64_t v30 = *v21;
    unint64_t v31 = v21[1];
    if (swift_getEnumCaseMultiPayload())
    {
      sub_10000792C(v30, v31);
LABEL_15:
      sub_100010360((uint64_t)v26, &qword_10020A620);
LABEL_17:
      char v29 = 0;
      return v29 & 1;
    }
    uint64_t v35 = *v27;
    unint64_t v36 = v27[1];
    char v29 = sub_10004C464(v30, v31, *v27, v36);
    sub_10000792C(v35, v36);
    sub_10000792C(v30, v31);
    goto LABEL_19;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_100045A78((uint64_t)v26, (uint64_t)v14, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type);
    if (swift_getEnumCaseMultiPayload() != 2)
    {
      uint64_t v33 = type metadata accessor for Proto_PrivateCloudCompute_FinalMessage;
      uint64_t v34 = (uint64_t)v14;
      goto LABEL_14;
    }
    uint64_t v32 = v39;
    sub_1000457D0((uint64_t)v27, v39, type metadata accessor for Proto_PrivateCloudCompute_FinalMessage);
    sub_1001BFE60();
    sub_10004E420(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v29 = sub_1001C0BD0();
    sub_10004562C(v32, type metadata accessor for Proto_PrivateCloudCompute_FinalMessage);
    sub_10004562C((uint64_t)v14, type metadata accessor for Proto_PrivateCloudCompute_FinalMessage);
LABEL_19:
    sub_10004562C((uint64_t)v26, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type);
    return v29 & 1;
  }
  sub_100045A78((uint64_t)v26, (uint64_t)v18, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v33 = type metadata accessor for Proto_PrivateCloudCompute_AuthToken;
    uint64_t v34 = (uint64_t)v18;
LABEL_14:
    sub_10004562C(v34, v33);
    goto LABEL_15;
  }
  sub_1000457D0((uint64_t)v27, (uint64_t)v9, type metadata accessor for Proto_PrivateCloudCompute_AuthToken);
  if ((sub_10004C464(*(void *)v18, *((void *)v18 + 1), *(void *)v9, *((void *)v9 + 1)) & 1) == 0
    || (sub_10004C464(*((void *)v18 + 2), *((void *)v18 + 3), *((void *)v9 + 2), *((void *)v9 + 3)) & 1) == 0
    || (sub_1001BFE60(),
        sub_10004E420(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage),
        (sub_1001C0BD0() & 1) == 0))
  {
    sub_10004562C((uint64_t)v9, type metadata accessor for Proto_PrivateCloudCompute_AuthToken);
    sub_10004562C((uint64_t)v18, type metadata accessor for Proto_PrivateCloudCompute_AuthToken);
    sub_10004562C((uint64_t)v26, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type);
    goto LABEL_17;
  }
  sub_10004562C((uint64_t)v9, type metadata accessor for Proto_PrivateCloudCompute_AuthToken);
  sub_10004562C((uint64_t)v18, type metadata accessor for Proto_PrivateCloudCompute_AuthToken);
  sub_10004562C((uint64_t)v26, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type);
  char v29 = 1;
  return v29 & 1;
}

uint64_t sub_10004E328(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100003918(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type(uint64_t a1)
{
  return sub_10001C958(a1, qword_10020A450);
}

uint64_t type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(uint64_t a1)
{
  return sub_10001C958(a1, (uint64_t *)&unk_10020A4E0);
}

uint64_t type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(uint64_t a1)
{
  return sub_10001C958(a1, qword_10020A580);
}

uint64_t type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse(uint64_t a1)
{
  return sub_10001C958(a1, (uint64_t *)&unk_10020A3A0);
}

uint64_t sub_10004E420(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10004E468()
{
  unint64_t result = qword_10020A010;
  if (!qword_10020A010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020A010);
  }
  return result;
}

unint64_t sub_10004E4C0()
{
  unint64_t result = qword_10020A028;
  if (!qword_10020A028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020A028);
  }
  return result;
}

unint64_t sub_10004E518()
{
  unint64_t result = qword_10020A030;
  if (!qword_10020A030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020A030);
  }
  return result;
}

unint64_t sub_10004E570()
{
  unint64_t result = qword_10020A038;
  if (!qword_10020A038)
  {
    sub_1000166C8(&qword_10020A040);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020A038);
  }
  return result;
}

unint64_t sub_10004E5D0()
{
  unint64_t result = qword_10020A048;
  if (!qword_10020A048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020A048);
  }
  return result;
}

uint64_t sub_10004E624()
{
  return sub_10004E420(&qword_10020A050, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest);
}

uint64_t sub_10004E66C()
{
  return sub_10004E420(&qword_10020A058, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest);
}

uint64_t sub_10004E6B4()
{
  return sub_10004E420(&qword_100209FF0, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest);
}

uint64_t sub_10004E6FC()
{
  return sub_10004E420(&qword_10020A060, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest);
}

uint64_t sub_10004E744()
{
  return sub_10004E420(&qword_10020A068, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_AuthToken);
}

uint64_t sub_10004E78C()
{
  return sub_10004E420(&qword_10020A070, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_AuthToken);
}

uint64_t sub_10004E7D4()
{
  return sub_10004E420(&qword_100209FF8, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_AuthToken);
}

uint64_t sub_10004E81C()
{
  return sub_10004E420(&qword_10020A078, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_AuthToken);
}

uint64_t sub_10004E864()
{
  return sub_10004E420(&qword_10020A080, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_FinalMessage);
}

uint64_t sub_10004E8AC()
{
  return sub_10004E420(&qword_10020A088, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_FinalMessage);
}

uint64_t sub_10004E8F4()
{
  return sub_10004E420(&qword_10020A000, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_FinalMessage);
}

uint64_t sub_10004E93C()
{
  return sub_10004E420(&qword_10020A090, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_FinalMessage);
}

uint64_t sub_10004E984()
{
  return sub_10004E420(&qword_10020A098, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse);
}

uint64_t sub_10004E9CC()
{
  return sub_10004E420(&qword_10020A0A0, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse);
}

uint64_t sub_10004EA14()
{
  return sub_10004E420(&qword_10020A008, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse);
}

uint64_t sub_10004EA5C()
{
  return sub_10004E420(&qword_10020A0A8, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse);
}

uint64_t sub_10004EAA4()
{
  return sub_10004E420(&qword_10020A0B0, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary);
}

uint64_t sub_10004EAEC()
{
  return sub_10004E420(&qword_10020A0B8, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary);
}

uint64_t sub_10004EB34()
{
  return sub_10004E420(&qword_10020A018, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary);
}

uint64_t sub_10004EB7C()
{
  return sub_10004E420(&qword_10020A0C0, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary);
}

uint64_t sub_10004EBC4()
{
  return sub_10004E420(&qword_10020A0C8, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions);
}

uint64_t sub_10004EC0C()
{
  return sub_10004E420(&qword_10020A0D0, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions);
}

uint64_t sub_10004EC54()
{
  return sub_10004E420(&qword_10020A020, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions);
}

uint64_t sub_10004EC9C()
{
  return sub_10004E420(&qword_10020A0D8, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions);
}

unint64_t *initializeBufferWithCopyOfBuffer for Proto_PrivateCloudCompute_PrivateCloudComputeRequest(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    unint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (unint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_100003918(&qword_100207FE0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v20 = sub_1001BFE60();
        (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
      }
      else
      {
        unint64_t v12 = *a2;
        unint64_t v13 = a2[1];
        if (EnumCaseMultiPayload == 1)
        {
          sub_100007B14(*a2, a2[1]);
          *a1 = v12;
          a1[1] = v13;
          uint64_t v14 = a2[2];
          unint64_t v15 = a2[3];
          sub_100007B14(v14, v15);
          a1[2] = v14;
          a1[3] = v15;
          uint64_t v16 = *(int *)(type metadata accessor for Proto_PrivateCloudCompute_AuthToken(0) + 24);
          uint64_t v17 = (char *)a1 + v16;
          uint64_t v18 = (char *)a2 + v16;
          uint64_t v19 = sub_1001BFE60();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
        }
        else
        {
          sub_100007B14(*a2, a2[1]);
          *a1 = v12;
          a1[1] = v13;
        }
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v21 = *(int *)(a3 + 20);
    uint64_t v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = sub_1001BFE60();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  }
  return a1;
}

uint64_t destroy for Proto_PrivateCloudCompute_PrivateCloudComputeRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        uint64_t v6 = sub_1001BFE60();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
        break;
      case 1:
        sub_10000792C(*(void *)a1, *(void *)(a1 + 8));
        sub_10000792C(*(void *)(a1 + 16), *(void *)(a1 + 24));
        uint64_t v7 = a1 + *(int *)(type metadata accessor for Proto_PrivateCloudCompute_AuthToken(0) + 24);
        uint64_t v8 = sub_1001BFE60();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
        break;
      case 0:
        sub_10000792C(*(void *)a1, *(void *)(a1 + 8));
        break;
    }
  }
  uint64_t v9 = a1 + *(int *)(a2 + 20);
  uint64_t v10 = sub_1001BFE60();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  return v11(v9, v10);
}

unint64_t *initializeWithCopy for Proto_PrivateCloudCompute_PrivateCloudComputeRequest(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100003918(&qword_100207FE0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v18 = sub_1001BFE60();
      (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
    }
    else
    {
      unint64_t v10 = *a2;
      unint64_t v11 = a2[1];
      if (EnumCaseMultiPayload == 1)
      {
        sub_100007B14(*a2, a2[1]);
        *a1 = v10;
        a1[1] = v11;
        uint64_t v12 = a2[2];
        unint64_t v13 = a2[3];
        sub_100007B14(v12, v13);
        a1[2] = v12;
        a1[3] = v13;
        uint64_t v14 = *(int *)(type metadata accessor for Proto_PrivateCloudCompute_AuthToken(0) + 24);
        unint64_t v15 = (char *)a1 + v14;
        uint64_t v16 = (char *)a2 + v14;
        uint64_t v17 = sub_1001BFE60();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
      }
      else
      {
        sub_100007B14(*a2, a2[1]);
        *a1 = v10;
        a1[1] = v11;
      }
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v19 = *(int *)(a3 + 20);
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t *assignWithCopy for Proto_PrivateCloudCompute_PrivateCloudComputeRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v30 = sub_1001BFE60();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v30 - 8) + 16))(a1, a2, v30);
      }
      else
      {
        uint64_t v12 = *a2;
        uint64_t v13 = a2[1];
        if (EnumCaseMultiPayload == 1)
        {
          sub_100007B14(*a2, a2[1]);
          *a1 = v12;
          a1[1] = v13;
          uint64_t v14 = a2[2];
          unint64_t v15 = a2[3];
          sub_100007B14(v14, v15);
          a1[2] = v14;
          a1[3] = v15;
          uint64_t v16 = *(int *)(type metadata accessor for Proto_PrivateCloudCompute_AuthToken(0) + 24);
          uint64_t v17 = (char *)a1 + v16;
          uint64_t v18 = (char *)a2 + v16;
          uint64_t v19 = sub_1001BFE60();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
        }
        else
        {
          sub_100007B14(*a2, a2[1]);
          *a1 = v12;
          a1[1] = v13;
        }
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_17;
    }
LABEL_8:
    uint64_t v20 = sub_100003918(&qword_100207FE0);
    memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_17;
  }
  if (v10)
  {
    sub_10004562C((uint64_t)a1, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_10004562C((uint64_t)a1, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type);
    int v21 = swift_getEnumCaseMultiPayload();
    if (v21 == 2)
    {
      uint64_t v36 = sub_1001BFE60();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v36 - 8) + 16))(a1, a2, v36);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      uint64_t v22 = *a2;
      uint64_t v23 = a2[1];
      if (v21 == 1)
      {
        sub_100007B14(*a2, a2[1]);
        *a1 = v22;
        a1[1] = v23;
        uint64_t v24 = a2[2];
        unint64_t v25 = a2[3];
        sub_100007B14(v24, v25);
        a1[2] = v24;
        a1[3] = v25;
        uint64_t v26 = *(int *)(type metadata accessor for Proto_PrivateCloudCompute_AuthToken(0) + 24);
        uint64_t v27 = (char *)a1 + v26;
        uint64_t v28 = (char *)a2 + v26;
        uint64_t v29 = sub_1001BFE60();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
      }
      else
      {
        sub_100007B14(*a2, a2[1]);
        *a1 = v22;
        a1[1] = v23;
      }
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_17:
  uint64_t v31 = *(int *)(a3 + 20);
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

_OWORD *initializeWithTake for Proto_PrivateCloudCompute_PrivateCloudComputeRequest(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100003918(&qword_100207FE0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v15 = sub_1001BFE60();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      long long v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      uint64_t v11 = *(int *)(type metadata accessor for Proto_PrivateCloudCompute_AuthToken(0) + 24);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_1001BFE60();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v7 + 64));
    }
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v16 = *(int *)(a3 + 20);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

_OWORD *assignWithTake for Proto_PrivateCloudCompute_PrivateCloudComputeRequest(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 == a2) {
        goto LABEL_17;
      }
      sub_10004562C((uint64_t)a1, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v30 = sub_1001BFE60();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v30 - 8) + 32))(a1, a2, v30);
        swift_storeEnumTagMultiPayload();
        goto LABEL_17;
      }
      if (EnumCaseMultiPayload == 1)
      {
        long long v19 = a2[1];
        *a1 = *a2;
        a1[1] = v19;
        uint64_t v20 = *(int *)(type metadata accessor for Proto_PrivateCloudCompute_AuthToken(0) + 24);
        int v21 = (char *)a1 + v20;
        uint64_t v22 = (char *)a2 + v20;
        uint64_t v23 = sub_1001BFE60();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
        swift_storeEnumTagMultiPayload();
        goto LABEL_17;
      }
      size_t v17 = *(void *)(v7 + 64);
      goto LABEL_9;
    }
    sub_10004562C((uint64_t)a1, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type);
LABEL_8:
    size_t v17 = *(void *)(*(void *)(sub_100003918(&qword_100207FE0) - 8) + 64);
LABEL_9:
    memcpy(a1, a2, v17);
    goto LABEL_17;
  }
  if (v10) {
    goto LABEL_8;
  }
  int v11 = swift_getEnumCaseMultiPayload();
  if (v11 == 2)
  {
    uint64_t v24 = sub_1001BFE60();
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v24 - 8) + 32))(a1, a2, v24);
    swift_storeEnumTagMultiPayload();
  }
  else if (v11 == 1)
  {
    long long v12 = a2[1];
    *a1 = *a2;
    a1[1] = v12;
    uint64_t v13 = *(int *)(type metadata accessor for Proto_PrivateCloudCompute_AuthToken(0) + 24);
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_1001BFE60();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(v7 + 64));
  }
  (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_17:
  uint64_t v25 = *(int *)(a3 + 20);
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 40))(v26, v27, v28);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_PrivateCloudCompute_PrivateCloudComputeRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004FD08);
}

uint64_t sub_10004FD08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000520B4(a1, a2, a3, &qword_100207FE0);
}

uint64_t storeEnumTagSinglePayload for Proto_PrivateCloudCompute_PrivateCloudComputeRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004FD28);
}

uint64_t sub_10004FD28(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1000521CC(a1, a2, a3, a4, &qword_100207FE0);
}

void sub_10004FD34(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v16 = sub_1001BFE60();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = *a2;
      unint64_t v8 = a2[1];
      sub_100007B14(*a2, v8);
      *a1 = v7;
      a1[1] = v8;
      uint64_t v9 = a2[2];
      unint64_t v10 = a2[3];
      sub_100007B14(v9, v10);
      a1[2] = v9;
      a1[3] = v10;
      uint64_t v11 = *(int *)(type metadata accessor for Proto_PrivateCloudCompute_AuthToken(0) + 24);
      long long v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_1001BFE60();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      uint64_t v18 = *a2;
      unint64_t v17 = a2[1];
      sub_100007B14(v18, v17);
      *a1 = v18;
      a1[1] = v17;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result != 2)
  {
    if (result != 1)
    {
      if (!result)
      {
        uint64_t v3 = *(void *)a1;
        unint64_t v4 = *(void *)(a1 + 8);
        return sub_10000792C(v3, v4);
      }
      return result;
    }
    sub_10000792C(*(void *)a1, *(void *)(a1 + 8));
    sub_10000792C(*(void *)(a1 + 16), *(void *)(a1 + 24));
    a1 += *(int *)(type metadata accessor for Proto_PrivateCloudCompute_AuthToken(0) + 24);
  }
  uint64_t v5 = sub_1001BFE60();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(a1, v5);
}

uint64_t *initializeWithCopy for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type(uint64_t *a1, uint64_t *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v13 = sub_1001BFE60();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = *a2;
    unint64_t v6 = a2[1];
    sub_100007B14(*a2, v6);
    *a1 = v5;
    a1[1] = v6;
    uint64_t v7 = a2[2];
    unint64_t v8 = a2[3];
    sub_100007B14(v7, v8);
    a1[2] = v7;
    a1[3] = v8;
    uint64_t v9 = *(int *)(type metadata accessor for Proto_PrivateCloudCompute_AuthToken(0) + 24);
    unint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_1001BFE60();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  else
  {
    uint64_t v15 = *a2;
    unint64_t v14 = a2[1];
    sub_100007B14(v15, v14);
    *a1 = v15;
    a1[1] = v14;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *assignWithCopy for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type(uint64_t *a1, uint64_t *a2)
{
  if (a1 != a2)
  {
    sub_10004562C((uint64_t)a1, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v13 = sub_1001BFE60();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = *a2;
      unint64_t v6 = a2[1];
      sub_100007B14(*a2, v6);
      *a1 = v5;
      a1[1] = v6;
      uint64_t v7 = a2[2];
      unint64_t v8 = a2[3];
      sub_100007B14(v7, v8);
      a1[2] = v7;
      a1[3] = v8;
      uint64_t v9 = *(int *)(type metadata accessor for Proto_PrivateCloudCompute_AuthToken(0) + 24);
      unint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_1001BFE60();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      uint64_t v15 = *a2;
      unint64_t v14 = a2[1];
      sub_100007B14(v15, v14);
      *a1 = v15;
      a1[1] = v14;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v12 = sub_1001BFE60();
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    long long v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(type metadata accessor for Proto_PrivateCloudCompute_AuthToken(0) + 24);
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1001BFE60();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10004562C((uint64_t)a1, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v12 = sub_1001BFE60();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      long long v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      uint64_t v8 = *(int *)(type metadata accessor for Proto_PrivateCloudCompute_AuthToken(0) + 24);
      uint64_t v9 = (char *)a1 + v8;
      unint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_1001BFE60();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1000504FC()
{
  uint64_t result = type metadata accessor for Proto_PrivateCloudCompute_AuthToken(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1001BFE60();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Proto_PrivateCloudCompute_AuthToken(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000505E0);
}

uint64_t sub_1000505E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 12)
  {
    uint64_t v4 = *(void *)(a1 + 8) >> 60;
    if (((4 * v4) & 0xC) != 0) {
      return 16 - ((4 * v4) & 0xC | (v4 >> 2));
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_1001BFE60();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Proto_PrivateCloudCompute_AuthToken(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000506B0);
}

void *sub_1000506B0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 12)
  {
    *uint64_t result = 0;
    result[1] = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * a2) << 60;
  }
  else
  {
    uint64_t v7 = sub_1001BFE60();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100050760()
{
  uint64_t result = sub_1001BFE60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for Proto_PrivateCloudCompute_FinalMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BFE60();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for Proto_PrivateCloudCompute_FinalMessage(uint64_t a1)
{
  uint64_t v2 = sub_1001BFE60();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for Proto_PrivateCloudCompute_FinalMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for Proto_PrivateCloudCompute_FinalMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for Proto_PrivateCloudCompute_FinalMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for Proto_PrivateCloudCompute_FinalMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_PrivateCloudCompute_FinalMessage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100050A6C);
}

uint64_t sub_100050A6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BFE60();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for Proto_PrivateCloudCompute_FinalMessage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100050AEC);
}

uint64_t sub_100050AEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BFE60();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_100050B5C()
{
  uint64_t result = sub_1001BFE60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *initializeBufferWithCopyOfBuffer for Proto_PrivateCloudCompute_PrivateCloudComputeResponse(unsigned char *a1, unint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    unint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = (unsigned char *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_100003918(&qword_100209FE0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        *(void *)a1 = *a2;
        a1[8] = *((unsigned char *)a2 + 8);
        uint64_t v13 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(0);
        uint64_t v14 = *(int *)(v13 + 20);
        uint64_t v15 = &a1[v14];
        uint64_t v16 = (char *)a2 + v14;
        uint64_t v17 = sub_1001BFE60();
        uint64_t v28 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v17 - 8) + 16);
        v28(v15, v16, v17);
        uint64_t v18 = *(int *)(v13 + 24);
        __dst = &a1[v18];
        long long v19 = (char *)a2 + v18;
        uint64_t v20 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(0);
        uint64_t v21 = *(void *)(v20 - 8);
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
        {
          uint64_t v22 = sub_100003918(&qword_100209FE8);
          memcpy(__dst, v19, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          unsigned char *__dst = *v19;
          v28(&__dst[*(int *)(v20 + 20)], &v19[*(int *)(v20 + 20)], v17);
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
        }
      }
      else
      {
        unint64_t v11 = *a2;
        unint64_t v12 = a2[1];
        sub_100007B14(*a2, v12);
        *(void *)a1 = v11;
        *((void *)a1 + 1) = v12;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v23 = *(int *)(a3 + 20);
    uint64_t v24 = &a1[v23];
    uint64_t v25 = (char *)a2 + v23;
    uint64_t v26 = sub_1001BFE60();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  }
  return a1;
}

uint64_t destroy for Proto_PrivateCloudCompute_PrivateCloudComputeResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
  {
    unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v6 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(0);
      uint64_t v7 = a1 + *(int *)(v6 + 20);
      uint64_t v8 = sub_1001BFE60();
      uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
      v9(v7, v8);
      uint64_t v10 = a1 + *(int *)(v6 + 24);
      uint64_t v11 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11)) {
        v9(v10 + *(int *)(v11 + 20), v8);
      }
    }
    else if (EnumCaseMultiPayload <= 1)
    {
      sub_10000792C(*(void *)a1, *(void *)(a1 + 8));
    }
  }
  uint64_t v12 = a1 + *(int *)(a2 + 20);
  uint64_t v13 = sub_1001BFE60();
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
  return v14(v12, v13);
}

unsigned char *initializeWithCopy for Proto_PrivateCloudCompute_PrivateCloudComputeResponse(unsigned char *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100003918(&qword_100209FE0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *(void *)a1 = *a2;
      a1[8] = *((unsigned char *)a2 + 8);
      uint64_t v11 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(0);
      uint64_t v12 = *(int *)(v11 + 20);
      uint64_t v13 = &a1[v12];
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = sub_1001BFE60();
      uint64_t v26 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 16);
      v26(v13, v14, v15);
      uint64_t v16 = *(int *)(v11 + 24);
      __dst = &a1[v16];
      uint64_t v17 = (char *)a2 + v16;
      uint64_t v18 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(0);
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        uint64_t v20 = sub_100003918(&qword_100209FE8);
        memcpy(__dst, v17, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        unsigned char *__dst = *v17;
        v26(&__dst[*(int *)(v18 + 20)], &v17[*(int *)(v18 + 20)], v15);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
      }
    }
    else
    {
      unint64_t v9 = *a2;
      unint64_t v10 = a2[1];
      sub_100007B14(*a2, v10);
      *(void *)a1 = v9;
      *((void *)a1 + 1) = v10;
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v21 = *(int *)(a3 + 20);
  uint64_t v22 = &a1[v21];
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = sub_1001BFE60();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  return a1;
}

unsigned char *assignWithCopy for Proto_PrivateCloudCompute_PrivateCloudComputeResponse(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8((unsigned char *)a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v16 = *(void *)a2;
        a1[8] = *(unsigned char *)(a2 + 8);
        *(void *)a1 = v16;
        uint64_t v17 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(0);
        uint64_t v18 = *(int *)(v17 + 20);
        uint64_t v19 = &a1[v18];
        uint64_t v20 = a2 + v18;
        uint64_t v21 = sub_1001BFE60();
        uint64_t v44 = *(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16);
        v44(v19, v20, v21);
        uint64_t v22 = *(int *)(v17 + 24);
        __dst = &a1[v22];
        uint64_t v23 = (unsigned char *)(a2 + v22);
        uint64_t v24 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(0);
        uint64_t v25 = *(void *)(v24 - 8);
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
        {
          uint64_t v26 = sub_100003918(&qword_100209FE8);
          memcpy(__dst, v23, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          unsigned char *__dst = *v23;
          v44(&__dst[*(int *)(v24 + 20)], (uint64_t)&v23[*(int *)(v24 + 20)], v21);
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
        }
      }
      else
      {
        uint64_t v11 = *(void *)a2;
        unint64_t v12 = *(void *)(a2 + 8);
        sub_100007B14(*(void *)a2, v12);
        *(void *)a1 = v11;
        *((void *)a1 + 1) = v12;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_17;
    }
LABEL_7:
    uint64_t v13 = sub_100003918(&qword_100209FE0);
    memcpy(a1, (const void *)a2, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_17;
  }
  if (v10)
  {
    sub_10004562C((uint64_t)a1, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type);
    goto LABEL_7;
  }
  if (a1 != (unsigned char *)a2)
  {
    sub_10004562C((uint64_t)a1, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v27 = *(void *)a2;
      a1[8] = *(unsigned char *)(a2 + 8);
      *(void *)a1 = v27;
      uint64_t v28 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(0);
      uint64_t v29 = *(int *)(v28 + 20);
      uint64_t v30 = &a1[v29];
      uint64_t v31 = a2 + v29;
      uint64_t v32 = sub_1001BFE60();
      uint64_t v33 = *(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16);
      v33(v30, v31, v32);
      uint64_t v34 = *(int *)(v28 + 24);
      __dsta = &a1[v34];
      uint64_t v35 = (unsigned char *)(a2 + v34);
      uint64_t v36 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(0);
      uint64_t v37 = *(void *)(v36 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
      {
        uint64_t v38 = sub_100003918(&qword_100209FE8);
        memcpy(__dsta, v35, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        unsigned char *__dsta = *v35;
        v33(&__dsta[*(int *)(v36 + 20)], (uint64_t)&v35[*(int *)(v36 + 20)], v32);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v37 + 56))(__dsta, 0, 1, v36);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      uint64_t v14 = *(void *)a2;
      unint64_t v15 = *(void *)(a2 + 8);
      sub_100007B14(*(void *)a2, v15);
      *(void *)a1 = v14;
      *((void *)a1 + 1) = v15;
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_17:
  uint64_t v39 = *(int *)(a3 + 20);
  uint64_t v40 = &a1[v39];
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_1001BFE60();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  return a1;
}

unsigned char *initializeWithTake for Proto_PrivateCloudCompute_PrivateCloudComputeResponse(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100003918(&qword_100209FE0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      uint64_t v9 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(0);
      uint64_t v10 = *(int *)(v9 + 20);
      uint64_t v11 = &a1[v10];
      unint64_t v12 = &a2[v10];
      uint64_t v13 = sub_1001BFE60();
      uint64_t v25 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 32);
      v25(v11, v12, v13);
      uint64_t v14 = *(int *)(v9 + 24);
      unint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      uint64_t v17 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(0);
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        uint64_t v19 = sub_100003918(&qword_100209FE8);
        memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        *unint64_t v15 = *v16;
        v25(&v15[*(int *)(v17 + 20)], &v16[*(int *)(v17 + 20)], v13);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v7 + 64));
    }
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v20 = *(int *)(a3 + 20);
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = sub_1001BFE60();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  return a1;
}

unsigned char *assignWithTake for Proto_PrivateCloudCompute_PrivateCloudComputeResponse(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 == a2) {
        goto LABEL_18;
      }
      sub_10004562C((uint64_t)a1, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        *(void *)a1 = *(void *)a2;
        a1[8] = a2[8];
        uint64_t v23 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(0);
        uint64_t v24 = *(int *)(v23 + 20);
        uint64_t v25 = &a1[v24];
        uint64_t v26 = &a2[v24];
        uint64_t v27 = sub_1001BFE60();
        uint64_t v28 = (void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v27 - 8) + 32);
        uint64_t v41 = *v28;
        (*v28)(v25, v26, v27);
        uint64_t v29 = *(int *)(v23 + 24);
        uint64_t v30 = &a1[v29];
        uint64_t v31 = &a2[v29];
        uint64_t v32 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(0);
        uint64_t v33 = *(void *)(v32 - 8);
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
        {
          uint64_t v34 = sub_100003918(&qword_100209FE8);
          memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
          *uint64_t v30 = *v31;
          v41(&v30[*(int *)(v32 + 20)], &v31[*(int *)(v32 + 20)], v27);
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_18;
      }
      size_t v22 = *(void *)(v7 + 64);
LABEL_9:
      memcpy(a1, a2, v22);
      goto LABEL_18;
    }
    sub_10004562C((uint64_t)a1, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type);
LABEL_8:
    size_t v22 = *(void *)(*(void *)(sub_100003918(&qword_100209FE0) - 8) + 64);
    goto LABEL_9;
  }
  if (v10) {
    goto LABEL_8;
  }
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    *(void *)a1 = *(void *)a2;
    a1[8] = a2[8];
    uint64_t v11 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(0);
    uint64_t v12 = *(int *)(v11 + 20);
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    uint64_t v15 = sub_1001BFE60();
    uint64_t v40 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 32);
    v40(v13, v14, v15);
    uint64_t v16 = *(int *)(v11 + 24);
    uint64_t v17 = &a1[v16];
    uint64_t v18 = &a2[v16];
    uint64_t v19 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(0);
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = sub_100003918(&qword_100209FE8);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      *uint64_t v17 = *v18;
      v40(&v17[*(int *)(v19 + 20)], &v18[*(int *)(v19 + 20)], v15);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(v7 + 64));
  }
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_18:
  uint64_t v35 = *(int *)(a3 + 20);
  uint64_t v36 = &a1[v35];
  uint64_t v37 = &a2[v35];
  uint64_t v38 = sub_1001BFE60();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_PrivateCloudCompute_PrivateCloudComputeResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000520A8);
}

uint64_t sub_1000520A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000520B4(a1, a2, a3, &qword_100209FE0);
}

uint64_t sub_1000520B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7 = sub_100003918(a4);
  uint64_t v8 = *(void *)(v7 - 8);
  if (*(_DWORD *)(v8 + 84) == a2)
  {
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v9(a1, a2, v7);
  }
  else
  {
    uint64_t v11 = sub_1001BFE60();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 20);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for Proto_PrivateCloudCompute_PrivateCloudComputeResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000521C0);
}

uint64_t sub_1000521C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1000521CC(a1, a2, a3, a4, &qword_100209FE0);
}

uint64_t sub_1000521CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9 = sub_100003918(a5);
  uint64_t v10 = *(void *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) == a3)
  {
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v11(a1, a2, a2, v9);
  }
  else
  {
    uint64_t v13 = sub_1001BFE60();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + *(int *)(a4 + 20);
    return v14(v16, a2, a2, v15);
  }
}

void sub_1000522D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1000522F0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  sub_1000523C0(319, a4, a5);
  if (v5 <= 0x3F)
  {
    sub_1001BFE60();
    if (v6 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1000523C0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1001C12F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t initializeBufferWithCopyOfBuffer for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v8 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      uint64_t v9 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(0);
      uint64_t v10 = *(int *)(v9 + 20);
      uint64_t v11 = a1 + v10;
      uint64_t v12 = a2 + v10;
      uint64_t v13 = sub_1001BFE60();
      uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
      v14(v11, v12, v13);
      uint64_t v15 = *(int *)(v9 + 24);
      uint64_t v16 = (unsigned char *)(a1 + v15);
      uint64_t v17 = (unsigned char *)(a2 + v15);
      uint64_t v18 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(0);
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        uint64_t v20 = sub_100003918(&qword_100209FE8);
        memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        *uint64_t v16 = *v17;
        v14((uint64_t)&v16[*(int *)(v18 + 20)], (uint64_t)&v17[*(int *)(v18 + 20)], v13);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
    }
    else
    {
      uint64_t v7 = *(void *)a2;
      unint64_t v6 = *(void *)(a2 + 8);
      sub_100007B14(v7, v6);
      *(void *)a1 = v7;
      *(void *)(a1 + 8) = v6;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type(uint64_t *a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v5 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(0);
    unint64_t v6 = (char *)a1 + *(int *)(v5 + 20);
    uint64_t v7 = sub_1001BFE60();
    uint64_t v11 = *(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8);
    v11(v6, v7);
    uint64_t v8 = (char *)a1 + *(int *)(v5 + 24);
    uint64_t v9 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9);
    if (!result)
    {
      uint64_t v10 = &v8[*(int *)(v9 + 20)];
      return ((uint64_t (*)(char *, uint64_t))v11)(v10, v7);
    }
  }
  else if (result <= 1)
  {
    uint64_t v3 = *a1;
    unint64_t v4 = a1[1];
    return sub_10000792C(v3, v4);
  }
  return result;
}

uint64_t initializeWithCopy for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
    uint64_t v6 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(0);
    uint64_t v7 = *(int *)(v6 + 20);
    uint64_t v8 = (unsigned char *)(a1 + v7);
    uint64_t v9 = (unsigned char *)(a2 + v7);
    uint64_t v10 = sub_1001BFE60();
    uint64_t v11 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    uint64_t v12 = *(int *)(v6 + 24);
    uint64_t v13 = (unsigned char *)(a1 + v12);
    uint64_t v14 = (unsigned char *)(a2 + v12);
    uint64_t v15 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(0);
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = sub_100003918(&qword_100209FE8);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      *uint64_t v13 = *v14;
      v11(&v13[*(int *)(v15 + 20)], &v14[*(int *)(v15 + 20)], v10);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
  }
  else
  {
    uint64_t v4 = *(void *)a2;
    unint64_t v5 = *(void *)(a2 + 8);
    sub_100007B14(v4, v5);
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v5;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_10004562C(a1, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v6 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      *(void *)a1 = v6;
      uint64_t v7 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(0);
      uint64_t v8 = *(int *)(v7 + 20);
      uint64_t v9 = a1 + v8;
      uint64_t v10 = a2 + v8;
      uint64_t v11 = sub_1001BFE60();
      uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
      v12(v9, v10, v11);
      uint64_t v13 = *(int *)(v7 + 24);
      uint64_t v14 = (unsigned char *)(a1 + v13);
      uint64_t v15 = (unsigned char *)(a2 + v13);
      uint64_t v16 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(0);
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        uint64_t v18 = sub_100003918(&qword_100209FE8);
        memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        *uint64_t v14 = *v15;
        v12((uint64_t)&v14[*(int *)(v16 + 20)], (uint64_t)&v15[*(int *)(v16 + 20)], v11);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
    }
    else
    {
      uint64_t v5 = *(void *)a2;
      unint64_t v4 = *(void *)(a2 + 8);
      sub_100007B14(v5, v4);
      *(void *)a1 = v5;
      *(void *)(a1 + 8) = v4;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    *(void *)a1 = *(void *)a2;
    a1[8] = a2[8];
    uint64_t v6 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(0);
    uint64_t v7 = *(int *)(v6 + 20);
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    uint64_t v10 = sub_1001BFE60();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
    v11(v8, v9, v10);
    uint64_t v12 = *(int *)(v6 + 24);
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    uint64_t v15 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(0);
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = sub_100003918(&qword_100209FE8);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      *uint64_t v13 = *v14;
      v11(&v13[*(int *)(v15 + 20)], &v14[*(int *)(v15 + 20)], v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10004562C((uint64_t)a1, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      uint64_t v6 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(0);
      uint64_t v7 = *(int *)(v6 + 20);
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = sub_1001BFE60();
      uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
      v11(v8, v9, v10);
      uint64_t v12 = *(int *)(v6 + 24);
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      uint64_t v15 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(0);
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        uint64_t v17 = sub_100003918(&qword_100209FE8);
        memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        *uint64_t v13 = *v14;
        v11(&v13[*(int *)(v15 + 20)], &v14[*(int *)(v15 + 20)], v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100052F54()
{
  uint64_t result = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseStatus()
{
  return &type metadata for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseStatus;
}

void *initializeBufferWithCopyOfBuffer for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    void *v4 = *a2;
    unint64_t v4 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = sub_1001BFE60();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)v4 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(0);
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = sub_100003918(&qword_100209FE8);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      *uint64_t v13 = *v14;
      v11((uint64_t)&v13[*(int *)(v15 + 20)], (uint64_t)&v14[*(int *)(v15 + 20)], v10);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
  }
  return v4;
}

uint64_t destroy for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1001BFE60();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v10(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = v6 + *(int *)(v7 + 20);
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v9, v5);
  }
  return result;
}

uint64_t initializeWithCopy for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (unsigned char *)(a1 + v6);
  uint64_t v8 = (unsigned char *)(a2 + v6);
  uint64_t v9 = sub_1001BFE60();
  uint64_t v10 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (unsigned char *)(a1 + v11);
  uint64_t v13 = (unsigned char *)(a2 + v11);
  uint64_t v14 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_100003918(&qword_100209FE8);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    unsigned char *v12 = *v13;
    v10(&v12[*(int *)(v14 + 20)], &v13[*(int *)(v14 + 20)], v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

uint64_t assignWithCopy for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t)a2 + v7;
  uint64_t v10 = sub_1001BFE60();
  uint64_t v21 = *(void *)(v10 - 8);
  uint64_t v22 = v10;
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v21 + 24);
  v11(v8, v9);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (unsigned char *)(a1 + v12);
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v9) = v17(v13, 1, v15);
  int v18 = v17(v14, 1, v15);
  if (!v9)
  {
    if (!v18)
    {
      *uint64_t v13 = *v14;
      ((void (*)(unsigned char *, unsigned char *, uint64_t))v11)(&v13[*(int *)(v15 + 20)], &v14[*(int *)(v15 + 20)], v22);
      return a1;
    }
    sub_10004562C((uint64_t)v13, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    uint64_t v19 = sub_100003918(&qword_100209FE8);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    return a1;
  }
  *uint64_t v13 = *v14;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v21 + 16))(&v13[*(int *)(v15 + 20)], &v14[*(int *)(v15 + 20)], v22);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t initializeWithTake for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (unsigned char *)(a1 + v6);
  uint64_t v8 = (unsigned char *)(a2 + v6);
  uint64_t v9 = sub_1001BFE60();
  uint64_t v10 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (unsigned char *)(a1 + v11);
  uint64_t v13 = (unsigned char *)(a2 + v11);
  uint64_t v14 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_100003918(&qword_100209FE8);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    unsigned char *v12 = *v13;
    v10(&v12[*(int *)(v14 + 20)], &v13[*(int *)(v14 + 20)], v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

uint64_t assignWithTake for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1001BFE60();
  uint64_t v20 = *(void *)(v9 - 8);
  uint64_t v21 = v9;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v20 + 40);
  v10(v7, v8);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (unsigned char *)(a1 + v11);
  uint64_t v13 = (unsigned char *)(a2 + v11);
  uint64_t v14 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v8) = v16(v12, 1, v14);
  int v17 = v16(v13, 1, v14);
  if (!v8)
  {
    if (!v17)
    {
      unsigned char *v12 = *v13;
      ((void (*)(unsigned char *, unsigned char *, uint64_t))v10)(&v12[*(int *)(v14 + 20)], &v13[*(int *)(v14 + 20)], v21);
      return a1;
    }
    sub_10004562C((uint64_t)v12, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = sub_100003918(&qword_100209FE8);
    memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  unsigned char *v12 = *v13;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v20 + 32))(&v12[*(int *)(v14 + 20)], &v13[*(int *)(v14 + 20)], v21);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000539FC);
}

uint64_t sub_1000539FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001BFE60();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_100003918(&qword_100209FE8);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 24);
    return v13(v15, a2, v14);
  }
}

uint64_t storeEnumTagSinglePayload for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100053B10);
}

uint64_t sub_100053B10(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1001BFE60();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    uint64_t v14 = sub_100003918(&qword_100209FE8);
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + *(int *)(a4 + 24);
    return v15(v17, a2, a2, v16);
  }
}

void sub_100053C1C()
{
  sub_1001BFE60();
  if (v0 <= 0x3F)
  {
    sub_1000523C0(319, (unint64_t *)&unk_10020A4F0, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1001BFE60();
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_1001BFE60();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

unsigned char *initializeWithCopy for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_1001BFE60();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

unsigned char *assignWithCopy for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_1001BFE60();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

unsigned char *initializeWithTake for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_1001BFE60();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

unsigned char *assignWithTake for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_1001BFE60();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100054044);
}

uint64_t sub_100054044(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = sub_1001BFE60();
    uint64_t v11 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = &a1[*(int *)(a3 + 20)];
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.PostResponseActions(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100054108);
}

unsigned char *sub_100054108(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v7 = sub_1001BFE60();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1000541AC()
{
  uint64_t result = sub_1001BFE60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t Proto_Ropes_HttpService_ConfigRequest.rateLimitConfigRequest.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003918(&qword_10020A628);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(v2, (uint64_t)v7, &qword_10020A628);
  uint64_t v8 = type metadata accessor for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) != 1) {
    return sub_10005CA74((uint64_t)v7, a1, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest);
  }
  sub_100010360((uint64_t)v7, &qword_10020A628);
  *(void *)a1 = sub_100054BFC((uint64_t)&_swiftEmptyArrayStorage, &qword_10020B9B8, &qword_10020B9C0, type metadata accessor for Proto_Ropes_RateLimit_Values, type metadata accessor for Proto_Ropes_RateLimit_Values);
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v9 = (int *)type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0);
  uint64_t result = _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v11 = (void *)(a1 + v9[7]);
  *uint64_t v11 = 0;
  v11[1] = 0;
  uint64_t v12 = (void *)(a1 + v9[8]);
  void *v12 = 0;
  v12[1] = 0;
  uint64_t v13 = (void *)(a1 + v9[9]);
  *uint64_t v13 = 0;
  v13[1] = 0;
  return result;
}

uint64_t Proto_Ropes_HttpService_ConfigRequest.rateLimitConfigRequest.setter(uint64_t a1)
{
  return sub_10005D210(a1, &qword_10020A628, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest, type metadata accessor for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type);
}

uint64_t Proto_Ropes_HttpService_ConfigResponse.rateLimitConfigurationList.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003918(&qword_10020A630);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(v2, (uint64_t)v7, &qword_10020A630);
  uint64_t v8 = type metadata accessor for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) != 1) {
    return sub_10005CA74((uint64_t)v7, (uint64_t)a1, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  }
  sub_100010360((uint64_t)v7, &qword_10020A630);
  *a1 = &_swiftEmptyArrayStorage;
  type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0);
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.SetupRequest.capabilities.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003918(&qword_10020A638);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest(0);
  sub_10003282C(v1 + *(int *)(v7 + 28), (uint64_t)v6, &qword_10020A638);
  uint64_t v8 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_10005CA74((uint64_t)v6, a1, type metadata accessor for Proto_Ropes_Common_Capabilities);
  }
  *(void *)a1 = &_swiftEmptyArrayStorage;
  *(unsigned char *)(a1 + 8) = 0;
  _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  return sub_100010360((uint64_t)v6, &qword_10020A638);
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.SetupRequest.capabilities.setter(uint64_t a1)
{
  return sub_10005D880(a1, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest, &qword_10020A638, type metadata accessor for Proto_Ropes_Common_Capabilities, type metadata accessor for Proto_Ropes_Common_Capabilities);
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.setupRequest.setter(uint64_t a1)
{
  return sub_10005C4E4(a1, &qword_10020A640, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
}

unint64_t sub_1000546D8(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020B790);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100003918(&qword_10020B798);
  uint64_t v7 = sub_1001C15C0();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = &v6[*(int *)(v2 + 48)];
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10003282C(v13, (uint64_t)v6, &qword_10020B790);
    unint64_t result = sub_100169EB4((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = sub_1001BF310();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v6, v19);
    uint64_t v20 = v8[7];
    uint64_t v21 = sub_100003918(&qword_100208640);
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v20 + *(void *)(*(void *)(v21 - 8) + 72) * v17, v10, v21);
    uint64_t v22 = v8[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v8[2] = v24;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100054910(uint64_t a1)
{
  return sub_100054BFC(a1, &qword_10020B9B8, &qword_10020B9C0, type metadata accessor for Proto_Ropes_RateLimit_Values, type metadata accessor for Proto_Ropes_RateLimit_Values);
}

unint64_t sub_10005494C(uint64_t a1)
{
  return sub_100054E14(a1, &qword_10020B7B8, &qword_10020B7C0, sub_10016A0A4);
}

unint64_t sub_100054974(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100003918(&qword_10020B7B0);
  uint64_t v2 = (void *)sub_1001C15C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v7 = *(v4 - 1);
    unint64_t v8 = *v4;
    swift_bridgeObjectRetain();
    sub_100007B14(v7, v8);
    unint64_t result = sub_100169E3C(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    unint64_t v12 = (uint64_t *)(v2[7] + 16 * result);
    uint64_t *v12 = v7;
    v12[1] = v8;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100054A9C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100003918(&qword_1002087C0);
  uint64_t v2 = (void *)sub_1001C15C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_100169E3C(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    unint64_t v12 = (void *)(v2[7] + 16 * result);
    void *v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100054BC0(uint64_t a1)
{
  return sub_100054BFC(a1, &qword_10020B7A0, &qword_10020B7A8, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
}

unint64_t sub_100054BFC(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  uint64_t v34 = a2;
  uint64_t v7 = sub_100003918(a2);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (uint64_t *)((char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v13 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100003918(a3);
  uint64_t v12 = sub_1001C15C0();
  uint64_t v13 = (void *)v12;
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v13;
  }
  uint64_t v15 = (uint64_t)v11 + *(int *)(v7 + 48);
  uint64_t v16 = v12 + 64;
  unint64_t v17 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v31 = a1;
  uint64_t v18 = a1 + v17;
  uint64_t v19 = *(void *)(v8 + 72);
  swift_retain();
  while (1)
  {
    sub_10003282C(v18, (uint64_t)v11, v34);
    uint64_t v21 = *v11;
    uint64_t v20 = v11[1];
    unint64_t result = sub_100169E3C(*v11, v20);
    if (v23) {
      break;
    }
    unint64_t v24 = result;
    *(void *)(v16 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v25 = (uint64_t *)(v13[6] + 16 * result);
    *uint64_t v25 = v21;
    v25[1] = v20;
    uint64_t v26 = v13[7];
    uint64_t v27 = v32(0);
    unint64_t result = sub_10005CA74(v15, v26 + *(void *)(*(void *)(v27 - 8) + 72) * v24, v33);
    uint64_t v28 = v13[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_11;
    }
    void v13[2] = v30;
    v18 += v19;
    if (!--v14)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100054DEC(uint64_t a1)
{
  return sub_100054E14(a1, &qword_10020B808, &qword_10020B810, sub_10016A0D0);
}

unint64_t sub_100054E14(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v30 = a4;
  uint64_t v7 = sub_100003918(a2);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v13 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100003918(a3);
  uint64_t v12 = sub_1001C15C0();
  uint64_t v13 = (void *)v12;
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v13;
  }
  uint64_t v15 = &v11[*(int *)(v7 + 48)];
  uint64_t v16 = v12 + 64;
  unint64_t v17 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v29 = a1;
  uint64_t v18 = a1 + v17;
  uint64_t v19 = *(void *)(v8 + 72);
  swift_retain();
  while (1)
  {
    sub_10003282C(v18, (uint64_t)v11, a2);
    char v20 = *v11;
    unint64_t result = v30(*v11);
    if (v22) {
      break;
    }
    unint64_t v23 = result;
    *(void *)(v16 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v13[6] + result) = v20;
    uint64_t v24 = v13[7];
    uint64_t v25 = sub_1001BF450();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v24 + *(void *)(*(void *)(v25 - 8) + 72) * v23, v15, v25);
    uint64_t v26 = v13[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27) {
      goto LABEL_11;
    }
    void v13[2] = v28;
    v18 += v19;
    if (!--v14)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100055010(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020B7F8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (void *)((char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100003918(&qword_10020B800);
  uint64_t v7 = sub_1001C15C0();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = (char *)v6 + *(int *)(v2 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v26[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10003282C(v13, (uint64_t)v6, &qword_10020B7F8);
    uint64_t v15 = *v6;
    uint64_t v16 = v6[1];
    unint64_t result = sub_100169E3C(*v6, v16);
    if (v18) {
      break;
    }
    unint64_t v19 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    char v20 = (uint64_t *)(v8[6] + 16 * result);
    *char v20 = v15;
    v20[1] = v16;
    uint64_t v21 = v8[7];
    uint64_t v22 = sub_100003918(&qword_100208640);
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, v10, v22);
    uint64_t v23 = v8[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100055214(uint64_t a1)
{
  return sub_100054E14(a1, &qword_10020B7E8, &qword_10020B7F0, sub_10016A0FC);
}

unint64_t sub_10005523C(uint64_t a1)
{
  return sub_100054E14(a1, &qword_10020B758, &qword_10020B760, sub_10016A128);
}

unint64_t sub_100055264(uint64_t a1)
{
  return sub_100054E14(a1, &qword_10020B7D8, &qword_10020B7E0, sub_10016A154);
}

unint64_t sub_10005528C(uint64_t a1)
{
  return sub_100054E14(a1, &qword_10020B7C8, &qword_10020B7D0, sub_10016A180);
}

unint64_t sub_1000552B4(uint64_t a1)
{
  return sub_100054E14(a1, &qword_10020B8D8, &qword_10020B8E0, (uint64_t (*)(void))sub_10016A248);
}

unint64_t sub_1000552DC(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020B768);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100003918(&qword_1002087A8);
  uint64_t v7 = sub_1001C15C0();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = (uint64_t)&v6[*(int *)(v2 + 48)];
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10003282C(v13, (uint64_t)v6, &qword_10020B768);
    unint64_t result = sub_100169EB4((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = sub_1001BF310();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v6, v19);
    uint64_t v20 = v8[7];
    uint64_t v21 = type metadata accessor for SessionLog.Element();
    unint64_t result = sub_10005CA74(v10, v20 + *(void *)(*(void *)(v21 - 8) + 72) * v17, (uint64_t (*)(void))type metadata accessor for SessionLog.Element);
    uint64_t v22 = v8[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v8[2] = v24;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10005550C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100003918(&qword_10020B748);
  uint64_t v2 = (void *)sub_1001C15C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_100169E3C(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100055620(uint64_t a1)
{
  return sub_100054E14(a1, &qword_10020B738, &qword_10020B740, (uint64_t (*)(void))sub_10016A380);
}

unint64_t sub_100055648(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020B780);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100003918(&qword_10020B788);
  uint64_t v7 = sub_1001C15C0();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = (uint64_t)&v6[*(int *)(v2 + 48)];
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v26[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10003282C(v13, (uint64_t)v6, &qword_10020B780);
    long long v15 = *((_OWORD *)v6 + 1);
    long long v27 = *(_OWORD *)v6;
    long long v28 = v15;
    long long v29 = *((_OWORD *)v6 + 2);
    uint64_t v30 = *((void *)v6 + 6);
    unint64_t result = sub_100169F4C(&v27);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v19 = v8[6] + 56 * result;
    long long v20 = v28;
    *(_OWORD *)uint64_t v19 = v27;
    *(_OWORD *)(v19 + 16) = v20;
    *(_OWORD *)(v19 + 32) = v29;
    *(void *)(v19 + 48) = v30;
    uint64_t v21 = v8[7];
    uint64_t v22 = type metadata accessor for RateLimitTimingDetails(0);
    unint64_t result = sub_10005CA74(v10, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v18, type metadata accessor for RateLimitTimingDetails);
    uint64_t v23 = v8[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10005586C(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020B770);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100003918(&qword_10020B778);
  uint64_t v7 = sub_1001C15C0();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = &v6[*(int *)(v2 + 48)];
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v26[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10003282C(v13, (uint64_t)v6, &qword_10020B770);
    long long v15 = *((_OWORD *)v6 + 1);
    long long v27 = *(_OWORD *)v6;
    long long v28 = v15;
    long long v29 = *((_OWORD *)v6 + 2);
    uint64_t v30 = *((void *)v6 + 6);
    unint64_t result = sub_100169FB8((uint64_t *)&v27);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v19 = v8[6] + 56 * result;
    long long v20 = v28;
    *(_OWORD *)uint64_t v19 = v27;
    *(_OWORD *)(v19 + 16) = v20;
    *(_OWORD *)(v19 + 32) = v29;
    *(void *)(v19 + 48) = v30;
    uint64_t v21 = v8[7];
    uint64_t v22 = sub_1001BF7A0();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v21 + *(void *)(*(void *)(v22 - 8) + 72) * v18, v10, v22);
    uint64_t v23 = v8[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100055A94(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100003918(&qword_10020B750);
  uint64_t v2 = (void *)sub_1001C15C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 1);
    uint64_t v6 = *v4;
    uint64_t v7 = v4[1];
    uint64_t v8 = v4[2];
    uint64_t v9 = v4[3];
    uint64_t v11 = v4[4];
    uint64_t v10 = v4[5];
    *(void *)&long long v19 = *(v4 - 2);
    *((void *)&v19 + 1) = v5;
    *(void *)&long long v20 = v6;
    *((void *)&v20 + 1) = v7;
    *(void *)&long long v21 = v8;
    *((void *)&v21 + 1) = v9;
    uint64_t v22 = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_100169FB8((uint64_t *)&v19);
    if (v13) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v14 = v2[6] + 56 * result;
    long long v15 = v20;
    *(_OWORD *)uint64_t v14 = v19;
    *(_OWORD *)(v14 + 16) = v15;
    *(_OWORD *)(v14 + 32) = v21;
    *(void *)(v14 + 48) = v22;
    *(void *)(v2[7] + 8 * result) = v10;
    uint64_t v16 = v2[2];
    BOOL v17 = __OFADD__(v16, 1);
    uint64_t v18 = v16 + 1;
    if (v17) {
      goto LABEL_11;
    }
    v2[2] = v18;
    v4 += 8;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100055BFC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100003918(&qword_10020B8E8);
  uint64_t v2 = (void *)sub_1001C15C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    int v7 = *((unsigned __int8 *)v4 - 8);
    uint64_t v8 = *v4;
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t result = sub_10016A3C4(v5, v6, v7);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = v2[6] + 24 * result;
    *(void *)uint64_t v11 = v5;
    *(void *)(v11 + 8) = v6;
    *(unsigned char *)(v11 + 16) = v7;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 4;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100055D38(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020B820);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100003918(&qword_10020B828);
  uint64_t v7 = sub_1001C15C0();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = *(int *)(v2 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v23[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10003282C(v13, (uint64_t)v6, &qword_10020B820);
    unint64_t result = sub_100169EB4((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = sub_1001BF310();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v6, v19);
    *(void *)(v8[7] + 8 * v17) = *(void *)&v6[v10];
    uint64_t v20 = v8[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100055F2C(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020B8C8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (void *)((char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100003918(&qword_10020B8D0);
  uint64_t v7 = sub_1001C15C0();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = (char *)v6 + *(int *)(v2 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v26[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10003282C(v13, (uint64_t)v6, &qword_10020B8C8);
    uint64_t v15 = *v6;
    uint64_t v16 = v6[1];
    unint64_t result = sub_100169E3C(*v6, v16);
    if (v18) {
      break;
    }
    unint64_t v19 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v20 = (uint64_t *)(v8[6] + 16 * result);
    *uint64_t v20 = v15;
    v20[1] = v16;
    uint64_t v21 = v8[7];
    uint64_t v22 = sub_1001BF450();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, v10, v22);
    uint64_t v23 = v8[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10005612C(uint64_t a1)
{
  uint64_t v1 = a1;
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_10;
  }
  sub_100003918(&qword_10020B818);
  uint64_t v2 = sub_1001C15C0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(v1 + 16);
  if (!v4)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v23 = v2 + 64;
  swift_retain();
  uint64_t v25 = v4 - 1;
  uint64_t v5 = 32;
  for (i = v1; ; uint64_t v1 = i)
  {
    uint64_t v24 = v5;
    uint64_t v6 = v1 + v5;
    long long v7 = *(_OWORD *)(v6 + 48);
    long long v35 = *(_OWORD *)(v6 + 32);
    long long v36 = v7;
    long long v8 = *(_OWORD *)(v6 + 80);
    long long v37 = *(_OWORD *)(v6 + 64);
    long long v38 = v8;
    long long v9 = *(_OWORD *)(v6 + 112);
    long long v39 = *(_OWORD *)(v6 + 96);
    long long v40 = v9;
    long long v10 = *(_OWORD *)(v6 + 16);
    v34[0] = *(_OWORD *)v6;
    v34[1] = v10;
    uint64_t v11 = *(void *)(v6 + 128);
    uint64_t v41 = v11;
    long long v12 = v10;
    long long v13 = v35;
    long long v14 = v36;
    uint64_t v32 = *((void *)&v37 + 1);
    uint64_t v33 = v37;
    uint64_t v30 = *((void *)&v38 + 1);
    uint64_t v31 = v38;
    uint64_t v28 = *((void *)&v39 + 1);
    uint64_t v29 = v39;
    uint64_t v26 = *((void *)&v9 + 1);
    uint64_t v27 = v9;
    long long v15 = v34[0];
    sub_100086F14(v34);
    unint64_t result = sub_100169E3C(v15, *((uint64_t *)&v15 + 1));
    if (v17) {
      break;
    }
    *(void *)(v23 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_OWORD *)(v3[6] + 16 * result) = v15;
    uint64_t v18 = v3[7] + 120 * result;
    *(_OWORD *)uint64_t v18 = v12;
    *(_OWORD *)(v18 + 16) = v13;
    *(_OWORD *)(v18 + 32) = v14;
    *(void *)(v18 + 48) = v33;
    *(void *)(v18 + 56) = v32;
    *(void *)(v18 + 64) = v31;
    *(void *)(v18 + 72) = v30;
    *(void *)(v18 + 80) = v29;
    *(void *)(v18 + 88) = v28;
    *(void *)(v18 + 96) = v27;
    *(void *)(v18 + 104) = v26;
    *(void *)(v18 + 112) = v11;
    uint64_t v19 = v3[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_12;
    }
    v3[2] = v21;
    if (!v25)
    {
      swift_release();
      goto LABEL_10;
    }
    --v25;
    uint64_t v5 = v24 + 136;
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.type.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003282C(v1, a1, &qword_10020A640);
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.type.setter(uint64_t a1)
{
  return sub_10004E328(a1, v1, &qword_10020A640);
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.setupRequest.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003918(&qword_10020A640);
  __chkstk_darwin(v4 - 8, v5);
  long long v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(v2, (uint64_t)v7, &qword_10020A640);
  uint64_t v8 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) == 1)
  {
    sub_100010360((uint64_t)v7, &qword_10020A640);
LABEL_5:
    *(_DWORD *)a1 = 0;
    *(void *)(a1 + 8) = &_swiftEmptyArrayStorage;
    uint64_t v9 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest(0);
    _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v10 = a1 + *(int *)(v9 + 28);
    uint64_t v11 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  }
  if (swift_getEnumCaseMultiPayload())
  {
    sub_10005CA14((uint64_t)v7, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
    goto LABEL_5;
  }
  return sub_10005CA74((uint64_t)v7, a1, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest);
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.SetupRequest.init()@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(void *)(a1 + 8) = &_swiftEmptyArrayStorage;
  uint64_t v2 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest(0);
  _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v3 = a1 + *(int *)(v2 + 28);
  uint64_t v4 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(v3, 1, 1, v4);
}

void (*Proto_Ropes_HttpService_InvokeRequest.setupRequest.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x30uLL);
  *a1 = v4;
  void *v4 = v1;
  uint64_t v5 = sub_100003918(&qword_10020A640);
  uint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[1] = v6;
  uint64_t v7 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest(0);
  size_t v8 = *(void *)(*(void *)(v7 - 8) + 64);
  v4[2] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v4[3] = v9;
  sub_10003282C(v2, (uint64_t)v6, &qword_10020A640);
  uint64_t v10 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type(0);
  v4[4] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v4[5] = v11;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) == 1)
  {
    sub_100010360((uint64_t)v6, &qword_10020A640);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_10005CA74((uint64_t)v6, (uint64_t)v9, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest);
      return sub_1000567C8;
    }
    sub_10005CA14((uint64_t)v6, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
  }
  *(_DWORD *)uint64_t v9 = 0;
  v9[1] = &_swiftEmptyArrayStorage;
  _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  long long v12 = (char *)v9 + *(int *)(v7 + 28);
  uint64_t v13 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  return sub_1000567C8;
}

void sub_1000567C8(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (*a1)[4];
  uint64_t v4 = (*a1)[5];
  uint64_t v5 = (void *)(*a1)[2];
  uint64_t v6 = (void *)(*a1)[3];
  uint64_t v8 = **a1;
  uint64_t v7 = (void *)(*a1)[1];
  if (a2)
  {
    sub_10005CB3C((*a1)[3], (uint64_t)v5, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest);
    sub_100010360(v8, &qword_10020A640);
    sub_10005CA74((uint64_t)v5, v8, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v8, 0, 1, v3);
    sub_10005CA14((uint64_t)v6, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest);
  }
  else
  {
    sub_100010360(**a1, &qword_10020A640);
    sub_10005CA74((uint64_t)v6, v8, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v8, 0, 1, v3);
  }
  free(v6);
  free(v5);
  free(v7);
  free(v2);
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.loggingMetadata.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003918(&qword_10020A640);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(v2, (uint64_t)v7, &qword_10020A640);
  uint64_t v8 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) == 1)
  {
    sub_100010360((uint64_t)v7, &qword_10020A640);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1) {
      return sub_10005CA74((uint64_t)v7, (uint64_t)a1, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata);
    }
    sub_10005CA14((uint64_t)v7, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
  }
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata(0);
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata.init()@<X0>(void *a1@<X8>)
{
  return sub_100059420((void (*)(void))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata, a1);
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.loggingMetadata.setter(uint64_t a1)
{
  return sub_10005C4E4(a1, &qword_10020A640, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
}

void (*Proto_Ropes_HttpService_InvokeRequest.loggingMetadata.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x30uLL);
  *a1 = v4;
  void *v4 = v1;
  uint64_t v5 = sub_100003918(&qword_10020A640);
  uint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[1] = v6;
  size_t v7 = *(void *)(*(void *)(type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata(0) - 8)
                 + 64);
  v4[2] = malloc(v7);
  uint64_t v8 = malloc(v7);
  v4[3] = v8;
  sub_10003282C(v2, (uint64_t)v6, &qword_10020A640);
  uint64_t v9 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type(0);
  v4[4] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v4[5] = v10;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) == 1)
  {
    sub_100010360((uint64_t)v6, &qword_10020A640);
LABEL_6:
    void *v8 = 0;
    v8[1] = 0xE000000000000000;
    _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    return sub_100056CB0;
  }
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_10005CA14((uint64_t)v6, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
    goto LABEL_6;
  }
  sub_10005CA74((uint64_t)v6, (uint64_t)v8, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata);
  return sub_100056CB0;
}

void sub_100056CB0(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (*a1)[4];
  uint64_t v4 = (*a1)[5];
  uint64_t v5 = (void *)(*a1)[2];
  uint64_t v6 = (void *)(*a1)[3];
  uint64_t v8 = **a1;
  size_t v7 = (void *)(*a1)[1];
  if (a2)
  {
    sub_10005CB3C((*a1)[3], (uint64_t)v5, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata);
    sub_100010360(v8, &qword_10020A640);
    sub_10005CA74((uint64_t)v5, v8, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v8, 0, 1, v3);
    sub_10005CA14((uint64_t)v6, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata);
  }
  else
  {
    sub_100010360(**a1, &qword_10020A640);
    sub_10005CA74((uint64_t)v6, v8, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v8, 0, 1, v3);
  }
  free(v6);
  free(v5);
  free(v7);
  free(v2);
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.terminate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003918(&qword_10020A640);
  __chkstk_darwin(v4 - 8, v5);
  size_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(v2, (uint64_t)v7, &qword_10020A640);
  uint64_t v8 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) == 1)
  {
    sub_100010360((uint64_t)v7, &qword_10020A640);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2) {
      return sub_10005CA74((uint64_t)v7, a1, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate);
    }
    sub_10005CA14((uint64_t)v7, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
  }
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  uint64_t v10 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate(0);
  uint64_t result = _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v11 = (void *)(a1 + *(int *)(v10 + 24));
  *uint64_t v11 = 0;
  v11[1] = 0;
  return result;
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.Terminate.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  uint64_t v2 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate(0);
  uint64_t result = _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v4 = (void *)(a1 + *(int *)(v2 + 24));
  void *v4 = 0;
  v4[1] = 0;
  return result;
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.terminate.setter(uint64_t a1)
{
  return sub_10005C4E4(a1, &qword_10020A640, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
}

void (*Proto_Ropes_HttpService_InvokeRequest.terminate.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x30uLL);
  *a1 = v4;
  void *v4 = v1;
  uint64_t v5 = sub_100003918(&qword_10020A640);
  uint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[1] = v6;
  uint64_t v7 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate(0);
  size_t v8 = *(void *)(*(void *)(v7 - 8) + 64);
  v4[2] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v4[3] = v9;
  sub_10003282C(v2, (uint64_t)v6, &qword_10020A640);
  uint64_t v10 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type(0);
  v4[4] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v4[5] = v11;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) == 1)
  {
    sub_100010360((uint64_t)v6, &qword_10020A640);
LABEL_6:
    *(void *)uint64_t v9 = 0;
    v9[8] = 1;
    _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v12 = &v9[*(int *)(v7 + 24)];
    *(void *)uint64_t v12 = 0;
    *((void *)v12 + 1) = 0;
    return sub_1000571F4;
  }
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_10005CA14((uint64_t)v6, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
    goto LABEL_6;
  }
  sub_10005CA74((uint64_t)v6, (uint64_t)v9, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate);
  return sub_1000571F4;
}

void sub_1000571F4(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (*a1)[4];
  uint64_t v4 = (*a1)[5];
  uint64_t v5 = (void *)(*a1)[2];
  uint64_t v6 = (void *)(*a1)[3];
  uint64_t v8 = **a1;
  uint64_t v7 = (void *)(*a1)[1];
  if (a2)
  {
    sub_10005CB3C((*a1)[3], (uint64_t)v5, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate);
    sub_100010360(v8, &qword_10020A640);
    sub_10005CA74((uint64_t)v5, v8, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v8, 0, 1, v3);
    sub_10005CA14((uint64_t)v6, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate);
  }
  else
  {
    sub_100010360(**a1, &qword_10020A640);
    sub_10005CA74((uint64_t)v6, v8, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v8, 0, 1, v3);
  }
  free(v6);
  free(v5);
  free(v7);
  free(v2);
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100057904(type metadata accessor for Proto_Ropes_HttpService_InvokeRequest, a1);
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.unknownFields.setter(uint64_t a1)
{
  return sub_10005799C(a1, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest);
}

uint64_t (*Proto_Ropes_HttpService_InvokeRequest.unknownFields.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t static Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata.== infix(_:_:)(char *a1, char *a2)
{
  return sub_1000717E4(a1, a2, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata) & 1;
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.SetupRequest.encryptedRequestOhttpContext.getter()
{
  return *v0;
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.SetupRequest.encryptedRequestOhttpContext.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.SetupRequest.attestationMappings.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.SetupRequest.attestationMappings.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

void (*Proto_Ropes_HttpService_InvokeRequest.SetupRequest.capabilities.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100003918(&qword_10020A638);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  _OWORD v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest(0) + 28);
  *((_DWORD *)v3 + 12) = v11;
  sub_10003282C(v1 + v11, (uint64_t)v5, &qword_10020A638);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *(void *)uint64_t v10 = &_swiftEmptyArrayStorage;
    v10[8] = 0;
    _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_100010360((uint64_t)v5, &qword_10020A638);
  }
  else
  {
    sub_10005CA74((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_Ropes_Common_Capabilities);
  }
  return sub_100057600;
}

void sub_100057600(uint64_t a1, char a2)
{
}

BOOL Proto_Ropes_HttpService_InvokeRequest.SetupRequest.hasCapabilities.getter()
{
  return sub_10005B9D8(&qword_10020A638, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest, type metadata accessor for Proto_Ropes_Common_Capabilities);
}

Swift::Void __swiftcall Proto_Ropes_HttpService_InvokeRequest.SetupRequest.clearCapabilities()()
{
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.SetupRequest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100057750(type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest, a1);
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.SetupRequest.unknownFields.setter(uint64_t a1)
{
  return sub_1000577E8(a1, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest);
}

uint64_t (*Proto_Ropes_HttpService_InvokeRequest.SetupRequest.unknownFields.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping.ohttpContext.getter()
{
  return *(unsigned int *)(v0 + 16);
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping.ohttpContext.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 16) = result;
  return result;
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100057750(type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping, a1);
}

uint64_t sub_100057750@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 24);
  uint64_t v5 = sub_1001BFE60();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping.unknownFields.setter(uint64_t a1)
{
  return sub_1000577E8(a1, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping);
}

uint64_t sub_1000577E8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 24);
  uint64_t v5 = sub_1001BFE60();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping.unknownFields.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(_DWORD *)(a1 + 16) = 0;
  type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping(0);
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100057904(type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata, a1);
}

uint64_t sub_100057904@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 20);
  uint64_t v5 = sub_1001BFE60();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata.unknownFields.setter(uint64_t a1)
{
  return sub_10005799C(a1, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata);
}

uint64_t sub_10005799C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 20);
  uint64_t v5 = sub_1001BFE60();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata.unknownFields.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.Terminate.reason.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate(0) + 24));
  if (v1[1]) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.Terminate.reason.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate(0) + 24));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*Proto_Ropes_HttpService_InvokeRequest.Terminate.reason.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate(0) + 24);
  *(_DWORD *)(a1 + 24) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_100039D5C;
}

BOOL Proto_Ropes_HttpService_InvokeRequest.Terminate.hasReason.getter()
{
  return *(void *)(v0
                   + *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate(0) + 24)
                   + 8) != 0;
}

Swift::Void __swiftcall Proto_Ropes_HttpService_InvokeRequest.Terminate.clearReason()()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate(0) + 24));
  swift_bridgeObjectRelease();
  *uint64_t v1 = 0;
  v1[1] = 0;
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.Terminate.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100057904(type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate, a1);
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.Terminate.unknownFields.setter(uint64_t a1)
{
  return sub_10005799C(a1, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate);
}

uint64_t (*Proto_Ropes_HttpService_InvokeRequest.Terminate.unknownFields.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

void sub_100057C58()
{
  static Proto_Ropes_HttpService_InvokeRequest.Terminate.Code.allCases = (uint64_t)&off_1001FBB58;
}

uint64_t *Proto_Ropes_HttpService_InvokeRequest.Terminate.Code.allCases.unsafeMutableAddressor()
{
  if (qword_100207830 != -1) {
    swift_once();
  }
  return &static Proto_Ropes_HttpService_InvokeRequest.Terminate.Code.allCases;
}

uint64_t static Proto_Ropes_HttpService_InvokeRequest.Terminate.Code.allCases.getter()
{
  if (qword_100207830 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_100057D14@<X0>(void *a1@<X8>)
{
  if (qword_100207830 != -1) {
    swift_once();
  }
  *a1 = static Proto_Ropes_HttpService_InvokeRequest.Terminate.Code.allCases;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100057D80(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100072FA8();
  return Enum.hash(into:)(a1, a2, v4);
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_10005A9DC(type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type, (void (*)(void))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest, a1);
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.type.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003282C(v1, a1, &qword_10020A648);
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.type.setter(uint64_t a1)
{
  return sub_10004E328(a1, v1, &qword_10020A648);
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.attestationList.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003918(&qword_10020A648);
  __chkstk_darwin(v4 - 8, v5);
  unint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(v2, (uint64_t)v7, &qword_10020A648);
  uint64_t v8 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) == 1)
  {
    sub_100010360((uint64_t)v7, &qword_10020A648);
LABEL_5:
    *a1 = &_swiftEmptyArrayStorage;
    type metadata accessor for Proto_Ropes_Common_AttestationList(0);
    return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  }
  if (swift_getEnumCaseMultiPayload())
  {
    sub_10005CA14((uint64_t)v7, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
    goto LABEL_5;
  }
  return sub_10005CA74((uint64_t)v7, (uint64_t)a1, type metadata accessor for Proto_Ropes_Common_AttestationList);
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.attestationList.setter(uint64_t a1)
{
  return sub_10005C4E4(a1, &qword_10020A648, type metadata accessor for Proto_Ropes_Common_AttestationList, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
}

void (*Proto_Ropes_HttpService_InvokeResponse.attestationList.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x30uLL);
  *a1 = v4;
  void *v4 = v1;
  uint64_t v5 = sub_100003918(&qword_10020A648);
  uint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[1] = v6;
  size_t v7 = *(void *)(*(void *)(type metadata accessor for Proto_Ropes_Common_AttestationList(0) - 8) + 64);
  v4[2] = malloc(v7);
  uint64_t v8 = malloc(v7);
  v4[3] = v8;
  sub_10003282C(v2, (uint64_t)v6, &qword_10020A648);
  uint64_t v9 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  v4[4] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v4[5] = v10;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) == 1)
  {
    sub_100010360((uint64_t)v6, &qword_10020A648);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_10005CA74((uint64_t)v6, (uint64_t)v8, type metadata accessor for Proto_Ropes_Common_AttestationList);
      return sub_1000581A0;
    }
    sub_10005CA14((uint64_t)v6, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
  }
  void *v8 = &_swiftEmptyArrayStorage;
  _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  return sub_1000581A0;
}

void sub_1000581A0(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (*a1)[4];
  uint64_t v4 = (*a1)[5];
  uint64_t v5 = (void *)(*a1)[2];
  uint64_t v6 = (void *)(*a1)[3];
  uint64_t v8 = **a1;
  size_t v7 = (void *)(*a1)[1];
  if (a2)
  {
    sub_10005CB3C((*a1)[3], (uint64_t)v5, type metadata accessor for Proto_Ropes_Common_AttestationList);
    sub_100010360(v8, &qword_10020A648);
    sub_10005CA74((uint64_t)v5, v8, type metadata accessor for Proto_Ropes_Common_AttestationList);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v8, 0, 1, v3);
    sub_10005CA14((uint64_t)v6, type metadata accessor for Proto_Ropes_Common_AttestationList);
  }
  else
  {
    sub_100010360(**a1, &qword_10020A648);
    sub_10005CA74((uint64_t)v6, v8, type metadata accessor for Proto_Ropes_Common_AttestationList);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v8, 0, 1, v3);
  }
  free(v6);
  free(v5);
  free(v7);
  free(v2);
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.compressedAttestationList.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003918(&qword_10020A648);
  __chkstk_darwin(v4 - 8, v5);
  size_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(v2, (uint64_t)v7, &qword_10020A648);
  uint64_t v8 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) == 1)
  {
    sub_100010360((uint64_t)v7, &qword_10020A648);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1) {
      return sub_10005CA74((uint64_t)v7, a1, type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
    }
    sub_10005CA14((uint64_t)v7, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
  }
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  *(_OWORD *)(a1 + 16) = xmmword_1001CB200;
  *(_DWORD *)(a1 + 32) = 0;
  type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0);
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.compressedAttestationList.setter(uint64_t a1)
{
  return sub_10005C4E4(a1, &qword_10020A648, type metadata accessor for Proto_Ropes_Common_CompressedAttestationList, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
}

void (*Proto_Ropes_HttpService_InvokeResponse.compressedAttestationList.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x30uLL);
  *a1 = v4;
  void *v4 = v1;
  uint64_t v5 = sub_100003918(&qword_10020A648);
  uint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[1] = v6;
  size_t v7 = *(void *)(*(void *)(type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0) - 8) + 64);
  v4[2] = malloc(v7);
  uint64_t v8 = malloc(v7);
  v4[3] = v8;
  sub_10003282C(v2, (uint64_t)v6, &qword_10020A648);
  uint64_t v9 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  v4[4] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v4[5] = v10;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) == 1)
  {
    sub_100010360((uint64_t)v6, &qword_10020A648);
LABEL_6:
    *(void *)uint64_t v8 = 0;
    v8[8] = 1;
    *((_OWORD *)v8 + 1) = xmmword_1001CB200;
    *((_DWORD *)v8 + 8) = 0;
    _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    return sub_100058698;
  }
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_10005CA14((uint64_t)v6, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
    goto LABEL_6;
  }
  sub_10005CA74((uint64_t)v6, (uint64_t)v8, type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
  return sub_100058698;
}

void sub_100058698(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (*a1)[4];
  uint64_t v4 = (*a1)[5];
  uint64_t v5 = (void *)(*a1)[2];
  uint64_t v6 = (void *)(*a1)[3];
  uint64_t v8 = **a1;
  size_t v7 = (void *)(*a1)[1];
  if (a2)
  {
    sub_10005CB3C((*a1)[3], (uint64_t)v5, type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
    sub_100010360(v8, &qword_10020A648);
    sub_10005CA74((uint64_t)v5, v8, type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v8, 0, 1, v3);
    sub_10005CA14((uint64_t)v6, type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
  }
  else
  {
    sub_100010360(**a1, &qword_10020A648);
    sub_10005CA74((uint64_t)v6, v8, type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v8, 0, 1, v3);
  }
  free(v6);
  free(v5);
  free(v7);
  free(v2);
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.attestation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003918(&qword_10020A648);
  __chkstk_darwin(v4 - 8, v5);
  size_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(v2, (uint64_t)v7, &qword_10020A648);
  uint64_t v8 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) == 1)
  {
    sub_100010360((uint64_t)v7, &qword_10020A648);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2) {
      return sub_10005CA74((uint64_t)v7, a1, type metadata accessor for Proto_Ropes_Common_Attestation);
    }
    sub_10005CA14((uint64_t)v7, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
  }
  *(_OWORD *)a1 = xmmword_1001CB200;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0xE000000000000000;
  uint64_t v10 = (int *)type metadata accessor for Proto_Ropes_Common_Attestation(0);
  _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v11 = a1 + v10[7];
  *(_DWORD *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 4) = 1;
  uint64_t v12 = a1 + v10[8];
  uint64_t v13 = sub_1001BFDF0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  long long v14 = (void *)(a1 + v10[9]);
  *long long v14 = 0;
  v14[1] = 0;
  long long v15 = (void *)(a1 + v10[10]);
  *long long v15 = 0;
  v15[1] = 0;
  uint64_t v16 = (void *)(a1 + v10[11]);
  *uint64_t v16 = 0;
  v16[1] = 0;
  char v17 = (void *)(a1 + v10[12]);
  *char v17 = 0;
  v17[1] = 0;
  return result;
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.attestation.setter(uint64_t a1)
{
  return sub_10005C4E4(a1, &qword_10020A648, type metadata accessor for Proto_Ropes_Common_Attestation, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
}

void (*Proto_Ropes_HttpService_InvokeResponse.attestation.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x30uLL);
  *a1 = v4;
  void *v4 = v1;
  uint64_t v5 = sub_100003918(&qword_10020A648);
  uint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[1] = v6;
  size_t v7 = (int *)type metadata accessor for Proto_Ropes_Common_Attestation(0);
  size_t v8 = *(void *)(*((void *)v7 - 1) + 64);
  v4[2] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v4[3] = v9;
  sub_10003282C(v2, (uint64_t)v6, &qword_10020A648);
  uint64_t v10 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  v4[4] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v4[5] = v11;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) == 1)
  {
    sub_100010360((uint64_t)v6, &qword_10020A648);
LABEL_6:
    *(_OWORD *)uint64_t v9 = xmmword_1001CB200;
    v9[2] = 0;
    v9[3] = 0xE000000000000000;
    _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v12 = (char *)v9 + v7[7];
    *(_DWORD *)uint64_t v12 = 0;
    v12[4] = 1;
    uint64_t v13 = (char *)v9 + v7[8];
    uint64_t v14 = sub_1001BFDF0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
    long long v15 = (void *)((char *)v9 + v7[9]);
    *long long v15 = 0;
    v15[1] = 0;
    uint64_t v16 = (void *)((char *)v9 + v7[10]);
    *uint64_t v16 = 0;
    v16[1] = 0;
    char v17 = (void *)((char *)v9 + v7[11]);
    *char v17 = 0;
    v17[1] = 0;
    uint64_t v18 = (void *)((char *)v9 + v7[12]);
    *uint64_t v18 = 0;
    v18[1] = 0;
    return sub_100058C9C;
  }
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_10005CA14((uint64_t)v6, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
    goto LABEL_6;
  }
  sub_10005CA74((uint64_t)v6, (uint64_t)v9, type metadata accessor for Proto_Ropes_Common_Attestation);
  return sub_100058C9C;
}

void sub_100058C9C(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (*a1)[4];
  uint64_t v4 = (*a1)[5];
  uint64_t v5 = (void *)(*a1)[2];
  uint64_t v6 = (void *)(*a1)[3];
  uint64_t v8 = **a1;
  size_t v7 = (void *)(*a1)[1];
  if (a2)
  {
    sub_10005CB3C((*a1)[3], (uint64_t)v5, type metadata accessor for Proto_Ropes_Common_Attestation);
    sub_100010360(v8, &qword_10020A648);
    sub_10005CA74((uint64_t)v5, v8, type metadata accessor for Proto_Ropes_Common_Attestation);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v8, 0, 1, v3);
    sub_10005CA14((uint64_t)v6, type metadata accessor for Proto_Ropes_Common_Attestation);
  }
  else
  {
    sub_100010360(**a1, &qword_10020A648);
    sub_10005CA74((uint64_t)v6, v8, type metadata accessor for Proto_Ropes_Common_Attestation);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v8, 0, 1, v3);
  }
  free(v6);
  free(v5);
  free(v7);
  free(v2);
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.nodeSelected.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003918(&qword_10020A648);
  __chkstk_darwin(v4 - 8, v5);
  size_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(v2, (uint64_t)v7, &qword_10020A648);
  uint64_t v8 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) == 1)
  {
    sub_100010360((uint64_t)v7, &qword_10020A648);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 3) {
      return sub_10005CA74((uint64_t)v7, a1, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NodeSelected);
    }
    sub_10005CA14((uint64_t)v7, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
  }
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.nodeSelected.setter(uint64_t a1)
{
  return sub_10005C4E4(a1, &qword_10020A648, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NodeSelected, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
}

void (*Proto_Ropes_HttpService_InvokeResponse.nodeSelected.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x30uLL);
  *a1 = v4;
  void *v4 = v1;
  uint64_t v5 = sub_100003918(&qword_10020A648);
  uint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[1] = v6;
  size_t v7 = *(void *)(*(void *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NodeSelected(0) - 8)
                 + 64);
  v4[2] = malloc(v7);
  uint64_t v8 = malloc(v7);
  v4[3] = v8;
  sub_10003282C(v2, (uint64_t)v6, &qword_10020A648);
  uint64_t v9 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  v4[4] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v4[5] = v10;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) == 1)
  {
    sub_100010360((uint64_t)v6, &qword_10020A648);
LABEL_6:
    _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    return sub_10005913C;
  }
  if (swift_getEnumCaseMultiPayload() != 3)
  {
    sub_10005CA14((uint64_t)v6, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
    goto LABEL_6;
  }
  sub_10005CA74((uint64_t)v6, (uint64_t)v8, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NodeSelected);
  return sub_10005913C;
}

void sub_10005913C(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (*a1)[4];
  uint64_t v4 = (*a1)[5];
  uint64_t v5 = (void *)(*a1)[2];
  uint64_t v6 = (void *)(*a1)[3];
  uint64_t v8 = **a1;
  size_t v7 = (void *)(*a1)[1];
  if (a2)
  {
    sub_10005CB3C((*a1)[3], (uint64_t)v5, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NodeSelected);
    sub_100010360(v8, &qword_10020A648);
    sub_10005CA74((uint64_t)v5, v8, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NodeSelected);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v8, 0, 1, v3);
    sub_10005CA14((uint64_t)v6, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NodeSelected);
  }
  else
  {
    sub_100010360(**a1, &qword_10020A648);
    sub_10005CA74((uint64_t)v6, v8, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NodeSelected);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v8, 0, 1, v3);
  }
  free(v6);
  free(v5);
  free(v7);
  free(v2);
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.loggingMetadata.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003918(&qword_10020A648);
  __chkstk_darwin(v4 - 8, v5);
  size_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(v2, (uint64_t)v7, &qword_10020A648);
  uint64_t v8 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) == 1)
  {
    sub_100010360((uint64_t)v7, &qword_10020A648);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4) {
      return sub_10005CA74((uint64_t)v7, (uint64_t)a1, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata);
    }
    sub_10005CA14((uint64_t)v7, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
  }
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata(0);
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata.init()@<X0>(void *a1@<X8>)
{
  return sub_100059420((void (*)(void))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata, a1);
}

uint64_t sub_100059420@<X0>(void (*a1)(void)@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a1(0);
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.loggingMetadata.setter(uint64_t a1)
{
  return sub_10005C4E4(a1, &qword_10020A648, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
}

void (*Proto_Ropes_HttpService_InvokeResponse.loggingMetadata.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x30uLL);
  *a1 = v4;
  void *v4 = v1;
  uint64_t v5 = sub_100003918(&qword_10020A648);
  uint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[1] = v6;
  size_t v7 = *(void *)(*(void *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata(0) - 8)
                 + 64);
  v4[2] = malloc(v7);
  uint64_t v8 = malloc(v7);
  v4[3] = v8;
  sub_10003282C(v2, (uint64_t)v6, &qword_10020A648);
  uint64_t v9 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  v4[4] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v4[5] = v10;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) == 1)
  {
    sub_100010360((uint64_t)v6, &qword_10020A648);
LABEL_6:
    void *v8 = 0;
    v8[1] = 0xE000000000000000;
    _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    return sub_100059668;
  }
  if (swift_getEnumCaseMultiPayload() != 4)
  {
    sub_10005CA14((uint64_t)v6, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
    goto LABEL_6;
  }
  sub_10005CA74((uint64_t)v6, (uint64_t)v8, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata);
  return sub_100059668;
}

void sub_100059668(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (*a1)[4];
  uint64_t v4 = (*a1)[5];
  uint64_t v5 = (void *)(*a1)[2];
  uint64_t v6 = (void *)(*a1)[3];
  uint64_t v8 = **a1;
  size_t v7 = (void *)(*a1)[1];
  if (a2)
  {
    sub_10005CB3C((*a1)[3], (uint64_t)v5, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata);
    sub_100010360(v8, &qword_10020A648);
    sub_10005CA74((uint64_t)v5, v8, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v8, 0, 1, v3);
    sub_10005CA14((uint64_t)v6, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata);
  }
  else
  {
    sub_100010360(**a1, &qword_10020A648);
    sub_10005CA74((uint64_t)v6, v8, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v8, 0, 1, v3);
  }
  free(v6);
  free(v5);
  free(v7);
  free(v2);
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.rateLimitConfigurationList.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003918(&qword_10020A648);
  __chkstk_darwin(v4 - 8, v5);
  size_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(v2, (uint64_t)v7, &qword_10020A648);
  uint64_t v8 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) == 1)
  {
    sub_100010360((uint64_t)v7, &qword_10020A648);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 5) {
      return sub_10005CA74((uint64_t)v7, (uint64_t)a1, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
    }
    sub_10005CA14((uint64_t)v7, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
  }
  *a1 = &_swiftEmptyArrayStorage;
  type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0);
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.rateLimitConfigurationList.setter(uint64_t a1)
{
  return sub_10005C4E4(a1, &qword_10020A648, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
}

void (*Proto_Ropes_HttpService_InvokeResponse.rateLimitConfigurationList.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x30uLL);
  *a1 = v4;
  void *v4 = v1;
  uint64_t v5 = sub_100003918(&qword_10020A648);
  uint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[1] = v6;
  size_t v7 = *(void *)(*(void *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) - 8)
                 + 64);
  v4[2] = malloc(v7);
  uint64_t v8 = malloc(v7);
  v4[3] = v8;
  sub_10003282C(v2, (uint64_t)v6, &qword_10020A648);
  uint64_t v9 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  v4[4] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v4[5] = v10;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) == 1)
  {
    sub_100010360((uint64_t)v6, &qword_10020A648);
LABEL_6:
    void *v8 = &_swiftEmptyArrayStorage;
    _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    return sub_100059B40;
  }
  if (swift_getEnumCaseMultiPayload() != 5)
  {
    sub_10005CA14((uint64_t)v6, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
    goto LABEL_6;
  }
  sub_10005CA74((uint64_t)v6, (uint64_t)v8, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  return sub_100059B40;
}

void sub_100059B40(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (*a1)[4];
  uint64_t v4 = (*a1)[5];
  uint64_t v5 = (void *)(*a1)[2];
  uint64_t v6 = (void *)(*a1)[3];
  uint64_t v8 = **a1;
  size_t v7 = (void *)(*a1)[1];
  if (a2)
  {
    sub_10005CB3C((*a1)[3], (uint64_t)v5, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
    sub_100010360(v8, &qword_10020A648);
    sub_10005CA74((uint64_t)v5, v8, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v8, 0, 1, v3);
    sub_10005CA14((uint64_t)v6, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  }
  else
  {
    sub_100010360(**a1, &qword_10020A648);
    sub_10005CA74((uint64_t)v6, v8, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v8, 0, 1, v3);
  }
  free(v6);
  free(v5);
  free(v7);
  free(v2);
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.expiredAttestationList.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003918(&qword_10020A648);
  __chkstk_darwin(v4 - 8, v5);
  size_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(v2, (uint64_t)v7, &qword_10020A648);
  uint64_t v8 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) == 1)
  {
    sub_100010360((uint64_t)v7, &qword_10020A648);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 6) {
      return sub_10005CA74((uint64_t)v7, a1, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList);
    }
    sub_10005CA14((uint64_t)v7, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
  }
  *(void *)a1 = &_swiftEmptyArrayStorage;
  *(unsigned char *)(a1 + 8) = 0;
  type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(0);
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = &_swiftEmptyArrayStorage;
  *(unsigned char *)(a1 + 8) = 0;
  type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(0);
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.expiredAttestationList.setter(uint64_t a1)
{
  return sub_10005C4E4(a1, &qword_10020A648, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
}

void (*Proto_Ropes_HttpService_InvokeResponse.expiredAttestationList.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x30uLL);
  *a1 = v4;
  void *v4 = v1;
  uint64_t v5 = sub_100003918(&qword_10020A648);
  uint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[1] = v6;
  size_t v7 = *(void *)(*(void *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(0)
                             - 8)
                 + 64);
  v4[2] = malloc(v7);
  uint64_t v8 = malloc(v7);
  v4[3] = v8;
  sub_10003282C(v2, (uint64_t)v6, &qword_10020A648);
  uint64_t v9 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  v4[4] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v4[5] = v10;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) == 1)
  {
    sub_100010360((uint64_t)v6, &qword_10020A648);
LABEL_6:
    *(void *)uint64_t v8 = &_swiftEmptyArrayStorage;
    v8[8] = 0;
    _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    return sub_10005A064;
  }
  if (swift_getEnumCaseMultiPayload() != 6)
  {
    sub_10005CA14((uint64_t)v6, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
    goto LABEL_6;
  }
  sub_10005CA74((uint64_t)v6, (uint64_t)v8, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList);
  return sub_10005A064;
}

void sub_10005A064(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (*a1)[4];
  uint64_t v4 = (*a1)[5];
  uint64_t v5 = (void *)(*a1)[2];
  uint64_t v6 = (void *)(*a1)[3];
  uint64_t v8 = **a1;
  size_t v7 = (void *)(*a1)[1];
  if (a2)
  {
    sub_10005CB3C((*a1)[3], (uint64_t)v5, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList);
    sub_100010360(v8, &qword_10020A648);
    sub_10005CA74((uint64_t)v5, v8, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v8, 0, 1, v3);
    sub_10005CA14((uint64_t)v6, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList);
  }
  else
  {
    sub_100010360(**a1, &qword_10020A648);
    sub_10005CA74((uint64_t)v6, v8, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v8, 0, 1, v3);
  }
  free(v6);
  free(v5);
  free(v7);
  free(v2);
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.noFurtherAttestations.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003918(&qword_10020A648);
  __chkstk_darwin(v4 - 8, v5);
  size_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(v2, (uint64_t)v7, &qword_10020A648);
  uint64_t v8 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) == 1)
  {
    sub_100010360((uint64_t)v7, &qword_10020A648);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 7) {
      return sub_10005CA74((uint64_t)v7, a1, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations);
    }
    sub_10005CA14((uint64_t)v7, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
  }
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.noFurtherAttestations.setter(uint64_t a1)
{
  return sub_10005C4E4(a1, &qword_10020A648, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
}

void (*Proto_Ropes_HttpService_InvokeResponse.noFurtherAttestations.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x30uLL);
  *a1 = v4;
  void *v4 = v1;
  uint64_t v5 = sub_100003918(&qword_10020A648);
  uint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[1] = v6;
  size_t v7 = *(void *)(*(void *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations(0)
                             - 8)
                 + 64);
  v4[2] = malloc(v7);
  uint64_t v8 = malloc(v7);
  v4[3] = v8;
  sub_10003282C(v2, (uint64_t)v6, &qword_10020A648);
  uint64_t v9 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  v4[4] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v4[5] = v10;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) == 1)
  {
    sub_100010360((uint64_t)v6, &qword_10020A648);
LABEL_6:
    _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    return sub_10005A504;
  }
  if (swift_getEnumCaseMultiPayload() != 7)
  {
    sub_10005CA14((uint64_t)v6, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
    goto LABEL_6;
  }
  sub_10005CA74((uint64_t)v6, (uint64_t)v8, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations);
  return sub_10005A504;
}

void sub_10005A504(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (*a1)[4];
  uint64_t v4 = (*a1)[5];
  uint64_t v5 = (void *)(*a1)[2];
  uint64_t v6 = (void *)(*a1)[3];
  uint64_t v8 = **a1;
  size_t v7 = (void *)(*a1)[1];
  if (a2)
  {
    sub_10005CB3C((*a1)[3], (uint64_t)v5, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations);
    sub_100010360(v8, &qword_10020A648);
    sub_10005CA74((uint64_t)v5, v8, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v8, 0, 1, v3);
    sub_10005CA14((uint64_t)v6, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations);
  }
  else
  {
    sub_100010360(**a1, &qword_10020A648);
    sub_10005CA74((uint64_t)v6, v8, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v8, 0, 1, v3);
  }
  free(v6);
  free(v5);
  free(v7);
  free(v2);
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100057904(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse, a1);
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.unknownFields.setter(uint64_t a1)
{
  return sub_10005799C(a1, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse);
}

uint64_t (*Proto_Ropes_HttpService_InvokeResponse.unknownFields.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t static Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata.== infix(_:_:)(char *a1, char *a2)
{
  return sub_1000717E4(a1, a2, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata) & 1;
}

uint64_t _s20privatecloudcomputed38Proto_Ropes_HttpService_InvokeResponseV21NoFurtherAttestationsV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BFE60();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v12 = (char *)&v16 - v11;
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v13((char *)&v16 - v11, a1, v4);
  v13(v9, a2, v4);
  sub_100072F60(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  LOBYTE(a2) = sub_1001C0BD0();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v9, v4);
  v14(v12, v4);
  return a2 & 1;
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100057904(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata, a1);
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata.unknownFields.setter(uint64_t a1)
{
  return sub_10005799C(a1, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata);
}

uint64_t (*Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata.unknownFields.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100057750(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList, a1);
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList.unknownFields.setter(uint64_t a1)
{
  return sub_1000577E8(a1, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList);
}

uint64_t (*Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList.unknownFields.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_10005A9DC(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type, (void (*)(void))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse, a1);
}

uint64_t sub_10005A9DC@<X0>(uint64_t (*a1)(void)@<X0>, void (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a3, 1, 1, v5);
  a2(0);
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t Proto_Ropes_HttpService_PrefetchRequest.capabilities.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003918(&qword_10020A638);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Proto_Ropes_HttpService_PrefetchRequest(0);
  sub_10003282C(v1 + *(int *)(v7 + 20), (uint64_t)v6, &qword_10020A638);
  uint64_t v8 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_10005CA74((uint64_t)v6, a1, type metadata accessor for Proto_Ropes_Common_Capabilities);
  }
  *(void *)a1 = &_swiftEmptyArrayStorage;
  *(unsigned char *)(a1 + 8) = 0;
  _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  return sub_100010360((uint64_t)v6, &qword_10020A638);
}

uint64_t Proto_Ropes_HttpService_PrefetchRequest.capabilities.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Proto_Ropes_HttpService_PrefetchRequest(0) + 20);
  sub_100010360(v3, &qword_10020A638);
  sub_10005CA74(a1, v3, type metadata accessor for Proto_Ropes_Common_Capabilities);
  uint64_t v4 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(v3, 0, 1, v4);
}

void (*Proto_Ropes_HttpService_PrefetchRequest.capabilities.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100003918(&qword_10020A638);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  _OWORD v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_PrefetchRequest(0) + 20);
  *((_DWORD *)v3 + 12) = v11;
  sub_10003282C(v1 + v11, (uint64_t)v5, &qword_10020A638);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *(void *)uint64_t v10 = &_swiftEmptyArrayStorage;
    v10[8] = 0;
    _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_100010360((uint64_t)v5, &qword_10020A638);
  }
  else
  {
    sub_10005CA74((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_Ropes_Common_Capabilities);
  }
  return sub_100057600;
}

BOOL Proto_Ropes_HttpService_PrefetchRequest.hasCapabilities.getter()
{
  uint64_t v1 = sub_100003918(&qword_10020A638);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Proto_Ropes_HttpService_PrefetchRequest(0);
  sub_10003282C(v0 + *(int *)(v5 + 20), (uint64_t)v4, &qword_10020A638);
  uint64_t v6 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
  BOOL v7 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 1, v6) != 1;
  sub_100010360((uint64_t)v4, &qword_10020A638);
  return v7;
}

Swift::Void __swiftcall Proto_Ropes_HttpService_PrefetchRequest.clearCapabilities()()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for Proto_Ropes_HttpService_PrefetchRequest(0) + 20);
  sub_100010360(v1, &qword_10020A638);
  uint64_t v2 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
}

uint64_t Proto_Ropes_HttpService_PrefetchRequest.clientRequestedAttestationCount.getter()
{
  uint64_t v1 = (unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Ropes_HttpService_PrefetchRequest(0) + 24));
  if (v1[4]) {
    return 0;
  }
  else {
    return *(unsigned int *)v1;
  }
}

uint64_t Proto_Ropes_HttpService_PrefetchRequest.clientRequestedAttestationCount.setter(int a1)
{
  uint64_t result = type metadata accessor for Proto_Ropes_HttpService_PrefetchRequest(0);
  uint64_t v4 = v1 + *(int *)(result + 24);
  *(_DWORD *)uint64_t v4 = a1;
  *(unsigned char *)(v4 + 4) = 0;
  return result;
}

uint64_t (*Proto_Ropes_HttpService_PrefetchRequest.clientRequestedAttestationCount.modify(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_PrefetchRequest(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_100039020;
}

BOOL Proto_Ropes_HttpService_PrefetchRequest.hasClientRequestedAttestationCount.getter()
{
  return (*(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Ropes_HttpService_PrefetchRequest(0) + 24) + 4) & 1) == 0;
}

Swift::Void __swiftcall Proto_Ropes_HttpService_PrefetchRequest.clearClientRequestedAttestationCount()()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for Proto_Ropes_HttpService_PrefetchRequest(0) + 24);
  *(_DWORD *)uint64_t v1 = 0;
  *(unsigned char *)(v1 + 4) = 1;
}

uint64_t Proto_Ropes_HttpService_PrefetchRequest.init()@<X0>(uint64_t a1@<X8>)
{
  _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v2 = type metadata accessor for Proto_Ropes_HttpService_PrefetchRequest(0);
  uint64_t v3 = a1 + *(int *)(v2 + 20);
  uint64_t v4 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v6 = a1 + *(int *)(v2 + 24);
  *(_DWORD *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 4) = 1;
  return result;
}

uint64_t Proto_Ropes_HttpService_PrefetchUnaryResponse.rateLimitConfigurationList.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_100003918(&qword_10020A650);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Proto_Ropes_HttpService_PrefetchUnaryResponse(0);
  sub_10003282C(v1 + *(int *)(v7 + 24), (uint64_t)v6, &qword_10020A650);
  uint64_t v8 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_10005CA74((uint64_t)v6, (uint64_t)a1, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  }
  *a1 = &_swiftEmptyArrayStorage;
  _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  return sub_100010360((uint64_t)v6, &qword_10020A650);
}

uint64_t Proto_Ropes_HttpService_PrefetchUnaryResponse.rateLimitConfigurationList.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Proto_Ropes_HttpService_PrefetchUnaryResponse(0) + 24);
  sub_100010360(v3, &qword_10020A650);
  sub_10005CA74(a1, v3, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  uint64_t v4 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(v3, 0, 1, v4);
}

void (*Proto_Ropes_HttpService_PrefetchUnaryResponse.rateLimitConfigurationList.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100003918(&qword_10020A650);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  _OWORD v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_PrefetchUnaryResponse(0) + 24);
  *((_DWORD *)v3 + 12) = v11;
  sub_10003282C(v1 + v11, (uint64_t)v5, &qword_10020A650);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = &_swiftEmptyArrayStorage;
    _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_100010360((uint64_t)v5, &qword_10020A650);
  }
  else
  {
    sub_10005CA74((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  }
  return sub_10005B47C;
}

void sub_10005B47C(uint64_t a1, char a2)
{
}

BOOL Proto_Ropes_HttpService_PrefetchUnaryResponse.hasRateLimitConfigurationList.getter()
{
  uint64_t v1 = sub_100003918(&qword_10020A650);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Proto_Ropes_HttpService_PrefetchUnaryResponse(0);
  sub_10003282C(v0 + *(int *)(v5 + 24), (uint64_t)v4, &qword_10020A650);
  uint64_t v6 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0);
  BOOL v7 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 1, v6) != 1;
  sub_100010360((uint64_t)v4, &qword_10020A650);
  return v7;
}

Swift::Void __swiftcall Proto_Ropes_HttpService_PrefetchUnaryResponse.clearRateLimitConfigurationList()()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for Proto_Ropes_HttpService_PrefetchUnaryResponse(0) + 24);
  sub_100010360(v1, &qword_10020A650);
  uint64_t v2 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
}

uint64_t Proto_Ropes_HttpService_PrefetchUnaryResponse.compressedAttestationList.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003918(&qword_10020A658);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Proto_Ropes_HttpService_PrefetchUnaryResponse(0);
  sub_10003282C(v1 + *(int *)(v7 + 28), (uint64_t)v6, &qword_10020A658);
  uint64_t v8 = type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_10005CA74((uint64_t)v6, a1, type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
  }
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  *(_OWORD *)(a1 + 16) = xmmword_1001CB200;
  *(_DWORD *)(a1 + 32) = 0;
  _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  return sub_100010360((uint64_t)v6, &qword_10020A658);
}

uint64_t Proto_Ropes_HttpService_PrefetchUnaryResponse.compressedAttestationList.setter(uint64_t a1)
{
  return sub_10005D880(a1, type metadata accessor for Proto_Ropes_HttpService_PrefetchUnaryResponse, &qword_10020A658, type metadata accessor for Proto_Ropes_Common_CompressedAttestationList, type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
}

void (*Proto_Ropes_HttpService_PrefetchUnaryResponse.compressedAttestationList.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100003918(&qword_10020A658);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  _OWORD v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_PrefetchUnaryResponse(0) + 28);
  *((_DWORD *)v3 + 12) = v11;
  sub_10003282C(v1 + v11, (uint64_t)v5, &qword_10020A658);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *(void *)uint64_t v10 = 0;
    v10[8] = 1;
    *((_OWORD *)v10 + 1) = xmmword_1001CB200;
    *((_DWORD *)v10 + 8) = 0;
    _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_100010360((uint64_t)v5, &qword_10020A658);
  }
  else
  {
    sub_10005CA74((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
  }
  return sub_10005B95C;
}

void sub_10005B95C(uint64_t a1, char a2)
{
}

BOOL Proto_Ropes_HttpService_PrefetchUnaryResponse.hasCompressedAttestationList.getter()
{
  return sub_10005B9D8(&qword_10020A658, type metadata accessor for Proto_Ropes_HttpService_PrefetchUnaryResponse, type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
}

BOOL sub_10005B9D8(uint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v7 = sub_100003918(a1);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a2(0);
  sub_10003282C(v3 + *(int *)(v11 + 28), (uint64_t)v10, a1);
  uint64_t v12 = a3(0);
  BOOL v13 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v10, 1, v12) != 1;
  sub_100010360((uint64_t)v10, a1);
  return v13;
}

Swift::Void __swiftcall Proto_Ropes_HttpService_PrefetchUnaryResponse.clearCompressedAttestationList()()
{
}

uint64_t sub_10005BB00(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 28);
  sub_100010360(v6, a2);
  uint64_t v7 = a3(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
  return v8(v6, 1, 1, v7);
}

uint64_t Proto_Ropes_HttpService_PrefetchUnaryResponse.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100057904(type metadata accessor for Proto_Ropes_HttpService_PrefetchUnaryResponse, a1);
}

uint64_t Proto_Ropes_HttpService_PrefetchUnaryResponse.unknownFields.setter(uint64_t a1)
{
  return sub_10005799C(a1, type metadata accessor for Proto_Ropes_HttpService_PrefetchUnaryResponse);
}

uint64_t (*Proto_Ropes_HttpService_PrefetchUnaryResponse.unknownFields.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t Proto_Ropes_HttpService_PrefetchUnaryResponse.init()@<X0>(void *a1@<X8>)
{
  *a1 = &_swiftEmptyArrayStorage;
  uint64_t v2 = type metadata accessor for Proto_Ropes_HttpService_PrefetchUnaryResponse(0);
  _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v3 = (char *)a1 + *(int *)(v2 + 24);
  uint64_t v4 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = (char *)a1 + *(int *)(v2 + 28);
  uint64_t v6 = type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0);
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, 1, 1, v6);
}

uint64_t Proto_Ropes_HttpService_PrefetchResponse.type.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003282C(v1, a1, &qword_10020A660);
}

uint64_t Proto_Ropes_HttpService_PrefetchResponse.type.setter(uint64_t a1)
{
  return sub_10004E328(a1, v1, &qword_10020A660);
}

uint64_t Proto_Ropes_HttpService_PrefetchResponse.attestation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003918(&qword_10020A660);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(v2, (uint64_t)v7, &qword_10020A660);
  uint64_t v8 = type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) == 1)
  {
    sub_100010360((uint64_t)v7, &qword_10020A660);
LABEL_5:
    *(_OWORD *)a1 = xmmword_1001CB200;
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0xE000000000000000;
    uint64_t v9 = (int *)type metadata accessor for Proto_Ropes_Common_Attestation(0);
    _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v10 = a1 + v9[7];
    *(_DWORD *)uint64_t v10 = 0;
    *(unsigned char *)(v10 + 4) = 1;
    uint64_t v11 = a1 + v9[8];
    uint64_t v12 = sub_1001BFDF0();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
    uint64_t v14 = (void *)(a1 + v9[9]);
    *uint64_t v14 = 0;
    v14[1] = 0;
    uint64_t v15 = (void *)(a1 + v9[10]);
    *uint64_t v15 = 0;
    v15[1] = 0;
    uint64_t v16 = (void *)(a1 + v9[11]);
    *uint64_t v16 = 0;
    v16[1] = 0;
    char v17 = (void *)(a1 + v9[12]);
    *char v17 = 0;
    v17[1] = 0;
    return result;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10005CA14((uint64_t)v7, type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type);
    goto LABEL_5;
  }
  return sub_10005CA74((uint64_t)v7, a1, type metadata accessor for Proto_Ropes_Common_Attestation);
}

uint64_t Proto_Ropes_HttpService_PrefetchResponse.attestation.setter(uint64_t a1)
{
  return sub_10005C4E4(a1, &qword_10020A660, type metadata accessor for Proto_Ropes_Common_Attestation, type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type);
}

void (*Proto_Ropes_HttpService_PrefetchResponse.attestation.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x30uLL);
  *a1 = v4;
  void *v4 = v1;
  uint64_t v5 = sub_100003918(&qword_10020A660);
  uint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[1] = v6;
  uint64_t v7 = (int *)type metadata accessor for Proto_Ropes_Common_Attestation(0);
  size_t v8 = *(void *)(*((void *)v7 - 1) + 64);
  v4[2] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v4[3] = v9;
  sub_10003282C(v2, (uint64_t)v6, &qword_10020A660);
  uint64_t v10 = type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type(0);
  v4[4] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v4[5] = v11;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) == 1)
  {
    sub_100010360((uint64_t)v6, &qword_10020A660);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_10005CA74((uint64_t)v6, (uint64_t)v9, type metadata accessor for Proto_Ropes_Common_Attestation);
      return sub_10005C1DC;
    }
    sub_10005CA14((uint64_t)v6, type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type);
  }
  *(_OWORD *)uint64_t v9 = xmmword_1001CB200;
  v9[2] = 0;
  v9[3] = 0xE000000000000000;
  _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v12 = (char *)v9 + v7[7];
  *(_DWORD *)uint64_t v12 = 0;
  v12[4] = 1;
  BOOL v13 = (char *)v9 + v7[8];
  uint64_t v14 = sub_1001BFDF0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  uint64_t v15 = (void *)((char *)v9 + v7[9]);
  *uint64_t v15 = 0;
  v15[1] = 0;
  uint64_t v16 = (void *)((char *)v9 + v7[10]);
  *uint64_t v16 = 0;
  v16[1] = 0;
  char v17 = (void *)((char *)v9 + v7[11]);
  *char v17 = 0;
  v17[1] = 0;
  uint64_t v18 = (void *)((char *)v9 + v7[12]);
  *uint64_t v18 = 0;
  v18[1] = 0;
  return sub_10005C1DC;
}

void sub_10005C1DC(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (*a1)[4];
  uint64_t v4 = (*a1)[5];
  uint64_t v5 = (void *)(*a1)[2];
  uint64_t v6 = (void *)(*a1)[3];
  uint64_t v8 = **a1;
  uint64_t v7 = (void *)(*a1)[1];
  if (a2)
  {
    sub_10005CB3C((*a1)[3], (uint64_t)v5, type metadata accessor for Proto_Ropes_Common_Attestation);
    sub_100010360(v8, &qword_10020A660);
    sub_10005CA74((uint64_t)v5, v8, type metadata accessor for Proto_Ropes_Common_Attestation);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v8, 0, 1, v3);
    sub_10005CA14((uint64_t)v6, type metadata accessor for Proto_Ropes_Common_Attestation);
  }
  else
  {
    sub_100010360(**a1, &qword_10020A660);
    sub_10005CA74((uint64_t)v6, v8, type metadata accessor for Proto_Ropes_Common_Attestation);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v8, 0, 1, v3);
  }
  free(v6);
  free(v5);
  free(v7);
  free(v2);
}

uint64_t Proto_Ropes_HttpService_PrefetchResponse.rateLimitConfigurationList.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003918(&qword_10020A660);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(v2, (uint64_t)v7, &qword_10020A660);
  uint64_t v8 = type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) == 1)
  {
    sub_100010360((uint64_t)v7, &qword_10020A660);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1) {
      return sub_10005CA74((uint64_t)v7, (uint64_t)a1, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
    }
    sub_10005CA14((uint64_t)v7, type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type);
  }
  *a1 = &_swiftEmptyArrayStorage;
  type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0);
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t Proto_Ropes_HttpService_PrefetchResponse.rateLimitConfigurationList.setter(uint64_t a1)
{
  return sub_10005C4E4(a1, &qword_10020A660, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList, type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type);
}

uint64_t sub_10005C4E4(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  sub_100010360(v4, a2);
  sub_10005CA74(a1, v4, a3);
  uint64_t v8 = a4(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
  return v9(v4, 0, 1, v8);
}

void (*Proto_Ropes_HttpService_PrefetchResponse.rateLimitConfigurationList.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x30uLL);
  *a1 = v4;
  void *v4 = v1;
  uint64_t v5 = sub_100003918(&qword_10020A660);
  uint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[1] = v6;
  size_t v7 = *(void *)(*(void *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) - 8)
                 + 64);
  v4[2] = malloc(v7);
  uint64_t v8 = malloc(v7);
  v4[3] = v8;
  sub_10003282C(v2, (uint64_t)v6, &qword_10020A660);
  uint64_t v9 = type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type(0);
  v4[4] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v4[5] = v10;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) == 1)
  {
    sub_100010360((uint64_t)v6, &qword_10020A660);
LABEL_6:
    void *v8 = &_swiftEmptyArrayStorage;
    _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    return sub_10005C76C;
  }
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_10005CA14((uint64_t)v6, type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type);
    goto LABEL_6;
  }
  sub_10005CA74((uint64_t)v6, (uint64_t)v8, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  return sub_10005C76C;
}

void sub_10005C76C(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (*a1)[4];
  uint64_t v4 = (*a1)[5];
  uint64_t v5 = (void *)(*a1)[2];
  uint64_t v6 = (void *)(*a1)[3];
  uint64_t v8 = **a1;
  size_t v7 = (void *)(*a1)[1];
  if (a2)
  {
    sub_10005CB3C((*a1)[3], (uint64_t)v5, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
    sub_100010360(v8, &qword_10020A660);
    sub_10005CA74((uint64_t)v5, v8, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v8, 0, 1, v3);
    sub_10005CA14((uint64_t)v6, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  }
  else
  {
    sub_100010360(**a1, &qword_10020A660);
    sub_10005CA74((uint64_t)v6, v8, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v8, 0, 1, v3);
  }
  free(v6);
  free(v5);
  free(v7);
  free(v2);
}

uint64_t Proto_Ropes_HttpService_PrefetchResponse.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100057904(type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse, a1);
}

uint64_t Proto_Ropes_HttpService_PrefetchResponse.unknownFields.setter(uint64_t a1)
{
  return sub_10005799C(a1, type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse);
}

uint64_t (*Proto_Ropes_HttpService_PrefetchResponse.unknownFields.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t Proto_Ropes_HttpService_PrefetchResponse.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_10005A9DC(type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type, (void (*)(void))type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse, a1);
}

uint64_t Proto_Ropes_HttpService_ConfigRequest.type.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003282C(v1, a1, &qword_10020A628);
}

uint64_t Proto_Ropes_HttpService_ConfigRequest.type.setter(uint64_t a1)
{
  return sub_10004E328(a1, v1, &qword_10020A628);
}

uint64_t type metadata accessor for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type(uint64_t a1)
{
  return sub_10001C958(a1, (uint64_t *)&unk_10020B3B8);
}

uint64_t type metadata accessor for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type(uint64_t a1)
{
  return sub_10001C958(a1, (uint64_t *)&unk_10020B4D0);
}

uint64_t sub_10005CA14(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10005CA74(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest(uint64_t a1)
{
  return sub_10001C958(a1, (uint64_t *)&unk_10020AAA0);
}

uint64_t type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type(uint64_t a1)
{
  return sub_10001C958(a1, qword_10020AA10);
}

uint64_t type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata(uint64_t a1)
{
  return sub_10001C958(a1, qword_10020ABD8);
}

uint64_t sub_10005CB3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate(uint64_t a1)
{
  return sub_10001C958(a1, qword_10020AC68);
}

uint64_t type metadata accessor for Proto_Ropes_HttpService_InvokeRequest(uint64_t a1)
{
  return sub_10001C958(a1, (uint64_t *)&unk_10020A960);
}

void (*Proto_Ropes_HttpService_ConfigRequest.rateLimitConfigRequest.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x30uLL);
  *a1 = v4;
  void *v4 = v1;
  uint64_t v5 = sub_100003918(&qword_10020A628);
  uint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[1] = v6;
  size_t v7 = (int *)type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0);
  size_t v8 = *(void *)(*((void *)v7 - 1) + 64);
  v4[2] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v4[3] = v9;
  sub_10003282C(v2, (uint64_t)v6, &qword_10020A628);
  uint64_t v10 = type metadata accessor for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type(0);
  v4[4] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v4[5] = v11;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) == 1)
  {
    sub_100010360((uint64_t)v6, &qword_10020A628);
    *uint64_t v9 = sub_100054BFC((uint64_t)&_swiftEmptyArrayStorage, &qword_10020B9B8, &qword_10020B9C0, type metadata accessor for Proto_Ropes_RateLimit_Values, type metadata accessor for Proto_Ropes_RateLimit_Values);
    v9[1] = 0;
    *((unsigned char *)v9 + 16) = 1;
    _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v12 = (void *)((char *)v9 + v7[7]);
    void *v12 = 0;
    v12[1] = 0;
    BOOL v13 = (void *)((char *)v9 + v7[8]);
    *BOOL v13 = 0;
    v13[1] = 0;
    uint64_t v14 = (void *)((char *)v9 + v7[9]);
    *uint64_t v14 = 0;
    v14[1] = 0;
  }
  else
  {
    sub_10005CA74((uint64_t)v6, (uint64_t)v9, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest);
  }
  return sub_10005CDE4;
}

void sub_10005CDE4(uint64_t **a1, char a2)
{
}

uint64_t Proto_Ropes_HttpService_ConfigRequest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100057904(type metadata accessor for Proto_Ropes_HttpService_ConfigRequest, a1);
}

uint64_t Proto_Ropes_HttpService_ConfigRequest.unknownFields.setter(uint64_t a1)
{
  return sub_10005799C(a1, type metadata accessor for Proto_Ropes_HttpService_ConfigRequest);
}

uint64_t (*Proto_Ropes_HttpService_ConfigRequest.unknownFields.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t static Proto_Ropes_HttpService_ConfigRequest.OneOf_Type.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0);
  __chkstk_darwin(v4 - 8, v5);
  size_t v7 = (uint64_t *)((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_100003918(&qword_10020A668);
  uint64_t v10 = __chkstk_darwin(v8 - 8, v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t)&v12[*(int *)(v10 + 56)];
  sub_10005CB3C(a1, (uint64_t)v12, type metadata accessor for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type);
  sub_10005CB3C(a2, v13, type metadata accessor for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type);
  sub_10005CA74((uint64_t)v12, (uint64_t)v7, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest);
  LOBYTE(a2) = _s20privatecloudcomputed022Proto_Ropes_RateLimit_dE13ConfigRequestV2eeoiySbAC_ACtFZ_0(v7, v13);
  sub_10005CA14(v13, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest);
  sub_10005CA14((uint64_t)v7, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest);
  return a2 & 1;
}

uint64_t sub_10005D004(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0);
  __chkstk_darwin(v4 - 8, v5);
  size_t v7 = (uint64_t *)((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_100003918(&qword_10020A668);
  uint64_t v10 = __chkstk_darwin(v8 - 8, v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t)&v12[*(int *)(v10 + 56)];
  sub_10005CB3C(a1, (uint64_t)v12, type metadata accessor for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type);
  sub_10005CB3C(a2, v13, type metadata accessor for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type);
  sub_10005CA74((uint64_t)v12, (uint64_t)v7, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest);
  LOBYTE(a2) = static Proto_Ropes_RateLimit_RateLimitConfigRequest.== infix(_:_:)(v7, v13);
  sub_10005CA14(v13, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest);
  sub_10005CA14((uint64_t)v7, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest);
  return a2 & 1;
}

uint64_t Proto_Ropes_HttpService_ConfigRequest.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_10005A9DC(type metadata accessor for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type, (void (*)(void))type metadata accessor for Proto_Ropes_HttpService_ConfigRequest, a1);
}

uint64_t Proto_Ropes_HttpService_ConfigResponse.type.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003282C(v1, a1, &qword_10020A630);
}

uint64_t Proto_Ropes_HttpService_ConfigResponse.type.setter(uint64_t a1)
{
  return sub_10004E328(a1, v1, &qword_10020A630);
}

uint64_t Proto_Ropes_HttpService_ConfigResponse.rateLimitConfigurationList.setter(uint64_t a1)
{
  return sub_10005D210(a1, &qword_10020A630, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList, type metadata accessor for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type);
}

uint64_t sub_10005D210(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  sub_100010360(v4, a2);
  sub_10005CA74(a1, v4, a3);
  uint64_t v8 = a4(0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
  return v9(v4, 0, 1, v8);
}

void (*Proto_Ropes_HttpService_ConfigResponse.rateLimitConfigurationList.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x30uLL);
  *a1 = v4;
  void *v4 = v1;
  uint64_t v5 = sub_100003918(&qword_10020A630);
  uint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[1] = v6;
  size_t v7 = *(void *)(*(void *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) - 8)
                 + 64);
  v4[2] = malloc(v7);
  uint64_t v8 = malloc(v7);
  v4[3] = v8;
  sub_10003282C(v2, (uint64_t)v6, &qword_10020A630);
  uint64_t v9 = type metadata accessor for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type(0);
  v4[4] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v4[5] = v10;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) == 1)
  {
    sub_100010360((uint64_t)v6, &qword_10020A630);
    void *v8 = &_swiftEmptyArrayStorage;
    _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  }
  else
  {
    sub_10005CA74((uint64_t)v6, (uint64_t)v8, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  }
  return sub_10005D440;
}

void sub_10005D440(uint64_t **a1, char a2)
{
}

void sub_10005D488(uint64_t **a1, char a2, uint64_t *a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v8 = *a1;
  uint64_t v9 = (*a1)[4];
  uint64_t v10 = (*a1)[5];
  uint64_t v11 = (void *)(*a1)[2];
  uint64_t v12 = (void *)(*a1)[3];
  uint64_t v14 = **a1;
  uint64_t v13 = (void *)(*a1)[1];
  if (a2)
  {
    sub_10005CB3C((*a1)[3], (uint64_t)v11, a5);
    sub_100010360(v14, a3);
    sub_10005CA74((uint64_t)v11, v14, a4);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
    sub_10005CA14((uint64_t)v12, a6);
  }
  else
  {
    sub_100010360(**a1, a3);
    sub_10005CA74((uint64_t)v12, v14, a4);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  free(v12);
  free(v11);
  free(v13);
  free(v8);
}

uint64_t Proto_Ropes_HttpService_ConfigResponse.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100057904(type metadata accessor for Proto_Ropes_HttpService_ConfigResponse, a1);
}

uint64_t Proto_Ropes_HttpService_ConfigResponse.unknownFields.setter(uint64_t a1)
{
  return sub_10005799C(a1, type metadata accessor for Proto_Ropes_HttpService_ConfigResponse);
}

uint64_t (*Proto_Ropes_HttpService_ConfigResponse.unknownFields.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t Proto_Ropes_HttpService_ConfigResponse.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_10005A9DC(type metadata accessor for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type, (void (*)(void))type metadata accessor for Proto_Ropes_HttpService_ConfigResponse, a1);
}

uint64_t Proto_Ropes_HttpService_AdminApiResponse.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100057750(type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse, a1);
}

uint64_t Proto_Ropes_HttpService_AdminApiResponse.unknownFields.setter(uint64_t a1)
{
  return sub_1000577E8(a1, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse);
}

uint64_t (*Proto_Ropes_HttpService_AdminApiResponse.unknownFields.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t Proto_Ropes_HttpService_AdminApiResponse.Workload.routingParameters.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v3 = sub_100003918(&qword_10020A670);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload(0);
  sub_10003282C(v1 + *(int *)(v7 + 28), (uint64_t)v6, &qword_10020A670);
  uint64_t v8 = type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_10005CA74((uint64_t)v6, (uint64_t)a1, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters);
  }
  *a1 = sub_100054A9C((uint64_t)&_swiftEmptyArrayStorage);
  _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  return sub_100010360((uint64_t)v6, &qword_10020A670);
}

uint64_t Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters.init()@<X0>(unint64_t *a1@<X8>)
{
  *a1 = sub_100054A9C((uint64_t)&_swiftEmptyArrayStorage);
  type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters(0);
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t Proto_Ropes_HttpService_AdminApiResponse.Workload.routingParameters.setter(uint64_t a1)
{
  return sub_10005D880(a1, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload, &qword_10020A670, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters);
}

uint64_t sub_10005D880(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v10 = v5 + *(int *)(a2(0) + 28);
  sub_100010360(v10, a3);
  sub_10005CA74(a1, v10, a4);
  uint64_t v11 = a5(0);
  uint64_t v12 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
  return v12(v10, 0, 1, v11);
}

void (*Proto_Ropes_HttpService_AdminApiResponse.Workload.routingParameters.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100003918(&qword_10020A670);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  _OWORD v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload(0) + 28);
  *((_DWORD *)v3 + 12) = v11;
  sub_10003282C(v1 + v11, (uint64_t)v5, &qword_10020A670);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = sub_100054A9C((uint64_t)&_swiftEmptyArrayStorage);
    _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_100010360((uint64_t)v5, &qword_10020A670);
  }
  else
  {
    sub_10005CA74((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters);
  }
  return sub_10005DADC;
}

void sub_10005DADC(uint64_t a1, char a2)
{
}

void sub_10005DB24(uint64_t a1, char a2, uint64_t *a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v8 = *(void **)a1;
  uint64_t v9 = *(int *)(*(void *)a1 + 48);
  uint64_t v10 = *(void **)(*(void *)a1 + 32);
  uint64_t v11 = *(void **)(*(void *)a1 + 40);
  uint64_t v12 = *(void *)(*(void *)a1 + 16);
  uint64_t v13 = *(void *)(*(void *)a1 + 24);
  uint64_t v14 = *(void **)(*(void *)a1 + 8);
  uint64_t v15 = **(void **)a1 + v9;
  if (a2)
  {
    sub_10005CB3C(*(void *)(*(void *)a1 + 40), (uint64_t)v10, a5);
    sub_100010360(v15, a3);
    sub_10005CA74((uint64_t)v10, v15, a4);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v15, 0, 1, v12);
    sub_10005CA14((uint64_t)v11, a6);
  }
  else
  {
    sub_100010360(**(void **)a1 + v9, a3);
    sub_10005CA74((uint64_t)v11, v15, a4);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v15, 0, 1, v12);
  }
  free(v11);
  free(v10);
  free(v14);
  free(v8);
}

BOOL Proto_Ropes_HttpService_AdminApiResponse.Workload.hasRoutingParameters.getter()
{
  return sub_10005B9D8(&qword_10020A670, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters);
}

Swift::Void __swiftcall Proto_Ropes_HttpService_AdminApiResponse.Workload.clearRoutingParameters()()
{
}

uint64_t Proto_Ropes_HttpService_AdminApiResponse.Workload.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100057750(type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload, a1);
}

uint64_t Proto_Ropes_HttpService_AdminApiResponse.Workload.unknownFields.setter(uint64_t a1)
{
  return sub_1000577E8(a1, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload);
}

uint64_t (*Proto_Ropes_HttpService_AdminApiResponse.Workload.unknownFields.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100057904(type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters, a1);
}

uint64_t Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters.unknownFields.setter(uint64_t a1)
{
  return sub_10005799C(a1, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters);
}

uint64_t (*Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters.unknownFields.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t Proto_Ropes_HttpService_AdminApiResponse.Workload.init()@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = &_swiftEmptyArrayStorage;
  uint64_t v2 = type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload(0);
  _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v3 = (char *)a1 + *(int *)(v2 + 28);
  uint64_t v4 = type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters(0);
  uint64_t v5 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(v3, 1, 1, v4);
}

uint64_t Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100057904(type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint, a1);
}

uint64_t Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint.unknownFields.setter(uint64_t a1)
{
  return sub_10005799C(a1, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint);
}

uint64_t (*Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint.unknownFields.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint.init()@<X0>(void *a1@<X8>)
{
  return sub_100059420((void (*)(void))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint, a1);
}

uint64_t Proto_Ropes_HttpService_AdminApiResponse.init()@<X0>(void *a1@<X8>)
{
  *a1 = &_swiftEmptyArrayStorage;
  a1[1] = &_swiftEmptyArrayStorage;
  type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse(0);
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

void *Proto_Ropes_HttpService_InvokeRequest.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Ropes_HttpService_InvokeRequest.protoMessageName;
}

unint64_t static Proto_Ropes_HttpService_InvokeRequest.protoMessageName.getter()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_10005DF3C()
{
  uint64_t v0 = sub_1001C0160();
  sub_100044F74(v0, static Proto_Ropes_HttpService_InvokeRequest._protobuf_nameMap);
  sub_10000D978(v0, (uint64_t)static Proto_Ropes_HttpService_InvokeRequest._protobuf_nameMap);
  sub_100003918(&qword_100209FB8);
  uint64_t v1 = (int *)(sub_100003918(&qword_100209FC0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001CD7D0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "setup_request";
  *(void *)(v6 + 8) = 13;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v8 = sub_1001C0130();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "logging_metadata";
  *((void *)v10 + 1) = 16;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 3;
  *(void *)uint64_t v11 = "terminate";
  *(void *)(v11 + 8) = 9;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_1001C0140();
}

uint64_t Proto_Ropes_HttpService_InvokeRequest._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_100207838, (uint64_t)static Proto_Ropes_HttpService_InvokeRequest._protobuf_nameMap);
}

uint64_t static Proto_Ropes_HttpService_InvokeRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_100207838, (uint64_t)static Proto_Ropes_HttpService_InvokeRequest._protobuf_nameMap, a1);
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  while (1)
  {
    uint64_t result = sub_1001BFF00();
    if (v4 || (v10 & 1) != 0) {
      break;
    }
    switch(result)
    {
      case 3:
        sub_10005ED30(v5, a1, a2, a3);
        break;
      case 2:
        sub_10005E7BC(v5, a1, a2, a3);
        break;
      case 1:
        sub_10005E248(v5, a1, a2, a3);
        break;
    }
  }
  return result;
}

uint64_t sub_10005E248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v56 = a4;
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  uint64_t v5 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = __chkstk_darwin(v5, v7);
  uint64_t v48 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v10);
  uint64_t v51 = (char *)&v44 - v11;
  uint64_t v12 = sub_100003918(&qword_10020A640);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v22);
  uint64_t v24 = (char *)&v44 - v23;
  uint64_t v25 = sub_100003918(&qword_10020B988);
  uint64_t v27 = __chkstk_darwin(v25 - 8, v26);
  uint64_t v49 = (uint64_t)&v44 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v29);
  uint64_t v31 = (char *)&v44 - v30;
  uint64_t v50 = v6;
  uint64_t v32 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v53 = v5;
  uint64_t v33 = v5;
  uint64_t v34 = v32;
  v32((char *)&v44 - v30, 1, 1, v33);
  uint64_t v47 = a1;
  sub_10003282C(a1, (uint64_t)v15, &qword_10020A640);
  uint64_t v46 = v17;
  int v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
  if (v35 == 1)
  {
    sub_100010360((uint64_t)v15, &qword_10020A640);
    uint64_t v36 = v16;
    uint64_t v37 = v53;
  }
  else
  {
    uint64_t v45 = v34;
    uint64_t v38 = (uint64_t)v51;
    sub_10005CA74((uint64_t)v15, (uint64_t)v24, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
    sub_10005CA74((uint64_t)v24, (uint64_t)v21, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
    uint64_t v36 = v16;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_10005CA14((uint64_t)v21, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
      uint64_t v37 = v53;
    }
    else
    {
      sub_100010360((uint64_t)v31, &qword_10020B988);
      sub_10005CA74((uint64_t)v21, v38, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest);
      sub_10005CA74(v38, (uint64_t)v31, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest);
      uint64_t v37 = v53;
      v45(v31, 0, 1, v53);
    }
  }
  uint64_t v39 = v52;
  sub_100072F60(&qword_10020A778, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest);
  sub_1001BFFE0();
  if (v39) {
    return sub_100010360((uint64_t)v31, &qword_10020B988);
  }
  uint64_t v41 = v49;
  sub_10003282C((uint64_t)v31, v49, &qword_10020B988);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v41, 1, v37) == 1)
  {
    sub_100010360((uint64_t)v31, &qword_10020B988);
    return sub_100010360(v41, &qword_10020B988);
  }
  else
  {
    uint64_t v42 = v48;
    sub_10005CA74(v41, v48, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest);
    if (v35 != 1) {
      sub_1001BFF10();
    }
    sub_100010360((uint64_t)v31, &qword_10020B988);
    uint64_t v43 = v47;
    sub_100010360(v47, &qword_10020A640);
    sub_10005CA74(v42, v43, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v36);
  }
}

uint64_t sub_10005E7BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v56 = a4;
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  uint64_t v5 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = __chkstk_darwin(v5, v7);
  uint64_t v48 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v10);
  uint64_t v51 = (char *)&v44 - v11;
  uint64_t v12 = sub_100003918(&qword_10020A640);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v22);
  uint64_t v24 = (char *)&v44 - v23;
  uint64_t v25 = sub_100003918(&qword_10020B990);
  uint64_t v27 = __chkstk_darwin(v25 - 8, v26);
  uint64_t v49 = (uint64_t)&v44 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v29);
  uint64_t v31 = (char *)&v44 - v30;
  uint64_t v50 = v6;
  uint64_t v32 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v53 = v5;
  uint64_t v33 = v5;
  uint64_t v34 = v32;
  v32((char *)&v44 - v30, 1, 1, v33);
  uint64_t v47 = a1;
  sub_10003282C(a1, (uint64_t)v15, &qword_10020A640);
  uint64_t v46 = v17;
  int v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
  if (v35 == 1)
  {
    sub_100010360((uint64_t)v15, &qword_10020A640);
    uint64_t v36 = v16;
  }
  else
  {
    uint64_t v45 = v34;
    uint64_t v37 = (uint64_t)v51;
    sub_10005CA74((uint64_t)v15, (uint64_t)v24, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
    sub_10005CA74((uint64_t)v24, (uint64_t)v21, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
    uint64_t v36 = v16;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_100010360((uint64_t)v31, &qword_10020B990);
      sub_10005CA74((uint64_t)v21, v37, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata);
      sub_10005CA74(v37, (uint64_t)v31, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata);
      uint64_t v38 = v53;
      v45(v31, 0, 1, v53);
      goto LABEL_7;
    }
    sub_10005CA14((uint64_t)v21, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
  }
  uint64_t v38 = v53;
LABEL_7:
  uint64_t v39 = v52;
  sub_100072F60(&qword_10020A7A0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata);
  sub_1001BFFE0();
  if (v39) {
    return sub_100010360((uint64_t)v31, &qword_10020B990);
  }
  uint64_t v41 = v49;
  sub_10003282C((uint64_t)v31, v49, &qword_10020B990);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v41, 1, v38) == 1)
  {
    sub_100010360((uint64_t)v31, &qword_10020B990);
    return sub_100010360(v41, &qword_10020B990);
  }
  else
  {
    uint64_t v42 = v48;
    sub_10005CA74(v41, v48, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata);
    if (v35 != 1) {
      sub_1001BFF10();
    }
    sub_100010360((uint64_t)v31, &qword_10020B990);
    uint64_t v43 = v47;
    sub_100010360(v47, &qword_10020A640);
    sub_10005CA74(v42, v43, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v36);
  }
}

uint64_t sub_10005ED30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v56 = a4;
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  uint64_t v5 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = __chkstk_darwin(v5, v7);
  uint64_t v48 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v10);
  uint64_t v51 = (char *)&v44 - v11;
  uint64_t v12 = sub_100003918(&qword_10020A640);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v22);
  uint64_t v24 = (char *)&v44 - v23;
  uint64_t v25 = sub_100003918(&qword_10020B998);
  uint64_t v27 = __chkstk_darwin(v25 - 8, v26);
  uint64_t v49 = (uint64_t)&v44 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v29);
  uint64_t v31 = (char *)&v44 - v30;
  uint64_t v50 = v6;
  uint64_t v32 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v53 = v5;
  uint64_t v33 = v5;
  uint64_t v34 = v32;
  v32((char *)&v44 - v30, 1, 1, v33);
  uint64_t v47 = a1;
  sub_10003282C(a1, (uint64_t)v15, &qword_10020A640);
  uint64_t v46 = v17;
  int v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
  if (v35 == 1)
  {
    sub_100010360((uint64_t)v15, &qword_10020A640);
    uint64_t v36 = v16;
  }
  else
  {
    uint64_t v45 = v34;
    uint64_t v37 = (uint64_t)v51;
    sub_10005CA74((uint64_t)v15, (uint64_t)v24, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
    sub_10005CA74((uint64_t)v24, (uint64_t)v21, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
    uint64_t v36 = v16;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_100010360((uint64_t)v31, &qword_10020B998);
      sub_10005CA74((uint64_t)v21, v37, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate);
      sub_10005CA74(v37, (uint64_t)v31, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate);
      uint64_t v38 = v53;
      v45(v31, 0, 1, v53);
      goto LABEL_7;
    }
    sub_10005CA14((uint64_t)v21, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
  }
  uint64_t v38 = v53;
LABEL_7:
  uint64_t v39 = v52;
  sub_100072F60(&qword_10020A7B8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate);
  sub_1001BFFE0();
  if (v39) {
    return sub_100010360((uint64_t)v31, &qword_10020B998);
  }
  uint64_t v41 = v49;
  sub_10003282C((uint64_t)v31, v49, &qword_10020B998);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v41, 1, v38) == 1)
  {
    sub_100010360((uint64_t)v31, &qword_10020B998);
    return sub_100010360(v41, &qword_10020B998);
  }
  else
  {
    uint64_t v42 = v48;
    sub_10005CA74(v41, v48, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate);
    if (v35 != 1) {
      sub_1001BFF10();
    }
    sub_100010360((uint64_t)v31, &qword_10020B998);
    uint64_t v43 = v47;
    sub_100010360(v47, &qword_10020A640);
    sub_10005CA74(v42, v43, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v36);
  }
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.traverse<A>(visitor:)()
{
  uint64_t v2 = sub_100003918(&qword_10020A640);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(v0, (uint64_t)v5, &qword_10020A640);
  uint64_t v6 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6) == 1) {
    goto LABEL_8;
  }
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1) {
      sub_10005F66C(v0);
    }
    else {
      sub_10005F890(v0);
    }
  }
  else
  {
    sub_10005F44C(v0);
  }
  uint64_t result = sub_10005CA14((uint64_t)v5, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
  if (!v1)
  {
LABEL_8:
    type metadata accessor for Proto_Ropes_HttpService_InvokeRequest(0);
    return sub_1001BFE40();
  }
  return result;
}

uint64_t sub_10005F44C(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020A640);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(a1, (uint64_t)v5, &qword_10020A640);
  uint64_t v10 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_100010360((uint64_t)v5, &qword_10020A640);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    sub_10005CA74((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest);
    sub_100072F60(&qword_10020A778, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest);
    sub_1001C0120();
    return sub_10005CA14((uint64_t)v9, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest);
  }
  uint64_t result = sub_10005CA14((uint64_t)v5, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
  __break(1u);
  return result;
}

uint64_t sub_10005F66C(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020A640);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(a1, (uint64_t)v5, &qword_10020A640);
  uint64_t v10 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_100010360((uint64_t)v5, &qword_10020A640);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10005CA74((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata);
    sub_100072F60(&qword_10020A7A0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata);
    sub_1001C0120();
    return sub_10005CA14((uint64_t)v9, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata);
  }
  uint64_t result = sub_10005CA14((uint64_t)v5, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
  __break(1u);
  return result;
}

uint64_t sub_10005F890(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020A640);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(a1, (uint64_t)v5, &qword_10020A640);
  uint64_t v10 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_100010360((uint64_t)v5, &qword_10020A640);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_10005CA74((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate);
    sub_100072F60(&qword_10020A7B8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate);
    sub_1001C0120();
    return sub_10005CA14((uint64_t)v9, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate);
  }
  uint64_t result = sub_10005CA14((uint64_t)v5, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
  __break(1u);
  return result;
}

Swift::Int Proto_Ropes_HttpService_InvokeRequest.hashValue.getter()
{
  return sub_10006CF4C((void (*)(void))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest, &qword_10020A678, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest);
}

uint64_t sub_10005FB00@<X0>(uint64_t a1@<X8>)
{
  return sub_100065FBC(type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type, a1);
}

uint64_t sub_10005FB18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Ropes_HttpService_InvokeRequest.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_10005FB30()
{
  return Proto_Ropes_HttpService_InvokeRequest.traverse<A>(visitor:)();
}

uint64_t sub_10005FB48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100072F60(&qword_10020B8C0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10005FBC4@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_100207838, (uint64_t)static Proto_Ropes_HttpService_InvokeRequest._protobuf_nameMap, a1);
}

uint64_t sub_10005FBE8(uint64_t a1)
{
  uint64_t v2 = sub_100072F60(&qword_10020A760, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10005FC54()
{
  sub_100072F60(&qword_10020A760, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest);
  return sub_1001C0050();
}

void sub_10005FCD0()
{
  v0._countAndFlagsBits = 0x655270757465532ELL;
  v0._object = (void *)0xED00007473657571;
  sub_1001C0D00(v0);
  static Proto_Ropes_HttpService_InvokeRequest.SetupRequest.protoMessageName = 0xD00000000000002DLL;
  *(void *)algn_10021FB28 = 0x80000001001C3DA0;
}

uint64_t *Proto_Ropes_HttpService_InvokeRequest.SetupRequest.protoMessageName.unsafeMutableAddressor()
{
  if (qword_100207840 != -1) {
    swift_once();
  }
  return &static Proto_Ropes_HttpService_InvokeRequest.SetupRequest.protoMessageName;
}

uint64_t static Proto_Ropes_HttpService_InvokeRequest.SetupRequest.protoMessageName.getter()
{
  return sub_10004BA2C(&qword_100207840, &static Proto_Ropes_HttpService_InvokeRequest.SetupRequest.protoMessageName);
}

uint64_t sub_10005FDBC()
{
  uint64_t v0 = sub_1001C0160();
  sub_100044F74(v0, static Proto_Ropes_HttpService_InvokeRequest.SetupRequest._protobuf_nameMap);
  sub_10000D978(v0, (uint64_t)static Proto_Ropes_HttpService_InvokeRequest.SetupRequest._protobuf_nameMap);
  sub_100003918(&qword_100209FB8);
  uint64_t v1 = (int *)(sub_100003918(&qword_100209FC0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001CD7D0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "encrypted_request_ohttp_context";
  *(void *)(v6 + 8) = 31;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v8 = sub_1001C0130();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "attestation_mappings";
  *((void *)v10 + 1) = 20;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 3;
  *(void *)uint64_t v11 = "capabilities";
  *(void *)(v11 + 8) = 12;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_1001C0140();
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.SetupRequest._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_100207848, (uint64_t)static Proto_Ropes_HttpService_InvokeRequest.SetupRequest._protobuf_nameMap);
}

uint64_t static Proto_Ropes_HttpService_InvokeRequest.SetupRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_100207848, (uint64_t)static Proto_Ropes_HttpService_InvokeRequest.SetupRequest._protobuf_nameMap, a1);
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.SetupRequest.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_1001BFF00();
  uint64_t v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 3) {
        break;
      }
      if (result == 2)
      {
        type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping(0);
        sub_100072F60(&qword_10020A680, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping);
        uint64_t v4 = v3;
        sub_1001BFFD0();
        goto LABEL_5;
      }
      if (result == 1)
      {
        uint64_t v4 = v3;
        sub_1001BFFC0();
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = sub_1001BFF00();
    }
    uint64_t v4 = v3;
    sub_100060144();
LABEL_5:
    uint64_t v3 = v4;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_100060144()
{
  return sub_1001BFFE0();
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.SetupRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(_DWORD *)v3 || (uint64_t result = sub_1001C0100(), !v4))
  {
    if (!*(void *)(*(void *)(v3 + 8) + 16)
      || (type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping(0),
          sub_100072F60(&qword_10020A680, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping), uint64_t result = sub_1001C0110(), !v4))
    {
      uint64_t result = sub_100060328(v3, a1, a2, a3);
      if (!v4)
      {
        type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest(0);
        return sub_1001BFE40();
      }
    }
  }
  return result;
}

uint64_t sub_100060328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_100003918(&qword_10020A638);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest(0);
  sub_10003282C(a1 + *(int *)(v14 + 28), (uint64_t)v8, &qword_10020A638);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_100010360((uint64_t)v8, &qword_10020A638);
  }
  sub_10005CA74((uint64_t)v8, (uint64_t)v13, type metadata accessor for Proto_Ropes_Common_Capabilities);
  sub_100072F60(&qword_1002099B0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Capabilities);
  sub_1001C0120();
  return sub_10005CA14((uint64_t)v13, type metadata accessor for Proto_Ropes_Common_Capabilities);
}

Swift::Int Proto_Ropes_HttpService_InvokeRequest.SetupRequest.hashValue.getter()
{
  return sub_10006CF4C((void (*)(void))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest, &qword_10020A688, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest);
}

uint64_t sub_100060574@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = 0;
  *(void *)(a2 + 8) = &_swiftEmptyArrayStorage;
  _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v4 = a2 + *(int *)(a1 + 28);
  uint64_t v5 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  return v6(v4, 1, 1, v5);
}

uint64_t sub_100060608(uint64_t a1, uint64_t a2)
{
  return sub_10004BE50(a1, a2, &qword_100207840, &static Proto_Ropes_HttpService_InvokeRequest.SetupRequest.protoMessageName);
}

uint64_t sub_100060630()
{
  return Proto_Ropes_HttpService_InvokeRequest.SetupRequest.decodeMessage<A>(decoder:)();
}

uint64_t sub_100060648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Ropes_HttpService_InvokeRequest.SetupRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_100060660(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100072F60(&qword_10020B8B8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000606DC@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_100207848, (uint64_t)static Proto_Ropes_HttpService_InvokeRequest.SetupRequest._protobuf_nameMap, a1);
}

uint64_t sub_100060700(uint64_t a1)
{
  uint64_t v2 = sub_100072F60(&qword_10020A778, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10006076C()
{
  sub_100072F60(&qword_10020A778, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest);
  return sub_1001C0050();
}

void sub_1000607E8()
{
  if (qword_100207840 != -1) {
    swift_once();
  }
  uint64_t v0 = static Proto_Ropes_HttpService_InvokeRequest.SetupRequest.protoMessageName;
  uint64_t v1 = *(void *)algn_10021FB28;
  swift_bridgeObjectRetain();
  v2._object = (void *)0x80000001001C41C0;
  v2._countAndFlagsBits = 0xD000000000000013;
  sub_1001C0D00(v2);
  static Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping.protoMessageName = v0;
  unk_10021FB50 = v1;
}

uint64_t *Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping.protoMessageName.unsafeMutableAddressor()
{
  if (qword_100207850 != -1) {
    swift_once();
  }
  return &static Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping.protoMessageName;
}

uint64_t static Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping.protoMessageName.getter()
{
  return sub_10004BA2C(&qword_100207850, &static Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping.protoMessageName);
}

uint64_t sub_1000608F4(uint64_t a1)
{
  return sub_100066DF4(a1, static Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping._protobuf_nameMap, (uint64_t)"ohttp_context", 13);
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_100207858, (uint64_t)static Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping._protobuf_nameMap);
}

uint64_t static Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_100207858, (uint64_t)static Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping._protobuf_nameMap, a1);
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_1001BFF00();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_1001BFFC0();
      }
      else if (result == 1)
      {
        sub_1001BFFA0();
      }
      uint64_t result = sub_1001BFF00();
    }
  }
  return result;
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping.traverse<A>(visitor:)()
{
  unint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = *(void *)v0 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3 || (uint64_t result = sub_1001C00F0(), !v1))
  {
    if (!*(_DWORD *)(v0 + 16) || (uint64_t result = sub_1001C0100(), !v1))
    {
      type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping(0);
      return sub_1001BFE40();
    }
  }
  return result;
}

Swift::Int Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping.hashValue.getter()
{
  return sub_10006CF4C((void (*)(void))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping, &qword_10020A690, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping);
}

uint64_t sub_100060B10@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(_DWORD *)(a1 + 16) = 0;
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t sub_100060B3C(uint64_t a1, uint64_t a2)
{
  return sub_10004BE50(a1, a2, &qword_100207850, &static Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping.protoMessageName);
}

uint64_t sub_100060B64()
{
  return Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping.decodeMessage<A>(decoder:)();
}

uint64_t sub_100060B7C()
{
  return Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping.traverse<A>(visitor:)();
}

uint64_t sub_100060B94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100072F60(&qword_10020B8B0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100060C10@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_100207858, (uint64_t)static Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping._protobuf_nameMap, a1);
}

uint64_t sub_100060C34(uint64_t a1)
{
  uint64_t v2 = sub_100072F60(&qword_10020A680, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100060CA0()
{
  sub_100072F60(&qword_10020A680, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping);
  return sub_1001C0050();
}

void sub_100060D1C()
{
  v0._object = (void *)0x80000001001C40E0;
  v0._countAndFlagsBits = 0xD000000000000010;
  sub_1001C0D00(v0);
  static Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata.protoMessageName = 0xD00000000000002DLL;
  *(void *)algn_10021FB78 = 0x80000001001C3DA0;
}

uint64_t *Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata.protoMessageName.unsafeMutableAddressor()
{
  if (qword_100207860 != -1) {
    swift_once();
  }
  return &static Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata.protoMessageName;
}

uint64_t static Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata.protoMessageName.getter()
{
  return sub_10004BA2C(&qword_100207860, &static Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata.protoMessageName);
}

uint64_t sub_100060E04(uint64_t a1)
{
  return sub_10006CC90(a1, static Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata._protobuf_nameMap, (uint64_t)"message", 7, (unsigned int *)&enum case for _NameMap.NameDescription.same(_:));
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_100207868, (uint64_t)static Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata._protobuf_nameMap);
}

uint64_t static Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_100207868, (uint64_t)static Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata._protobuf_nameMap, a1);
}

uint64_t Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint.decodeMessage<A>(decoder:)()
{
  return sub_10006CE38();
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000666B4(a1, a2, a3, (void (*)(void))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata);
}

Swift::Int Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata.hashValue.getter()
{
  return sub_10006CF4C((void (*)(void))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata, &qword_10020A698, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata);
}

uint64_t sub_100060EF8@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t sub_100060F20(uint64_t a1, uint64_t a2)
{
  return sub_10004BE50(a1, a2, &qword_100207860, &static Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata.protoMessageName);
}

uint64_t sub_100060F48()
{
  return Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint.decodeMessage<A>(decoder:)();
}

uint64_t sub_100060F60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_100060F78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100072F60(&qword_10020B8A8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100060FF4@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_100207868, (uint64_t)static Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata._protobuf_nameMap, a1);
}

uint64_t sub_100061018(uint64_t a1)
{
  uint64_t v2 = sub_100072F60(&qword_10020A7A0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100061084()
{
  sub_100072F60(&qword_10020A7A0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata);
  return sub_1001C0050();
}

void sub_100061100()
{
  v0._countAndFlagsBits = 0x616E696D7265542ELL;
  v0._object = (void *)0xEA00000000006574;
  sub_1001C0D00(v0);
  static Proto_Ropes_HttpService_InvokeRequest.Terminate.protoMessageName = 0xD00000000000002DLL;
  unk_10021FBA0 = 0x80000001001C3DA0;
}

uint64_t *Proto_Ropes_HttpService_InvokeRequest.Terminate.protoMessageName.unsafeMutableAddressor()
{
  if (qword_100207870 != -1) {
    swift_once();
  }
  return &static Proto_Ropes_HttpService_InvokeRequest.Terminate.protoMessageName;
}

uint64_t static Proto_Ropes_HttpService_InvokeRequest.Terminate.protoMessageName.getter()
{
  return sub_10004BA2C(&qword_100207870, &static Proto_Ropes_HttpService_InvokeRequest.Terminate.protoMessageName);
}

uint64_t sub_1000611E4()
{
  uint64_t v0 = sub_1001C0160();
  sub_100044F74(v0, static Proto_Ropes_HttpService_InvokeRequest.Terminate._protobuf_nameMap);
  sub_10000D978(v0, (uint64_t)static Proto_Ropes_HttpService_InvokeRequest.Terminate._protobuf_nameMap);
  sub_100003918(&qword_100209FB8);
  uint64_t v1 = (int *)(sub_100003918(&qword_100209FC0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001CD7F0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "code";
  *(void *)(v6 + 8) = 4;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_1001C0130();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "reason";
  *((void *)v10 + 1) = 6;
  v10[16] = 2;
  v9();
  return sub_1001C0140();
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.Terminate._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_100207878, (uint64_t)static Proto_Ropes_HttpService_InvokeRequest.Terminate._protobuf_nameMap);
}

uint64_t static Proto_Ropes_HttpService_InvokeRequest.Terminate._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_100207878, (uint64_t)static Proto_Ropes_HttpService_InvokeRequest.Terminate._protobuf_nameMap, a1);
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.Terminate.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_1001BFF00();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate(0);
        sub_1001BFF90();
      }
      else if (result == 1)
      {
        sub_100072FA8();
        sub_1001BFF40();
      }
      uint64_t result = sub_1001BFF00();
    }
  }
  return result;
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.Terminate.traverse<A>(visitor:)()
{
  if (!*v0 || (sub_100072FA8(), uint64_t result = sub_1001C00B0(), !v1))
  {
    uint64_t result = sub_1000615A4((uint64_t)v0);
    if (!v1)
    {
      type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate(0);
      return sub_1001BFE40();
    }
  }
  return result;
}

uint64_t sub_1000615A4(uint64_t a1)
{
  uint64_t result = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate(0);
  if (*(void *)(a1 + *(int *)(result + 24) + 8)) {
    return sub_1001C00F0();
  }
  return result;
}

Swift::Int Proto_Ropes_HttpService_InvokeRequest.Terminate.hashValue.getter()
{
  return sub_10006CF4C((void (*)(void))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate, &qword_10020A6A8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate);
}

uint64_t sub_100061664@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  uint64_t result = _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v5 = (void *)(a2 + *(int *)(a1 + 24));
  *uint64_t v5 = 0;
  v5[1] = 0;
  return result;
}

uint64_t sub_1000616AC(uint64_t a1, uint64_t a2)
{
  return sub_10004BE50(a1, a2, &qword_100207870, &static Proto_Ropes_HttpService_InvokeRequest.Terminate.protoMessageName);
}

uint64_t sub_1000616D4()
{
  return Proto_Ropes_HttpService_InvokeRequest.Terminate.decodeMessage<A>(decoder:)();
}

uint64_t sub_1000616EC()
{
  return Proto_Ropes_HttpService_InvokeRequest.Terminate.traverse<A>(visitor:)();
}

uint64_t sub_100061704(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100072F60(&qword_10020B8A0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100061780@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_100207878, (uint64_t)static Proto_Ropes_HttpService_InvokeRequest.Terminate._protobuf_nameMap, a1);
}

uint64_t sub_1000617A4(uint64_t a1)
{
  uint64_t v2 = sub_100072F60(&qword_10020A7B8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100061810()
{
  sub_100072F60(&qword_10020A7B8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate);
  return sub_1001C0050();
}

uint64_t sub_10006188C()
{
  uint64_t v0 = sub_1001C0160();
  sub_100044F74(v0, static Proto_Ropes_HttpService_InvokeRequest.Terminate.Code._protobuf_nameMap);
  sub_10000D978(v0, (uint64_t)static Proto_Ropes_HttpService_InvokeRequest.Terminate.Code._protobuf_nameMap);
  sub_100003918(&qword_100209FB8);
  uint64_t v1 = (int *)(sub_100003918(&qword_100209FC0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001CD7D0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 0;
  *(void *)unint64_t v6 = "UNDEFINED";
  *(void *)(v6 + 8) = 9;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_1001C0130();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 1;
  *(void *)uint64_t v10 = "CRYPTO_ERROR";
  *((void *)v10 + 1) = 12;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 2;
  *(void *)uint64_t v11 = "APPLICATION_ERROR";
  *(void *)(v11 + 8) = 17;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_1001C0140();
}

uint64_t Proto_Ropes_HttpService_InvokeRequest.Terminate.Code._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_100207880, (uint64_t)static Proto_Ropes_HttpService_InvokeRequest.Terminate.Code._protobuf_nameMap);
}

uint64_t static Proto_Ropes_HttpService_InvokeRequest.Terminate.Code._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_100207880, (uint64_t)static Proto_Ropes_HttpService_InvokeRequest.Terminate.Code._protobuf_nameMap, a1);
}

uint64_t sub_100061AD4@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_100207880, (uint64_t)static Proto_Ropes_HttpService_InvokeRequest.Terminate.Code._protobuf_nameMap, a1);
}

void *Proto_Ropes_HttpService_InvokeResponse.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Ropes_HttpService_InvokeResponse.protoMessageName;
}

unint64_t static Proto_Ropes_HttpService_InvokeResponse.protoMessageName.getter()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_100061B20()
{
  uint64_t v0 = sub_1001C0160();
  sub_100044F74(v0, static Proto_Ropes_HttpService_InvokeResponse._protobuf_nameMap);
  sub_10000D978(v0, (uint64_t)static Proto_Ropes_HttpService_InvokeResponse._protobuf_nameMap);
  sub_100003918(&qword_100209FB8);
  uint64_t v1 = (int *)(sub_100003918(&qword_100209FC0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001CD800;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "attestation_list";
  *(void *)(v6 + 8) = 16;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v8 = sub_1001C0130();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 8;
  *(void *)unint64_t v10 = "compressed_attestation_list";
  *(void *)(v10 + 8) = 27;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 9;
  *(void *)uint64_t v12 = "attestation";
  *((void *)v12 + 1) = 11;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 2;
  *(void *)uint64_t v14 = "node_selected";
  *((void *)v14 + 1) = 13;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v2);
  uint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 3;
  *(void *)uint64_t v16 = "logging_metadata";
  *((void *)v16 + 1) = 16;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 4;
  *(void *)uint64_t v18 = "rate_limit_configuration_list";
  *((void *)v18 + 1) = 29;
  v18[16] = 2;
  v9();
  uint64_t v19 = (void *)(v5 + 6 * v2);
  uint64_t v20 = (char *)v19 + v1[14];
  *uint64_t v19 = 5;
  *(void *)uint64_t v20 = "expired_attestation_list";
  *((void *)v20 + 1) = 24;
  v20[16] = 2;
  v9();
  uint64_t v21 = (void *)(v5 + 7 * v2);
  uint64_t v22 = (char *)v21 + v1[14];
  *uint64_t v21 = 7;
  *(void *)uint64_t v22 = "no_further_attestations";
  *((void *)v22 + 1) = 23;
  v22[16] = 2;
  v9();
  return sub_1001C0140();
}

uint64_t Proto_Ropes_HttpService_InvokeResponse._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_100207888, (uint64_t)static Proto_Ropes_HttpService_InvokeResponse._protobuf_nameMap);
}

uint64_t static Proto_Ropes_HttpService_InvokeResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_100207888, (uint64_t)static Proto_Ropes_HttpService_InvokeResponse._protobuf_nameMap, a1);
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  while (1)
  {
    uint64_t result = sub_1001BFF00();
    if (v4 || (v10 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 1:
        sub_100062030(v5, a1, a2, a3);
        break;
      case 2:
        sub_1000625A4(v5, a1, a2, a3);
        break;
      case 3:
        sub_100062B18(v5, a1, a2, a3);
        break;
      case 4:
        sub_10006308C(v5, a1, a2, a3);
        break;
      case 5:
        sub_100063600(v5, a1, a2, a3);
        break;
      case 7:
        sub_100063B74(v5, a1, a2, a3);
        break;
      case 8:
        sub_1000640E8(v5, a1, a2, a3);
        break;
      case 9:
        sub_10006465C(v5, a1, a2, a3);
        break;
      default:
        continue;
    }
  }
}

uint64_t sub_100062030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v56 = a4;
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  uint64_t v5 = type metadata accessor for Proto_Ropes_Common_AttestationList(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = __chkstk_darwin(v5, v7);
  uint64_t v48 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v10);
  uint64_t v51 = (char *)&v44 - v11;
  uint64_t v12 = sub_100003918(&qword_10020A648);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v22);
  uint64_t v24 = (char *)&v44 - v23;
  uint64_t v25 = sub_100003918(&qword_10020B958);
  uint64_t v27 = __chkstk_darwin(v25 - 8, v26);
  uint64_t v49 = (uint64_t)&v44 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v29);
  uint64_t v31 = (char *)&v44 - v30;
  uint64_t v50 = v6;
  uint64_t v32 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v53 = v5;
  uint64_t v33 = v5;
  uint64_t v34 = v32;
  v32((char *)&v44 - v30, 1, 1, v33);
  uint64_t v47 = a1;
  sub_10003282C(a1, (uint64_t)v15, &qword_10020A648);
  uint64_t v46 = v17;
  int v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
  if (v35 == 1)
  {
    sub_100010360((uint64_t)v15, &qword_10020A648);
    uint64_t v36 = v16;
    uint64_t v37 = v53;
  }
  else
  {
    uint64_t v45 = v34;
    uint64_t v38 = (uint64_t)v51;
    sub_10005CA74((uint64_t)v15, (uint64_t)v24, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
    sub_10005CA74((uint64_t)v24, (uint64_t)v21, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
    uint64_t v36 = v16;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_10005CA14((uint64_t)v21, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
      uint64_t v37 = v53;
    }
    else
    {
      sub_100010360((uint64_t)v31, &qword_10020B958);
      sub_10005CA74((uint64_t)v21, v38, type metadata accessor for Proto_Ropes_Common_AttestationList);
      sub_10005CA74(v38, (uint64_t)v31, type metadata accessor for Proto_Ropes_Common_AttestationList);
      uint64_t v37 = v53;
      v45(v31, 0, 1, v53);
    }
  }
  uint64_t v39 = v52;
  sub_100072F60((unint64_t *)&qword_1002099C8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_AttestationList);
  sub_1001BFFE0();
  if (v39) {
    return sub_100010360((uint64_t)v31, &qword_10020B958);
  }
  uint64_t v41 = v49;
  sub_10003282C((uint64_t)v31, v49, &qword_10020B958);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v41, 1, v37) == 1)
  {
    sub_100010360((uint64_t)v31, &qword_10020B958);
    return sub_100010360(v41, &qword_10020B958);
  }
  else
  {
    uint64_t v42 = v48;
    sub_10005CA74(v41, v48, type metadata accessor for Proto_Ropes_Common_AttestationList);
    if (v35 != 1) {
      sub_1001BFF10();
    }
    sub_100010360((uint64_t)v31, &qword_10020B958);
    uint64_t v43 = v47;
    sub_100010360(v47, &qword_10020A648);
    sub_10005CA74(v42, v43, type metadata accessor for Proto_Ropes_Common_AttestationList);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v36);
  }
}

uint64_t sub_1000625A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v56 = a4;
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  uint64_t v5 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NodeSelected(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = __chkstk_darwin(v5, v7);
  uint64_t v48 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v10);
  uint64_t v51 = (char *)&v44 - v11;
  uint64_t v12 = sub_100003918(&qword_10020A648);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v22);
  uint64_t v24 = (char *)&v44 - v23;
  uint64_t v25 = sub_100003918(&qword_10020B960);
  uint64_t v27 = __chkstk_darwin(v25 - 8, v26);
  uint64_t v49 = (uint64_t)&v44 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v29);
  uint64_t v31 = (char *)&v44 - v30;
  uint64_t v50 = v6;
  uint64_t v32 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v53 = v5;
  uint64_t v33 = v5;
  uint64_t v34 = v32;
  v32((char *)&v44 - v30, 1, 1, v33);
  uint64_t v47 = a1;
  sub_10003282C(a1, (uint64_t)v15, &qword_10020A648);
  uint64_t v46 = v17;
  int v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
  if (v35 == 1)
  {
    sub_100010360((uint64_t)v15, &qword_10020A648);
    uint64_t v36 = v16;
  }
  else
  {
    uint64_t v45 = v34;
    uint64_t v37 = (uint64_t)v51;
    sub_10005CA74((uint64_t)v15, (uint64_t)v24, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
    sub_10005CA74((uint64_t)v24, (uint64_t)v21, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
    uint64_t v36 = v16;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_100010360((uint64_t)v31, &qword_10020B960);
      sub_10005CA74((uint64_t)v21, v37, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NodeSelected);
      sub_10005CA74(v37, (uint64_t)v31, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NodeSelected);
      uint64_t v38 = v53;
      v45(v31, 0, 1, v53);
      goto LABEL_7;
    }
    sub_10005CA14((uint64_t)v21, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
  }
  uint64_t v38 = v53;
LABEL_7:
  uint64_t v39 = v52;
  sub_100072F60(&qword_10020A7E8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NodeSelected);
  sub_1001BFFE0();
  if (v39) {
    return sub_100010360((uint64_t)v31, &qword_10020B960);
  }
  uint64_t v41 = v49;
  sub_10003282C((uint64_t)v31, v49, &qword_10020B960);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v41, 1, v38) == 1)
  {
    sub_100010360((uint64_t)v31, &qword_10020B960);
    return sub_100010360(v41, &qword_10020B960);
  }
  else
  {
    uint64_t v42 = v48;
    sub_10005CA74(v41, v48, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NodeSelected);
    if (v35 != 1) {
      sub_1001BFF10();
    }
    sub_100010360((uint64_t)v31, &qword_10020B960);
    uint64_t v43 = v47;
    sub_100010360(v47, &qword_10020A648);
    sub_10005CA74(v42, v43, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NodeSelected);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v36);
  }
}

uint64_t sub_100062B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v56 = a4;
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  uint64_t v5 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = __chkstk_darwin(v5, v7);
  uint64_t v48 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v10);
  uint64_t v51 = (char *)&v44 - v11;
  uint64_t v12 = sub_100003918(&qword_10020A648);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v22);
  uint64_t v24 = (char *)&v44 - v23;
  uint64_t v25 = sub_100003918(&qword_10020B968);
  uint64_t v27 = __chkstk_darwin(v25 - 8, v26);
  uint64_t v49 = (uint64_t)&v44 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v29);
  uint64_t v31 = (char *)&v44 - v30;
  uint64_t v50 = v6;
  uint64_t v32 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v53 = v5;
  uint64_t v33 = v5;
  uint64_t v34 = v32;
  v32((char *)&v44 - v30, 1, 1, v33);
  uint64_t v47 = a1;
  sub_10003282C(a1, (uint64_t)v15, &qword_10020A648);
  uint64_t v46 = v17;
  int v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
  if (v35 == 1)
  {
    sub_100010360((uint64_t)v15, &qword_10020A648);
    uint64_t v36 = v16;
  }
  else
  {
    uint64_t v45 = v34;
    uint64_t v37 = (uint64_t)v51;
    sub_10005CA74((uint64_t)v15, (uint64_t)v24, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
    sub_10005CA74((uint64_t)v24, (uint64_t)v21, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
    uint64_t v36 = v16;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_100010360((uint64_t)v31, &qword_10020B968);
      sub_10005CA74((uint64_t)v21, v37, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata);
      sub_10005CA74(v37, (uint64_t)v31, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata);
      uint64_t v38 = v53;
      v45(v31, 0, 1, v53);
      goto LABEL_7;
    }
    sub_10005CA14((uint64_t)v21, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
  }
  uint64_t v38 = v53;
LABEL_7:
  uint64_t v39 = v52;
  sub_100072F60(&qword_10020A800, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata);
  sub_1001BFFE0();
  if (v39) {
    return sub_100010360((uint64_t)v31, &qword_10020B968);
  }
  uint64_t v41 = v49;
  sub_10003282C((uint64_t)v31, v49, &qword_10020B968);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v41, 1, v38) == 1)
  {
    sub_100010360((uint64_t)v31, &qword_10020B968);
    return sub_100010360(v41, &qword_10020B968);
  }
  else
  {
    uint64_t v42 = v48;
    sub_10005CA74(v41, v48, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata);
    if (v35 != 1) {
      sub_1001BFF10();
    }
    sub_100010360((uint64_t)v31, &qword_10020B968);
    uint64_t v43 = v47;
    sub_100010360(v47, &qword_10020A648);
    sub_10005CA74(v42, v43, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v36);
  }
}

uint64_t sub_10006308C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v56 = a4;
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  uint64_t v5 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = __chkstk_darwin(v5, v7);
  uint64_t v48 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v10);
  uint64_t v51 = (char *)&v44 - v11;
  uint64_t v12 = sub_100003918(&qword_10020A648);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v22);
  uint64_t v24 = (char *)&v44 - v23;
  uint64_t v25 = sub_100003918(&qword_10020A650);
  uint64_t v27 = __chkstk_darwin(v25 - 8, v26);
  uint64_t v49 = (uint64_t)&v44 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v29);
  uint64_t v31 = (char *)&v44 - v30;
  uint64_t v50 = v6;
  uint64_t v32 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v53 = v5;
  uint64_t v33 = v5;
  uint64_t v34 = v32;
  v32((char *)&v44 - v30, 1, 1, v33);
  uint64_t v47 = a1;
  sub_10003282C(a1, (uint64_t)v15, &qword_10020A648);
  uint64_t v46 = v17;
  int v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
  if (v35 == 1)
  {
    sub_100010360((uint64_t)v15, &qword_10020A648);
    uint64_t v36 = v16;
  }
  else
  {
    uint64_t v45 = v34;
    uint64_t v37 = (uint64_t)v51;
    sub_10005CA74((uint64_t)v15, (uint64_t)v24, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
    sub_10005CA74((uint64_t)v24, (uint64_t)v21, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
    uint64_t v36 = v16;
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_100010360((uint64_t)v31, &qword_10020A650);
      sub_10005CA74((uint64_t)v21, v37, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
      sub_10005CA74(v37, (uint64_t)v31, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
      uint64_t v38 = v53;
      v45(v31, 0, 1, v53);
      goto LABEL_7;
    }
    sub_10005CA14((uint64_t)v21, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
  }
  uint64_t v38 = v53;
LABEL_7:
  uint64_t v39 = v52;
  sub_100072F60(&qword_10020B908, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  sub_1001BFFE0();
  if (v39) {
    return sub_100010360((uint64_t)v31, &qword_10020A650);
  }
  uint64_t v41 = v49;
  sub_10003282C((uint64_t)v31, v49, &qword_10020A650);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v41, 1, v38) == 1)
  {
    sub_100010360((uint64_t)v31, &qword_10020A650);
    return sub_100010360(v41, &qword_10020A650);
  }
  else
  {
    uint64_t v42 = v48;
    sub_10005CA74(v41, v48, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
    if (v35 != 1) {
      sub_1001BFF10();
    }
    sub_100010360((uint64_t)v31, &qword_10020A650);
    uint64_t v43 = v47;
    sub_100010360(v47, &qword_10020A648);
    sub_10005CA74(v42, v43, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v36);
  }
}

uint64_t sub_100063600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v56 = a4;
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  uint64_t v5 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = __chkstk_darwin(v5, v7);
  uint64_t v48 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v10);
  uint64_t v51 = (char *)&v44 - v11;
  uint64_t v12 = sub_100003918(&qword_10020A648);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v22);
  uint64_t v24 = (char *)&v44 - v23;
  uint64_t v25 = sub_100003918(&qword_10020B970);
  uint64_t v27 = __chkstk_darwin(v25 - 8, v26);
  uint64_t v49 = (uint64_t)&v44 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v29);
  uint64_t v31 = (char *)&v44 - v30;
  uint64_t v50 = v6;
  uint64_t v32 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v53 = v5;
  uint64_t v33 = v5;
  uint64_t v34 = v32;
  v32((char *)&v44 - v30, 1, 1, v33);
  uint64_t v47 = a1;
  sub_10003282C(a1, (uint64_t)v15, &qword_10020A648);
  uint64_t v46 = v17;
  int v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
  if (v35 == 1)
  {
    sub_100010360((uint64_t)v15, &qword_10020A648);
    uint64_t v36 = v16;
  }
  else
  {
    uint64_t v45 = v34;
    uint64_t v37 = (uint64_t)v51;
    sub_10005CA74((uint64_t)v15, (uint64_t)v24, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
    sub_10005CA74((uint64_t)v24, (uint64_t)v21, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
    uint64_t v36 = v16;
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      sub_100010360((uint64_t)v31, &qword_10020B970);
      sub_10005CA74((uint64_t)v21, v37, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList);
      sub_10005CA74(v37, (uint64_t)v31, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList);
      uint64_t v38 = v53;
      v45(v31, 0, 1, v53);
      goto LABEL_7;
    }
    sub_10005CA14((uint64_t)v21, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
  }
  uint64_t v38 = v53;
LABEL_7:
  uint64_t v39 = v52;
  sub_100072F60(&qword_10020A830, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList);
  sub_1001BFFE0();
  if (v39) {
    return sub_100010360((uint64_t)v31, &qword_10020B970);
  }
  uint64_t v41 = v49;
  sub_10003282C((uint64_t)v31, v49, &qword_10020B970);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v41, 1, v38) == 1)
  {
    sub_100010360((uint64_t)v31, &qword_10020B970);
    return sub_100010360(v41, &qword_10020B970);
  }
  else
  {
    uint64_t v42 = v48;
    sub_10005CA74(v41, v48, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList);
    if (v35 != 1) {
      sub_1001BFF10();
    }
    sub_100010360((uint64_t)v31, &qword_10020B970);
    uint64_t v43 = v47;
    sub_100010360(v47, &qword_10020A648);
    sub_10005CA74(v42, v43, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v36);
  }
}

uint64_t sub_100063B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v56 = a4;
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  uint64_t v5 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = __chkstk_darwin(v5, v7);
  uint64_t v48 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v10);
  uint64_t v51 = (char *)&v44 - v11;
  uint64_t v12 = sub_100003918(&qword_10020A648);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v22);
  uint64_t v24 = (char *)&v44 - v23;
  uint64_t v25 = sub_100003918(&qword_10020B978);
  uint64_t v27 = __chkstk_darwin(v25 - 8, v26);
  uint64_t v49 = (uint64_t)&v44 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v29);
  uint64_t v31 = (char *)&v44 - v30;
  uint64_t v50 = v6;
  uint64_t v32 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v53 = v5;
  uint64_t v33 = v5;
  uint64_t v34 = v32;
  v32((char *)&v44 - v30, 1, 1, v33);
  uint64_t v47 = a1;
  sub_10003282C(a1, (uint64_t)v15, &qword_10020A648);
  uint64_t v46 = v17;
  int v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
  if (v35 == 1)
  {
    sub_100010360((uint64_t)v15, &qword_10020A648);
    uint64_t v36 = v16;
  }
  else
  {
    uint64_t v45 = v34;
    uint64_t v37 = (uint64_t)v51;
    sub_10005CA74((uint64_t)v15, (uint64_t)v24, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
    sub_10005CA74((uint64_t)v24, (uint64_t)v21, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
    uint64_t v36 = v16;
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      sub_100010360((uint64_t)v31, &qword_10020B978);
      sub_10005CA74((uint64_t)v21, v37, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations);
      sub_10005CA74(v37, (uint64_t)v31, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations);
      uint64_t v38 = v53;
      v45(v31, 0, 1, v53);
      goto LABEL_7;
    }
    sub_10005CA14((uint64_t)v21, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
  }
  uint64_t v38 = v53;
LABEL_7:
  uint64_t v39 = v52;
  sub_100072F60(&qword_10020A818, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations);
  sub_1001BFFE0();
  if (v39) {
    return sub_100010360((uint64_t)v31, &qword_10020B978);
  }
  uint64_t v41 = v49;
  sub_10003282C((uint64_t)v31, v49, &qword_10020B978);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v41, 1, v38) == 1)
  {
    sub_100010360((uint64_t)v31, &qword_10020B978);
    return sub_100010360(v41, &qword_10020B978);
  }
  else
  {
    uint64_t v42 = v48;
    sub_10005CA74(v41, v48, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations);
    if (v35 != 1) {
      sub_1001BFF10();
    }
    sub_100010360((uint64_t)v31, &qword_10020B978);
    uint64_t v43 = v47;
    sub_100010360(v47, &qword_10020A648);
    sub_10005CA74(v42, v43, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v36);
  }
}

uint64_t sub_1000640E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v56 = a4;
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  uint64_t v5 = type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = __chkstk_darwin(v5, v7);
  uint64_t v48 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v10);
  uint64_t v51 = (char *)&v44 - v11;
  uint64_t v12 = sub_100003918(&qword_10020A648);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v22);
  uint64_t v24 = (char *)&v44 - v23;
  uint64_t v25 = sub_100003918(&qword_10020A658);
  uint64_t v27 = __chkstk_darwin(v25 - 8, v26);
  uint64_t v49 = (uint64_t)&v44 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v29);
  uint64_t v31 = (char *)&v44 - v30;
  uint64_t v50 = v6;
  uint64_t v32 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v53 = v5;
  uint64_t v33 = v5;
  uint64_t v34 = v32;
  v32((char *)&v44 - v30, 1, 1, v33);
  uint64_t v47 = a1;
  sub_10003282C(a1, (uint64_t)v15, &qword_10020A648);
  uint64_t v46 = v17;
  int v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
  if (v35 == 1)
  {
    sub_100010360((uint64_t)v15, &qword_10020A648);
    uint64_t v36 = v16;
  }
  else
  {
    uint64_t v45 = v34;
    uint64_t v37 = (uint64_t)v51;
    sub_10005CA74((uint64_t)v15, (uint64_t)v24, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
    sub_10005CA74((uint64_t)v24, (uint64_t)v21, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
    uint64_t v36 = v16;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_100010360((uint64_t)v31, &qword_10020A658);
      sub_10005CA74((uint64_t)v21, v37, type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
      sub_10005CA74(v37, (uint64_t)v31, type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
      uint64_t v38 = v53;
      v45(v31, 0, 1, v53);
      goto LABEL_7;
    }
    sub_10005CA14((uint64_t)v21, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
  }
  uint64_t v38 = v53;
LABEL_7:
  uint64_t v39 = v52;
  sub_100072F60(&qword_1002099E0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
  sub_1001BFFE0();
  if (v39) {
    return sub_100010360((uint64_t)v31, &qword_10020A658);
  }
  uint64_t v41 = v49;
  sub_10003282C((uint64_t)v31, v49, &qword_10020A658);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v41, 1, v38) == 1)
  {
    sub_100010360((uint64_t)v31, &qword_10020A658);
    return sub_100010360(v41, &qword_10020A658);
  }
  else
  {
    uint64_t v42 = v48;
    sub_10005CA74(v41, v48, type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
    if (v35 != 1) {
      sub_1001BFF10();
    }
    sub_100010360((uint64_t)v31, &qword_10020A658);
    uint64_t v43 = v47;
    sub_100010360(v47, &qword_10020A648);
    sub_10005CA74(v42, v43, type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v36);
  }
}

uint64_t sub_10006465C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v56 = a4;
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  uint64_t v5 = type metadata accessor for Proto_Ropes_Common_Attestation(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = __chkstk_darwin(v5, v7);
  uint64_t v48 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v10);
  uint64_t v51 = (char *)&v44 - v11;
  uint64_t v12 = sub_100003918(&qword_10020A648);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v22);
  uint64_t v24 = (char *)&v44 - v23;
  uint64_t v25 = sub_100003918(&qword_10020B930);
  uint64_t v27 = __chkstk_darwin(v25 - 8, v26);
  uint64_t v49 = (uint64_t)&v44 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v29);
  uint64_t v31 = (char *)&v44 - v30;
  uint64_t v50 = v6;
  uint64_t v32 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v53 = v5;
  uint64_t v33 = v5;
  uint64_t v34 = v32;
  v32((char *)&v44 - v30, 1, 1, v33);
  uint64_t v47 = a1;
  sub_10003282C(a1, (uint64_t)v15, &qword_10020A648);
  uint64_t v46 = v17;
  int v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
  if (v35 == 1)
  {
    sub_100010360((uint64_t)v15, &qword_10020A648);
    uint64_t v36 = v16;
  }
  else
  {
    uint64_t v45 = v34;
    uint64_t v37 = (uint64_t)v51;
    sub_10005CA74((uint64_t)v15, (uint64_t)v24, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
    sub_10005CA74((uint64_t)v24, (uint64_t)v21, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
    uint64_t v36 = v16;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_100010360((uint64_t)v31, &qword_10020B930);
      sub_10005CA74((uint64_t)v21, v37, type metadata accessor for Proto_Ropes_Common_Attestation);
      sub_10005CA74(v37, (uint64_t)v31, type metadata accessor for Proto_Ropes_Common_Attestation);
      uint64_t v38 = v53;
      v45(v31, 0, 1, v53);
      goto LABEL_7;
    }
    sub_10005CA14((uint64_t)v21, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
  }
  uint64_t v38 = v53;
LABEL_7:
  uint64_t v39 = v52;
  sub_100072F60(&qword_1002098E8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Attestation);
  sub_1001BFFE0();
  if (v39) {
    return sub_100010360((uint64_t)v31, &qword_10020B930);
  }
  uint64_t v41 = v49;
  sub_10003282C((uint64_t)v31, v49, &qword_10020B930);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v41, 1, v38) == 1)
  {
    sub_100010360((uint64_t)v31, &qword_10020B930);
    return sub_100010360(v41, &qword_10020B930);
  }
  else
  {
    uint64_t v42 = v48;
    sub_10005CA74(v41, v48, type metadata accessor for Proto_Ropes_Common_Attestation);
    if (v35 != 1) {
      sub_1001BFF10();
    }
    sub_100010360((uint64_t)v31, &qword_10020B930);
    uint64_t v43 = v47;
    sub_100010360(v47, &qword_10020A648);
    sub_10005CA74(v42, v43, type metadata accessor for Proto_Ropes_Common_Attestation);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v36);
  }
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.traverse<A>(visitor:)()
{
  uint64_t v2 = sub_100003918(&qword_10020A648);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(v0, (uint64_t)v5, &qword_10020A648);
  uint64_t v6 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6) == 1) {
    goto LABEL_12;
  }
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_100065B10(v0);
      break;
    case 2u:
      sub_100065D34(v0);
      break;
    case 3u:
      sub_10006505C(v0);
      break;
    case 4u:
      sub_100065280(v0);
      break;
    case 5u:
      sub_1000654A4(v0);
      break;
    case 6u:
      sub_1000656C8(v0);
      break;
    case 7u:
      sub_1000658EC(v0);
      break;
    default:
      sub_100064E3C(v0);
      break;
  }
  uint64_t result = sub_10005CA14((uint64_t)v5, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
  if (!v1)
  {
LABEL_12:
    type metadata accessor for Proto_Ropes_HttpService_InvokeResponse(0);
    return sub_1001BFE40();
  }
  return result;
}

uint64_t sub_100064E3C(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020A648);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Ropes_Common_AttestationList(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(a1, (uint64_t)v5, &qword_10020A648);
  uint64_t v10 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_100010360((uint64_t)v5, &qword_10020A648);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    sub_10005CA74((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Ropes_Common_AttestationList);
    sub_100072F60((unint64_t *)&qword_1002099C8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_AttestationList);
    sub_1001C0120();
    return sub_10005CA14((uint64_t)v9, type metadata accessor for Proto_Ropes_Common_AttestationList);
  }
  uint64_t result = sub_10005CA14((uint64_t)v5, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
  __break(1u);
  return result;
}

uint64_t sub_10006505C(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020A648);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NodeSelected(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(a1, (uint64_t)v5, &qword_10020A648);
  uint64_t v10 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_100010360((uint64_t)v5, &qword_10020A648);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 3)
  {
    sub_10005CA74((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NodeSelected);
    sub_100072F60(&qword_10020A7E8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NodeSelected);
    sub_1001C0120();
    return sub_10005CA14((uint64_t)v9, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NodeSelected);
  }
  uint64_t result = sub_10005CA14((uint64_t)v5, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
  __break(1u);
  return result;
}

uint64_t sub_100065280(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020A648);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(a1, (uint64_t)v5, &qword_10020A648);
  uint64_t v10 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_100010360((uint64_t)v5, &qword_10020A648);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 4)
  {
    sub_10005CA74((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata);
    sub_100072F60(&qword_10020A800, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata);
    sub_1001C0120();
    return sub_10005CA14((uint64_t)v9, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata);
  }
  uint64_t result = sub_10005CA14((uint64_t)v5, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
  __break(1u);
  return result;
}

uint64_t sub_1000654A4(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020A648);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(a1, (uint64_t)v5, &qword_10020A648);
  uint64_t v10 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_100010360((uint64_t)v5, &qword_10020A648);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 5)
  {
    sub_10005CA74((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
    sub_100072F60(&qword_10020B908, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
    sub_1001C0120();
    return sub_10005CA14((uint64_t)v9, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  }
  uint64_t result = sub_10005CA14((uint64_t)v5, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
  __break(1u);
  return result;
}

uint64_t sub_1000656C8(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020A648);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(a1, (uint64_t)v5, &qword_10020A648);
  uint64_t v10 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_100010360((uint64_t)v5, &qword_10020A648);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 6)
  {
    sub_10005CA74((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList);
    sub_100072F60(&qword_10020A830, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList);
    sub_1001C0120();
    return sub_10005CA14((uint64_t)v9, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList);
  }
  uint64_t result = sub_10005CA14((uint64_t)v5, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
  __break(1u);
  return result;
}

uint64_t sub_1000658EC(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020A648);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(a1, (uint64_t)v5, &qword_10020A648);
  uint64_t v10 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_100010360((uint64_t)v5, &qword_10020A648);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 7)
  {
    sub_10005CA74((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations);
    sub_100072F60(&qword_10020A818, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations);
    sub_1001C0120();
    return sub_10005CA14((uint64_t)v9, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations);
  }
  uint64_t result = sub_10005CA14((uint64_t)v5, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
  __break(1u);
  return result;
}

uint64_t sub_100065B10(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020A648);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(a1, (uint64_t)v5, &qword_10020A648);
  uint64_t v10 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_100010360((uint64_t)v5, &qword_10020A648);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10005CA74((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
    sub_100072F60(&qword_1002099E0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
    sub_1001C0120();
    return sub_10005CA14((uint64_t)v9, type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
  }
  uint64_t result = sub_10005CA14((uint64_t)v5, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
  __break(1u);
  return result;
}

uint64_t sub_100065D34(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020A648);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Ropes_Common_Attestation(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(a1, (uint64_t)v5, &qword_10020A648);
  uint64_t v10 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_100010360((uint64_t)v5, &qword_10020A648);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_10005CA74((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Ropes_Common_Attestation);
    sub_100072F60(&qword_1002098E8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Attestation);
    sub_1001C0120();
    return sub_10005CA14((uint64_t)v9, type metadata accessor for Proto_Ropes_Common_Attestation);
  }
  uint64_t result = sub_10005CA14((uint64_t)v5, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
  __break(1u);
  return result;
}

Swift::Int Proto_Ropes_HttpService_InvokeResponse.hashValue.getter()
{
  return sub_10006CF4C((void (*)(void))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse, &qword_10020A6B0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse);
}

uint64_t sub_100065FA4@<X0>(uint64_t a1@<X8>)
{
  return sub_100065FBC(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type, a1);
}

uint64_t sub_100065FBC@<X0>(uint64_t (*a1)(void)@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(a2, 1, 1, v3);
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t sub_100066030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Ropes_HttpService_InvokeResponse.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_100066048()
{
  return Proto_Ropes_HttpService_InvokeResponse.traverse<A>(visitor:)();
}

uint64_t sub_100066060(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100072F60(&qword_10020B898, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000660DC@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_100207888, (uint64_t)static Proto_Ropes_HttpService_InvokeResponse._protobuf_nameMap, a1);
}

uint64_t sub_100066100(uint64_t a1)
{
  uint64_t v2 = sub_100072F60(&qword_10020A7D0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10006616C()
{
  sub_100072F60(&qword_10020A7D0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse);
  return sub_1001C0050();
}

void sub_1000661E8()
{
  v0._countAndFlagsBits = 0x6C655365646F4E2ELL;
  v0._object = (void *)0xED00006465746365;
  sub_1001C0D00(v0);
  static Proto_Ropes_HttpService_InvokeResponse.NodeSelected.protoMessageName = 0xD00000000000002ELL;
  *(void *)algn_10021FBF8 = 0x80000001001C3DD0;
}

uint64_t *Proto_Ropes_HttpService_InvokeResponse.NodeSelected.protoMessageName.unsafeMutableAddressor()
{
  if (qword_100207890 != -1) {
    swift_once();
  }
  return &static Proto_Ropes_HttpService_InvokeResponse.NodeSelected.protoMessageName;
}

uint64_t static Proto_Ropes_HttpService_InvokeResponse.NodeSelected.protoMessageName.getter()
{
  return sub_10004BA2C(&qword_100207890, &static Proto_Ropes_HttpService_InvokeResponse.NodeSelected.protoMessageName);
}

uint64_t sub_1000662D4(uint64_t a1)
{
  return sub_100066A6C(a1, static Proto_Ropes_HttpService_InvokeResponse.NodeSelected._protobuf_nameMap);
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.NodeSelected._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_100207898, (uint64_t)static Proto_Ropes_HttpService_InvokeResponse.NodeSelected._protobuf_nameMap);
}

uint64_t static Proto_Ropes_HttpService_InvokeResponse.NodeSelected._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_100207898, (uint64_t)static Proto_Ropes_HttpService_InvokeResponse.NodeSelected._protobuf_nameMap, a1);
}

Swift::Int Proto_Ropes_HttpService_InvokeResponse.NodeSelected.hashValue.getter()
{
  return sub_10006CF4C((void (*)(void))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NodeSelected, &qword_10020A6B8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NodeSelected);
}

uint64_t sub_100066370(uint64_t a1, uint64_t a2)
{
  return sub_10004BE50(a1, a2, &qword_100207890, &static Proto_Ropes_HttpService_InvokeResponse.NodeSelected.protoMessageName);
}

uint64_t sub_100066398()
{
  return Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations.decodeMessage<A>(decoder:)();
}

uint64_t sub_1000663B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100072F60(&qword_10020B890, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NodeSelected);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10006642C@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_100207898, (uint64_t)static Proto_Ropes_HttpService_InvokeResponse.NodeSelected._protobuf_nameMap, a1);
}

uint64_t sub_100066450(uint64_t a1)
{
  uint64_t v2 = sub_100072F60(&qword_10020A7E8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NodeSelected);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000664BC()
{
  sub_100072F60(&qword_10020A7E8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NodeSelected);
  return sub_1001C0050();
}

void sub_100066538()
{
  v0._object = (void *)0x80000001001C40E0;
  v0._countAndFlagsBits = 0xD000000000000010;
  sub_1001C0D00(v0);
  static Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata.protoMessageName = 0xD00000000000002ELL;
  unk_10021FC20 = 0x80000001001C3DD0;
}

uint64_t *Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata.protoMessageName.unsafeMutableAddressor()
{
  if (qword_1002078A0 != -1) {
    swift_once();
  }
  return &static Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata.protoMessageName;
}

uint64_t static Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata.protoMessageName.getter()
{
  return sub_10004BA2C(&qword_1002078A0, &static Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata.protoMessageName);
}

uint64_t sub_100066620(uint64_t a1)
{
  return sub_10006CC90(a1, static Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata._protobuf_nameMap, (uint64_t)"message", 7, (unsigned int *)&enum case for _NameMap.NameDescription.same(_:));
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_1002078A8, (uint64_t)static Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata._protobuf_nameMap);
}

uint64_t static Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_1002078A8, (uint64_t)static Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata._protobuf_nameMap, a1);
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000666B4(a1, a2, a3, (void (*)(void))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata);
}

uint64_t sub_1000666B4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  unint64_t v7 = v4[1];
  uint64_t v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0) {
    uint64_t v8 = *v4 & 0xFFFFFFFFFFFFLL;
  }
  if (!v8 || (uint64_t result = sub_1001C00F0(), !v5))
  {
    a4(0);
    return sub_1001BFE40();
  }
  return result;
}

Swift::Int Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata.hashValue.getter()
{
  return sub_10006CF4C((void (*)(void))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata, &qword_10020A6C0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata);
}

uint64_t sub_1000667B0(uint64_t a1, uint64_t a2)
{
  return sub_10004BE50(a1, a2, &qword_1002078A0, &static Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata.protoMessageName);
}

uint64_t sub_1000667D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1000667F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100072F60(&qword_10020B888, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10006686C@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_1002078A8, (uint64_t)static Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata._protobuf_nameMap, a1);
}

uint64_t sub_100066890(uint64_t a1)
{
  uint64_t v2 = sub_100072F60(&qword_10020A800, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000668FC()
{
  sub_100072F60(&qword_10020A800, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata);
  return sub_1001C0050();
}

void sub_100066978()
{
  v0._object = (void *)0x80000001001C40C0;
  v0._countAndFlagsBits = 0xD000000000000016;
  sub_1001C0D00(v0);
  static Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations.protoMessageName = 0xD00000000000002ELL;
  *(void *)algn_10021FC48 = 0x80000001001C3DD0;
}

uint64_t *Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations.protoMessageName.unsafeMutableAddressor()
{
  if (qword_1002078B0 != -1) {
    swift_once();
  }
  return &static Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations.protoMessageName;
}

uint64_t static Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations.protoMessageName.getter()
{
  return sub_10004BA2C(&qword_1002078B0, &static Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations.protoMessageName);
}

uint64_t sub_100066A60(uint64_t a1)
{
  return sub_100066A6C(a1, static Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations._protobuf_nameMap);
}

uint64_t sub_100066A6C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1001C0160();
  sub_100044F74(v3, a2);
  sub_10000D978(v3, (uint64_t)a2);
  return sub_1001C0150();
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_1002078B8, (uint64_t)static Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations._protobuf_nameMap);
}

uint64_t static Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_1002078B8, (uint64_t)static Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations._protobuf_nameMap, a1);
}

Swift::Int Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations.hashValue.getter()
{
  return sub_10006CF4C((void (*)(void))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations, &qword_10020A6C8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations);
}

uint64_t sub_100066B44(uint64_t a1, uint64_t a2)
{
  return sub_10004BE50(a1, a2, &qword_1002078B0, &static Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations.protoMessageName);
}

uint64_t sub_100066B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100072F60(&qword_10020B880, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100066BE8@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_1002078B8, (uint64_t)static Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations._protobuf_nameMap, a1);
}

uint64_t sub_100066C0C(uint64_t a1)
{
  uint64_t v2 = sub_100072F60(&qword_10020A818, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100066C78()
{
  sub_100072F60(&qword_10020A818, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations);
  return sub_1001C0050();
}

void sub_100066CF4()
{
  v0._object = (void *)0x80000001001C40A0;
  v0._countAndFlagsBits = 0xD000000000000017;
  sub_1001C0D00(v0);
  static Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList.protoMessageName = 0xD00000000000002ELL;
  unk_10021FC70 = 0x80000001001C3DD0;
}

uint64_t *Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList.protoMessageName.unsafeMutableAddressor()
{
  if (qword_1002078C0 != -1) {
    swift_once();
  }
  return &static Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList.protoMessageName;
}

uint64_t static Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList.protoMessageName.getter()
{
  return sub_10004BA2C(&qword_1002078C0, &static Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList.protoMessageName);
}

uint64_t sub_100066DDC(uint64_t a1)
{
  return sub_100066DF4(a1, static Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList._protobuf_nameMap, (uint64_t)"should_clear_cache", 18);
}

uint64_t sub_100066DF4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_1001C0160();
  sub_100044F74(v5, a2);
  sub_10000D978(v5, (uint64_t)a2);
  sub_100003918(&qword_100209FB8);
  uint64_t v6 = (int *)(sub_100003918(&qword_100209FC0) - 8);
  uint64_t v7 = *(void *)(*(void *)v6 + 72);
  unint64_t v8 = (*(unsigned __int8 *)(*(void *)v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v6 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1001CD7F0;
  uint64_t v10 = (void *)(v9 + v8);
  unint64_t v11 = v9 + v8 + v6[14];
  *uint64_t v10 = 1;
  *(void *)unint64_t v11 = "node_identifier";
  *(void *)(v11 + 8) = 15;
  *(unsigned char *)(v11 + 16) = 2;
  uint64_t v12 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v13 = sub_1001C0130();
  uint64_t v14 = *(void (**)(void))(*(void *)(v13 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v14)(v11, v12, v13);
  uint64_t v15 = (char *)v10 + v7 + v6[14];
  *(void *)((char *)v10 + v7) = 2;
  *(void *)uint64_t v15 = a3;
  *((void *)v15 + 1) = a4;
  v15[16] = 2;
  v14();
  return sub_1001C0140();
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_1002078C8, (uint64_t)static Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList._protobuf_nameMap);
}

uint64_t static Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_1002078C8, (uint64_t)static Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList._protobuf_nameMap, a1);
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_1001BFF00();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_1001BFF30();
      }
      else if (result == 1)
      {
        sub_1001BFF70();
      }
      uint64_t result = sub_1001BFF00();
    }
  }
  return result;
}

uint64_t Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList.traverse<A>(visitor:)()
{
  if (!*(void *)(*(void *)v0 + 16) || (uint64_t result = sub_1001C00D0(), !v1))
  {
    if (v0[8] != 1 || (uint64_t result = sub_1001C00A0(), !v1))
    {
      type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(0);
      return sub_1001BFE40();
    }
  }
  return result;
}

Swift::Int Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList.hashValue.getter()
{
  return sub_10006CF4C((void (*)(void))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList, &qword_10020A6D0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList);
}

uint64_t sub_1000671A4(uint64_t a1, uint64_t a2)
{
  return sub_10004BE50(a1, a2, &qword_1002078C0, &static Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList.protoMessageName);
}

uint64_t sub_1000671CC()
{
  return Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList.decodeMessage<A>(decoder:)();
}

uint64_t sub_1000671E4()
{
  return Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList.traverse<A>(visitor:)();
}

uint64_t sub_1000671FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100072F60(&qword_10020B878, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100067278@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_1002078C8, (uint64_t)static Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList._protobuf_nameMap, a1);
}

uint64_t sub_10006729C(uint64_t a1)
{
  uint64_t v2 = sub_100072F60(&qword_10020A830, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100067308()
{
  sub_100072F60(&qword_10020A830, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList);
  return sub_1001C0050();
}

void *Proto_Ropes_HttpService_PrefetchRequest.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Ropes_HttpService_PrefetchRequest.protoMessageName;
}

unint64_t static Proto_Ropes_HttpService_PrefetchRequest.protoMessageName.getter()
{
  return 0xD00000000000002FLL;
}

uint64_t sub_1000673AC()
{
  uint64_t v0 = sub_1001C0160();
  sub_100044F74(v0, static Proto_Ropes_HttpService_PrefetchRequest._protobuf_nameMap);
  sub_10000D978(v0, (uint64_t)static Proto_Ropes_HttpService_PrefetchRequest._protobuf_nameMap);
  sub_100003918(&qword_100209FB8);
  uint64_t v1 = (int *)(sub_100003918(&qword_100209FC0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001CD7F0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "capabilities";
  *(void *)(v6 + 8) = 12;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_1001C0130();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "client_requested_attestation_count";
  *((void *)v10 + 1) = 34;
  v10[16] = 2;
  v9();
  return sub_1001C0140();
}

uint64_t Proto_Ropes_HttpService_PrefetchRequest._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_1002078D0, (uint64_t)static Proto_Ropes_HttpService_PrefetchRequest._protobuf_nameMap);
}

uint64_t static Proto_Ropes_HttpService_PrefetchRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_1002078D0, (uint64_t)static Proto_Ropes_HttpService_PrefetchRequest._protobuf_nameMap, a1);
}

uint64_t Proto_Ropes_HttpService_PrefetchRequest.decodeMessage<A>(decoder:)()
{
  while (1)
  {
    uint64_t result = sub_1001BFF00();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 2)
    {
      type metadata accessor for Proto_Ropes_HttpService_PrefetchRequest(0);
      sub_1001BFFB0();
    }
    else if (result == 1)
    {
      sub_10006767C();
    }
    uint64_t v0 = 0;
  }
  return result;
}

uint64_t sub_10006767C()
{
  return sub_1001BFFE0();
}

uint64_t Proto_Ropes_HttpService_PrefetchRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_10006779C(v3, a1, a2, a3);
  if (!v4)
  {
    sub_1000679A0(v3);
    return sub_1001BFE40();
  }
  return result;
}

uint64_t sub_10006779C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_100003918(&qword_10020A638);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Proto_Ropes_HttpService_PrefetchRequest(0);
  sub_10003282C(a1 + *(int *)(v14 + 20), (uint64_t)v8, &qword_10020A638);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_100010360((uint64_t)v8, &qword_10020A638);
  }
  sub_10005CA74((uint64_t)v8, (uint64_t)v13, type metadata accessor for Proto_Ropes_Common_Capabilities);
  sub_100072F60(&qword_1002099B0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Capabilities);
  sub_1001C0120();
  return sub_10005CA14((uint64_t)v13, type metadata accessor for Proto_Ropes_Common_Capabilities);
}

uint64_t sub_1000679A0(uint64_t a1)
{
  uint64_t result = type metadata accessor for Proto_Ropes_HttpService_PrefetchRequest(0);
  if ((*(unsigned char *)(a1 + *(int *)(result + 24) + 4) & 1) == 0) {
    return sub_1001C0100();
  }
  return result;
}

Swift::Int Proto_Ropes_HttpService_PrefetchRequest.hashValue.getter()
{
  return sub_10006CF4C((void (*)(void))type metadata accessor for Proto_Ropes_HttpService_PrefetchRequest, &qword_10020A6D8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_PrefetchRequest);
}

uint64_t sub_100067A64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v4 = a2 + *(int *)(a1 + 20);
  uint64_t v5 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v7 = a2 + *(int *)(a1 + 24);
  *(_DWORD *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 4) = 1;
  return result;
}

uint64_t sub_100067AF0()
{
  return Proto_Ropes_HttpService_PrefetchRequest.decodeMessage<A>(decoder:)();
}

uint64_t sub_100067B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Ropes_HttpService_PrefetchRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_100067B20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100072F60(&qword_10020B870, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_PrefetchRequest);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100067B9C@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_1002078D0, (uint64_t)static Proto_Ropes_HttpService_PrefetchRequest._protobuf_nameMap, a1);
}

uint64_t sub_100067BC0(uint64_t a1)
{
  uint64_t v2 = sub_100072F60(&qword_10020A848, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_PrefetchRequest);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100067C2C()
{
  sub_100072F60(&qword_10020A848, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_PrefetchRequest);
  return sub_1001C0050();
}

void *Proto_Ropes_HttpService_PrefetchUnaryResponse.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Ropes_HttpService_PrefetchUnaryResponse.protoMessageName;
}

unint64_t static Proto_Ropes_HttpService_PrefetchUnaryResponse.protoMessageName.getter()
{
  return 0xD000000000000035;
}

uint64_t sub_100067CD0()
{
  uint64_t v0 = sub_1001C0160();
  sub_100044F74(v0, static Proto_Ropes_HttpService_PrefetchUnaryResponse._protobuf_nameMap);
  sub_10000D978(v0, (uint64_t)static Proto_Ropes_HttpService_PrefetchUnaryResponse._protobuf_nameMap);
  sub_100003918(&qword_100209FB8);
  uint64_t v1 = (int *)(sub_100003918(&qword_100209FC0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001CD7D0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "attestation";
  *(void *)(v6 + 8) = 11;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_1001C0130();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "rate_limit_configuration_list";
  *((void *)v10 + 1) = 29;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 3;
  *(void *)uint64_t v11 = "compressed_attestation_list";
  *(void *)(v11 + 8) = 27;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_1001C0140();
}

uint64_t Proto_Ropes_HttpService_PrefetchUnaryResponse._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_1002078D8, (uint64_t)static Proto_Ropes_HttpService_PrefetchUnaryResponse._protobuf_nameMap);
}

uint64_t static Proto_Ropes_HttpService_PrefetchUnaryResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_1002078D8, (uint64_t)static Proto_Ropes_HttpService_PrefetchUnaryResponse._protobuf_nameMap, a1);
}

uint64_t Proto_Ropes_HttpService_PrefetchUnaryResponse.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_1001BFF00();
  uint64_t v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 3) {
        break;
      }
      if (result == 2)
      {
        uint64_t v4 = v3;
        sub_10006805C();
        goto LABEL_5;
      }
      if (result == 1)
      {
        type metadata accessor for Proto_Ropes_Common_Attestation(0);
        sub_100072F60(&qword_1002098E8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Attestation);
        uint64_t v4 = v3;
        sub_1001BFFD0();
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = sub_1001BFF00();
    }
    uint64_t v4 = v3;
    sub_10006810C();
LABEL_5:
    uint64_t v3 = v4;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_10006805C()
{
  return sub_1001BFFE0();
}

uint64_t sub_10006810C()
{
  return sub_1001BFFE0();
}

uint64_t Proto_Ropes_HttpService_PrefetchUnaryResponse.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(*(void *)v3 + 16)
    || (type metadata accessor for Proto_Ropes_Common_Attestation(0),
        sub_100072F60(&qword_1002098E8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Attestation), uint64_t result = sub_1001C0110(), !v4))
  {
    uint64_t result = sub_1000682E8(v3, a1, a2, a3);
    if (!v4)
    {
      sub_1000684EC(v3, a1, a2, a3);
      type metadata accessor for Proto_Ropes_HttpService_PrefetchUnaryResponse(0);
      return sub_1001BFE40();
    }
  }
  return result;
}

uint64_t sub_1000682E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_100003918(&qword_10020A650);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Proto_Ropes_HttpService_PrefetchUnaryResponse(0);
  sub_10003282C(a1 + *(int *)(v14 + 24), (uint64_t)v8, &qword_10020A650);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_100010360((uint64_t)v8, &qword_10020A650);
  }
  sub_10005CA74((uint64_t)v8, (uint64_t)v13, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  sub_100072F60(&qword_10020B908, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  sub_1001C0120();
  return sub_10005CA14((uint64_t)v13, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
}

uint64_t sub_1000684EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_100003918(&qword_10020A658);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Proto_Ropes_HttpService_PrefetchUnaryResponse(0);
  sub_10003282C(a1 + *(int *)(v14 + 28), (uint64_t)v8, &qword_10020A658);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_100010360((uint64_t)v8, &qword_10020A658);
  }
  sub_10005CA74((uint64_t)v8, (uint64_t)v13, type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
  sub_100072F60(&qword_1002099E0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
  sub_1001C0120();
  return sub_10005CA14((uint64_t)v13, type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
}

Swift::Int Proto_Ropes_HttpService_PrefetchUnaryResponse.hashValue.getter()
{
  return sub_10006CF4C((void (*)(void))type metadata accessor for Proto_Ropes_HttpService_PrefetchUnaryResponse, &qword_10020A6E0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_PrefetchUnaryResponse);
}

uint64_t sub_10006873C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = &_swiftEmptyArrayStorage;
  _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v4 = (char *)a2 + *(int *)(a1 + 24);
  uint64_t v5 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = (char *)a2 + *(int *)(a1 + 28);
  uint64_t v7 = type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
  return v8(v6, 1, 1, v7);
}

uint64_t sub_10006881C()
{
  return Proto_Ropes_HttpService_PrefetchUnaryResponse.decodeMessage<A>(decoder:)();
}

uint64_t sub_100068834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Ropes_HttpService_PrefetchUnaryResponse.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_10006884C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100072F60(&qword_10020B868, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_PrefetchUnaryResponse);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000688C8@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_1002078D8, (uint64_t)static Proto_Ropes_HttpService_PrefetchUnaryResponse._protobuf_nameMap, a1);
}

uint64_t sub_1000688EC(uint64_t a1)
{
  uint64_t v2 = sub_100072F60(&qword_10020A860, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_PrefetchUnaryResponse);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100068958()
{
  sub_100072F60(&qword_10020A860, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_PrefetchUnaryResponse);
  return sub_1001C0050();
}

void *Proto_Ropes_HttpService_PrefetchResponse.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Ropes_HttpService_PrefetchResponse.protoMessageName;
}

unint64_t static Proto_Ropes_HttpService_PrefetchResponse.protoMessageName.getter()
{
  return 0xD000000000000030;
}

uint64_t sub_1000689FC()
{
  uint64_t v0 = sub_1001C0160();
  sub_100044F74(v0, static Proto_Ropes_HttpService_PrefetchResponse._protobuf_nameMap);
  sub_10000D978(v0, (uint64_t)static Proto_Ropes_HttpService_PrefetchResponse._protobuf_nameMap);
  sub_100003918(&qword_100209FB8);
  uint64_t v1 = (int *)(sub_100003918(&qword_100209FC0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001CD7F0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "attestation";
  *(void *)(v6 + 8) = 11;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_1001C0130();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "rate_limit_configuration_list";
  *((void *)v10 + 1) = 29;
  v10[16] = 2;
  v9();
  return sub_1001C0140();
}

uint64_t Proto_Ropes_HttpService_PrefetchResponse._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_1002078E0, (uint64_t)static Proto_Ropes_HttpService_PrefetchResponse._protobuf_nameMap);
}

uint64_t static Proto_Ropes_HttpService_PrefetchResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_1002078E0, (uint64_t)static Proto_Ropes_HttpService_PrefetchResponse._protobuf_nameMap, a1);
}

uint64_t Proto_Ropes_HttpService_PrefetchResponse.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  while (1)
  {
    uint64_t result = sub_1001BFF00();
    if (v4 || (v10 & 1) != 0) {
      break;
    }
    if (result == 2)
    {
      sub_100069210(v5, a1, a2, a3);
    }
    else if (result == 1)
    {
      sub_100068C98(v5, a1, a2, a3);
    }
  }
  return result;
}

uint64_t sub_100068C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v56 = a4;
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  uint64_t v5 = type metadata accessor for Proto_Ropes_Common_Attestation(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = __chkstk_darwin(v5, v7);
  uint64_t v48 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v10);
  uint64_t v51 = (char *)&v44 - v11;
  uint64_t v12 = sub_100003918(&qword_10020A660);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v22);
  uint64_t v24 = (char *)&v44 - v23;
  uint64_t v25 = sub_100003918(&qword_10020B930);
  uint64_t v27 = __chkstk_darwin(v25 - 8, v26);
  uint64_t v49 = (uint64_t)&v44 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v29);
  uint64_t v31 = (char *)&v44 - v30;
  uint64_t v50 = v6;
  uint64_t v32 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v53 = v5;
  uint64_t v33 = v5;
  uint64_t v34 = v32;
  v32((char *)&v44 - v30, 1, 1, v33);
  uint64_t v47 = a1;
  sub_10003282C(a1, (uint64_t)v15, &qword_10020A660);
  uint64_t v46 = v17;
  int v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
  if (v35 == 1)
  {
    sub_100010360((uint64_t)v15, &qword_10020A660);
    uint64_t v36 = v16;
    uint64_t v37 = v53;
  }
  else
  {
    uint64_t v45 = v34;
    uint64_t v38 = (uint64_t)v51;
    sub_10005CA74((uint64_t)v15, (uint64_t)v24, type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type);
    sub_10005CA74((uint64_t)v24, (uint64_t)v21, type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type);
    uint64_t v36 = v16;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_10005CA14((uint64_t)v21, type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type);
      uint64_t v37 = v53;
    }
    else
    {
      sub_100010360((uint64_t)v31, &qword_10020B930);
      sub_10005CA74((uint64_t)v21, v38, type metadata accessor for Proto_Ropes_Common_Attestation);
      sub_10005CA74(v38, (uint64_t)v31, type metadata accessor for Proto_Ropes_Common_Attestation);
      uint64_t v37 = v53;
      v45(v31, 0, 1, v53);
    }
  }
  uint64_t v39 = v52;
  sub_100072F60(&qword_1002098E8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Attestation);
  sub_1001BFFE0();
  if (v39) {
    return sub_100010360((uint64_t)v31, &qword_10020B930);
  }
  uint64_t v41 = v49;
  sub_10003282C((uint64_t)v31, v49, &qword_10020B930);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v41, 1, v37) == 1)
  {
    sub_100010360((uint64_t)v31, &qword_10020B930);
    return sub_100010360(v41, &qword_10020B930);
  }
  else
  {
    uint64_t v42 = v48;
    sub_10005CA74(v41, v48, type metadata accessor for Proto_Ropes_Common_Attestation);
    if (v35 != 1) {
      sub_1001BFF10();
    }
    sub_100010360((uint64_t)v31, &qword_10020B930);
    uint64_t v43 = v47;
    sub_100010360(v47, &qword_10020A660);
    sub_10005CA74(v42, v43, type metadata accessor for Proto_Ropes_Common_Attestation);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v36);
  }
}

uint64_t sub_100069210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v56 = a4;
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  uint64_t v5 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = __chkstk_darwin(v5, v7);
  uint64_t v48 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v10);
  uint64_t v51 = (char *)&v44 - v11;
  uint64_t v12 = sub_100003918(&qword_10020A660);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v22);
  uint64_t v24 = (char *)&v44 - v23;
  uint64_t v25 = sub_100003918(&qword_10020A650);
  uint64_t v27 = __chkstk_darwin(v25 - 8, v26);
  uint64_t v49 = (uint64_t)&v44 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v29);
  uint64_t v31 = (char *)&v44 - v30;
  uint64_t v50 = v6;
  uint64_t v32 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v53 = v5;
  uint64_t v33 = v5;
  uint64_t v34 = v32;
  v32((char *)&v44 - v30, 1, 1, v33);
  uint64_t v47 = a1;
  sub_10003282C(a1, (uint64_t)v15, &qword_10020A660);
  uint64_t v46 = v17;
  int v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
  if (v35 == 1)
  {
    sub_100010360((uint64_t)v15, &qword_10020A660);
    uint64_t v36 = v16;
  }
  else
  {
    uint64_t v45 = v34;
    uint64_t v37 = (uint64_t)v51;
    sub_10005CA74((uint64_t)v15, (uint64_t)v24, type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type);
    sub_10005CA74((uint64_t)v24, (uint64_t)v21, type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type);
    uint64_t v36 = v16;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_100010360((uint64_t)v31, &qword_10020A650);
      sub_10005CA74((uint64_t)v21, v37, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
      sub_10005CA74(v37, (uint64_t)v31, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
      uint64_t v38 = v53;
      v45(v31, 0, 1, v53);
      goto LABEL_7;
    }
    sub_10005CA14((uint64_t)v21, type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type);
  }
  uint64_t v38 = v53;
LABEL_7:
  uint64_t v39 = v52;
  sub_100072F60(&qword_10020B908, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  sub_1001BFFE0();
  if (v39) {
    return sub_100010360((uint64_t)v31, &qword_10020A650);
  }
  uint64_t v41 = v49;
  sub_10003282C((uint64_t)v31, v49, &qword_10020A650);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v41, 1, v38) == 1)
  {
    sub_100010360((uint64_t)v31, &qword_10020A650);
    return sub_100010360(v41, &qword_10020A650);
  }
  else
  {
    uint64_t v42 = v48;
    sub_10005CA74(v41, v48, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
    if (v35 != 1) {
      sub_1001BFF10();
    }
    sub_100010360((uint64_t)v31, &qword_10020A650);
    uint64_t v43 = v47;
    sub_100010360(v47, &qword_10020A660);
    sub_10005CA74(v42, v43, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v36);
  }
}

uint64_t Proto_Ropes_HttpService_PrefetchResponse.traverse<A>(visitor:)()
{
  uint64_t v2 = sub_100003918(&qword_10020A660);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(v0, (uint64_t)v5, &qword_10020A660);
  uint64_t v6 = type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6) == 1) {
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() == 1) {
    sub_100069B30(v0);
  }
  else {
    sub_10006990C(v0);
  }
  uint64_t result = sub_10005CA14((uint64_t)v5, type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type);
  if (!v1)
  {
LABEL_6:
    type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse(0);
    return sub_1001BFE40();
  }
  return result;
}

uint64_t sub_10006990C(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020A660);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Ropes_Common_Attestation(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(a1, (uint64_t)v5, &qword_10020A660);
  uint64_t v10 = type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_100010360((uint64_t)v5, &qword_10020A660);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_10005CA74((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Ropes_Common_Attestation);
    sub_100072F60(&qword_1002098E8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Attestation);
    sub_1001C0120();
    return sub_10005CA14((uint64_t)v9, type metadata accessor for Proto_Ropes_Common_Attestation);
  }
  uint64_t result = sub_10005CA14((uint64_t)v5, type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type);
  __break(1u);
  return result;
}

uint64_t sub_100069B30(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020A660);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(a1, (uint64_t)v5, &qword_10020A660);
  uint64_t v10 = type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_100010360((uint64_t)v5, &qword_10020A660);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10005CA74((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
    sub_100072F60(&qword_10020B908, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
    sub_1001C0120();
    return sub_10005CA14((uint64_t)v9, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  }
  uint64_t result = sub_10005CA14((uint64_t)v5, type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type);
  __break(1u);
  return result;
}

Swift::Int Proto_Ropes_HttpService_PrefetchResponse.hashValue.getter()
{
  return sub_10006CF4C((void (*)(void))type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse, &qword_10020A6E8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse);
}

uint64_t sub_100069DA0@<X0>(uint64_t a1@<X8>)
{
  return sub_100065FBC(type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type, a1);
}

uint64_t sub_100069DB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Ropes_HttpService_PrefetchResponse.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_100069DD0()
{
  return Proto_Ropes_HttpService_PrefetchResponse.traverse<A>(visitor:)();
}

uint64_t sub_100069DE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100072F60(&qword_10020B860, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100069E64@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_1002078E0, (uint64_t)static Proto_Ropes_HttpService_PrefetchResponse._protobuf_nameMap, a1);
}

uint64_t sub_100069E88(uint64_t a1)
{
  uint64_t v2 = sub_100072F60(&qword_10020A878, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100069EF4()
{
  sub_100072F60(&qword_10020A878, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse);
  return sub_1001C0050();
}

void *Proto_Ropes_HttpService_ConfigRequest.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Ropes_HttpService_ConfigRequest.protoMessageName;
}

unint64_t static Proto_Ropes_HttpService_ConfigRequest.protoMessageName.getter()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_100069F98(uint64_t a1)
{
  return sub_10006CC90(a1, static Proto_Ropes_HttpService_ConfigRequest._protobuf_nameMap, (uint64_t)"rate_limit_config_request", 25, (unsigned int *)&enum case for _NameMap.NameDescription.standard(_:));
}

uint64_t Proto_Ropes_HttpService_ConfigRequest._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_1002078E8, (uint64_t)static Proto_Ropes_HttpService_ConfigRequest._protobuf_nameMap);
}

uint64_t static Proto_Ropes_HttpService_ConfigRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_1002078E8, (uint64_t)static Proto_Ropes_HttpService_ConfigRequest._protobuf_nameMap, a1);
}

uint64_t Proto_Ropes_HttpService_ConfigRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10006AA38(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10006A02C);
}

uint64_t sub_10006A02C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v49 = a2;
  uint64_t v50 = a3;
  uint64_t v51 = a4;
  uint64_t v52 = a1;
  uint64_t v4 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v43 = (uint64_t)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v9);
  uint64_t v45 = (uint64_t)&v40 - v10;
  uint64_t v11 = sub_100003918(&qword_10020A628);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v18 = __chkstk_darwin(v15, v17);
  uint64_t v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v21);
  uint64_t v23 = (char *)&v40 - v22;
  uint64_t v24 = sub_100003918(&qword_10020B920);
  uint64_t v26 = __chkstk_darwin(v24 - 8, v25);
  uint64_t v46 = (char *)&v40 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26, v28);
  uint64_t v30 = (char *)&v40 - v29;
  uint64_t v44 = v5;
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v47 = v4;
  v31((char *)&v40 - v29, 1, 1, v4);
  sub_10003282C(v52, (uint64_t)v14, &qword_10020A628);
  uint64_t v41 = v16;
  uint64_t v42 = v15;
  int v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15);
  if (v32 == 1)
  {
    sub_100010360((uint64_t)v14, &qword_10020A628);
    uint64_t v33 = v47;
  }
  else
  {
    sub_10005CA74((uint64_t)v14, (uint64_t)v23, type metadata accessor for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type);
    sub_10005CA74((uint64_t)v23, (uint64_t)v20, type metadata accessor for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type);
    sub_100010360((uint64_t)v30, &qword_10020B920);
    uint64_t v34 = v45;
    sub_10005CA74((uint64_t)v20, v45, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest);
    sub_10005CA74(v34, (uint64_t)v30, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest);
    uint64_t v33 = v47;
    v31(v30, 0, 1, v47);
  }
  uint64_t v35 = v48;
  uint64_t v36 = (uint64_t)v46;
  sub_100072F60(&qword_10020B918, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest);
  sub_1001BFFE0();
  if (v35) {
    return sub_100010360((uint64_t)v30, &qword_10020B920);
  }
  sub_10003282C((uint64_t)v30, v36, &qword_10020B920);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v36, 1, v33) == 1)
  {
    sub_100010360((uint64_t)v30, &qword_10020B920);
    return sub_100010360(v36, &qword_10020B920);
  }
  else
  {
    uint64_t v38 = v43;
    sub_10005CA74(v36, v43, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest);
    if (v32 != 1) {
      sub_1001BFF10();
    }
    sub_100010360((uint64_t)v30, &qword_10020B920);
    uint64_t v39 = v52;
    sub_100010360(v52, &qword_10020A628);
    sub_10005CA74(v38, v39, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v39, 0, 1, v42);
  }
}

uint64_t Proto_Ropes_HttpService_ConfigRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10006B004(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10006A574, (void (*)(void))type metadata accessor for Proto_Ropes_HttpService_ConfigRequest);
}

uint64_t sub_10006A574(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020A628);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(a1, (uint64_t)v5, &qword_10020A628);
  uint64_t v10 = type metadata accessor for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v5, 1, v10) == 1) {
    return sub_100010360((uint64_t)v5, &qword_10020A628);
  }
  sub_10005CA74((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest);
  sub_100072F60(&qword_10020B918, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest);
  sub_1001C0120();
  return sub_10005CA14((uint64_t)v9, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest);
}

Swift::Int Proto_Ropes_HttpService_ConfigRequest.hashValue.getter()
{
  return sub_10006CF4C((void (*)(void))type metadata accessor for Proto_Ropes_HttpService_ConfigRequest, &qword_10020A6F0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_ConfigRequest);
}

uint64_t sub_10006A7AC@<X0>(uint64_t a1@<X8>)
{
  return sub_100065FBC(type metadata accessor for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type, a1);
}

uint64_t sub_10006A7C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Ropes_HttpService_ConfigRequest.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_10006A7DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Ropes_HttpService_ConfigRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_10006A7F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100072F60(&qword_10020B858, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_ConfigRequest);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10006A870@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_1002078E8, (uint64_t)static Proto_Ropes_HttpService_ConfigRequest._protobuf_nameMap, a1);
}

uint64_t sub_10006A894(uint64_t a1)
{
  uint64_t v2 = sub_100072F60(&qword_10020A890, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_ConfigRequest);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10006A900()
{
  sub_100072F60(&qword_10020A890, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_ConfigRequest);
  return sub_1001C0050();
}

void *Proto_Ropes_HttpService_ConfigResponse.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Ropes_HttpService_ConfigResponse.protoMessageName;
}

unint64_t static Proto_Ropes_HttpService_ConfigResponse.protoMessageName.getter()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_10006A9A4(uint64_t a1)
{
  return sub_10006CC90(a1, static Proto_Ropes_HttpService_ConfigResponse._protobuf_nameMap, (uint64_t)"rate_limit_configuration_list", 29, (unsigned int *)&enum case for _NameMap.NameDescription.standard(_:));
}

uint64_t Proto_Ropes_HttpService_ConfigResponse._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_1002078F0, (uint64_t)static Proto_Ropes_HttpService_ConfigResponse._protobuf_nameMap);
}

uint64_t static Proto_Ropes_HttpService_ConfigResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_1002078F0, (uint64_t)static Proto_Ropes_HttpService_ConfigResponse._protobuf_nameMap, a1);
}

uint64_t Proto_Ropes_HttpService_ConfigResponse.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10006AA38(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10006AABC);
}

uint64_t sub_10006AA38(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = v4;
  while (1)
  {
    uint64_t result = sub_1001BFF00();
    if (v5 || (v12 & 1) != 0) {
      break;
    }
    if (result == 1) {
      a4(v7, a1, a2, a3);
    }
  }
  return result;
}

uint64_t sub_10006AABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v49 = a2;
  uint64_t v50 = a3;
  uint64_t v51 = a4;
  uint64_t v52 = a1;
  uint64_t v4 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v43 = (uint64_t)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v9);
  uint64_t v45 = (uint64_t)&v40 - v10;
  uint64_t v11 = sub_100003918(&qword_10020A630);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v18 = __chkstk_darwin(v15, v17);
  uint64_t v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v21);
  uint64_t v23 = (char *)&v40 - v22;
  uint64_t v24 = sub_100003918(&qword_10020A650);
  uint64_t v26 = __chkstk_darwin(v24 - 8, v25);
  uint64_t v46 = (char *)&v40 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26, v28);
  uint64_t v30 = (char *)&v40 - v29;
  uint64_t v44 = v5;
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v47 = v4;
  v31((char *)&v40 - v29, 1, 1, v4);
  sub_10003282C(v52, (uint64_t)v14, &qword_10020A630);
  uint64_t v41 = v16;
  uint64_t v42 = v15;
  int v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15);
  if (v32 == 1)
  {
    sub_100010360((uint64_t)v14, &qword_10020A630);
    uint64_t v33 = v47;
  }
  else
  {
    sub_10005CA74((uint64_t)v14, (uint64_t)v23, type metadata accessor for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type);
    sub_10005CA74((uint64_t)v23, (uint64_t)v20, type metadata accessor for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type);
    sub_100010360((uint64_t)v30, &qword_10020A650);
    uint64_t v34 = v45;
    sub_10005CA74((uint64_t)v20, v45, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
    sub_10005CA74(v34, (uint64_t)v30, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
    uint64_t v33 = v47;
    v31(v30, 0, 1, v47);
  }
  uint64_t v35 = v48;
  uint64_t v36 = (uint64_t)v46;
  sub_100072F60(&qword_10020B908, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  sub_1001BFFE0();
  if (v35) {
    return sub_100010360((uint64_t)v30, &qword_10020A650);
  }
  sub_10003282C((uint64_t)v30, v36, &qword_10020A650);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v36, 1, v33) == 1)
  {
    sub_100010360((uint64_t)v30, &qword_10020A650);
    return sub_100010360(v36, &qword_10020A650);
  }
  else
  {
    uint64_t v38 = v43;
    sub_10005CA74(v36, v43, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
    if (v32 != 1) {
      sub_1001BFF10();
    }
    sub_100010360((uint64_t)v30, &qword_10020A650);
    uint64_t v39 = v52;
    sub_100010360(v52, &qword_10020A630);
    sub_10005CA74(v38, v39, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v39, 0, 1, v42);
  }
}

uint64_t Proto_Ropes_HttpService_ConfigResponse.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10006B004(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10006B0A0, (void (*)(void))type metadata accessor for Proto_Ropes_HttpService_ConfigResponse);
}

uint64_t sub_10006B004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t), void (*a5)(void))
{
  uint64_t result = a4(v5, a1, a2, a3);
  if (!v6)
  {
    a5(0);
    return sub_1001BFE40();
  }
  return result;
}

uint64_t sub_10006B0A0(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020A630);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(a1, (uint64_t)v5, &qword_10020A630);
  uint64_t v10 = type metadata accessor for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v5, 1, v10) == 1) {
    return sub_100010360((uint64_t)v5, &qword_10020A630);
  }
  sub_10005CA74((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  sub_100072F60(&qword_10020B908, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  sub_1001C0120();
  return sub_10005CA14((uint64_t)v9, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
}

Swift::Int Proto_Ropes_HttpService_ConfigResponse.hashValue.getter()
{
  return sub_10006CF4C((void (*)(void))type metadata accessor for Proto_Ropes_HttpService_ConfigResponse, &qword_10020A6F8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_ConfigResponse);
}

uint64_t sub_10006B2D8@<X0>(uint64_t a1@<X8>)
{
  return sub_100065FBC(type metadata accessor for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type, a1);
}

uint64_t sub_10006B2F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Ropes_HttpService_ConfigResponse.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_10006B308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Ropes_HttpService_ConfigResponse.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_10006B320(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100072F60(&qword_10020B850, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_ConfigResponse);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10006B39C@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_1002078F0, (uint64_t)static Proto_Ropes_HttpService_ConfigResponse._protobuf_nameMap, a1);
}

uint64_t sub_10006B3C0(uint64_t a1)
{
  uint64_t v2 = sub_100072F60(&qword_10020A8A8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_ConfigResponse);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10006B42C()
{
  sub_100072F60(&qword_10020A8A8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_ConfigResponse);
  return sub_1001C0050();
}

void *Proto_Ropes_HttpService_AdminApiResponse.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Ropes_HttpService_AdminApiResponse.protoMessageName;
}

unint64_t static Proto_Ropes_HttpService_AdminApiResponse.protoMessageName.getter()
{
  return 0xD000000000000030;
}

uint64_t sub_10006B4D0()
{
  uint64_t v0 = sub_1001C0160();
  sub_100044F74(v0, static Proto_Ropes_HttpService_AdminApiResponse._protobuf_nameMap);
  sub_10000D978(v0, (uint64_t)static Proto_Ropes_HttpService_AdminApiResponse._protobuf_nameMap);
  sub_100003918(&qword_100209FB8);
  uint64_t v1 = (int *)(sub_100003918(&qword_100209FC0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001CD7F0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "supported_workloads";
  *(void *)(v6 + 8) = 19;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v8 = sub_1001C0130();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "public_api_endpoints";
  *((void *)v10 + 1) = 20;
  v10[16] = 2;
  v9();
  return sub_1001C0140();
}

uint64_t Proto_Ropes_HttpService_AdminApiResponse._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_1002078F8, (uint64_t)static Proto_Ropes_HttpService_AdminApiResponse._protobuf_nameMap);
}

uint64_t static Proto_Ropes_HttpService_AdminApiResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_1002078F8, (uint64_t)static Proto_Ropes_HttpService_AdminApiResponse._protobuf_nameMap, a1);
}

uint64_t Proto_Ropes_HttpService_AdminApiResponse.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_1001BFF00();
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 2) {
        break;
      }
      if (result == 1)
      {
        type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload(0);
        sub_100072F60(&qword_10020A700, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload);
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = sub_1001BFF00();
    }
    type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint(0);
    sub_100072F60(&qword_10020A708, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint);
LABEL_5:
    sub_1001BFFD0();
    goto LABEL_6;
  }
  return result;
}

uint64_t Proto_Ropes_HttpService_AdminApiResponse.traverse<A>(visitor:)()
{
  if (!*(void *)(*v0 + 16)
    || (type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload(0),
        sub_100072F60(&qword_10020A700, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload), uint64_t result = sub_1001C0110(), !v1))
  {
    if (!*(void *)(v0[1] + 16)
      || (type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint(0),
          sub_100072F60(&qword_10020A708, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint), uint64_t result = sub_1001C0110(), !v1))
    {
      type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse(0);
      return sub_1001BFE40();
    }
  }
  return result;
}

Swift::Int Proto_Ropes_HttpService_AdminApiResponse.hashValue.getter()
{
  return sub_10006CF4C((void (*)(void))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse, &qword_10020A710, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse);
}

uint64_t sub_10006B9D0@<X0>(void *a1@<X8>)
{
  *a1 = &_swiftEmptyArrayStorage;
  a1[1] = &_swiftEmptyArrayStorage;
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t sub_10006B9FC()
{
  return Proto_Ropes_HttpService_AdminApiResponse.decodeMessage<A>(decoder:)();
}

uint64_t sub_10006BA14()
{
  return Proto_Ropes_HttpService_AdminApiResponse.traverse<A>(visitor:)();
}

uint64_t sub_10006BA2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100072F60(&qword_10020B848, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10006BAA8@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_1002078F8, (uint64_t)static Proto_Ropes_HttpService_AdminApiResponse._protobuf_nameMap, a1);
}

uint64_t sub_10006BACC(uint64_t a1)
{
  uint64_t v2 = sub_100072F60(&qword_10020A8C0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10006BB38()
{
  sub_100072F60(&qword_10020A8C0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse);
  return sub_1001C0050();
}

void sub_10006BBB4()
{
  v0._countAndFlagsBits = 0x616F6C6B726F572ELL;
  v0._object = (void *)0xE900000000000064;
  sub_1001C0D00(v0);
  static Proto_Ropes_HttpService_AdminApiResponse.Workload.protoMessageName = 0xD000000000000030;
  *(void *)algn_10021FD28 = 0x80000001001C3F10;
}

uint64_t *Proto_Ropes_HttpService_AdminApiResponse.Workload.protoMessageName.unsafeMutableAddressor()
{
  if (qword_100207900 != -1) {
    swift_once();
  }
  return &static Proto_Ropes_HttpService_AdminApiResponse.Workload.protoMessageName;
}

uint64_t static Proto_Ropes_HttpService_AdminApiResponse.Workload.protoMessageName.getter()
{
  return sub_10004BA2C(&qword_100207900, &static Proto_Ropes_HttpService_AdminApiResponse.Workload.protoMessageName);
}

uint64_t sub_10006BC98()
{
  uint64_t v0 = sub_1001C0160();
  sub_100044F74(v0, static Proto_Ropes_HttpService_AdminApiResponse.Workload._protobuf_nameMap);
  sub_10000D978(v0, (uint64_t)static Proto_Ropes_HttpService_AdminApiResponse.Workload._protobuf_nameMap);
  sub_100003918(&qword_100209FB8);
  uint64_t v1 = (int *)(sub_100003918(&qword_100209FC0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001CD7D0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "workload_type";
  *(void *)(v6 + 8) = 13;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v8 = sub_1001C0130();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "mandatory_keys";
  *((void *)v10 + 1) = 14;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 4;
  *(void *)uint64_t v11 = "routing_parameters";
  *(void *)(v11 + 8) = 18;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_1001C0140();
}

uint64_t Proto_Ropes_HttpService_AdminApiResponse.Workload._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_100207908, (uint64_t)static Proto_Ropes_HttpService_AdminApiResponse.Workload._protobuf_nameMap);
}

uint64_t static Proto_Ropes_HttpService_AdminApiResponse.Workload._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_100207908, (uint64_t)static Proto_Ropes_HttpService_AdminApiResponse.Workload._protobuf_nameMap, a1);
}

uint64_t Proto_Ropes_HttpService_AdminApiResponse.Workload.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_1001BFF00();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 4:
          sub_10006BFAC();
          break;
        case 2:
          sub_1001BFF70();
          break;
        case 1:
          sub_1001BFFA0();
          break;
      }
      uint64_t result = sub_1001BFF00();
    }
  }
  return result;
}

uint64_t sub_10006BFAC()
{
  return sub_1001BFFE0();
}

uint64_t Proto_Ropes_HttpService_AdminApiResponse.Workload.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v8 = v3[1];
  uint64_t v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0) {
    uint64_t v9 = *v3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v9 || (uint64_t result = sub_1001C00F0(), !v4))
  {
    if (!*(void *)(v3[2] + 16) || (uint64_t result = sub_1001C00D0(), !v4))
    {
      uint64_t result = sub_10006C14C((uint64_t)v3, a1, a2, a3);
      if (!v4)
      {
        type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload(0);
        return sub_1001BFE40();
      }
    }
  }
  return result;
}

uint64_t sub_10006C14C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_100003918(&qword_10020A670);
  __chkstk_darwin(v5 - 8, v6);
  unint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload(0);
  sub_10003282C(a1 + *(int *)(v14 + 28), (uint64_t)v8, &qword_10020A670);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_100010360((uint64_t)v8, &qword_10020A670);
  }
  sub_10005CA74((uint64_t)v8, (uint64_t)v13, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters);
  sub_100072F60(&qword_10020A8E8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters);
  sub_1001C0120();
  return sub_10005CA14((uint64_t)v13, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters);
}

Swift::Int Proto_Ropes_HttpService_AdminApiResponse.Workload.hashValue.getter()
{
  return sub_10006CF4C((void (*)(void))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload, &qword_10020A718, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload);
}

uint64_t sub_10006C39C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a2[2] = &_swiftEmptyArrayStorage;
  _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v4 = (char *)a2 + *(int *)(a1 + 28);
  uint64_t v5 = type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters(0);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  return v6(v4, 1, 1, v5);
}

uint64_t sub_10006C434(uint64_t a1, uint64_t a2)
{
  return sub_10004BE50(a1, a2, &qword_100207900, &static Proto_Ropes_HttpService_AdminApiResponse.Workload.protoMessageName);
}

uint64_t sub_10006C45C()
{
  return Proto_Ropes_HttpService_AdminApiResponse.Workload.decodeMessage<A>(decoder:)();
}

uint64_t sub_10006C474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Ropes_HttpService_AdminApiResponse.Workload.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_10006C48C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100072F60(&qword_10020B840, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10006C508@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_100207908, (uint64_t)static Proto_Ropes_HttpService_AdminApiResponse.Workload._protobuf_nameMap, a1);
}

uint64_t sub_10006C52C(uint64_t a1)
{
  uint64_t v2 = sub_100072F60(&qword_10020A700, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10006C598()
{
  sub_100072F60(&qword_10020A700, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload);
  return sub_1001C0050();
}

void sub_10006C614()
{
  if (qword_100207900 != -1) {
    swift_once();
  }
  uint64_t v0 = static Proto_Ropes_HttpService_AdminApiResponse.Workload.protoMessageName;
  uint64_t v1 = *(void *)algn_10021FD28;
  swift_bridgeObjectRetain();
  v2._countAndFlagsBits = 0x74656D617261502ELL;
  v2._object = (void *)0xEB00000000737265;
  sub_1001C0D00(v2);
  static Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters.protoMessageName = v0;
  unk_10021FD50 = v1;
}

uint64_t *Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters.protoMessageName.unsafeMutableAddressor()
{
  if (qword_100207910 != -1) {
    swift_once();
  }
  return &static Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters.protoMessageName;
}

uint64_t static Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters.protoMessageName.getter()
{
  return sub_10004BA2C(&qword_100207910, &static Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters.protoMessageName);
}

uint64_t sub_10006C724(uint64_t a1)
{
  return sub_10006CC90(a1, static Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters._protobuf_nameMap, (uint64_t)"params", 6, (unsigned int *)&enum case for _NameMap.NameDescription.same(_:));
}

uint64_t Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_100207918, (uint64_t)static Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters._protobuf_nameMap);
}

uint64_t static Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_100207918, (uint64_t)static Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters._protobuf_nameMap, a1);
}

uint64_t Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_1001BFF00();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 1)
      {
        sub_1001BFE30();
        sub_1001BFEF0();
      }
      uint64_t result = sub_1001BFF00();
    }
  }
  return result;
}

uint64_t Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters.traverse<A>(visitor:)()
{
  if (!*(void *)(*(void *)v0 + 16) || (sub_1001BFE30(), uint64_t result = sub_1001C0080(), !v1))
  {
    type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters(0);
    return sub_1001BFE40();
  }
  return result;
}

Swift::Int Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters.hashValue.getter()
{
  return sub_10006CF4C((void (*)(void))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters, &qword_10020A720, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters);
}

uint64_t sub_10006C968@<X0>(unint64_t *a1@<X8>)
{
  *a1 = sub_100054A9C((uint64_t)&_swiftEmptyArrayStorage);
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t sub_10006C9A8(uint64_t a1, uint64_t a2)
{
  return sub_10004BE50(a1, a2, &qword_100207910, &static Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters.protoMessageName);
}

uint64_t sub_10006C9D0()
{
  return Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters.decodeMessage<A>(decoder:)();
}

uint64_t sub_10006C9E8()
{
  return Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters.traverse<A>(visitor:)();
}

uint64_t sub_10006CA00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100072F60(&qword_10020B838, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10006CA7C@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_100207918, (uint64_t)static Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters._protobuf_nameMap, a1);
}

uint64_t sub_10006CAA0(uint64_t a1)
{
  uint64_t v2 = sub_100072F60(&qword_10020A8E8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10006CB0C()
{
  sub_100072F60(&qword_10020A8E8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters);
  return sub_1001C0050();
}

void sub_10006CB88()
{
  v0._countAndFlagsBits = 0x70646E456970412ELL;
  v0._object = (void *)0xEC000000746E696FLL;
  sub_1001C0D00(v0);
  static Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint.protoMessageName = 0xD000000000000030;
  *(void *)algn_10021FD78 = 0x80000001001C3F10;
}

uint64_t *Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint.protoMessageName.unsafeMutableAddressor()
{
  if (qword_100207920 != -1) {
    swift_once();
  }
  return &static Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint.protoMessageName;
}

uint64_t static Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint.protoMessageName.getter()
{
  return sub_10004BA2C(&qword_100207920, &static Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint.protoMessageName);
}

uint64_t sub_10006CC70(uint64_t a1)
{
  return sub_10006CC90(a1, static Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint._protobuf_nameMap, (uint64_t)"url", 3, (unsigned int *)&enum case for _NameMap.NameDescription.same(_:));
}

uint64_t sub_10006CC90(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, unsigned int *a5)
{
  uint64_t v9 = sub_1001C0160();
  sub_100044F74(v9, a2);
  sub_10000D978(v9, (uint64_t)a2);
  sub_100003918(&qword_100209FB8);
  uint64_t v10 = (int *)(sub_100003918(&qword_100209FC0) - 8);
  unint64_t v11 = (*(unsigned __int8 *)(*(void *)v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v10 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1001CC760;
  unint64_t v13 = v12 + v11 + v10[14];
  *(void *)(v12 + v11) = 1;
  *(void *)unint64_t v13 = a3;
  *(void *)(v13 + 8) = a4;
  *(unsigned char *)(v13 + 16) = 2;
  uint64_t v14 = *a5;
  uint64_t v15 = sub_1001C0130();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v13, v14, v15);
  return sub_1001C0140();
}

uint64_t Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_100207928, (uint64_t)static Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint._protobuf_nameMap);
}

uint64_t static Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_100207928, (uint64_t)static Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint._protobuf_nameMap, a1);
}

uint64_t sub_10006CE38()
{
  while (1)
  {
    uint64_t result = sub_1001BFF00();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 1) {
      sub_1001BFFA0();
    }
  }
  return result;
}

uint64_t Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000666B4(a1, a2, a3, (void (*)(void))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint);
}

uint64_t static Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint.== infix(_:_:)(char *a1, char *a2)
{
  return sub_1000717E4(a1, a2, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint) & 1;
}

Swift::Int Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint.hashValue.getter()
{
  return sub_10006CF4C((void (*)(void))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint, &qword_10020A728, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint);
}

Swift::Int sub_10006CF4C(void (*a1)(void), unint64_t *a2, void (*a3)(uint64_t))
{
  return sub_1001C1990();
}

uint64_t sub_10006CFD4(uint64_t a1, uint64_t a2)
{
  return sub_10004BE50(a1, a2, &qword_100207920, &static Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint.protoMessageName);
}

uint64_t sub_10006CFFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_10006D014(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100072F60(&qword_10020B830, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10006D090@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_100207928, (uint64_t)static Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint._protobuf_nameMap, a1);
}

uint64_t sub_10006D0B4(uint64_t a1)
{
  uint64_t v2 = sub_100072F60(&qword_10020A708, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10006D120()
{
  sub_100072F60(&qword_10020A708, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint);
  return sub_1001C0050();
}

uint64_t _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v100 = sub_1001BFE60();
  uint64_t v94 = *(void *)(v100 - 8);
  uint64_t v5 = __chkstk_darwin(v100, v4);
  unint64_t v93 = (char *)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v7);
  unint64_t v92 = (char *)&v85 - v8;
  uint64_t v9 = type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0);
  uint64_t v97 = *(void *)(v9 - 8);
  uint64_t v98 = v9;
  __chkstk_darwin(v9, v10);
  uint64_t v91 = (uint64_t)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_100003918(&qword_10020B938);
  __chkstk_darwin(v96, v12);
  uint64_t v99 = (uint64_t)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100003918(&qword_10020A658);
  uint64_t v16 = __chkstk_darwin(v14 - 8, v15);
  uint64_t v95 = (uint64_t)&v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v21 = (char *)&v85 - v20;
  __chkstk_darwin(v19, v22);
  uint64_t v24 = (char *)&v85 - v23;
  uint64_t v25 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v101 = v25;
  uint64_t v102 = v26;
  __chkstk_darwin(v25, v27);
  uint64_t v29 = (uint64_t *)((char *)&v85 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v30 = sub_100003918(&qword_10020B940);
  __chkstk_darwin(v30, v31);
  uint64_t v33 = (char *)&v85 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_100003918(&qword_10020A650);
  uint64_t v36 = __chkstk_darwin(v34 - 8, v35);
  uint64_t v38 = (uint64_t *)((char *)&v85 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v40 = __chkstk_darwin(v36, v39);
  uint64_t v42 = (char *)&v85 - v41;
  __chkstk_darwin(v40, v43);
  uint64_t v45 = (char *)&v85 - v44;
  if ((sub_100168BBC(*a1, *a2) & 1) == 0) {
    goto LABEL_19;
  }
  uint64_t v86 = v29;
  uint64_t v87 = v21;
  uint64_t v89 = v24;
  double v90 = v38;
  uint64_t v46 = type metadata accessor for Proto_Ropes_HttpService_PrefetchUnaryResponse(0);
  uint64_t v47 = a1;
  sub_10003282C((uint64_t)a1 + *(int *)(v46 + 24), (uint64_t)v45, &qword_10020A650);
  uint64_t v88 = v46;
  sub_10003282C((uint64_t)a2 + *(int *)(v46 + 24), (uint64_t)v42, &qword_10020A650);
  uint64_t v48 = (uint64_t)&v33[*(int *)(v30 + 48)];
  sub_10003282C((uint64_t)v45, (uint64_t)v33, &qword_10020A650);
  sub_10003282C((uint64_t)v42, v48, &qword_10020A650);
  uint64_t v49 = v101;
  uint64_t v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v102 + 48);
  uint64_t v51 = a2;
  uint64_t v52 = v47;
  uint64_t v53 = (uint64_t)v33;
  if (v50((uint64_t)v33, 1, v101) == 1)
  {
    sub_100010360((uint64_t)v42, &qword_10020A650);
    sub_100010360((uint64_t)v45, &qword_10020A650);
    if (v50(v48, 1, v49) == 1)
    {
      sub_100010360((uint64_t)v33, &qword_10020A650);
      uint64_t v54 = v100;
      goto LABEL_5;
    }
LABEL_10:
    uint64_t v66 = &qword_10020B940;
    uint64_t v67 = v53;
LABEL_18:
    sub_100010360(v67, v66);
    goto LABEL_19;
  }
  int v64 = v52;
  uint64_t v65 = v90;
  sub_10003282C(v53, (uint64_t)v90, &qword_10020A650);
  if (v50(v48, 1, v49) == 1)
  {
    sub_100010360((uint64_t)v42, &qword_10020A650);
    sub_100010360((uint64_t)v45, &qword_10020A650);
    sub_10005CA14((uint64_t)v65, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
    goto LABEL_10;
  }
  uint64_t v68 = v45;
  uint64_t v69 = v86;
  sub_10005CA74(v48, (uint64_t)v86, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  if ((sub_100169C4C(*v65, *v69) & 1) == 0)
  {
    sub_10005CA14((uint64_t)v69, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
    sub_100010360((uint64_t)v42, &qword_10020A650);
    sub_100010360((uint64_t)v45, &qword_10020A650);
    sub_10005CA14((uint64_t)v65, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
    uint64_t v67 = v53;
    uint64_t v66 = &qword_10020A650;
    goto LABEL_18;
  }
  uint64_t v70 = v53;
  sub_100072F60(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  uint64_t v71 = v100;
  char v72 = sub_1001C0BD0();
  sub_10005CA14((uint64_t)v69, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  sub_100010360((uint64_t)v42, &qword_10020A650);
  uint64_t v73 = (uint64_t)v68;
  uint64_t v54 = v71;
  sub_100010360(v73, &qword_10020A650);
  sub_10005CA14((uint64_t)v65, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  uint64_t v52 = v64;
  sub_100010360(v70, &qword_10020A650);
  if ((v72 & 1) == 0) {
    goto LABEL_19;
  }
LABEL_5:
  uint64_t v55 = v88;
  uint64_t v56 = (uint64_t)v89;
  uint64_t v57 = v52;
  sub_10003282C((uint64_t)v52 + *(int *)(v88 + 28), (uint64_t)v89, &qword_10020A658);
  char v58 = v51;
  uint64_t v59 = (uint64_t)v87;
  sub_10003282C((uint64_t)v51 + *(int *)(v55 + 28), (uint64_t)v87, &qword_10020A658);
  uint64_t v60 = v99;
  uint64_t v61 = v99 + *(int *)(v96 + 48);
  sub_10003282C(v56, v99, &qword_10020A658);
  sub_10003282C(v59, v61, &qword_10020A658);
  uint64_t v62 = v98;
  int64_t v63 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v97 + 48);
  if (v63(v60, 1, v98) == 1)
  {
    sub_100010360(v59, &qword_10020A658);
    sub_100010360(v56, &qword_10020A658);
    if (v63(v61, 1, v62) == 1)
    {
      sub_100010360(v60, &qword_10020A658);
LABEL_22:
      uint64_t v79 = v88;
      uint64_t v80 = v94;
      uint64_t v81 = *(void (**)(char *, char *, uint64_t))(v94 + 16);
      double v82 = v92;
      v81(v92, (char *)v57 + *(int *)(v88 + 20), v54);
      double v83 = v93;
      v81(v93, (char *)v58 + *(int *)(v79 + 20), v54);
      sub_100072F60(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v75 = sub_1001C0BD0();
      uint64_t v84 = *(void (**)(char *, uint64_t))(v80 + 8);
      v84(v83, v54);
      v84(v82, v54);
      return v75 & 1;
    }
    goto LABEL_16;
  }
  uint64_t v74 = v95;
  sub_10003282C(v60, v95, &qword_10020A658);
  if (v63(v61, 1, v62) == 1)
  {
    sub_100010360(v59, &qword_10020A658);
    sub_100010360((uint64_t)v89, &qword_10020A658);
    sub_10005CA14(v74, type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
LABEL_16:
    uint64_t v66 = &qword_10020B938;
    uint64_t v67 = v60;
    goto LABEL_18;
  }
  uint64_t v77 = v91;
  sub_10005CA74(v61, v91, type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
  char v78 = static Proto_Ropes_Common_CompressedAttestationList.== infix(_:_:)(v74, v77);
  sub_10005CA14(v77, type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
  sub_100010360(v59, &qword_10020A658);
  sub_100010360((uint64_t)v89, &qword_10020A658);
  sub_10005CA14(v74, type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
  sub_100010360(v60, &qword_10020A658);
  if (v78) {
    goto LABEL_22;
  }
LABEL_19:
  char v75 = 0;
  return v75 & 1;
}

uint64_t _s20privatecloudcomputed40Proto_Ropes_HttpService_PrefetchResponseV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BFE60();
  uint64_t v50 = *(void *)(v4 - 8);
  uint64_t v51 = v4;
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v49 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v8);
  uint64_t v48 = (char *)&v44 - v9;
  uint64_t v10 = type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v45 = (uint64_t)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100003918(&qword_10020B928);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100003918(&qword_10020A660);
  uint64_t v21 = __chkstk_darwin(v19 - 8, v20);
  uint64_t v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v21, v24);
  uint64_t v27 = (char *)&v44 - v26;
  __chkstk_darwin(v25, v28);
  uint64_t v30 = (char *)&v44 - v29;
  uint64_t v46 = a1;
  sub_10003282C(a1, (uint64_t)&v44 - v29, &qword_10020A660);
  uint64_t v47 = a2;
  sub_10003282C(a2, (uint64_t)v27, &qword_10020A660);
  uint64_t v31 = (uint64_t)&v18[*(int *)(v15 + 56)];
  sub_10003282C((uint64_t)v30, (uint64_t)v18, &qword_10020A660);
  sub_10003282C((uint64_t)v27, v31, &qword_10020A660);
  uint64_t v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v32((uint64_t)v18, 1, v10) != 1)
  {
    sub_10003282C((uint64_t)v18, (uint64_t)v23, &qword_10020A660);
    if (v32(v31, 1, v10) != 1)
    {
      uint64_t v33 = v45;
      sub_10005CA74(v31, v45, type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type);
      char v34 = _s20privatecloudcomputed40Proto_Ropes_HttpService_PrefetchResponseV10OneOf_TypeO21__derived_enum_equalsySbAE_AEtFZ_0((uint64_t)v23, v33);
      sub_10005CA14(v33, type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type);
      sub_100010360((uint64_t)v27, &qword_10020A660);
      sub_100010360((uint64_t)v30, &qword_10020A660);
      sub_10005CA14((uint64_t)v23, type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type);
      sub_100010360((uint64_t)v18, &qword_10020A660);
      if (v34) {
        goto LABEL_8;
      }
LABEL_9:
      char v41 = 0;
      return v41 & 1;
    }
    sub_100010360((uint64_t)v27, &qword_10020A660);
    sub_100010360((uint64_t)v30, &qword_10020A660);
    sub_10005CA14((uint64_t)v23, type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type);
LABEL_6:
    sub_100010360((uint64_t)v18, &qword_10020B928);
    goto LABEL_9;
  }
  sub_100010360((uint64_t)v27, &qword_10020A660);
  sub_100010360((uint64_t)v30, &qword_10020A660);
  if (v32(v31, 1, v10) != 1) {
    goto LABEL_6;
  }
  sub_100010360((uint64_t)v18, &qword_10020A660);
LABEL_8:
  uint64_t v35 = type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse(0);
  uint64_t v37 = v50;
  uint64_t v36 = v51;
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 16);
  uint64_t v39 = v48;
  v38(v48, v46 + *(int *)(v35 + 20), v51);
  uint64_t v40 = v49;
  v38(v49, v47 + *(int *)(v35 + 20), v36);
  sub_100072F60(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v41 = sub_1001C0BD0();
  uint64_t v42 = *(void (**)(char *, uint64_t))(v37 + 8);
  v42(v40, v36);
  v42(v39, v36);
  return v41 & 1;
}

uint64_t _s20privatecloudcomputed40Proto_Ropes_HttpService_PrefetchResponseV10OneOf_TypeO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v30 = a2;
  uint64_t v3 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (uint64_t *)((char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for Proto_Ropes_Common_Attestation(0);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type(0);
  uint64_t v13 = __chkstk_darwin(v11, v12);
  uint64_t v15 = (uint64_t *)((char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13, v16);
  uint64_t v18 = (char *)&v29 - v17;
  uint64_t v19 = sub_100003918(&qword_10020B9A0);
  uint64_t v21 = __chkstk_darwin(v19 - 8, v20);
  uint64_t v23 = (char *)&v29 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = (uint64_t)&v23[*(int *)(v21 + 56)];
  sub_10005CB3C(a1, (uint64_t)v23, type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type);
  sub_10005CB3C(v30, v24, type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_10005CB3C((uint64_t)v23, (uint64_t)v18, type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_10005CA74(v24, (uint64_t)v10, type metadata accessor for Proto_Ropes_Common_Attestation);
      char v25 = static Proto_Ropes_Common_Attestation.== infix(_:_:)(v18, v10);
      sub_10005CA14((uint64_t)v10, type metadata accessor for Proto_Ropes_Common_Attestation);
      sub_10005CA14((uint64_t)v18, type metadata accessor for Proto_Ropes_Common_Attestation);
      sub_10005CA14((uint64_t)v23, type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type);
      return v25 & 1;
    }
    uint64_t v26 = type metadata accessor for Proto_Ropes_Common_Attestation;
    uint64_t v27 = (uint64_t)v18;
    goto LABEL_9;
  }
  sub_10005CB3C((uint64_t)v23, (uint64_t)v15, type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v26 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList;
    uint64_t v27 = (uint64_t)v15;
LABEL_9:
    sub_10005CA14(v27, v26);
    sub_100010360((uint64_t)v23, &qword_10020B9A0);
LABEL_12:
    char v25 = 0;
    return v25 & 1;
  }
  sub_10005CA74(v24, (uint64_t)v6, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  if ((sub_100169C4C(*v15, *v6) & 1) == 0
    || (sub_1001BFE60(),
        sub_100072F60(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage),
        (sub_1001C0BD0() & 1) == 0))
  {
    sub_10005CA14((uint64_t)v6, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
    sub_10005CA14((uint64_t)v15, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
    sub_10005CA14((uint64_t)v23, type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type);
    goto LABEL_12;
  }
  sub_10005CA14((uint64_t)v6, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  sub_10005CA14((uint64_t)v15, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  sub_10005CA14((uint64_t)v23, type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type);
  char v25 = 1;
  return v25 & 1;
}

uint64_t _s20privatecloudcomputed40Proto_Ropes_HttpService_AdminApiResponseV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_1001BFE60();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v12 = (char *)&v18 - v11;
  if (sub_100168C10(*a1, *a2) & 1) != 0 && (sub_100169270(a1[1], a2[1]))
  {
    uint64_t v13 = type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse(0);
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v14(v12, (char *)a1 + *(int *)(v13 + 24), v4);
    v14(v9, (char *)a2 + *(int *)(v13 + 24), v4);
    sub_100072F60(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v15 = sub_1001C0BD0();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v9, v4);
    v16(v12, v4);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t _s20privatecloudcomputed40Proto_Ropes_HttpService_AdminApiResponseV8WorkloadV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BFE60();
  uint64_t v55 = *(void *)(v4 - 8);
  uint64_t v56 = v4;
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v54 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v8);
  uint64_t v53 = (char *)&v49 - v9;
  uint64_t v10 = type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v52 = (uint64_t *)((char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_100003918(&qword_10020B8F0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100003918(&qword_10020A670);
  uint64_t v20 = __chkstk_darwin(v18 - 8, v19);
  uint64_t v22 = (uint64_t *)((char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = __chkstk_darwin(v20, v23);
  uint64_t v26 = (char *)&v49 - v25;
  __chkstk_darwin(v24, v27);
  uint64_t v29 = (char *)&v49 - v28;
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v30 = 0, (sub_1001C1840() & 1) != 0))
  {
    if (sub_1001694D0(*(void **)(a1 + 16), *(void **)(a2 + 16)))
    {
      uint64_t v51 = v22;
      uint64_t v31 = type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload(0);
      sub_10003282C(a1 + *(int *)(v31 + 28), (uint64_t)v29, &qword_10020A670);
      uint64_t v50 = v31;
      sub_10003282C(a2 + *(int *)(v31 + 28), (uint64_t)v26, &qword_10020A670);
      uint64_t v32 = (uint64_t)&v17[*(int *)(v14 + 48)];
      sub_10003282C((uint64_t)v29, (uint64_t)v17, &qword_10020A670);
      sub_10003282C((uint64_t)v26, v32, &qword_10020A670);
      uint64_t v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
      if (v33((uint64_t)v17, 1, v10) == 1)
      {
        sub_100010360((uint64_t)v26, &qword_10020A670);
        sub_100010360((uint64_t)v29, &qword_10020A670);
        if (v33(v32, 1, v10) == 1)
        {
          sub_100010360((uint64_t)v17, &qword_10020A670);
          uint64_t v34 = v56;
LABEL_13:
          uint64_t v40 = v50;
          uint64_t v41 = a1 + *(int *)(v50 + 24);
          uint64_t v42 = v55;
          uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 16);
          uint64_t v44 = v53;
          v43(v53, v41, v34);
          uint64_t v45 = a2 + *(int *)(v40 + 24);
          uint64_t v46 = v54;
          v43(v54, v45, v34);
          sub_100072F60(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
          char v30 = sub_1001C0BD0();
          uint64_t v47 = *(void (**)(char *, uint64_t))(v42 + 8);
          v47(v46, v34);
          v47(v44, v34);
          return v30 & 1;
        }
        goto LABEL_10;
      }
      uint64_t v35 = v51;
      sub_10003282C((uint64_t)v17, (uint64_t)v51, &qword_10020A670);
      if (v33(v32, 1, v10) == 1)
      {
        sub_100010360((uint64_t)v26, &qword_10020A670);
        sub_100010360((uint64_t)v29, &qword_10020A670);
        sub_10005CA14((uint64_t)v35, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters);
LABEL_10:
        uint64_t v36 = &qword_10020B8F0;
        uint64_t v37 = (uint64_t)v17;
LABEL_15:
        sub_100010360(v37, v36);
        goto LABEL_16;
      }
      uint64_t v38 = v52;
      sub_10005CA74(v32, (uint64_t)v52, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters);
      if ((sub_10016839C(*v35, *v38) & 1) == 0)
      {
        sub_10005CA14((uint64_t)v38, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters);
        sub_100010360((uint64_t)v26, &qword_10020A670);
        sub_100010360((uint64_t)v29, &qword_10020A670);
        sub_10005CA14((uint64_t)v35, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters);
        uint64_t v37 = (uint64_t)v17;
        uint64_t v36 = &qword_10020A670;
        goto LABEL_15;
      }
      sub_100072F60(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      uint64_t v34 = v56;
      char v39 = sub_1001C0BD0();
      sub_10005CA14((uint64_t)v38, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters);
      sub_100010360((uint64_t)v26, &qword_10020A670);
      sub_100010360((uint64_t)v29, &qword_10020A670);
      sub_10005CA14((uint64_t)v35, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters);
      sub_100010360((uint64_t)v17, &qword_10020A670);
      if (v39) {
        goto LABEL_13;
      }
    }
LABEL_16:
    char v30 = 0;
  }
  return v30 & 1;
}

uint64_t _s20privatecloudcomputed40Proto_Ropes_HttpService_AdminApiResponseV8WorkloadV10ParametersV2eeoiySbAG_AGtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_1001BFE60();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v12 = (char *)&v18 - v11;
  if (sub_10016839C(*a1, *a2))
  {
    uint64_t v13 = type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters(0);
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v14(v12, (char *)a1 + *(int *)(v13 + 20), v4);
    v14(v9, (char *)a2 + *(int *)(v13 + 20), v4);
    sub_100072F60(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v15 = sub_1001C0BD0();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v9, v4);
    v16(v12, v4);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t _s20privatecloudcomputed39Proto_Ropes_HttpService_PrefetchRequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BFE60();
  uint64_t v56 = *(void *)(v4 - 8);
  uint64_t v57 = v4;
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v55 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v8);
  uint64_t v54 = (char *)&v54 - v9;
  uint64_t v10 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v58 = (uint64_t)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100003918(&qword_10020B948);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100003918(&qword_10020A638);
  uint64_t v21 = __chkstk_darwin(v19 - 8, v20);
  uint64_t v61 = (uint64_t)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v21, v23);
  uint64_t v26 = (char *)&v54 - v25;
  __chkstk_darwin(v24, v27);
  uint64_t v29 = (char *)&v54 - v28;
  uint64_t v30 = type metadata accessor for Proto_Ropes_HttpService_PrefetchRequest(0);
  uint64_t v31 = *(int *)(v30 + 20);
  uint64_t v59 = a1;
  sub_10003282C(a1 + v31, (uint64_t)v29, &qword_10020A638);
  uint64_t v32 = *(int *)(v30 + 20);
  uint64_t v60 = a2;
  sub_10003282C(a2 + v32, (uint64_t)v26, &qword_10020A638);
  uint64_t v33 = (uint64_t)&v18[*(int *)(v15 + 56)];
  sub_10003282C((uint64_t)v29, (uint64_t)v18, &qword_10020A638);
  sub_10003282C((uint64_t)v26, v33, &qword_10020A638);
  uint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v34((uint64_t)v18, 1, v10) != 1)
  {
    uint64_t v41 = v61;
    sub_10003282C((uint64_t)v18, v61, &qword_10020A638);
    if (v34(v33, 1, v10) != 1)
    {
      uint64_t v44 = v58;
      sub_10005CA74(v33, v58, type metadata accessor for Proto_Ropes_Common_Capabilities);
      if ((sub_1001697EC(*(void *)v41, *(void *)v44) & 1) != 0
        && *(unsigned __int8 *)(v41 + 8) == *(unsigned __int8 *)(v44 + 8))
      {
        sub_100072F60(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        char v53 = sub_1001C0BD0();
        sub_10005CA14(v44, type metadata accessor for Proto_Ropes_Common_Capabilities);
        sub_100010360((uint64_t)v26, &qword_10020A638);
        sub_100010360((uint64_t)v29, &qword_10020A638);
        sub_10005CA14(v41, type metadata accessor for Proto_Ropes_Common_Capabilities);
        sub_100010360((uint64_t)v18, &qword_10020A638);
        if ((v53 & 1) == 0) {
          goto LABEL_14;
        }
        goto LABEL_4;
      }
      sub_10005CA14(v44, type metadata accessor for Proto_Ropes_Common_Capabilities);
      sub_100010360((uint64_t)v26, &qword_10020A638);
      sub_100010360((uint64_t)v29, &qword_10020A638);
      sub_10005CA14(v41, type metadata accessor for Proto_Ropes_Common_Capabilities);
      uint64_t v43 = (uint64_t)v18;
      uint64_t v42 = &qword_10020A638;
LABEL_13:
      sub_100010360(v43, v42);
      goto LABEL_14;
    }
    sub_100010360((uint64_t)v26, &qword_10020A638);
    sub_100010360((uint64_t)v29, &qword_10020A638);
    sub_10005CA14(v41, type metadata accessor for Proto_Ropes_Common_Capabilities);
LABEL_9:
    uint64_t v42 = &qword_10020B948;
    uint64_t v43 = (uint64_t)v18;
    goto LABEL_13;
  }
  sub_100010360((uint64_t)v26, &qword_10020A638);
  sub_100010360((uint64_t)v29, &qword_10020A638);
  if (v34(v33, 1, v10) != 1) {
    goto LABEL_9;
  }
  sub_100010360((uint64_t)v18, &qword_10020A638);
LABEL_4:
  uint64_t v35 = *(int *)(v30 + 24);
  uint64_t v36 = v60;
  uint64_t v37 = (_DWORD *)(v59 + v35);
  char v38 = *(unsigned char *)(v59 + v35 + 4);
  char v39 = (_DWORD *)(v60 + v35);
  int v40 = *(unsigned __int8 *)(v60 + v35 + 4);
  if (v38)
  {
    if (v40)
    {
LABEL_19:
      uint64_t v48 = v56;
      uint64_t v47 = v57;
      uint64_t v49 = *(void (**)(char *))(v56 + 16);
      uint64_t v50 = v54;
      v49(v54);
      uint64_t v51 = v55;
      ((void (*)(char *, uint64_t, uint64_t))v49)(v55, v36, v47);
      sub_100072F60(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v45 = sub_1001C0BD0();
      uint64_t v52 = *(void (**)(char *, uint64_t))(v48 + 8);
      v52(v51, v47);
      v52(v50, v47);
      return v45 & 1;
    }
  }
  else
  {
    if (*v37 != *v39) {
      LOBYTE(v40) = 1;
    }
    if ((v40 & 1) == 0) {
      goto LABEL_19;
    }
  }
LABEL_14:
  char v45 = 0;
  return v45 & 1;
}

uint64_t _s20privatecloudcomputed38Proto_Ropes_HttpService_InvokeResponseV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BFE60();
  uint64_t v50 = *(void *)(v4 - 8);
  uint64_t v51 = v4;
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v49 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v8);
  uint64_t v48 = (char *)&v44 - v9;
  uint64_t v10 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v45 = (uint64_t)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100003918(&qword_10020B950);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100003918(&qword_10020A648);
  uint64_t v21 = __chkstk_darwin(v19 - 8, v20);
  uint64_t v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v21, v24);
  uint64_t v27 = (char *)&v44 - v26;
  __chkstk_darwin(v25, v28);
  uint64_t v30 = (char *)&v44 - v29;
  uint64_t v46 = a1;
  sub_10003282C(a1, (uint64_t)&v44 - v29, &qword_10020A648);
  uint64_t v47 = a2;
  sub_10003282C(a2, (uint64_t)v27, &qword_10020A648);
  uint64_t v31 = (uint64_t)&v18[*(int *)(v15 + 56)];
  sub_10003282C((uint64_t)v30, (uint64_t)v18, &qword_10020A648);
  sub_10003282C((uint64_t)v27, v31, &qword_10020A648);
  uint64_t v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v32((uint64_t)v18, 1, v10) != 1)
  {
    sub_10003282C((uint64_t)v18, (uint64_t)v23, &qword_10020A648);
    if (v32(v31, 1, v10) != 1)
    {
      uint64_t v33 = v45;
      sub_10005CA74(v31, v45, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
      char v34 = _s20privatecloudcomputed38Proto_Ropes_HttpService_InvokeResponseV10OneOf_TypeO21__derived_enum_equalsySbAE_AEtFZ_0((uint64_t)v23, v33);
      sub_10005CA14(v33, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
      sub_100010360((uint64_t)v27, &qword_10020A648);
      sub_100010360((uint64_t)v30, &qword_10020A648);
      sub_10005CA14((uint64_t)v23, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
      sub_100010360((uint64_t)v18, &qword_10020A648);
      if (v34) {
        goto LABEL_8;
      }
LABEL_9:
      char v41 = 0;
      return v41 & 1;
    }
    sub_100010360((uint64_t)v27, &qword_10020A648);
    sub_100010360((uint64_t)v30, &qword_10020A648);
    sub_10005CA14((uint64_t)v23, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
LABEL_6:
    sub_100010360((uint64_t)v18, &qword_10020B950);
    goto LABEL_9;
  }
  sub_100010360((uint64_t)v27, &qword_10020A648);
  sub_100010360((uint64_t)v30, &qword_10020A648);
  if (v32(v31, 1, v10) != 1) {
    goto LABEL_6;
  }
  sub_100010360((uint64_t)v18, &qword_10020A648);
LABEL_8:
  uint64_t v35 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse(0);
  uint64_t v37 = v50;
  uint64_t v36 = v51;
  char v38 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 16);
  char v39 = v48;
  v38(v48, v46 + *(int *)(v35 + 20), v51);
  int v40 = v49;
  v38(v49, v47 + *(int *)(v35 + 20), v36);
  sub_100072F60(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v41 = sub_1001C0BD0();
  uint64_t v42 = *(void (**)(char *, uint64_t))(v37 + 8);
  v42(v40, v36);
  v42(v39, v36);
  return v41 & 1;
}

uint64_t _s20privatecloudcomputed38Proto_Ropes_HttpService_InvokeResponseV22ExpiredAttestationListV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BFE60();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v12 = (char *)&v18 - v11;
  if ((sub_1001694D0(*(void **)a1, *(void **)a2) & 1) != 0
    && *(unsigned __int8 *)(a1 + 8) == *(unsigned __int8 *)(a2 + 8))
  {
    uint64_t v14 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(0);
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v15(v12, a1 + *(int *)(v14 + 24), v4);
    v15(v9, a2 + *(int *)(v14 + 24), v4);
    sub_100072F60(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v13 = sub_1001C0BD0();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v9, v4);
    v16(v12, v4);
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t _s20privatecloudcomputed38Proto_Ropes_HttpService_InvokeResponseV10OneOf_TypeO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v93 = a1;
  uint64_t v94 = a2;
  uint64_t v2 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations(0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v90 = (uint64_t)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(0);
  __chkstk_darwin(v79, v5);
  uint64_t v84 = (uint64_t)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0);
  __chkstk_darwin(v81, v7);
  uint64_t v89 = (uint64_t *)((char *)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v83 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata(0);
  __chkstk_darwin(v83, v9);
  uint64_t v88 = (uint64_t)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NodeSelected(0);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v87 = (uint64_t)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Proto_Ropes_Common_Attestation(0);
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v86 = (uint64_t)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0);
  __chkstk_darwin(v17 - 8, v18);
  uint64_t v85 = (uint64_t *)((char *)&v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v80 = type metadata accessor for Proto_Ropes_Common_AttestationList(0);
  __chkstk_darwin(v80, v20);
  double v82 = (uint64_t *)((char *)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  uint64_t v24 = __chkstk_darwin(v22, v23);
  uint64_t v26 = (char *)&v79 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v24, v27);
  uint64_t v91 = (char *)&v79 - v29;
  uint64_t v31 = __chkstk_darwin(v28, v30);
  uint64_t v33 = (uint64_t *)((char *)&v79 - v32);
  uint64_t v35 = __chkstk_darwin(v31, v34);
  unint64_t v92 = (char *)&v79 - v36;
  uint64_t v38 = __chkstk_darwin(v35, v37);
  int v40 = (char *)&v79 - v39;
  uint64_t v42 = __chkstk_darwin(v38, v41);
  uint64_t v44 = (char *)&v79 - v43;
  uint64_t v46 = __chkstk_darwin(v42, v45);
  uint64_t v48 = (uint64_t *)((char *)&v79 - v47);
  __chkstk_darwin(v46, v49);
  uint64_t v51 = (uint64_t *)((char *)&v79 - v50);
  uint64_t v52 = sub_100003918(&qword_10020B9A8);
  uint64_t v54 = __chkstk_darwin(v52 - 8, v53);
  uint64_t v56 = (char *)&v79 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = (uint64_t)&v56[*(int *)(v54 + 56)];
  sub_10005CB3C(v93, (uint64_t)v56, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
  sub_10005CB3C(v94, v57, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10005CB3C((uint64_t)v56, (uint64_t)v48, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v60 = v85;
        sub_10005CA74(v57, (uint64_t)v85, type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
        char v61 = _s20privatecloudcomputed44Proto_Ropes_Common_CompressedAttestationListV2eeoiySbAC_ACtFZ_0(v48, v60);
        uint64_t v62 = type metadata accessor for Proto_Ropes_Common_CompressedAttestationList;
        sub_10005CA14((uint64_t)v60, type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
        uint64_t v63 = (uint64_t)v48;
        goto LABEL_10;
      }
      uint64_t v58 = type metadata accessor for Proto_Ropes_Common_CompressedAttestationList;
      uint64_t v59 = (uint64_t)v48;
      goto LABEL_38;
    case 2u:
      sub_10005CB3C((uint64_t)v56, (uint64_t)v44, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v64 = v86;
        sub_10005CA74(v57, v86, type metadata accessor for Proto_Ropes_Common_Attestation);
        char v61 = static Proto_Ropes_Common_Attestation.== infix(_:_:)(v44, v64);
        uint64_t v62 = type metadata accessor for Proto_Ropes_Common_Attestation;
        sub_10005CA14(v64, type metadata accessor for Proto_Ropes_Common_Attestation);
        uint64_t v63 = (uint64_t)v44;
        goto LABEL_10;
      }
      uint64_t v58 = type metadata accessor for Proto_Ropes_Common_Attestation;
      uint64_t v59 = (uint64_t)v44;
      goto LABEL_38;
    case 3u:
      sub_10005CB3C((uint64_t)v56, (uint64_t)v40, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
      if (swift_getEnumCaseMultiPayload() != 3)
      {
        uint64_t v73 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NodeSelected;
        goto LABEL_37;
      }
      uint64_t v65 = v87;
      sub_10005CA74(v57, v87, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NodeSelected);
      sub_1001BFE60();
      sub_100072F60(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v61 = sub_1001C0BD0();
      uint64_t v62 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NodeSelected;
      sub_10005CA14(v65, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NodeSelected);
      uint64_t v63 = (uint64_t)v40;
LABEL_10:
      uint64_t v66 = v62;
      goto LABEL_23;
    case 4u:
      int v40 = v92;
      sub_10005CB3C((uint64_t)v56, (uint64_t)v92, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
      if (swift_getEnumCaseMultiPayload() != 4)
      {
        uint64_t v73 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata;
        goto LABEL_37;
      }
      uint64_t v67 = v88;
      sub_10005CA74(v57, v88, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata);
      if (*(void *)v40 == *(void *)v67 && *((void *)v40 + 1) == *(void *)(v67 + 8)
        || (sub_1001C1840() & 1) != 0)
      {
        sub_1001BFE60();
        sub_100072F60(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        if (sub_1001C0BD0())
        {
          uint64_t v68 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata;
          goto LABEL_29;
        }
      }
      uint64_t v74 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata;
      goto LABEL_46;
    case 5u:
      sub_10005CB3C((uint64_t)v56, (uint64_t)v33, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
      if (swift_getEnumCaseMultiPayload() != 5)
      {
        uint64_t v58 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList;
        uint64_t v59 = (uint64_t)v33;
        goto LABEL_38;
      }
      uint64_t v69 = v89;
      sub_10005CA74(v57, (uint64_t)v89, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
      if (sub_100169C4C(*v33, *v69))
      {
        sub_1001BFE60();
        sub_100072F60(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        if (sub_1001C0BD0())
        {
          uint64_t v70 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList;
          sub_10005CA14((uint64_t)v69, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
          uint64_t v71 = (uint64_t)v33;
          goto LABEL_43;
        }
      }
      uint64_t v76 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList;
      sub_10005CA14((uint64_t)v69, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
      uint64_t v77 = (uint64_t)v33;
      goto LABEL_48;
    case 6u:
      int v40 = v91;
      sub_10005CB3C((uint64_t)v56, (uint64_t)v91, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
      if (swift_getEnumCaseMultiPayload() != 6)
      {
        uint64_t v73 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList;
LABEL_37:
        uint64_t v58 = v73;
        uint64_t v59 = (uint64_t)v40;
        goto LABEL_38;
      }
      uint64_t v67 = v84;
      sub_10005CA74(v57, v84, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList);
      if ((sub_1001694D0(*(void **)v40, *(void **)v67) & 1) != 0 && v40[8] == *(unsigned char *)(v67 + 8))
      {
        sub_1001BFE60();
        sub_100072F60(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        if (sub_1001C0BD0())
        {
          uint64_t v68 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList;
LABEL_29:
          uint64_t v70 = v68;
          sub_10005CA14(v67, v68);
          uint64_t v71 = (uint64_t)v40;
          goto LABEL_43;
        }
      }
      uint64_t v74 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList;
LABEL_46:
      uint64_t v76 = v74;
      sub_10005CA14(v67, v74);
      uint64_t v77 = (uint64_t)v40;
      goto LABEL_48;
    case 7u:
      sub_10005CB3C((uint64_t)v56, (uint64_t)v26, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
      if (swift_getEnumCaseMultiPayload() != 7)
      {
        uint64_t v58 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations;
        uint64_t v59 = (uint64_t)v26;
        goto LABEL_38;
      }
      uint64_t v72 = v90;
      sub_10005CA74(v57, v90, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations);
      sub_1001BFE60();
      sub_100072F60(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v61 = sub_1001C0BD0();
      sub_10005CA14(v72, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations);
      uint64_t v63 = (uint64_t)v26;
      uint64_t v66 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations;
LABEL_23:
      sub_10005CA14(v63, v66);
      sub_10005CA14((uint64_t)v56, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
      return v61 & 1;
    default:
      sub_10005CB3C((uint64_t)v56, (uint64_t)v51, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
      if (swift_getEnumCaseMultiPayload())
      {
        uint64_t v58 = type metadata accessor for Proto_Ropes_Common_AttestationList;
        uint64_t v59 = (uint64_t)v51;
LABEL_38:
        sub_10005CA14(v59, v58);
        sub_100010360((uint64_t)v56, &qword_10020B9A8);
        goto LABEL_49;
      }
      char v75 = v82;
      sub_10005CA74(v57, (uint64_t)v82, type metadata accessor for Proto_Ropes_Common_AttestationList);
      if ((sub_100168BBC(*v51, *v75) & 1) == 0
        || (sub_1001BFE60(),
            sub_100072F60(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage),
            (sub_1001C0BD0() & 1) == 0))
      {
        uint64_t v76 = type metadata accessor for Proto_Ropes_Common_AttestationList;
        sub_10005CA14((uint64_t)v75, type metadata accessor for Proto_Ropes_Common_AttestationList);
        uint64_t v77 = (uint64_t)v51;
LABEL_48:
        sub_10005CA14(v77, v76);
        sub_10005CA14((uint64_t)v56, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
LABEL_49:
        char v61 = 0;
        return v61 & 1;
      }
      uint64_t v70 = type metadata accessor for Proto_Ropes_Common_AttestationList;
      sub_10005CA14((uint64_t)v75, type metadata accessor for Proto_Ropes_Common_AttestationList);
      uint64_t v71 = (uint64_t)v51;
LABEL_43:
      sub_10005CA14(v71, v70);
      sub_10005CA14((uint64_t)v56, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
      char v61 = 1;
      return v61 & 1;
  }
}

uint64_t _s20privatecloudcomputed38Proto_Ropes_HttpService_ConfigResponseV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v62 = a2;
  uint64_t v3 = sub_1001BFE60();
  uint64_t v59 = *(void *)(v3 - 8);
  uint64_t v60 = v3;
  uint64_t v5 = __chkstk_darwin(v3, v4);
  uint64_t v58 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v7);
  uint64_t v57 = (char *)&v53 - v8;
  uint64_t v53 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0);
  __chkstk_darwin(v53, v9);
  char v61 = (uint64_t *)((char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v54 = sub_100003918(&qword_10020B8F8);
  __chkstk_darwin(v54, v11);
  uint64_t v55 = (uint64_t)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type(0);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100003918(&qword_10020B900);
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18, v20);
  uint64_t v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100003918(&qword_10020A630);
  uint64_t v25 = __chkstk_darwin(v23 - 8, v24);
  uint64_t v27 = (char *)&v53 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v25, v28);
  uint64_t v31 = (char *)&v53 - v30;
  __chkstk_darwin(v29, v32);
  uint64_t v34 = (char *)&v53 - v33;
  uint64_t v56 = a1;
  sub_10003282C(a1, (uint64_t)&v53 - v33, &qword_10020A630);
  sub_10003282C(v62, (uint64_t)v31, &qword_10020A630);
  uint64_t v35 = (uint64_t)&v22[*(int *)(v19 + 56)];
  sub_10003282C((uint64_t)v34, (uint64_t)v22, &qword_10020A630);
  sub_10003282C((uint64_t)v31, v35, &qword_10020A630);
  uint64_t v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  if (v36((uint64_t)v22, 1, v13) == 1)
  {
    sub_100010360((uint64_t)v31, &qword_10020A630);
    sub_100010360((uint64_t)v34, &qword_10020A630);
    if (v36(v35, 1, v13) == 1) {
      goto LABEL_10;
    }
    goto LABEL_6;
  }
  uint64_t v37 = (uint64_t)v17;
  uint64_t v38 = v61;
  sub_10003282C((uint64_t)v22, (uint64_t)v27, &qword_10020A630);
  if (v36(v35, 1, v13) == 1)
  {
    sub_100010360((uint64_t)v31, &qword_10020A630);
    sub_100010360((uint64_t)v34, &qword_10020A630);
    sub_10005CA14((uint64_t)v27, type metadata accessor for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type);
LABEL_6:
    uint64_t v39 = &qword_10020B900;
    uint64_t v40 = (uint64_t)v22;
LABEL_12:
    sub_100010360(v40, v39);
    char v50 = 0;
    return v50 & 1;
  }
  uint64_t v41 = v37;
  sub_10005CA74(v35, v37, type metadata accessor for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type);
  uint64_t v42 = v55;
  uint64_t v43 = (uint64_t *)(v55 + *(int *)(v54 + 48));
  sub_10005CB3C((uint64_t)v27, v55, type metadata accessor for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type);
  sub_10005CB3C(v41, (uint64_t)v43, type metadata accessor for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type);
  sub_10005CA74(v42, (uint64_t)v38, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  if ((sub_100169C4C(*v38, *v43) & 1) == 0
    || (sub_100072F60(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage),
        (sub_1001C0BD0() & 1) == 0))
  {
    sub_10005CA14((uint64_t)v43, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
    sub_10005CA14((uint64_t)v38, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
    sub_10005CA14(v41, type metadata accessor for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type);
    sub_100010360((uint64_t)v31, &qword_10020A630);
    sub_100010360((uint64_t)v34, &qword_10020A630);
    sub_10005CA14((uint64_t)v27, type metadata accessor for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type);
    uint64_t v40 = (uint64_t)v22;
    uint64_t v39 = &qword_10020A630;
    goto LABEL_12;
  }
  sub_10005CA14((uint64_t)v43, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  sub_10005CA14((uint64_t)v38, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  sub_10005CA14(v41, type metadata accessor for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type);
  sub_100010360((uint64_t)v31, &qword_10020A630);
  sub_100010360((uint64_t)v34, &qword_10020A630);
  sub_10005CA14((uint64_t)v27, type metadata accessor for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type);
LABEL_10:
  sub_100010360((uint64_t)v22, &qword_10020A630);
  uint64_t v44 = type metadata accessor for Proto_Ropes_HttpService_ConfigResponse(0);
  uint64_t v45 = v57;
  uint64_t v47 = v59;
  uint64_t v46 = v60;
  uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 16);
  v48(v57, v56 + *(int *)(v44 + 20), v60);
  uint64_t v49 = v58;
  v48(v58, v62 + *(int *)(v44 + 20), v46);
  sub_100072F60(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v50 = sub_1001C0BD0();
  uint64_t v51 = *(void (**)(char *, uint64_t))(v47 + 8);
  v51(v49, v46);
  v51(v45, v46);
  return v50 & 1;
}

BOOL _s20privatecloudcomputed38Proto_Ropes_HttpService_ConfigResponseV10OneOf_TypeO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (uint64_t *)((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_100003918(&qword_10020B8F8);
  uint64_t v10 = __chkstk_darwin(v8 - 8, v9);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t *)&v12[*(int *)(v10 + 56)];
  sub_10005CB3C(a1, (uint64_t)v12, type metadata accessor for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type);
  sub_10005CB3C(a2, (uint64_t)v13, type metadata accessor for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type);
  sub_10005CA74((uint64_t)v12, (uint64_t)v7, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  BOOL v14 = 0;
  if (sub_100169C4C(*v7, *v13))
  {
    sub_1001BFE60();
    sub_100072F60(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    if (sub_1001C0BD0()) {
      BOOL v14 = 1;
    }
  }
  sub_10005CA14((uint64_t)v13, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  sub_10005CA14((uint64_t)v7, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  return v14;
}

uint64_t _s20privatecloudcomputed37Proto_Ropes_HttpService_InvokeRequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BFE60();
  uint64_t v50 = *(void *)(v4 - 8);
  uint64_t v51 = v4;
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v49 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v8);
  uint64_t v48 = (char *)&v44 - v9;
  uint64_t v10 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v45 = (uint64_t)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100003918(&qword_10020B980);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100003918(&qword_10020A640);
  uint64_t v21 = __chkstk_darwin(v19 - 8, v20);
  uint64_t v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v21, v24);
  uint64_t v27 = (char *)&v44 - v26;
  __chkstk_darwin(v25, v28);
  uint64_t v30 = (char *)&v44 - v29;
  uint64_t v46 = a1;
  sub_10003282C(a1, (uint64_t)&v44 - v29, &qword_10020A640);
  uint64_t v47 = a2;
  sub_10003282C(a2, (uint64_t)v27, &qword_10020A640);
  uint64_t v31 = (uint64_t)&v18[*(int *)(v15 + 56)];
  sub_10003282C((uint64_t)v30, (uint64_t)v18, &qword_10020A640);
  sub_10003282C((uint64_t)v27, v31, &qword_10020A640);
  uint64_t v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v32((uint64_t)v18, 1, v10) != 1)
  {
    sub_10003282C((uint64_t)v18, (uint64_t)v23, &qword_10020A640);
    if (v32(v31, 1, v10) != 1)
    {
      uint64_t v33 = v45;
      sub_10005CA74(v31, v45, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
      char v34 = _s20privatecloudcomputed37Proto_Ropes_HttpService_InvokeRequestV10OneOf_TypeO21__derived_enum_equalsySbAE_AEtFZ_0((uint64_t)v23, v33);
      sub_10005CA14(v33, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
      sub_100010360((uint64_t)v27, &qword_10020A640);
      sub_100010360((uint64_t)v30, &qword_10020A640);
      sub_10005CA14((uint64_t)v23, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
      sub_100010360((uint64_t)v18, &qword_10020A640);
      if (v34) {
        goto LABEL_8;
      }
LABEL_9:
      char v41 = 0;
      return v41 & 1;
    }
    sub_100010360((uint64_t)v27, &qword_10020A640);
    sub_100010360((uint64_t)v30, &qword_10020A640);
    sub_10005CA14((uint64_t)v23, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
LABEL_6:
    sub_100010360((uint64_t)v18, &qword_10020B980);
    goto LABEL_9;
  }
  sub_100010360((uint64_t)v27, &qword_10020A640);
  sub_100010360((uint64_t)v30, &qword_10020A640);
  if (v32(v31, 1, v10) != 1) {
    goto LABEL_6;
  }
  sub_100010360((uint64_t)v18, &qword_10020A640);
LABEL_8:
  uint64_t v35 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest(0);
  uint64_t v37 = v50;
  uint64_t v36 = v51;
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 16);
  uint64_t v39 = v48;
  v38(v48, v46 + *(int *)(v35 + 20), v51);
  uint64_t v40 = v49;
  v38(v49, v47 + *(int *)(v35 + 20), v36);
  sub_100072F60(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v41 = sub_1001C0BD0();
  uint64_t v42 = *(void (**)(char *, uint64_t))(v37 + 8);
  v42(v40, v36);
  v42(v39, v36);
  return v41 & 1;
}

uint64_t _s20privatecloudcomputed37Proto_Ropes_HttpService_InvokeRequestV9TerminateV2eeoiySbAE_AEtFZ_0(char *a1, uint64_t *a2)
{
  uint64_t v4 = sub_1001BFE60();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v12 = (char *)&v26 - v11;
  uint64_t v13 = *(void *)a1;
  uint64_t v14 = *a2;
  if (*((unsigned char *)a2 + 8) == 1)
  {
    if (v14)
    {
      if (v14 == 1)
      {
        if (v13 != 1) {
          goto LABEL_20;
        }
      }
      else if (v13 != 2)
      {
        goto LABEL_20;
      }
    }
    else if (v13)
    {
      goto LABEL_20;
    }
  }
  else if (v13 != v14)
  {
    goto LABEL_20;
  }
  uint64_t v15 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate(0);
  uint64_t v16 = *(int *)(v15 + 24);
  uint64_t v17 = &a1[v16];
  uint64_t v18 = *(void *)&a1[v16 + 8];
  uint64_t v19 = (uint64_t *)((char *)a2 + v16);
  uint64_t v20 = v19[1];
  if (!v18)
  {
    if (!v20)
    {
LABEL_21:
      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v23(v12, &a1[*(int *)(v15 + 20)], v4);
      v23(v9, (char *)a2 + *(int *)(v15 + 20), v4);
      sub_100072F60(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v22 = sub_1001C0BD0();
      uint64_t v24 = *(void (**)(char *, uint64_t))(v5 + 8);
      v24(v9, v4);
      v24(v12, v4);
      return v22 & 1;
    }
LABEL_20:
    char v22 = 0;
    return v22 & 1;
  }
  if (!v20) {
    goto LABEL_20;
  }
  if (*(void *)v17 == *v19 && v18 == v20) {
    goto LABEL_21;
  }
  char v22 = 0;
  if (sub_1001C1840()) {
    goto LABEL_21;
  }
  return v22 & 1;
}

uint64_t sub_1000717E4(char *a1, char *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = sub_1001BFE60();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v9 = __chkstk_darwin(v6, v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v12);
  uint64_t v14 = (char *)&v21 - v13;
  BOOL v15 = *(void *)a1 == *(void *)a2 && *((void *)a1 + 1) == *((void *)a2 + 1);
  if (v15 || (char v16 = 0, (sub_1001C1840() & 1) != 0))
  {
    uint64_t v17 = a3(0);
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v18(v14, &a1[*(int *)(v17 + 20)], v6);
    v18(v11, &a2[*(int *)(v17 + 20)], v6);
    sub_100072F60(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v16 = sub_1001C0BD0();
    uint64_t v19 = *(void (**)(char *, uint64_t))(v7 + 8);
    v19(v11, v6);
    v19(v14, v6);
  }
  return v16 & 1;
}

uint64_t _s20privatecloudcomputed37Proto_Ropes_HttpService_InvokeRequestV10OneOf_TypeO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v43 = (uint64_t *)((char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v42 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata(0);
  __chkstk_darwin(v42, v7);
  uint64_t v44 = (uint64_t *)((char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest(0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type(0);
  uint64_t v15 = __chkstk_darwin(v13, v14);
  uint64_t v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v15, v18);
  uint64_t v21 = (uint64_t *)((char *)&v41 - v20);
  __chkstk_darwin(v19, v22);
  uint64_t v24 = (char *)&v41 - v23;
  uint64_t v25 = sub_100003918(&qword_10020B9B0);
  uint64_t v27 = __chkstk_darwin(v25 - 8, v26);
  uint64_t v29 = (char *)&v41 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = (uint64_t)&v29[*(int *)(v27 + 56)];
  sub_10005CB3C(a1, (uint64_t)v29, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
  sub_10005CB3C(a2, v30, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_10005CB3C((uint64_t)v29, (uint64_t)v24, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
    if (swift_getEnumCaseMultiPayload())
    {
      uint64_t v35 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest;
      uint64_t v36 = (uint64_t)v24;
LABEL_17:
      sub_10005CA14(v36, v35);
      sub_100010360((uint64_t)v29, &qword_10020B9B0);
LABEL_18:
      char v34 = 0;
      return v34 & 1;
    }
    sub_10005CA74(v30, (uint64_t)v12, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest);
    char v34 = _s20privatecloudcomputed37Proto_Ropes_HttpService_InvokeRequestV05SetupG0V2eeoiySbAE_AEtFZ_0((uint64_t)v24, (uint64_t)v12);
    sub_10005CA14((uint64_t)v12, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest);
    uint64_t v38 = (uint64_t)v24;
    uint64_t v39 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest;
LABEL_20:
    sub_10005CA14(v38, v39);
    sub_10005CA14((uint64_t)v29, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
    return v34 & 1;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_10005CB3C((uint64_t)v29, (uint64_t)v17, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
    if (swift_getEnumCaseMultiPayload() != 2)
    {
      uint64_t v35 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate;
      uint64_t v36 = (uint64_t)v17;
      goto LABEL_17;
    }
    uint64_t v37 = v43;
    sub_10005CA74(v30, (uint64_t)v43, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate);
    char v34 = _s20privatecloudcomputed37Proto_Ropes_HttpService_InvokeRequestV9TerminateV2eeoiySbAE_AEtFZ_0(v17, v37);
    sub_10005CA14((uint64_t)v37, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate);
    uint64_t v38 = (uint64_t)v17;
    uint64_t v39 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate;
    goto LABEL_20;
  }
  sub_10005CB3C((uint64_t)v29, (uint64_t)v21, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v35 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata;
    uint64_t v36 = (uint64_t)v21;
    goto LABEL_17;
  }
  uint64_t v32 = v44;
  sub_10005CA74(v30, (uint64_t)v44, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata);
  BOOL v33 = *v21 == *v32 && v21[1] == v32[1];
  if (!v33 && (sub_1001C1840() & 1) == 0
    || (sub_1001BFE60(),
        sub_100072F60(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage),
        (sub_1001C0BD0() & 1) == 0))
  {
    sub_10005CA14((uint64_t)v32, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata);
    sub_10005CA14((uint64_t)v21, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata);
    sub_10005CA14((uint64_t)v29, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
    goto LABEL_18;
  }
  sub_10005CA14((uint64_t)v32, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata);
  sub_10005CA14((uint64_t)v21, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata);
  sub_10005CA14((uint64_t)v29, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
  char v34 = 1;
  return v34 & 1;
}

uint64_t _s20privatecloudcomputed37Proto_Ropes_HttpService_InvokeRequestV05SetupG0V2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BFE60();
  uint64_t v64 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v55 - v10;
  uint64_t v12 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100003918(&qword_10020B948);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100003918(&qword_10020A638);
  uint64_t v23 = __chkstk_darwin(v21 - 8, v22);
  uint64_t v25 = __chkstk_darwin(v23, v24);
  __chkstk_darwin(v25, v26);
  if (*(_DWORD *)a1 != *(_DWORD *)a2) {
    goto LABEL_14;
  }
  uint64_t v62 = v29;
  uint64_t v63 = (uint64_t)&v55 - v27;
  uint64_t v58 = v16;
  uint64_t v59 = v11;
  uint64_t v60 = v8;
  uint64_t v61 = v28;
  if ((sub_100169598(*(void *)(a1 + 8), *(void *)(a2 + 8)) & 1) == 0) {
    goto LABEL_14;
  }
  uint64_t v57 = v4;
  uint64_t v30 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest(0);
  uint64_t v31 = v63;
  sub_10003282C(a1 + *(int *)(v30 + 28), v63, &qword_10020A638);
  uint64_t v32 = *(int *)(v30 + 28);
  uint64_t v56 = a2;
  uint64_t v33 = v62;
  sub_10003282C(a2 + v32, v62, &qword_10020A638);
  uint64_t v34 = (uint64_t)v20;
  uint64_t v35 = (uint64_t)&v20[*(int *)(v17 + 48)];
  sub_10003282C(v31, (uint64_t)v20, &qword_10020A638);
  sub_10003282C(v33, v35, &qword_10020A638);
  uint64_t v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  uint64_t v37 = v20;
  uint64_t v38 = v12;
  int v39 = v36(v37, 1, v12);
  uint64_t v40 = v30;
  if (v39 != 1)
  {
    uint64_t v49 = v61;
    sub_10003282C(v34, v61, &qword_10020A638);
    if (v36((char *)v35, 1, v38) != 1)
    {
      uint64_t v52 = (uint64_t)v58;
      sub_10005CA74(v35, (uint64_t)v58, type metadata accessor for Proto_Ropes_Common_Capabilities);
      if ((sub_1001697EC(*(void *)v49, *(void *)v52) & 1) != 0
        && *(unsigned __int8 *)(v49 + 8) == *(unsigned __int8 *)(v52 + 8))
      {
        sub_100072F60(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        char v54 = sub_1001C0BD0();
        sub_10005CA14(v52, type metadata accessor for Proto_Ropes_Common_Capabilities);
        sub_100010360(v62, &qword_10020A638);
        sub_100010360(v63, &qword_10020A638);
        sub_10005CA14(v49, type metadata accessor for Proto_Ropes_Common_Capabilities);
        sub_100010360(v34, &qword_10020A638);
        if (v54) {
          goto LABEL_6;
        }
LABEL_14:
        char v47 = 0;
        return v47 & 1;
      }
      sub_10005CA14(v52, type metadata accessor for Proto_Ropes_Common_Capabilities);
      sub_100010360(v62, &qword_10020A638);
      sub_100010360(v63, &qword_10020A638);
      sub_10005CA14(v49, type metadata accessor for Proto_Ropes_Common_Capabilities);
      uint64_t v51 = v34;
      uint64_t v50 = &qword_10020A638;
LABEL_13:
      sub_100010360(v51, v50);
      goto LABEL_14;
    }
    sub_100010360(v62, &qword_10020A638);
    sub_100010360(v63, &qword_10020A638);
    sub_10005CA14(v49, type metadata accessor for Proto_Ropes_Common_Capabilities);
LABEL_9:
    uint64_t v50 = &qword_10020B948;
    uint64_t v51 = v34;
    goto LABEL_13;
  }
  sub_100010360(v33, &qword_10020A638);
  sub_100010360(v31, &qword_10020A638);
  if (v36((char *)v35, 1, v38) != 1) {
    goto LABEL_9;
  }
  sub_100010360(v34, &qword_10020A638);
LABEL_6:
  uint64_t v41 = a1 + *(int *)(v40 + 24);
  uint64_t v42 = v64;
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v64 + 16);
  uint64_t v44 = v59;
  uint64_t v45 = v57;
  v43(v59, v41, v57);
  uint64_t v46 = v60;
  v43(v60, v56 + *(int *)(v40 + 24), v45);
  sub_100072F60(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v47 = sub_1001C0BD0();
  uint64_t v48 = *(void (**)(char *, uint64_t))(v42 + 8);
  v48(v46, v45);
  v48(v44, v45);
  return v47 & 1;
}

uint64_t type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping(uint64_t a1)
{
  return sub_10001C958(a1, qword_10020AB40);
}

uint64_t type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(uint64_t a1)
{
  return sub_10001C958(a1, qword_10020ADB0);
}

uint64_t type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NodeSelected(uint64_t a1)
{
  return sub_10001C958(a1, qword_10020AE40);
}

uint64_t type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata(uint64_t a1)
{
  return sub_10001C958(a1, qword_10020AED0);
}

uint64_t type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(uint64_t a1)
{
  return sub_10001C958(a1, qword_10020AFF0);
}

uint64_t type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations(uint64_t a1)
{
  return sub_10001C958(a1, qword_10020AF60);
}

uint64_t type metadata accessor for Proto_Ropes_HttpService_InvokeResponse(uint64_t a1)
{
  return sub_10001C958(a1, (uint64_t *)&unk_10020AD00);
}

uint64_t type metadata accessor for Proto_Ropes_HttpService_PrefetchRequest(uint64_t a1)
{
  return sub_10001C958(a1, qword_10020B088);
}

uint64_t type metadata accessor for Proto_Ropes_HttpService_PrefetchUnaryResponse(uint64_t a1)
{
  return sub_10001C958(a1, (uint64_t *)&unk_10020B120);
}

uint64_t type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type(uint64_t a1)
{
  return sub_10001C958(a1, qword_10020B278);
}

uint64_t type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse(uint64_t a1)
{
  return sub_10001C958(a1, (uint64_t *)&unk_10020B1C8);
}

uint64_t type metadata accessor for Proto_Ropes_HttpService_ConfigRequest(uint64_t a1)
{
  return sub_10001C958(a1, (uint64_t *)&unk_10020B308);
}

uint64_t _s20privatecloudcomputed37Proto_Ropes_HttpService_InvokeRequestV05SetupG0V18AttestationMappingV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BFE60();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v12 = (char *)&v19 - v11;
  BOOL v13 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v13 || (char v14 = 0, (sub_1001C1840() & 1) != 0))
  {
    if (*(_DWORD *)(a1 + 16) == *(_DWORD *)(a2 + 16))
    {
      uint64_t v15 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping(0);
      uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v16(v12, a1 + *(int *)(v15 + 24), v4);
      v16(v9, a2 + *(int *)(v15 + 24), v4);
      sub_100072F60(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v14 = sub_1001C0BD0();
      uint64_t v17 = *(void (**)(char *, uint64_t))(v5 + 8);
      v17(v9, v4);
      v17(v12, v4);
    }
    else
    {
      char v14 = 0;
    }
  }
  return v14 & 1;
}

uint64_t _s20privatecloudcomputed37Proto_Ropes_HttpService_ConfigRequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BFE60();
  uint64_t v60 = *(void *)(v4 - 8);
  uint64_t v61 = v4;
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v59 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v8);
  uint64_t v58 = (char *)&v52 - v9;
  uint64_t v10 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v55 = (uint64_t *)((char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v52 = sub_100003918(&qword_10020A668);
  __chkstk_darwin(v52, v13);
  uint64_t v53 = (uint64_t)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type(0);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  uint64_t v54 = (uint64_t)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100003918(&qword_10020B910);
  uint64_t v20 = v19 - 8;
  __chkstk_darwin(v19, v21);
  uint64_t v23 = (char *)&v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100003918(&qword_10020A628);
  uint64_t v26 = __chkstk_darwin(v24 - 8, v25);
  uint64_t v28 = (char *)&v52 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v26, v29);
  uint64_t v32 = (char *)&v52 - v31;
  __chkstk_darwin(v30, v33);
  uint64_t v35 = (char *)&v52 - v34;
  uint64_t v56 = a1;
  sub_10003282C(a1, (uint64_t)&v52 - v34, &qword_10020A628);
  uint64_t v57 = a2;
  sub_10003282C(a2, (uint64_t)v32, &qword_10020A628);
  uint64_t v36 = (uint64_t)&v23[*(int *)(v20 + 56)];
  sub_10003282C((uint64_t)v35, (uint64_t)v23, &qword_10020A628);
  sub_10003282C((uint64_t)v32, v36, &qword_10020A628);
  uint64_t v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v37((uint64_t)v23, 1, v15) != 1)
  {
    sub_10003282C((uint64_t)v23, (uint64_t)v28, &qword_10020A628);
    if (v37(v36, 1, v15) != 1)
    {
      uint64_t v38 = v54;
      sub_10005CA74(v36, v54, type metadata accessor for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type);
      uint64_t v39 = v53;
      uint64_t v40 = v53 + *(int *)(v52 + 48);
      sub_10005CB3C((uint64_t)v28, v53, type metadata accessor for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type);
      sub_10005CB3C(v38, v40, type metadata accessor for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type);
      uint64_t v41 = v55;
      sub_10005CA74(v39, (uint64_t)v55, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest);
      char v42 = static Proto_Ropes_RateLimit_RateLimitConfigRequest.== infix(_:_:)(v41, v40);
      sub_10005CA14(v40, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest);
      sub_10005CA14((uint64_t)v41, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest);
      sub_10005CA14(v38, type metadata accessor for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type);
      sub_100010360((uint64_t)v32, &qword_10020A628);
      sub_100010360((uint64_t)v35, &qword_10020A628);
      sub_10005CA14((uint64_t)v28, type metadata accessor for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type);
      sub_100010360((uint64_t)v23, &qword_10020A628);
      if (v42) {
        goto LABEL_8;
      }
LABEL_9:
      char v49 = 0;
      return v49 & 1;
    }
    sub_100010360((uint64_t)v32, &qword_10020A628);
    sub_100010360((uint64_t)v35, &qword_10020A628);
    sub_10005CA14((uint64_t)v28, type metadata accessor for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type);
LABEL_6:
    sub_100010360((uint64_t)v23, &qword_10020B910);
    goto LABEL_9;
  }
  sub_100010360((uint64_t)v32, &qword_10020A628);
  sub_100010360((uint64_t)v35, &qword_10020A628);
  if (v37(v36, 1, v15) != 1) {
    goto LABEL_6;
  }
  sub_100010360((uint64_t)v23, &qword_10020A628);
LABEL_8:
  uint64_t v43 = type metadata accessor for Proto_Ropes_HttpService_ConfigRequest(0);
  uint64_t v45 = v60;
  uint64_t v44 = v61;
  uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t))(v60 + 16);
  char v47 = v58;
  v46(v58, v56 + *(int *)(v43 + 20), v61);
  uint64_t v48 = v59;
  v46(v59, v57 + *(int *)(v43 + 20), v44);
  sub_100072F60(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v49 = sub_1001C0BD0();
  uint64_t v50 = *(void (**)(char *, uint64_t))(v45 + 8);
  v50(v48, v44);
  v50(v47, v44);
  return v49 & 1;
}

uint64_t type metadata accessor for Proto_Ropes_HttpService_ConfigResponse(uint64_t a1)
{
  return sub_10001C958(a1, (uint64_t *)&unk_10020B420);
}

uint64_t type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse(uint64_t a1)
{
  return sub_10001C958(a1, qword_10020B538);
}

uint64_t type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload(uint64_t a1)
{
  return sub_10001C958(a1, (uint64_t *)&unk_10020B5D0);
}

uint64_t type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters(uint64_t a1)
{
  return sub_10001C958(a1, qword_10020B670);
}

uint64_t type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint(uint64_t a1)
{
  return sub_10001C958(a1, qword_10020B700);
}

uint64_t sub_100072F60(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100072FA8()
{
  unint64_t result = qword_10020A6A0;
  if (!qword_10020A6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020A6A0);
  }
  return result;
}

unint64_t sub_100073000()
{
  unint64_t result = qword_10020A730;
  if (!qword_10020A730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020A730);
  }
  return result;
}

unint64_t sub_100073058()
{
  unint64_t result = qword_10020A738;
  if (!qword_10020A738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020A738);
  }
  return result;
}

unint64_t sub_1000730B0()
{
  unint64_t result = qword_10020A740;
  if (!qword_10020A740)
  {
    sub_1000166C8(&qword_10020A748);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020A740);
  }
  return result;
}

unint64_t sub_100073110()
{
  unint64_t result = qword_10020A750;
  if (!qword_10020A750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020A750);
  }
  return result;
}

uint64_t sub_100073164()
{
  return sub_100072F60(&qword_10020A758, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest);
}

uint64_t sub_1000731AC()
{
  return sub_100072F60(&qword_10020A760, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest);
}

uint64_t sub_1000731F4()
{
  return sub_100072F60(&qword_10020A678, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest);
}

uint64_t sub_10007323C()
{
  return sub_100072F60(&qword_10020A768, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest);
}

uint64_t sub_100073284()
{
  return sub_100072F60(&qword_10020A770, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest);
}

uint64_t sub_1000732CC()
{
  return sub_100072F60(&qword_10020A778, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest);
}

uint64_t sub_100073314()
{
  return sub_100072F60(&qword_10020A688, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest);
}

uint64_t sub_10007335C()
{
  return sub_100072F60(&qword_10020A780, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest);
}

uint64_t sub_1000733A4()
{
  return sub_100072F60(&qword_10020A788, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping);
}

uint64_t sub_1000733EC()
{
  return sub_100072F60(&qword_10020A680, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping);
}

uint64_t sub_100073434()
{
  return sub_100072F60(&qword_10020A690, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping);
}

uint64_t sub_10007347C()
{
  return sub_100072F60(&qword_10020A790, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping);
}

uint64_t sub_1000734C4()
{
  return sub_100072F60(&qword_10020A798, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata);
}

uint64_t sub_10007350C()
{
  return sub_100072F60(&qword_10020A7A0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata);
}

uint64_t sub_100073554()
{
  return sub_100072F60(&qword_10020A698, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata);
}

uint64_t sub_10007359C()
{
  return sub_100072F60(&qword_10020A7A8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata);
}

uint64_t sub_1000735E4()
{
  return sub_100072F60(&qword_10020A7B0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate);
}

uint64_t sub_10007362C()
{
  return sub_100072F60(&qword_10020A7B8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate);
}

uint64_t sub_100073674()
{
  return sub_100072F60(&qword_10020A6A8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate);
}

uint64_t sub_1000736BC()
{
  return sub_100072F60(&qword_10020A7C0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate);
}

uint64_t sub_100073704()
{
  return sub_100072F60(&qword_10020A7C8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse);
}

uint64_t sub_10007374C()
{
  return sub_100072F60(&qword_10020A7D0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse);
}

uint64_t sub_100073794()
{
  return sub_100072F60(&qword_10020A6B0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse);
}

uint64_t sub_1000737DC()
{
  return sub_100072F60(&qword_10020A7D8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse);
}

uint64_t sub_100073824()
{
  return sub_100072F60(&qword_10020A7E0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NodeSelected);
}

uint64_t sub_10007386C()
{
  return sub_100072F60(&qword_10020A7E8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NodeSelected);
}

uint64_t sub_1000738B4()
{
  return sub_100072F60(&qword_10020A6B8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NodeSelected);
}

uint64_t sub_1000738FC()
{
  return sub_100072F60(&qword_10020A7F0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NodeSelected);
}

uint64_t sub_100073944()
{
  return sub_100072F60(&qword_10020A7F8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata);
}

uint64_t sub_10007398C()
{
  return sub_100072F60(&qword_10020A800, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata);
}

uint64_t sub_1000739D4()
{
  return sub_100072F60(&qword_10020A6C0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata);
}

uint64_t sub_100073A1C()
{
  return sub_100072F60(&qword_10020A808, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata);
}

uint64_t sub_100073A64()
{
  return sub_100072F60(&qword_10020A810, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations);
}

uint64_t sub_100073AAC()
{
  return sub_100072F60(&qword_10020A818, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations);
}

uint64_t sub_100073AF4()
{
  return sub_100072F60(&qword_10020A6C8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations);
}

uint64_t sub_100073B3C()
{
  return sub_100072F60(&qword_10020A820, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations);
}

uint64_t sub_100073B84()
{
  return sub_100072F60(&qword_10020A828, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList);
}

uint64_t sub_100073BCC()
{
  return sub_100072F60(&qword_10020A830, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList);
}

uint64_t sub_100073C14()
{
  return sub_100072F60(&qword_10020A6D0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList);
}

uint64_t sub_100073C5C()
{
  return sub_100072F60(&qword_10020A838, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList);
}

uint64_t sub_100073CA4()
{
  return sub_100072F60(&qword_10020A840, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_PrefetchRequest);
}

uint64_t sub_100073CEC()
{
  return sub_100072F60(&qword_10020A848, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_PrefetchRequest);
}

uint64_t sub_100073D34()
{
  return sub_100072F60(&qword_10020A6D8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_PrefetchRequest);
}

uint64_t sub_100073D7C()
{
  return sub_100072F60(&qword_10020A850, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_PrefetchRequest);
}

uint64_t sub_100073DC4()
{
  return sub_100072F60(&qword_10020A858, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_PrefetchUnaryResponse);
}

uint64_t sub_100073E0C()
{
  return sub_100072F60(&qword_10020A860, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_PrefetchUnaryResponse);
}

uint64_t sub_100073E54()
{
  return sub_100072F60(&qword_10020A6E0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_PrefetchUnaryResponse);
}

uint64_t sub_100073E9C()
{
  return sub_100072F60(&qword_10020A868, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_PrefetchUnaryResponse);
}

uint64_t sub_100073EE4()
{
  return sub_100072F60(&qword_10020A870, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse);
}

uint64_t sub_100073F2C()
{
  return sub_100072F60(&qword_10020A878, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse);
}

uint64_t sub_100073F74()
{
  return sub_100072F60(&qword_10020A6E8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse);
}

uint64_t sub_100073FBC()
{
  return sub_100072F60(&qword_10020A880, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse);
}

uint64_t sub_100074004()
{
  return sub_100072F60(&qword_10020A888, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_ConfigRequest);
}

uint64_t sub_10007404C()
{
  return sub_100072F60(&qword_10020A890, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_ConfigRequest);
}

uint64_t sub_100074094()
{
  return sub_100072F60(&qword_10020A6F0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_ConfigRequest);
}

uint64_t sub_1000740DC()
{
  return sub_100072F60(&qword_10020A898, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_ConfigRequest);
}

uint64_t sub_100074124()
{
  return sub_100072F60(&qword_10020A8A0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_ConfigResponse);
}

uint64_t sub_10007416C()
{
  return sub_100072F60(&qword_10020A8A8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_ConfigResponse);
}

uint64_t sub_1000741B4()
{
  return sub_100072F60(&qword_10020A6F8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_ConfigResponse);
}

uint64_t sub_1000741FC()
{
  return sub_100072F60(&qword_10020A8B0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_ConfigResponse);
}

uint64_t sub_100074244()
{
  return sub_100072F60(&qword_10020A8B8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse);
}

uint64_t sub_10007428C()
{
  return sub_100072F60(&qword_10020A8C0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse);
}

uint64_t sub_1000742D4()
{
  return sub_100072F60(&qword_10020A710, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse);
}

uint64_t sub_10007431C()
{
  return sub_100072F60(&qword_10020A8C8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse);
}

uint64_t sub_100074364()
{
  return sub_100072F60(&qword_10020A8D0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload);
}

uint64_t sub_1000743AC()
{
  return sub_100072F60(&qword_10020A700, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload);
}

uint64_t sub_1000743F4()
{
  return sub_100072F60(&qword_10020A718, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload);
}

uint64_t sub_10007443C()
{
  return sub_100072F60(&qword_10020A8D8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload);
}

uint64_t sub_100074484()
{
  return sub_100072F60(&qword_10020A8E0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters);
}

uint64_t sub_1000744CC()
{
  return sub_100072F60(&qword_10020A8E8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters);
}

uint64_t sub_100074514()
{
  return sub_100072F60(&qword_10020A720, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters);
}

uint64_t sub_10007455C()
{
  return sub_100072F60(&qword_10020A8F0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters);
}

uint64_t sub_1000745A4()
{
  return sub_100072F60(&qword_10020A8F8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint);
}

uint64_t sub_1000745EC()
{
  return sub_100072F60(&qword_10020A708, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint);
}

uint64_t sub_100074634()
{
  return sub_100072F60(&qword_10020A728, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint);
}

uint64_t sub_10007467C()
{
  return sub_100072F60(&qword_10020A900, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint);
}

unsigned char *initializeBufferWithCopyOfBuffer for Proto_Ropes_HttpService_InvokeRequest(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (unsigned char *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_100003918(&qword_10020A640);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *(void *)a1 = *(void *)a2;
        a1[8] = a2[8];
        uint64_t v17 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate(0);
        uint64_t v18 = *(int *)(v17 + 20);
        uint64_t v19 = &a1[v18];
        uint64_t v20 = &a2[v18];
        uint64_t v21 = sub_1001BFE60();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
        uint64_t v22 = *(int *)(v17 + 24);
        uint64_t v23 = &a1[v22];
        uint64_t v24 = &a2[v22];
        uint64_t v25 = v24[1];
        *uint64_t v23 = *v24;
        v23[1] = v25;
        swift_bridgeObjectRetain();
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v12 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v12;
        uint64_t v13 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata(0) + 20);
        char v47 = &a1[v13];
        uint64_t v14 = &a2[v13];
        uint64_t v15 = sub_1001BFE60();
        uint64_t v16 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 16);
        swift_bridgeObjectRetain();
        v16(v47, v14, v15);
      }
      else
      {
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        uint64_t v26 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest(0);
        uint64_t v27 = *(int *)(v26 + 24);
        uint64_t v45 = &a2[v27];
        uint64_t v48 = &a1[v27];
        uint64_t v28 = sub_1001BFE60();
        uint64_t v29 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v28 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v30 = v45;
        uint64_t v46 = v28;
        v29(v48, v30, v28);
        uint64_t v31 = *(int *)(v26 + 28);
        uint64_t v32 = &a1[v31];
        uint64_t v33 = &a2[v31];
        uint64_t v34 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
        uint64_t v35 = *(void *)(v34 - 8);
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
        {
          uint64_t v36 = sub_100003918(&qword_10020A638);
          memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
        }
        else
        {
          *(void *)uint64_t v32 = *(void *)v33;
          v32[8] = v33[8];
          uint64_t v37 = *(int *)(v34 + 24);
          uint64_t v44 = &v32[v37];
          uint64_t v38 = &v33[v37];
          swift_bridgeObjectRetain();
          v29(v44, v38, v46);
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
        }
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v39 = *(int *)(a3 + 20);
    uint64_t v40 = &a1[v39];
    uint64_t v41 = &a2[v39];
    uint64_t v42 = sub_1001BFE60();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  }
  return a1;
}

uint64_t destroy for Proto_Ropes_HttpService_InvokeRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        uint64_t v16 = a1 + *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate(0) + 20);
        uint64_t v17 = sub_1001BFE60();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
        swift_bridgeObjectRelease();
        break;
      case 1:
        swift_bridgeObjectRelease();
        uint64_t v18 = a1 + *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata(0) + 20);
        uint64_t v19 = sub_1001BFE60();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
        break;
      case 0:
        swift_bridgeObjectRelease();
        uint64_t v10 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest(0);
        uint64_t v11 = a1 + *(int *)(v10 + 24);
        uint64_t v12 = sub_1001BFE60();
        uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
        v13(v11, v12);
        uint64_t v14 = a1 + *(int *)(v10 + 28);
        uint64_t v15 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
        {
          swift_bridgeObjectRelease();
          v13(v14 + *(int *)(v15 + 24), v12);
        }
        break;
    }
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1001BFE60();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  return v7(v5, v6);
}

unsigned char *initializeWithCopy for Proto_Ropes_HttpService_InvokeRequest(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100003918(&qword_10020A640);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      uint64_t v15 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate(0);
      uint64_t v16 = *(int *)(v15 + 20);
      uint64_t v17 = &a1[v16];
      uint64_t v18 = &a2[v16];
      uint64_t v19 = sub_1001BFE60();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
      uint64_t v20 = *(int *)(v15 + 24);
      uint64_t v21 = &a1[v20];
      uint64_t v22 = &a2[v20];
      uint64_t v23 = v22[1];
      *uint64_t v21 = *v22;
      v21[1] = v23;
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v10;
      uint64_t v11 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata(0) + 20);
      uint64_t v45 = &a1[v11];
      uint64_t v12 = &a2[v11];
      uint64_t v13 = sub_1001BFE60();
      uint64_t v14 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      v14(v45, v12, v13);
    }
    else
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *((void *)a1 + 1) = *((void *)a2 + 1);
      uint64_t v24 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest(0);
      uint64_t v25 = *(int *)(v24 + 24);
      uint64_t v43 = &a2[v25];
      uint64_t v46 = &a1[v25];
      uint64_t v26 = sub_1001BFE60();
      uint64_t v27 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v26 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v28 = v43;
      uint64_t v44 = v26;
      v27(v46, v28, v26);
      uint64_t v29 = *(int *)(v24 + 28);
      uint64_t v30 = &a1[v29];
      uint64_t v31 = &a2[v29];
      uint64_t v32 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
      uint64_t v33 = *(void *)(v32 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      {
        uint64_t v34 = sub_100003918(&qword_10020A638);
        memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        *(void *)uint64_t v30 = *(void *)v31;
        v30[8] = v31[8];
        uint64_t v35 = *(int *)(v32 + 24);
        uint64_t v42 = &v30[v35];
        uint64_t v36 = &v31[v35];
        swift_bridgeObjectRetain();
        v27(v42, v36, v44);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      }
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v37 = *(int *)(a3 + 20);
  uint64_t v38 = &a1[v37];
  uint64_t v39 = &a2[v37];
  uint64_t v40 = sub_1001BFE60();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
  return a1;
}

unsigned char *assignWithCopy for Proto_Ropes_HttpService_InvokeRequest(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v23 = *(void *)a2;
        a1[8] = a2[8];
        *(void *)a1 = v23;
        uint64_t v24 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate(0);
        uint64_t v25 = *(int *)(v24 + 20);
        uint64_t v26 = &a1[v25];
        uint64_t v27 = &a2[v25];
        uint64_t v28 = sub_1001BFE60();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
        uint64_t v29 = *(int *)(v24 + 24);
        uint64_t v30 = &a1[v29];
        uint64_t v31 = &a2[v29];
        *uint64_t v30 = *v31;
        v30[1] = v31[1];
        swift_bridgeObjectRetain();
      }
      else if (EnumCaseMultiPayload == 1)
      {
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        uint64_t v12 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata(0) + 20);
        uint64_t v77 = &a1[v12];
        uint64_t v13 = &a2[v12];
        uint64_t v14 = sub_1001BFE60();
        uint64_t v15 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 16);
        swift_bridgeObjectRetain();
        v15(v77, v13, v14);
      }
      else
      {
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        uint64_t v32 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest(0);
        uint64_t v33 = *(int *)(v32 + 24);
        uint64_t v74 = &a2[v33];
        char v78 = &a1[v33];
        uint64_t v34 = sub_1001BFE60();
        uint64_t v35 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v34 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v36 = v74;
        uint64_t v75 = v34;
        v35(v78, v36, v34);
        uint64_t v37 = *(int *)(v32 + 28);
        uint64_t v38 = &a1[v37];
        uint64_t v39 = &a2[v37];
        uint64_t v40 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
        uint64_t v41 = *(void *)(v40 - 8);
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
        {
          uint64_t v42 = sub_100003918(&qword_10020A638);
          memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
        }
        else
        {
          *(void *)uint64_t v38 = *(void *)v39;
          v38[8] = v39[8];
          uint64_t v63 = *(int *)(v40 + 24);
          uint64_t v73 = &v38[v63];
          uint64_t v64 = &v39[v63];
          swift_bridgeObjectRetain();
          v35(v73, v64, v75);
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
        }
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_21;
    }
LABEL_8:
    uint64_t v16 = sub_100003918(&qword_10020A640);
    memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_21;
  }
  if (v10)
  {
    sub_10005CA14((uint64_t)a1, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_10005CA14((uint64_t)a1, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
    int v17 = swift_getEnumCaseMultiPayload();
    if (v17 == 2)
    {
      uint64_t v43 = *(void *)a2;
      a1[8] = a2[8];
      *(void *)a1 = v43;
      uint64_t v44 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate(0);
      uint64_t v45 = *(int *)(v44 + 20);
      uint64_t v46 = &a1[v45];
      char v47 = &a2[v45];
      uint64_t v48 = sub_1001BFE60();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
      uint64_t v49 = *(int *)(v44 + 24);
      uint64_t v50 = &a1[v49];
      uint64_t v51 = &a2[v49];
      *uint64_t v50 = *v51;
      v50[1] = v51[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (v17 == 1)
    {
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = *((void *)a2 + 1);
      uint64_t v18 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata(0) + 20);
      uint64_t v19 = &a1[v18];
      uint64_t v20 = &a2[v18];
      uint64_t v21 = sub_1001BFE60();
      uint64_t v22 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 16);
      swift_bridgeObjectRetain();
      v22(v19, v20, v21);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *((void *)a1 + 1) = *((void *)a2 + 1);
      uint64_t v52 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest(0);
      uint64_t v53 = *(int *)(v52 + 24);
      uint64_t v79 = &a1[v53];
      uint64_t v54 = &a2[v53];
      uint64_t v55 = sub_1001BFE60();
      uint64_t v56 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v55 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v76 = v55;
      v56(v79, v54, v55);
      uint64_t v57 = *(int *)(v52 + 28);
      uint64_t v58 = &a1[v57];
      uint64_t v59 = &a2[v57];
      uint64_t v60 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
      uint64_t v61 = *(void *)(v60 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
      {
        uint64_t v62 = sub_100003918(&qword_10020A638);
        memcpy(v58, v59, *(void *)(*(void *)(v62 - 8) + 64));
      }
      else
      {
        *(void *)uint64_t v58 = *(void *)v59;
        v58[8] = v59[8];
        uint64_t v70 = *(int *)(v60 + 24);
        uint64_t v71 = &v58[v70];
        uint64_t v72 = &v59[v70];
        swift_bridgeObjectRetain();
        v56(v71, v72, v76);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_21:
  uint64_t v65 = *(int *)(a3 + 20);
  uint64_t v66 = &a1[v65];
  uint64_t v67 = &a2[v65];
  uint64_t v68 = sub_1001BFE60();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v68 - 8) + 24))(v66, v67, v68);
  return a1;
}

unsigned char *initializeWithTake for Proto_Ropes_HttpService_InvokeRequest(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100003918(&qword_10020A640);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      uint64_t v14 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate(0);
      uint64_t v15 = *(int *)(v14 + 20);
      uint64_t v16 = &a1[v15];
      int v17 = &a2[v15];
      uint64_t v18 = sub_1001BFE60();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      *(_OWORD *)&a1[*(int *)(v14 + 24)] = *(_OWORD *)&a2[*(int *)(v14 + 24)];
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v10 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata(0) + 20);
      uint64_t v11 = &a1[v10];
      uint64_t v12 = &a2[v10];
      uint64_t v13 = sub_1001BFE60();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
    }
    else
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *((void *)a1 + 1) = *((void *)a2 + 1);
      uint64_t v19 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest(0);
      uint64_t v20 = *(int *)(v19 + 24);
      uint64_t v21 = &a1[v20];
      uint64_t v22 = &a2[v20];
      uint64_t v23 = sub_1001BFE60();
      uint64_t v35 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 32);
      v35(v21, v22, v23);
      uint64_t v24 = *(int *)(v19 + 28);
      uint64_t v25 = &a1[v24];
      uint64_t v26 = &a2[v24];
      uint64_t v27 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
      uint64_t v28 = *(void *)(v27 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      {
        uint64_t v29 = sub_100003918(&qword_10020A638);
        memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        *(void *)uint64_t v25 = *(void *)v26;
        v25[8] = v26[8];
        v35(&v25[*(int *)(v27 + 24)], &v26[*(int *)(v27 + 24)], v23);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v30 = *(int *)(a3 + 20);
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  uint64_t v33 = sub_1001BFE60();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
  return a1;
}

unsigned char *assignWithTake for Proto_Ropes_HttpService_InvokeRequest(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *(void *)a1 = *(void *)a2;
        a1[8] = a2[8];
        uint64_t v22 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate(0);
        uint64_t v23 = *(int *)(v22 + 20);
        uint64_t v24 = &a1[v23];
        uint64_t v25 = &a2[v23];
        uint64_t v26 = sub_1001BFE60();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
        *(_OWORD *)&a1[*(int *)(v22 + 24)] = *(_OWORD *)&a2[*(int *)(v22 + 24)];
      }
      else if (EnumCaseMultiPayload == 1)
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v12 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata(0) + 20);
        uint64_t v13 = &a1[v12];
        uint64_t v14 = &a2[v12];
        uint64_t v15 = sub_1001BFE60();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      }
      else
      {
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        uint64_t v27 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest(0);
        uint64_t v28 = *(int *)(v27 + 24);
        uint64_t v29 = &a1[v28];
        uint64_t v30 = &a2[v28];
        uint64_t v31 = sub_1001BFE60();
        uint64_t v60 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v31 - 8) + 32);
        v60(v29, v30, v31);
        uint64_t v32 = *(int *)(v27 + 28);
        uint64_t v33 = &a1[v32];
        uint64_t v34 = &a2[v32];
        uint64_t v35 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
        uint64_t v36 = *(void *)(v35 - 8);
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
        {
          uint64_t v37 = sub_100003918(&qword_10020A638);
          memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
        }
        else
        {
          *(void *)uint64_t v33 = *(void *)v34;
          v33[8] = v34[8];
          v60(&v33[*(int *)(v35 + 24)], &v34[*(int *)(v35 + 24)], v31);
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
        }
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_21;
    }
LABEL_8:
    uint64_t v16 = sub_100003918(&qword_10020A640);
    memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_21;
  }
  if (v10)
  {
    sub_10005CA14((uint64_t)a1, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_10005CA14((uint64_t)a1, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
    int v17 = swift_getEnumCaseMultiPayload();
    if (v17 == 2)
    {
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      uint64_t v38 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate(0);
      uint64_t v39 = *(int *)(v38 + 20);
      uint64_t v40 = &a1[v39];
      uint64_t v41 = &a2[v39];
      uint64_t v42 = sub_1001BFE60();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
      *(_OWORD *)&a1[*(int *)(v38 + 24)] = *(_OWORD *)&a2[*(int *)(v38 + 24)];
      swift_storeEnumTagMultiPayload();
    }
    else if (v17 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v18 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata(0) + 20);
      uint64_t v19 = &a1[v18];
      uint64_t v20 = &a2[v18];
      uint64_t v21 = sub_1001BFE60();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *((void *)a1 + 1) = *((void *)a2 + 1);
      uint64_t v43 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest(0);
      uint64_t v44 = *(int *)(v43 + 24);
      uint64_t v45 = &a1[v44];
      uint64_t v46 = &a2[v44];
      uint64_t v47 = sub_1001BFE60();
      uint64_t v48 = (void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v47 - 8) + 32);
      uint64_t v61 = *v48;
      (*v48)(v45, v46, v47);
      uint64_t v49 = *(int *)(v43 + 28);
      uint64_t v50 = &a1[v49];
      uint64_t v51 = &a2[v49];
      uint64_t v52 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
      uint64_t v53 = *(void *)(v52 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
      {
        uint64_t v54 = sub_100003918(&qword_10020A638);
        memcpy(v50, v51, *(void *)(*(void *)(v54 - 8) + 64));
      }
      else
      {
        *(void *)uint64_t v50 = *(void *)v51;
        v50[8] = v51[8];
        v61(&v50[*(int *)(v52 + 24)], &v51[*(int *)(v52 + 24)], v47);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_21:
  uint64_t v55 = *(int *)(a3 + 20);
  uint64_t v56 = &a1[v55];
  uint64_t v57 = &a2[v55];
  uint64_t v58 = sub_1001BFE60();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v58 - 8) + 40))(v56, v57, v58);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Ropes_HttpService_InvokeRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100076308);
}

uint64_t sub_100076308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000520B4(a1, a2, a3, &qword_10020A640);
}

uint64_t storeEnumTagSinglePayload for Proto_Ropes_HttpService_InvokeRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100076328);
}

uint64_t sub_100076328(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1000521CC(a1, a2, a3, a4, &qword_10020A640);
}

void sub_100076334(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t initializeBufferWithCopyOfBuffer for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *(void *)a1 = *a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)a1 = *a2;
      *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
      uint64_t v14 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate(0);
      uint64_t v15 = *(int *)(v14 + 20);
      uint64_t v16 = a1 + v15;
      uint64_t v17 = (uint64_t)a2 + v15;
      uint64_t v18 = sub_1001BFE60();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      uint64_t v19 = *(int *)(v14 + 24);
      uint64_t v20 = (void *)(a1 + v19);
      uint64_t v21 = (uint64_t *)((char *)a2 + v19);
      uint64_t v22 = v21[1];
      *uint64_t v20 = *v21;
      v20[1] = v22;
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v7;
      uint64_t v8 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata(0) + 20);
      uint64_t v9 = a1 + v8;
      uint64_t v10 = (uint64_t)a2 + v8;
      uint64_t v11 = sub_1001BFE60();
      uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
      swift_bridgeObjectRetain();
      v12(v9, v10, v11);
    }
    else
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(void *)(a1 + 8) = a2[1];
      uint64_t v23 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest(0);
      uint64_t v24 = *(int *)(v23 + 24);
      uint64_t v25 = a1 + v24;
      uint64_t v26 = (uint64_t)a2 + v24;
      uint64_t v27 = sub_1001BFE60();
      uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16);
      swift_bridgeObjectRetain();
      v28(v25, v26, v27);
      uint64_t v29 = *(int *)(v23 + 28);
      uint64_t v30 = (unsigned char *)(a1 + v29);
      uint64_t v31 = (char *)a2 + v29;
      uint64_t v32 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
      uint64_t v33 = *(void *)(v32 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      {
        uint64_t v34 = sub_100003918(&qword_10020A638);
        memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        *(void *)uint64_t v30 = *(void *)v31;
        v30[8] = v31[8];
        uint64_t v35 = *(int *)(v32 + 24);
        uint64_t v36 = &v30[v35];
        uint64_t v37 = &v31[v35];
        swift_bridgeObjectRetain();
        v28((uint64_t)v36, (uint64_t)v37, v27);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v8 = a1 + *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate(0) + 20);
    uint64_t v9 = sub_1001BFE60();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    return swift_bridgeObjectRelease();
  }
  else
  {
    if (result == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v10 = a1 + *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata(0) + 20);
      uint64_t v11 = sub_1001BFE60();
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
      uint64_t v13 = v11;
      uint64_t v14 = v10;
    }
    else
    {
      if (result) {
        return result;
      }
      swift_bridgeObjectRelease();
      uint64_t v3 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest(0);
      uint64_t v4 = a1 + *(int *)(v3 + 24);
      uint64_t v5 = sub_1001BFE60();
      uint64_t v15 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
      v15(v4, v5);
      uint64_t v6 = a1 + *(int *)(v3 + 28);
      uint64_t v7 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
      if (result) {
        return result;
      }
      swift_bridgeObjectRelease();
      uint64_t v14 = v6 + *(int *)(v7 + 24);
      uint64_t v13 = v5;
      uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))v15;
    }
    return v12(v14, v13);
  }
}

uint64_t initializeWithCopy for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
    uint64_t v11 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate(0);
    uint64_t v12 = *(int *)(v11 + 20);
    uint64_t v13 = a1 + v12;
    uint64_t v14 = a2 + v12;
    uint64_t v15 = sub_1001BFE60();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = *(int *)(v11 + 24);
    uint64_t v17 = (void *)(a1 + v16);
    uint64_t v18 = (void *)(a2 + v16);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    swift_bridgeObjectRetain();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata(0) + 20);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = a2 + v6;
    uint64_t v9 = sub_1001BFE60();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    uint64_t v20 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest(0);
    uint64_t v21 = *(int *)(v20 + 24);
    uint64_t v22 = a1 + v21;
    uint64_t v23 = a2 + v21;
    uint64_t v24 = sub_1001BFE60();
    uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16);
    swift_bridgeObjectRetain();
    v25(v22, v23, v24);
    uint64_t v26 = *(int *)(v20 + 28);
    uint64_t v27 = (unsigned char *)(a1 + v26);
    uint64_t v28 = (unsigned char *)(a2 + v26);
    uint64_t v29 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
    uint64_t v30 = *(void *)(v29 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      uint64_t v31 = sub_100003918(&qword_10020A638);
      memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      *(void *)uint64_t v27 = *(void *)v28;
      v27[8] = v28[8];
      uint64_t v32 = *(int *)(v29 + 24);
      uint64_t v33 = &v27[v32];
      uint64_t v34 = &v28[v32];
      swift_bridgeObjectRetain();
      v25((uint64_t)v33, (uint64_t)v34, v24);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type(uint64_t a1, uint64_t *a2)
{
  if ((uint64_t *)a1 != a2)
  {
    sub_10005CA14(a1, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v10 = *a2;
      *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
      *(void *)a1 = v10;
      uint64_t v11 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate(0);
      uint64_t v12 = *(int *)(v11 + 20);
      uint64_t v13 = a1 + v12;
      uint64_t v14 = (uint64_t)a2 + v12;
      uint64_t v15 = sub_1001BFE60();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      uint64_t v16 = *(int *)(v11 + 24);
      uint64_t v17 = (void *)(a1 + v16);
      uint64_t v18 = (uint64_t *)((char *)a2 + v16);
      *uint64_t v17 = *v18;
      v17[1] = v18[1];
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = a2[1];
      uint64_t v5 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata(0) + 20);
      uint64_t v6 = a1 + v5;
      uint64_t v7 = (uint64_t)a2 + v5;
      uint64_t v8 = sub_1001BFE60();
      uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
      swift_bridgeObjectRetain();
      v9(v6, v7, v8);
    }
    else
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(void *)(a1 + 8) = a2[1];
      uint64_t v19 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest(0);
      uint64_t v20 = *(int *)(v19 + 24);
      uint64_t v21 = a1 + v20;
      uint64_t v22 = (uint64_t)a2 + v20;
      uint64_t v23 = sub_1001BFE60();
      uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16);
      swift_bridgeObjectRetain();
      v24(v21, v22, v23);
      uint64_t v25 = *(int *)(v19 + 28);
      uint64_t v26 = (unsigned char *)(a1 + v25);
      uint64_t v27 = (char *)a2 + v25;
      uint64_t v28 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
      uint64_t v29 = *(void *)(v28 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      {
        uint64_t v30 = sub_100003918(&qword_10020A638);
        memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        *(void *)uint64_t v26 = *(void *)v27;
        v26[8] = v27[8];
        uint64_t v31 = *(int *)(v28 + 24);
        uint64_t v32 = &v26[v31];
        uint64_t v33 = &v27[v31];
        swift_bridgeObjectRetain();
        v24((uint64_t)v32, (uint64_t)v33, v23);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
    uint64_t v9 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate(0);
    uint64_t v10 = *(int *)(v9 + 20);
    uint64_t v11 = a1 + v10;
    uint64_t v12 = a2 + v10;
    uint64_t v13 = sub_1001BFE60();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
    *(_OWORD *)(a1 + *(int *)(v9 + 24)) = *(_OWORD *)(a2 + *(int *)(v9 + 24));
  }
  else if (EnumCaseMultiPayload == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v5 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata(0) + 20);
    uint64_t v6 = a1 + v5;
    uint64_t v7 = a2 + v5;
    uint64_t v8 = sub_1001BFE60();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    uint64_t v14 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest(0);
    uint64_t v15 = *(int *)(v14 + 24);
    uint64_t v16 = (unsigned char *)(a1 + v15);
    uint64_t v17 = (unsigned char *)(a2 + v15);
    uint64_t v18 = sub_1001BFE60();
    uint64_t v19 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v18 - 8) + 32);
    v19(v16, v17, v18);
    uint64_t v20 = *(int *)(v14 + 28);
    uint64_t v21 = (unsigned char *)(a1 + v20);
    uint64_t v22 = (unsigned char *)(a2 + v20);
    uint64_t v23 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
    uint64_t v24 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      uint64_t v25 = sub_100003918(&qword_10020A638);
      memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      *(void *)uint64_t v21 = *(void *)v22;
      v21[8] = v22[8];
      v19(&v21[*(int *)(v23 + 24)], &v22[*(int *)(v23 + 24)], v18);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_10005CA14(a1, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      uint64_t v9 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate(0);
      uint64_t v10 = *(int *)(v9 + 20);
      uint64_t v11 = a1 + v10;
      uint64_t v12 = a2 + v10;
      uint64_t v13 = sub_1001BFE60();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      *(_OWORD *)(a1 + *(int *)(v9 + 24)) = *(_OWORD *)(a2 + *(int *)(v9 + 24));
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v5 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata(0) + 20);
      uint64_t v6 = a1 + v5;
      uint64_t v7 = a2 + v5;
      uint64_t v8 = sub_1001BFE60();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
    }
    else
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      uint64_t v14 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest(0);
      uint64_t v15 = *(int *)(v14 + 24);
      uint64_t v16 = a1 + v15;
      uint64_t v17 = a2 + v15;
      uint64_t v18 = sub_1001BFE60();
      uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32);
      v19(v16, v17, v18);
      uint64_t v20 = *(int *)(v14 + 28);
      uint64_t v21 = (unsigned char *)(a1 + v20);
      uint64_t v22 = (unsigned char *)(a2 + v20);
      uint64_t v23 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
      uint64_t v24 = *(void *)(v23 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      {
        uint64_t v25 = sub_100003918(&qword_10020A638);
        memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        *(void *)uint64_t v21 = *(void *)v22;
        v21[8] = v22[8];
        v19((uint64_t)&v21[*(int *)(v23 + 24)], (uint64_t)&v22[*(int *)(v23 + 24)], v18);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1000773D4()
{
  uint64_t result = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate(319);
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Ropes_HttpService_InvokeRequest.SetupRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    a1[1] = a2[1];
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1001BFE60();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    uint64_t v12 = *(int *)(a3 + 28);
    uint64_t v13 = (char *)v4 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = sub_100003918(&qword_10020A638);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      *(void *)uint64_t v13 = *(void *)v14;
      v13[8] = v14[8];
      uint64_t v19 = *(int *)(v15 + 24);
      uint64_t v20 = &v13[v19];
      uint64_t v21 = &v14[v19];
      swift_bridgeObjectRetain();
      v11(v20, v21, v10);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
  }
  return v4;
}

uint64_t destroy for Proto_Ropes_HttpService_InvokeRequest.SetupRequest(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1001BFE60();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v10(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = v6 + *(int *)(v7 + 24);
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v9, v5);
  }
  return result;
}

uint64_t initializeWithCopy for Proto_Ropes_HttpService_InvokeRequest.SetupRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1001BFE60();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (unsigned char *)(a1 + v11);
  uint64_t v13 = (unsigned char *)(a2 + v11);
  uint64_t v14 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_100003918(&qword_10020A638);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v12 = *(void *)v13;
    v12[8] = v13[8];
    uint64_t v17 = *(int *)(v14 + 24);
    uint64_t v18 = &v12[v17];
    uint64_t v19 = &v13[v17];
    swift_bridgeObjectRetain();
    v10((uint64_t)v18, (uint64_t)v19, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

uint64_t assignWithCopy for Proto_Ropes_HttpService_InvokeRequest.SetupRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1001BFE60();
  uint64_t v24 = *(void *)(v9 - 8);
  uint64_t v25 = v9;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v24 + 24);
  v10(v7, v8);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (unsigned char *)(a1 + v11);
  uint64_t v13 = (unsigned char *)(a2 + v11);
  uint64_t v14 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v8) = v16(v12, 1, v14);
  int v17 = v16(v13, 1, v14);
  if (!v8)
  {
    if (!v17)
    {
      *(void *)uint64_t v12 = *(void *)v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v12[8] = v13[8];
      ((void (*)(unsigned char *, unsigned char *, uint64_t))v10)(&v12[*(int *)(v14 + 24)], &v13[*(int *)(v14 + 24)], v25);
      return a1;
    }
    sub_10005CA14((uint64_t)v12, type metadata accessor for Proto_Ropes_Common_Capabilities);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v22 = sub_100003918(&qword_10020A638);
    memcpy(v12, v13, *(void *)(*(void *)(v22 - 8) + 64));
    return a1;
  }
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  uint64_t v18 = *(int *)(v14 + 24);
  uint64_t v19 = &v12[v18];
  uint64_t v20 = &v13[v18];
  uint64_t v21 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v24 + 16);
  swift_bridgeObjectRetain();
  v21(v19, v20, v25);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t initializeWithTake for Proto_Ropes_HttpService_InvokeRequest.SetupRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (unsigned char *)(a1 + v6);
  uint64_t v8 = (unsigned char *)(a2 + v6);
  uint64_t v9 = sub_1001BFE60();
  uint64_t v10 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (unsigned char *)(a1 + v11);
  uint64_t v13 = (unsigned char *)(a2 + v11);
  uint64_t v14 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_100003918(&qword_10020A638);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v12 = *(void *)v13;
    v12[8] = v13[8];
    v10(&v12[*(int *)(v14 + 24)], &v13[*(int *)(v14 + 24)], v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

uint64_t assignWithTake for Proto_Ropes_HttpService_InvokeRequest.SetupRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1001BFE60();
  uint64_t v20 = *(void *)(v9 - 8);
  uint64_t v21 = v9;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v20 + 40);
  v10(v7, v8);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (unsigned char *)(a1 + v11);
  uint64_t v13 = (unsigned char *)(a2 + v11);
  uint64_t v14 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v8) = v16(v12, 1, v14);
  int v17 = v16(v13, 1, v14);
  if (!v8)
  {
    if (!v17)
    {
      *(void *)uint64_t v12 = *(void *)v13;
      swift_bridgeObjectRelease();
      v12[8] = v13[8];
      ((void (*)(unsigned char *, unsigned char *, uint64_t))v10)(&v12[*(int *)(v14 + 24)], &v13[*(int *)(v14 + 24)], v21);
      return a1;
    }
    sub_10005CA14((uint64_t)v12, type metadata accessor for Proto_Ropes_Common_Capabilities);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = sub_100003918(&qword_10020A638);
    memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v20 + 32))(&v12[*(int *)(v14 + 24)], &v13[*(int *)(v14 + 24)], v21);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Ropes_HttpService_InvokeRequest.SetupRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100077F88);
}

uint64_t sub_100077F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10008643C(a1, a2, a3, &qword_10020A638);
}

uint64_t storeEnumTagSinglePayload for Proto_Ropes_HttpService_InvokeRequest.SetupRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100077FA8);
}

uint64_t sub_100077FA8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1001BFE60();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100003918(&qword_10020A638);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1000780D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_100078104(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1001C12F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (void *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = sub_1001BFE60();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1001BFE60();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1001BFE60();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100078530);
}

uint64_t sub_100078530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1001BFE60();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000785F4);
}

uint64_t sub_1000785F4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1001BFE60();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_10007869C()
{
  return sub_1000442D4();
}

uint64_t getEnumTagSinglePayload for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000786E0);
}

uint64_t storeEnumTagSinglePayload for Proto_Ropes_HttpService_InvokeRequest.LoggingMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000786F8);
}

uint64_t sub_1000786FC()
{
  return sub_100086E84();
}

void *initializeBufferWithCopyOfBuffer for Proto_Ropes_HttpService_InvokeRequest.Terminate(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    void *v4 = *a2;
    unint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = sub_1001BFE60();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = (void *)((char *)v4 + v11);
    uint64_t v13 = (uint64_t *)((char *)a2 + v11);
    uint64_t v14 = v13[1];
    void *v12 = *v13;
    v12[1] = v14;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for Proto_Ropes_HttpService_InvokeRequest.Terminate(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Proto_Ropes_HttpService_InvokeRequest.Terminate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Proto_Ropes_HttpService_InvokeRequest.Terminate(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t)a2 + v7;
  uint64_t v10 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)((char *)a2 + v11);
  void *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for Proto_Ropes_HttpService_InvokeRequest.Terminate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for Proto_Ropes_HttpService_InvokeRequest.Terminate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (uint64_t *)(a2 + v10);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  *uint64_t v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Ropes_HttpService_InvokeRequest.Terminate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100078B5C);
}

uint64_t sub_100078B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001BFE60();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    int v13 = v12 - 1;
    if (v13 < 0) {
      int v13 = -1;
    }
    return (v13 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for Proto_Ropes_HttpService_InvokeRequest.Terminate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100078C44);
}

uint64_t sub_100078C44(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1001BFE60();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  }
  return result;
}

uint64_t sub_100078D08()
{
  uint64_t result = sub_1001BFE60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.Terminate.Code()
{
  return &type metadata for Proto_Ropes_HttpService_InvokeRequest.Terminate.Code;
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Ropes_HttpService_InvokeResponse(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_100003918(&qword_10020A648);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *a1 = *a2;
          *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
          uint64_t v15 = a2[2];
          unint64_t v16 = a2[3];
          sub_100007B14(v15, v16);
          a1[2] = v15;
          a1[3] = v16;
          *((_DWORD *)a1 + 8) = *((_DWORD *)a2 + 8);
          uint64_t v17 = *(int *)(type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0) + 28);
          uint64_t v18 = (char *)a1 + v17;
          uint64_t v19 = (char *)a2 + v17;
          uint64_t v20 = sub_1001BFE60();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
          break;
        case 2u:
          uint64_t v21 = *a2;
          unint64_t v22 = a2[1];
          sub_100007B14(*a2, v22);
          *a1 = v21;
          a1[1] = v22;
          uint64_t v23 = a2[3];
          a1[2] = a2[2];
          a1[3] = v23;
          uint64_t v24 = (int *)type metadata accessor for Proto_Ropes_Common_Attestation(0);
          uint64_t v25 = v24[6];
          uint64_t v72 = (char *)a2 + v25;
          uint64_t v74 = (char *)a1 + v25;
          uint64_t v26 = sub_1001BFE60();
          uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
          swift_bridgeObjectRetain();
          v27(v74, v72, v26);
          uint64_t v28 = v24[7];
          uint64_t v29 = (char *)a1 + v28;
          uint64_t v30 = (char *)a2 + v28;
          *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
          v29[4] = v30[4];
          uint64_t v31 = v24[8];
          uint64_t v32 = (char *)a1 + v31;
          uint64_t v33 = (char *)a2 + v31;
          uint64_t v34 = sub_1001BFDF0();
          uint64_t v35 = *(void *)(v34 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
          {
            uint64_t v36 = sub_100003918(&qword_100209898);
            memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
          }
          uint64_t v51 = v24[9];
          uint64_t v52 = (uint64_t *)((char *)a1 + v51);
          uint64_t v53 = (uint64_t *)((char *)a2 + v51);
          uint64_t v54 = v53[1];
          *uint64_t v52 = *v53;
          v52[1] = v54;
          uint64_t v55 = v24[10];
          uint64_t v56 = (uint64_t *)((char *)a1 + v55);
          uint64_t v57 = (uint64_t *)((char *)a2 + v55);
          uint64_t v58 = v57[1];
          *uint64_t v56 = *v57;
          v56[1] = v58;
          uint64_t v59 = v24[11];
          uint64_t v60 = (uint64_t *)((char *)a1 + v59);
          uint64_t v61 = (uint64_t *)((char *)a2 + v59);
          uint64_t v62 = v61[1];
          *uint64_t v60 = *v61;
          v60[1] = v62;
          uint64_t v63 = v24[12];
          uint64_t v64 = (uint64_t *)((char *)a1 + v63);
          uint64_t v65 = (uint64_t *)((char *)a2 + v63);
          uint64_t v66 = v65[1];
          *uint64_t v64 = *v65;
          v64[1] = v66;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
        case 3u:
        case 7u:
          uint64_t v37 = sub_1001BFE60();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v37 - 8) + 16))(a1, a2, v37);
          break;
        case 4u:
          uint64_t v38 = a2[1];
          *a1 = *a2;
          a1[1] = v38;
          uint64_t v39 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata(0) + 20);
          uint64_t v75 = (char *)a1 + v39;
          uint64_t v40 = (char *)a2 + v39;
          uint64_t v41 = sub_1001BFE60();
          uint64_t v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
          swift_bridgeObjectRetain();
          v42(v75, v40, v41);
          break;
        case 5u:
          *a1 = *a2;
          uint64_t v43 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
          uint64_t v76 = (char *)a1 + v43;
          uint64_t v44 = (char *)a2 + v43;
          uint64_t v45 = sub_1001BFE60();
          uint64_t v46 = *(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16);
          swift_bridgeObjectRetain();
          v46(v76, v44, v45);
          break;
        case 6u:
          *a1 = *a2;
          *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
          uint64_t v47 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(0)
                       + 24);
          uint64_t v77 = (char *)a1 + v47;
          uint64_t v48 = (char *)a2 + v47;
          uint64_t v49 = sub_1001BFE60();
          uint64_t v50 = *(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16);
          swift_bridgeObjectRetain();
          v50(v77, v48, v49);
          break;
        default:
          *a1 = *a2;
          uint64_t v11 = *(int *)(type metadata accessor for Proto_Ropes_Common_AttestationList(0) + 20);
          uint64_t v73 = (char *)a1 + v11;
          unint64_t v12 = (char *)a2 + v11;
          uint64_t v13 = sub_1001BFE60();
          uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
          swift_bridgeObjectRetain();
          v14(v73, v12, v13);
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v67 = *(int *)(a3 + 20);
    uint64_t v68 = (char *)a1 + v67;
    uint64_t v69 = (char *)a2 + v67;
    uint64_t v70 = sub_1001BFE60();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16))(v68, v69, v70);
  }
  return a1;
}

uint64_t destroy for Proto_Ropes_HttpService_InvokeResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        uint64_t v6 = type metadata accessor for Proto_Ropes_Common_AttestationList(0);
        goto LABEL_11;
      case 1u:
        sub_10000792C(*(void *)(a1 + 16), *(void *)(a1 + 24));
        uint64_t v7 = *(int *)(type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0) + 28);
        goto LABEL_13;
      case 2u:
        sub_10000792C(*(void *)a1, *(void *)(a1 + 8));
        swift_bridgeObjectRelease();
        uint64_t v8 = type metadata accessor for Proto_Ropes_Common_Attestation(0);
        uint64_t v9 = a1 + *(int *)(v8 + 24);
        uint64_t v10 = sub_1001BFE60();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
        uint64_t v11 = a1 + *(int *)(v8 + 32);
        uint64_t v12 = sub_1001BFDF0();
        uint64_t v13 = *(void *)(v12 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
          (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 3u:
      case 7u:
        uint64_t v5 = sub_1001BFE60();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
        break;
      case 4u:
        swift_bridgeObjectRelease();
        uint64_t v6 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata(0);
        goto LABEL_11;
      case 5u:
        swift_bridgeObjectRelease();
        uint64_t v6 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0);
LABEL_11:
        uint64_t v7 = *(int *)(v6 + 20);
        goto LABEL_13;
      case 6u:
        swift_bridgeObjectRelease();
        uint64_t v7 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(0) + 24);
LABEL_13:
        uint64_t v14 = a1 + v7;
        uint64_t v15 = sub_1001BFE60();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
        break;
      default:
        break;
    }
  }
  uint64_t v16 = a1 + *(int *)(a2 + 20);
  uint64_t v17 = sub_1001BFE60();
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8);
  return v18(v16, v17);
}

void *initializeWithCopy for Proto_Ropes_HttpService_InvokeResponse(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100003918(&qword_10020A648);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
        uint64_t v13 = a2[2];
        unint64_t v14 = a2[3];
        sub_100007B14(v13, v14);
        a1[2] = v13;
        a1[3] = v14;
        *((_DWORD *)a1 + 8) = *((_DWORD *)a2 + 8);
        uint64_t v15 = *(int *)(type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0) + 28);
        uint64_t v16 = (char *)a1 + v15;
        uint64_t v17 = (char *)a2 + v15;
        uint64_t v18 = sub_1001BFE60();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
        break;
      case 2u:
        uint64_t v19 = *a2;
        unint64_t v20 = a2[1];
        sub_100007B14(*a2, v20);
        *a1 = v19;
        a1[1] = v20;
        uint64_t v21 = a2[3];
        a1[2] = a2[2];
        a1[3] = v21;
        unint64_t v22 = (int *)type metadata accessor for Proto_Ropes_Common_Attestation(0);
        uint64_t v23 = v22[6];
        uint64_t v70 = (char *)a2 + v23;
        uint64_t v72 = (char *)a1 + v23;
        uint64_t v24 = sub_1001BFE60();
        uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
        swift_bridgeObjectRetain();
        v25(v72, v70, v24);
        uint64_t v26 = v22[7];
        uint64_t v27 = (char *)a1 + v26;
        uint64_t v28 = (char *)a2 + v26;
        *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
        v27[4] = v28[4];
        uint64_t v29 = v22[8];
        uint64_t v30 = (char *)a1 + v29;
        uint64_t v31 = (char *)a2 + v29;
        uint64_t v32 = sub_1001BFDF0();
        uint64_t v33 = *(void *)(v32 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
        {
          uint64_t v34 = sub_100003918(&qword_100209898);
          memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
        }
        uint64_t v49 = v22[9];
        uint64_t v50 = (void *)((char *)a1 + v49);
        uint64_t v51 = (void *)((char *)a2 + v49);
        uint64_t v52 = v51[1];
        *uint64_t v50 = *v51;
        v50[1] = v52;
        uint64_t v53 = v22[10];
        uint64_t v54 = (void *)((char *)a1 + v53);
        uint64_t v55 = (void *)((char *)a2 + v53);
        uint64_t v56 = v55[1];
        *uint64_t v54 = *v55;
        v54[1] = v56;
        uint64_t v57 = v22[11];
        uint64_t v58 = (void *)((char *)a1 + v57);
        uint64_t v59 = (void *)((char *)a2 + v57);
        uint64_t v60 = v59[1];
        *uint64_t v58 = *v59;
        v58[1] = v60;
        uint64_t v61 = v22[12];
        uint64_t v62 = (void *)((char *)a1 + v61);
        uint64_t v63 = (void *)((char *)a2 + v61);
        uint64_t v64 = v63[1];
        *uint64_t v62 = *v63;
        v62[1] = v64;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 3u:
      case 7u:
        uint64_t v35 = sub_1001BFE60();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v35 - 8) + 16))(a1, a2, v35);
        break;
      case 4u:
        uint64_t v36 = a2[1];
        *a1 = *a2;
        a1[1] = v36;
        uint64_t v37 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata(0) + 20);
        uint64_t v73 = (char *)a1 + v37;
        uint64_t v38 = (char *)a2 + v37;
        uint64_t v39 = sub_1001BFE60();
        uint64_t v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16);
        swift_bridgeObjectRetain();
        v40(v73, v38, v39);
        break;
      case 5u:
        *a1 = *a2;
        uint64_t v41 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
        uint64_t v74 = (char *)a1 + v41;
        uint64_t v42 = (char *)a2 + v41;
        uint64_t v43 = sub_1001BFE60();
        uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
        swift_bridgeObjectRetain();
        v44(v74, v42, v43);
        break;
      case 6u:
        *a1 = *a2;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
        uint64_t v45 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(0) + 24);
        uint64_t v75 = (char *)a1 + v45;
        uint64_t v46 = (char *)a2 + v45;
        uint64_t v47 = sub_1001BFE60();
        uint64_t v48 = *(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16);
        swift_bridgeObjectRetain();
        v48(v75, v46, v47);
        break;
      default:
        *a1 = *a2;
        uint64_t v9 = *(int *)(type metadata accessor for Proto_Ropes_Common_AttestationList(0) + 20);
        uint64_t v71 = (char *)a1 + v9;
        uint64_t v10 = (char *)a2 + v9;
        uint64_t v11 = sub_1001BFE60();
        uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
        swift_bridgeObjectRetain();
        v12(v71, v10, v11);
        break;
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v65 = *(int *)(a3 + 20);
  uint64_t v66 = (char *)a1 + v65;
  uint64_t v67 = (char *)a2 + v65;
  uint64_t v68 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16))(v66, v67, v68);
  return a1;
}

uint64_t assignWithCopy for Proto_Ropes_HttpService_InvokeResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v21 = *(void *)a2;
          *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
          *(void *)a1 = v21;
          uint64_t v22 = *(void *)(a2 + 16);
          unint64_t v23 = *(void *)(a2 + 24);
          sub_100007B14(v22, v23);
          *(void *)(a1 + 16) = v22;
          *(void *)(a1 + 24) = v23;
          *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
          uint64_t v24 = *(int *)(type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0) + 28);
          uint64_t v25 = a1 + v24;
          uint64_t v26 = a2 + v24;
          uint64_t v27 = sub_1001BFE60();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
          break;
        case 2u:
          uint64_t v28 = *(void *)a2;
          unint64_t v29 = *(void *)(a2 + 8);
          sub_100007B14(*(void *)a2, v29);
          *(void *)a1 = v28;
          *(void *)(a1 + 8) = v29;
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          uint64_t v30 = (int *)type metadata accessor for Proto_Ropes_Common_Attestation(0);
          uint64_t v31 = v30[6];
          uint64_t v126 = a2 + v31;
          uint64_t v128 = a1 + v31;
          uint64_t v32 = sub_1001BFE60();
          uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16);
          swift_bridgeObjectRetain();
          v33(v128, v126, v32);
          uint64_t v34 = v30[7];
          uint64_t v35 = a1 + v34;
          uint64_t v36 = a2 + v34;
          char v37 = *(unsigned char *)(v36 + 4);
          *(_DWORD *)uint64_t v35 = *(_DWORD *)v36;
          *(unsigned char *)(v35 + 4) = v37;
          uint64_t v38 = v30[8];
          uint64_t v39 = (void *)(a1 + v38);
          uint64_t v40 = (const void *)(a2 + v38);
          uint64_t v41 = sub_1001BFDF0();
          uint64_t v42 = *(void *)(v41 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
          {
            uint64_t v43 = sub_100003918(&qword_100209898);
            memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v42 + 16))(v39, v40, v41);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
          }
          uint64_t v97 = v30[9];
          uint64_t v98 = (void *)(a1 + v97);
          uint64_t v99 = (void *)(a2 + v97);
          *uint64_t v98 = *v99;
          v98[1] = v99[1];
          uint64_t v100 = v30[10];
          uint64_t v101 = (void *)(a1 + v100);
          uint64_t v102 = (void *)(a2 + v100);
          void *v101 = *v102;
          v101[1] = v102[1];
          uint64_t v103 = v30[11];
          uint64_t v104 = (void *)(a1 + v103);
          uint64_t v105 = (void *)(a2 + v103);
          *uint64_t v104 = *v105;
          v104[1] = v105[1];
          uint64_t v106 = v30[12];
          uint64_t v107 = (void *)(a1 + v106);
          uint64_t v108 = (void *)(a2 + v106);
          *uint64_t v107 = *v108;
          v107[1] = v108[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
        case 3u:
        case 7u:
          uint64_t v44 = sub_1001BFE60();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16))(a1, a2, v44);
          break;
        case 4u:
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          uint64_t v45 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata(0) + 20);
          uint64_t v129 = a1 + v45;
          uint64_t v46 = a2 + v45;
          uint64_t v47 = sub_1001BFE60();
          uint64_t v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16);
          swift_bridgeObjectRetain();
          v48(v129, v46, v47);
          break;
        case 5u:
          *(void *)a1 = *(void *)a2;
          uint64_t v49 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
          uint64_t v130 = a1 + v49;
          uint64_t v50 = a2 + v49;
          uint64_t v51 = sub_1001BFE60();
          uint64_t v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16);
          swift_bridgeObjectRetain();
          v52(v130, v50, v51);
          break;
        case 6u:
          *(void *)a1 = *(void *)a2;
          *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
          uint64_t v53 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(0)
                       + 24);
          uint64_t v131 = a1 + v53;
          uint64_t v54 = a2 + v53;
          uint64_t v55 = sub_1001BFE60();
          uint64_t v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 16);
          swift_bridgeObjectRetain();
          v56(v131, v54, v55);
          break;
        default:
          *(void *)a1 = *(void *)a2;
          uint64_t v11 = *(int *)(type metadata accessor for Proto_Ropes_Common_AttestationList(0) + 20);
          uint64_t v127 = a1 + v11;
          uint64_t v12 = a2 + v11;
          uint64_t v13 = sub_1001BFE60();
          unint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
          swift_bridgeObjectRetain();
          v14(v127, v12, v13);
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_28;
    }
LABEL_7:
    uint64_t v15 = sub_100003918(&qword_10020A648);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_28;
  }
  if (v10)
  {
    sub_10005CA14(a1, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_10005CA14(a1, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v57 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        *(void *)a1 = v57;
        uint64_t v58 = *(void *)(a2 + 16);
        unint64_t v59 = *(void *)(a2 + 24);
        sub_100007B14(v58, v59);
        *(void *)(a1 + 16) = v58;
        *(void *)(a1 + 24) = v59;
        *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
        uint64_t v60 = *(int *)(type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0) + 28);
        uint64_t v61 = a1 + v60;
        uint64_t v62 = a2 + v60;
        uint64_t v63 = sub_1001BFE60();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v64 = *(void *)a2;
        unint64_t v65 = *(void *)(a2 + 8);
        sub_100007B14(*(void *)a2, v65);
        *(void *)a1 = v64;
        *(void *)(a1 + 8) = v65;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        uint64_t v66 = (int *)type metadata accessor for Proto_Ropes_Common_Attestation(0);
        uint64_t v67 = v66[6];
        uint64_t v132 = a1 + v67;
        uint64_t v68 = a2 + v67;
        uint64_t v69 = sub_1001BFE60();
        uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 16);
        swift_bridgeObjectRetain();
        v70(v132, v68, v69);
        uint64_t v71 = v66[7];
        uint64_t v72 = a1 + v71;
        uint64_t v73 = a2 + v71;
        char v74 = *(unsigned char *)(v73 + 4);
        *(_DWORD *)uint64_t v72 = *(_DWORD *)v73;
        *(unsigned char *)(v72 + 4) = v74;
        uint64_t v75 = v66[8];
        uint64_t v76 = (void *)(a1 + v75);
        uint64_t v77 = (const void *)(a2 + v75);
        uint64_t v78 = sub_1001BFDF0();
        uint64_t v79 = *(void *)(v78 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v79 + 48))(v77, 1, v78))
        {
          uint64_t v80 = sub_100003918(&qword_100209898);
          memcpy(v76, v77, *(void *)(*(void *)(v80 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v79 + 16))(v76, v77, v78);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v79 + 56))(v76, 0, 1, v78);
        }
        uint64_t v114 = v66[9];
        uint64_t v115 = (void *)(a1 + v114);
        uint64_t v116 = (void *)(a2 + v114);
        void *v115 = *v116;
        v115[1] = v116[1];
        uint64_t v117 = v66[10];
        uint64_t v118 = (void *)(a1 + v117);
        uint64_t v119 = (void *)(a2 + v117);
        *uint64_t v118 = *v119;
        v118[1] = v119[1];
        uint64_t v120 = v66[11];
        Swift::String v121 = (void *)(a1 + v120);
        uint64_t v122 = (void *)(a2 + v120);
        void *v121 = *v122;
        v121[1] = v122[1];
        uint64_t v123 = v66[12];
        uint64_t v124 = (void *)(a1 + v123);
        v125 = (void *)(a2 + v123);
        *uint64_t v124 = *v125;
        v124[1] = v125[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
      case 7u:
        uint64_t v81 = sub_1001BFE60();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 16))(a1, a2, v81);
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v82 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata(0) + 20);
        uint64_t v83 = a1 + v82;
        uint64_t v84 = a2 + v82;
        uint64_t v85 = sub_1001BFE60();
        uint64_t v86 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 16);
        swift_bridgeObjectRetain();
        v86(v83, v84, v85);
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        *(void *)a1 = *(void *)a2;
        uint64_t v87 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
        uint64_t v88 = a1 + v87;
        uint64_t v89 = a2 + v87;
        uint64_t v90 = sub_1001BFE60();
        uint64_t v91 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 16);
        swift_bridgeObjectRetain();
        v91(v88, v89, v90);
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        uint64_t v92 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(0) + 24);
        uint64_t v93 = a1 + v92;
        uint64_t v94 = a2 + v92;
        uint64_t v95 = sub_1001BFE60();
        uint64_t v96 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 16);
        swift_bridgeObjectRetain();
        v96(v93, v94, v95);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        *(void *)a1 = *(void *)a2;
        uint64_t v16 = *(int *)(type metadata accessor for Proto_Ropes_Common_AttestationList(0) + 20);
        uint64_t v17 = a1 + v16;
        uint64_t v18 = a2 + v16;
        uint64_t v19 = sub_1001BFE60();
        unint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
        swift_bridgeObjectRetain();
        v20(v17, v18, v19);
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
LABEL_28:
  uint64_t v109 = *(int *)(a3 + 20);
  uint64_t v110 = a1 + v109;
  uint64_t v111 = a2 + v109;
  uint64_t v112 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v112 - 8) + 24))(v110, v111, v112);
  return a1;
}

void *initializeWithTake for Proto_Ropes_HttpService_InvokeResponse(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100003918(&qword_10020A648);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((_DWORD *)a1 + 8) = *((_DWORD *)a2 + 8);
        uint64_t v13 = *(int *)(type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0) + 28);
        unint64_t v14 = (char *)a1 + v13;
        uint64_t v15 = (char *)a2 + v13;
        uint64_t v16 = sub_1001BFE60();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
        break;
      case 2u:
        long long v17 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v17;
        uint64_t v18 = (int *)type metadata accessor for Proto_Ropes_Common_Attestation(0);
        uint64_t v19 = v18[6];
        unint64_t v20 = (char *)a1 + v19;
        uint64_t v21 = (char *)a2 + v19;
        uint64_t v22 = sub_1001BFE60();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
        uint64_t v23 = v18[7];
        uint64_t v24 = (char *)a1 + v23;
        uint64_t v25 = (char *)a2 + v23;
        *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
        v24[4] = v25[4];
        uint64_t v26 = v18[8];
        uint64_t v27 = (char *)a1 + v26;
        uint64_t v28 = (char *)a2 + v26;
        uint64_t v29 = sub_1001BFDF0();
        uint64_t v30 = *(void *)(v29 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
        {
          uint64_t v31 = sub_100003918(&qword_100209898);
          memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
        }
        *(_OWORD *)((char *)a1 + v18[9]) = *(_OWORD *)((char *)a2 + v18[9]);
        *(_OWORD *)((char *)a1 + v18[10]) = *(_OWORD *)((char *)a2 + v18[10]);
        *(_OWORD *)((char *)a1 + v18[11]) = *(_OWORD *)((char *)a2 + v18[11]);
        *(_OWORD *)((char *)a1 + v18[12]) = *(_OWORD *)((char *)a2 + v18[12]);
        break;
      case 3u:
      case 7u:
        uint64_t v32 = sub_1001BFE60();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 32))(a1, a2, v32);
        break;
      case 4u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v33 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata(0) + 20);
        uint64_t v34 = (char *)a1 + v33;
        uint64_t v35 = (char *)a2 + v33;
        uint64_t v36 = sub_1001BFE60();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
        break;
      case 5u:
        *a1 = *a2;
        uint64_t v37 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
        uint64_t v38 = (char *)a1 + v37;
        uint64_t v39 = (char *)a2 + v37;
        uint64_t v40 = sub_1001BFE60();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
        break;
      case 6u:
        *a1 = *a2;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
        uint64_t v41 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(0) + 24);
        uint64_t v42 = (char *)a1 + v41;
        uint64_t v43 = (char *)a2 + v41;
        uint64_t v44 = sub_1001BFE60();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
        break;
      default:
        *a1 = *a2;
        uint64_t v9 = *(int *)(type metadata accessor for Proto_Ropes_Common_AttestationList(0) + 20);
        int v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = sub_1001BFE60();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
        break;
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v45 = *(int *)(a3 + 20);
  uint64_t v46 = (char *)a1 + v45;
  uint64_t v47 = (char *)a2 + v45;
  uint64_t v48 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
  return a1;
}

uint64_t assignWithTake for Proto_Ropes_HttpService_InvokeResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *(void *)a1 = *(void *)a2;
          *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
          uint64_t v20 = *(int *)(type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0) + 28);
          uint64_t v21 = a1 + v20;
          uint64_t v22 = a2 + v20;
          uint64_t v23 = sub_1001BFE60();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
          break;
        case 2u:
          long long v24 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v24;
          uint64_t v25 = (int *)type metadata accessor for Proto_Ropes_Common_Attestation(0);
          uint64_t v26 = v25[6];
          uint64_t v27 = a1 + v26;
          uint64_t v28 = a2 + v26;
          uint64_t v29 = sub_1001BFE60();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
          uint64_t v30 = v25[7];
          uint64_t v31 = a1 + v30;
          uint64_t v32 = a2 + v30;
          *(_DWORD *)uint64_t v31 = *(_DWORD *)v32;
          *(unsigned char *)(v31 + 4) = *(unsigned char *)(v32 + 4);
          uint64_t v33 = v25[8];
          uint64_t v34 = (void *)(a1 + v33);
          uint64_t v35 = (const void *)(a2 + v33);
          uint64_t v36 = sub_1001BFDF0();
          uint64_t v37 = *(void *)(v36 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
          {
            uint64_t v38 = sub_100003918(&qword_100209898);
            memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v37 + 32))(v34, v35, v36);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
          }
          *(_OWORD *)(a1 + v25[9]) = *(_OWORD *)(a2 + v25[9]);
          *(_OWORD *)(a1 + v25[10]) = *(_OWORD *)(a2 + v25[10]);
          *(_OWORD *)(a1 + v25[11]) = *(_OWORD *)(a2 + v25[11]);
          *(_OWORD *)(a1 + v25[12]) = *(_OWORD *)(a2 + v25[12]);
          break;
        case 3u:
        case 7u:
          uint64_t v39 = sub_1001BFE60();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 32))(a1, a2, v39);
          break;
        case 4u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v40 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata(0) + 20);
          uint64_t v41 = a1 + v40;
          uint64_t v42 = a2 + v40;
          uint64_t v43 = sub_1001BFE60();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
          break;
        case 5u:
          *(void *)a1 = *(void *)a2;
          uint64_t v44 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
          uint64_t v45 = a1 + v44;
          uint64_t v46 = a2 + v44;
          uint64_t v47 = sub_1001BFE60();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
          break;
        case 6u:
          *(void *)a1 = *(void *)a2;
          *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
          uint64_t v48 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(0)
                       + 24);
          uint64_t v49 = a1 + v48;
          uint64_t v50 = a2 + v48;
          uint64_t v51 = sub_1001BFE60();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
          break;
        default:
          *(void *)a1 = *(void *)a2;
          uint64_t v11 = *(int *)(type metadata accessor for Proto_Ropes_Common_AttestationList(0) + 20);
          uint64_t v12 = a1 + v11;
          uint64_t v13 = a2 + v11;
          uint64_t v14 = sub_1001BFE60();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_28;
    }
LABEL_7:
    uint64_t v15 = sub_100003918(&qword_10020A648);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_28;
  }
  if (v10)
  {
    sub_10005CA14(a1, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_10005CA14(a1, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
        uint64_t v52 = *(int *)(type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0) + 28);
        uint64_t v53 = a1 + v52;
        uint64_t v54 = a2 + v52;
        uint64_t v55 = sub_1001BFE60();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 32))(v53, v54, v55);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        long long v56 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v56;
        uint64_t v57 = (int *)type metadata accessor for Proto_Ropes_Common_Attestation(0);
        uint64_t v58 = v57[6];
        uint64_t v59 = a1 + v58;
        uint64_t v60 = a2 + v58;
        uint64_t v61 = sub_1001BFE60();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 32))(v59, v60, v61);
        uint64_t v62 = v57[7];
        uint64_t v63 = a1 + v62;
        uint64_t v64 = a2 + v62;
        *(_DWORD *)uint64_t v63 = *(_DWORD *)v64;
        *(unsigned char *)(v63 + 4) = *(unsigned char *)(v64 + 4);
        uint64_t v65 = v57[8];
        uint64_t v66 = (void *)(a1 + v65);
        uint64_t v67 = (const void *)(a2 + v65);
        uint64_t v68 = sub_1001BFDF0();
        uint64_t v69 = *(void *)(v68 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68))
        {
          uint64_t v70 = sub_100003918(&qword_100209898);
          memcpy(v66, v67, *(void *)(*(void *)(v70 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v69 + 32))(v66, v67, v68);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
        }
        *(_OWORD *)(a1 + v57[9]) = *(_OWORD *)(a2 + v57[9]);
        *(_OWORD *)(a1 + v57[10]) = *(_OWORD *)(a2 + v57[10]);
        *(_OWORD *)(a1 + v57[11]) = *(_OWORD *)(a2 + v57[11]);
        *(_OWORD *)(a1 + v57[12]) = *(_OWORD *)(a2 + v57[12]);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
      case 7u:
        uint64_t v71 = sub_1001BFE60();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 32))(a1, a2, v71);
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v72 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata(0) + 20);
        uint64_t v73 = a1 + v72;
        uint64_t v74 = a2 + v72;
        uint64_t v75 = sub_1001BFE60();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 32))(v73, v74, v75);
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        *(void *)a1 = *(void *)a2;
        uint64_t v76 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
        uint64_t v77 = a1 + v76;
        uint64_t v78 = a2 + v76;
        uint64_t v79 = sub_1001BFE60();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 32))(v77, v78, v79);
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        uint64_t v80 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(0) + 24);
        uint64_t v81 = a1 + v80;
        uint64_t v82 = a2 + v80;
        uint64_t v83 = sub_1001BFE60();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 32))(v81, v82, v83);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        *(void *)a1 = *(void *)a2;
        uint64_t v16 = *(int *)(type metadata accessor for Proto_Ropes_Common_AttestationList(0) + 20);
        uint64_t v17 = a1 + v16;
        uint64_t v18 = a2 + v16;
        uint64_t v19 = sub_1001BFE60();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
LABEL_28:
  uint64_t v84 = *(int *)(a3 + 20);
  uint64_t v85 = a1 + v84;
  uint64_t v86 = a2 + v84;
  uint64_t v87 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 40))(v85, v86, v87);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Ropes_HttpService_InvokeResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007BC44);
}

uint64_t sub_10007BC44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000520B4(a1, a2, a3, &qword_10020A648);
}

uint64_t storeEnumTagSinglePayload for Proto_Ropes_HttpService_InvokeResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007BC64);
}

uint64_t sub_10007BC64(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1000521CC(a1, a2, a3, a4, &qword_10020A648);
}

void sub_10007BC70(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

unint64_t initializeBufferWithCopyOfBuffer for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v11 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        uint64_t v12 = *(void *)(a2 + 16);
        unint64_t v13 = *(void *)(a2 + 24);
        sub_100007B14(v12, v13);
        *(void *)(a1 + 16) = v12;
        *(void *)(a1 + 24) = v13;
        *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
        uint64_t v14 = *(int *)(type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0) + 28);
        uint64_t v15 = a1 + v14;
        uint64_t v16 = a2 + v14;
        uint64_t v17 = sub_1001BFE60();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
        break;
      case 2u:
        uint64_t v18 = *(void *)a2;
        unint64_t v19 = *(void *)(a2 + 8);
        sub_100007B14(*(void *)a2, v19);
        *(void *)a1 = v18;
        *(void *)(a1 + 8) = v19;
        uint64_t v20 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v20;
        uint64_t v21 = (int *)type metadata accessor for Proto_Ropes_Common_Attestation(0);
        uint64_t v22 = v21[6];
        uint64_t v23 = a1 + v22;
        uint64_t v24 = a2 + v22;
        uint64_t v25 = sub_1001BFE60();
        uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16);
        swift_bridgeObjectRetain();
        v26(v23, v24, v25);
        uint64_t v27 = v21[7];
        uint64_t v28 = a1 + v27;
        uint64_t v29 = a2 + v27;
        *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
        *(unsigned char *)(v28 + 4) = *(unsigned char *)(v29 + 4);
        uint64_t v30 = v21[8];
        uint64_t v31 = (void *)(a1 + v30);
        uint64_t v32 = (const void *)(a2 + v30);
        uint64_t v33 = sub_1001BFDF0();
        uint64_t v34 = *(void *)(v33 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
        {
          uint64_t v35 = sub_100003918(&qword_100209898);
          memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v34 + 16))(v31, v32, v33);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
        }
        uint64_t v53 = v21[9];
        uint64_t v54 = (void *)(a1 + v53);
        uint64_t v55 = (void *)(a2 + v53);
        uint64_t v56 = v55[1];
        *uint64_t v54 = *v55;
        v54[1] = v56;
        uint64_t v57 = v21[10];
        uint64_t v58 = (void *)(a1 + v57);
        uint64_t v59 = (void *)(a2 + v57);
        uint64_t v60 = v59[1];
        *uint64_t v58 = *v59;
        v58[1] = v60;
        uint64_t v61 = v21[11];
        uint64_t v62 = (void *)(a1 + v61);
        uint64_t v63 = (void *)(a2 + v61);
        uint64_t v64 = v63[1];
        *uint64_t v62 = *v63;
        v62[1] = v64;
        uint64_t v65 = v21[12];
        uint64_t v66 = (void *)(a1 + v65);
        uint64_t v67 = (void *)(a2 + v65);
        uint64_t v68 = v67[1];
        *uint64_t v66 = *v67;
        v66[1] = v68;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 3u:
      case 7u:
        uint64_t v36 = sub_1001BFE60();
        (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(a1, a2, v36);
        break;
      case 4u:
        uint64_t v37 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v37;
        uint64_t v38 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata(0) + 20);
        uint64_t v39 = a1 + v38;
        uint64_t v40 = a2 + v38;
        uint64_t v41 = sub_1001BFE60();
        uint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16);
        swift_bridgeObjectRetain();
        v42(v39, v40, v41);
        break;
      case 5u:
        *(void *)a1 = *(void *)a2;
        uint64_t v43 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
        uint64_t v44 = a1 + v43;
        uint64_t v45 = a2 + v43;
        uint64_t v46 = sub_1001BFE60();
        uint64_t v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16);
        swift_bridgeObjectRetain();
        v47(v44, v45, v46);
        break;
      case 6u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        uint64_t v48 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(0) + 24);
        uint64_t v49 = a1 + v48;
        uint64_t v50 = a2 + v48;
        uint64_t v51 = sub_1001BFE60();
        uint64_t v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16);
        swift_bridgeObjectRetain();
        v52(v49, v50, v51);
        break;
      default:
        *(void *)a1 = *(void *)a2;
        uint64_t v6 = *(int *)(type metadata accessor for Proto_Ropes_Common_AttestationList(0) + 20);
        uint64_t v7 = a1 + v6;
        uint64_t v8 = a2 + v6;
        uint64_t v9 = sub_1001BFE60();
        int v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
        swift_bridgeObjectRetain();
        v10(v7, v8, v9);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      uint64_t v3 = type metadata accessor for Proto_Ropes_Common_AttestationList(0);
      goto LABEL_11;
    case 1:
      sub_10000792C(*(void *)(a1 + 16), *(void *)(a1 + 24));
      uint64_t v4 = *(int *)(type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0) + 28);
      goto LABEL_13;
    case 2:
      sub_10000792C(*(void *)a1, *(void *)(a1 + 8));
      swift_bridgeObjectRelease();
      uint64_t v5 = type metadata accessor for Proto_Ropes_Common_Attestation(0);
      uint64_t v6 = a1 + *(int *)(v5 + 24);
      uint64_t v7 = sub_1001BFE60();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
      uint64_t v8 = a1 + *(int *)(v5 + 32);
      uint64_t v9 = sub_1001BFDF0();
      uint64_t v10 = *(void *)(v9 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 3:
    case 7:
      goto LABEL_14;
    case 4:
      swift_bridgeObjectRelease();
      uint64_t v3 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata(0);
      goto LABEL_11;
    case 5:
      swift_bridgeObjectRelease();
      uint64_t v3 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0);
LABEL_11:
      uint64_t v4 = *(int *)(v3 + 20);
      goto LABEL_13;
    case 6:
      swift_bridgeObjectRelease();
      uint64_t v4 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(0) + 24);
LABEL_13:
      a1 += v4;
LABEL_14:
      uint64_t v11 = sub_1001BFE60();
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
      uint64_t result = v12(a1, v11);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(uint64_t a1, uint64_t *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *(void *)a1 = *a2;
      *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
      uint64_t v9 = a2[2];
      unint64_t v10 = a2[3];
      sub_100007B14(v9, v10);
      *(void *)(a1 + 16) = v9;
      *(void *)(a1 + 24) = v10;
      *(_DWORD *)(a1 + 32) = *((_DWORD *)a2 + 8);
      uint64_t v11 = *(int *)(type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0) + 28);
      uint64_t v12 = a1 + v11;
      uint64_t v13 = (uint64_t)a2 + v11;
      uint64_t v14 = sub_1001BFE60();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      break;
    case 2u:
      uint64_t v15 = *a2;
      unint64_t v16 = a2[1];
      sub_100007B14(*a2, v16);
      *(void *)a1 = v15;
      *(void *)(a1 + 8) = v16;
      uint64_t v17 = a2[3];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v17;
      uint64_t v18 = (int *)type metadata accessor for Proto_Ropes_Common_Attestation(0);
      uint64_t v19 = v18[6];
      uint64_t v20 = a1 + v19;
      uint64_t v21 = (uint64_t)a2 + v19;
      uint64_t v22 = sub_1001BFE60();
      uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16);
      swift_bridgeObjectRetain();
      v23(v20, v21, v22);
      uint64_t v24 = v18[7];
      uint64_t v25 = a1 + v24;
      uint64_t v26 = (uint64_t)a2 + v24;
      *(_DWORD *)uint64_t v25 = *(_DWORD *)v26;
      *(unsigned char *)(v25 + 4) = *(unsigned char *)(v26 + 4);
      uint64_t v27 = v18[8];
      uint64_t v28 = (void *)(a1 + v27);
      uint64_t v29 = (char *)a2 + v27;
      uint64_t v30 = sub_1001BFDF0();
      uint64_t v31 = *(void *)(v30 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      {
        uint64_t v32 = sub_100003918(&qword_100209898);
        memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
      uint64_t v50 = v18[9];
      uint64_t v51 = (void *)(a1 + v50);
      uint64_t v52 = (uint64_t *)((char *)a2 + v50);
      uint64_t v53 = v52[1];
      *uint64_t v51 = *v52;
      v51[1] = v53;
      uint64_t v54 = v18[10];
      uint64_t v55 = (void *)(a1 + v54);
      uint64_t v56 = (uint64_t *)((char *)a2 + v54);
      uint64_t v57 = v56[1];
      *uint64_t v55 = *v56;
      v55[1] = v57;
      uint64_t v58 = v18[11];
      uint64_t v59 = (void *)(a1 + v58);
      uint64_t v60 = (uint64_t *)((char *)a2 + v58);
      uint64_t v61 = v60[1];
      *uint64_t v59 = *v60;
      v59[1] = v61;
      uint64_t v62 = v18[12];
      uint64_t v63 = (void *)(a1 + v62);
      uint64_t v64 = (uint64_t *)((char *)a2 + v62);
      uint64_t v65 = v64[1];
      *uint64_t v63 = *v64;
      v63[1] = v65;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 3u:
    case 7u:
      uint64_t v33 = sub_1001BFE60();
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v33 - 8) + 16))(a1, a2, v33);
      break;
    case 4u:
      uint64_t v34 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v34;
      uint64_t v35 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata(0) + 20);
      uint64_t v36 = a1 + v35;
      uint64_t v37 = (uint64_t)a2 + v35;
      uint64_t v38 = sub_1001BFE60();
      uint64_t v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16);
      swift_bridgeObjectRetain();
      v39(v36, v37, v38);
      break;
    case 5u:
      *(void *)a1 = *a2;
      uint64_t v40 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
      uint64_t v41 = a1 + v40;
      uint64_t v42 = (uint64_t)a2 + v40;
      uint64_t v43 = sub_1001BFE60();
      uint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 16);
      swift_bridgeObjectRetain();
      v44(v41, v42, v43);
      break;
    case 6u:
      *(void *)a1 = *a2;
      *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
      uint64_t v45 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(0) + 24);
      uint64_t v46 = a1 + v45;
      uint64_t v47 = (uint64_t)a2 + v45;
      uint64_t v48 = sub_1001BFE60();
      uint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 16);
      swift_bridgeObjectRetain();
      v49(v46, v47, v48);
      break;
    default:
      *(void *)a1 = *a2;
      uint64_t v4 = *(int *)(type metadata accessor for Proto_Ropes_Common_AttestationList(0) + 20);
      uint64_t v5 = a1 + v4;
      uint64_t v6 = (uint64_t)a2 + v4;
      uint64_t v7 = sub_1001BFE60();
      uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
      swift_bridgeObjectRetain();
      v8(v5, v6, v7);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_10005CA14(a1, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v9 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        *(void *)a1 = v9;
        uint64_t v10 = *(void *)(a2 + 16);
        unint64_t v11 = *(void *)(a2 + 24);
        sub_100007B14(v10, v11);
        *(void *)(a1 + 16) = v10;
        *(void *)(a1 + 24) = v11;
        *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
        uint64_t v12 = *(int *)(type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0) + 28);
        uint64_t v13 = a1 + v12;
        uint64_t v14 = a2 + v12;
        uint64_t v15 = sub_1001BFE60();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
        break;
      case 2u:
        uint64_t v16 = *(void *)a2;
        unint64_t v17 = *(void *)(a2 + 8);
        sub_100007B14(*(void *)a2, v17);
        *(void *)a1 = v16;
        *(void *)(a1 + 8) = v17;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        uint64_t v18 = (int *)type metadata accessor for Proto_Ropes_Common_Attestation(0);
        uint64_t v19 = v18[6];
        uint64_t v20 = a1 + v19;
        uint64_t v21 = a2 + v19;
        uint64_t v22 = sub_1001BFE60();
        uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16);
        swift_bridgeObjectRetain();
        v23(v20, v21, v22);
        uint64_t v24 = v18[7];
        uint64_t v25 = a1 + v24;
        uint64_t v26 = a2 + v24;
        char v27 = *(unsigned char *)(v26 + 4);
        *(_DWORD *)uint64_t v25 = *(_DWORD *)v26;
        *(unsigned char *)(v25 + 4) = v27;
        uint64_t v28 = v18[8];
        uint64_t v29 = (void *)(a1 + v28);
        uint64_t v30 = (const void *)(a2 + v28);
        uint64_t v31 = sub_1001BFDF0();
        uint64_t v32 = *(void *)(v31 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
        {
          uint64_t v33 = sub_100003918(&qword_100209898);
          memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v32 + 16))(v29, v30, v31);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
        }
        uint64_t v50 = v18[9];
        uint64_t v51 = (void *)(a1 + v50);
        uint64_t v52 = (void *)(a2 + v50);
        *uint64_t v51 = *v52;
        v51[1] = v52[1];
        uint64_t v53 = v18[10];
        uint64_t v54 = (void *)(a1 + v53);
        uint64_t v55 = (void *)(a2 + v53);
        *uint64_t v54 = *v55;
        v54[1] = v55[1];
        uint64_t v56 = v18[11];
        uint64_t v57 = (void *)(a1 + v56);
        uint64_t v58 = (void *)(a2 + v56);
        *uint64_t v57 = *v58;
        v57[1] = v58[1];
        uint64_t v59 = v18[12];
        uint64_t v60 = (void *)(a1 + v59);
        uint64_t v61 = (void *)(a2 + v59);
        *uint64_t v60 = *v61;
        v60[1] = v61[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 3u:
      case 7u:
        uint64_t v34 = sub_1001BFE60();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(a1, a2, v34);
        break;
      case 4u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v35 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata(0) + 20);
        uint64_t v36 = a1 + v35;
        uint64_t v37 = a2 + v35;
        uint64_t v38 = sub_1001BFE60();
        uint64_t v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16);
        swift_bridgeObjectRetain();
        v39(v36, v37, v38);
        break;
      case 5u:
        *(void *)a1 = *(void *)a2;
        uint64_t v40 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
        uint64_t v41 = a1 + v40;
        uint64_t v42 = a2 + v40;
        uint64_t v43 = sub_1001BFE60();
        uint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 16);
        swift_bridgeObjectRetain();
        v44(v41, v42, v43);
        break;
      case 6u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        uint64_t v45 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(0) + 24);
        uint64_t v46 = a1 + v45;
        uint64_t v47 = a2 + v45;
        uint64_t v48 = sub_1001BFE60();
        uint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 16);
        swift_bridgeObjectRetain();
        v49(v46, v47, v48);
        break;
      default:
        *(void *)a1 = *(void *)a2;
        uint64_t v4 = *(int *)(type metadata accessor for Proto_Ropes_Common_AttestationList(0) + 20);
        uint64_t v5 = a1 + v4;
        uint64_t v6 = a2 + v4;
        uint64_t v7 = sub_1001BFE60();
        uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
        swift_bridgeObjectRetain();
        v8(v5, v6, v7);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
      uint64_t v8 = *(int *)(type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0) + 28);
      uint64_t v9 = a1 + v8;
      uint64_t v10 = a2 + v8;
      uint64_t v11 = sub_1001BFE60();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      break;
    case 2u:
      long long v12 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v12;
      uint64_t v13 = (int *)type metadata accessor for Proto_Ropes_Common_Attestation(0);
      uint64_t v14 = v13[6];
      uint64_t v15 = a1 + v14;
      uint64_t v16 = a2 + v14;
      uint64_t v17 = sub_1001BFE60();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
      uint64_t v18 = v13[7];
      uint64_t v19 = a1 + v18;
      uint64_t v20 = a2 + v18;
      *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
      *(unsigned char *)(v19 + 4) = *(unsigned char *)(v20 + 4);
      uint64_t v21 = v13[8];
      uint64_t v22 = (void *)(a1 + v21);
      uint64_t v23 = (const void *)(a2 + v21);
      uint64_t v24 = sub_1001BFDF0();
      uint64_t v25 = *(void *)(v24 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      {
        uint64_t v26 = sub_100003918(&qword_100209898);
        memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v25 + 32))(v22, v23, v24);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      }
      *(_OWORD *)(a1 + v13[9]) = *(_OWORD *)(a2 + v13[9]);
      *(_OWORD *)(a1 + v13[10]) = *(_OWORD *)(a2 + v13[10]);
      *(_OWORD *)(a1 + v13[11]) = *(_OWORD *)(a2 + v13[11]);
      *(_OWORD *)(a1 + v13[12]) = *(_OWORD *)(a2 + v13[12]);
      break;
    case 3u:
    case 7u:
      uint64_t v27 = sub_1001BFE60();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32))(a1, a2, v27);
      break;
    case 4u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v28 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata(0) + 20);
      uint64_t v29 = a1 + v28;
      uint64_t v30 = a2 + v28;
      uint64_t v31 = sub_1001BFE60();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
      break;
    case 5u:
      *(void *)a1 = *(void *)a2;
      uint64_t v32 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
      uint64_t v33 = a1 + v32;
      uint64_t v34 = a2 + v32;
      uint64_t v35 = sub_1001BFE60();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
      break;
    case 6u:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      uint64_t v36 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(0) + 24);
      uint64_t v37 = a1 + v36;
      uint64_t v38 = a2 + v36;
      uint64_t v39 = sub_1001BFE60();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
      break;
    default:
      *(void *)a1 = *(void *)a2;
      uint64_t v4 = *(int *)(type metadata accessor for Proto_Ropes_Common_AttestationList(0) + 20);
      uint64_t v5 = a1 + v4;
      uint64_t v6 = a2 + v4;
      uint64_t v7 = sub_1001BFE60();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_10005CA14(a1, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
        uint64_t v8 = *(int *)(type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0) + 28);
        uint64_t v9 = a1 + v8;
        uint64_t v10 = a2 + v8;
        uint64_t v11 = sub_1001BFE60();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
        break;
      case 2u:
        long long v12 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v12;
        uint64_t v13 = (int *)type metadata accessor for Proto_Ropes_Common_Attestation(0);
        uint64_t v14 = v13[6];
        uint64_t v15 = a1 + v14;
        uint64_t v16 = a2 + v14;
        uint64_t v17 = sub_1001BFE60();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
        uint64_t v18 = v13[7];
        uint64_t v19 = a1 + v18;
        uint64_t v20 = a2 + v18;
        *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
        *(unsigned char *)(v19 + 4) = *(unsigned char *)(v20 + 4);
        uint64_t v21 = v13[8];
        uint64_t v22 = (void *)(a1 + v21);
        uint64_t v23 = (const void *)(a2 + v21);
        uint64_t v24 = sub_1001BFDF0();
        uint64_t v25 = *(void *)(v24 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
        {
          uint64_t v26 = sub_100003918(&qword_100209898);
          memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v25 + 32))(v22, v23, v24);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
        }
        *(_OWORD *)(a1 + v13[9]) = *(_OWORD *)(a2 + v13[9]);
        *(_OWORD *)(a1 + v13[10]) = *(_OWORD *)(a2 + v13[10]);
        *(_OWORD *)(a1 + v13[11]) = *(_OWORD *)(a2 + v13[11]);
        *(_OWORD *)(a1 + v13[12]) = *(_OWORD *)(a2 + v13[12]);
        break;
      case 3u:
      case 7u:
        uint64_t v27 = sub_1001BFE60();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32))(a1, a2, v27);
        break;
      case 4u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v28 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata(0) + 20);
        uint64_t v29 = a1 + v28;
        uint64_t v30 = a2 + v28;
        uint64_t v31 = sub_1001BFE60();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
        break;
      case 5u:
        *(void *)a1 = *(void *)a2;
        uint64_t v32 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
        uint64_t v33 = a1 + v32;
        uint64_t v34 = a2 + v32;
        uint64_t v35 = sub_1001BFE60();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
        break;
      case 6u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        uint64_t v36 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(0) + 24);
        uint64_t v37 = a1 + v36;
        uint64_t v38 = a2 + v36;
        uint64_t v39 = sub_1001BFE60();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
        break;
      default:
        *(void *)a1 = *(void *)a2;
        uint64_t v4 = *(int *)(type metadata accessor for Proto_Ropes_Common_AttestationList(0) + 20);
        uint64_t v5 = a1 + v4;
        uint64_t v6 = a2 + v4;
        uint64_t v7 = sub_1001BFE60();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10007DA2C()
{
  uint64_t result = type metadata accessor for Proto_Ropes_Common_AttestationList(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for Proto_Ropes_Common_Attestation(319);
      if (v3 <= 0x3F)
      {
        uint64_t result = sub_1001BFE60();
        if (v4 <= 0x3F)
        {
          uint64_t result = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata(319);
          if (v5 <= 0x3F)
          {
            uint64_t result = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(319);
            if (v6 <= 0x3F)
            {
              uint64_t result = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(319);
              if (v7 <= 0x3F)
              {
                swift_initEnumMetadataMultiPayload();
                return 0;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Proto_Ropes_HttpService_InvokeResponse.NodeSelected(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007DC48);
}

uint64_t storeEnumTagSinglePayload for Proto_Ropes_HttpService_InvokeResponse.NodeSelected(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007DC60);
}

uint64_t getEnumTagSinglePayload for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007DC7C);
}

uint64_t storeEnumTagSinglePayload for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007DC94);
}

uint64_t getEnumTagSinglePayload for Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007DCAC);
}

uint64_t sub_10007DCB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BFE60();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for Proto_Ropes_HttpService_InvokeResponse.NoFurtherAttestations(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007DD30);
}

uint64_t sub_10007DD34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BFE60();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t getEnumTagSinglePayload for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007DDB8);
}

uint64_t storeEnumTagSinglePayload for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007DDD0);
}

uint64_t sub_10007DDD4()
{
  return sub_1000442D4();
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Ropes_HttpService_PrefetchRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1001BFE60();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_100003918(&qword_10020A638);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      *(void *)uint64_t v10 = *(void *)v11;
      v10[8] = v11[8];
      uint64_t v16 = *(int *)(v12 + 24);
      uint64_t v22 = (uint64_t *)&v10[v16];
      uint64_t v17 = (uint64_t *)&v11[v16];
      swift_bridgeObjectRetain();
      v8(v22, v17, v7);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v18 = *(int *)(a3 + 24);
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
    v19[4] = v20[4];
  }
  return a1;
}

uint64_t destroy for Proto_Ropes_HttpService_PrefetchRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BFE60();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v9(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = v5 + *(int *)(v6 + 24);
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v8, v4);
  }
  return result;
}

uint64_t initializeWithCopy for Proto_Ropes_HttpService_PrefetchRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001BFE60();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (unsigned char *)(a1 + v8);
  uint64_t v10 = (unsigned char *)(a2 + v8);
  uint64_t v11 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100003918(&qword_10020A638);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v9 = *(void *)v10;
    v9[8] = v10[8];
    uint64_t v14 = *(int *)(v11 + 24);
    uint64_t v20 = &v9[v14];
    uint64_t v15 = &v10[v14];
    swift_bridgeObjectRetain();
    v7((uint64_t)v20, (uint64_t)v15, v6);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(unsigned char *)(v17 + 4) = *(unsigned char *)(v18 + 4);
  return a1;
}

uint64_t assignWithCopy for Proto_Ropes_HttpService_PrefetchRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001BFE60();
  uint64_t v26 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 24);
  v7(a1, a2, v6);
  uint64_t v27 = a1;
  uint64_t v28 = a3;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (unsigned char *)(a1 + v8);
  uint64_t v29 = a2;
  uint64_t v10 = (unsigned char *)(a2 + v8);
  uint64_t v11 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      *(void *)uint64_t v9 = *(void *)v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v9[8] = v10[8];
      v7((uint64_t)&v9[*(int *)(v11 + 24)], (uint64_t)&v10[*(int *)(v11 + 24)], v6);
      goto LABEL_7;
    }
    sub_10005CA14((uint64_t)v9, type metadata accessor for Proto_Ropes_Common_Capabilities);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v20 = sub_100003918(&qword_10020A638);
    memcpy(v9, v10, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  *(void *)uint64_t v9 = *(void *)v10;
  v9[8] = v10[8];
  uint64_t v16 = *(int *)(v11 + 24);
  uint64_t v17 = &v9[v16];
  uint64_t v18 = &v10[v16];
  uint64_t v19 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v26 + 16);
  swift_bridgeObjectRetain();
  v19(v17, v18, v6);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  uint64_t result = v27;
  uint64_t v22 = *(int *)(v28 + 24);
  uint64_t v23 = v27 + v22;
  uint64_t v24 = (int *)(v29 + v22);
  int v25 = *v24;
  *(unsigned char *)(v23 + 4) = *((unsigned char *)v24 + 4);
  *(_DWORD *)uint64_t v23 = v25;
  return result;
}

unsigned char *initializeWithTake for Proto_Ropes_HttpService_PrefetchRequest(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1001BFE60();
  uint64_t v7 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100003918(&qword_10020A638);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v9 = *(void *)v10;
    v9[8] = v10[8];
    v7(&v9[*(int *)(v11 + 24)], &v10[*(int *)(v11 + 24)], v6);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v14 = *(int *)(a3 + 24);
  int v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  *(_DWORD *)int v15 = *(_DWORD *)v16;
  v15[4] = v16[4];
  return a1;
}

uint64_t assignWithTake for Proto_Ropes_HttpService_PrefetchRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001BFE60();
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 40);
  v7(a1, a2, v6);
  uint64_t v22 = a1;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (unsigned char *)(a1 + v8);
  uint64_t v23 = a2;
  uint64_t v10 = (unsigned char *)(a2 + v8);
  uint64_t v11 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      *(void *)uint64_t v9 = *(void *)v10;
      swift_bridgeObjectRelease();
      v9[8] = v10[8];
      v7((uint64_t)&v9[*(int *)(v11 + 24)], (uint64_t)&v10[*(int *)(v11 + 24)], v6);
      goto LABEL_7;
    }
    sub_10005CA14((uint64_t)v9, type metadata accessor for Proto_Ropes_Common_Capabilities);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_100003918(&qword_10020A638);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *(void *)uint64_t v9 = *(void *)v10;
  v9[8] = v10[8];
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v21 + 32))(&v9[*(int *)(v11 + 24)], &v10[*(int *)(v11 + 24)], v6);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  uint64_t result = v22;
  uint64_t v18 = *(int *)(a3 + 24);
  uint64_t v19 = v22 + v18;
  uint64_t v20 = v23 + v18;
  *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
  *(unsigned char *)(v19 + 4) = *(unsigned char *)(v20 + 4);
  return result;
}

uint64_t getEnumTagSinglePayload for Proto_Ropes_HttpService_PrefetchRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007E8D4);
}

uint64_t sub_10007E8D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001BFE60();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_100003918(&qword_10020A638);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for Proto_Ropes_HttpService_PrefetchRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007E9E4);
}

uint64_t sub_10007E9E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1001BFE60();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_100003918(&qword_10020A638);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_10007EAEC()
{
  sub_1001BFE60();
  if (v0 <= 0x3F)
  {
    sub_100078104(319, (unint64_t *)&unk_10020AAB0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_Capabilities);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Ropes_HttpService_PrefetchUnaryResponse(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1001BFE60();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = (uint64_t *)((char *)v7 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0);
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v31 = v12;
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = sub_100003918(&qword_10020A650);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      *uint64_t v14 = *v15;
      uint64_t v19 = *(int *)(v16 + 20);
      uint64_t v20 = (char *)v14 + v19;
      uint64_t v21 = (char *)v15 + v19;
      swift_bridgeObjectRetain();
      v12(v20, v21, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v22 = a3[7];
    uint64_t v23 = (uint64_t *)((char *)v7 + v22);
    uint64_t v24 = (uint64_t *)((char *)a2 + v22);
    uint64_t v25 = type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0);
    uint64_t v26 = *(void *)(v25 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      uint64_t v27 = sub_100003918(&qword_10020A658);
      memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      *uint64_t v23 = *v24;
      *((unsigned char *)v23 + 8) = *((unsigned char *)v24 + 8);
      uint64_t v28 = v24[2];
      unint64_t v29 = v24[3];
      sub_100007B14(v28, v29);
      void v23[2] = v28;
      void v23[3] = v29;
      *((_DWORD *)v23 + 8) = *((_DWORD *)v24 + 8);
      v31((char *)v23 + *(int *)(v25 + 28), (char *)v24 + *(int *)(v25 + 28), v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
  }
  return v7;
}

uint64_t destroy for Proto_Ropes_HttpService_PrefetchUnaryResponse(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_1001BFE60();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v12(v4, v5);
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    v12(v6 + *(int *)(v7 + 20), v5);
  }
  uint64_t v8 = a1 + a2[7];
  uint64_t v9 = type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9);
  if (!result)
  {
    sub_10000792C(*(void *)(v8 + 16), *(void *)(v8 + 24));
    uint64_t v11 = v8 + *(int *)(v9 + 28);
    return ((uint64_t (*)(uint64_t, uint64_t))v12)(v11, v5);
  }
  return result;
}

void *initializeWithCopy for Proto_Ropes_HttpService_PrefetchUnaryResponse(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001BFE60();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0);
  uint64_t v15 = *(void *)(v14 - 8);
  unint64_t v29 = v10;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_100003918(&qword_10020A650);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    void *v12 = *v13;
    uint64_t v17 = *(int *)(v14 + 20);
    uint64_t v18 = (char *)v12 + v17;
    uint64_t v19 = (char *)v13 + v17;
    swift_bridgeObjectRetain();
    v10(v18, v19, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v20 = a3[7];
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  uint64_t v23 = type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0);
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    uint64_t v25 = sub_100003918(&qword_10020A658);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    *uint64_t v21 = *v22;
    *((unsigned char *)v21 + 8) = *((unsigned char *)v22 + 8);
    uint64_t v26 = v22[2];
    unint64_t v27 = v22[3];
    sub_100007B14(v26, v27);
    v21[2] = v26;
    v21[3] = v27;
    *((_DWORD *)v21 + 8) = *((_DWORD *)v22 + 8);
    v29((char *)v21 + *(int *)(v23 + 28), (char *)v22 + *(int *)(v23 + 28), v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  return a1;
}

void *assignWithCopy for Proto_Ropes_HttpService_PrefetchUnaryResponse(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001BFE60();
  uint64_t v42 = *(void *)(v9 - 8);
  uint64_t v43 = v9;
  uint64_t v41 = *(void (**)(char *, char *))(v42 + 24);
  v41(v7, v8);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *uint64_t v11 = *v12;
      uint64_t v18 = *(int *)(v13 + 20);
      uint64_t v19 = (char *)v11 + v18;
      uint64_t v20 = (char *)v12 + v18;
      uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v42 + 16);
      swift_bridgeObjectRetain();
      v21(v19, v20, v43);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_10005CA14((uint64_t)v11, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
LABEL_6:
    uint64_t v22 = sub_100003918(&qword_10020A650);
    memcpy(v11, v12, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v11 = *v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  ((void (*)(char *, char *, uint64_t))v41)((char *)v11 + *(int *)(v13 + 20), (char *)v12 + *(int *)(v13 + 20), v43);
LABEL_7:
  uint64_t v23 = a3[7];
  uint64_t v24 = (uint64_t)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
  int v29 = v28(v24, 1, v26);
  int v30 = v28((uint64_t)v25, 1, v26);
  if (!v29)
  {
    if (!v30)
    {
      uint64_t v36 = *(void *)v25;
      *(unsigned char *)(v24 + 8) = v25[8];
      *(void *)uint64_t v24 = v36;
      uint64_t v37 = *((void *)v25 + 2);
      unint64_t v38 = *((void *)v25 + 3);
      sub_100007B14(v37, v38);
      uint64_t v39 = *(void *)(v24 + 16);
      unint64_t v40 = *(void *)(v24 + 24);
      *(void *)(v24 + 16) = v37;
      *(void *)(v24 + 24) = v38;
      sub_10000792C(v39, v40);
      *(_DWORD *)(v24 + 32) = *((_DWORD *)v25 + 8);
      ((void (*)(uint64_t, char *, uint64_t))v41)(v24 + *(int *)(v26 + 28), &v25[*(int *)(v26 + 28)], v43);
      return a1;
    }
    sub_10005CA14(v24, type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
    goto LABEL_12;
  }
  if (v30)
  {
LABEL_12:
    uint64_t v34 = sub_100003918(&qword_10020A658);
    memcpy((void *)v24, v25, *(void *)(*(void *)(v34 - 8) + 64));
    return a1;
  }
  uint64_t v31 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = v25[8];
  *(void *)uint64_t v24 = v31;
  uint64_t v32 = *((void *)v25 + 2);
  unint64_t v33 = *((void *)v25 + 3);
  sub_100007B14(v32, v33);
  *(void *)(v24 + 16) = v32;
  *(void *)(v24 + 24) = v33;
  *(_DWORD *)(v24 + 32) = *((_DWORD *)v25 + 8);
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 16))(v24 + *(int *)(v26 + 28), &v25[*(int *)(v26 + 28)], v43);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  return a1;
}

void *initializeWithTake for Proto_Ropes_HttpService_PrefetchUnaryResponse(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001BFE60();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_100003918(&qword_10020A650);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    void *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v20 = type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0);
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    uint64_t v22 = sub_100003918(&qword_10020A658);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    *uint64_t v18 = *v19;
    *((unsigned char *)v18 + 8) = *((unsigned char *)v19 + 8);
    *((_OWORD *)v18 + 1) = *((_OWORD *)v19 + 1);
    *((_DWORD *)v18 + 8) = *((_DWORD *)v19 + 8);
    v10((char *)v18 + *(int *)(v20 + 28), (char *)v19 + *(int *)(v20 + 28), v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  return a1;
}

void *assignWithTake for Proto_Ropes_HttpService_PrefetchUnaryResponse(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001BFE60();
  uint64_t v32 = *(void *)(v9 - 8);
  uint64_t v33 = v9;
  uint64_t v31 = *(void (**)(char *, char *))(v32 + 40);
  v31(v7, v8);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *(void *)uint64_t v11 = *(void *)v12;
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v33);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_10005CA14((uint64_t)v11, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
LABEL_6:
    uint64_t v18 = sub_100003918(&qword_10020A650);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *(void *)uint64_t v11 = *(void *)v12;
  swift_bridgeObjectRelease();
  ((void (*)(char *, char *, uint64_t))v31)(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v33);
LABEL_7:
  uint64_t v19 = a3[7];
  uint64_t v20 = (uint64_t)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  int v25 = v24(v20, 1, v22);
  int v26 = v24((uint64_t)v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      *(void *)uint64_t v20 = *(void *)v21;
      *(unsigned char *)(v20 + 8) = v21[8];
      uint64_t v29 = *(void *)(v20 + 16);
      unint64_t v30 = *(void *)(v20 + 24);
      *(_OWORD *)(v20 + 16) = *((_OWORD *)v21 + 1);
      sub_10000792C(v29, v30);
      *(_DWORD *)(v20 + 32) = *((_DWORD *)v21 + 8);
      ((void (*)(uint64_t, char *, uint64_t))v31)(v20 + *(int *)(v22 + 28), &v21[*(int *)(v22 + 28)], v33);
      return a1;
    }
    sub_10005CA14(v20, type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    uint64_t v27 = sub_100003918(&qword_10020A658);
    memcpy((void *)v20, v21, *(void *)(*(void *)(v27 - 8) + 64));
    return a1;
  }
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = v21[8];
  *(_OWORD *)(v20 + 16) = *((_OWORD *)v21 + 1);
  *(_DWORD *)(v20 + 32) = *((_DWORD *)v21 + 8);
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v20 + *(int *)(v22 + 28), &v21[*(int *)(v22 + 28)], v33);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Ropes_HttpService_PrefetchUnaryResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007FD74);
}

uint64_t sub_10007FD74(char *a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_1001BFE60();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
    return v13(&a1[v11], a2, v9);
  }
  uint64_t v12 = sub_100003918(&qword_10020A650);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[6];
    goto LABEL_9;
  }
  uint64_t v14 = sub_100003918(&qword_10020A658);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  int v17 = &a1[a3[7]];
  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for Proto_Ropes_HttpService_PrefetchUnaryResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007FF08);
}

char *sub_10007FF08(char *result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)uint64_t result = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_1001BFE60();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return (char *)v13(&v5[v11], a2, a2, v9);
  }
  uint64_t v12 = sub_100003918(&qword_10020A650);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_7;
  }
  uint64_t v14 = sub_100003918(&qword_10020A658);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  int v17 = &v5[a4[7]];
  return (char *)v15(v17, a2, a2, v16);
}

void sub_100080088()
{
  sub_1001BFE60();
  if (v0 <= 0x3F)
  {
    sub_100078104(319, &qword_10020B130, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
    if (v1 <= 0x3F)
    {
      sub_100078104(319, (unint64_t *)&unk_10020B138, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Ropes_HttpService_PrefetchResponse(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_100003918(&qword_10020A660);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v55 = v8;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *a1 = *a2;
        uint64_t v11 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
        uint64_t v12 = (char *)a1 + v11;
        uint64_t v13 = (char *)a2 + v11;
        uint64_t v14 = sub_1001BFE60();
        uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
        swift_bridgeObjectRetain();
        v15(v12, v13, v14);
      }
      else
      {
        uint64_t v16 = *a2;
        unint64_t v17 = a2[1];
        sub_100007B14(*a2, v17);
        *a1 = v16;
        a1[1] = v17;
        uint64_t v18 = a2[3];
        a1[2] = a2[2];
        a1[3] = v18;
        uint64_t v19 = (int *)type metadata accessor for Proto_Ropes_Common_Attestation(0);
        uint64_t v20 = v19[6];
        uint64_t v54 = (char *)a1 + v20;
        uint64_t v21 = (char *)a2 + v20;
        uint64_t v22 = sub_1001BFE60();
        uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
        swift_bridgeObjectRetain();
        v23(v54, v21, v22);
        uint64_t v24 = v19[7];
        int v25 = (char *)a1 + v24;
        int v26 = (char *)a2 + v24;
        *(_DWORD *)int v25 = *(_DWORD *)v26;
        v25[4] = v26[4];
        uint64_t v27 = v19[8];
        uint64_t v28 = (char *)a1 + v27;
        uint64_t v29 = (char *)a2 + v27;
        uint64_t v30 = sub_1001BFDF0();
        uint64_t v31 = *(void *)(v30 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
        {
          uint64_t v32 = sub_100003918(&qword_100209898);
          memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
        }
        uint64_t v33 = v19[9];
        uint64_t v34 = (uint64_t *)((char *)a1 + v33);
        uint64_t v35 = (uint64_t *)((char *)a2 + v33);
        uint64_t v36 = v35[1];
        *uint64_t v34 = *v35;
        v34[1] = v36;
        uint64_t v37 = v19[10];
        unint64_t v38 = (uint64_t *)((char *)a1 + v37);
        uint64_t v39 = (uint64_t *)((char *)a2 + v37);
        uint64_t v40 = v39[1];
        *unint64_t v38 = *v39;
        v38[1] = v40;
        uint64_t v41 = v19[11];
        uint64_t v42 = (uint64_t *)((char *)a1 + v41);
        uint64_t v43 = (uint64_t *)((char *)a2 + v41);
        uint64_t v44 = v43[1];
        *uint64_t v42 = *v43;
        v42[1] = v44;
        uint64_t v45 = v19[12];
        uint64_t v46 = (uint64_t *)((char *)a1 + v45);
        uint64_t v47 = (uint64_t *)((char *)a2 + v45);
        uint64_t v48 = v47[1];
        *uint64_t v46 = *v47;
        v46[1] = v48;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v55 + 56))(a1, 0, 1, v7);
    }
    uint64_t v49 = *(int *)(a3 + 20);
    uint64_t v50 = (char *)a1 + v49;
    uint64_t v51 = (char *)a2 + v49;
    uint64_t v52 = sub_1001BFE60();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
  }
  return a1;
}

uint64_t destroy for Proto_Ropes_HttpService_PrefetchResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v5 = a1 + *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
      uint64_t v6 = sub_1001BFE60();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
    }
    else
    {
      sub_10000792C(*(void *)a1, *(void *)(a1 + 8));
      swift_bridgeObjectRelease();
      uint64_t v7 = type metadata accessor for Proto_Ropes_Common_Attestation(0);
      uint64_t v8 = a1 + *(int *)(v7 + 24);
      uint64_t v9 = sub_1001BFE60();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
      uint64_t v10 = a1 + *(int *)(v7 + 32);
      uint64_t v11 = sub_1001BFDF0();
      uint64_t v12 = *(void *)(v11 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v13 = a1 + *(int *)(a2 + 20);
  uint64_t v14 = sub_1001BFE60();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
  return v15(v13, v14);
}

void *initializeWithCopy for Proto_Ropes_HttpService_PrefetchResponse(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100003918(&qword_10020A660);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v54 = v7;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v9 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_1001BFE60();
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      v13(v10, v11, v12);
      uint64_t v14 = v54;
    }
    else
    {
      uint64_t v15 = *a2;
      unint64_t v16 = a2[1];
      sub_100007B14(*a2, v16);
      *a1 = v15;
      a1[1] = v16;
      uint64_t v17 = a2[3];
      a1[2] = a2[2];
      a1[3] = v17;
      uint64_t v18 = (int *)type metadata accessor for Proto_Ropes_Common_Attestation(0);
      uint64_t v19 = v18[6];
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      uint64_t v22 = sub_1001BFE60();
      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
      swift_bridgeObjectRetain();
      v23(v20, v21, v22);
      uint64_t v24 = v18[7];
      int v25 = (char *)a1 + v24;
      int v26 = (char *)a2 + v24;
      *(_DWORD *)int v25 = *(_DWORD *)v26;
      v25[4] = v26[4];
      uint64_t v27 = v18[8];
      uint64_t v28 = (char *)a1 + v27;
      uint64_t v29 = (char *)a2 + v27;
      uint64_t v30 = sub_1001BFDF0();
      uint64_t v31 = *(void *)(v30 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      {
        uint64_t v32 = sub_100003918(&qword_100209898);
        memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
      uint64_t v14 = v54;
      uint64_t v33 = v18[9];
      uint64_t v34 = (void *)((char *)a1 + v33);
      uint64_t v35 = (void *)((char *)a2 + v33);
      uint64_t v36 = v35[1];
      *uint64_t v34 = *v35;
      v34[1] = v36;
      uint64_t v37 = v18[10];
      unint64_t v38 = (void *)((char *)a1 + v37);
      uint64_t v39 = (void *)((char *)a2 + v37);
      uint64_t v40 = v39[1];
      *unint64_t v38 = *v39;
      v38[1] = v40;
      uint64_t v41 = v18[11];
      uint64_t v42 = (void *)((char *)a1 + v41);
      uint64_t v43 = (void *)((char *)a2 + v41);
      uint64_t v44 = v43[1];
      *uint64_t v42 = *v43;
      v42[1] = v44;
      uint64_t v45 = v18[12];
      uint64_t v46 = (void *)((char *)a1 + v45);
      uint64_t v47 = (void *)((char *)a2 + v45);
      uint64_t v48 = v47[1];
      *uint64_t v46 = *v47;
      v46[1] = v48;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v6);
  }
  uint64_t v49 = *(int *)(a3 + 20);
  uint64_t v50 = (char *)a1 + v49;
  uint64_t v51 = (char *)a2 + v49;
  uint64_t v52 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
  return a1;
}

uint64_t *assignWithCopy for Proto_Ropes_HttpService_PrefetchResponse(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *a1 = *a2;
        uint64_t v11 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
        uint64_t v86 = (char *)a1 + v11;
        uint64_t v12 = (char *)a2 + v11;
        uint64_t v13 = sub_1001BFE60();
        uint64_t v14 = a3;
        uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
        swift_bridgeObjectRetain();
        v15(v86, v12, v13);
        a3 = v14;
      }
      else
      {
        uint64_t v87 = a3;
        uint64_t v22 = *a2;
        unint64_t v23 = a2[1];
        sub_100007B14(*a2, v23);
        *a1 = v22;
        a1[1] = v23;
        a1[2] = a2[2];
        a1[3] = a2[3];
        uint64_t v24 = (int *)type metadata accessor for Proto_Ropes_Common_Attestation(0);
        uint64_t v25 = v24[6];
        uint64_t v85 = (char *)a1 + v25;
        int v26 = (char *)a2 + v25;
        uint64_t v27 = sub_1001BFE60();
        uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
        swift_bridgeObjectRetain();
        v28(v85, v26, v27);
        uint64_t v29 = v24[7];
        uint64_t v30 = (char *)a1 + v29;
        uint64_t v31 = (char *)a2 + v29;
        char v32 = v31[4];
        *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
        v30[4] = v32;
        uint64_t v33 = v24[8];
        uint64_t v34 = (char *)a1 + v33;
        uint64_t v35 = (char *)a2 + v33;
        uint64_t v36 = sub_1001BFDF0();
        uint64_t v37 = *(void *)(v36 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
        {
          uint64_t v38 = sub_100003918(&qword_100209898);
          memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
        }
        a3 = v87;
        uint64_t v56 = v24[9];
        uint64_t v57 = (uint64_t *)((char *)a1 + v56);
        uint64_t v58 = (uint64_t *)((char *)a2 + v56);
        *uint64_t v57 = *v58;
        v57[1] = v58[1];
        uint64_t v59 = v24[10];
        uint64_t v60 = (uint64_t *)((char *)a1 + v59);
        uint64_t v61 = (uint64_t *)((char *)a2 + v59);
        *uint64_t v60 = *v61;
        v60[1] = v61[1];
        uint64_t v62 = v24[11];
        uint64_t v63 = (uint64_t *)((char *)a1 + v62);
        uint64_t v64 = (uint64_t *)((char *)a2 + v62);
        *uint64_t v63 = *v64;
        v63[1] = v64[1];
        uint64_t v65 = v24[12];
        uint64_t v66 = (uint64_t *)((char *)a1 + v65);
        uint64_t v67 = (uint64_t *)((char *)a2 + v65);
        *uint64_t v66 = *v67;
        v66[1] = v67[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_18;
    }
LABEL_7:
    uint64_t v16 = sub_100003918(&qword_10020A660);
    memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_18;
  }
  if (v10)
  {
    sub_10005CA14((uint64_t)a1, type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_10005CA14((uint64_t)a1, type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v17 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
      uint64_t v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      uint64_t v20 = sub_1001BFE60();
      uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
      swift_bridgeObjectRetain();
      v21(v18, v19, v20);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      uint64_t v39 = *a2;
      unint64_t v40 = a2[1];
      sub_100007B14(*a2, v40);
      *a1 = v39;
      a1[1] = v40;
      a1[2] = a2[2];
      a1[3] = a2[3];
      uint64_t v41 = (int *)type metadata accessor for Proto_Ropes_Common_Attestation(0);
      uint64_t v42 = v41[6];
      uint64_t v88 = (char *)a1 + v42;
      uint64_t v43 = (char *)a2 + v42;
      uint64_t v44 = sub_1001BFE60();
      uint64_t v45 = *(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16);
      swift_bridgeObjectRetain();
      v45(v88, v43, v44);
      uint64_t v46 = v41[7];
      uint64_t v47 = (char *)a1 + v46;
      uint64_t v48 = (char *)a2 + v46;
      char v49 = v48[4];
      *(_DWORD *)uint64_t v47 = *(_DWORD *)v48;
      v47[4] = v49;
      uint64_t v50 = v41[8];
      uint64_t v51 = (char *)a1 + v50;
      uint64_t v52 = (char *)a2 + v50;
      uint64_t v53 = sub_1001BFDF0();
      uint64_t v54 = *(void *)(v53 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
      {
        uint64_t v55 = sub_100003918(&qword_100209898);
        memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v51, v52, v53);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
      }
      uint64_t v73 = v41[9];
      uint64_t v74 = (uint64_t *)((char *)a1 + v73);
      uint64_t v75 = (uint64_t *)((char *)a2 + v73);
      *uint64_t v74 = *v75;
      v74[1] = v75[1];
      uint64_t v76 = v41[10];
      uint64_t v77 = (uint64_t *)((char *)a1 + v76);
      uint64_t v78 = (uint64_t *)((char *)a2 + v76);
      *uint64_t v77 = *v78;
      v77[1] = v78[1];
      uint64_t v79 = v41[11];
      uint64_t v80 = (uint64_t *)((char *)a1 + v79);
      uint64_t v81 = (uint64_t *)((char *)a2 + v79);
      *uint64_t v80 = *v81;
      v80[1] = v81[1];
      uint64_t v82 = v41[12];
      uint64_t v83 = (uint64_t *)((char *)a1 + v82);
      uint64_t v84 = (uint64_t *)((char *)a2 + v82);
      *uint64_t v83 = *v84;
      v83[1] = v84[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_18:
  uint64_t v68 = *(int *)(a3 + 20);
  uint64_t v69 = (char *)a1 + v68;
  uint64_t v70 = (char *)a2 + v68;
  uint64_t v71 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 24))(v69, v70, v71);
  return a1;
}

_OWORD *initializeWithTake for Proto_Ropes_HttpService_PrefetchResponse(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100003918(&qword_10020A660);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)a1 = *(void *)a2;
      uint64_t v9 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
      int v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_1001BFE60();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    }
    else
    {
      long long v13 = a2[1];
      *a1 = *a2;
      a1[1] = v13;
      uint64_t v14 = (int *)type metadata accessor for Proto_Ropes_Common_Attestation(0);
      uint64_t v15 = v14[6];
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = sub_1001BFE60();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      uint64_t v19 = v14[7];
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
      v20[4] = v21[4];
      uint64_t v22 = v14[8];
      unint64_t v23 = (char *)a1 + v22;
      uint64_t v24 = (char *)a2 + v22;
      uint64_t v25 = sub_1001BFDF0();
      uint64_t v26 = *(void *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      {
        uint64_t v27 = sub_100003918(&qword_100209898);
        memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      }
      *(_OWORD *)((char *)a1 + v14[9]) = *(_OWORD *)((char *)a2 + v14[9]);
      *(_OWORD *)((char *)a1 + v14[10]) = *(_OWORD *)((char *)a2 + v14[10]);
      *(_OWORD *)((char *)a1 + v14[11]) = *(_OWORD *)((char *)a2 + v14[11]);
      *(_OWORD *)((char *)a1 + v14[12]) = *(_OWORD *)((char *)a2 + v14[12]);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v28 = *(int *)(a3 + 20);
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
  return a1;
}

_OWORD *assignWithTake for Proto_Ropes_HttpService_PrefetchResponse(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(void *)a1 = *(void *)a2;
        uint64_t v11 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
        uint64_t v12 = (char *)a1 + v11;
        long long v13 = (char *)a2 + v11;
        uint64_t v14 = sub_1001BFE60();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      }
      else
      {
        long long v20 = a2[1];
        *a1 = *a2;
        a1[1] = v20;
        uint64_t v21 = (int *)type metadata accessor for Proto_Ropes_Common_Attestation(0);
        uint64_t v22 = v21[6];
        unint64_t v23 = (char *)a1 + v22;
        uint64_t v24 = (char *)a2 + v22;
        uint64_t v25 = sub_1001BFE60();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
        uint64_t v26 = v21[7];
        uint64_t v27 = (char *)a1 + v26;
        uint64_t v28 = (char *)a2 + v26;
        *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
        v27[4] = v28[4];
        uint64_t v29 = v21[8];
        uint64_t v30 = (char *)a1 + v29;
        uint64_t v31 = (char *)a2 + v29;
        uint64_t v32 = sub_1001BFDF0();
        uint64_t v33 = *(void *)(v32 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
        {
          uint64_t v34 = sub_100003918(&qword_100209898);
          memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v30, v31, v32);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
        }
        *(_OWORD *)((char *)a1 + v21[9]) = *(_OWORD *)((char *)a2 + v21[9]);
        *(_OWORD *)((char *)a1 + v21[10]) = *(_OWORD *)((char *)a2 + v21[10]);
        *(_OWORD *)((char *)a1 + v21[11]) = *(_OWORD *)((char *)a2 + v21[11]);
        *(_OWORD *)((char *)a1 + v21[12]) = *(_OWORD *)((char *)a2 + v21[12]);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_18;
    }
LABEL_7:
    uint64_t v15 = sub_100003918(&qword_10020A660);
    memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_18;
  }
  if (v10)
  {
    sub_10005CA14((uint64_t)a1, type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_10005CA14((uint64_t)a1, type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)a1 = *(void *)a2;
      uint64_t v16 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = sub_1001BFE60();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      long long v35 = a2[1];
      *a1 = *a2;
      a1[1] = v35;
      uint64_t v36 = (int *)type metadata accessor for Proto_Ropes_Common_Attestation(0);
      uint64_t v37 = v36[6];
      uint64_t v38 = (char *)a1 + v37;
      uint64_t v39 = (char *)a2 + v37;
      uint64_t v40 = sub_1001BFE60();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
      uint64_t v41 = v36[7];
      uint64_t v42 = (char *)a1 + v41;
      uint64_t v43 = (char *)a2 + v41;
      *(_DWORD *)uint64_t v42 = *(_DWORD *)v43;
      v42[4] = v43[4];
      uint64_t v44 = v36[8];
      uint64_t v45 = (char *)a1 + v44;
      uint64_t v46 = (char *)a2 + v44;
      uint64_t v47 = sub_1001BFDF0();
      uint64_t v48 = *(void *)(v47 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
      {
        uint64_t v49 = sub_100003918(&qword_100209898);
        memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v45, v46, v47);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
      }
      *(_OWORD *)((char *)a1 + v36[9]) = *(_OWORD *)((char *)a2 + v36[9]);
      *(_OWORD *)((char *)a1 + v36[10]) = *(_OWORD *)((char *)a2 + v36[10]);
      *(_OWORD *)((char *)a1 + v36[11]) = *(_OWORD *)((char *)a2 + v36[11]);
      *(_OWORD *)((char *)a1 + v36[12]) = *(_OWORD *)((char *)a2 + v36[12]);
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_18:
  uint64_t v50 = *(int *)(a3 + 20);
  uint64_t v51 = (char *)a1 + v50;
  uint64_t v52 = (char *)a2 + v50;
  uint64_t v53 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 40))(v51, v52, v53);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Ropes_HttpService_PrefetchResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100081C68);
}

uint64_t sub_100081C68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000520B4(a1, a2, a3, &qword_10020A660);
}

uint64_t storeEnumTagSinglePayload for Proto_Ropes_HttpService_PrefetchResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100081C88);
}

uint64_t sub_100081C88(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1000521CC(a1, a2, a3, a4, &qword_10020A660);
}

void sub_100081C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v6 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_1001BFE60();
      int v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
      swift_bridgeObjectRetain();
      v10(v7, v8, v9);
    }
    else
    {
      uint64_t v12 = *a2;
      unint64_t v13 = a2[1];
      sub_100007B14(*a2, v13);
      *a1 = v12;
      a1[1] = v13;
      uint64_t v14 = a2[3];
      a1[2] = a2[2];
      a1[3] = v14;
      uint64_t v15 = (int *)type metadata accessor for Proto_Ropes_Common_Attestation(0);
      uint64_t v16 = v15[6];
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = sub_1001BFE60();
      long long v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      v20(v17, v18, v19);
      uint64_t v21 = v15[7];
      uint64_t v22 = (char *)a1 + v21;
      unint64_t v23 = (char *)a2 + v21;
      *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
      v22[4] = v23[4];
      uint64_t v24 = v15[8];
      uint64_t v25 = (char *)a1 + v24;
      uint64_t v26 = (char *)a2 + v24;
      uint64_t v27 = sub_1001BFDF0();
      uint64_t v28 = *(void *)(v27 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      {
        uint64_t v29 = sub_100003918(&qword_100209898);
        memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
      uint64_t v30 = v15[9];
      uint64_t v31 = (uint64_t *)((char *)a1 + v30);
      uint64_t v32 = (uint64_t *)((char *)a2 + v30);
      uint64_t v33 = v32[1];
      *uint64_t v31 = *v32;
      v31[1] = v33;
      uint64_t v34 = v15[10];
      long long v35 = (uint64_t *)((char *)a1 + v34);
      uint64_t v36 = (uint64_t *)((char *)a2 + v34);
      uint64_t v37 = v36[1];
      *long long v35 = *v36;
      v35[1] = v37;
      uint64_t v38 = v15[11];
      uint64_t v39 = (uint64_t *)((char *)a1 + v38);
      uint64_t v40 = (uint64_t *)((char *)a2 + v38);
      uint64_t v41 = v40[1];
      *uint64_t v39 = *v40;
      v39[1] = v41;
      uint64_t v42 = v15[12];
      uint64_t v43 = (uint64_t *)((char *)a1 + v42);
      uint64_t v44 = (uint64_t *)((char *)a2 + v42);
      uint64_t v45 = v44[1];
      *uint64_t v43 = *v44;
      v43[1] = v45;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = a1 + *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
    uint64_t v3 = sub_1001BFE60();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(v2, v3);
  }
  else
  {
    sub_10000792C(*(void *)a1, *(void *)(a1 + 8));
    swift_bridgeObjectRelease();
    uint64_t v6 = type metadata accessor for Proto_Ropes_Common_Attestation(0);
    uint64_t v7 = a1 + *(int *)(v6 + 24);
    uint64_t v8 = sub_1001BFE60();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    uint64_t v9 = a1 + *(int *)(v6 + 32);
    uint64_t v10 = sub_1001BFDF0();
    uint64_t v11 = *(void *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t *initializeWithCopy for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type(uint64_t *a1, uint64_t *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v4 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
    int v5 = (char *)a1 + v4;
    uint64_t v6 = (char *)a2 + v4;
    uint64_t v7 = sub_1001BFE60();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    swift_bridgeObjectRetain();
    v8(v5, v6, v7);
  }
  else
  {
    uint64_t v9 = *a2;
    unint64_t v10 = a2[1];
    sub_100007B14(*a2, v10);
    *a1 = v9;
    a1[1] = v10;
    uint64_t v11 = a2[3];
    a1[2] = a2[2];
    a1[3] = v11;
    uint64_t v12 = (int *)type metadata accessor for Proto_Ropes_Common_Attestation(0);
    uint64_t v13 = v12[6];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_1001BFE60();
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    v17(v14, v15, v16);
    uint64_t v18 = v12[7];
    uint64_t v19 = (char *)a1 + v18;
    long long v20 = (char *)a2 + v18;
    *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
    v19[4] = v20[4];
    uint64_t v21 = v12[8];
    uint64_t v22 = (char *)a1 + v21;
    unint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = sub_1001BFDF0();
    uint64_t v25 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      uint64_t v26 = sub_100003918(&qword_100209898);
      memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
    uint64_t v27 = v12[9];
    uint64_t v28 = (uint64_t *)((char *)a1 + v27);
    uint64_t v29 = (uint64_t *)((char *)a2 + v27);
    uint64_t v30 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v30;
    uint64_t v31 = v12[10];
    uint64_t v32 = (uint64_t *)((char *)a1 + v31);
    uint64_t v33 = (uint64_t *)((char *)a2 + v31);
    uint64_t v34 = v33[1];
    *uint64_t v32 = *v33;
    v32[1] = v34;
    uint64_t v35 = v12[11];
    uint64_t v36 = (uint64_t *)((char *)a1 + v35);
    uint64_t v37 = (uint64_t *)((char *)a2 + v35);
    uint64_t v38 = v37[1];
    *uint64_t v36 = *v37;
    v36[1] = v38;
    uint64_t v39 = v12[12];
    uint64_t v40 = (uint64_t *)((char *)a1 + v39);
    uint64_t v41 = (uint64_t *)((char *)a2 + v39);
    uint64_t v42 = v41[1];
    *uint64_t v40 = *v41;
    v40[1] = v42;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *assignWithCopy for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type(uint64_t *a1, uint64_t *a2)
{
  if (a1 != a2)
  {
    sub_10005CA14((uint64_t)a1, type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v4 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
      int v5 = (char *)a1 + v4;
      uint64_t v6 = (char *)a2 + v4;
      uint64_t v7 = sub_1001BFE60();
      uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
      swift_bridgeObjectRetain();
      v8(v5, v6, v7);
    }
    else
    {
      uint64_t v9 = *a2;
      unint64_t v10 = a2[1];
      sub_100007B14(*a2, v10);
      *a1 = v9;
      a1[1] = v10;
      a1[2] = a2[2];
      a1[3] = a2[3];
      uint64_t v11 = (int *)type metadata accessor for Proto_Ropes_Common_Attestation(0);
      uint64_t v12 = v11[6];
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = sub_1001BFE60();
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      v16(v13, v14, v15);
      uint64_t v17 = v11[7];
      uint64_t v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      char v20 = v19[4];
      *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
      v18[4] = v20;
      uint64_t v21 = v11[8];
      uint64_t v22 = (char *)a1 + v21;
      unint64_t v23 = (char *)a2 + v21;
      uint64_t v24 = sub_1001BFDF0();
      uint64_t v25 = *(void *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      {
        uint64_t v26 = sub_100003918(&qword_100209898);
        memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      }
      uint64_t v27 = v11[9];
      uint64_t v28 = (uint64_t *)((char *)a1 + v27);
      uint64_t v29 = (uint64_t *)((char *)a2 + v27);
      *uint64_t v28 = *v29;
      v28[1] = v29[1];
      uint64_t v30 = v11[10];
      uint64_t v31 = (uint64_t *)((char *)a1 + v30);
      uint64_t v32 = (uint64_t *)((char *)a2 + v30);
      *uint64_t v31 = *v32;
      v31[1] = v32[1];
      uint64_t v33 = v11[11];
      uint64_t v34 = (uint64_t *)((char *)a1 + v33);
      uint64_t v35 = (uint64_t *)((char *)a2 + v33);
      *uint64_t v34 = *v35;
      v34[1] = v35[1];
      uint64_t v36 = v11[12];
      uint64_t v37 = (uint64_t *)((char *)a1 + v36);
      uint64_t v38 = (uint64_t *)((char *)a2 + v36);
      *uint64_t v37 = *v38;
      v37[1] = v38[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(void *)a1 = *(void *)a2;
    uint64_t v4 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
    uint64_t v5 = a1 + v4;
    uint64_t v6 = a2 + v4;
    uint64_t v7 = sub_1001BFE60();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    uint64_t v9 = (int *)type metadata accessor for Proto_Ropes_Common_Attestation(0);
    uint64_t v10 = v9[6];
    uint64_t v11 = a1 + v10;
    uint64_t v12 = a2 + v10;
    uint64_t v13 = sub_1001BFE60();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
    uint64_t v14 = v9[7];
    uint64_t v15 = a1 + v14;
    uint64_t v16 = a2 + v14;
    *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
    *(unsigned char *)(v15 + 4) = *(unsigned char *)(v16 + 4);
    uint64_t v17 = v9[8];
    uint64_t v18 = (void *)(a1 + v17);
    uint64_t v19 = (const void *)(a2 + v17);
    uint64_t v20 = sub_1001BFDF0();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      uint64_t v22 = sub_100003918(&qword_100209898);
      memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v21 + 32))(v18, v19, v20);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    *(_OWORD *)(a1 + v9[9]) = *(_OWORD *)(a2 + v9[9]);
    *(_OWORD *)(a1 + v9[10]) = *(_OWORD *)(a2 + v9[10]);
    *(_OWORD *)(a1 + v9[11]) = *(_OWORD *)(a2 + v9[11]);
    *(_OWORD *)(a1 + v9[12]) = *(_OWORD *)(a2 + v9[12]);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_10005CA14(a1, type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)a1 = *(void *)a2;
      uint64_t v4 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
      uint64_t v5 = a1 + v4;
      uint64_t v6 = a2 + v4;
      uint64_t v7 = sub_1001BFE60();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
    }
    else
    {
      long long v8 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
      uint64_t v9 = (int *)type metadata accessor for Proto_Ropes_Common_Attestation(0);
      uint64_t v10 = v9[6];
      uint64_t v11 = a1 + v10;
      uint64_t v12 = a2 + v10;
      uint64_t v13 = sub_1001BFE60();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      uint64_t v14 = v9[7];
      uint64_t v15 = a1 + v14;
      uint64_t v16 = a2 + v14;
      *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
      *(unsigned char *)(v15 + 4) = *(unsigned char *)(v16 + 4);
      uint64_t v17 = v9[8];
      uint64_t v18 = (void *)(a1 + v17);
      uint64_t v19 = (const void *)(a2 + v17);
      uint64_t v20 = sub_1001BFDF0();
      uint64_t v21 = *(void *)(v20 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        uint64_t v22 = sub_100003918(&qword_100209898);
        memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v21 + 32))(v18, v19, v20);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      *(_OWORD *)(a1 + v9[9]) = *(_OWORD *)(a2 + v9[9]);
      *(_OWORD *)(a1 + v9[10]) = *(_OWORD *)(a2 + v9[10]);
      *(_OWORD *)(a1 + v9[11]) = *(_OWORD *)(a2 + v9[11]);
      *(_OWORD *)(a1 + v9[12]) = *(_OWORD *)(a2 + v9[12]);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100082C04()
{
  uint64_t result = type metadata accessor for Proto_Ropes_Common_Attestation(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Ropes_HttpService_ConfigRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_100003918(&qword_10020A628);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v36 = v8;
      uint64_t v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v12 = (int *)type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0);
      uint64_t v13 = v12[6];
      uint64_t v35 = (char *)a1 + v13;
      uint64_t v14 = (char *)a2 + v13;
      uint64_t v15 = sub_1001BFE60();
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      v16(v35, v14, v15);
      uint64_t v17 = v12[7];
      uint64_t v18 = (uint64_t *)((char *)a1 + v17);
      uint64_t v19 = (uint64_t *)((char *)a2 + v17);
      uint64_t v20 = v19[1];
      *uint64_t v18 = *v19;
      v18[1] = v20;
      uint64_t v21 = v12[8];
      uint64_t v22 = (uint64_t *)((char *)a1 + v21);
      unint64_t v23 = (uint64_t *)((char *)a2 + v21);
      uint64_t v24 = v23[1];
      *uint64_t v22 = *v23;
      v22[1] = v24;
      uint64_t v25 = v12[9];
      uint64_t v26 = (uint64_t *)((char *)a1 + v25);
      uint64_t v27 = (uint64_t *)((char *)a2 + v25);
      uint64_t v28 = v27[1];
      *uint64_t v26 = *v27;
      v26[1] = v28;
      uint64_t v29 = *(void (**)(uint64_t *, void, uint64_t, uint64_t))(v36 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v29(a1, 0, 1, v7);
    }
    uint64_t v30 = *(int *)(a3 + 20);
    uint64_t v31 = (char *)a1 + v30;
    uint64_t v32 = (char *)a2 + v30;
    uint64_t v33 = sub_1001BFE60();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
  }
  return a1;
}

uint64_t destroy for Proto_Ropes_HttpService_ConfigRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = a1 + *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0) + 24);
    uint64_t v6 = sub_1001BFE60();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  uint64_t v8 = sub_1001BFE60();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  return v9(v7, v8);
}

void *initializeWithCopy for Proto_Ropes_HttpService_ConfigRequest(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100003918(&qword_10020A628);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v34 = v7;
    uint64_t v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v10 = (int *)type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0);
    uint64_t v11 = v10[6];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_1001BFE60();
    uint64_t v35 = a3;
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    v15(v12, v13, v14);
    uint64_t v16 = v10[7];
    uint64_t v17 = (void *)((char *)a1 + v16);
    uint64_t v18 = (void *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = v10[8];
    uint64_t v21 = (void *)((char *)a1 + v20);
    uint64_t v22 = (void *)((char *)a2 + v20);
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = v10[9];
    uint64_t v25 = (void *)((char *)a1 + v24);
    uint64_t v26 = (void *)((char *)a2 + v24);
    uint64_t v27 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v27;
    uint64_t v28 = *(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28(a1, 0, 1, v6);
    a3 = v35;
  }
  uint64_t v29 = *(int *)(a3 + 20);
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
  return a1;
}

uint64_t assignWithCopy for Proto_Ropes_HttpService_ConfigRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      *(void *)a1 = *(void *)a2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v33 = *(void *)(a2 + 8);
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      *(void *)(a1 + 8) = v33;
      uint64_t v34 = (int *)type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0);
      uint64_t v35 = v34[6];
      uint64_t v36 = a1 + v35;
      uint64_t v37 = a2 + v35;
      uint64_t v38 = sub_1001BFE60();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
      uint64_t v39 = v34[7];
      uint64_t v40 = (void *)(a1 + v39);
      uint64_t v41 = (void *)(a2 + v39);
      *uint64_t v40 = *v41;
      v40[1] = v41[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v42 = v34[8];
      uint64_t v43 = (void *)(a1 + v42);
      uint64_t v44 = (void *)(a2 + v42);
      *uint64_t v43 = *v44;
      v43[1] = v44[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v45 = v34[9];
      uint64_t v46 = (void *)(a1 + v45);
      uint64_t v47 = (void *)(a2 + v45);
      *uint64_t v46 = *v47;
      v46[1] = v47[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    sub_10005CA14(a1, type metadata accessor for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v27 = sub_100003918(&qword_10020A628);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  *(void *)a1 = *(void *)a2;
  uint64_t v11 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v11;
  uint64_t v12 = (int *)type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0);
  uint64_t v13 = v12[6];
  uint64_t v48 = a1 + v13;
  uint64_t v14 = a2 + v13;
  uint64_t v15 = sub_1001BFE60();
  uint64_t v49 = a3;
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  v16(v48, v14, v15);
  uint64_t v17 = v12[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  uint64_t v20 = v12[8];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  uint64_t v23 = v12[9];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  *uint64_t v24 = *v25;
  v24[1] = v25[1];
  uint64_t v26 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26(a1, 0, 1, v6);
  a3 = v49;
LABEL_7:
  uint64_t v28 = *(int *)(a3 + 20);
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 24))(v29, v30, v31);
  return a1;
}

void *initializeWithTake for Proto_Ropes_HttpService_ConfigRequest(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100003918(&qword_10020A628);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
    int v10 = (int *)type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0);
    uint64_t v11 = v10[6];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_1001BFE60();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    *(_OWORD *)((char *)a1 + v10[7]) = *(_OWORD *)((char *)a2 + v10[7]);
    *(_OWORD *)((char *)a1 + v10[8]) = *(_OWORD *)((char *)a2 + v10[8]);
    *(_OWORD *)((char *)a1 + v10[9]) = *(_OWORD *)((char *)a2 + v10[9]);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for Proto_Ropes_HttpService_ConfigRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      *(void *)a1 = *(void *)a2;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      uint64_t v23 = (int *)type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0);
      uint64_t v24 = v23[6];
      uint64_t v25 = a1 + v24;
      uint64_t v26 = a2 + v24;
      uint64_t v27 = sub_1001BFE60();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 40))(v25, v26, v27);
      uint64_t v28 = v23[7];
      uint64_t v29 = (void *)(a1 + v28);
      uint64_t v30 = (uint64_t *)(a2 + v28);
      uint64_t v32 = *v30;
      uint64_t v31 = v30[1];
      *uint64_t v29 = v32;
      v29[1] = v31;
      swift_bridgeObjectRelease();
      uint64_t v33 = v23[8];
      uint64_t v34 = (void *)(a1 + v33);
      uint64_t v35 = (uint64_t *)(a2 + v33);
      uint64_t v37 = *v35;
      uint64_t v36 = v35[1];
      *uint64_t v34 = v37;
      v34[1] = v36;
      swift_bridgeObjectRelease();
      uint64_t v38 = v23[9];
      uint64_t v39 = (void *)(a1 + v38);
      uint64_t v40 = (uint64_t *)(a2 + v38);
      uint64_t v42 = *v40;
      uint64_t v41 = v40[1];
      *uint64_t v39 = v42;
      v39[1] = v41;
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    sub_10005CA14(a1, type metadata accessor for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v17 = sub_100003918(&qword_10020A628);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v11 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v11;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v12 = (int *)type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0);
  uint64_t v13 = v12[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  *(_OWORD *)(a1 + v12[7]) = *(_OWORD *)(a2 + v12[7]);
  *(_OWORD *)(a1 + v12[8]) = *(_OWORD *)(a2 + v12[8]);
  *(_OWORD *)(a1 + v12[9]) = *(_OWORD *)(a2 + v12[9]);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v18 = *(int *)(a3 + 20);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Ropes_HttpService_ConfigRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100083AFC);
}

uint64_t sub_100083AFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000520B4(a1, a2, a3, &qword_10020A628);
}

uint64_t storeEnumTagSinglePayload for Proto_Ropes_HttpService_ConfigRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100083B1C);
}

uint64_t sub_100083B1C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1000521CC(a1, a2, a3, a4, &qword_10020A628);
}

void sub_100083B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t initializeBufferWithCopyOfBuffer for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v6 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v6 = a1;
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v7 = (int *)type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0);
    uint64_t v8 = v7[6];
    uint64_t v9 = v6 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_1001BFE60();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = v7[7];
    uint64_t v14 = (void *)(v6 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = v7[8];
    uint64_t v18 = (void *)(v6 + v17);
    uint64_t v19 = (uint64_t *)((char *)a2 + v17);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = v7[9];
    uint64_t v22 = (void *)(v6 + v21);
    uint64_t v23 = (uint64_t *)((char *)a2 + v21);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v6;
}

uint64_t destroy for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0) + 24);
  uint64_t v3 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = (int *)type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0);
  uint64_t v6 = v5[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1001BFE60();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = v5[7];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = v13[1];
  void *v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = v5[8];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = v5[9];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = (int *)type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0);
  uint64_t v6 = v5[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = v5[7];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = v5[8];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = v5[9];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = (int *)type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0);
  uint64_t v6 = v5[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)(a1 + v5[7]) = *(_OWORD *)(a2 + v5[7]);
  *(_OWORD *)(a1 + v5[8]) = *(_OWORD *)(a2 + v5[8]);
  *(_OWORD *)(a1 + v5[9]) = *(_OWORD *)(a2 + v5[9]);
  return a1;
}

uint64_t assignWithTake for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = (int *)type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0);
  uint64_t v5 = v4[6];
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 40))(v6, v7, v8);
  uint64_t v9 = v4[7];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (uint64_t *)(a2 + v9);
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  *uint64_t v10 = v13;
  v10[1] = v12;
  swift_bridgeObjectRelease();
  uint64_t v14 = v4[8];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (uint64_t *)(a2 + v14);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  *uint64_t v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  uint64_t v19 = v4[9];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (uint64_t *)(a2 + v19);
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  *uint64_t v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0);
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, v4, sub_1000841B0);
}

uint64_t storeEnumTagSinglePayload for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0);
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, v6, sub_10008421C);
}

uint64_t sub_100084220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100085348(a1, a2, a3, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest);
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Ropes_HttpService_ConfigResponse(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_100003918(&qword_10020A630);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      uint64_t v11 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
      uint64_t v20 = (char *)a1 + v11;
      uint64_t v12 = (char *)a2 + v11;
      uint64_t v13 = sub_1001BFE60();
      uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      v14(v20, v12, v13);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v15 = *(int *)(a3 + 20);
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_1001BFE60();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  }
  return a1;
}

uint64_t destroy for Proto_Ropes_HttpService_ConfigResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = a1 + *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
    uint64_t v6 = sub_1001BFE60();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  uint64_t v8 = sub_1001BFE60();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  return v9(v7, v8);
}

void *initializeWithCopy for Proto_Ropes_HttpService_ConfigResponse(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100003918(&qword_10020A630);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v9 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
    uint64_t v18 = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = sub_1001BFE60();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v18, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  return a1;
}

void *assignWithCopy for Proto_Ropes_HttpService_ConfigResponse(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v21 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
      uint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      uint64_t v24 = sub_1001BFE60();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
      goto LABEL_7;
    }
    sub_10005CA14((uint64_t)a1, type metadata accessor for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v15 = sub_100003918(&qword_10020A630);
    memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  *a1 = *a2;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
  uint64_t v25 = (char *)a1 + v11;
  uint64_t v12 = (char *)a2 + v11;
  uint64_t v13 = sub_1001BFE60();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  v14(v25, v12, v13);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 20);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  return a1;
}

void *initializeWithTake for Proto_Ropes_HttpService_ConfigResponse(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100003918(&qword_10020A630);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v9 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
    int v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_1001BFE60();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  return a1;
}

void *assignWithTake for Proto_Ropes_HttpService_ConfigResponse(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      swift_bridgeObjectRelease();
      uint64_t v21 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
      uint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      uint64_t v24 = sub_1001BFE60();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 40))(v22, v23, v24);
      goto LABEL_7;
    }
    sub_10005CA14((uint64_t)a1, type metadata accessor for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v15 = sub_100003918(&qword_10020A630);
    memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  *a1 = *a2;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 20);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Ropes_HttpService_ConfigResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100084D90);
}

uint64_t sub_100084D90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000520B4(a1, a2, a3, &qword_10020A630);
}

uint64_t storeEnumTagSinglePayload for Proto_Ropes_HttpService_ConfigResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100084DB0);
}

uint64_t sub_100084DB0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1000521CC(a1, a2, a3, a4, &qword_10020A630);
}

void sub_100084DBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_100084DDC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  sub_100078104(319, a4, a5);
  if (v5 <= 0x3F)
  {
    sub_1001BFE60();
    if (v6 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    unint64_t v6 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    unint64_t v6 = a1;
    uint64_t v7 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
    uint64_t v8 = (char *)v6 + v7;
    int v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1001BFE60();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v6;
}

uint64_t destroy for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
  uint64_t v3 = sub_1001BFE60();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

void *initializeWithCopy for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
  unint64_t v5 = (char *)a1 + v4;
  unint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1001BFE60();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

void *assignWithCopy for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
  unint64_t v5 = (char *)a1 + v4;
  unint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

void *initializeWithTake for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
  unint64_t v5 = (char *)a1 + v4;
  unint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0) + 20);
  unint64_t v5 = (char *)a1 + v4;
  unint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0);
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, v4, sub_1000852C0);
}

uint64_t storeEnumTagSinglePayload for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0);
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, v6, sub_10008532C);
}

uint64_t sub_100085330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100085348(a1, a2, a3, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
}

uint64_t sub_100085348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v6 <= 0x3F)
  {
    uint64_t v7 = *(void *)(result - 8);
    swift_initEnumMetadataSingleCase();
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = *(_DWORD *)(v7 + 84);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Ropes_HttpService_AdminApiResponse(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    unint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    unint64_t v5 = a1;
    a1[1] = a2[1];
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1001BFE60();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t destroy for Proto_Ropes_HttpService_AdminApiResponse(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1001BFE60();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for Proto_Ropes_HttpService_AdminApiResponse(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1001BFE60();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *assignWithCopy for Proto_Ropes_HttpService_AdminApiResponse(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for Proto_Ropes_HttpService_AdminApiResponse(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for Proto_Ropes_HttpService_AdminApiResponse(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Ropes_HttpService_AdminApiResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000857DC);
}

uint64_t sub_1000857E0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1001BFE60();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Proto_Ropes_HttpService_AdminApiResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000858A4);
}

void *sub_1000858A8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1001BFE60();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100085950()
{
  return sub_1000442D4();
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Ropes_HttpService_AdminApiResponse.Workload(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1001BFE60();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 28);
    uint64_t v14 = (uint64_t *)((char *)v4 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters(0);
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = sub_100003918(&qword_10020A670);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      *uint64_t v14 = *v15;
      uint64_t v20 = *(int *)(v16 + 20);
      uint64_t v21 = (char *)v14 + v20;
      uint64_t v22 = (char *)v15 + v20;
      swift_bridgeObjectRetain();
      v12(v21, v22, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  return v4;
}

uint64_t destroy for Proto_Ropes_HttpService_AdminApiResponse.Workload(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1001BFE60();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v10(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = v6 + *(int *)(v7 + 20);
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v9, v5);
  }
  return result;
}

void *initializeWithCopy for Proto_Ropes_HttpService_AdminApiResponse.Workload(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1001BFE60();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters(0);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_100003918(&qword_10020A670);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    *uint64_t v13 = *v14;
    uint64_t v18 = *(int *)(v15 + 20);
    uint64_t v19 = (char *)v13 + v18;
    uint64_t v20 = (char *)v14 + v18;
    swift_bridgeObjectRetain();
    v11(v19, v20, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

void *assignWithCopy for Proto_Ropes_HttpService_AdminApiResponse.Workload(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001BFE60();
  uint64_t v24 = *(void *)(v9 - 8);
  uint64_t v25 = v9;
  uint64_t v10 = *(void (**)(char *, char *))(v24 + 24);
  v10(v7, v8);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v8) = v16(v12, 1, v14);
  int v17 = v16(v13, 1, v14);
  if (!v8)
  {
    if (!v17)
    {
      void *v12 = *v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      ((void (*)(char *, char *, uint64_t))v10)((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v25);
      return a1;
    }
    sub_10005CA14((uint64_t)v12, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v22 = sub_100003918(&qword_10020A670);
    memcpy(v12, v13, *(void *)(*(void *)(v22 - 8) + 64));
    return a1;
  }
  void *v12 = *v13;
  uint64_t v18 = *(int *)(v14 + 20);
  uint64_t v19 = (char *)v12 + v18;
  uint64_t v20 = (char *)v13 + v18;
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
  swift_bridgeObjectRetain();
  v21(v19, v20, v25);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t initializeWithTake for Proto_Ropes_HttpService_AdminApiResponse.Workload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = sub_1001BFE60();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_100003918(&qword_10020A670);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    void *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

void *assignWithTake for Proto_Ropes_HttpService_AdminApiResponse.Workload(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1001BFE60();
  uint64_t v21 = *(void *)(v10 - 8);
  uint64_t v22 = v10;
  uint64_t v11 = *(void (**)(char *, char *))(v21 + 40);
  v11(v8, v9);
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters(0);
  uint64_t v16 = *(void *)(v15 - 8);
  int v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v9) = v17(v13, 1, v15);
  int v18 = v17(v14, 1, v15);
  if (!v9)
  {
    if (!v18)
    {
      *uint64_t v13 = *v14;
      swift_bridgeObjectRelease();
      ((void (*)(char *, char *, uint64_t))v11)((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v22);
      return a1;
    }
    sub_10005CA14((uint64_t)v13, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    uint64_t v19 = sub_100003918(&qword_10020A670);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    return a1;
  }
  *uint64_t v13 = *v14;
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v22);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Ropes_HttpService_AdminApiResponse.Workload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100086430);
}

uint64_t sub_100086430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10008643C(a1, a2, a3, &qword_10020A670);
}

uint64_t sub_10008643C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v5 = *(void *)(a1 + 8);
    if (v5 >= 0xFFFFFFFF) {
      LODWORD(v5) = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v10 = sub_1001BFE60();
    uint64_t v11 = *(void *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v12 = v10;
      uint64_t v13 = a1 + *(int *)(a3 + 24);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
      return v14(v13, a2, v12);
    }
    else
    {
      uint64_t v15 = sub_100003918(a4);
      uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
      uint64_t v17 = v15;
      uint64_t v18 = a1 + *(int *)(a3 + 28);
      return v16(v18, a2, v17);
    }
  }
}

uint64_t storeEnumTagSinglePayload for Proto_Ropes_HttpService_AdminApiResponse.Workload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100086580);
}

uint64_t sub_100086580(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1001BFE60();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100003918(&qword_10020A670);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1000866B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1000866D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, void (*a6)(uint64_t))
{
  sub_1001BFE60();
  if (v8 <= 0x3F)
  {
    sub_100078104(319, a5, a6);
    if (v9 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t getEnumTagSinglePayload for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000867DC);
}

uint64_t sub_1000867E0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1001BFE60();
    unint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000868A4);
}

void *sub_1000868A8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1001BFE60();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100086950()
{
  return sub_100086E84();
}

uint64_t *_s20privatecloudcomputed38Proto_Ropes_HttpService_InvokeResponseV15LoggingMetadataVwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1001BFE60();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t _s20privatecloudcomputed38Proto_Ropes_HttpService_InvokeResponseV15LoggingMetadataVwxx_0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1001BFE60();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *_s20privatecloudcomputed38Proto_Ropes_HttpService_InvokeResponseV15LoggingMetadataVwcp_0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1001BFE60();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *_s20privatecloudcomputed38Proto_Ropes_HttpService_InvokeResponseV15LoggingMetadataVwca_0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *_s20privatecloudcomputed38Proto_Ropes_HttpService_InvokeResponseV15LoggingMetadataVwtk_0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *_s20privatecloudcomputed38Proto_Ropes_HttpService_InvokeResponseV15LoggingMetadataVwta_0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100086D10);
}

uint64_t sub_100086D14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1001BFE60();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100086DD8);
}

uint64_t sub_100086DDC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1001BFE60();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100086E84()
{
  uint64_t result = sub_1001BFE60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_100086F14(void *a1)
{
  unint64_t v2 = a1[2];
  uint64_t v3 = a1[6];
  unint64_t v4 = a1[7];
  swift_bridgeObjectRetain();
  sub_10002C9AC(v2);
  swift_bridgeObjectRetain();
  sub_10000D9E0(v3, v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfigRequest.bundleID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0) + 28));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(uint64_t a1)
{
  return sub_10001C958(a1, qword_10020BB70);
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfigRequest.featureID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0) + 32));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfiguration.rate.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v3 = sub_100003918(&qword_100209368);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration(0);
  sub_10003282C(v1 + *(int *)(v7 + 44), (uint64_t)v6, &qword_100209368);
  uint64_t v8 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_100087E50((uint64_t)v6, (uint64_t)a1);
  }
  *a1 = 0;
  _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v9 = (char *)a1 + *(int *)(v8 + 24);
  uint64_t v10 = sub_1001BFE20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  return sub_100010360((uint64_t)v6, &qword_100209368);
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfiguration.Rate.duration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003918(&qword_100209360);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate(0);
  sub_10003282C(v1 + *(int *)(v7 + 24), (uint64_t)v6, &qword_100209360);
  uint64_t v8 = sub_1001BFE20();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v6, v8);
  }
  sub_1001BFE10();
  return sub_100010360((uint64_t)v6, &qword_100209360);
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfiguration.ttl.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003918(&qword_100209360);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration(0);
  sub_10003282C(v1 + *(int *)(v7 + 48), (uint64_t)v6, &qword_100209360);
  uint64_t v8 = sub_1001BFE20();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v6, v8);
  }
  sub_1001BFE10();
  return sub_100010360((uint64_t)v6, &qword_100209360);
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfigurationList.init()@<X0>(void *a1@<X8>)
{
  return sub_1000876FC((void (*)(void))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList, a1);
}

uint64_t static Proto_Ropes_RateLimit_RateLimitConfigurationList.== infix(_:_:)(char *a1, char *a2)
{
  return sub_10008C338(a1, a2, sub_100169C4C, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList) & 1;
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfigRequest.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_100054910((uint64_t)&_swiftEmptyArrayStorage);
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v2 = (int *)type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0);
  uint64_t result = _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v4 = (void *)(a1 + v2[7]);
  void *v4 = 0;
  v4[1] = 0;
  uint64_t v5 = (void *)(a1 + v2[8]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  uint64_t v6 = (void *)(a1 + v2[9]);
  *uint64_t v6 = 0;
  v6[1] = 0;
  return result;
}

void sub_1000874F8()
{
  static Proto_Ropes_RateLimit_RequestType.allCases = (uint64_t)&off_1001FBBA8;
}

uint64_t *Proto_Ropes_RateLimit_RequestType.allCases.unsafeMutableAddressor()
{
  if (qword_100207930 != -1) {
    swift_once();
  }
  return &static Proto_Ropes_RateLimit_RequestType.allCases;
}

uint64_t static Proto_Ropes_RateLimit_RequestType.allCases.getter()
{
  if (qword_100207930 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000875B4@<X0>(void *a1@<X8>)
{
  if (qword_100207930 != -1) {
    swift_once();
  }
  *a1 = static Proto_Ropes_RateLimit_RequestType.allCases;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100087620(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10008D7C4();
  return Enum.hash(into:)(a1, a2, v4);
}

uint64_t Proto_Ropes_RateLimit_Values.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100088E2C(type metadata accessor for Proto_Ropes_RateLimit_Values, a1);
}

uint64_t Proto_Ropes_RateLimit_Values.unknownFields.setter(uint64_t a1)
{
  return sub_100088EC4(a1, type metadata accessor for Proto_Ropes_RateLimit_Values);
}

uint64_t (*Proto_Ropes_RateLimit_Values.unknownFields.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t Proto_Ropes_RateLimit_Values.init()@<X0>(void *a1@<X8>)
{
  return sub_1000876FC((void (*)(void))type metadata accessor for Proto_Ropes_RateLimit_Values, a1);
}

uint64_t sub_1000876FC@<X0>(void (*a1)(void)@<X0>, void *a2@<X8>)
{
  *a2 = &_swiftEmptyArrayStorage;
  a1(0);
  return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfigRequest.bundleID.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0) + 28));
  if (v1[1]) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t (*Proto_Ropes_RateLimit_RateLimitConfigRequest.bundleID.modify(uint64_t a1))()
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0) + 28);
  *(_DWORD *)(a1 + 24) = v3;
  unint64_t v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_1000381F4;
}

BOOL Proto_Ropes_RateLimit_RateLimitConfigRequest.hasBundleID.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0) + 28) + 8) != 0;
}

Swift::Void __swiftcall Proto_Ropes_RateLimit_RateLimitConfigRequest.clearBundleID()()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0) + 28));
  swift_bridgeObjectRelease();
  *uint64_t v1 = 0;
  v1[1] = 0;
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfigRequest.featureID.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0) + 32));
  if (v1[1]) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t (*Proto_Ropes_RateLimit_RateLimitConfigRequest.featureID.modify(uint64_t a1))()
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0) + 32);
  *(_DWORD *)(a1 + 24) = v3;
  unint64_t v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_1000381F4;
}

BOOL Proto_Ropes_RateLimit_RateLimitConfigRequest.hasFeatureID.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0) + 32) + 8) != 0;
}

Swift::Void __swiftcall Proto_Ropes_RateLimit_RateLimitConfigRequest.clearFeatureID()()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0) + 32));
  swift_bridgeObjectRelease();
  *uint64_t v1 = 0;
  v1[1] = 0;
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfigRequest.workloadType.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0) + 36));
  if (v1[1]) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfigRequest.workloadType.setter(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0) + 36));
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*Proto_Ropes_RateLimit_RateLimitConfigRequest.workloadType.modify(uint64_t a1))()
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0) + 36);
  *(_DWORD *)(a1 + 24) = v3;
  unint64_t v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_1000381F4;
}

BOOL Proto_Ropes_RateLimit_RateLimitConfigRequest.hasWorkloadType.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0) + 36) + 8) != 0;
}

Swift::Void __swiftcall Proto_Ropes_RateLimit_RateLimitConfigRequest.clearWorkloadType()()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0) + 36));
  swift_bridgeObjectRelease();
  *uint64_t v1 = 0;
  v1[1] = 0;
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfigRequest.requestType.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfigRequest.requestType.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 8) = result;
  *(unsigned char *)(v2 + 16) = a2 & 1;
  return result;
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfigRequest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0) + 24);
  uint64_t v4 = sub_1001BFE60();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfigRequest.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0) + 24);
  uint64_t v4 = sub_1001BFE60();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*Proto_Ropes_RateLimit_RateLimitConfigRequest.unknownFields.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t SystemInfo.uniqueDeviceID.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SystemInfo.uniqueDeviceID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfiguration.params.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfiguration.params.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = a1;
  return result;
}

uint64_t (*Proto_Ropes_RateLimit_RateLimitConfiguration.params.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t TC2ServerDrivenConfiguration.JsonModel.prewarmAttestationsValidityInSeconds.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t TC2ServerDrivenConfiguration.JsonModel.prewarmAttestationsValidityInSeconds.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 56) = result;
  *(unsigned char *)(v2 + 64) = a2 & 1;
  return result;
}

uint64_t (*TC2ServerDrivenConfiguration.JsonModel.prewarmAttestationsValidityInSeconds.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfiguration.Rate.init()@<X0>(_DWORD *a1@<X8>)
{
  *a1 = 0;
  uint64_t v2 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate(0);
  _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v3 = (char *)a1 + *(int *)(v2 + 24);
  uint64_t v4 = sub_1001BFE20();
  unint64_t v5 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(v3, 1, 1, v4);
}

uint64_t type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration(uint64_t a1)
{
  return sub_10001C958(a1, (uint64_t *)&unk_10020BC10);
}

uint64_t type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate(uint64_t a1)
{
  return sub_10001C958(a1, qword_10020BCD0);
}

uint64_t sub_100087E50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(uint64_t a1)
{
  return sub_10001C958(a1, qword_10020BD68);
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfiguration.rate.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration(0) + 44);
  sub_100010360(v3, &qword_100209368);
  sub_100087E50(a1, v3);
  uint64_t v4 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate(0);
  unint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(v3, 0, 1, v4);
}

void (*Proto_Ropes_RateLimit_RateLimitConfiguration.rate.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100003918(&qword_100209368);
  unint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  _OWORD v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration(0) + 44);
  *((_DWORD *)v3 + 12) = v11;
  sub_10003282C(v1 + v11, (uint64_t)v5, &qword_100209368);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = 0;
    _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v12 = (char *)v10 + *(int *)(v6 + 24);
    uint64_t v13 = sub_1001BFE20();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
    sub_100010360((uint64_t)v5, &qword_100209368);
  }
  else
  {
    sub_100087E50((uint64_t)v5, (uint64_t)v10);
  }
  return sub_100088134;
}

void sub_100088134(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(int *)(*(void *)a1 + 48);
  uint64_t v4 = *(void **)(*(void *)a1 + 32);
  unint64_t v5 = *(void **)(*(void *)a1 + 40);
  uint64_t v6 = *(void *)(*(void *)a1 + 16);
  uint64_t v7 = *(void *)(*(void *)a1 + 24);
  uint64_t v8 = *(void **)(*(void *)a1 + 8);
  uint64_t v9 = **(void **)a1 + v3;
  if (a2)
  {
    sub_10008D6BC(*(void *)(*(void *)a1 + 40), (uint64_t)v4);
    sub_100010360(v9, &qword_100209368);
    sub_100087E50((uint64_t)v4, v9);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
    sub_10008D720((uint64_t)v5);
  }
  else
  {
    sub_100010360(**(void **)a1 + v3, &qword_100209368);
    sub_100087E50((uint64_t)v5, v9);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
  }
  free(v5);
  free(v4);
  free(v8);
  free(v2);
}

BOOL Proto_Ropes_RateLimit_RateLimitConfiguration.hasRate.getter()
{
  uint64_t v1 = sub_100003918(&qword_100209368);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration(0);
  sub_10003282C(v0 + *(int *)(v5 + 44), (uint64_t)v4, &qword_100209368);
  uint64_t v6 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate(0);
  BOOL v7 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 1, v6) != 1;
  sub_100010360((uint64_t)v4, &qword_100209368);
  return v7;
}

Swift::Void __swiftcall Proto_Ropes_RateLimit_RateLimitConfiguration.clearRate()()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration(0) + 44);
  sub_100010360(v1, &qword_100209368);
  uint64_t v2 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate(0);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfiguration.ttl.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration(0) + 48);
  sub_100010360(v3, &qword_100209360);
  uint64_t v4 = sub_1001BFE20();
  uint64_t v7 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v3, a1, v4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);
  return v5(v3, 0, 1, v4);
}

uint64_t (*Proto_Ropes_RateLimit_RateLimitConfiguration.ttl.modify(void *a1))()
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100003918(&qword_100209360);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = sub_1001BFE20();
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  _OWORD v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration(0) + 48);
  *((_DWORD *)v3 + 12) = v11;
  sub_10003282C(v1 + v11, (uint64_t)v5, &qword_100209360);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    sub_1001BFE10();
    sub_100010360((uint64_t)v5, &qword_100209360);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v10, v5, v6);
  }
  return sub_100088610;
}

BOOL Proto_Ropes_RateLimit_RateLimitConfiguration.hasTtl.getter()
{
  uint64_t v1 = sub_100003918(&qword_100209360);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration(0);
  sub_10003282C(v0 + *(int *)(v5 + 48), (uint64_t)v4, &qword_100209360);
  uint64_t v6 = sub_1001BFE20();
  BOOL v7 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 1, v6) != 1;
  sub_100010360((uint64_t)v4, &qword_100209360);
  return v7;
}

Swift::Void __swiftcall Proto_Ropes_RateLimit_RateLimitConfiguration.clearTtl()()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration(0) + 48);
  sub_100010360(v1, &qword_100209360);
  uint64_t v2 = sub_1001BFE20();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
}

double Proto_Ropes_RateLimit_RateLimitConfiguration.jitter.getter()
{
  return *(double *)(v0 + 72);
}

void Proto_Ropes_RateLimit_RateLimitConfiguration.jitter.setter(double a1)
{
  *(double *)(v1 + 72) = a1;
}

uint64_t (*TC2ServerDrivenConfiguration.JsonModel.maxPrefetchBatches.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfiguration.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration(0) + 40);
  uint64_t v4 = sub_1001BFE60();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfiguration.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration(0) + 40);
  uint64_t v4 = sub_1001BFE60();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*Proto_Ropes_RateLimit_RateLimitConfiguration.unknownFields.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfiguration.Rate.duration.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate(0) + 24);
  sub_100010360(v3, &qword_100209360);
  uint64_t v4 = sub_1001BFE20();
  uint64_t v7 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v3, a1, v4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);
  return v5(v3, 0, 1, v4);
}

uint64_t (*Proto_Ropes_RateLimit_RateLimitConfiguration.Rate.duration.modify(void *a1))()
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100003918(&qword_100209360);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = sub_1001BFE20();
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  _OWORD v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate(0) + 24);
  *((_DWORD *)v3 + 12) = v11;
  sub_10003282C(v1 + v11, (uint64_t)v5, &qword_100209360);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    sub_1001BFE10();
    sub_100010360((uint64_t)v5, &qword_100209360);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v10, v5, v6);
  }
  return sub_100088610;
}

void sub_100088B4C(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(int *)(*(void *)a1 + 48);
  uint64_t v4 = *(void **)(*(void *)a1 + 32);
  uint64_t v5 = *(void **)(*(void *)a1 + 40);
  uint64_t v6 = *(void *)(*(void *)a1 + 16);
  uint64_t v7 = *(void *)(*(void *)a1 + 24);
  uint64_t v8 = *(void **)(*(void *)a1 + 8);
  uint64_t v9 = **(void **)a1 + v3;
  if (a2)
  {
    (*(void (**)(void, void *, uint64_t))(v7 + 16))(*(void *)(*(void *)a1 + 32), v5, v6);
    sub_100010360(v9, &qword_100209360);
    (*(void (**)(uint64_t, void *, uint64_t))(v7 + 32))(v9, v4, v6);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
    (*(void (**)(void *, uint64_t))(v7 + 8))(v5, v6);
  }
  else
  {
    sub_100010360(**(void **)a1 + v3, &qword_100209360);
    (*(void (**)(uint64_t, void *, uint64_t))(v7 + 32))(v9, v5, v6);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
  }
  free(v5);
  free(v4);
  free(v8);
  free(v2);
}

BOOL Proto_Ropes_RateLimit_RateLimitConfiguration.Rate.hasDuration.getter()
{
  uint64_t v1 = sub_100003918(&qword_100209360);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate(0);
  sub_10003282C(v0 + *(int *)(v5 + 24), (uint64_t)v4, &qword_100209360);
  uint64_t v6 = sub_1001BFE20();
  BOOL v7 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 1, v6) != 1;
  sub_100010360((uint64_t)v4, &qword_100209360);
  return v7;
}

Swift::Void __swiftcall Proto_Ropes_RateLimit_RateLimitConfiguration.Rate.clearDuration()()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate(0) + 24);
  sub_100010360(v1, &qword_100209360);
  uint64_t v2 = sub_1001BFE20();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfiguration.Rate.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100088E2C(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate, a1);
}

uint64_t sub_100088E2C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 20);
  uint64_t v5 = sub_1001BFE60();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfiguration.Rate.unknownFields.setter(uint64_t a1)
{
  return sub_100088EC4(a1, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate);
}

uint64_t sub_100088EC4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 20);
  uint64_t v5 = sub_1001BFE60();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*Proto_Ropes_RateLimit_RateLimitConfiguration.Rate.unknownFields.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfiguration.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0xE000000000000000;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0xE000000000000000;
  *(void *)(a1 + 48) = sub_100054910((uint64_t)&_swiftEmptyArrayStorage);
  *(void *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 64) = 1;
  *(void *)(a1 + 72) = 0;
  uint64_t v2 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration(0);
  _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v3 = a1 + *(int *)(v2 + 44);
  uint64_t v4 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = a1 + *(int *)(v2 + 48);
  uint64_t v6 = sub_1001BFE20();
  BOOL v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, 1, 1, v6);
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfigurationList.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100088E2C(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList, a1);
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfigurationList.unknownFields.setter(uint64_t a1)
{
  return sub_100088EC4(a1, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
}

uint64_t (*Proto_Ropes_RateLimit_RateLimitConfigurationList.unknownFields.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t sub_100089108()
{
  uint64_t v0 = sub_1001C0160();
  sub_100044F74(v0, static Proto_Ropes_RateLimit_RequestType._protobuf_nameMap);
  sub_10000D978(v0, (uint64_t)static Proto_Ropes_RateLimit_RequestType._protobuf_nameMap);
  sub_100003918(&qword_100209FB8);
  uint64_t v1 = (int *)(sub_100003918(&qword_100209FC0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001CD7D0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 0;
  *(void *)unint64_t v6 = "INVOKE";
  *(void *)(v6 + 8) = 6;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_1001C0130();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 1;
  *(void *)uint64_t v10 = "PREFETCH";
  *((void *)v10 + 1) = 8;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 2;
  *(void *)uint64_t v11 = "RATELIMIT_CONFIG";
  *(void *)(v11 + 8) = 16;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_1001C0140();
}

uint64_t Proto_Ropes_RateLimit_RequestType._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_100207938, (uint64_t)static Proto_Ropes_RateLimit_RequestType._protobuf_nameMap);
}

uint64_t static Proto_Ropes_RateLimit_RequestType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_100207938, (uint64_t)static Proto_Ropes_RateLimit_RequestType._protobuf_nameMap, a1);
}

uint64_t sub_100089350@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_100207938, (uint64_t)static Proto_Ropes_RateLimit_RequestType._protobuf_nameMap, a1);
}

void *Proto_Ropes_RateLimit_Values.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Ropes_RateLimit_Values.protoMessageName;
}

unint64_t static Proto_Ropes_RateLimit_Values.protoMessageName.getter()
{
  return 0xD000000000000023;
}

uint64_t sub_10008939C(uint64_t a1)
{
  return sub_10006CC90(a1, static Proto_Ropes_RateLimit_Values._protobuf_nameMap, (uint64_t)"value", 5, (unsigned int *)&enum case for _NameMap.NameDescription.same(_:));
}

uint64_t Proto_Ropes_RateLimit_Values._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_100207940, (uint64_t)static Proto_Ropes_RateLimit_Values._protobuf_nameMap);
}

uint64_t static Proto_Ropes_RateLimit_Values._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_100207940, (uint64_t)static Proto_Ropes_RateLimit_Values._protobuf_nameMap, a1);
}

uint64_t Proto_Ropes_RateLimit_Values.decodeMessage<A>(decoder:)()
{
  while (1)
  {
    uint64_t result = sub_1001BFF00();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 1) {
      sub_1001BFF70();
    }
  }
  return result;
}

uint64_t Proto_Ropes_RateLimit_Values.traverse<A>(visitor:)()
{
  if (!*(void *)(*(void *)v0 + 16) || (uint64_t result = sub_1001C00D0(), !v1))
  {
    type metadata accessor for Proto_Ropes_RateLimit_Values(0);
    return sub_1001BFE40();
  }
  return result;
}

uint64_t static Proto_Ropes_RateLimit_Values.== infix(_:_:)(char *a1, char *a2)
{
  return sub_10008C338(a1, a2, (uint64_t (*)(void, void))sub_1001694D0, type metadata accessor for Proto_Ropes_RateLimit_Values) & 1;
}

Swift::Int Proto_Ropes_RateLimit_Values.hashValue.getter()
{
  return sub_10008C0F8((void (*)(void))type metadata accessor for Proto_Ropes_RateLimit_Values, &qword_10020B9C8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_Values);
}

uint64_t sub_100089598()
{
  return Proto_Ropes_RateLimit_Values.decodeMessage<A>(decoder:)();
}

uint64_t sub_1000895B0()
{
  return Proto_Ropes_RateLimit_Values.traverse<A>(visitor:)();
}

uint64_t sub_1000895C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10008D77C(&qword_10020BDC0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_Values);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100089644@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_100207940, (uint64_t)static Proto_Ropes_RateLimit_Values._protobuf_nameMap, a1);
}

uint64_t sub_100089668(uint64_t a1)
{
  uint64_t v2 = sub_10008D77C(&qword_10020B9D0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_Values);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000896D4()
{
  sub_10008D77C(&qword_10020B9D0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_Values);
  return sub_1001C0050();
}

void *Proto_Ropes_RateLimit_RateLimitConfigRequest.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Ropes_RateLimit_RateLimitConfigRequest.protoMessageName;
}

unint64_t static Proto_Ropes_RateLimit_RateLimitConfigRequest.protoMessageName.getter()
{
  return 0xD000000000000033;
}

uint64_t sub_100089778()
{
  uint64_t v0 = sub_1001C0160();
  sub_100044F74(v0, static Proto_Ropes_RateLimit_RateLimitConfigRequest._protobuf_nameMap);
  sub_10000D978(v0, (uint64_t)static Proto_Ropes_RateLimit_RateLimitConfigRequest._protobuf_nameMap);
  sub_100003918(&qword_100209FB8);
  uint64_t v1 = (int *)(sub_100003918(&qword_100209FC0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001CD7E0;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "bundle_id";
  *(void *)(v6 + 8) = 9;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v8 = sub_1001C0130();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "feature_id";
  *(void *)(v10 + 8) = 10;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "workload_type";
  *((void *)v12 + 1) = 13;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "params";
  *((void *)v14 + 1) = 6;
  v14[16] = 2;
  v9();
  uint64_t v15 = v5 + 4 * v2 + v1[14];
  *(void *)(v5 + 4 * v2) = 5;
  *(void *)uint64_t v15 = "request_type";
  *(void *)(v15 + 8) = 12;
  *(unsigned char *)(v15 + 16) = 2;
  v9();
  return sub_1001C0140();
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfigRequest._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_100207948, (uint64_t)static Proto_Ropes_RateLimit_RateLimitConfigRequest._protobuf_nameMap);
}

uint64_t static Proto_Ropes_RateLimit_RateLimitConfigRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_100207948, (uint64_t)static Proto_Ropes_RateLimit_RateLimitConfigRequest._protobuf_nameMap, a1);
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfigRequest.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_1001BFF00();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
          type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0);
          uint64_t v4 = v3;
          sub_1001BFF90();
          goto LABEL_5;
        case 4:
          uint64_t v4 = v3;
          sub_100089B9C();
          goto LABEL_5;
        case 5:
          sub_10008D7C4();
          uint64_t v4 = v3;
          sub_1001BFF40();
LABEL_5:
          uint64_t v3 = v4;
          break;
        default:
          break;
      }
      uint64_t result = sub_1001BFF00();
    }
  }
  return result;
}

uint64_t sub_100089B9C()
{
  return sub_1001BFEE0();
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfigRequest.traverse<A>(visitor:)()
{
  uint64_t result = sub_100089E7C((uint64_t)v0);
  if (!v1)
  {
    sub_100089EF4((uint64_t)v0);
    sub_100089F6C((uint64_t)v0);
    if (*(void *)(*v0 + 16))
    {
      sub_1001BFE30();
      type metadata accessor for Proto_Ropes_RateLimit_Values(0);
      sub_10008D77C(&qword_10020B9D0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_Values);
      sub_10008D77C(&qword_10020B9C8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_Values);
      sub_1001C0070();
    }
    if (v0[1])
    {
      sub_10008D7C4();
      sub_1001C00B0();
    }
    type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0);
    return sub_1001BFE40();
  }
  return result;
}

uint64_t sub_100089E7C(uint64_t a1)
{
  uint64_t result = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0);
  if (*(void *)(a1 + *(int *)(result + 28) + 8)) {
    return sub_1001C00F0();
  }
  return result;
}

uint64_t sub_100089EF4(uint64_t a1)
{
  uint64_t result = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0);
  if (*(void *)(a1 + *(int *)(result + 32) + 8)) {
    return sub_1001C00F0();
  }
  return result;
}

uint64_t sub_100089F6C(uint64_t a1)
{
  uint64_t result = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0);
  if (*(void *)(a1 + *(int *)(result + 36) + 8)) {
    return sub_1001C00F0();
  }
  return result;
}

Swift::Int Proto_Ropes_RateLimit_RateLimitConfigRequest.hashValue.getter()
{
  return sub_10008C0F8((void (*)(void))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest, &qword_10020B9E0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest);
}

uint64_t sub_10008A02C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = sub_100054910((uint64_t)&_swiftEmptyArrayStorage);
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  uint64_t result = _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v5 = a1[8];
  unint64_t v6 = (void *)(a2 + a1[7]);
  *unint64_t v6 = 0;
  v6[1] = 0;
  uint64_t v7 = (void *)(a2 + v5);
  *uint64_t v7 = 0;
  v7[1] = 0;
  uint64_t v8 = (void *)(a2 + a1[9]);
  void *v8 = 0;
  v8[1] = 0;
  return result;
}

uint64_t sub_10008A094()
{
  return Proto_Ropes_RateLimit_RateLimitConfigRequest.decodeMessage<A>(decoder:)();
}

uint64_t sub_10008A0AC()
{
  return Proto_Ropes_RateLimit_RateLimitConfigRequest.traverse<A>(visitor:)();
}

uint64_t sub_10008A0C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10008D77C(&qword_10020BDB8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10008A140@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_100207948, (uint64_t)static Proto_Ropes_RateLimit_RateLimitConfigRequest._protobuf_nameMap, a1);
}

uint64_t sub_10008A164(uint64_t a1)
{
  uint64_t v2 = sub_10008D77C(&qword_10020B918, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10008A1D0()
{
  sub_10008D77C(&qword_10020B918, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest);
  return sub_1001C0050();
}

void *Proto_Ropes_RateLimit_RateLimitConfiguration.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Ropes_RateLimit_RateLimitConfiguration.protoMessageName;
}

unint64_t static Proto_Ropes_RateLimit_RateLimitConfiguration.protoMessageName.getter()
{
  return 0xD000000000000033;
}

uint64_t sub_10008A274()
{
  uint64_t v0 = sub_1001C0160();
  sub_100044F74(v0, static Proto_Ropes_RateLimit_RateLimitConfiguration._protobuf_nameMap);
  sub_10000D978(v0, (uint64_t)static Proto_Ropes_RateLimit_RateLimitConfiguration._protobuf_nameMap);
  sub_100003918(&qword_100209FB8);
  uint64_t v1 = (int *)(sub_100003918(&qword_100209FC0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1001CD800;
  unint64_t v4 = v23 + v3;
  unint64_t v5 = v23 + v3 + v1[14];
  *(void *)(v23 + v3) = 1;
  *(void *)unint64_t v5 = "bundle_id";
  *(void *)(v5 + 8) = 9;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v7 = sub_1001C0130();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v4 + v2 + v1[14];
  *(void *)(v4 + v2) = 2;
  *(void *)unint64_t v9 = "feature_id";
  *(void *)(v9 + 8) = 10;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  unint64_t v10 = (void *)(v4 + 2 * v2);
  uint64_t v11 = (char *)v10 + v1[14];
  *unint64_t v10 = 3;
  *(void *)uint64_t v11 = "workload_type";
  *((void *)v11 + 1) = 13;
  unsigned char v11[16] = 2;
  v8();
  uint64_t v12 = (void *)(v4 + 3 * v2);
  uint64_t v13 = (char *)v12 + v1[14];
  void *v12 = 5;
  *(void *)uint64_t v13 = "params";
  *((void *)v13 + 1) = 6;
  unsigned char v13[16] = 2;
  v8();
  uint64_t v14 = (void *)(v4 + 4 * v2);
  uint64_t v15 = (char *)v14 + v1[14];
  *uint64_t v14 = 6;
  *(void *)uint64_t v15 = "request_type";
  *((void *)v15 + 1) = 12;
  v15[16] = 2;
  v8();
  uint64_t v16 = (void *)(v4 + 5 * v2);
  uint64_t v17 = (char *)v16 + v1[14];
  *uint64_t v16 = 10;
  *(void *)uint64_t v17 = "rate";
  *((void *)v17 + 1) = 4;
  v17[16] = 2;
  v8();
  uint64_t v18 = (void *)(v4 + 6 * v2);
  uint64_t v19 = (char *)v18 + v1[14];
  *uint64_t v18 = 11;
  *(void *)uint64_t v19 = "ttl";
  *((void *)v19 + 1) = 3;
  char v19[16] = 2;
  v8();
  uint64_t v20 = (void *)(v4 + 7 * v2);
  uint64_t v21 = (char *)v20 + v1[14];
  *uint64_t v20 = 12;
  *(void *)uint64_t v21 = "jitter";
  *((void *)v21 + 1) = 6;
  v21[16] = 2;
  v8();
  return sub_1001C0140();
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfiguration._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_100207950, (uint64_t)static Proto_Ropes_RateLimit_RateLimitConfiguration._protobuf_nameMap);
}

uint64_t static Proto_Ropes_RateLimit_RateLimitConfiguration._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_100207950, (uint64_t)static Proto_Ropes_RateLimit_RateLimitConfiguration._protobuf_nameMap, a1);
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfiguration.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_1001BFF00();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
          sub_1001BFFA0();
          break;
        case 5:
          sub_10008A7DC();
          break;
        case 6:
          sub_10008D7C4();
          sub_1001BFF40();
          break;
        case 10:
          sub_10008A8D0();
          break;
        case 11:
          sub_10008A980();
          break;
        case 12:
          sub_1001BFF80();
          break;
        default:
          break;
      }
      uint64_t result = sub_1001BFF00();
    }
  }
  return result;
}

uint64_t sub_10008A7DC()
{
  return sub_1001BFEE0();
}

uint64_t sub_10008A8D0()
{
  return sub_1001BFFE0();
}

uint64_t sub_10008A980()
{
  return sub_1001BFFE0();
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfiguration.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = v3;
  unint64_t v9 = v5[1];
  uint64_t v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0) {
    uint64_t v10 = *v5 & 0xFFFFFFFFFFFFLL;
  }
  if (!v10 || (uint64_t result = sub_1001C00F0(), !v4))
  {
    unint64_t v12 = v5[3];
    uint64_t v13 = HIBYTE(v12) & 0xF;
    if ((v12 & 0x2000000000000000) == 0) {
      uint64_t v13 = v5[2] & 0xFFFFFFFFFFFFLL;
    }
    if (!v13 || (uint64_t result = sub_1001C00F0(), !v4))
    {
      unint64_t v14 = v5[5];
      uint64_t v15 = HIBYTE(v14) & 0xF;
      if ((v14 & 0x2000000000000000) == 0) {
        uint64_t v15 = v5[4] & 0xFFFFFFFFFFFFLL;
      }
      if (!v15 || (uint64_t result = sub_1001C00F0(), !v4))
      {
        if (!*(void *)(v5[6] + 16)
          || (sub_1001BFE30(),
              type metadata accessor for Proto_Ropes_RateLimit_Values(0),
              sub_10008D77C(&qword_10020B9D0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_Values), sub_10008D77C(&qword_10020B9C8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_Values), uint64_t result = sub_1001C0070(), !v4))
        {
          if (!v5[7] || (sub_10008D7C4(), uint64_t result = sub_1001C00B0(), !v4))
          {
            uint64_t result = sub_10008ACBC((uint64_t)v5, a1, a2, a3);
            if (!v4)
            {
              sub_10008AE98((uint64_t)v5, a1, a2, a3);
              if (v5[9]) {
                sub_1001C00E0();
              }
              type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration(0);
              return sub_1001BFE40();
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10008ACBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_100003918(&qword_100209368);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration(0);
  sub_10003282C(a1 + *(int *)(v14 + 44), (uint64_t)v8, &qword_100209368);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_100010360((uint64_t)v8, &qword_100209368);
  }
  sub_100087E50((uint64_t)v8, (uint64_t)v13);
  sub_10008D77C(&qword_10020BA68, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate);
  sub_1001C0120();
  return sub_10008D720((uint64_t)v13);
}

uint64_t sub_10008AE98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_100003918(&qword_100209360);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1001BFE20();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration(0);
  sub_10003282C(a1 + *(int *)(v14 + 48), (uint64_t)v8, &qword_100209360);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_100010360((uint64_t)v8, &qword_100209360);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v8, v9);
  sub_10008D77C(&qword_10020BDD8, (void (*)(uint64_t))&type metadata accessor for Google_Protobuf_Duration);
  sub_1001C0120();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

Swift::Int Proto_Ropes_RateLimit_RateLimitConfiguration.hashValue.getter()
{
  return sub_10008C0F8((void (*)(void))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration, &qword_10020B9E8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
}

uint64_t sub_10008B0E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0xE000000000000000;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0xE000000000000000;
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = 0xE000000000000000;
  *(void *)(a2 + 48) = sub_100054910((uint64_t)&_swiftEmptyArrayStorage);
  *(void *)(a2 + 56) = 0;
  *(unsigned char *)(a2 + 64) = 1;
  *(void *)(a2 + 72) = 0;
  _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v4 = a2 + *(int *)(a1 + 44);
  uint64_t v5 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 48);
  uint64_t v7 = sub_1001BFE20();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
  return v8(v6, 1, 1, v7);
}

uint64_t sub_10008B1E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 40);
  uint64_t v5 = sub_1001BFE60();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_10008B258(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 40);
  uint64_t v5 = sub_1001BFE60();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*sub_10008B2C8())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t sub_10008B2EC()
{
  return Proto_Ropes_RateLimit_RateLimitConfiguration.decodeMessage<A>(decoder:)();
}

uint64_t sub_10008B304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Ropes_RateLimit_RateLimitConfiguration.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_10008B31C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10008D77C(&qword_10020BDB0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10008B398@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_100207950, (uint64_t)static Proto_Ropes_RateLimit_RateLimitConfiguration._protobuf_nameMap, a1);
}

uint64_t sub_10008B3BC(uint64_t a1)
{
  uint64_t v2 = sub_10008D77C(&qword_10020B9F8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10008B428()
{
  sub_10008D77C(&qword_10020B9F8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
  return sub_1001C0050();
}

void sub_10008B4A4()
{
  v0._countAndFlagsBits = 0x657461522ELL;
  v0._object = (void *)0xE500000000000000;
  sub_1001C0D00(v0);
  static Proto_Ropes_RateLimit_RateLimitConfiguration.Rate.protoMessageName = 0xD000000000000033;
  *(void *)algn_10021FE08 = 0x80000001001C42A0;
}

uint64_t *Proto_Ropes_RateLimit_RateLimitConfiguration.Rate.protoMessageName.unsafeMutableAddressor()
{
  if (qword_100207958 != -1) {
    swift_once();
  }
  return &static Proto_Ropes_RateLimit_RateLimitConfiguration.Rate.protoMessageName;
}

uint64_t static Proto_Ropes_RateLimit_RateLimitConfiguration.Rate.protoMessageName.getter()
{
  if (qword_100207958 != -1) {
    swift_once();
  }
  uint64_t v0 = static Proto_Ropes_RateLimit_RateLimitConfiguration.Rate.protoMessageName;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_10008B5C0()
{
  uint64_t v0 = sub_1001C0160();
  sub_100044F74(v0, static Proto_Ropes_RateLimit_RateLimitConfiguration.Rate._protobuf_nameMap);
  sub_10000D978(v0, (uint64_t)static Proto_Ropes_RateLimit_RateLimitConfiguration.Rate._protobuf_nameMap);
  sub_100003918(&qword_100209FB8);
  uint64_t v1 = (int *)(sub_100003918(&qword_100209FC0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001CD7F0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "count";
  *(void *)(v6 + 8) = 5;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_1001C0130();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "duration";
  *((void *)v10 + 1) = 8;
  v10[16] = 2;
  v9();
  return sub_1001C0140();
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfiguration.Rate._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_100207960, (uint64_t)static Proto_Ropes_RateLimit_RateLimitConfiguration.Rate._protobuf_nameMap);
}

uint64_t static Proto_Ropes_RateLimit_RateLimitConfiguration.Rate._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_100207960, (uint64_t)static Proto_Ropes_RateLimit_RateLimitConfiguration.Rate._protobuf_nameMap, a1);
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfiguration.Rate.decodeMessage<A>(decoder:)()
{
  while (1)
  {
    uint64_t result = sub_1001BFF00();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 2)
    {
      sub_10008B850();
    }
    else if (result == 1)
    {
      sub_1001BFFC0();
    }
  }
  return result;
}

uint64_t sub_10008B850()
{
  return sub_1001BFFE0();
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfiguration.Rate.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*v3 || (uint64_t result = sub_1001C0100(), !v4))
  {
    uint64_t result = sub_10008B9B4((uint64_t)v3, a1, a2, a3);
    if (!v4)
    {
      type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate(0);
      return sub_1001BFE40();
    }
  }
  return result;
}

uint64_t sub_10008B9B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_100003918(&qword_100209360);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1001BFE20();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate(0);
  sub_10003282C(a1 + *(int *)(v14 + 24), (uint64_t)v8, &qword_100209360);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_100010360((uint64_t)v8, &qword_100209360);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v8, v9);
  sub_10008D77C(&qword_10020BDD8, (void (*)(uint64_t))&type metadata accessor for Google_Protobuf_Duration);
  sub_1001C0120();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

Swift::Int Proto_Ropes_RateLimit_RateLimitConfiguration.Rate.hashValue.getter()
{
  return sub_10008C0F8((void (*)(void))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate, &qword_10020B9F0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate);
}

uint64_t sub_10008BC04@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  *a2 = 0;
  _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v4 = (char *)a2 + *(int *)(a1 + 24);
  uint64_t v5 = sub_1001BFE20();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  return v6(v4, 1, 1, v5);
}

uint64_t sub_10008BC8C()
{
  return Proto_Ropes_RateLimit_RateLimitConfiguration.Rate.decodeMessage<A>(decoder:)();
}

uint64_t sub_10008BCA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Ropes_RateLimit_RateLimitConfiguration.Rate.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_10008BCBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10008D77C(&qword_10020BDA8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10008BD38@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_100207960, (uint64_t)static Proto_Ropes_RateLimit_RateLimitConfiguration.Rate._protobuf_nameMap, a1);
}

uint64_t sub_10008BD5C(uint64_t a1)
{
  uint64_t v2 = sub_10008D77C(&qword_10020BA68, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10008BDC8()
{
  sub_10008D77C(&qword_10020BA68, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate);
  return sub_1001C0050();
}

void *Proto_Ropes_RateLimit_RateLimitConfigurationList.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Ropes_RateLimit_RateLimitConfigurationList.protoMessageName;
}

unint64_t static Proto_Ropes_RateLimit_RateLimitConfigurationList.protoMessageName.getter()
{
  return 0xD000000000000037;
}

uint64_t sub_10008BE6C(uint64_t a1)
{
  return sub_10006CC90(a1, static Proto_Ropes_RateLimit_RateLimitConfigurationList._protobuf_nameMap, (uint64_t)"rate_limit_configuration", 24, (unsigned int *)&enum case for _NameMap.NameDescription.standard(_:));
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfigurationList._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10003E99C(&qword_100207968, (uint64_t)static Proto_Ropes_RateLimit_RateLimitConfigurationList._protobuf_nameMap);
}

uint64_t static Proto_Ropes_RateLimit_RateLimitConfigurationList._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA14(&qword_100207968, (uint64_t)static Proto_Ropes_RateLimit_RateLimitConfigurationList._protobuf_nameMap, a1);
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfigurationList.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_1001BFF00();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 1)
      {
        type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration(0);
        sub_10008D77C(&qword_10020B9F8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
        sub_1001BFFD0();
      }
      uint64_t result = sub_1001BFF00();
    }
  }
  return result;
}

uint64_t Proto_Ropes_RateLimit_RateLimitConfigurationList.traverse<A>(visitor:)()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration(0),
        sub_10008D77C(&qword_10020B9F8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration), uint64_t result = sub_1001C0110(), !v1))
  {
    type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0);
    return sub_1001BFE40();
  }
  return result;
}

Swift::Int Proto_Ropes_RateLimit_RateLimitConfigurationList.hashValue.getter()
{
  return sub_10008C0F8((void (*)(void))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList, &qword_10020BA00, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
}

Swift::Int sub_10008C0F8(void (*a1)(void), unint64_t *a2, void (*a3)(uint64_t))
{
  return sub_1001C1990();
}

uint64_t sub_10008C180()
{
  return Proto_Ropes_RateLimit_RateLimitConfigurationList.decodeMessage<A>(decoder:)();
}

uint64_t sub_10008C198()
{
  return Proto_Ropes_RateLimit_RateLimitConfigurationList.traverse<A>(visitor:)();
}

uint64_t sub_10008C1B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10008D77C(&qword_10020BDA0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10008C22C@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFF4(&qword_100207968, (uint64_t)static Proto_Ropes_RateLimit_RateLimitConfigurationList._protobuf_nameMap, a1);
}

uint64_t sub_10008C250(uint64_t a1)
{
  uint64_t v2 = sub_10008D77C(&qword_10020B908, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10008C2BC()
{
  sub_10008D77C(&qword_10020B908, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  return sub_1001C0050();
}

uint64_t sub_10008C338(char *a1, char *a2, uint64_t (*a3)(void, void), uint64_t (*a4)(void))
{
  uint64_t v8 = sub_1001BFE60();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v11 = __chkstk_darwin(v8, v10);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v14);
  uint64_t v16 = (char *)&v22 - v15;
  if (a3(*(void *)a1, *(void *)a2))
  {
    uint64_t v17 = a4(0);
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v18(v16, &a1[*(int *)(v17 + 20)], v8);
    v18(v13, &a2[*(int *)(v17 + 20)], v8);
    sub_10008D77C(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v19 = sub_1001C0BD0();
    uint64_t v20 = *(void (**)(char *, uint64_t))(v9 + 8);
    v20(v13, v8);
    v20(v16, v8);
  }
  else
  {
    char v19 = 0;
  }
  return v19 & 1;
}

uint64_t _s20privatecloudcomputed022Proto_Ropes_RateLimit_dE13ConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BFE60();
  uint64_t v79 = *(void *)(v4 - 8);
  uint64_t v80 = v4;
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v78 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v8);
  uint64_t v77 = (char *)&v74 - v9;
  uint64_t v86 = sub_1001BFE20();
  uint64_t v84 = *(void *)(v86 - 8);
  __chkstk_darwin(v86, v10);
  uint64_t v81 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_100003918(&qword_10020BDC8);
  __chkstk_darwin(v83, v12);
  uint64_t v85 = (uint64_t)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100003918(&qword_100209360);
  uint64_t v16 = __chkstk_darwin(v14 - 8, v15);
  uint64_t v82 = (uint64_t)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v87 = (uint64_t)&v74 - v20;
  __chkstk_darwin(v19, v21);
  uint64_t v88 = (uint64_t)&v74 - v22;
  uint64_t v23 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate(0);
  uint64_t v89 = *(void *)(v23 - 8);
  __chkstk_darwin(v23, v24);
  uint64_t v26 = (_DWORD *)((char *)&v74 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v27 = sub_100003918(&qword_10020BDE0);
  __chkstk_darwin(v27, v28);
  uint64_t v30 = (char *)&v74 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_100003918(&qword_100209368);
  uint64_t v33 = __chkstk_darwin(v31 - 8, v32);
  uint64_t v35 = (char *)&v74 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __chkstk_darwin(v33, v36);
  uint64_t v39 = (char *)&v74 - v38;
  __chkstk_darwin(v37, v40);
  uint64_t v42 = (char *)&v74 - v41;
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v43 = 0, (sub_1001C1840() & 1) != 0))
  {
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
      || (char v43 = 0, (sub_1001C1840() & 1) != 0))
    {
      if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
        || (char v43 = 0, (sub_1001C1840() & 1) != 0))
      {
        if ((sub_1001685A4(*(void *)(a1 + 48), *(void *)(a2 + 48)) & 1) == 0) {
          goto LABEL_35;
        }
        uint64_t v44 = *(void *)(a1 + 56);
        uint64_t v45 = *(void *)(a2 + 56);
        if (*(unsigned char *)(a2 + 64) == 1)
        {
          if (v45)
          {
            if (v45 == 1)
            {
              if (v44 != 1) {
                goto LABEL_35;
              }
            }
            else if (v44 != 2)
            {
              goto LABEL_35;
            }
          }
          else if (v44)
          {
            goto LABEL_35;
          }
        }
        else if (v44 != v45)
        {
          goto LABEL_35;
        }
        uint64_t v46 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration(0);
        sub_10003282C(a1 + *(int *)(v46 + 44), (uint64_t)v42, &qword_100209368);
        uint64_t v75 = v46;
        sub_10003282C(a2 + *(int *)(v46 + 44), (uint64_t)v39, &qword_100209368);
        uint64_t v47 = (uint64_t)&v30[*(int *)(v27 + 48)];
        sub_10003282C((uint64_t)v42, (uint64_t)v30, &qword_100209368);
        uint64_t v76 = v47;
        sub_10003282C((uint64_t)v39, v47, &qword_100209368);
        uint64_t v48 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48);
        if (v48((uint64_t)v30, 1, v23) == 1)
        {
          sub_100010360((uint64_t)v39, &qword_100209368);
          sub_100010360((uint64_t)v42, &qword_100209368);
          if (v48(v76, 1, v23) == 1)
          {
            sub_100010360((uint64_t)v30, &qword_100209368);
LABEL_28:
            uint64_t v52 = v75;
            uint64_t v53 = v88;
            sub_10003282C(a1 + *(int *)(v75 + 48), v88, &qword_100209360);
            uint64_t v54 = v87;
            sub_10003282C(a2 + *(int *)(v52 + 48), v87, &qword_100209360);
            uint64_t v55 = v85;
            uint64_t v56 = v85 + *(int *)(v83 + 48);
            sub_10003282C(v53, v85, &qword_100209360);
            sub_10003282C(v54, v56, &qword_100209360);
            uint64_t v57 = v84;
            uint64_t v58 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48);
            uint64_t v59 = v86;
            if (v58(v55, 1, v86) == 1)
            {
              sub_100010360(v54, &qword_100209360);
              sub_100010360(v53, &qword_100209360);
              if (v58(v56, 1, v59) == 1)
              {
                sub_100010360(v55, &qword_100209360);
                goto LABEL_38;
              }
              goto LABEL_33;
            }
            uint64_t v60 = v82;
            sub_10003282C(v55, v82, &qword_100209360);
            if (v58(v56, 1, v59) == 1)
            {
              sub_100010360(v87, &qword_100209360);
              sub_100010360(v88, &qword_100209360);
              (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v60, v59);
LABEL_33:
              uint64_t v49 = &qword_10020BDC8;
              uint64_t v50 = v55;
              goto LABEL_34;
            }
            uint64_t v62 = v81;
            (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v81, v56, v59);
            sub_10008D77C(&qword_10020BDD0, (void (*)(uint64_t))&type metadata accessor for Google_Protobuf_Duration);
            char v63 = sub_1001C0BD0();
            uint64_t v64 = *(void (**)(char *, uint64_t))(v57 + 8);
            v64(v62, v59);
            sub_100010360(v87, &qword_100209360);
            sub_100010360(v88, &qword_100209360);
            v64((char *)v60, v59);
            sub_100010360(v55, &qword_100209360);
            if (v63)
            {
LABEL_38:
              if (*(double *)(a1 + 72) == *(double *)(a2 + 72))
              {
                uint64_t v65 = v75;
                uint64_t v66 = a1 + *(int *)(v75 + 40);
                uint64_t v68 = v79;
                uint64_t v67 = v80;
                uint64_t v69 = *(void (**)(char *, uint64_t, uint64_t))(v79 + 16);
                uint64_t v70 = v77;
                v69(v77, v66, v80);
                uint64_t v71 = a2 + *(int *)(v65 + 40);
                uint64_t v72 = v78;
                v69(v78, v71, v67);
                sub_10008D77C(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
                char v43 = sub_1001C0BD0();
                uint64_t v73 = *(void (**)(char *, uint64_t))(v68 + 8);
                v73(v72, v67);
                v73(v70, v67);
                return v43 & 1;
              }
            }
LABEL_35:
            char v43 = 0;
            return v43 & 1;
          }
        }
        else
        {
          sub_10003282C((uint64_t)v30, (uint64_t)v35, &qword_100209368);
          if (v48(v76, 1, v23) != 1)
          {
            sub_100087E50(v76, (uint64_t)v26);
            char v51 = _s20privatecloudcomputed022Proto_Ropes_RateLimit_dE13ConfigurationV0D0V2eeoiySbAE_AEtFZ_0(v35, v26);
            sub_10008D720((uint64_t)v26);
            sub_100010360((uint64_t)v39, &qword_100209368);
            sub_100010360((uint64_t)v42, &qword_100209368);
            sub_10008D720((uint64_t)v35);
            sub_100010360((uint64_t)v30, &qword_100209368);
            if ((v51 & 1) == 0) {
              goto LABEL_35;
            }
            goto LABEL_28;
          }
          sub_100010360((uint64_t)v39, &qword_100209368);
          sub_100010360((uint64_t)v42, &qword_100209368);
          sub_10008D720((uint64_t)v35);
        }
        uint64_t v49 = &qword_10020BDE0;
        uint64_t v50 = (uint64_t)v30;
LABEL_34:
        sub_100010360(v50, v49);
        goto LABEL_35;
      }
    }
  }
  return v43 & 1;
}

uint64_t _s20privatecloudcomputed022Proto_Ropes_RateLimit_dE13ConfigurationV0D0V2eeoiySbAE_AEtFZ_0(char *a1, _DWORD *a2)
{
  uint64_t v4 = sub_1001BFE60();
  uint64_t v64 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v55 - v10;
  uint64_t v12 = sub_1001BFE20();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v65 = v12;
  uint64_t v66 = v13;
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100003918(&qword_10020BDC8);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100003918(&qword_100209360);
  uint64_t v23 = __chkstk_darwin(v21 - 8, v22);
  uint64_t v25 = __chkstk_darwin(v23, v24);
  uint64_t v27 = (char *)&v55 - v26;
  __chkstk_darwin(v25, v28);
  uint64_t v31 = (char *)&v55 - v30;
  if (*(_DWORD *)a1 != *a2) {
    goto LABEL_8;
  }
  uint64_t v62 = v4;
  uint64_t v63 = v29;
  uint64_t v58 = v16;
  uint64_t v60 = v11;
  uint64_t v61 = v8;
  uint64_t v32 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate(0);
  sub_10003282C((uint64_t)&a1[*(int *)(v32 + 24)], (uint64_t)v31, &qword_100209360);
  uint64_t v59 = v32;
  sub_10003282C((uint64_t)a2 + *(int *)(v32 + 24), (uint64_t)v27, &qword_100209360);
  uint64_t v33 = (uint64_t)&v20[*(int *)(v17 + 48)];
  sub_10003282C((uint64_t)v31, (uint64_t)v20, &qword_100209360);
  sub_10003282C((uint64_t)v27, v33, &qword_100209360);
  uint64_t v34 = v65;
  uint64_t v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48);
  uint64_t v36 = a2;
  uint64_t v37 = a1;
  if (v35((uint64_t)v20, 1, v65) == 1)
  {
    sub_100010360((uint64_t)v27, &qword_100209360);
    sub_100010360((uint64_t)v31, &qword_100209360);
    if (v35(v33, 1, v34) == 1)
    {
      sub_100010360((uint64_t)v20, &qword_100209360);
LABEL_11:
      uint64_t v47 = v59;
      uint64_t v48 = v60;
      uint64_t v49 = v64;
      uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
      uint64_t v51 = v62;
      v50(v60, &v37[*(int *)(v59 + 20)], v62);
      uint64_t v52 = (char *)v36 + *(int *)(v47 + 20);
      uint64_t v53 = v61;
      v50(v61, v52, v51);
      sub_10008D77C(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v40 = sub_1001C0BD0();
      uint64_t v54 = *(void (**)(char *, uint64_t))(v49 + 8);
      v54(v53, v51);
      v54(v48, v51);
      return v40 & 1;
    }
    goto LABEL_7;
  }
  uint64_t v57 = a1;
  uint64_t v38 = v66;
  uint64_t v39 = v63;
  sub_10003282C((uint64_t)v20, v63, &qword_100209360);
  if (v35(v33, 1, v34) == 1)
  {
    sub_100010360((uint64_t)v27, &qword_100209360);
    sub_100010360((uint64_t)v31, &qword_100209360);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v39, v34);
LABEL_7:
    sub_100010360((uint64_t)v20, &qword_10020BDC8);
    goto LABEL_8;
  }
  uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 32);
  uint64_t v56 = v36;
  char v43 = v58;
  v42(v58, v33, v34);
  sub_10008D77C(&qword_10020BDD0, (void (*)(uint64_t))&type metadata accessor for Google_Protobuf_Duration);
  char v44 = sub_1001C0BD0();
  uint64_t v45 = *(void (**)(char *, uint64_t))(v38 + 8);
  uint64_t v46 = v43;
  uint64_t v36 = v56;
  v45(v46, v34);
  sub_100010360((uint64_t)v27, &qword_100209360);
  sub_100010360((uint64_t)v31, &qword_100209360);
  v45((char *)v39, v34);
  sub_100010360((uint64_t)v20, &qword_100209360);
  uint64_t v37 = v57;
  if (v44) {
    goto LABEL_11;
  }
LABEL_8:
  char v40 = 0;
  return v40 & 1;
}

uint64_t _s20privatecloudcomputed022Proto_Ropes_RateLimit_dE13ConfigRequestV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BFE60();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v12 = (char *)&v38 - v11;
  uint64_t v13 = (int *)type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0);
  uint64_t v14 = v13[7];
  uint64_t v15 = (uint64_t *)((char *)a1 + v14);
  uint64_t v16 = *(uint64_t *)((char *)a1 + v14 + 8);
  uint64_t v17 = (void *)(a2 + v14);
  uint64_t v18 = v17[1];
  if (!v16)
  {
    if (v18) {
      goto LABEL_37;
    }
    goto LABEL_10;
  }
  if (!v18) {
    goto LABEL_37;
  }
  BOOL v19 = *v15 == *v17 && v16 == v18;
  if (v19 || (char v20 = 0, (sub_1001C1840() & 1) != 0))
  {
LABEL_10:
    uint64_t v21 = v13[8];
    uint64_t v22 = (uint64_t *)((char *)a1 + v21);
    uint64_t v23 = *(uint64_t *)((char *)a1 + v21 + 8);
    uint64_t v24 = (void *)(a2 + v21);
    uint64_t v25 = v24[1];
    if (v23)
    {
      if (!v25) {
        goto LABEL_37;
      }
      if (*v22 != *v24 || v23 != v25)
      {
        char v20 = 0;
        if ((sub_1001C1840() & 1) == 0) {
          return v20 & 1;
        }
      }
    }
    else if (v25)
    {
      goto LABEL_37;
    }
    uint64_t v27 = v13[9];
    uint64_t v28 = (uint64_t *)((char *)a1 + v27);
    uint64_t v29 = *(uint64_t *)((char *)a1 + v27 + 8);
    uint64_t v30 = (void *)(a2 + v27);
    uint64_t v31 = v30[1];
    if (v29)
    {
      if (!v31) {
        goto LABEL_37;
      }
      if (*v28 != *v30 || v29 != v31)
      {
        char v20 = 0;
        if ((sub_1001C1840() & 1) == 0) {
          return v20 & 1;
        }
      }
    }
    else if (v31)
    {
      goto LABEL_37;
    }
    if ((sub_1001685A4(*a1, *(void *)a2) & 1) == 0) {
      goto LABEL_37;
    }
    uint64_t v33 = a1[1];
    uint64_t v34 = *(void *)(a2 + 8);
    if (*(unsigned char *)(a2 + 16) == 1)
    {
      if (v34)
      {
        if (v34 == 1)
        {
          if (v33 == 1) {
            goto LABEL_35;
          }
        }
        else if (v33 == 2)
        {
          goto LABEL_35;
        }
LABEL_37:
        char v20 = 0;
        return v20 & 1;
      }
      if (v33) {
        goto LABEL_37;
      }
    }
    else if (v33 != v34)
    {
      goto LABEL_37;
    }
LABEL_35:
    uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v35(v12, (char *)a1 + v13[6], v4);
    v35(v9, (char *)(a2 + v13[6]), v4);
    sub_10008D77C(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v20 = sub_1001C0BD0();
    uint64_t v36 = *(void (**)(char *, uint64_t))(v5 + 8);
    v36(v9, v4);
    v36(v12, v4);
  }
  return v20 & 1;
}

uint64_t type metadata accessor for Proto_Ropes_RateLimit_Values(uint64_t a1)
{
  return sub_10001C958(a1, qword_10020BAE0);
}

uint64_t sub_10008D6BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008D720(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10008D77C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10008D7C4()
{
  unint64_t result = qword_10020B9D8;
  if (!qword_10020B9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020B9D8);
  }
  return result;
}

unint64_t sub_10008D81C()
{
  unint64_t result = qword_10020BA08;
  if (!qword_10020BA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020BA08);
  }
  return result;
}

unint64_t sub_10008D874()
{
  unint64_t result = qword_10020BA10;
  if (!qword_10020BA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020BA10);
  }
  return result;
}

unint64_t sub_10008D8CC()
{
  unint64_t result = qword_10020BA18;
  if (!qword_10020BA18)
  {
    sub_1000166C8(&qword_10020BA20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020BA18);
  }
  return result;
}

unint64_t sub_10008D92C()
{
  unint64_t result = qword_10020BA28;
  if (!qword_10020BA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020BA28);
  }
  return result;
}

uint64_t sub_10008D980()
{
  return sub_10008D77C(&qword_10020BA30, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_Values);
}

uint64_t sub_10008D9C8()
{
  return sub_10008D77C(&qword_10020B9D0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_Values);
}

uint64_t sub_10008DA10()
{
  return sub_10008D77C(&qword_10020B9C8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_Values);
}

uint64_t sub_10008DA58()
{
  return sub_10008D77C(&qword_10020BA38, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_Values);
}

uint64_t sub_10008DAA0()
{
  return sub_10008D77C(&qword_10020BA40, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest);
}

uint64_t sub_10008DAE8()
{
  return sub_10008D77C(&qword_10020B918, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest);
}

uint64_t sub_10008DB30()
{
  return sub_10008D77C(&qword_10020B9E0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest);
}

uint64_t sub_10008DB78()
{
  return sub_10008D77C(&qword_10020BA48, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest);
}

uint64_t sub_10008DBC0()
{
  return sub_10008D77C(&qword_10020BA50, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
}

uint64_t sub_10008DC08()
{
  return sub_10008D77C(&qword_10020B9F8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
}

uint64_t sub_10008DC50()
{
  return sub_10008D77C(&qword_10020B9E8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
}

uint64_t sub_10008DC98()
{
  return sub_10008D77C(&qword_10020BA58, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
}

uint64_t sub_10008DCE0()
{
  return sub_10008D77C(&qword_10020BA60, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate);
}

uint64_t sub_10008DD28()
{
  return sub_10008D77C(&qword_10020BA68, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate);
}

uint64_t sub_10008DD70()
{
  return sub_10008D77C(&qword_10020B9F0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate);
}

uint64_t sub_10008DDB8()
{
  return sub_10008D77C(&qword_10020BA70, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate);
}

uint64_t sub_10008DE00()
{
  return sub_10008D77C(&qword_10020BA78, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
}

uint64_t sub_10008DE48()
{
  return sub_10008D77C(&qword_10020B908, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
}

uint64_t sub_10008DE90()
{
  return sub_10008D77C(&qword_10020BA00, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
}

uint64_t sub_10008DED8()
{
  return sub_10008D77C(&qword_10020BA80, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
}

ValueMetadata *type metadata accessor for Proto_Ropes_RateLimit_RequestType()
{
  return &type metadata for Proto_Ropes_RateLimit_RequestType;
}

uint64_t getEnumTagSinglePayload for Proto_Ropes_RateLimit_Values(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10008DF5C);
}

uint64_t storeEnumTagSinglePayload for Proto_Ropes_RateLimit_Values(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10008DF74);
}

uint64_t initializeBufferWithCopyOfBuffer for Proto_Ropes_RateLimit_RateLimitConfigRequest(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a3[6];
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_1001BFE60();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    uint64_t v14 = a3[8];
    uint64_t v15 = (void *)(v7 + v13);
    uint64_t v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = (void *)(v7 + v14);
    BOOL v19 = (uint64_t *)((char *)a2 + v14);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = a3[9];
    uint64_t v22 = (void *)(v7 + v21);
    uint64_t v23 = (uint64_t *)((char *)a2 + v21);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for Proto_Ropes_RateLimit_RateLimitConfigRequest(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Proto_Ropes_RateLimit_RateLimitConfigRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1001BFE60();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[7];
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)(a1 + v12);
  uint64_t v15 = (void *)(a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = (void *)(a1 + v13);
  uint64_t v18 = (void *)(a2 + v13);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = a3[9];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Proto_Ropes_RateLimit_RateLimitConfigRequest(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  void *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[9];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for Proto_Ropes_RateLimit_RateLimitConfigRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for Proto_Ropes_RateLimit_RateLimitConfigRequest(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (uint64_t *)(a2 + v10);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  *uint64_t v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[8];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (uint64_t *)(a2 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *uint64_t v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[9];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (uint64_t *)(a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *uint64_t v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Ropes_RateLimit_RateLimitConfigRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10008E568);
}

uint64_t sub_10008E568(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1001BFE60();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Proto_Ropes_RateLimit_RateLimitConfigRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10008E62C);
}

void *sub_10008E62C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1001BFE60();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_10008E6D4()
{
  uint64_t result = sub_1001BFE60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for Proto_Ropes_RateLimit_RateLimitConfiguration(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[4];
    uint64_t v10 = a2[5];
    uint64_t v11 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v11;
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    *(void *)(a1 + 72) = a2[9];
    uint64_t v12 = *(int *)(a3 + 40);
    uint64_t v37 = (uint64_t)a2 + v12;
    uint64_t v38 = a1 + v12;
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v10;
    uint64_t v13 = sub_1001BFE60();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v15 = v14;
    uint64_t v16 = a3;
    swift_bridgeObjectRetain();
    v15(v38, v37, v13);
    uint64_t v17 = *(int *)(a3 + 44);
    uint64_t v18 = (_DWORD *)((char *)v4 + v17);
    uint64_t v19 = (_DWORD *)((char *)a2 + v17);
    uint64_t v20 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate(0);
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      uint64_t v22 = sub_100003918(&qword_100209368);
      memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      *uint64_t v18 = *v19;
      v15((uint64_t)v18 + *(int *)(v20 + 20), (uint64_t)v19 + *(int *)(v20 + 20), v13);
      uint64_t v24 = *(int *)(v20 + 24);
      uint64_t v25 = (char *)v18 + v24;
      uint64_t v26 = (char *)v19 + v24;
      uint64_t v27 = sub_1001BFE20();
      uint64_t v28 = *(void *)(v27 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      {
        uint64_t v29 = sub_100003918(&qword_100209360);
        memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
      (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    uint64_t v30 = *(int *)(v16 + 48);
    uint64_t v31 = (char *)v4 + v30;
    uint64_t v32 = (char *)a2 + v30;
    uint64_t v33 = sub_1001BFE20();
    uint64_t v34 = *(void *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      uint64_t v35 = sub_100003918(&qword_100209360);
      memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
  }
  return v4;
}

uint64_t destroy for Proto_Ropes_RateLimit_RateLimitConfiguration(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[10];
  uint64_t v5 = sub_1001BFE60();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = a1 + a2[11];
  uint64_t v8 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    v6(v7 + *(int *)(v8 + 20), v5);
    uint64_t v9 = v7 + *(int *)(v8 + 24);
    uint64_t v10 = sub_1001BFE20();
    uint64_t v11 = *(void *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    }
  }
  uint64_t v12 = a1 + a2[12];
  uint64_t v13 = sub_1001BFE20();
  uint64_t v16 = *(void *)(v13 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v12, 1, v13);
  if (!result)
  {
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8);
    return v15(v12, v13);
  }
  return result;
}

uint64_t initializeWithCopy for Proto_Ropes_RateLimit_RateLimitConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v11 = a3[10];
  uint64_t v33 = a2 + v11;
  uint64_t v34 = a1 + v11;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  uint64_t v12 = sub_1001BFE60();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v34, v33, v12);
  uint64_t v14 = a3[11];
  uint64_t v15 = (_DWORD *)(a1 + v14);
  uint64_t v16 = (_DWORD *)(a2 + v14);
  uint64_t v17 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate(0);
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_100003918(&qword_100209368);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    *uint64_t v15 = *v16;
    v13((uint64_t)v15 + *(int *)(v17 + 20), (uint64_t)v16 + *(int *)(v17 + 20), v12);
    uint64_t v20 = *(int *)(v17 + 24);
    uint64_t v21 = (char *)v15 + v20;
    uint64_t v22 = (char *)v16 + v20;
    uint64_t v23 = sub_1001BFE20();
    uint64_t v24 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      uint64_t v25 = sub_100003918(&qword_100209360);
      memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v26 = a3[12];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (const void *)(a2 + v26);
  uint64_t v29 = sub_1001BFE20();
  uint64_t v30 = *(void *)(v29 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    uint64_t v31 = sub_100003918(&qword_100209360);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v30 + 16))(v27, v28, v29);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  }
  return a1;
}

uint64_t assignWithCopy for Proto_Ropes_RateLimit_RateLimitConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v7 = *(int *)(a3 + 40);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1001BFE60();
  uint64_t v45 = *(void *)(v10 - 8);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 24);
  v11(v8, v9, v10);
  uint64_t v47 = a3;
  uint64_t v12 = *(int *)(a3 + 44);
  uint64_t v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)(a2 + v12);
  uint64_t v15 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate(0);
  uint64_t v46 = *(void *)(v15 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48);
  uint64_t v48 = v13;
  LODWORD(v13) = v16(v13, 1, v15);
  int v17 = v16(v14, 1, v15);
  if (!v13)
  {
    if (v17)
    {
      sub_10008D720((uint64_t)v48);
      size_t v18 = *(void *)(*(void *)(sub_100003918(&qword_100209368) - 8) + 64);
      uint64_t v19 = v48;
      goto LABEL_6;
    }
    *(_DWORD *)uint64_t v48 = *(_DWORD *)v14;
    v11((uint64_t)&v48[*(int *)(v15 + 20)], (uint64_t)&v14[*(int *)(v15 + 20)], v10);
    uint64_t v27 = *(int *)(v15 + 24);
    uint64_t v28 = &v48[v27];
    uint64_t v29 = &v14[v27];
    uint64_t v30 = sub_1001BFE20();
    uint64_t v31 = *(void *)(v30 - 8);
    uint64_t v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
    int v33 = v32(v28, 1, v30);
    int v34 = v32(v29, 1, v30);
    if (v33)
    {
      if (!v34)
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
        goto LABEL_15;
      }
    }
    else
    {
      if (!v34)
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 24))(v28, v29, v30);
        goto LABEL_15;
      }
      (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v30);
    }
    size_t v18 = *(void *)(*(void *)(sub_100003918(&qword_100209360) - 8) + 64);
    uint64_t v19 = v28;
    uint64_t v20 = v29;
    goto LABEL_7;
  }
  if (v17)
  {
    size_t v18 = *(void *)(*(void *)(sub_100003918(&qword_100209368) - 8) + 64);
    uint64_t v19 = v48;
LABEL_6:
    uint64_t v20 = v14;
LABEL_7:
    memcpy(v19, v20, v18);
    goto LABEL_15;
  }
  *(_DWORD *)uint64_t v48 = *(_DWORD *)v14;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(&v48[*(int *)(v15 + 20)], &v14[*(int *)(v15 + 20)], v10);
  uint64_t v21 = *(int *)(v15 + 24);
  uint64_t v22 = &v48[v21];
  uint64_t v23 = &v14[v21];
  uint64_t v24 = sub_1001BFE20();
  uint64_t v25 = *(void *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    uint64_t v26 = sub_100003918(&qword_100209360);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v48, 0, 1, v15);
LABEL_15:
  uint64_t v35 = *(int *)(v47 + 48);
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (void *)(a2 + v35);
  uint64_t v38 = sub_1001BFE20();
  uint64_t v39 = *(void *)(v38 - 8);
  char v40 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v39 + 48);
  int v41 = v40(v36, 1, v38);
  int v42 = v40(v37, 1, v38);
  if (!v41)
  {
    if (!v42)
    {
      (*(void (**)(void *, void *, uint64_t))(v39 + 24))(v36, v37, v38);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v39 + 8))(v36, v38);
    goto LABEL_20;
  }
  if (v42)
  {
LABEL_20:
    uint64_t v43 = sub_100003918(&qword_100209360);
    memcpy(v36, v37, *(void *)(*(void *)(v43 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v39 + 16))(v36, v37, v38);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
  return a1;
}

uint64_t initializeWithTake for Proto_Ropes_RateLimit_RateLimitConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v9 = a3[10];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v12 = sub_1001BFE60();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32);
  v13(v10, v11, v12);
  uint64_t v14 = a3[11];
  uint64_t v15 = (_DWORD *)(a1 + v14);
  uint64_t v16 = (_DWORD *)(a2 + v14);
  uint64_t v17 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate(0);
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_100003918(&qword_100209368);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    *uint64_t v15 = *v16;
    v13((uint64_t)v15 + *(int *)(v17 + 20), (uint64_t)v16 + *(int *)(v17 + 20), v12);
    uint64_t v20 = *(int *)(v17 + 24);
    uint64_t v21 = (char *)v15 + v20;
    uint64_t v22 = (char *)v16 + v20;
    uint64_t v23 = sub_1001BFE20();
    uint64_t v24 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      uint64_t v25 = sub_100003918(&qword_100209360);
      memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v26 = a3[12];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (const void *)(a2 + v26);
  uint64_t v29 = sub_1001BFE20();
  uint64_t v30 = *(void *)(v29 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    uint64_t v31 = sub_100003918(&qword_100209360);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v30 + 32))(v27, v28, v29);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  }
  return a1;
}

uint64_t assignWithTake for Proto_Ropes_RateLimit_RateLimitConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v9 = *(int *)(a3 + 40);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1001BFE60();
  uint64_t v47 = *(void *)(v12 - 8);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 40);
  v13(v10, v11, v12);
  uint64_t v49 = a3;
  uint64_t v14 = *(int *)(a3 + 44);
  uint64_t v15 = (char *)(a1 + v14);
  uint64_t v16 = (char *)(a2 + v14);
  uint64_t v17 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate(0);
  uint64_t v48 = *(void *)(v17 - 8);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48);
  uint64_t v50 = v15;
  LODWORD(v15) = v18(v15, 1, v17);
  int v19 = v18(v16, 1, v17);
  if (!v15)
  {
    if (v19)
    {
      sub_10008D720((uint64_t)v50);
      size_t v20 = *(void *)(*(void *)(sub_100003918(&qword_100209368) - 8) + 64);
      uint64_t v21 = v50;
      goto LABEL_6;
    }
    *(_DWORD *)uint64_t v50 = *(_DWORD *)v16;
    v13((uint64_t)&v50[*(int *)(v17 + 20)], (uint64_t)&v16[*(int *)(v17 + 20)], v12);
    uint64_t v29 = *(int *)(v17 + 24);
    uint64_t v30 = &v50[v29];
    uint64_t v31 = &v16[v29];
    uint64_t v32 = sub_1001BFE20();
    uint64_t v33 = *(void *)(v32 - 8);
    int v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
    int v35 = v34(v30, 1, v32);
    int v36 = v34(v31, 1, v32);
    if (v35)
    {
      if (!v36)
      {
        (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v30, v31, v32);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
        goto LABEL_15;
      }
    }
    else
    {
      if (!v36)
      {
        (*(void (**)(char *, char *, uint64_t))(v33 + 40))(v30, v31, v32);
        goto LABEL_15;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v30, v32);
    }
    size_t v20 = *(void *)(*(void *)(sub_100003918(&qword_100209360) - 8) + 64);
    uint64_t v21 = v30;
    uint64_t v22 = v31;
    goto LABEL_7;
  }
  if (v19)
  {
    size_t v20 = *(void *)(*(void *)(sub_100003918(&qword_100209368) - 8) + 64);
    uint64_t v21 = v50;
LABEL_6:
    uint64_t v22 = v16;
LABEL_7:
    memcpy(v21, v22, v20);
    goto LABEL_15;
  }
  *(_DWORD *)uint64_t v50 = *(_DWORD *)v16;
  (*(void (**)(char *, char *, uint64_t))(v47 + 32))(&v50[*(int *)(v17 + 20)], &v16[*(int *)(v17 + 20)], v12);
  uint64_t v23 = *(int *)(v17 + 24);
  uint64_t v24 = &v50[v23];
  uint64_t v25 = &v16[v23];
  uint64_t v26 = sub_1001BFE20();
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    uint64_t v28 = sub_100003918(&qword_100209360);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v50, 0, 1, v17);
LABEL_15:
  uint64_t v37 = *(int *)(v49 + 48);
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = (void *)(a2 + v37);
  uint64_t v40 = sub_1001BFE20();
  uint64_t v41 = *(void *)(v40 - 8);
  int v42 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v41 + 48);
  int v43 = v42(v38, 1, v40);
  int v44 = v42(v39, 1, v40);
  if (!v43)
  {
    if (!v44)
    {
      (*(void (**)(void *, void *, uint64_t))(v41 + 40))(v38, v39, v40);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v41 + 8))(v38, v40);
    goto LABEL_20;
  }
  if (v44)
  {
LABEL_20:
    uint64_t v45 = sub_100003918(&qword_100209360);
    memcpy(v38, v39, *(void *)(*(void *)(v45 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v41 + 32))(v38, v39, v40);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Ropes_RateLimit_RateLimitConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000900B8);
}

uint64_t sub_1000900B8(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_1001BFE60();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[10];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = sub_100003918(&qword_100209368);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[11];
    goto LABEL_9;
  }
  uint64_t v14 = sub_100003918(&qword_100209360);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[12];
  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for Proto_Ropes_RateLimit_RateLimitConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10009024C);
}

uint64_t sub_10009024C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_1001BFE60();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[10];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_100003918(&qword_100209368);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[11];
    goto LABEL_7;
  }
  uint64_t v14 = sub_100003918(&qword_100209360);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[12];
  return v15(v17, a2, a2, v16);
}

void sub_1000903CC()
{
  sub_1001BFE60();
  if (v0 <= 0x3F)
  {
    sub_10009053C(319, &qword_10020BC20, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate);
    if (v1 <= 0x3F)
    {
      sub_10009053C(319, (unint64_t *)&unk_10020BC28, (void (*)(uint64_t))&type metadata accessor for Google_Protobuf_Duration);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_10009053C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1001C12F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    uint64_t *v4 = *a2;
    unint64_t v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1001BFE60();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = (char *)v4 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_1001BFE20();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = sub_100003918(&qword_100209360);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
  }
  return v4;
}

uint64_t destroy for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_1001BFE20();
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v6, v7);
  }
  return result;
}

_DWORD *initializeWithCopy for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1001BFE20();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_100003918(&qword_100209360);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  return a1;
}

_DWORD *assignWithCopy for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1001BFE20();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v8) = v15(v11, 1, v13);
  int v16 = v15(v12, 1, v13);
  if (!v8)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_100003918(&qword_100209360);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

_DWORD *initializeWithTake for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1001BFE20();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_100003918(&qword_100209360);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  return a1;
}

_DWORD *assignWithTake for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001BFE60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1001BFE20();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v8) = v15(v11, 1, v13);
  int v16 = v15(v12, 1, v13);
  if (!v8)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_100003918(&qword_100209360);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100090EC4);
}

uint64_t sub_100090EC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001BFE60();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_100003918(&qword_100209360);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 24);
    return v13(v15, a2, v14);
  }
}

uint64_t storeEnumTagSinglePayload for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100090FD8);
}

uint64_t sub_100090FD8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1001BFE60();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    uint64_t v14 = sub_100003918(&qword_100209360);
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + *(int *)(a4 + 24);
    return v15(v17, a2, a2, v16);
  }
}

void sub_1000910E4()
{
  sub_1001BFE60();
  if (v0 <= 0x3F)
  {
    sub_10009053C(319, (unint64_t *)&unk_10020BC28, (void (*)(uint64_t))&type metadata accessor for Google_Protobuf_Duration);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t getEnumTagSinglePayload for Proto_Ropes_RateLimit_RateLimitConfigurationList(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000911EC);
}

uint64_t storeEnumTagSinglePayload for Proto_Ropes_RateLimit_RateLimitConfigurationList(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100091204);
}

uint64_t sub_10009120C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v62 = a1;
  uint64_t v63 = a2;
  uint64_t v6 = sub_100003918(&qword_100209380);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v61 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for RateLimitConfiguration(0);
  uint64_t v9 = *(void *)(v57 - 8);
  uint64_t v11 = __chkstk_darwin(v57, v10);
  uint64_t v53 = (uint64_t)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v13);
  uint64_t v51 = (uint64_t)&v50 - v14;
  uint64_t v60 = sub_100003918(&qword_100209378);
  uint64_t v16 = __chkstk_darwin(v60, v15);
  uint64_t v59 = (uint64_t)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v18);
  uint64_t v58 = (char *)&v50 - v19;
  uint64_t v20 = *(void *)(a3 + 64);
  uint64_t v54 = a3 + 64;
  uint64_t v21 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v22 = -1;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  unint64_t v23 = v22 & v20;
  uint64_t v52 = v9;
  int64_t v55 = (unint64_t)(v21 + 63) >> 6;
  uint64_t v56 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  uint64_t v65 = a3;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v25 = 0;
  uint64_t v26 = _swiftEmptyArrayStorage;
  uint64_t v64 = _swiftEmptyArrayStorage;
  if (!v23) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v68 = v4;
  uint64_t v66 = (v23 - 1) & v23;
  int64_t v67 = v25;
  for (unint64_t i = __clz(__rbit64(v23)) | (v25 << 6); ; unint64_t i = __clz(__rbit64(v30)) + (v29 << 6))
  {
    uint64_t v32 = *(void *)(v65 + 56);
    uint64_t v33 = (uint64_t *)(*(void *)(v65 + 48) + 56 * i);
    uint64_t v34 = *v33;
    uint64_t v35 = v33[1];
    uint64_t v36 = v33[2];
    uint64_t v37 = v33[3];
    uint64_t v38 = v33[4];
    uint64_t v39 = v33[5];
    uint64_t v40 = v33[6];
    uint64_t v41 = v32 + *(void *)(*(void *)(type metadata accessor for RateLimitTimingDetails(0) - 8) + 72) * i;
    int v42 = v58;
    sub_100099FAC(v41, (uint64_t)&v58[*(int *)(v60 + 48)], type metadata accessor for RateLimitTimingDetails);
    *int v42 = v34;
    v42[1] = v35;
    v42[2] = v36;
    v42[3] = v37;
    v42[4] = v38;
    v42[5] = v39;
    v42[6] = v40;
    uint64_t v43 = v59;
    sub_10002C318((uint64_t)v42, v59, &qword_100209378);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v44 = (uint64_t)v61;
    uint64_t v45 = v68;
    v62(v43);
    uint64_t v4 = v45;
    if (v45)
    {
      sub_100010360(v43, &qword_100209378);
      uint64_t v26 = v64;
      swift_bridgeObjectRelease();
LABEL_33:
      swift_release();
      return (uint64_t)v26;
    }
    sub_100010360(v43, &qword_100209378);
    if ((*v56)(v44, 1, v57) == 1)
    {
      uint64_t result = sub_100010360(v44, &qword_100209380);
      uint64_t v26 = v64;
      unint64_t v23 = v66;
      int64_t v25 = v67;
      if (v66) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v46 = v44;
      uint64_t v47 = v51;
      sub_10009A1F8(v46, v51, type metadata accessor for RateLimitConfiguration);
      sub_10009A1F8(v47, v53, type metadata accessor for RateLimitConfiguration);
      uint64_t v26 = v64;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v26 = (void *)sub_1000E3C5C(0, v26[2] + 1, 1, (unint64_t)v26);
      }
      unint64_t v49 = v26[2];
      unint64_t v48 = v26[3];
      if (v49 >= v48 >> 1) {
        uint64_t v26 = (void *)sub_1000E3C5C(v48 > 1, v49 + 1, 1, (unint64_t)v26);
      }
      void v26[2] = v49 + 1;
      uint64_t result = sub_10009A1F8(v53, (uint64_t)v26+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(void *)(v52 + 72) * v49, type metadata accessor for RateLimitConfiguration);
      unint64_t v23 = v66;
      int64_t v25 = v67;
      uint64_t v64 = v26;
      if (v66) {
        goto LABEL_4;
      }
    }
LABEL_5:
    BOOL v28 = __OFADD__(v25, 1);
    int64_t v29 = v25 + 1;
    if (v28)
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v29 >= v55) {
      goto LABEL_33;
    }
    unint64_t v30 = *(void *)(v54 + 8 * v29);
    if (!v30) {
      break;
    }
LABEL_17:
    uint64_t v68 = v4;
    uint64_t v66 = (v30 - 1) & v30;
    int64_t v67 = v29;
  }
  int64_t v31 = v29 + 1;
  if (v29 + 1 >= v55) {
    goto LABEL_33;
  }
  unint64_t v30 = *(void *)(v54 + 8 * v31);
  if (v30) {
    goto LABEL_16;
  }
  int64_t v31 = v29 + 2;
  if (v29 + 2 >= v55) {
    goto LABEL_33;
  }
  unint64_t v30 = *(void *)(v54 + 8 * v31);
  if (v30) {
    goto LABEL_16;
  }
  int64_t v31 = v29 + 3;
  if (v29 + 3 >= v55) {
    goto LABEL_33;
  }
  unint64_t v30 = *(void *)(v54 + 8 * v31);
  if (v30) {
    goto LABEL_16;
  }
  int64_t v31 = v29 + 4;
  if (v29 + 4 >= v55) {
    goto LABEL_33;
  }
  unint64_t v30 = *(void *)(v54 + 8 * v31);
  if (v30)
  {
LABEL_16:
    int64_t v29 = v31;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v29 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v29 >= v55) {
      goto LABEL_33;
    }
    unint64_t v30 = *(void *)(v54 + 8 * v29);
    ++v31;
    if (v30) {
      goto LABEL_17;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_100091754(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100003918(&qword_10020BF28);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for RateLimitTimingDetails(0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_100010360(a1, &qword_10020BF28);
    sub_10018D704(a2, (uint64_t)v9);
    sub_100032A84((uint64_t)a2);
    return sub_100010360((uint64_t)v9, &qword_10020BF28);
  }
  else
  {
    sub_10009A1F8(a1, (uint64_t)v13, type metadata accessor for RateLimitTimingDetails);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1000EA71C((uint64_t)v13, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v18;
    swift_bridgeObjectRelease();
    return sub_100032A84((uint64_t)a2);
  }
}

uint64_t sub_100091914(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100003918(&qword_10020BF98);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1001BF7A0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a1, 1, v10) == 1)
  {
    sub_100010360(a1, &qword_10020BF98);
    sub_10018D8CC(a2, (uint64_t)v9);
    sub_10009A184((uint64_t)a2);
    return sub_100010360((uint64_t)v9, &qword_10020BF98);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v14, a1, v10);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1000EA878((uint64_t)v14, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v18;
    swift_bridgeObjectRelease();
    return sub_10009A184((uint64_t)a2);
  }
}

uint64_t sub_100091AE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100003918(&qword_100208648);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100003918(&qword_100208640);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a1, 1, v10) == 1)
  {
    sub_100010360(a1, &qword_100208648);
    sub_10018DC9C(a2, (uint64_t)v9);
    uint64_t v15 = sub_1001BF310();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(a2, v15);
    return sub_100010360((uint64_t)v9, &qword_100208648);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v14, a1, v10);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v20 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1000EAD18((uint64_t)v14, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v20;
    swift_bridgeObjectRelease();
    uint64_t v18 = sub_1001BF310();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(a2, v18);
  }
}

uint64_t sub_100091D10(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v79 = a2;
  uint64_t v78 = a1;
  uint64_t v6 = sub_100003918(&qword_10020BF28);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v77 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for RateLimitTimingDetails(0);
  uint64_t v9 = *(void *)(v71 - 8);
  uint64_t v11 = __chkstk_darwin(v71, v10);
  uint64_t v66 = (uint64_t)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v13);
  uint64_t v64 = (uint64_t)&v62 - v14;
  uint64_t v80 = sub_100003918(&qword_100209378);
  uint64_t v16 = __chkstk_darwin(v80, v15);
  uint64_t v63 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v75 = (uint64_t)&v62 - v20;
  __chkstk_darwin(v19, v21);
  unint64_t v23 = (uint64_t *)((char *)&v62 - v22);
  int64_t v67 = &_swiftEmptyDictionarySingleton;
  uint64_t v89 = &_swiftEmptyDictionarySingleton;
  uint64_t v24 = *(void *)(a3 + 64);
  uint64_t v69 = a3 + 64;
  uint64_t v25 = -1 << *(unsigned char *)(a3 + 32);
  uint64_t v65 = ~v25;
  if (-v25 < 64) {
    uint64_t v26 = ~(-1 << -(char)v25);
  }
  else {
    uint64_t v26 = -1;
  }
  unint64_t v27 = v26 & v24;
  int64_t v68 = (unint64_t)(63 - v25) >> 6;
  uint64_t v76 = v9;
  uint64_t v70 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  uint64_t v81 = a3;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v29 = 0;
  uint64_t v30 = v80;
LABEL_5:
  for (int64_t i = v29; ; int64_t i = v83)
  {
    uint64_t v74 = i;
    unint64_t v73 = v27;
    if (v27)
    {
      int64_t v83 = i;
      uint64_t v84 = v4;
      uint64_t v82 = (v27 - 1) & v27;
      unint64_t v32 = __clz(__rbit64(v27)) | (i << 6);
      goto LABEL_21;
    }
    int64_t v33 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v33 >= v68) {
      goto LABEL_32;
    }
    unint64_t v34 = *(void *)(v69 + 8 * v33);
    if (!v34) {
      break;
    }
LABEL_20:
    int64_t v83 = v33;
    uint64_t v84 = v4;
    uint64_t v82 = (v34 - 1) & v34;
    unint64_t v32 = __clz(__rbit64(v34)) + (v33 << 6);
LABEL_21:
    uint64_t v36 = *(void *)(v81 + 56);
    uint64_t v37 = (uint64_t *)(*(void *)(v81 + 48) + 56 * v32);
    uint64_t v39 = *v37;
    uint64_t v38 = v37[1];
    uint64_t v41 = v37[2];
    uint64_t v40 = v37[3];
    uint64_t v43 = v37[4];
    uint64_t v42 = v37[5];
    uint64_t v44 = v37[6];
    uint64_t v72 = *(void *)(v76 + 72);
    sub_100099FAC(v36 + v72 * v32, (uint64_t)v23 + *(int *)(v30 + 48), type metadata accessor for RateLimitTimingDetails);
    *unint64_t v23 = v39;
    v23[1] = v38;
    void v23[2] = v41;
    void v23[3] = v40;
    v23[4] = v43;
    v23[5] = v42;
    v23[6] = v44;
    uint64_t v45 = v75;
    sub_10002C318((uint64_t)v23, v75, &qword_100209378);
    uint64_t v46 = v45 + *(int *)(v30 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v47 = (uint64_t)v77;
    uint64_t v48 = v84;
    v78(v46);
    uint64_t v4 = v48;
    if (v48)
    {
      sub_100010360(v45, &qword_100209378);
      uint64_t v61 = v67;
      swift_release();
LABEL_33:
      sub_10001DD88();
      return (uint64_t)v61;
    }
    if ((*v70)(v47, 1, v71) != 1)
    {
      uint64_t v49 = v64;
      sub_10009A1F8(v47, v64, type metadata accessor for RateLimitTimingDetails);
      uint64_t v50 = v63;
      uint64_t v51 = (uint64_t)&v63[*(int *)(v80 + 48)];
      long long v53 = *(_OWORD *)(v45 + 16);
      long long v85 = *(_OWORD *)v45;
      long long v52 = v85;
      long long v86 = v53;
      long long v87 = *(_OWORD *)(v45 + 32);
      long long v54 = v87;
      uint64_t v88 = *(void *)(v45 + 48);
      *((void *)v63 + 6) = v88;
      *uint64_t v50 = v52;
      v50[1] = v53;
      v50[2] = v54;
      sub_10009A1F8(v46, v51, type metadata accessor for RateLimitTimingDetails);
      sub_10009A1F8(v49, v66, type metadata accessor for RateLimitTimingDetails);
      int64_t v55 = v67;
      unint64_t v56 = v67[2];
      if (v67[3] <= v56)
      {
        sub_1000E45FC(v56 + 1, 1);
        int64_t v55 = v89;
      }
      sub_1001C1950();
      sub_10002F294();
      sub_1001C1990();
      unint64_t v57 = sub_1001C13F0();
      *(void *)((char *)v55 + ((v57 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v57;
      uint64_t v58 = v55[6] + 56 * v57;
      long long v59 = v86;
      *(_OWORD *)uint64_t v58 = v85;
      *(_OWORD *)(v58 + 16) = v59;
      *(_OWORD *)(v58 + 32) = v87;
      *(void *)(v58 + 48) = v88;
      sub_10009A1F8(v66, v55[7] + v57 * v72, type metadata accessor for RateLimitTimingDetails);
      uint64_t v60 = v55[2] + 1;
      int64_t v67 = v55;
      v55[2] = v60;
      uint64_t result = sub_10009A058(v51, type metadata accessor for RateLimitTimingDetails);
      unint64_t v27 = v82;
      int64_t v29 = v83;
      goto LABEL_5;
    }
    sub_100010360(v45, &qword_100209378);
    uint64_t result = sub_100010360(v47, &qword_10020BF28);
    unint64_t v27 = v82;
  }
  int64_t v35 = i + 2;
  if (i + 2 >= v68) {
    goto LABEL_32;
  }
  unint64_t v34 = *(void *)(v69 + 8 * v35);
  if (v34) {
    goto LABEL_19;
  }
  int64_t v35 = i + 3;
  if (i + 3 >= v68) {
    goto LABEL_32;
  }
  unint64_t v34 = *(void *)(v69 + 8 * v35);
  if (v34) {
    goto LABEL_19;
  }
  int64_t v35 = i + 4;
  if (i + 4 >= v68) {
    goto LABEL_32;
  }
  unint64_t v34 = *(void *)(v69 + 8 * v35);
  if (v34) {
    goto LABEL_19;
  }
  int64_t v35 = i + 5;
  if (i + 5 >= v68)
  {
LABEL_32:
    uint64_t v61 = v67;
    goto LABEL_33;
  }
  unint64_t v34 = *(void *)(v69 + 8 * v35);
  if (v34)
  {
LABEL_19:
    int64_t v33 = v35;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v33 = v35 + 1;
    if (__OFADD__(v35, 1)) {
      break;
    }
    if (v33 >= v68) {
      goto LABEL_32;
    }
    unint64_t v34 = *(void *)(v69 + 8 * v33);
    ++v35;
    if (v34) {
      goto LABEL_20;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_100092420(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v74 = a1;
  uint64_t v75 = a2;
  uint64_t v6 = sub_100003918(&qword_10020BF98);
  __chkstk_darwin(v6 - 8, v7);
  unint64_t v73 = (char *)v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_1001BF7A0();
  uint64_t v9 = *(void *)(v72 - 8);
  uint64_t v11 = __chkstk_darwin(v72 - 8, v10);
  uint64_t v65 = (char *)v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v13);
  uint64_t v61 = (char *)v57 - v14;
  uint64_t v77 = sub_100003918(&qword_10020BFA0);
  uint64_t v16 = __chkstk_darwin(v77, v15);
  uint64_t v60 = (char *)v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v70 = (uint64_t)v57 - v20;
  __chkstk_darwin(v19, v21);
  uint64_t v69 = (char *)v57 - v22;
  long long v85 = &_swiftEmptyDictionarySingleton;
  uint64_t v23 = *(void *)(a3 + 64);
  uint64_t v63 = a3 + 64;
  uint64_t v24 = -1;
  uint64_t v25 = -1 << *(unsigned char *)(a3 + 32);
  v57[1] = ~v25;
  if (-v25 < 64) {
    uint64_t v24 = ~(-1 << -(char)v25);
  }
  unint64_t v26 = v24 & v23;
  int64_t v62 = (unint64_t)(63 - v25) >> 6;
  uint64_t v68 = v9 + 16;
  uint64_t v64 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  long long v59 = (void (**)(char *, uint64_t, uint64_t))(v9 + 32);
  uint64_t v71 = v9;
  uint64_t v58 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  uint64_t v76 = a3;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v28 = 0;
  uint64_t v29 = v72;
  while (1)
  {
    uint64_t v67 = v28;
    unint64_t v66 = v26;
    if (v26)
    {
      uint64_t v81 = v4;
      uint64_t v78 = (v26 - 1) & v26;
      int64_t v79 = v28;
      unint64_t v30 = __clz(__rbit64(v26)) | (v28 << 6);
      goto LABEL_21;
    }
    int64_t v31 = v28 + 1;
    if (__OFADD__(v28, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v31 >= v62) {
      goto LABEL_31;
    }
    unint64_t v32 = *(void *)(v63 + 8 * v31);
    if (!v32) {
      break;
    }
LABEL_20:
    uint64_t v81 = v4;
    uint64_t v78 = (v32 - 1) & v32;
    int64_t v79 = v31;
    unint64_t v30 = __clz(__rbit64(v32)) + (v31 << 6);
LABEL_21:
    uint64_t v34 = v77;
    uint64_t v35 = *(void *)(v76 + 56);
    uint64_t v36 = (uint64_t *)(*(void *)(v76 + 48) + 56 * v30);
    uint64_t v38 = *v36;
    uint64_t v37 = v36[1];
    uint64_t v40 = v36[2];
    uint64_t v39 = v36[3];
    uint64_t v41 = v36[5];
    uint64_t v80 = v36[4];
    uint64_t v42 = v36[6];
    uint64_t v43 = v69;
    (*(void (**)(char *, unint64_t, uint64_t))(v71 + 16))(&v69[*(int *)(v77 + 48)], v35 + *(void *)(v71 + 72) * v30, v29);
    *uint64_t v43 = v38;
    v43[1] = v37;
    void v43[2] = v40;
    v43[3] = v39;
    v43[4] = v80;
    v43[5] = v41;
    v43[6] = v42;
    uint64_t v44 = v70;
    sub_10002C318((uint64_t)v43, v70, &qword_10020BFA0);
    uint64_t v45 = v44 + *(int *)(v34 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v46 = (uint64_t)v73;
    uint64_t v47 = v81;
    v74(v45);
    uint64_t v4 = v47;
    if (v47)
    {
      sub_100010360(v44, &qword_10020BFA0);
      swift_release();
      return sub_10001DD88();
    }
    if ((*v64)(v46, 1, v29) == 1)
    {
      sub_100010360(v44, &qword_10020BFA0);
      uint64_t result = sub_100010360(v46, &qword_10020BF98);
    }
    else
    {
      uint64_t v48 = *v59;
      uint64_t v49 = v61;
      (*v59)(v61, v46, v29);
      uint64_t v50 = v60;
      uint64_t v51 = &v60[*(int *)(v77 + 48)];
      long long v53 = *(_OWORD *)(v44 + 16);
      v82[0] = *(_OWORD *)v44;
      long long v52 = v82[0];
      v82[1] = v53;
      long long v83 = *(_OWORD *)(v44 + 32);
      long long v54 = v83;
      uint64_t v84 = *(void *)(v44 + 48);
      *((void *)v60 + 6) = v84;
      *uint64_t v50 = v52;
      v50[1] = v53;
      v50[2] = v54;
      v48(v51, v45, v29);
      v48(v65, (uint64_t)v49, v29);
      int64_t v55 = v85;
      unint64_t v56 = v85[2];
      if (v85[3] <= v56)
      {
        sub_1000E4AB4(v56 + 1, 1);
        int64_t v55 = v85;
      }
      sub_100098B08((uint64_t)v82, (uint64_t)v65, v55);
      uint64_t result = (*v58)(v51, v29);
    }
    unint64_t v26 = v78;
    int64_t v28 = v79;
  }
  int64_t v33 = v28 + 2;
  if (v28 + 2 >= v62) {
    goto LABEL_31;
  }
  unint64_t v32 = *(void *)(v63 + 8 * v33);
  if (v32) {
    goto LABEL_19;
  }
  int64_t v33 = v28 + 3;
  if (v28 + 3 >= v62) {
    goto LABEL_31;
  }
  unint64_t v32 = *(void *)(v63 + 8 * v33);
  if (v32) {
    goto LABEL_19;
  }
  int64_t v33 = v28 + 4;
  if (v28 + 4 >= v62) {
    goto LABEL_31;
  }
  unint64_t v32 = *(void *)(v63 + 8 * v33);
  if (v32) {
    goto LABEL_19;
  }
  int64_t v33 = v28 + 5;
  if (v28 + 5 >= v62)
  {
LABEL_31:
    sub_10001DD88();
    return (uint64_t)v85;
  }
  unint64_t v32 = *(void *)(v63 + 8 * v33);
  if (v32)
  {
LABEL_19:
    int64_t v31 = v33;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v31 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v31 >= v62) {
      goto LABEL_31;
    }
    unint64_t v32 = *(void *)(v63 + 8 * v31);
    ++v33;
    if (v32) {
      goto LABEL_20;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_100092A58(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v17 = a3;
  uint64_t v18 = a5;
  uint64_t v9 = sub_100003918(&qword_10020BF60);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D934(a1, a1[3]);
  sub_100099CB8();
  sub_1001C19C0();
  uint64_t v20 = a2;
  char v19 = 0;
  sub_100099E5C();
  sub_1001C1740();
  if (!v5)
  {
    uint64_t v14 = v18;
    uint64_t v20 = v17;
    char v19 = 1;
    sub_100099EB0();
    sub_1001C1740();
    uint64_t v20 = a4;
    char v19 = 2;
    sub_100099F04();
    sub_1001C1740();
    uint64_t v20 = v14;
    char v19 = 3;
    sub_100099F58();
    sub_1001C1740();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

unint64_t sub_100092C6C()
{
  unint64_t result = 0xD000000000000017;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x4C74736575716572;
      break;
    case 2:
      unint64_t result = 0x6F4C6465696E6564;
      break;
    case 3:
      unint64_t result = 0x4C6E6F6973736573;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100092D04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100099794(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100092D2C(uint64_t a1)
{
  unint64_t v2 = sub_100099CB8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100092D68(uint64_t a1)
{
  unint64_t v2 = sub_100099CB8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100092DA4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100099970(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_100092DD4(void *a1)
{
  return sub_100092A58(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_100092DF4()
{
  v1[13] = v0;
  sub_100003918(&qword_10020C370);
  v1[14] = swift_task_alloc();
  uint64_t v2 = sub_1001BF0B0();
  v1[15] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v1[16] = v3;
  v1[17] = *(void *)(v3 + 64);
  v1[18] = swift_task_alloc();
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  v1[21] = swift_task_alloc();
  return _swift_task_switch(sub_100092F14, v0, 0);
}

uint64_t sub_100092F14()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[14];
  sub_10003282C(v0[13] + OBJC_IVAR____TtC20privatecloudcomputed11RateLimiter_file, v3, &qword_10020C370);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100010360(v0[14], &qword_10020C370);
    uint64_t v4 = sub_1001C0330();
    os_log_type_t v5 = sub_1001C11D0();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "declining to persist ratelimiter without location", v6, 2u);
      swift_slowDealloc();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v23 = (uint64_t (*)(void))v0[1];
    return v23();
  }
  else
  {
    uint64_t v7 = v0[13];
    uint64_t v8 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0[16] + 32);
    v8(v0[21], v0[14], v0[15]);
    uint64_t v9 = (void *)(v7 + OBJC_IVAR____TtC20privatecloudcomputed11RateLimiter_model);
    swift_beginAccess();
    uint64_t v10 = v9[1];
    uint64_t v12 = v9[2];
    uint64_t v11 = v9[3];
    v0[2] = *v9;
    v0[3] = v10;
    v0[4] = v12;
    v0[5] = v11;
    sub_1000988CC();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1001BEF10();
    v0[22] = v13;
    v0[23] = v14;
    uint64_t v15 = v13;
    unint64_t v16 = v14;
    uint64_t v26 = v0[20];
    uint64_t v27 = v0[21];
    uint64_t v17 = v0[16];
    uint64_t v25 = v0[15];
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
    v17 += 16;
    v0[24] = v18;
    v0[25] = v17 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v18(v26, v27, v25);
    unint64_t v19 = (*(unsigned __int8 *)(v17 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 64);
    uint64_t v20 = swift_allocObject();
    v0[26] = v20;
    *(void *)(v20 + 16) = v15;
    *(void *)(v20 + 24) = v16;
    v8(v20 + v19, v26, v25);
    sub_100007B14(v15, v16);
    if (qword_100207988 != -1) {
      swift_once();
    }
    uint64_t v21 = (void *)blockingIOQueue;
    v0[27] = blockingIOQueue;
    id v22 = v21;
    return _swift_task_switch(sub_100093400, 0, 0);
  }
}

uint64_t sub_100093400()
{
  uint64_t v2 = v0[26];
  uint64_t v1 = v0[27];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[28] = v3;
  v3[2] = v1;
  _OWORD v3[3] = sub_1000989EC;
  v3[4] = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[29] = v4;
  void *v4 = v0;
  v4[1] = sub_100093508;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000024, 0x80000001001C3770, sub_100037430, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_100093508()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 240) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1000938EC;
    uint64_t v4 = 0;
  }
  else
  {
    os_log_type_t v5 = *(void **)(v2 + 216);
    uint64_t v6 = *(void *)(v2 + 104);

    swift_release();
    swift_task_dealloc();
    uint64_t v3 = sub_10009364C;
    uint64_t v4 = v6;
  }
  return _swift_task_switch(v3, v4, 0);
}

uint64_t sub_10009364C()
{
  uint64_t v23 = v0;
  (*(void (**)(void, void, void))(v0 + 192))(*(void *)(v0 + 152), *(void *)(v0 + 168), *(void *)(v0 + 120));
  uint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C11E0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v19 = *(void *)(v0 + 176);
    unint64_t v20 = *(void *)(v0 + 184);
    uint64_t v21 = *(void *)(v0 + 168);
    uint64_t v3 = *(void *)(v0 + 152);
    uint64_t v4 = *(void *)(v0 + 120);
    uint64_t v18 = *(void *)(v0 + 128);
    os_log_type_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v5 = 136315138;
    sub_10009A0B8((unint64_t *)&qword_10020BF20, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v6 = sub_1001C1780();
    *(void *)(v0 + 80) = sub_1000DF238(v6, v7, &v22);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
    v8(v3, v4);
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "wrote persisted ratelimiter, file=%s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_10000792C(v19, v20);
    v8(v21, v4);
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 176);
    unint64_t v9 = *(void *)(v0 + 184);
    uint64_t v11 = *(void *)(v0 + 168);
    uint64_t v12 = *(void *)(v0 + 152);
    uint64_t v13 = *(void *)(v0 + 120);
    uint64_t v14 = *(void *)(v0 + 128);

    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v15(v12, v13);
    sub_10000792C(v10, v9);
    v15(v11, v13);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_1000938EC()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_task_dealloc();
  return _swift_task_switch(sub_100093958, v1, 0);
}

uint64_t sub_100093958()
{
  uint64_t v36 = v0;
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 120);

  swift_release();
  v1(v3, v2, v4);
  swift_errorRetain();
  swift_errorRetain();
  os_log_type_t v5 = sub_1001C0330();
  os_log_type_t v6 = sub_1001C11F0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = *(void *)(v0 + 144);
    uint64_t v8 = *(void *)(v0 + 120);
    uint64_t v9 = *(void *)(v0 + 128);
    uint64_t v10 = swift_slowAlloc();
    int64_t v33 = (void *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315394;
    sub_10009A0B8((unint64_t *)&qword_10020BF20, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v11 = sub_1001C1780();
    *(void *)(v0 + 88) = sub_1000DF238(v11, v12, &v35);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    *(_WORD *)(v10 + 12) = 2112;
    swift_errorRetain();
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 96) = v13;
    sub_1001C1310();
    void *v33 = v13;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "unable to write persisted ratelimiter, file=%s, error=%@", (uint8_t *)v10, 0x16u);
    sub_100003918(&qword_100207DA8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();
  }
  else
  {
    uint64_t v14 = *(void *)(v0 + 144);
    uint64_t v15 = *(void *)(v0 + 120);
    uint64_t v16 = *(void *)(v0 + 128);
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    swift_errorRelease();
    swift_errorRelease();
  }
  (*(void (**)(void, void, void))(v0 + 192))(*(void *)(v0 + 152), *(void *)(v0 + 168), *(void *)(v0 + 120));
  uint64_t v17 = sub_1001C0330();
  os_log_type_t v18 = sub_1001C11E0();
  BOOL v19 = os_log_type_enabled(v17, v18);
  uint64_t v21 = *(void *)(v0 + 176);
  unint64_t v20 = *(void *)(v0 + 184);
  uint64_t v22 = *(void *)(v0 + 168);
  uint64_t v23 = *(void *)(v0 + 152);
  uint64_t v25 = *(void *)(v0 + 120);
  uint64_t v24 = *(void *)(v0 + 128);
  if (v19)
  {
    uint64_t v34 = *(void *)(v0 + 168);
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 136315138;
    sub_10009A0B8((unint64_t *)&qword_10020BF20, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v27 = sub_1001C1780();
    *(void *)(v0 + 80) = sub_1000DF238(v27, v28, &v35);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
    v29(v23, v25);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "wrote persisted ratelimiter, file=%s", v26, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_10000792C(v21, v20);
    uint64_t v30 = v34;
  }
  else
  {

    uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
    v29(v23, v25);
    sub_10000792C(v21, v20);
    uint64_t v30 = v22;
  }
  v29(v30, v25);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int64_t v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31();
}

uint64_t sub_100093E64()
{
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC20privatecloudcomputed11RateLimiter_logger;
  uint64_t v2 = sub_1001C0340();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100010360(v0 + OBJC_IVAR____TtC20privatecloudcomputed11RateLimiter_file, &qword_10020C370);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100003E90(v0 + OBJC_IVAR____TtC20privatecloudcomputed11RateLimiter_config);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_100093F40()
{
  sub_100093E64();
  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_100093F6C()
{
  return type metadata accessor for RateLimiter();
}

uint64_t type metadata accessor for RateLimiter()
{
  uint64_t result = qword_10020BE38;
  if (!qword_10020BE38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100093FC0()
{
  sub_1001C0340();
  if (v0 <= 0x3F)
  {
    sub_10001A6E8();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t destroy for RateLimiter.RateLimitModel()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for RateLimiter.RateLimitModel(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for RateLimiter.RateLimitModel(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for RateLimiter.RateLimitModel(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RateLimiter.RateLimitModel(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RateLimiter.RateLimitModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RateLimiter.RateLimitModel()
{
  return &type metadata for RateLimiter.RateLimitModel;
}

uint64_t sub_1000942E8(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return _swift_task_switch(sub_100094308, v3, 0);
}

uint64_t sub_100094308()
{
  sub_100094368(*(void *)(v0 + 16));
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100094368(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020BF28);
  __chkstk_darwin(v2 - 8, v3);
  os_log_type_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for RateLimitConfiguration(0);
  uint64_t v8 = __chkstk_darwin(v6, v7);
  uint64_t v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v11);
  uint64_t v13 = (char *)v22 - v12;
  sub_100099FAC(a1, (uint64_t)v22 - v12, type metadata accessor for RateLimitConfiguration);
  sub_100099FAC(a1, (uint64_t)v10, type metadata accessor for RateLimitConfiguration);
  uint64_t v14 = sub_1001C0330();
  os_log_type_t v15 = sub_1001C11D0();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 134218240;
    uint64_t v17 = *(void *)&v13[*(int *)(v6 + 20)];
    v22[1] = v16 + 4;
    uint64_t v23 = type metadata accessor for RateLimitConfiguration;
    sub_10009A058((uint64_t)v13, type metadata accessor for RateLimitConfiguration);
    *(void *)&v24[0] = v17;
    sub_1001C1310();
    *(_WORD *)(v16 + 12) = 2048;
    *(void *)&v24[0] = *(void *)&v10[*(int *)(v6 + 20) + 8];
    sub_1001C1310();
    sub_10009A058((uint64_t)v10, v23);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "rate limit discovered for rate with count=%lu, duration=%f", (uint8_t *)v16, 0x16u);
    swift_slowDealloc();
  }
  else
  {
    sub_10009A058((uint64_t)v13, type metadata accessor for RateLimitConfiguration);

    sub_10009A058((uint64_t)v10, type metadata accessor for RateLimitConfiguration);
  }
  swift_beginAccess();
  long long v18 = *(_OWORD *)(a1 + 32);
  uint64_t v25 = *(void *)(a1 + 48);
  long long v19 = *(_OWORD *)a1;
  v24[1] = *(_OWORD *)(a1 + 16);
  v24[2] = v18;
  v24[0] = v19;
  sub_100099FAC(a1 + *(int *)(v6 + 20), (uint64_t)v5, type metadata accessor for RateLimitTimingDetails);
  uint64_t v20 = type metadata accessor for RateLimitTimingDetails(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v5, 0, 1, v20);
  sub_100032A2C((uint64_t)v24);
  sub_100091754((uint64_t)v5, v24);
  sub_10018CCA8(a1);
  return swift_endAccess();
}

uint64_t sub_1000946B0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v70 = a1;
  uint64_t v3 = sub_100003918(&qword_10020BF90);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for RequestLog.Element();
  uint64_t v71 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7, v8);
  uint64_t v11 = (char *)v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v9, v12);
  os_log_type_t v15 = (char *)v62 - v14;
  __chkstk_darwin(v13, v16);
  long long v18 = (char *)v62 - v17;
  uint64_t v19 = sub_1001BF2C0();
  uint64_t v63 = *(void *)(v19 - 8);
  uint64_t v64 = v19;
  __chkstk_darwin(v19, v20);
  uint64_t v72 = (char *)v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100003918(&qword_10020C350);
  uint64_t v68 = *(void *)(v22 - 8);
  uint64_t v69 = (void **)v22;
  __chkstk_darwin(v22, v23);
  uint64_t v67 = (char *)v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1001C0330();
  os_log_type_t v26 = sub_1001C11E0();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v27 = 0;
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "ratelimiter undergoing trim", v27, 2u);
    swift_slowDealloc();
  }

  unint64_t v28 = (uint64_t *)(v2 + OBJC_IVAR____TtC20privatecloudcomputed11RateLimiter_model);
  uint64_t v29 = swift_beginAccess();
  __chkstk_darwin(v29, v30);
  v62[-2] = v70;
  uint64_t v32 = sub_100091D10((void (*)(uint64_t))sub_100032F9C, (uint64_t)&v62[-4], v31);
  v62[1] = 0;
  *unint64_t v28 = v32;
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v65 = v2;
  int64_t v33 = (void *)(v2 + OBJC_IVAR____TtC20privatecloudcomputed11RateLimiter_config);
  swift_beginAccess();
  uint64_t v34 = v33[3];
  uint64_t v66 = v33[4];
  v62[0] = v33;
  sub_10000D934(v33, v34);
  uint64_t v35 = v67;
  sub_1001BFA90();
  sub_1001BF8F0();
  (*(void (**)(char *, void **))(v68 + 8))(v35, v69);
  uint64_t result = sub_1001BF260();
  uint64_t v69 = (void **)v28;
  uint64_t v38 = v28 + 1;
  uint64_t v37 = (void *)v28[1];
  uint64_t v39 = v37[3];
  if (v39)
  {
    uint64_t v40 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v71 + 56);
    while (v39 >= 1)
    {
      uint64_t v42 = v37[4];
      uint64_t v43 = v37[2];
      if (v42 < v43) {
        uint64_t v43 = 0;
      }
      unint64_t v44 = (*(unsigned __int8 *)(v71 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
      uint64_t v45 = *(void *)(v71 + 72);
      sub_100099FAC((uint64_t)v37 + v44 + (v42 - v43) * v45, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for RequestLog.Element);
      sub_10009A1F8((uint64_t)v11, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for RequestLog.Element);
      sub_10009A1F8((uint64_t)v15, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for RequestLog.Element);
      if ((sub_1001BF240() & 1) == 0)
      {
        sub_10009A058((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for RequestLog.Element);
        goto LABEL_20;
      }
      if (*(uint64_t *)(*v38 + 24) <= 0)
      {
        uint64_t v41 = 1;
      }
      else
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1000F845C();
        }
        uint64_t v46 = (void *)*v38;
        uint64_t result = sub_10009A1F8(*v38 + v44 + *(void *)(*v38 + 32) * v45, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for RequestLog.Element);
        uint64_t v47 = v46[4];
        BOOL v48 = __OFADD__(v47, 1);
        uint64_t v49 = v47 + 1;
        if (v48) {
          goto LABEL_26;
        }
        uint64_t v50 = v46[3];
        if (v49 >= v46[2]) {
          uint64_t v49 = 0;
        }
        v46[4] = v49;
        if (__OFSUB__(v50, 1)) {
          goto LABEL_27;
        }
        uint64_t v41 = 0;
        v46[3] = v50 - 1;
      }
      (*v40)(v6, v41, 1, v7);
      sub_100010360((uint64_t)v6, &qword_10020BF90);
      uint64_t result = sub_10009A058((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for RequestLog.Element);
      uint64_t v37 = (void *)*v38;
      uint64_t v39 = *(void *)(*v38 + 24);
      if (!v39) {
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
LABEL_20:
  (*(void (**)(char *, uint64_t))(v63 + 8))(v72, v64);
  swift_endAccess();
  uint64_t v51 = v69;
  long long v52 = *v69;
  long long v53 = *(void **)(v65 + OBJC_IVAR____TtC20privatecloudcomputed11RateLimiter_rateLimitUnmatchedRequestStorageTimeout);
  uint64_t v54 = swift_beginAccess();
  __chkstk_darwin(v54, v55);
  v62[-4] = v70;
  v62[-3] = v53;
  v62[-2] = v52;
  swift_bridgeObjectRetain();
  int64_t v56 = sub_1001039AC((uint64_t (*)(char *))sub_10009A014, (uint64_t)&v62[-6]);
  uint64_t result = (uint64_t)v51[1];
  uint64_t v57 = *(void *)(result + 24);
  if (v57 < v56)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v56 < 0)
  {
LABEL_29:
    __break(1u);
    return result;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    sub_1000F845C();
  }
  sub_100098E28(v56, v57, v51[1] + 2, (unint64_t)v51[1]+ ((*(unsigned __int8 *)(v71 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80)));
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v58 = v70;
  uint64_t v59 = sub_10001F7AC((uint64_t)v70, v62[0]);
  __chkstk_darwin(v59, v60);
  v62[-2] = v58;
  v51[2] = (void *)sub_100092420((void (*)(uint64_t))sub_10009A03C, (uint64_t)&v62[-4], v61);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100094DE8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000074CC;
  return sub_100092DF4();
}

uint64_t sub_100094E78@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v302 = a3;
  v282 = a4;
  uint64_t v7 = sub_100003918(&qword_10020BF90);
  uint64_t v9 = __chkstk_darwin(v7 - 8, v8);
  v271 = (char *)&v260 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v11);
  uint64_t v273 = (uint64_t)&v260 - v12;
  uint64_t v13 = sub_100003918(qword_100208CD0);
  uint64_t v15 = __chkstk_darwin(v13 - 8, v14);
  uint64_t v285 = (uint64_t)&v260 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v17);
  uint64_t v288 = (uint64_t)&v260 - v18;
  uint64_t v292 = sub_100003918(&qword_10020BFB8);
  v324 = *(NSObject **)(v292 - 8);
  __chkstk_darwin(v292, v19);
  v291 = (char *)&v260 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v312 = type metadata accessor for RequestLog.Element();
  uint64_t v311 = *(void *)(v312 - 8);
  uint64_t v22 = __chkstk_darwin(v312, v21);
  v319 = (char *)&v260 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22, v24);
  uint64_t v323 = (uint64_t)&v260 - v25;
  uint64_t v310 = sub_1001BF2C0();
  uint64_t v26 = *(void *)(v310 - 8);
  uint64_t v28 = __chkstk_darwin(v310, v27);
  v269 = (char *)&v260 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v28, v30);
  v270 = (char *)&v260 - v32;
  uint64_t v34 = __chkstk_darwin(v31, v33);
  v268 = (char *)&v260 - v35;
  uint64_t v37 = __chkstk_darwin(v34, v36);
  v284 = (char *)&v260 - v38;
  uint64_t v40 = __chkstk_darwin(v37, v39);
  v320 = (char *)&v260 - v41;
  uint64_t v43 = __chkstk_darwin(v40, v42);
  v272 = (char *)&v260 - v44;
  __chkstk_darwin(v43, v45);
  v278 = (char *)&v260 - v46;
  uint64_t v300 = type metadata accessor for RateLimitConfiguration(0);
  uint64_t v297 = *(void *)(v300 - 8);
  uint64_t v48 = __chkstk_darwin(v300, v47);
  v293 = (char *)&v260 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __chkstk_darwin(v48, v50);
  uint64_t v290 = (uint64_t)&v260 - v52;
  uint64_t v54 = __chkstk_darwin(v51, v53);
  uint64_t v289 = (uint64_t)&v260 - v55;
  uint64_t v57 = __chkstk_darwin(v54, v56);
  uint64_t v283 = (uint64_t)&v260 - v58;
  uint64_t v60 = __chkstk_darwin(v57, v59);
  uint64_t v267 = (uint64_t)&v260 - v61;
  uint64_t v63 = __chkstk_darwin(v60, v62);
  uint64_t v266 = (uint64_t)&v260 - v64;
  uint64_t v66 = __chkstk_darwin(v63, v65);
  v275 = (uint64_t *)((char *)&v260 - v67);
  __chkstk_darwin(v66, v68);
  v304 = (long long *)((char *)&v260 - v69);
  uint64_t v70 = sub_100003918(&qword_10020BF98);
  uint64_t v72 = __chkstk_darwin(v70 - 8, v71);
  v276 = (char *)&v260 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v72, v74);
  uint64_t v76 = (char *)&v260 - v75;
  uint64_t v77 = sub_1001BF7A0();
  uint64_t v78 = *(void *)(v77 - 8);
  uint64_t v80 = __chkstk_darwin(v77, v79);
  uint64_t v277 = (uint64_t)&v260 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v80, v82);
  uint64_t v84 = (char *)&v260 - v83;
  long long v85 = (uint64_t *)(v4 + OBJC_IVAR____TtC20privatecloudcomputed11RateLimiter_model);
  swift_beginAccess();
  v274 = v85 + 2;
  sub_10018C8B0(a1, a2, v76);
  swift_endAccess();
  int v86 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v78 + 48))(v76, 1, v77);
  uint64_t v281 = v77;
  if (v86 != 1)
  {
    uint64_t v95 = *(void (**)(char *, char *, uint64_t))(v78 + 32);
    v95(v84, v76, v77);
    uint64_t v96 = sub_1001C0330();
    os_log_type_t v97 = sub_1001C11F0();
    BOOL v98 = os_log_type_enabled(v96, v97);
    uint64_t v99 = v282;
    if (v98)
    {
      uint64_t v100 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v100 = 0;
      _os_log_impl((void *)&_mh_execute_header, v96, v97, "rate limit applied from cached denials", v100, 2u);
      swift_slowDealloc();
    }

    uint64_t v101 = v281;
    v95(v99, v84, v281);
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v99, 0, 1, v101);
  }
  uint64_t v303 = v4;
  uint64_t v265 = v78;
  sub_100010360((uint64_t)v76, &qword_10020BF98);
  uint64_t v87 = swift_allocObject();
  *(void *)(v87 + 16) = 0;
  uint64_t v301 = v87;
  *(unsigned char *)(v87 + 24) = 1;
  uint64_t v88 = swift_beginAccess();
  char v325 = 0;
  uint64_t v89 = *v85;
  __chkstk_darwin(v88, v90);
  *(&v260 - 4) = a1;
  *(&v260 - 3) = (uint64_t)&v325;
  v261 = a2;
  *(&v260 - 2) = (uint64_t)a2;
  swift_bridgeObjectRetain();
  uint64_t v298 = sub_10009120C((void (*)(uint64_t))sub_10009A110, (uint64_t)(&v260 - 6), v89);
  uint64_t v91 = swift_bridgeObjectRelease();
  uint64_t v309 = a1;
  v296 = v85;
  if (v325 == 1)
  {
    __chkstk_darwin(v91, v92);
    *(&v260 - 2) = a1;
    uint64_t v94 = sub_100091D10((void (*)(uint64_t))sub_10009A704, (uint64_t)(&v260 - 4), v93);
    uint64_t v260 = 0;
    swift_bridgeObjectRelease();
    uint64_t *v85 = v94;
  }
  else
  {
    uint64_t v260 = 0;
  }
  uint64_t v103 = v311;
  uint64_t v104 = (uint64_t)v319;
  uint64_t v105 = v320;
  swift_endAccess();
  uint64_t v106 = v298;
  uint64_t v294 = *(void *)(v298 + 16);
  if (!v294) {
    goto LABEL_90;
  }
  v287 = (void *)(v303 + OBJC_IVAR____TtC20privatecloudcomputed11RateLimiter_config);
  uint64_t v279 = v303 + OBJC_IVAR____TtC20privatecloudcomputed11RateLimiter_logger;
  unint64_t v295 = v298 + ((*(unsigned __int8 *)(v297 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v297 + 80));
  uint64_t v263 = v289 + 8;
  v299 = (NSObject **)(v26 + 8);
  v286 = (uint64_t (**)(char *, uint64_t))&v324[1];
  v280 = (void (**)(uint64_t, char *, uint64_t))(v26 + 16);
  v262 = (char *)&v326 + 8;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v107 = 0;
  *(void *)&long long v108 = 134218496;
  long long v264 = v108;
  uint64_t v109 = (uint64_t *)v304;
  while (2)
  {
    if (v107 >= *(void *)(v298 + 16))
    {
LABEL_105:
      __break(1u);
      goto LABEL_106;
    }
    sub_100099FAC(v295 + *(void *)(v297 + 72) * v107, (uint64_t)v109, type metadata accessor for RateLimitConfiguration);
    uint64_t v110 = (unint64_t *)((char *)v109 + *(int *)(v300 + 20));
    if (!*v110)
    {
      swift_bridgeObjectRelease_n();
      v189 = sub_1001C0330();
      os_log_type_t v190 = sub_1001C11F0();
      BOOL v191 = os_log_type_enabled(v189, v190);
      uint64_t v192 = v281;
      uint64_t v193 = v310;
      if (v191)
      {
        v194 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v194 = 0;
        _os_log_impl((void *)&_mh_execute_header, v189, v190, "rate limit applied for rate with count=0", v194, 2u);
        swift_slowDealloc();
      }

      uint64_t v195 = (uint64_t)v272;
      sub_1001BF250();
      uint64_t v196 = type metadata accessor for RateLimitTimingDetails(0);
      sub_100098C9C(v196, 0.0, 1.0);
      v197 = v278;
      sub_1001BF250();
      v324 = *v299;
      ((void (*)(uint64_t, uint64_t))v324)(v195, v193);
      v198 = v275;
      sub_100099FAC((uint64_t)v304, (uint64_t)v275, type metadata accessor for RateLimitConfiguration);
      (*v280)(v195, v197, v193);
      uint64_t v199 = v277;
      sub_100097998(v198, v195, v277);
      swift_beginAccess();
      uint64_t v200 = v193;
      uint64_t v201 = v265;
      uint64_t v202 = (uint64_t)v276;
      (*(void (**)(char *, uint64_t, uint64_t))(v265 + 16))(v276, v199, v192);
      v203 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v201 + 56);
      v203(v202, 0, 1, v192);
      v204 = v261;
      sub_10009A130((uint64_t)v261);
      sub_100091914(v202, v204);
      swift_endAccess();
      ((void (*)(char *, uint64_t))v324)(v197, v200);
      sub_10009A058((uint64_t)v304, type metadata accessor for RateLimitConfiguration);
      v205 = v282;
      (*(void (**)(char *, uint64_t, uint64_t))(v201 + 32))(v282, v199, v192);
      v203((uint64_t)v205, 0, 1, v192);
      return swift_release();
    }
    unint64_t v305 = v107 + 1;
    uint64_t v111 = (void *)v296[1];
    v307 = v110;
    uint64_t v112 = v109[1];
    uint64_t v317 = *v109;
    unint64_t v113 = v109[3];
    uint64_t v316 = v109[2];
    uint64_t v114 = v109[5];
    uint64_t v314 = v109[4];
    uint64_t v115 = (void *)v109[6];
    os_log_t v322 = v114;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    v321 = v112;
    swift_bridgeObjectRetain();
    unint64_t v318 = v113;
    swift_bridgeObjectRetain();
    sub_1001BF260();
    uint64_t v116 = v111[4];
    if (v111[2] >= v111[3] + v116) {
      uint64_t v117 = v111[3] + v116;
    }
    else {
      uint64_t v117 = v111[2];
    }
    *(void *)&long long v326 = v111;
    *((void *)&v326 + 1) = v116;
    *(void *)&long long v327 = v117;
    v306 = v111;
    uint64_t v118 = swift_retain_n();
    unint64_t v313 = 0;
    v315 = v115;
    v308 = v115 + 11;
    uint64_t v119 = v310;
    while (1)
    {
      if (v116 != v117) {
        goto LABEL_24;
      }
      if ((sub_1000A3AD8(v118) & 1) == 0) {
        break;
      }
      uint64_t v116 = *((void *)&v326 + 1);
LABEL_24:
      *((void *)&v326 + 1) = v116 + 1;
      uint64_t v120 = v326
           + ((*(unsigned __int8 *)(v103 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80))
           + *(void *)(v103 + 72) * v116;
      uint64_t v121 = v323;
      sub_100099FAC(v120, v323, (uint64_t (*)(void))type metadata accessor for RequestLog.Element);
      sub_10009A1F8(v121, v104, (uint64_t (*)(void))type metadata accessor for RequestLog.Element);
      sub_10009A0B8(&qword_10020C540, (void (*)(uint64_t))&type metadata accessor for Date);
      if ((sub_1001C0BC0() & 1) == 0)
      {
        uint64_t v122 = *(void **)v104;
        uint64_t v124 = *(NSObject **)(*(void *)v104 + 24);
        uint64_t v123 = *(void *)(*(void *)v104 + 32);
        unint64_t v126 = *(void *)(*(void *)v104 + 40);
        uint64_t v125 = v122[6];
        uint64_t v128 = v122[7];
        uint64_t v127 = v122[8];
        v324 = v124;
        if (v321)
        {
          BOOL v129 = v317 == v122[2] && v321 == v124;
          if (!v129 && (sub_1001C1840() & 1) == 0) {
            goto LABEL_19;
          }
        }
        if (!v318 || (v316 == v123 ? (BOOL v130 = v318 == v126) : (BOOL v130 = 0), v130 || (sub_1001C1840() & 1) != 0))
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_10018C7C0(46, 0xE100000000000000, v123, v126);
          if (v143) {
            goto LABEL_18;
          }
          swift_bridgeObjectRetain();
          unint64_t v144 = sub_1001C0D50();
          unint64_t v146 = v145;
          uint64_t v148 = v147;
          uint64_t v150 = v149;
          swift_bridgeObjectRelease();
          LOBYTE(v144) = sub_10018FE0C(v316, v318, v144, v146, v148, v150);
          uint64_t v103 = v311;
          swift_bridgeObjectRelease();
          if ((v144 & 1) == 0) {
            goto LABEL_18;
          }
        }
        if (v322 && (v314 != v125 || v322 != v128) && (sub_1001C1840() & 1) == 0)
        {
LABEL_18:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_19:
          uint64_t v104 = (uint64_t)v319;
          uint64_t v105 = v320;
          goto LABEL_20;
        }
        uint64_t v131 = v315[2];
        if (v131)
        {
          if (!*(void *)(v127 + 16)) {
            goto LABEL_18;
          }
          uint64_t v133 = v315[6];
          uint64_t v132 = v315[7];
          uint64_t v134 = v315[4];
          uint64_t v135 = v315[5];
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v136 = sub_100169E3C(v134, v135);
          if ((v137 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            goto LABEL_75;
          }
          v138 = (uint64_t *)(*(void *)(v127 + 56) + 16 * v136);
          uint64_t v139 = *v138;
          uint64_t v140 = v138[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          if (v139 == v133 && v140 == v132)
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
          }
          else
          {
            char v142 = sub_1001C1840();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v142 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
LABEL_75:
              uint64_t v103 = v311;
              goto LABEL_19;
            }
          }
          uint64_t v151 = v131 - 1;
          if (v151)
          {
            v152 = v308;
            while (1)
            {
              if (!*(void *)(v127 + 16))
              {
LABEL_72:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_74;
              }
              uint64_t v154 = *(v152 - 1);
              uint64_t v153 = *v152;
              uint64_t v155 = *(v152 - 3);
              uint64_t v156 = *(v152 - 2);
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              unint64_t v157 = sub_100169E3C(v155, v156);
              if ((v158 & 1) == 0) {
                break;
              }
              v159 = (uint64_t *)(*(void *)(v127 + 56) + 16 * v157);
              uint64_t v160 = *v159;
              uint64_t v161 = v159[1];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              if (v160 == v154 && v161 == v153)
              {
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease();
              }
              else
              {
                char v163 = sub_1001C1840();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((v163 & 1) == 0) {
                  goto LABEL_72;
                }
              }
              v152 += 4;
              if (!--v151) {
                goto LABEL_61;
              }
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
LABEL_74:
            uint64_t v119 = v310;
            goto LABEL_75;
          }
LABEL_61:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          uint64_t v119 = v310;
          uint64_t v103 = v311;
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
        }
        uint64_t v104 = (uint64_t)v319;
        uint64_t v105 = v320;
        if (v313 == -1)
        {
          __break(1u);
          goto LABEL_105;
        }
        ++v313;
      }
LABEL_20:
      uint64_t v118 = sub_10009A058(v104, (uint64_t (*)(void))type metadata accessor for RequestLog.Element);
      uint64_t v116 = *((void *)&v326 + 1);
      uint64_t v117 = v327;
    }
    swift_release();
    swift_release();
    v324 = *v299;
    ((void (*)(char *, uint64_t))v324)(v105, v119);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!sub_1000974C8(v301, v302))
    {
      if (v313 < *v307) {
        goto LABEL_11;
      }
      uint64_t v211 = (uint64_t)v304;
      uint64_t v212 = v266;
      sub_100099FAC((uint64_t)v304, v266, type metadata accessor for RateLimitConfiguration);
      uint64_t v213 = v267;
      sub_100099FAC(v211, v267, type metadata accessor for RateLimitConfiguration);
      v214 = sub_1001C0330();
      os_log_type_t v215 = sub_1001C11F0();
      if (!os_log_type_enabled(v214, v215))
      {
        sub_10009A058(v212, type metadata accessor for RateLimitConfiguration);

        sub_10009A058(v213, type metadata accessor for RateLimitConfiguration);
        swift_bridgeObjectRelease();
        goto LABEL_101;
      }
      uint64_t v216 = swift_slowAlloc();
      *(_DWORD *)uint64_t v216 = 134218240;
      uint64_t v217 = v300;
      uint64_t v218 = *(void *)(v212 + *(int *)(v300 + 20));
      sub_10009A058(v212, type metadata accessor for RateLimitConfiguration);
      *(void *)&long long v326 = v218;
      sub_1001C1310();
      *(_WORD *)(v216 + 12) = 2048;
      *(void *)&long long v326 = *(void *)(v213 + *(int *)(v217 + 20) + 8);
      sub_1001C1310();
      sub_10009A058(v213, type metadata accessor for RateLimitConfiguration);
      v219 = "rate limit applied for rate with count=%lu, duration=%f";
      v220 = v214;
      os_log_type_t v221 = v215;
      v222 = (uint8_t *)v216;
      uint32_t v223 = 22;
LABEL_98:
      _os_log_impl((void *)&_mh_execute_header, v220, v221, v219, v222, v223);
      swift_slowDealloc();
      swift_bridgeObjectRelease();

LABEL_101:
      uint64_t v238 = v273;
      uint64_t v239 = (uint64_t)v271;
      v240 = (void *)v296[1];
      long long v241 = v304[1];
      long long v326 = *v304;
      long long v327 = v241;
      long long v328 = v304[2];
      uint64_t v329 = *((void *)v304 + 6);
      swift_retain();
      sub_100032A2C((uint64_t)&v326);
      sub_1000A12CC(&v326, v240, v238);
      sub_100032A84((uint64_t)&v326);
      swift_release();
      sub_10003282C(v238, v239, &qword_10020BF90);
      uint64_t v242 = v312;
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v311 + 48))(v239, 1, v312);
      v243 = v261;
      if (result == 1) {
        goto LABEL_107;
      }
      swift_bridgeObjectRelease();
      uint64_t v244 = v239 + *(int *)(v242 + 20);
      v245 = *v280;
      uint64_t v246 = (uint64_t)v278;
      uint64_t v247 = v310;
      (*v280)((uint64_t)v278, (char *)v244, v310);
      sub_10009A058(v239, (uint64_t (*)(void))type metadata accessor for RequestLog.Element);
      v248 = v269;
      sub_1001BF250();
      v249 = v324;
      ((void (*)(uint64_t, uint64_t))v324)(v246, v247);
      uint64_t v250 = type metadata accessor for RateLimitTimingDetails(0);
      sub_100098C9C(v250, 0.0, 1.0);
      v251 = v270;
      sub_1001BF250();
      ((void (*)(char *, uint64_t))v249)(v248, v247);
      v252 = v275;
      sub_100099FAC((uint64_t)v304, (uint64_t)v275, type metadata accessor for RateLimitConfiguration);
      v253 = v251;
      v245(v246, v251, v247);
      uint64_t v254 = v277;
      sub_100097998(v252, v246, v277);
      swift_beginAccess();
      uint64_t v255 = v265;
      uint64_t v256 = (uint64_t)v276;
      uint64_t v257 = v281;
      (*(void (**)(char *, uint64_t, uint64_t))(v265 + 16))(v276, v254, v281);
      v258 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v255 + 56);
      v258(v256, 0, 1, v257);
      sub_10009A130((uint64_t)v243);
      sub_100091914(v256, v243);
      swift_endAccess();
      ((void (*)(char *, uint64_t))v324)(v253, v247);
      sub_100010360(v273, &qword_10020BF90);
      sub_10009A058((uint64_t)v304, type metadata accessor for RateLimitConfiguration);
      v259 = v282;
      (*(void (**)(char *, uint64_t, uint64_t))(v255 + 32))(v282, v254, v257);
      v258((uint64_t)v259, 0, 1, v257);
      return swift_release();
    }
    sub_10000D934(v287, v287[3]);
    v164 = v291;
    sub_1001BFAC0();
    sub_1001BF8F0();
    uint64_t result = (*v286)(v164, v292);
    unint64_t v165 = *v307;
    uint64_t v166 = (uint64_t)v293;
    uint64_t v167 = v290;
    if (v313 < *v307) {
      goto LABEL_11;
    }
    uint64_t v168 = v326;
    if ((uint64_t)v326 <= 1) {
      uint64_t v168 = 1;
    }
    uint64_t v169 = v168 - 1;
    BOOL v170 = __CFADD__(v165, v169);
    unint64_t v171 = v165 + v169;
    uint64_t v172 = v285;
    if (v170)
    {
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
      return result;
    }
    if (v313 >= v171)
    {
      uint64_t v224 = (uint64_t)(v307 + 1);
      uint64_t v225 = (uint64_t)v304;
      sub_100099FAC((uint64_t)v304, v290, type metadata accessor for RateLimitConfiguration);
      sub_100099FAC(v225, v166, type metadata accessor for RateLimitConfiguration);
      sub_10003282C(v302, v172, qword_100208CD0);
      uint64_t v226 = v310;
      (*v280)((uint64_t)v268, (char *)v309, v310);
      swift_retain();
      v227 = sub_1001C0330();
      os_log_type_t v228 = sub_1001C11F0();
      int v229 = v228;
      if (!os_log_type_enabled(v227, v228))
      {
        swift_retain();
        sub_100010360(v172, qword_100208CD0);
        ((void (*)(char *, uint64_t))v324)(v268, v226);
        sub_10009A058(v167, type metadata accessor for RateLimitConfiguration);

        sub_10009A058(v166, type metadata accessor for RateLimitConfiguration);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        goto LABEL_101;
      }
      uint64_t v230 = swift_slowAlloc();
      *(_DWORD *)uint64_t v230 = v264;
      LODWORD(v322) = v229;
      uint64_t v231 = v166;
      v321 = v227;
      uint64_t v232 = v300;
      uint64_t v233 = *(void *)(v167 + *(int *)(v300 + 20));
      uint64_t v323 = v224;
      uint64_t v234 = v301;
      swift_retain();
      v235 = v268;
      sub_10009A058(v167, type metadata accessor for RateLimitConfiguration);
      *(void *)&long long v326 = v233;
      sub_1001C1310();
      *(_WORD *)(v230 + 12) = 2048;
      *(void *)&long long v326 = *(void *)(v231 + *(int *)(v232 + 20) + 8);
      sub_1001C1310();
      sub_10009A058(v231, type metadata accessor for RateLimitConfiguration);
      *(_WORD *)(v230 + 22) = 2048;
      uint64_t v236 = v285;
      uint64_t v237 = sub_1000974C8(v234, v285);
      sub_100010360(v236, qword_100208CD0);
      ((void (*)(char *, uint64_t))v324)(v235, v226);
      *(void *)&long long v326 = v237;
      sub_1001C1310();
      swift_release();
      swift_release();
      v219 = "rate limit applied for rate with count=%lu, duration=%f, sessionProgress=%lu";
      v214 = v321;
      v220 = v321;
      os_log_type_t v221 = v322;
      v222 = (uint8_t *)v230;
      uint32_t v223 = 32;
      goto LABEL_98;
    }
    uint64_t v173 = (uint64_t)v304;
    uint64_t v174 = v283;
    sub_100099FAC((uint64_t)v304, v283, type metadata accessor for RateLimitConfiguration);
    uint64_t v175 = v289;
    sub_100099FAC(v173, v289, type metadata accessor for RateLimitConfiguration);
    uint64_t v176 = v288;
    sub_10003282C(v302, v288, qword_100208CD0);
    v177 = v284;
    (*v280)((uint64_t)v284, (char *)v309, v310);
    swift_retain();
    v178 = sub_1001C0330();
    os_log_type_t v179 = sub_1001C11D0();
    if (os_log_type_enabled(v178, v179))
    {
      uint64_t v180 = swift_slowAlloc();
      *(_DWORD *)uint64_t v180 = v264;
      uint64_t v181 = v300;
      uint64_t v182 = *(int *)(v300 + 20);
      os_log_t v322 = v178;
      uint64_t v183 = *(void *)(v174 + v182);
      uint64_t v184 = v301;
      swift_retain();
      v185 = v177;
      sub_10009A058(v174, type metadata accessor for RateLimitConfiguration);
      *(void *)&long long v326 = v183;
      sub_1001C1310();
      *(_WORD *)(v180 + 12) = 2048;
      *(void *)&long long v326 = *(void *)(v263 + *(int *)(v181 + 20));
      sub_1001C1310();
      sub_10009A058(v289, type metadata accessor for RateLimitConfiguration);
      *(_WORD *)(v180 + 22) = 2048;
      uint64_t v186 = v288;
      uint64_t v187 = sub_1000974C8(v184, v288);
      sub_100010360(v186, qword_100208CD0);
      ((void (*)(char *, uint64_t))v324)(v185, v310);
      *(void *)&long long v326 = v187;
      sub_1001C1310();
      swift_release();
      uint64_t v104 = (uint64_t)v319;
      swift_release();
      os_log_t v188 = v322;
      _os_log_impl((void *)&_mh_execute_header, v322, v179, "rate limit softened for rate with count=%lu, duration=%f, sessionProgress=%lu", (uint8_t *)v180, 0x20u);
      swift_slowDealloc();
    }
    else
    {
      swift_retain();
      sub_100010360(v176, qword_100208CD0);
      ((void (*)(char *, uint64_t))v324)(v177, v310);
      sub_10009A058(v174, type metadata accessor for RateLimitConfiguration);

      sub_10009A058(v175, type metadata accessor for RateLimitConfiguration);
      swift_release();
      swift_release();
    }
    uint64_t v103 = v311;
    uint64_t v105 = v320;
LABEL_11:
    uint64_t v109 = (uint64_t *)v304;
    uint64_t result = sub_10009A058((uint64_t)v304, type metadata accessor for RateLimitConfiguration);
    unint64_t v107 = v305;
    if (v305 != v294) {
      continue;
    }
    break;
  }
  uint64_t v106 = v298;
  swift_bridgeObjectRelease();
LABEL_90:
  swift_bridgeObjectRetain();
  uint64_t v206 = v106;
  v207 = sub_1001C0330();
  os_log_type_t v208 = sub_1001C11D0();
  if (os_log_type_enabled(v207, v208))
  {
    v209 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v209 = 134217984;
    uint64_t v210 = *(void *)(v206 + 16);
    swift_bridgeObjectRelease();
    *(void *)&long long v326 = v210;
    sub_1001C1310();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v207, v208, "no rate limit applied from among matching configurations with count=%ld", v209, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v265 + 56))(v282, 1, 1, v281);
  return swift_release();
}

uint64_t sub_100097064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  sub_100003918(qword_100208CD0);
  v4[12] = swift_task_alloc();
  uint64_t v5 = sub_1001BF310();
  v4[13] = v5;
  v4[14] = *(void *)(v5 - 8);
  v4[15] = swift_task_alloc();
  return _swift_task_switch(sub_100097158, v3, 0);
}

uint64_t sub_100097158()
{
  uint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C11E0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "ratelimiter remembering completed request", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = v0[13];
  uint64_t v5 = v0[14];
  uint64_t v6 = v0[12];
  uint64_t v8 = v0[9];
  uint64_t v7 = v0[10];
  uint64_t v9 = (void *)v0[8];

  swift_beginAccess();
  sub_1000A17E8(v9, v7);
  swift_endAccess();
  sub_10003282C(v8, v6, qword_100208CD0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) == 1)
  {
    sub_100010360(v0[12], qword_100208CD0);
  }
  else
  {
    uint64_t v11 = v0[14];
    uint64_t v10 = v0[15];
    uint64_t v12 = v0[13];
    uint64_t v14 = v0[10];
    uint64_t v13 = v0[11];
    (*(void (**)(uint64_t, void, uint64_t))(v11 + 32))(v10, v0[12], v12);
    uint64_t v15 = (void *)(v13 + OBJC_IVAR____TtC20privatecloudcomputed11RateLimiter_config);
    swift_beginAccess();
    sub_10001F2FC(v10, v14, v15);
    swift_endAccess();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  uint64_t v16 = (void *)swift_task_alloc();
  v0[16] = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_10009739C;
  return sub_100092DF4();
}

uint64_t sub_10009739C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1000974C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (*(unsigned char *)(a1 + 24) == 1)
  {
    __chkstk_darwin(a1, a2);
    uint64_t v4 = sub_1000977B8((void (*)(uint64_t *__return_ptr, char *))sub_10009A1D8);
    if (v5) {
      uint64_t v2 = 0;
    }
    else {
      uint64_t v2 = v4;
    }
    swift_beginAccess();
    *(void *)(a1 + 16) = v2;
    *(unsigned char *)(a1 + 24) = 0;
  }
  return v2;
}

uint64_t sub_10009758C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v23 = a4;
  uint64_t v20 = a3;
  uint64_t v21 = a1;
  uint64_t v22 = sub_1001BF2C0();
  uint64_t v19 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v5);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100003918(&qword_10020C350);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a2 + OBJC_IVAR____TtC20privatecloudcomputed11RateLimiter_model;
  swift_beginAccess();
  uint64_t v14 = *(void *)(v13 + 24);
  sub_10000D934((void *)(a2 + OBJC_IVAR____TtC20privatecloudcomputed11RateLimiter_config), *(void *)(a2 + OBJC_IVAR____TtC20privatecloudcomputed11RateLimiter_config + 24));
  swift_bridgeObjectRetain();
  sub_1001BFA50();
  sub_1001BF8F0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  sub_1001BF260();
  uint64_t v15 = sub_10001FC44((uint64_t)v7, v21, v14);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v22);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v17 = v23;
  *uint64_t v23 = v15;
  *((unsigned char *)v17 + 8) = 0;
  return result;
}

uint64_t sub_1000977B8(void (*a1)(uint64_t *__return_ptr, char *))
{
  uint64_t v4 = sub_1001BF310();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100003918(qword_100208CD0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(v1, (uint64_t)v12, qword_100208CD0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v12, 1, v4) == 1) {
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v12, v4);
  a1(&v14, v8);
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return v14;
}

uint64_t sub_100097998@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v36 = a3;
  uint64_t v37 = sub_1001BF770();
  uint64_t v5 = *(void *)(v37 - 8);
  __chkstk_darwin(v37, v6);
  uint64_t v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1001BF2C0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *a1;
  uint64_t v15 = a1[1];
  uint64_t v16 = a1[3];
  uint64_t v34 = a1[2];
  uint64_t v35 = v14;
  uint64_t v17 = a1[5];
  uint64_t v33 = a1[4];
  uint64_t v18 = a1[6];
  int64_t v19 = *(void *)(v18 + 16);
  if (v19)
  {
    uint64_t v28 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v29 = v10;
    uint64_t v30 = v9;
    uint64_t v31 = a2;
    uint64_t v32 = a1;
    uint64_t v38 = _swiftEmptyArrayStorage;
    v27[4] = v15;
    uint64_t v20 = v17;
    uint64_t v21 = v18;
    swift_bridgeObjectRetain();
    v27[3] = v16;
    swift_bridgeObjectRetain();
    v27[2] = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10018F194(0, v19, 0);
    uint64_t v22 = v38;
    v27[1] = v21;
    uint64_t v23 = v21 + 56;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1001BF760();
      uint64_t v38 = v22;
      unint64_t v25 = v22[2];
      unint64_t v24 = v22[3];
      if (v25 >= v24 >> 1)
      {
        sub_10018F194(v24 > 1, v25 + 1, 1);
        uint64_t v22 = v38;
      }
      v23 += 32;
      void v22[2] = v25 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v22+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v25, v8, v37);
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease();
    a2 = v31;
    a1 = v32;
    uint64_t v10 = v29;
    uint64_t v9 = v30;
    uint64_t v13 = v28;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  type metadata accessor for RateLimitConfiguration(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a2, v9);
  sub_1001BF790();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a2, v9);
  return sub_10009A058((uint64_t)a1, type metadata accessor for RateLimitConfiguration);
}

uint64_t sub_100097CF4@<X0>(uint64_t *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v82 = a2;
  uint64_t v7 = type metadata accessor for RateLimitTimingDetails(0);
  __chkstk_darwin(v7, v8);
  uint64_t v70 = (uint64_t)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for RequestLog.Element();
  uint64_t v85 = *(void *)(v10 - 8);
  uint64_t v86 = v10;
  uint64_t v12 = __chkstk_darwin(v10, v11);
  uint64_t v14 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v15);
  uint64_t v17 = (char *)&v64 - v16;
  uint64_t v84 = sub_1001BF840();
  uint64_t v18 = *(void *)(v84 - 8);
  __chkstk_darwin(v84, v19);
  uint64_t v21 = (char *)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_1001BF2C0();
  uint64_t v23 = __chkstk_darwin(v97, v22);
  __chkstk_darwin(v23, v24);
  uint64_t v81 = (char *)&v64 - v25;
  uint64_t v73 = a1;
  uint64_t v26 = a1[6];
  int64_t v27 = *(void *)(v26 + 16);
  uint64_t v72 = a4;
  uint64_t v71 = v7;
  uint64_t v69 = v28;
  uint64_t v68 = v29;
  if (v27)
  {
    uint64_t v79 = a3;
    uint64_t v80 = v17;
    uint64_t v90 = (char *)_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_10018F2A4(0, v27, 0);
    uint64_t v30 = v90;
    uint64_t v83 = v18 + 32;
    uint64_t v78 = v26;
    uint64_t v31 = v26 + 56;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1001BF830();
      uint64_t v90 = v30;
      unint64_t v33 = *((void *)v30 + 2);
      unint64_t v32 = *((void *)v30 + 3);
      if (v33 >= v32 >> 1)
      {
        sub_10018F2A4(v32 > 1, v33 + 1, 1);
        uint64_t v30 = v90;
      }
      v31 += 32;
      *((void *)v30 + 2) = v33 + 1;
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(&v30[((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(void *)(v18 + 72) * v33], v21, v84);
      --v27;
    }
    while (v27);
    uint64_t v65 = v30;
    uint64_t v26 = v78;
    swift_bridgeObjectRelease();
    uint64_t v17 = v80;
    uint64_t v34 = v81;
  }
  else
  {
    uint64_t v65 = (char *)_swiftEmptyArrayStorage;
    uint64_t v34 = v81;
  }
  uint64_t v35 = v82 + OBJC_IVAR____TtC20privatecloudcomputed11RateLimiter_model;
  swift_beginAccess();
  uint64_t v36 = *(void **)(v35 + 8);
  uint64_t v67 = (uint64_t)v73 + *(int *)(type metadata accessor for RateLimitConfiguration(0) + 20);
  uint64_t v37 = v73[1];
  uint64_t v38 = v73[2];
  unint64_t v39 = v73[3];
  uint64_t v41 = v73[4];
  uint64_t v40 = v73[5];
  uint64_t v80 = (char *)*v73;
  uint64_t v90 = v80;
  uint64_t v91 = v37;
  uint64_t v83 = v37;
  uint64_t v79 = v38;
  uint64_t v92 = v38;
  unint64_t v93 = v39;
  unint64_t v82 = v39;
  uint64_t v78 = v41;
  uint64_t v94 = v41;
  uint64_t v95 = v40;
  uint64_t v84 = v40;
  uint64_t v96 = v26;
  swift_retain();
  sub_1001BF260();
  uint64_t v42 = v36[4];
  if (v36[2] >= v36[3] + v42) {
    uint64_t v43 = v36[3] + v42;
  }
  else {
    uint64_t v43 = v36[2];
  }
  uint64_t v87 = v36;
  uint64_t v88 = v42;
  uint64_t v89 = v43;
  uint64_t v66 = v36;
  uint64_t v44 = swift_retain_n();
  uint64_t v77 = 0;
  while (1)
  {
    if (v42 == v43)
    {
      if ((sub_1000A3AD8(v44) & 1) == 0)
      {
        swift_release();
        swift_release();
        uint64_t v59 = v68;
        uint64_t v60 = v97;
        (*(void (**)(char *, uint64_t))(v68 + 8))(v34, v97);
        swift_release();
        uint64_t v61 = *v73;
        uint64_t v85 = v73[2];
        uint64_t v86 = v61;
        uint64_t v62 = v71;
        uint64_t v63 = v70;
        sub_100099FAC(v67, v70, type metadata accessor for RateLimitTimingDetails);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 32))(v69, v63 + *(int *)(v62 + 24), v60);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        return sub_1001BF820();
      }
      uint64_t v42 = v88;
    }
    uint64_t v88 = v42 + 1;
    sub_100099FAC((uint64_t)v87+ ((*(unsigned __int8 *)(v85 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80))+ *(void *)(v85 + 72) * v42, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for RequestLog.Element);
    sub_10009A1F8((uint64_t)v17, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for RequestLog.Element);
    sub_10009A0B8(&qword_10020C540, (void (*)(uint64_t))&type metadata accessor for Date);
    if ((sub_1001C0BC0() & 1) == 0) {
      break;
    }
LABEL_14:
    uint64_t v44 = sub_10009A058((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for RequestLog.Element);
    uint64_t v42 = v88;
    uint64_t v43 = v89;
  }
  uint64_t v45 = *(void *)(*(void *)v14 + 32);
  unint64_t v47 = *(void *)(*(void *)v14 + 40);
  uint64_t v46 = *(void *)(*(void *)v14 + 48);
  uint64_t v48 = *(void *)(*(void *)v14 + 56);
  uint64_t v49 = *(void *)(*(void *)v14 + 64);
  if (v83)
  {
    BOOL v50 = v80 == *(char **)(*(void *)v14 + 16) && v83 == *(void *)(*(void *)v14 + 24);
    if (!v50 && (sub_1001C1840() & 1) == 0) {
      goto LABEL_13;
    }
  }
  if (!v82 || (v79 == v45 ? (BOOL v51 = v82 == v47) : (BOOL v51 = 0), v51 || (sub_1001C1840() & 1) != 0))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10018C7C0(46, 0xE100000000000000, v45, v47);
    if (v54) {
      goto LABEL_12;
    }
    swift_bridgeObjectRetain();
    unint64_t v76 = sub_1001C0D50();
    unint64_t v75 = v55;
    uint64_t v74 = v56;
    uint64_t v58 = v57;
    swift_bridgeObjectRelease();
    LODWORD(v76) = sub_10018FE0C(v79, v82, v76, v75, v74, v58);
    swift_bridgeObjectRelease();
    if ((v76 & 1) == 0) {
      goto LABEL_12;
    }
  }
  if (v84 && (v78 != v46 || v84 != v48) && (sub_1001C1840() & 1) == 0)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_13:
    uint64_t v34 = v81;
    goto LABEL_14;
  }
  char v52 = sub_10002F9EC(v49);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v52 & 1) == 0) {
    goto LABEL_13;
  }
  uint64_t v34 = v81;
  if (v77 != -1)
  {
    ++v77;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000985FC()
{
  *(void *)(v1 + 40) = v0;
  return _swift_task_switch(sub_10009861C, v0, 0);
}

uint64_t sub_10009861C()
{
  uint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C11D0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "ratelimiter is being reset", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = *(void *)(v0 + 40);

  uint64_t v5 = (unint64_t *)(v4 + OBJC_IVAR____TtC20privatecloudcomputed11RateLimiter_model);
  swift_beginAccess();
  unint64_t v6 = sub_100055648((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
  *uint64_t v5 = v6;
  unint64_t v7 = *(void *)sub_1001BF600();
  swift_retain();
  swift_release();
  v5[1] = v7;
  unint64_t v8 = sub_10005586C((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
  v5[2] = v8;
  _OWORD v5[3] = sub_1000552DC((uint64_t)_swiftEmptyArrayStorage);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1000987D8;
  return sub_100092DF4();
}

uint64_t sub_1000987D8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

unint64_t sub_1000988CC()
{
  unint64_t result = qword_10020BF18;
  if (!qword_10020BF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020BF18);
  }
  return result;
}

uint64_t sub_100098920()
{
  uint64_t v1 = sub_1001BF0B0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  sub_10000792C(*(void *)(v0 + 16), *(void *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000989EC()
{
  return sub_1001BF1A0();
}

uint64_t sub_100098A58@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_100098A88(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_100098AB0(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();
  uint64_t v5 = *a1 + 8;
  uint64_t result = sub_1001C1310();
  *a1 = v5;
  return result;
}

uint64_t sub_100098B08(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1001C1950();
  swift_bridgeObjectRetain();
  sub_1001C0CB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1001C0CB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1001C0CB0();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a1 + 48);
  swift_bridgeObjectRetain();
  sub_10018FB7C((uint64_t)v13, v6);
  swift_bridgeObjectRelease();
  sub_1001C1990();
  unint64_t v7 = sub_1001C13F0();
  *(void *)((char *)a3 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
  uint64_t v8 = a3[6] + 56 * v7;
  long long v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)a1;
  *(_OWORD *)(v8 + 16) = v9;
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(a1 + 32);
  *(void *)(v8 + 48) = *(void *)(a1 + 48);
  uint64_t v10 = a3[7];
  uint64_t v11 = sub_1001BF7A0();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v7, a2, v11);
  ++a3[2];
  return result;
}

uint64_t sub_100098C9C(uint64_t result, double a2, double a3)
{
  if (a2 == a3)
  {
    __break(1u);
    goto LABEL_7;
  }
  double v5 = a3 - a2;
  if ((~COERCE__INT64(a3 - a2) & 0x7FF0000000000000) == 0)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v6 = result;
  uint64_t result = swift_stdlib_random();
  if (v5 * ((double)0 * 1.11022302e-16) + a2 == a3) {
    return sub_100098C9C(v6, a2, a3);
  }
  return result;
}

uint64_t sub_100098D48@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = a3[2];
  uint64_t v7 = v6 + result;
  uint64_t v8 = *a3;
  if (v6 + result >= *a3) {
    uint64_t v9 = *a3;
  }
  else {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v6 + a2;
  if (v10 >= v8) {
    uint64_t v11 = *a3;
  }
  else {
    uint64_t v11 = 0;
  }
  uint64_t v12 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    uint64_t v14 = v7 - v9;
    uint64_t v15 = v10 - v11;
    if (v12) {
      BOOL v16 = v14 < v15;
    }
    else {
      BOOL v16 = 1;
    }
    int v17 = v16;
    uint64_t v18 = type metadata accessor for RequestLog.Element();
    uint64_t v20 = *(void *)(v18 - 8);
    uint64_t result = v18 - 8;
    uint64_t v19 = v20;
    if (v17 == 1)
    {
      uint64_t v21 = 0;
      uint64_t v15 = 0;
LABEL_18:
      *(void *)a5 = a4 + *(void *)(v19 + 72) * v14;
      *(void *)(a5 + 8) = v12;
      *(void *)(a5 + 16) = v21;
      *(void *)(a5 + 24) = v15;
      *(unsigned char *)(a5 + 32) = v17;
      return result;
    }
    uint64_t v12 = v8 - v14;
    if (!__OFSUB__(v8, v14))
    {
      uint64_t v21 = a4;
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_100098E28(unint64_t a1, uint64_t a2, uint64_t *a3, unint64_t a4)
{
  sub_100098D48(a1, a2, a3, a4, (uint64_t)&v11);
  char v8 = v14 | (v13 == 0);
  if (v14 & 1 | (v13 == 0)) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = v12;
  }
  long long v15 = v11;
  sub_10002C318((uint64_t)&v15, (uint64_t)v16, &qword_10020BFA8);
  sub_10002C318((uint64_t)v16, (uint64_t)&v17, &qword_10020BFA8);
  if (v17)
  {
    type metadata accessor for RequestLog.Element();
    swift_arrayDestroy();
  }
  if (!(v8 & 1 | (v9 == 0)))
  {
    type metadata accessor for RequestLog.Element();
    swift_arrayDestroy();
  }
  return sub_100098F34(a1, a2, a3, a4);
}

unint64_t sub_100098F34(unint64_t result, uint64_t a2, uint64_t *a3, unint64_t a4)
{
  uint64_t v4 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
LABEL_169:
    __break(1u);
LABEL_170:
    __break(1u);
    goto LABEL_171;
  }
  if (v4 < 1) {
    return result;
  }
  unint64_t v6 = result;
  uint64_t v7 = a3[1];
  uint64_t v8 = a3[2];
  unint64_t v9 = v8 + result;
  uint64_t v10 = *a3;
  if ((uint64_t)(v8 + result) >= *a3) {
    uint64_t v11 = *a3;
  }
  else {
    uint64_t v11 = 0;
  }
  uint64_t v12 = v8 + a2;
  if (v8 + a2 >= v10) {
    uint64_t v13 = *a3;
  }
  else {
    uint64_t v13 = 0;
  }
  uint64_t v14 = v7 - a2;
  if (__OFSUB__(v7, a2)) {
    goto LABEL_169;
  }
  uint64_t v16 = a2 - result;
  uint64_t v17 = v9 - v11;
  uint64_t v18 = v12 - v13;
  if (v14 > (uint64_t)result)
  {
    uint64_t v14 = v8 + v4;
    if (!__OFADD__(v8, v4))
    {
      BOOL v19 = __OFSUB__(v14, v10);
      if (v14 >= v10)
      {
        v14 -= v10;
        if (v19) {
          goto LABEL_174;
        }
      }
      if (!result) {
        goto LABEL_126;
      }
      if (v18 <= 0) {
        uint64_t v20 = *a3;
      }
      else {
        uint64_t v20 = v12 - v13;
      }
      if (v17 <= 0) {
        uint64_t v21 = *a3;
      }
      else {
        uint64_t v21 = v9 - v11;
      }
      if (v8 < v21)
      {
        if (v20 >= v14)
        {
          if ((uint64_t)result <= 0) {
            goto LABEL_126;
          }
          uint64_t v40 = *(void *)(*(void *)(type metadata accessor for RequestLog.Element() - 8) + 72);
          uint64_t v41 = v40 * v14;
          uint64_t result = a4 + v40 * v14;
          uint64_t v42 = v40 * v8;
          unint64_t v43 = a4 + v40 * v8 + v40 * v6;
          if (v41 >= v42 && result < v43)
          {
            if (v41 != v42) {
              goto LABEL_124;
            }
            goto LABEL_126;
          }
          goto LABEL_125;
        }
        if (v18 > 0)
        {
          uint64_t v22 = v10 - v4;
          uint64_t result = type metadata accessor for RequestLog.Element();
          uint64_t v23 = *(void *)(*(void *)(result - 8) + 72);
          uint64_t v24 = v23 * v22;
          unint64_t v25 = a4 + v23 * v22 + v23 * v18;
          if (v24 <= 0 && v25 > a4)
          {
            if (v24) {
              uint64_t result = swift_arrayInitWithTakeBackToFront();
            }
          }
          else
          {
            uint64_t result = swift_arrayInitWithTakeFrontToBack();
          }
        }
        BOOL v19 = __OFSUB__(v6, v18);
        uint64_t v18 = v6 - v18;
        if (!v19) {
          goto LABEL_120;
        }
        __break(1u);
        goto LABEL_101;
      }
      if (v20 >= v14)
      {
        if (__OFSUB__(0, v17))
        {
LABEL_177:
          __break(1u);
          goto LABEL_178;
        }
        if (v17 > 0)
        {
          uint64_t v45 = *(void *)(*(void *)(type metadata accessor for RequestLog.Element() - 8) + 72);
          uint64_t v46 = v45 * (v18 - v17);
          uint64_t result = a4 + v46;
          if (v46 < 0 || v46 >= v45 * v17)
          {
            uint64_t result = swift_arrayInitWithTakeFrontToBack();
          }
          else if (v46)
          {
            uint64_t result = swift_arrayInitWithTakeBackToFront();
          }
        }
        uint64_t v18 = v6 - v17;
        if (__OFSUB__(v6, v17)) {
          goto LABEL_180;
        }
LABEL_120:
        if (v18 < 1) {
          goto LABEL_126;
        }
        uint64_t v54 = a3[2];
        uint64_t v55 = *(void *)(*(void *)(type metadata accessor for RequestLog.Element() - 8) + 72);
        uint64_t result = a4 + v55 * v14;
        if (v55 * v14 >= v55 * v54 && result < a4 + v55 * v54 + v55 * v18)
        {
          if (v55 * v14 != v55 * v54) {
LABEL_124:
          }
            uint64_t result = swift_arrayInitWithTakeBackToFront();
LABEL_126:
          a3[2] = v14;
          uint64_t v56 = a3[1];
          BOOL v19 = __OFSUB__(v56, v4);
          uint64_t v57 = v56 - v4;
          if (!v19) {
            goto LABEL_166;
          }
          __break(1u);
          goto LABEL_129;
        }
        goto LABEL_125;
      }
      if (v17 > 0)
      {
        uint64_t v36 = *(void *)(*(void *)(type metadata accessor for RequestLog.Element() - 8) + 72);
        if (v36 * v4 < 0 || v36 * v4 >= v36 * v17)
        {
LABEL_101:
          swift_arrayInitWithTakeFrontToBack();
          goto LABEL_102;
        }
        if (v36) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
LABEL_102:
      uint64_t v49 = *a3 - v4;
      uint64_t result = type metadata accessor for RequestLog.Element();
      uint64_t v50 = *(void *)(*(void *)(result - 8) + 72);
      if (v50 * v49 <= 0 && a4 + v50 * v49 + v50 * v4 > a4)
      {
        if (v50 * v49) {
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
      }
      else
      {
        uint64_t result = swift_arrayInitWithTakeFrontToBack();
      }
      uint64_t v52 = v6 - v18;
      if (__OFSUB__(v6, v18)) {
        goto LABEL_179;
      }
      if (v52 < 1) {
        goto LABEL_126;
      }
      uint64_t result = a4 + v50 * v14;
      uint64_t v53 = a3[2] * v50;
      if (v50 * v14 >= v53 && result < a4 + v53 + v50 * v52)
      {
        if (v50 * v14 != v53) {
          goto LABEL_124;
        }
        goto LABEL_126;
      }
LABEL_125:
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
      goto LABEL_126;
    }
    goto LABEL_170;
  }
  uint64_t v27 = v8 + v7;
  if (__OFADD__(v8, v7))
  {
LABEL_171:
    __break(1u);
    goto LABEL_172;
  }
  if ((v7 & 0x8000000000000000) == 0)
  {
    BOOL v28 = __OFSUB__(v27, v10);
    if (v27 < v10) {
      goto LABEL_37;
    }
    v27 -= v10;
    if (!v28) {
      goto LABEL_37;
    }
    __break(1u);
  }
  if (v27 < 0)
  {
    BOOL v19 = __OFADD__(v27, v10);
    v27 += v10;
    if (v19) {
      goto LABEL_182;
    }
  }
LABEL_37:
  BOOL v19 = __OFSUB__(v7, v4);
  uint64_t v29 = v7 - v4;
  if (v19)
  {
LABEL_172:
    __break(1u);
    goto LABEL_173;
  }
  uint64_t v30 = v29 + v8;
  if (v30 >= v10) {
    uint64_t v31 = v10;
  }
  else {
    uint64_t v31 = 0;
  }
  if (!v14) {
    goto LABEL_165;
  }
  uint64_t v32 = v30 - v31;
  if (v30 - v31 <= 0) {
    uint64_t v33 = v10;
  }
  else {
    uint64_t v33 = v30 - v31;
  }
  if (v27 <= 0) {
    uint64_t v34 = v10;
  }
  else {
    uint64_t v34 = v27;
  }
  if (v18 >= v34)
  {
    uint64_t v37 = v10 - v18;
    BOOL v38 = __OFSUB__(v10, v18);
    if (v33 >= v17)
    {
      if (v38)
      {
LABEL_178:
        __break(1u);
LABEL_179:
        __break(1u);
LABEL_180:
        __break(1u);
        goto LABEL_181;
      }
      if (v37 > 0)
      {
        uint64_t v48 = *(void *)(*(void *)(type metadata accessor for RequestLog.Element() - 8) + 72);
        uint64_t result = a4 + v48 * v17;
        if (v48 * v17 < v48 * v18 || result >= a4 + v48 * v18 + v48 * v37)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else if (v48 * v17 != v48 * v18)
        {
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        BOOL v19 = __OFADD__(v17, v37);
        v17 += v37;
        if (v19) {
          goto LABEL_185;
        }
        BOOL v64 = __OFSUB__(v17, *a3);
        if (v17 >= *a3)
        {
          v17 -= *a3;
          if (v64) {
            goto LABEL_189;
          }
        }
      }
      if (v27 < 1) {
        goto LABEL_165;
      }
      uint64_t v65 = *(void *)(*(void *)(type metadata accessor for RequestLog.Element() - 8) + 72);
      uint64_t v66 = v65 * v17;
      uint64_t result = a4 + v65 * v17;
      if (((v65 * v17) & 0x8000000000000000) == 0 && v66 < v65 * v27)
      {
        if (!v66) {
          goto LABEL_165;
        }
        goto LABEL_163;
      }
    }
    else
    {
      if (v38)
      {
LABEL_176:
        __break(1u);
        goto LABEL_177;
      }
      if (v37 > 0)
      {
        uint64_t v39 = *(void *)(*(void *)(type metadata accessor for RequestLog.Element() - 8) + 72);
        uint64_t result = a4 + v39 * v17;
        if (v39 * v17 < v39 * v18 || result >= a4 + v39 * v18 + v39 * v37)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else if (v39 * v17 != v39 * v18)
        {
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        BOOL v19 = __OFADD__(v17, v37);
        v17 += v37;
        if (v19) {
          goto LABEL_184;
        }
        BOOL v61 = __OFSUB__(v17, *a3);
        if (v17 >= *a3)
        {
          v17 -= *a3;
          if (v61) {
            goto LABEL_188;
          }
        }
      }
      uint64_t v62 = *(void *)(*(void *)(type metadata accessor for RequestLog.Element() - 8) + 72);
      uint64_t v63 = v62 * v17;
      uint64_t result = a4 + v62 * v17;
      if (v62 * v17 < 0 || v63 >= v62 * v4)
      {
        uint64_t result = swift_arrayInitWithTakeFrontToBack();
      }
      else if (v63)
      {
        uint64_t result = swift_arrayInitWithTakeBackToFront();
      }
      if (v4 >= *a3)
      {
        uint64_t v16 = v4 - *a3;
        if (__OFSUB__(v4, *a3)) {
          goto LABEL_186;
        }
      }
      if (v32 < 1) {
        goto LABEL_165;
      }
      if (v16 * v62 <= 0 && a4 + v16 * v62 + v62 * v32 > a4)
      {
        if (!(v16 * v62)) {
          goto LABEL_165;
        }
        goto LABEL_163;
      }
    }
LABEL_164:
    uint64_t result = swift_arrayInitWithTakeFrontToBack();
    goto LABEL_165;
  }
  if (v33 >= v17)
  {
    if (v14 <= 0) {
      goto LABEL_165;
    }
    uint64_t v47 = *(void *)(*(void *)(type metadata accessor for RequestLog.Element() - 8) + 72);
    uint64_t result = a4 + v47 * v17;
    if (v47 * v17 >= v47 * v18 && result < a4 + v47 * v18 + v47 * v14)
    {
      if (v47 * v17 == v47 * v18) {
        goto LABEL_165;
      }
LABEL_163:
      uint64_t result = swift_arrayInitWithTakeBackToFront();
      goto LABEL_165;
    }
    goto LABEL_164;
  }
  uint64_t v16 = v10 - v17;
  if (__OFSUB__(v10, v17))
  {
LABEL_175:
    __break(1u);
    goto LABEL_176;
  }
  if (v16 > 0)
  {
    uint64_t v35 = *(void *)(*(void *)(type metadata accessor for RequestLog.Element() - 8) + 72);
    uint64_t result = a4 + v35 * v17;
    if (v35 * v17 >= v35 * v18 && result < a4 + v35 * v18 + v35 * v16)
    {
      if (v35 * v17 != v35 * v18) {
        uint64_t result = swift_arrayInitWithTakeBackToFront();
      }
      goto LABEL_130;
    }
LABEL_129:
    uint64_t result = swift_arrayInitWithTakeFrontToBack();
LABEL_130:
    BOOL v19 = __OFADD__(v18, v16);
    v18 += v16;
    if (v19)
    {
LABEL_183:
      __break(1u);
LABEL_184:
      __break(1u);
LABEL_185:
      __break(1u);
LABEL_186:
      __break(1u);
LABEL_187:
      __break(1u);
LABEL_188:
      __break(1u);
LABEL_189:
      __break(1u);
      return result;
    }
    BOOL v58 = __OFSUB__(v18, *a3);
    if (v18 >= *a3)
    {
      v18 -= *a3;
      if (v58) {
        goto LABEL_187;
      }
    }
  }
  uint64_t v59 = v14 - v16;
  if (__OFSUB__(v14, v16))
  {
LABEL_181:
    __break(1u);
LABEL_182:
    __break(1u);
    goto LABEL_183;
  }
  if (v59 >= 1)
  {
    uint64_t result = type metadata accessor for RequestLog.Element();
    uint64_t v60 = *(void *)(*(void *)(result - 8) + 72);
    if (v60 * v18 <= 0 && a4 + v60 * v18 + v60 * v59 > a4)
    {
      if (!(v60 * v18)) {
        goto LABEL_165;
      }
      goto LABEL_163;
    }
    goto LABEL_164;
  }
LABEL_165:
  uint64_t v67 = a3[1];
  BOOL v19 = __OFSUB__(v67, v4);
  uint64_t v57 = v67 - v4;
  if (v19)
  {
LABEL_173:
    __break(1u);
LABEL_174:
    __break(1u);
    goto LABEL_175;
  }
LABEL_166:
  a3[1] = v57;
  return result;
}

uint64_t sub_100099794(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000017 && a2 == 0x80000001001C4440 || (sub_1001C1840() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4C74736575716572 && a2 == 0xEA0000000000676FLL || (sub_1001C1840() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F4C6465696E6564 && a2 == 0xE900000000000067 || (sub_1001C1840() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4C6E6F6973736573 && a2 == 0xEA0000000000676FLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_1001C1840();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_100099970(void *a1)
{
  uint64_t v3 = sub_100003918(&qword_10020BF30);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[3];
  sub_10000D934(a1, v8);
  sub_100099CB8();
  sub_1001C19B0();
  if (v1)
  {
    sub_100003E90((uint64_t)a1);
  }
  else
  {
    char v11 = 0;
    sub_100099D0C();
    sub_1001C1690();
    uint64_t v8 = v12;
    char v11 = 1;
    sub_100099D60();
    swift_bridgeObjectRetain();
    sub_1001C1690();
    char v11 = 2;
    sub_100099DB4();
    swift_retain();
    sub_1001C1690();
    char v11 = 3;
    sub_100099E08();
    swift_bridgeObjectRetain();
    sub_1001C1690();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    swift_bridgeObjectRetain();
    sub_100003E90((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v8;
}

unint64_t sub_100099CB8()
{
  unint64_t result = qword_10020BF38;
  if (!qword_10020BF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020BF38);
  }
  return result;
}

unint64_t sub_100099D0C()
{
  unint64_t result = qword_10020BF40;
  if (!qword_10020BF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020BF40);
  }
  return result;
}

unint64_t sub_100099D60()
{
  unint64_t result = qword_10020BF48;
  if (!qword_10020BF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020BF48);
  }
  return result;
}

unint64_t sub_100099DB4()
{
  unint64_t result = qword_10020BF50;
  if (!qword_10020BF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020BF50);
  }
  return result;
}

unint64_t sub_100099E08()
{
  unint64_t result = qword_10020BF58;
  if (!qword_10020BF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020BF58);
  }
  return result;
}

unint64_t sub_100099E5C()
{
  unint64_t result = qword_10020BF68;
  if (!qword_10020BF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020BF68);
  }
  return result;
}

unint64_t sub_100099EB0()
{
  unint64_t result = qword_10020BF70;
  if (!qword_10020BF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020BF70);
  }
  return result;
}

unint64_t sub_100099F04()
{
  unint64_t result = qword_10020BF78;
  if (!qword_10020BF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020BF78);
  }
  return result;
}

unint64_t sub_100099F58()
{
  unint64_t result = qword_10020BF80;
  if (!qword_10020BF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10020BF80);
  }
  return result;
}

uint64_t sub_100099FAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10009A014(uint64_t *a1)
{
  return sub_1000A30E0(a1, *(void *)(v1 + 16), *(void *)(v1 + 32)) & 1;
}

uint64_t sub_10009A03C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10018D58C(a1, a2);
}

uint64_t sub_10009A058(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10009A0B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10009A100()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10009A110@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000317D8(a1, *(void *)(v2 + 16), *(unsigned char **)(v2 + 24), *(void **)(v2 + 32), a2);
}

uint64_t sub_10009A130(uint64_t a1)
{
  return a1;
}

uint64_t sub_10009A184(uint64_t a1)
{
  return a1;
}

uint64_t sub_10009A1D8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10009758C(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_10009A1F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10009A260(uint64_t a1, uint64_t a2)
{
  uint64_t v26 = a2;
  uint64_t v2 = sub_1001BEFF0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1001BF0B0();
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  uint64_t v9 = __chkstk_darwin(v7, v8);
  uint64_t v23 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v11);
  uint64_t v22 = (uint64_t)&v21 - v12;
  unint64_t v27 = 0xD000000000000017;
  unint64_t v28 = 0x80000001001C4420;
  uint64_t v13 = enum case for URL.DirectoryHint.inferFromPath(_:);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v14(v6, enum case for URL.DirectoryHint.inferFromPath(_:), v2);
  sub_10001A364();
  sub_1001BF0A0();
  long long v15 = *(void (**)(char *, uint64_t))(v3 + 8);
  v15(v6, v2);
  swift_bridgeObjectRelease();
  unint64_t v27 = 0xD000000000000017;
  unint64_t v28 = 0x80000001001C4420;
  v14(v6, v13, v2);
  uint64_t v16 = (uint64_t)v23;
  sub_1001BF0A0();
  v15(v6, v2);
  swift_bridgeObjectRelease();
  uint64_t v17 = v22;
  sub_1000EF924(v22, v16);
  uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
  uint64_t v19 = v25;
  v18(v16, v25);
  return ((uint64_t (*)(uint64_t, uint64_t))v18)(v17, v19);
}

unsigned char *storeEnumTagSinglePayload for RateLimiter.RateLimitModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10009A5C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RateLimiter.RateLimitModel.CodingKeys()
{
  return &type metadata for RateLimiter.RateLimitModel.CodingKeys;
}

unint64_t sub_10009A600()
{
  unint64_t result = qword_10020BFC0;
  if (!qword_10020BFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020BFC0);
  }
  return result;
}

unint64_t sub_10009A658()
{
  unint64_t result = qword_10020BFC8;
  if (!qword_10020BFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020BFC8);
  }
  return result;
}

unint64_t sub_10009A6B0()
{
  unint64_t result = qword_10020BFD0;
  if (!qword_10020BFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10020BFD0);
  }
  return result;
}

uint64_t sub_10009A704@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100032F9C(a1, a2);
}

uint64_t sub_10009A71C()
{
  v1[30] = v0;
  uint64_t v2 = sub_1001C03E0();
  v1[31] = v2;
  v1[32] = *(void *)(v2 - 8);
  v1[33] = swift_task_alloc();
  uint64_t v3 = sub_1001C0420();
  v1[34] = v3;
  v1[35] = *(void *)(v3 - 8);
  v1[36] = swift_task_alloc();
  v1[37] = swift_task_alloc();
  uint64_t v4 = sub_100003918(&qword_10020C028);
  v1[38] = v4;
  v1[39] = *(void *)(v4 - 8);
  v1[40] = swift_task_alloc();
  uint64_t v5 = sub_1001BF8D0();
  v1[41] = v5;
  v1[42] = *(void *)(v5 - 8);
  v1[43] = swift_task_alloc();
  return _swift_task_switch(sub_10009A904, 0, 0);
}

uint64_t sub_10009A904()
{
  uint64_t v48 = v0;
  swift_retain_n();
  uint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C1200();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void *)(v0 + 240);
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v5 = v3 + qword_100207A48;
    uint64_t v7 = *(void *)(v3 + qword_100207A48);
    unint64_t v6 = *(void *)(v5 + 8);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 232) = sub_1000DF238(v7, v6, &v47);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s executing ratelimit request", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v8 = *(void *)(v0 + 344);
  uint64_t v9 = *(void *)(v0 + 320);
  uint64_t v39 = *(void *)(v0 + 312);
  uint64_t v40 = *(void *)(v0 + 304);
  uint64_t v42 = *(void *)(v0 + 296);
  uint64_t v43 = *(void *)(v0 + 280);
  uint64_t v44 = *(void *)(v0 + 272);
  uint64_t v45 = *(void *)(v0 + 288);
  uint64_t v10 = *(void *)(v0 + 240);
  uint64_t v11 = (void *)(v10 + *(void *)(*(void *)v10 + 168));
  uint64_t v12 = (void (*)(char *, uint64_t, uint64_t))v11[3];
  uint64_t v13 = v11[4];
  sub_10000D934(v11, (uint64_t)v12);
  uint64_t v14 = (_OWORD *)(v10 + *(void *)(*(void *)v10 + 176));
  *(void *)(v0 + 216) = &type metadata for SystemInfo;
  *(void *)(v0 + 224) = &protocol witness table for SystemInfo;
  long long v15 = (_OWORD *)swift_allocObject();
  *(void *)(v0 + 192) = v15;
  long long v17 = v14[1];
  long long v16 = v14[2];
  *(_OWORD *)(v0 + 16) = *v14;
  *(_OWORD *)(v0 + 32) = v17;
  *(_OWORD *)(v0 + 48) = v16;
  long long v18 = v14[6];
  long long v20 = v14[3];
  long long v19 = v14[4];
  *(_OWORD *)(v0 + 96) = v14[5];
  *(_OWORD *)(v0 + 112) = v18;
  *(_OWORD *)(v0 + 64) = v20;
  *(_OWORD *)(v0 + 80) = v19;
  long long v21 = v14[10];
  long long v23 = v14[7];
  long long v22 = v14[8];
  *(_OWORD *)(v0 + 160) = v14[9];
  *(_OWORD *)(v0 + 176) = v21;
  *(_OWORD *)(v0 + 128) = v23;
  *(_OWORD *)(v0 + 144) = v22;
  long long v24 = *v14;
  long long v25 = v14[2];
  v15[2] = v14[1];
  v15[3] = v25;
  v15[1] = v24;
  long long v26 = v14[3];
  long long v27 = v14[4];
  long long v28 = v14[6];
  v15[6] = v14[5];
  uint64_t v15[7] = v28;
  v15[4] = v26;
  v15[5] = v27;
  long long v29 = v14[7];
  long long v30 = v14[8];
  long long v31 = v14[10];
  v15[10] = v14[9];
  v15[11] = v31;
  v15[8] = v29;
  v15[9] = v30;
  sub_100016110(v0 + 16);
  TC2Configuration.environment(systemInfo:)(v0 + 192, v12, v13, v8);
  sub_100003E90(v0 + 192);
  sub_10000D934(v11, v11[3]);
  sub_1001BFA10();
  sub_1001BF8F0();
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v9, v40);
  LOBYTE(v12) = *(unsigned char *)(v0 + 416);
  char v32 = sub_1001BF870();
  *(void *)(v0 + 352) = sub_1000D6310((char)v12, v32 & 1, 0, *(void *)(v10 + *(void *)(*(void *)v10 + 184)), *(void *)(v10 + *(void *)(*(void *)v10 + 184) + 8));
  sub_1001BF8B0();
  (*(void (**)(uint64_t, void, uint64_t))(v43 + 104))(v42, enum case for NWEndpoint.url(_:), v44);
  sub_1001C0410();
  *(void *)(v0 + 360) = sub_1001C03F0();
  sub_1000A0DDC();
  uint64_t v33 = sub_1001C1240();
  *(void *)(v0 + 368) = v33;
  uint64_t v41 = v10 + *(void *)(*(void *)v10 + 160);
  uint64_t v34 = swift_task_alloc();
  *(void *)(v0 + 376) = v34;
  *(void *)(v34 + 16) = v10;
  *(void *)(v34 + 24) = v8;
  uint64_t v35 = swift_task_alloc();
  *(void *)(v0 + 384) = v35;
  *(void *)(v35 + 16) = &unk_10020C038;
  *(void *)(v35 + 24) = v34;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v45, v42, v44);
  sub_1001C0650();
  swift_allocObject();
  swift_retain();
  uint64_t v36 = sub_1001C05F0();
  *(void *)(v0 + 392) = v36;
  swift_retain();
  sub_1001C0510();
  uint64_t v46 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10020C050
                                                                                     + dword_10020C050);
  uint64_t v37 = (void *)swift_task_alloc();
  *(void *)(v0 + 400) = v37;
  *uint64_t v37 = v0;
  v37[1] = sub_10009AE30;
  return v46((uint64_t)v46, v36, v33, v41, (uint64_t)&unk_10020C048, v35);
}

uint64_t sub_10009AE30()
{
  *(void *)(*(void *)v1 + 408) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_10009B0E0;
  }
  else {
    os_log_type_t v2 = sub_10009AF44;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10009AF44()
{
  uint64_t v10 = (void *)v0[46];
  uint64_t v1 = v0[42];
  uint64_t v12 = v0[41];
  uint64_t v13 = v0[43];
  uint64_t v2 = v0[37];
  uint64_t v4 = v0[34];
  uint64_t v3 = v0[35];
  uint64_t v6 = v0[32];
  uint64_t v5 = v0[33];
  uint64_t v7 = v0[31];
  uint64_t v11 = v0[30];
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v5, enum case for NWActivity.CompletionReason.success(_:), v7);
  sub_1001C0400();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_release();
  swift_release();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);

  swift_release();
  swift_release();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v13, v12);
  sub_10009B290(v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_10009B0E0()
{
  uint64_t v1 = v0[43];
  uint64_t v11 = (void *)v0[46];
  uint64_t v2 = v0[42];
  uint64_t v13 = v0[41];
  uint64_t v10 = v0[37];
  uint64_t v3 = v0[35];
  uint64_t v4 = v0[33];
  uint64_t v5 = v0[34];
  uint64_t v6 = v0[31];
  uint64_t v7 = v0[32];
  uint64_t v12 = v0[30];
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v4, enum case for NWActivity.CompletionReason.failure(_:), v6);
  sub_1001C0400();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
  swift_willThrow();
  swift_release();
  swift_release();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v10, v5);

  swift_release();
  swift_release();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v13);
  sub_10009B290(v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

void sub_10009B290(uint64_t a1)
{
  swift_retain_n();
  osos_log_t log = sub_1001C0330();
  os_log_type_t v2 = sub_1001C1200();
  if (os_log_type_enabled(oslog, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    uint64_t v4 = *(void *)(a1 + qword_100207A48);
    unint64_t v5 = *(void *)(a1 + qword_100207A48 + 8);
    swift_bridgeObjectRetain();
    sub_1000DF238(v4, v5, &v7);
    sub_1001C1310();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, oslog, v2, "%s finished ratelimit request", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }
}

uint64_t sub_10009B438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[25] = a5;
  v6[26] = a6;
  v6[23] = a2;
  v6[24] = a3;
  sub_100003918(&qword_100209380);
  v6[27] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for RateLimitConfiguration(0);
  v6[28] = v7;
  v6[29] = *(void *)(v7 - 8);
  v6[30] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration(0);
  v6[31] = v8;
  v6[32] = *(void *)(v8 - 8);
  v6[33] = swift_task_alloc();
  v6[34] = swift_task_alloc();
  v6[35] = swift_task_alloc();
  sub_100003918(&qword_10020A630);
  v6[36] = swift_task_alloc();
  v6[37] = swift_task_alloc();
  v6[38] = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0);
  v6[39] = swift_task_alloc();
  v6[40] = swift_task_alloc();
  sub_1001BFEA0();
  v6[41] = swift_task_alloc();
  v6[42] = type metadata accessor for Proto_Ropes_HttpService_ConfigResponse(0);
  v6[43] = swift_task_alloc();
  uint64_t v9 = sub_1001BF2C0();
  v6[44] = v9;
  v6[45] = *(void *)(v9 - 8);
  v6[46] = swift_task_alloc();
  v6[47] = swift_task_alloc();
  v6[48] = type metadata accessor for NWAsyncConnection.Inbound(0);
  v6[49] = swift_task_alloc();
  v6[50] = type metadata accessor for NWAsyncConnection.Inbound.AsyncIterator(0);
  v6[51] = swift_task_alloc();
  uint64_t v10 = sub_100003918(&qword_10020C068);
  v6[52] = v10;
  v6[53] = *(void *)(v10 - 8);
  v6[54] = swift_task_alloc();
  sub_1001C0440();
  v6[55] = swift_task_alloc();
  uint64_t v11 = sub_1001C0460();
  v6[56] = v11;
  v6[57] = *(void *)(v11 - 8);
  v6[58] = swift_task_alloc();
  v6[59] = swift_task_alloc();
  v6[60] = swift_task_alloc();
  uint64_t v12 = sub_1001C0820();
  v6[61] = v12;
  v6[62] = *(void *)(v12 - 8);
  v6[63] = swift_task_alloc();
  uint64_t v13 = sub_1001C03B0();
  v6[64] = v13;
  v6[65] = *(void *)(v13 - 8);
  v6[66] = swift_task_alloc();
  v6[67] = swift_task_alloc();
  v6[68] = type metadata accessor for Proto_Ropes_HttpService_ConfigRequest(0);
  v6[69] = swift_task_alloc();
  return _swift_task_switch(sub_10009B948, 0, 0);
}

uint64_t sub_10009B948()
{
  uint64_t v63 = v0;
  sub_1000A1280(&qword_10020A890, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_ConfigRequest);
  sub_1001C0060();
  uint64_t v1 = sub_1001C0000();
  v0[70] = v1;
  v0[71] = v2;
  unint64_t v60 = v2;
  uint64_t v61 = v1;
  sub_100003918(&qword_10020C070);
  sub_1001C0870();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1001CE860;
  uint64_t v51 = v3;
  if (qword_100207990 != -1) {
    swift_once();
  }
  uint64_t v5 = v0[62];
  uint64_t v4 = v0[63];
  uint64_t v6 = v0[61];
  uint64_t v7 = sub_10000D978(v6, (uint64_t)qword_10021FF38);
  os_log_type_t type = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  type(v4, v7, v6);
  sub_1001BF2D0();
  sub_1001C0840();
  if (qword_100207998 != -1) {
    swift_once();
  }
  uint64_t v8 = v0[63];
  uint64_t v9 = v0[61];
  uint64_t v10 = sub_10000D978(v9, (uint64_t)qword_10021FF50);
  type(v8, v10, v9);
  swift_bridgeObjectRetain();
  sub_1001C0840();
  sub_1001C07E0();
  sub_1001C0840();
  sub_1001C0810();
  sub_1001C0840();
  v0[17] = v51;
  sub_1000A1280(&qword_10020C078, (void (*)(uint64_t))&type metadata accessor for HTTPFields);
  sub_1001C1190();
  sub_100003918(&qword_10020C080);
  sub_100016710((unint64_t *)&qword_10020C088, &qword_10020C080);
  sub_1001C1160();
  id v11 = [self automatedDeviceGroup];
  if (v11)
  {
    uint64_t v12 = v11;
    sub_1001C0BF0();

    if (qword_1002079D0 != -1) {
      swift_once();
    }
    uint64_t v13 = v0[63];
    uint64_t v14 = v0[61];
    uint64_t v15 = sub_10000D978(v14, (uint64_t)qword_10021FFF8);
    type(v13, v15, v14);
    sub_1001C03D0();
  }
  uint64_t v16 = v0[65];
  uint64_t v48 = v0[64];
  uint64_t v49 = v0[67];
  uint64_t v57 = v0[59];
  uint64_t v46 = v0[57];
  uint64_t v47 = v0[66];
  uint64_t v52 = v0[60];
  *(void *)typea = v0[56];
  uint64_t v18 = v0[53];
  uint64_t v17 = v0[54];
  uint64_t v45 = v0[52];
  uint64_t v19 = v0[25];
  sub_1001C0430();
  sub_1001BF880();
  uint64_t v20 = *(void *)(*(void *)v19 + 168);
  v0[72] = v20;
  sub_10000D934((void *)(v19 + v20), *(void *)(v19 + v20 + 24));
  sub_1001BF9F0();
  sub_1001BF8F0();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v45);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v47, v49, v48);
  sub_1001C0450();
  v0[73] = qword_100207A40;
  long long v21 = *(void (**)(uint64_t, uint64_t, void))(v46 + 16);
  v21(v57, v52, *(void *)typea);
  swift_retain_n();
  long long v22 = sub_1001C0330();
  os_log_type_t v23 = sub_1001C11D0();
  BOOL v24 = os_log_type_enabled(v22, v23);
  uint64_t v25 = v0[59];
  if (v24)
  {
    uint64_t v53 = v0[59];
    uint64_t v26 = v0[58];
    uint64_t v58 = v0[57];
    uint64_t v50 = v0[56];
    uint64_t v59 = v21;
    uint64_t v27 = v0[25];
    uint64_t v28 = swift_slowAlloc();
    v62[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v28 = 136315394;
    os_log_type_t typeb = v23;
    uint64_t v30 = *(void *)(v27 + qword_100207A48);
    unint64_t v29 = *(void *)(v27 + qword_100207A48 + 8);
    swift_bridgeObjectRetain();
    v0[21] = sub_1000DF238(v30, v29, v62);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    long long v21 = v59;
    swift_release_n();
    *(_WORD *)(v28 + 12) = 2080;
    v59(v26, v53, v50);
    uint64_t v31 = sub_1001C0C50();
    v0[22] = sub_1000DF238(v31, v32, v62);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
    v33(v53, v50);
    _os_log_impl((void *)&_mh_execute_header, v22, typeb, "%s sending request %s", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v34 = v0[56];
    uint64_t v35 = v0[57];

    swift_release_n();
    uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
    v33(v25, v34);
  }
  v0[74] = v33;
  uint64_t v36 = v0[60];
  uint64_t v37 = v0[58];
  uint64_t v38 = v0[56];
  uint64_t v39 = v0[24];
  sub_1001C0570();
  v21(v37, v36, v38);
  sub_100007B14(v61, v60);
  uint64_t v40 = sub_1001C0560();
  v0[75] = v40;
  uint64_t v41 = swift_task_alloc();
  v0[76] = v41;
  *(void *)(v41 + 16) = v39;
  *(void *)(v41 + 24) = v61;
  *(void *)(v41 + 32) = v60;
  *(void *)(v41 + 40) = v40;
  *(unsigned char *)(v41 + 48) = 1;
  uint64_t v42 = (void *)swift_task_alloc();
  v0[77] = v42;
  *uint64_t v42 = v0;
  v42[1] = sub_10009C3F4;
  uint64_t v43 = v0[24];
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v42, &unk_10020C090, v41, sub_1000A10C0, v43, 0, 0, (char *)&type metadata for () + 8);
}

uint64_t sub_10009C3F4()
{
  *(void *)(*(void *)v1 + 624) = v0;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v2 = sub_10009C858;
  }
  else
  {
    swift_task_dealloc();
    unint64_t v2 = sub_10009C510;
  }
  return _swift_task_switch(v2, 0, 0);
}

void sub_10009C510()
{
  uint64_t v25 = v0;
  unint64_t v1 = v0[71];
  uint64_t v2 = v0[70];
  swift_release();
  sub_10000792C(v2, v1);
  swift_retain_n();
  uint64_t v3 = sub_1001C0330();
  os_log_type_t v4 = sub_1001C11D0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[25];
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v7 = *(void *)(v5 + qword_100207A48);
    unint64_t v8 = *(void *)(v5 + qword_100207A48 + 8);
    swift_bridgeObjectRetain();
    v0[20] = sub_1000DF238(v7, v8, &v24);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s waiting for response", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v9 = v0[78];
  uint64_t v10 = v0[48];
  uint64_t v11 = v0[49];
  sub_1000A1150(v0[23], v11, type metadata accessor for NWAsyncConnection.Inbound);
  uint64_t v12 = *(os_unfair_lock_s **)(v11 + *(int *)(v10 + 24));
  uint64_t v13 = v12 + 4;
  uint64_t v14 = v12 + 5;
  os_unfair_lock_lock(v12 + 5);
  sub_10019A430(v13);
  os_unfair_lock_unlock(v14);
  if (!v9)
  {
    uint64_t v16 = (int *)v0[50];
    uint64_t v15 = (void *)v0[51];
    uint64_t v17 = (uint64_t *)v0[49];
    uint64_t v18 = v0[25];
    uint64_t v19 = *v17;
    uint64_t v20 = (char *)v17 + *(int *)(v0[48] + 20);
    long long v21 = (char *)v15 + v16[5];
    uint64_t v22 = sub_1001C0340();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v21, v20, v22);
    *(void *)((char *)v15 + v16[6]) = 0;
    *((unsigned char *)v15 + v16[7]) = 0;
    *uint64_t v15 = v19;
    swift_retain();
    sub_1000A11B8((uint64_t)v17, type metadata accessor for NWAsyncConnection.Inbound);
    v0[79] = qword_100207A48;
    v0[80] = *(void *)(*(void *)v18 + 152);
    os_log_type_t v23 = (void *)swift_task_alloc();
    v0[81] = v23;
    *os_log_type_t v23 = v0;
    v23[1] = sub_10009CAB0;
    NWAsyncConnection.Inbound.AsyncIterator.next()();
  }
}

uint64_t sub_10009C858()
{
  unint64_t v1 = (void (*)(uint64_t, uint64_t))v0[74];
  unint64_t v2 = v0[71];
  uint64_t v3 = v0[70];
  uint64_t v10 = v0[67];
  uint64_t v11 = v0[69];
  uint64_t v4 = v0[65];
  uint64_t v5 = v0[64];
  uint64_t v6 = v0[60];
  uint64_t v7 = v0[56];
  swift_task_dealloc();
  swift_release();
  sub_10000792C(v3, v2);
  sub_10000792C(v3, v2);
  v1(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v10, v5);
  sub_1000A11B8(v11, type metadata accessor for Proto_Ropes_HttpService_ConfigRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_10009CAB0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6 = *v5;
  *(void *)(v6 + 656) = a1;
  *(void *)(v6 + 664) = a2;
  *(void *)(v6 + 672) = a3;
  *(unsigned char *)(v6 + 748) = a4;
  *(void *)(v6 + 680) = v4;
  swift_task_dealloc();
  if (v4) {
    uint64_t v7 = sub_10009DE64;
  }
  else {
    uint64_t v7 = sub_10009CBD4;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_10009CBD4()
{
  uint64_t v142 = v0;
  uint64_t v1 = *(void *)(v0 + 672);
  if (v1 == 1)
  {
    unint64_t v2 = *(void (**)(uint64_t, uint64_t))(v0 + 592);
    uint64_t v3 = *(void *)(v0 + 552);
    uint64_t v4 = *(void *)(v0 + 536);
    uint64_t v5 = *(void *)(v0 + 520);
    uint64_t v6 = *(void *)(v0 + 512);
    uint64_t v7 = *(void *)(v0 + 480);
    uint64_t v8 = *(void *)(v0 + 448);
    uint64_t v9 = *(void *)(v0 + 408);
    sub_10000792C(*(void *)(v0 + 560), *(void *)(v0 + 568));
    sub_1000A11B8(v9, type metadata accessor for NWAsyncConnection.Inbound.AsyncIterator);
    v2(v7, v8);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v10 = v3;
LABEL_36:
    sub_1000A11B8(v10, type metadata accessor for Proto_Ropes_HttpService_ConfigRequest);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v45 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_37;
  }
  unint64_t v11 = *(void *)(v0 + 664);
  uint64_t v12 = *(void *)(v0 + 656);
  swift_retain();
  sub_1000A10C8(v12, v11, v1);
  swift_retain();
  sub_1000A10C8(v12, v11, v1);
  uint64_t v13 = sub_1001C0330();
  os_log_type_t v14 = sub_1001C11D0();
  if (os_log_type_enabled(v13, v14))
  {
    unint64_t v15 = *(void *)(v0 + 664);
    uint64_t v16 = (uint64_t *)(*(void *)(v0 + 200) + *(void *)(v0 + 632));
    uint64_t v17 = swift_slowAlloc();
    *(void *)(v0 + 152) = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315394;
    uint64_t v18 = *v16;
    unint64_t v19 = v16[1];
    swift_bridgeObjectRetain();
    *(void *)(v17 + 4) = sub_1000DF238(v18, v19, (uint64_t *)(v0 + 152));
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v17 + 12) = 2048;
    if (v15 >> 60 == 15)
    {
      sub_1000A110C(*(void *)(v0 + 656), *(void *)(v0 + 664), *(void *)(v0 + 672));
      uint64_t v20 = -1;
    }
    else
    {
      unint64_t v24 = *(void *)(v0 + 664);
      switch(v24 >> 62)
      {
        case 1uLL:
          uint64_t v25 = *(void *)(v0 + 656);
          sub_1000A110C(v25, *(void *)(v0 + 664), *(void *)(v0 + 672));
          LODWORD(v20) = HIDWORD(v25) - v25;
          if (__OFSUB__(HIDWORD(v25), v25))
          {
            __break(1u);
            JUMPOUT(0x10009DE54);
          }
          uint64_t v20 = (int)v20;
          break;
        case 2uLL:
          uint64_t v26 = *(void *)(v0 + 656);
          uint64_t v28 = *(void *)(v26 + 16);
          uint64_t v27 = *(void *)(v26 + 24);
          sub_1000A110C(v26, *(void *)(v0 + 664), *(void *)(v0 + 672));
          uint64_t v20 = v27 - v28;
          if (__OFSUB__(v27, v28))
          {
            __break(1u);
            goto LABEL_14;
          }
          break;
        case 3uLL:
LABEL_14:
          sub_1000A110C(*(void *)(v0 + 656), v24, *(void *)(v0 + 672));
          uint64_t v20 = 0;
          break;
        default:
          sub_1000A110C(*(void *)(v0 + 656), *(void *)(v0 + 664), *(void *)(v0 + 672));
          uint64_t v20 = BYTE6(v24);
          break;
      }
    }
    uint64_t v29 = *(void *)(v0 + 672);
    unint64_t v30 = *(void *)(v0 + 664);
    uint64_t v31 = *(void *)(v0 + 656);
    *(void *)(v17 + 14) = v20;
    sub_1000A110C(v31, v30, v29);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%s received response %ld", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v21 = *(void *)(v0 + 672);
    unint64_t v22 = *(void *)(v0 + 664);
    uint64_t v23 = *(void *)(v0 + 656);
    sub_1000A110C(v23, v22, v21);

    swift_release_n();
    sub_1000A110C(v23, v22, v21);
  }
  unint64_t v32 = *(void *)(v0 + 664);
  if (v32 >> 60 == 15)
  {
    if ((*(unsigned char *)(v0 + 748) & 1) == 0)
    {
LABEL_18:
      sub_1000A110C(*(void *)(v0 + 656), *(void *)(v0 + 664), *(void *)(v0 + 672));
      uint64_t v33 = (void *)swift_task_alloc();
      *(void *)(v0 + 648) = v33;
      void *v33 = v0;
      v33[1] = sub_10009CAB0;
      return NWAsyncConnection.Inbound.AsyncIterator.next()();
    }
LABEL_32:
    swift_retain_n();
    uint64_t v67 = sub_1001C0330();
    os_log_type_t v68 = sub_1001C11D0();
    BOOL v69 = os_log_type_enabled(v67, v68);
    uint64_t v137 = *(void *)(v0 + 672);
    unint64_t v133 = *(void *)(v0 + 664);
    uint64_t v131 = *(void *)(v0 + 656);
    if (v69)
    {
      uint64_t v113 = *(void *)(v0 + 560);
      unint64_t v114 = *(void *)(v0 + 568);
      uint64_t v129 = *(void *)(v0 + 552);
      uint64_t v123 = *(void (**)(uint64_t, uint64_t))(v0 + 592);
      uint64_t v126 = *(void *)(v0 + 536);
      uint64_t v119 = *(void *)(v0 + 520);
      uint64_t v120 = *(void *)(v0 + 512);
      uint64_t v115 = *(void *)(v0 + 448);
      uint64_t v117 = *(void *)(v0 + 480);
      uint64_t v70 = (uint64_t *)(*(void *)(v0 + 200) + *(void *)(v0 + 632));
      uint64_t v112 = *(void *)(v0 + 408);
      uint64_t v71 = (uint8_t *)swift_slowAlloc();
      v141[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v71 = 136315138;
      uint64_t v73 = *v70;
      unint64_t v72 = v70[1];
      swift_bridgeObjectRetain();
      *(void *)(v0 + 128) = sub_1000DF238(v73, v72, v141);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v67, v68, "%s response completed", v71, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_1000A110C(v131, v133, v137);
      sub_10000792C(v113, v114);
      sub_1000A11B8(v112, type metadata accessor for NWAsyncConnection.Inbound.AsyncIterator);
      v123(v117, v115);
      (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v126, v120);
    }
    else
    {
      unint64_t v74 = *(void *)(v0 + 568);
      uint64_t v75 = *(void *)(v0 + 560);
      uint64_t v129 = *(void *)(v0 + 552);
      uint64_t v124 = *(void (**)(uint64_t, uint64_t))(v0 + 592);
      uint64_t v127 = *(void *)(v0 + 536);
      uint64_t v76 = *(void *)(v0 + 520);
      uint64_t v121 = *(void *)(v0 + 512);
      uint64_t v77 = *(void *)(v0 + 480);
      uint64_t v78 = *(void *)(v0 + 448);
      uint64_t v79 = *(void *)(v0 + 408);

      swift_release_n();
      sub_1000A110C(v131, v133, v137);
      sub_10000792C(v75, v74);
      sub_1000A11B8(v79, type metadata accessor for NWAsyncConnection.Inbound.AsyncIterator);
      v124(v77, v78);
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v127, v121);
    }
    uint64_t v10 = v129;
    goto LABEL_36;
  }
  uint64_t v35 = *(void *)(v0 + 680);
  uint64_t v36 = *(void *)(v0 + 656);
  sub_100007B14(v36, *(void *)(v0 + 664));
  _s20privatecloudcomputed8LRUCacheC10addToCache3now5valueSb10Foundation4DateV_xtFfA__0();
  *(void *)(v0 + 112) = v36;
  *(void *)(v0 + 120) = v32;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(void *)(v0 + 48) = 0;
  sub_100007B14(v36, v32);
  sub_1001BFE90();
  sub_1000A1280(&qword_10020A8A8, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_ConfigResponse);
  sub_1001C0020();
  if (v35)
  {
    uint64_t v37 = *(void *)(v0 + 672);
    unint64_t v38 = *(void *)(v0 + 664);
    uint64_t v39 = *(void *)(v0 + 656);
    BOOL v130 = *(void (**)(uint64_t, uint64_t))(v0 + 592);
    unint64_t v116 = *(void *)(v0 + 568);
    uint64_t v40 = *(void *)(v0 + 560);
    uint64_t v135 = *(void *)(v0 + 552);
    uint64_t v132 = *(void *)(v0 + 536);
    uint64_t v41 = *(void *)(v0 + 520);
    uint64_t v125 = *(void *)(v0 + 480);
    uint64_t v128 = *(void *)(v0 + 512);
    uint64_t v122 = *(void *)(v0 + 448);
    uint64_t v118 = *(void *)(v0 + 408);
    uint64_t v42 = *(void *)(v0 + 376);
    uint64_t v43 = *(void *)(v0 + 352);
    uint64_t v44 = *(void *)(v0 + 360);
    sub_100007918(v39, v38);
    sub_1000A110C(v39, v38, v37);
    sub_10000792C(v40, v116);
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v42, v43);
    sub_1000A11B8(v118, type metadata accessor for NWAsyncConnection.Inbound.AsyncIterator);
    v130(v125, v122);
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v132, v128);
    sub_1000A11B8(v135, type metadata accessor for Proto_Ropes_HttpService_ConfigRequest);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v45 = *(uint64_t (**)(void))(v0 + 8);
LABEL_37:
    return v45();
  }
  uint64_t v46 = *(void *)(v0 + 296);
  sub_10003282C(*(void *)(v0 + 344), v46, &qword_10020A630);
  uint64_t v47 = type metadata accessor for Proto_Ropes_HttpService_ConfigResponse.OneOf_Type(0);
  uint64_t v48 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 48);
  int v49 = v48(v46, 1, v47);
  uint64_t v50 = *(void **)(v0 + 320);
  if (v49 == 1)
  {
    sub_100010360(*(void *)(v0 + 296), &qword_10020A630);
    *uint64_t v50 = &_swiftEmptyArrayStorage;
    _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  }
  else
  {
    sub_1000A1218(*(void *)(v0 + 296), *(void *)(v0 + 320), type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  }
  uint64_t v51 = *(uint64_t **)(v0 + 320);
  uint64_t v52 = *v51;
  swift_bridgeObjectRetain();
  sub_1000A11B8((uint64_t)v51, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  uint64_t v53 = *(void *)(v52 + 16);
  swift_bridgeObjectRelease();
  swift_retain_n();
  uint64_t v54 = sub_1001C0330();
  os_log_type_t v55 = sub_1001C11D0();
  if (!os_log_type_enabled(v54, v55))
  {

    swift_release_n();
    if (v53) {
      goto LABEL_28;
    }
LABEL_31:
    uint64_t v63 = *(void *)(v0 + 376);
    uint64_t v64 = *(void *)(v0 + 352);
    uint64_t v65 = *(void *)(v0 + 360);
    uint64_t v66 = *(void *)(v0 + 344);
    sub_100007918(*(void *)(v0 + 656), *(void *)(v0 + 664));
    sub_1000A11B8(v66, type metadata accessor for Proto_Ropes_HttpService_ConfigResponse);
    (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v63, v64);
    if ((*(unsigned char *)(v0 + 748) & 1) == 0) {
      goto LABEL_18;
    }
    goto LABEL_32;
  }
  uint64_t v136 = v53;
  uint64_t v56 = (uint64_t *)(*(void *)(v0 + 200) + *(void *)(v0 + 632));
  uint64_t v57 = swift_slowAlloc();
  v141[0] = swift_slowAlloc();
  *(_DWORD *)uint64_t v57 = 136315394;
  uint64_t v58 = *v56;
  unint64_t v59 = v56[1];
  swift_bridgeObjectRetain();
  *(void *)(v57 + 4) = sub_1000DF238(v58, v59, v141);
  swift_bridgeObjectRelease();
  swift_release_n();
  *(_WORD *)(v57 + 12) = 2048;
  *(void *)(v57 + 14) = v136;
  _os_log_impl((void *)&_mh_execute_header, v54, v55, "%s decoded ratelimit response configuration count %ld", (uint8_t *)v57, 0x16u);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  if (!v136) {
    goto LABEL_31;
  }
LABEL_28:
  uint64_t v60 = *(void *)(v0 + 288);
  sub_10003282C(*(void *)(v0 + 344), v60, &qword_10020A630);
  int v61 = v48(v60, 1, v47);
  uint64_t v62 = *(void **)(v0 + 312);
  if (v61 == 1)
  {
    sub_100010360(*(void *)(v0 + 288), &qword_10020A630);
    *uint64_t v62 = &_swiftEmptyArrayStorage;
    _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  }
  else
  {
    sub_1000A1218(*(void *)(v0 + 288), *(void *)(v0 + 312), type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  }
  uint64_t v80 = *(uint64_t **)(v0 + 312);
  uint64_t v81 = *v80;
  *(void *)(v0 + 688) = *v80;
  swift_bridgeObjectRetain();
  sub_1000A11B8((uint64_t)v80, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  uint64_t v82 = *(void *)(v81 + 16);
  *(void *)(v0 + 696) = v82;
  if (v82)
  {
    uint64_t v83 = 0;
    uint64_t v134 = v0 + 56;
    uint64_t v84 = *(void *)(v0 + 256);
    *(_DWORD *)(v0 + 744) = *(_DWORD *)(v84 + 80);
    *(void *)(v0 + 704) = *(void *)(v84 + 72);
    while (1)
    {
      *(void *)(v0 + 728) = v83;
      uint64_t v94 = *(void *)(v0 + 368);
      uint64_t v95 = *(void *)(v0 + 352);
      uint64_t v96 = *(void *)(v0 + 360);
      BOOL v98 = *(void **)(v0 + 272);
      uint64_t v97 = *(void *)(v0 + 280);
      uint64_t v99 = *(void *)(v0 + 232);
      uint64_t v138 = *(void *)(v0 + 376);
      uint64_t v140 = *(void *)(v0 + 224);
      uint64_t v100 = *(void **)(v0 + 216);
      uint64_t v101 = *(void *)(v0 + 200) + *(void *)(v0 + 576);
      sub_1000A1150(*(void *)(v0 + 688)+ ((*(unsigned __int8 *)(v0 + 744) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 744))+ *(void *)(v0 + 704) * v83, v97, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v96 + 16))(v94, v138, v95);
      sub_1000A1150(v97, (uint64_t)v98, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
      sub_100032890(v101, v134);
      sub_10002E48C(v94, v98, v134, v100);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v99 + 48))(v100, 1, v140) != 1) {
        break;
      }
      uint64_t v102 = *(void *)(v0 + 280);
      uint64_t v103 = *(void *)(v0 + 264);
      sub_100010360(*(void *)(v0 + 216), &qword_100209380);
      sub_1000A1150(v102, v103, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
      swift_retain();
      uint64_t v104 = sub_1001C0330();
      os_log_type_t v105 = sub_1001C11F0();
      if (os_log_type_enabled(v104, v105))
      {
        uint64_t v85 = *(void *)(v0 + 272);
        uint64_t v86 = *(void *)(v0 + 264);
        uint64_t v139 = *(void *)(v0 + 280);
        uint64_t v87 = (uint64_t *)(*(void *)(v0 + 200) + *(void *)(v0 + 632));
        uint64_t v88 = swift_slowAlloc();
        v141[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v88 = 136315394;
        uint64_t v90 = *v87;
        unint64_t v89 = v87[1];
        swift_bridgeObjectRetain();
        *(void *)(v88 + 4) = sub_1000DF238(v90, v89, v141);
        swift_bridgeObjectRelease();
        swift_release();
        *(_WORD *)(v88 + 12) = 2080;
        sub_1000A1150(v86, v85, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
        uint64_t v91 = sub_1001C0C40();
        *(void *)(v88 + 14) = sub_1000DF238(v91, v92, v141);
        swift_bridgeObjectRelease();
        sub_1000A11B8(v86, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
        _os_log_impl((void *)&_mh_execute_header, v104, v105, "%s unable to process rate limit configuration %s", (uint8_t *)v88, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v93 = v139;
      }
      else
      {
        uint64_t v106 = *(void *)(v0 + 280);
        uint64_t v107 = *(void *)(v0 + 264);
        swift_release();
        sub_1000A11B8(v107, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);

        uint64_t v93 = v106;
      }
      sub_1000A11B8(v93, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
      uint64_t v83 = *(void *)(v0 + 728) + 1;
      if (v83 == *(void *)(v0 + 696)) {
        goto LABEL_50;
      }
    }
    uint64_t v108 = *(void *)(v0 + 640);
    uint64_t v109 = *(void *)(v0 + 200);
    sub_1000A1218(*(void *)(v0 + 216), *(void *)(v0 + 240), type metadata accessor for RateLimitConfiguration);
    uint64_t v110 = *(void *)(v109 + v108);
    *(void *)(v0 + 736) = v110;
    uint64_t v111 = sub_10009E82C;
  }
  else
  {
LABEL_50:
    swift_bridgeObjectRelease();
    uint64_t v110 = *(void *)(*(void *)(v0 + 200) + *(void *)(v0 + 640));
    *(void *)(v0 + 712) = v110;
    uint64_t v111 = sub_10009E13C;
  }
  return _swift_task_switch(v111, v110, 0);
}

uint64_t sub_10009DE64()
{
  *(void *)(v0 + 144) = *(void *)(v0 + 680);
  sub_100003918(&qword_100208C98);
  swift_willThrowTypedImpl();
  return _swift_task_switch(sub_10009DEF0, 0, 0);
}

uint64_t sub_10009DEF0()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[74];
  uint64_t v2 = v0[69];
  uint64_t v3 = v0[67];
  uint64_t v4 = v0[65];
  uint64_t v5 = v0[64];
  uint64_t v6 = v0[60];
  uint64_t v7 = v0[56];
  uint64_t v8 = v0[51];
  sub_10000792C(v0[70], v0[71]);
  sub_1000A11B8(v8, type metadata accessor for NWAsyncConnection.Inbound.AsyncIterator);
  v1(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_1000A11B8(v2, type metadata accessor for Proto_Ropes_HttpService_ConfigRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_10009E13C()
{
  sub_1000946B0(*(void **)(v0 + 376));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 720) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10009E1D8;
  return sub_100092DF4();
}

uint64_t sub_10009E1D8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10009E2D4, 0, 0);
}

uint64_t sub_10009E2D4()
{
  uint64_t v38 = v0;
  uint64_t v1 = *(void *)(v0 + 376);
  uint64_t v2 = *(void *)(v0 + 352);
  uint64_t v3 = *(void *)(v0 + 360);
  uint64_t v4 = *(void *)(v0 + 344);
  sub_100007918(*(void *)(v0 + 656), *(void *)(v0 + 664));
  sub_1000A11B8(v4, type metadata accessor for Proto_Ropes_HttpService_ConfigResponse);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  if (*(unsigned char *)(v0 + 748))
  {
    swift_retain_n();
    uint64_t v7 = sub_1001C0330();
    os_log_type_t v8 = sub_1001C11D0();
    BOOL v9 = os_log_type_enabled(v7, v8);
    uint64_t v36 = *(void *)(v0 + 672);
    uint64_t v34 = *(void *)(v0 + 656);
    unint64_t v35 = *(void *)(v0 + 664);
    if (v9)
    {
      uint64_t v22 = *(void *)(v0 + 560);
      unint64_t v23 = *(void *)(v0 + 568);
      uint64_t v33 = *(void *)(v0 + 552);
      uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v0 + 592);
      uint64_t v31 = *(void *)(v0 + 536);
      uint64_t v26 = *(void *)(v0 + 520);
      uint64_t v27 = *(void *)(v0 + 512);
      uint64_t v24 = *(void *)(v0 + 448);
      uint64_t v25 = *(void *)(v0 + 480);
      uint64_t v10 = (uint64_t *)(*(void *)(v0 + 200) + *(void *)(v0 + 632));
      uint64_t v21 = *(void *)(v0 + 408);
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v13 = *v10;
      unint64_t v12 = v10[1];
      swift_bridgeObjectRetain();
      *(void *)(v0 + 128) = sub_1000DF238(v13, v12, &v37);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "%s response completed", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_1000A110C(v34, v35, v36);
      sub_10000792C(v22, v23);
      sub_1000A11B8(v21, type metadata accessor for NWAsyncConnection.Inbound.AsyncIterator);
      v29(v25, v24);
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v31, v27);
    }
    else
    {
      unint64_t v14 = *(void *)(v0 + 568);
      uint64_t v15 = *(void *)(v0 + 560);
      uint64_t v33 = *(void *)(v0 + 552);
      unint64_t v30 = *(void (**)(uint64_t, uint64_t))(v0 + 592);
      uint64_t v32 = *(void *)(v0 + 536);
      uint64_t v16 = *(void *)(v0 + 520);
      uint64_t v28 = *(void *)(v0 + 512);
      uint64_t v17 = *(void *)(v0 + 480);
      uint64_t v18 = *(void *)(v0 + 448);
      uint64_t v19 = *(void *)(v0 + 408);

      swift_release_n();
      sub_1000A110C(v34, v35, v36);
      sub_10000792C(v15, v14);
      sub_1000A11B8(v19, type metadata accessor for NWAsyncConnection.Inbound.AsyncIterator);
      v30(v17, v18);
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v32, v28);
    }
    sub_1000A11B8(v33, type metadata accessor for Proto_Ropes_HttpService_ConfigRequest);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
    return v20();
  }
  else
  {
    sub_1000A110C(*(void *)(v0 + 656), *(void *)(v0 + 664), *(void *)(v0 + 672));
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 648) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_10009CAB0;
    return NWAsyncConnection.Inbound.AsyncIterator.next()();
  }
}

uint64_t sub_10009E82C()
{
  sub_100094368(*(void *)(v0 + 240));
  return _swift_task_switch(sub_10009E898, 0, 0);
}

uint64_t sub_10009E898()
{
  uint64_t v38 = v0;
  uint64_t v1 = *(void *)(v0 + 280);
  sub_1000A11B8(*(void *)(v0 + 240), type metadata accessor for RateLimitConfiguration);
  sub_1000A11B8(v1, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
  uint64_t v2 = *(void *)(v0 + 728) + 1;
  if (v2 == *(void *)(v0 + 696))
  {
LABEL_2:
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(*(void *)(v0 + 200) + *(void *)(v0 + 640));
    *(void *)(v0 + 712) = v3;
    uint64_t v4 = sub_10009E13C;
  }
  else
  {
    uint64_t v33 = v0 + 56;
    while (1)
    {
      *(void *)(v0 + 728) = v2;
      uint64_t v8 = *(void *)(v0 + 368);
      uint64_t v9 = *(void *)(v0 + 352);
      uint64_t v10 = *(void *)(v0 + 360);
      unint64_t v12 = *(void **)(v0 + 272);
      uint64_t v11 = *(void *)(v0 + 280);
      uint64_t v13 = *(void *)(v0 + 232);
      uint64_t v34 = *(void *)(v0 + 376);
      uint64_t v35 = *(void *)(v0 + 224);
      unint64_t v14 = *(void **)(v0 + 216);
      uint64_t v15 = *(void *)(v0 + 200) + *(void *)(v0 + 576);
      sub_1000A1150(*(void *)(v0 + 688)+ ((*(unsigned __int8 *)(v0 + 744) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 744))+ *(void *)(v0 + 704) * v2, v11, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v8, v34, v9);
      sub_1000A1150(v11, (uint64_t)v12, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
      sub_100032890(v15, v33);
      sub_10002E48C(v8, v12, v33, v14);
      int v16 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48))(v14, 1, v35);
      uint64_t v17 = *(void *)(v0 + 216);
      uint64_t v18 = *(void *)(v0 + 200);
      if (v16 != 1) {
        break;
      }
      uint64_t v19 = *(void *)(v0 + 280);
      uint64_t v20 = *(void *)(v0 + 264);
      sub_100010360(v17, &qword_100209380);
      sub_1000A1150(v19, v20, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
      swift_retain();
      uint64_t v21 = sub_1001C0330();
      os_log_type_t v22 = sub_1001C11F0();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = *(void *)(v0 + 272);
        uint64_t v24 = *(void *)(v0 + 264);
        uint64_t v36 = *(void *)(v0 + 280);
        uint64_t v25 = (uint64_t *)(*(void *)(v0 + 200) + *(void *)(v0 + 632));
        uint64_t v26 = swift_slowAlloc();
        uint64_t v37 = swift_slowAlloc();
        *(_DWORD *)uint64_t v26 = 136315394;
        uint64_t v28 = *v25;
        unint64_t v27 = v25[1];
        swift_bridgeObjectRetain();
        *(void *)(v26 + 4) = sub_1000DF238(v28, v27, &v37);
        swift_bridgeObjectRelease();
        swift_release();
        *(_WORD *)(v26 + 12) = 2080;
        sub_1000A1150(v24, v23, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
        uint64_t v29 = sub_1001C0C40();
        *(void *)(v26 + 14) = sub_1000DF238(v29, v30, &v37);
        swift_bridgeObjectRelease();
        sub_1000A11B8(v24, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "%s unable to process rate limit configuration %s", (uint8_t *)v26, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v7 = v36;
      }
      else
      {
        uint64_t v5 = *(void *)(v0 + 280);
        uint64_t v6 = *(void *)(v0 + 264);
        swift_release();
        sub_1000A11B8(v6, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);

        uint64_t v7 = v5;
      }
      sub_1000A11B8(v7, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
      uint64_t v2 = *(void *)(v0 + 728) + 1;
      if (v2 == *(void *)(v0 + 696)) {
        goto LABEL_2;
      }
    }
    uint64_t v31 = *(void *)(v0 + 640);
    sub_1000A1218(v17, *(void *)(v0 + 240), type metadata accessor for RateLimitConfiguration);
    uint64_t v3 = *(void *)(v18 + v31);
    *(void *)(v0 + 736) = v3;
    uint64_t v4 = sub_10009E82C;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10009ECC0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_100003918(&qword_10020A628);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v40 = (uint64_t)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v39 - v9;
  uint64_t v11 = (int *)type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest(0);
  uint64_t v13 = __chkstk_darwin(v11, v12);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v13, v16);
  uint64_t v19 = (char *)&v39 - v18;
  uint64_t v20 = *a2;
  uint64_t v21 = (uint64_t *)((char *)a2 + *(void *)(*a2 + 184));
  uint64_t v22 = v21[1];
  if (v22)
  {
    uint64_t v39 = *v21;
    sub_10003282C(a1, (uint64_t)v10, &qword_10020A628);
    uint64_t v23 = type metadata accessor for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type(0);
    uint64_t v24 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v10, 1, v23) == 1)
    {
      swift_bridgeObjectRetain();
      sub_100010360((uint64_t)v10, &qword_10020A628);
      *(void *)uint64_t v19 = sub_100054910((uint64_t)&_swiftEmptyArrayStorage);
      *((void *)v19 + 1) = 0;
      char v19[16] = 1;
      _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
      uint64_t v25 = &v19[v11[7]];
      *(void *)uint64_t v25 = 0;
      *((void *)v25 + 1) = 0;
      uint64_t v26 = &v19[v11[8]];
      *(void *)uint64_t v26 = 0;
      *((void *)v26 + 1) = 0;
      unint64_t v27 = &v19[v11[9]];
      *(void *)unint64_t v27 = 0;
      *((void *)v27 + 1) = 0;
    }
    else
    {
      sub_1000A1218((uint64_t)v10, (uint64_t)v19, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest);
      swift_bridgeObjectRetain();
    }
    uint64_t v28 = &v19[v11[7]];
    swift_bridgeObjectRelease();
    *(void *)uint64_t v28 = v39;
    *((void *)v28 + 1) = v22;
    sub_100010360(a1, &qword_10020A628);
    sub_1000A1218((uint64_t)v19, a1, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest);
    uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(a1, 0, 1, v23);
    uint64_t v20 = *a2;
  }
  uint64_t v29 = (uint64_t *)((char *)a2 + *(void *)(v20 + 192));
  uint64_t v30 = v29[1];
  uint64_t v31 = v40;
  if (v30)
  {
    uint64_t v32 = *v29;
    sub_10003282C(a1, v40, &qword_10020A628);
    uint64_t v33 = type metadata accessor for Proto_Ropes_HttpService_ConfigRequest.OneOf_Type(0);
    uint64_t v34 = *(void *)(v33 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v31, 1, v33) == 1)
    {
      swift_bridgeObjectRetain();
      sub_100010360(v31, &qword_10020A628);
      *(void *)uint64_t v15 = sub_100054910((uint64_t)&_swiftEmptyArrayStorage);
      *((void *)v15 + 1) = 0;
      v15[16] = 1;
      _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
      uint64_t v35 = &v15[v11[7]];
      *(void *)uint64_t v35 = 0;
      *((void *)v35 + 1) = 0;
      uint64_t v36 = &v15[v11[8]];
      *(void *)uint64_t v36 = 0;
      *((void *)v36 + 1) = 0;
      uint64_t v37 = &v15[v11[9]];
      *(void *)uint64_t v37 = 0;
      *((void *)v37 + 1) = 0;
    }
    else
    {
      sub_1000A1218(v31, (uint64_t)v15, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest);
      swift_bridgeObjectRetain();
    }
    uint64_t v38 = &v15[v11[8]];
    swift_bridgeObjectRelease();
    *(void *)uint64_t v38 = v32;
    *((void *)v38 + 1) = v30;
    sub_100010360(a1, &qword_10020A628);
    sub_1000A1218((uint64_t)v15, a1, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigRequest);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v34 + 56))(a1, 0, 1, v33);
  }
  return result;
}

void *sub_10009F110(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v20 = a1;
  uint64_t v21 = a2;
  uint64_t v19 = sub_1001BF850();
  uint64_t v6 = *(void *)(v19 - 8);
  __chkstk_darwin(v19, v7);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = _swiftEmptyArrayStorage;
  if (v10)
  {
    uint64_t v22 = _swiftEmptyArrayStorage;
    sub_10018F268(0, v10, 0);
    uint64_t v11 = v22;
    uint64_t v12 = *(void *)(type metadata accessor for RateLimitConfiguration(0) - 8);
    uint64_t v13 = a3 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    uint64_t v18 = *(void *)(v12 + 72);
    v17[1] = v6 + 32;
    while (1)
    {
      v20(v13);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v22 = v11;
      unint64_t v15 = v11[2];
      unint64_t v14 = v11[3];
      if (v15 >= v14 >> 1)
      {
        sub_10018F268(v14 > 1, v15 + 1, 1);
        uint64_t v11 = v22;
      }
      _OWORD v11[2] = v15 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))((unint64_t)v11+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v15, v9, v19);
      v13 += v18;
      if (!--v10) {
        return v11;
      }
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_10009F31C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 264) = a4;
  *(void *)(v6 + 272) = v5;
  *(unsigned char *)(v6 + 384) = a5;
  *(void *)(v6 + 248) = a2;
  *(void *)(v6 + 256) = a3;
  *(void *)(v6 + 240) = a1;
  uint64_t v7 = sub_1001BF2C0();
  *(void *)(v6 + 280) = v7;
  *(void *)(v6 + 288) = *(void *)(v7 - 8);
  *(void *)(v6 + 296) = swift_task_alloc();
  uint64_t v8 = sub_1001BFB30();
  *(void *)(v6 + 304) = v8;
  *(void *)(v6 + 312) = *(void *)(v8 - 8);
  *(void *)(v6 + 320) = swift_task_alloc();
  sub_1001BF310();
  *(void *)(v6 + 328) = swift_task_alloc();
  return _swift_task_switch(sub_10009F470, 0, 0);
}

uint64_t sub_10009F470()
{
  if (*(unsigned char *)(v0 + 384) == 1)
  {
    uint64_t v2 = *(void *)(v0 + 320);
    uint64_t v1 = *(void *)(v0 + 328);
    uint64_t v3 = *(void *)(v0 + 312);
    uint64_t v4 = *(void *)(v0 + 264);
    uint64_t v5 = *(void *)(v0 + 272);
    uint64_t v6 = *(void *)(v0 + 248);
    uint64_t v24 = *(void *)(v0 + 256);
    uint64_t v22 = *(void *)(v0 + 304);
    uint64_t v23 = *(void *)(v0 + 240);
    uint64_t v7 = *(void *)(v5 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_rateLimiter);
    swift_retain();
    sub_1001BF300();
    uint64_t v8 = v5 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_config;
    uint64_t v9 = (_OWORD *)(v5 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo);
    long long v11 = *(_OWORD *)(v5 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo + 16);
    long long v10 = *(_OWORD *)(v5 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo + 32);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v5 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo);
    *(_OWORD *)(v0 + 32) = v11;
    *(_OWORD *)(v0 + 48) = v10;
    long long v12 = v9[6];
    long long v14 = v9[3];
    long long v13 = v9[4];
    *(_OWORD *)(v0 + 96) = v9[5];
    *(_OWORD *)(v0 + 112) = v12;
    *(_OWORD *)(v0 + 64) = v14;
    *(_OWORD *)(v0 + 80) = v13;
    long long v15 = v9[10];
    long long v17 = v9[7];
    long long v16 = v9[8];
    *(_OWORD *)(v0 + 160) = v9[9];
    *(_OWORD *)(v0 + 176) = v15;
    *(_OWORD *)(v0 + 128) = v17;
    *(_OWORD *)(v0 + 144) = v16;
    sub_100003918(&qword_10020C018);
    uint64_t v18 = swift_allocObject();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v8, v22);
    sub_100016110(v0 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    *(void *)(v0 + 336) = sub_1000A0A48(v7, v1, v2, (_OWORD *)(v0 + 16), v23, v6, v24, v4, v18);
    uint64_t v25 = (uint64_t (__cdecl *)())((char *)&dword_10020C020 + dword_10020C020);
    uint64_t v19 = (void *)swift_task_alloc();
    *(void *)(v0 + 344) = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_10009F6B4;
    return v25();
  }
  else
  {
    *(void *)(v0 + 360) = 0;
    uint64_t v21 = *(void *)(*(void *)(v0 + 272) + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_rateLimiter);
    *(void *)(v0 + 368) = v21;
    _s20privatecloudcomputed8LRUCacheC10addToCache3now5valueSb10Foundation4DateV_xtFfA__0();
    return _swift_task_switch(sub_10009F858, v21, 0);
  }
}

uint64_t sub_10009F6B4()
{
  *(void *)(*(void *)v1 + 352) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10009FB14;
  }
  else {
    uint64_t v2 = sub_10009F7C8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10009F7C8()
{
  swift_release();
  v0[45] = v0[44];
  uint64_t v1 = *(void *)(v0[34] + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_rateLimiter);
  v0[46] = v1;
  _s20privatecloudcomputed8LRUCacheC10addToCache3now5valueSb10Foundation4DateV_xtFfA__0();
  return _swift_task_switch(sub_10009F858, v1, 0);
}

uint64_t sub_10009F858()
{
  uint64_t v1 = v0[46];
  uint64_t v2 = v0[37];
  uint64_t v10 = v0[36];
  uint64_t v11 = v0[35];
  uint64_t v4 = v0[32];
  uint64_t v3 = v0[33];
  uint64_t v6 = v0[30];
  uint64_t v5 = v0[31];
  swift_beginAccess();
  uint64_t v7 = sub_100032154(v2, v6, v5, v4, v3);
  swift_endAccess();
  uint64_t v8 = swift_task_alloc();
  *(void *)(v8 + 16) = v1;
  *(void *)(v8 + 24) = v2;
  v0[47] = sub_10009F110((void (*)(uint64_t))sub_1000A021C, v8, (uint64_t)v7);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v2, v11);
  return _swift_task_switch(sub_10009F9A0, 0, 0);
}

uint64_t sub_10009F9A0()
{
  v0[28] = v0[47];
  sub_100003918(&qword_10020BFE8);
  sub_100016710(&qword_10020BFF0, &qword_10020BFE8);
  sub_1000A023C(&qword_10020BFF8, &qword_10020C000);
  sub_1000A023C(&qword_10020C008, &qword_10020C010);
  uint64_t v1 = sub_1001BFD00();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v4(v1, v3);
}

uint64_t sub_10009FB14()
{
  swift_release();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C11F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 232) = v5;
    sub_1001C1310();
    void *v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "failure to process TC2RateLimitRequest send, error=%@", v3, 0xCu);
    sub_100003918(&qword_100207DA8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();

    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void, unint64_t))(v0 + 8);
  return v6(0, 0xF000000000000000);
}

uint64_t sub_10009FD04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9, double a10)
{
  *(void *)(v11 + 136) = v10;
  *(double *)(v11 + 120) = a9;
  *(double *)(v11 + 128) = a10;
  *(double *)(v11 + 112) = a8;
  *(void *)(v11 + 96) = a6;
  *(void *)(v11 + 104) = a7;
  *(void *)(v11 + 80) = a4;
  *(void *)(v11 + 88) = a5;
  *(void *)(v11 + 64) = a2;
  *(void *)(v11 + 72) = a3;
  *(void *)(v11 + 56) = a1;
  *(void *)(v11 + 144) = type metadata accessor for RateLimitConfiguration(0);
  *(void *)(v11 + 152) = swift_task_alloc();
  sub_1001BF2C0();
  *(void *)(v11 + 160) = swift_task_alloc();
  type metadata accessor for RateLimitTimingDetails(0);
  *(void *)(v11 + 168) = swift_task_alloc();
  return _swift_task_switch(sub_10009FE08, 0, 0);
}

uint64_t sub_10009FE08()
{
  uint64_t v2 = v0[20];
  uint64_t v1 = v0[21];
  uint64_t v3 = (uint64_t *)v0[19];
  uint64_t v4 = v0[17];
  double v5 = *((double *)v0 + 16);
  double v6 = *((double *)v0 + 14);
  uint64_t v7 = v0[12];
  uint64_t v15 = v0[13];
  uint64_t v16 = v4;
  uint64_t v8 = v0[10];
  uint64_t v20 = v0[11];
  uint64_t v9 = v0[8];
  uint64_t v18 = v0[18];
  uint64_t v19 = v0[9];
  uint64_t v17 = v0[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s20privatecloudcomputed8LRUCacheC10addToCache3now5valueSb10Foundation4DateV_xtFfA__0();
  uint64_t v10 = v4 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_config;
  uint64_t v11 = sub_1001BFB30();
  v0[5] = v11;
  v0[6] = (uint64_t)&protocol witness table for TC2DefaultConfiguration;
  uint64_t v12 = sub_10000395C(v0 + 2);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v12, v10, v11);
  sub_10002FDA4(v2, v15, v0 + 2, v1, v6, v5);
  sub_1000A1150(v1, (uint64_t)v3 + *(int *)(v18 + 20), type metadata accessor for RateLimitTimingDetails);
  *uint64_t v3 = v17;
  v3[1] = v9;
  v3[2] = v19;
  _OWORD v3[3] = v8;
  v3[4] = v20;
  v3[5] = v7;
  v3[6] = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v13 = *(void *)(v16 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_rateLimiter);
  v0[22] = v13;
  return _swift_task_switch(sub_10009FFCC, v13, 0);
}

uint64_t sub_10009FFCC()
{
  sub_100094368(*(void *)(v0 + 152));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000A0068;
  return sub_100092DF4();
}

uint64_t sub_1000A0068()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1000A0164, 0, 0);
}

uint64_t sub_1000A0164()
{
  uint64_t v1 = v0[21];
  sub_1000A11B8(v0[19], type metadata accessor for RateLimitConfiguration);
  sub_1000A11B8(v1, type metadata accessor for RateLimitTimingDetails);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1000A021C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100097CF4(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1000A023C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000166C8(&qword_10020BFE8);
    sub_1000A1280(a2, (void (*)(uint64_t))&type metadata accessor for TrustedCloudComputeRateLimit);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A02D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  v6[9] = type metadata accessor for NWAsyncConnection.OHTTPStreamFactory(0);
  v6[10] = swift_task_alloc();
  v6[11] = swift_task_alloc();
  return _swift_task_switch(sub_1000A037C, 0, 0);
}

uint64_t sub_1000A037C()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = (void *)v0[11];
  uint64_t v3 = v0[9];
  double v5 = (void *)v0[5];
  uint64_t v4 = v0[6];
  uint64_t v6 = v0[4];
  sub_100003918(&qword_10020C058);
  uint64_t v7 = swift_allocObject();
  v0[12] = v7;
  swift_defaultActor_initialize();
  *(void *)(v7 + 112) = sub_1000546D8((uint64_t)_swiftEmptyArrayStorage);
  *(void *)(v7 + 120) = 0;
  *(unsigned char *)(v7 + 128) = -1;
  uint64_t v8 = (char *)v2 + *(int *)(v3 + 28);
  uint64_t v9 = sub_1001BF310();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v8, v4, v9);
  v2[1] = v6;
  v2[2] = v7;
  *uint64_t v2 = v5;
  sub_1000A1150((uint64_t)v2, v1, type metadata accessor for NWAsyncConnection.OHTTPStreamFactory);
  v0[2] = v1;
  swift_retain();
  swift_retain();
  id v10 = v5;
  uint64_t v11 = (void *)swift_task_alloc();
  v0[13] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_1000A0510;
  uint64_t v12 = v0[7];
  uint64_t v13 = v0[8];
  uint64_t v14 = v0[5];
  uint64_t v15 = v0[6];
  uint64_t v16 = v0[3];
  uint64_t v17 = v0[4];
  return sub_100197DB4(v16, v17, v14, v15, v7, (uint64_t)(v0 + 2), v12, v13);
}

uint64_t sub_1000A0510()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1000A06D4;
  }
  else
  {
    sub_1000A11B8(*(void *)(v2 + 80), type metadata accessor for NWAsyncConnection.OHTTPStreamFactory);
    uint64_t v3 = sub_1000A0640;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000A0640()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_release();
  sub_1000A11B8(v1, type metadata accessor for NWAsyncConnection.OHTTPStreamFactory);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1000A06D4()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[10];
  swift_release();
  sub_1000A11B8(v1, type metadata accessor for NWAsyncConnection.OHTTPStreamFactory);
  sub_1000A11B8(v2, type metadata accessor for NWAsyncConnection.OHTTPStreamFactory);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1000A0780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5)
{
  *(void *)(v5 + 16) = a3;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)a5 + *a5);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v5 + 24) = v9;
  *uint64_t v9 = v5;
  v9[1] = sub_1000A0884;
  return v11(a1, a2, v5 + 16, a4);
}

uint64_t sub_1000A0884()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1000A0978(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = *a3;
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_1000074CC;
  return sub_10009B438(a1, a2, v12, a4, a5, a6);
}

uint64_t sub_1000A0A48(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v39 = a7;
  uint64_t v40 = a8;
  uint64_t v38 = a6;
  uint64_t v15 = sub_1001BF8E0();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1001BFB30();
  uint64_t v44 = v20;
  uint64_t v45 = &protocol witness table for TC2DefaultConfiguration;
  uint64_t v21 = sub_10000395C((uint64_t *)&v43);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v21, a3, v20);
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v19, enum case for TC2LogCategory.rateLimitRequest(_:), v15);
  sub_1001BFDD0();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  uint64_t v22 = sub_1001BF310();
  sub_1000A1280(qword_100207DC0, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v41 = sub_1001C1780();
  uint64_t v42 = v23;
  v46._countAndFlagsBits = 58;
  v46._object = (void *)0xE100000000000000;
  sub_1001C0D00(v46);
  uint64_t v24 = v42;
  uint64_t v25 = (uint64_t *)(a9 + qword_100207A48);
  *uint64_t v25 = v41;
  v25[1] = v24;
  *(void *)(a9 + *(void *)(*(void *)a9 + 152)) = a1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(a9 + *(void *)(*(void *)a9 + 160), a2, v22);
  sub_10000E720(&v43, a9 + *(void *)(*(void *)a9 + 168));
  uint64_t v26 = (_OWORD *)(a9 + *(void *)(*(void *)a9 + 176));
  long long v27 = a4[1];
  *uint64_t v26 = *a4;
  v26[1] = v27;
  long long v28 = a4[5];
  unsigned char v26[4] = a4[4];
  v26[5] = v28;
  long long v29 = a4[3];
  void v26[2] = a4[2];
  v26[3] = v29;
  long long v30 = a4[10];
  long long v31 = a4[8];
  v26[9] = a4[9];
  v26[10] = v30;
  long long v32 = a4[7];
  v26[6] = a4[6];
  v26[7] = v32;
  v26[8] = v31;
  uint64_t v33 = (void *)(a9 + *(void *)(*(void *)a9 + 184));
  uint64_t v34 = v38;
  void *v33 = a5;
  v33[1] = v34;
  uint64_t v35 = (void *)(a9 + *(void *)(*(void *)a9 + 192));
  uint64_t v36 = v40;
  *uint64_t v35 = v39;
  v35[1] = v36;
  return a9;
}

uint64_t sub_1000A0D54()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 192, 7);
}

unint64_t sub_1000A0DDC()
{
  unint64_t result = qword_10020C380;
  if (!qword_10020C380)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10020C380);
  }
  return result;
}

uint64_t sub_1000A0E1C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v11 = *(void *)(v4 + 16);
  uint64_t v10 = *(void *)(v4 + 24);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v12;
  void *v12 = v5;
  v12[1] = sub_1000A12C8;
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t))((char *)&dword_10020C030
                                                                                       + dword_10020C030);
  return v13(a1, a2, a3, a4, v11, v10);
}

uint64_t sub_1000A0EFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *(int **)(v4 + 16);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_1000074CC;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, int *))((char *)&dword_10020C040 + dword_10020C040);
  return v12(a1, a2, a3, a4, v10);
}

uint64_t sub_1000A0FDC(uint64_t a1)
{
  return sub_10009ECC0(a1, v1);
}

uint64_t sub_1000A0FF8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  char v8 = *(unsigned char *)(v1 + 48);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1000A12C8;
  return sub_1001B88B4(a1, v4, v5, v6, v7, v8);
}

void sub_1000A10C0()
{
  sub_1001B9894(v0);
}

uint64_t sub_1000A10C8(uint64_t result, unint64_t a2, uint64_t a3)
{
  if (a3 != 1)
  {
    sub_10000D9E0(result, a2);
    return swift_retain();
  }
  return result;
}

uint64_t sub_1000A110C(uint64_t result, unint64_t a2, uint64_t a3)
{
  if (a3 != 1)
  {
    sub_100007918(result, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000A1150(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000A11B8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000A1218(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000A1280(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A12CC@<X0>(void *a1@<X1>, void *a2@<X2>, uint64_t a3@<X8>)
{
  unint64_t v59 = a1;
  uint64_t v49 = a3;
  uint64_t v4 = type metadata accessor for RequestLog.Element();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v60 = (uint64_t)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7, v9);
  uint64_t v12 = (char *)&v48 - v11;
  __chkstk_darwin(v10, v13);
  uint64_t v57 = (uint64_t)&v48 - v14;
  uint64_t v15 = sub_1001BF2C0();
  uint64_t v48 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v16);
  uint64_t v58 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001BF260();
  uint64_t v18 = a2[4];
  if (a2[2] >= a2[3] + v18) {
    uint64_t v19 = a2[3] + v18;
  }
  else {
    uint64_t v19 = a2[2];
  }
  int v61 = a2;
  uint64_t v62 = v18;
  uint64_t v63 = v19;
  uint64_t v50 = a2;
  swift_retain_n();
  uint64_t v53 = v5;
  uint64_t v54 = v4;
  uint64_t v52 = v15;
  while (v18 != v19)
  {
LABEL_11:
    uint64_t v62 = v18 + 1;
    unint64_t v20 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v56 = v61;
    uint64_t v21 = v57;
    sub_1000A2DF4((uint64_t)v61 + v20 + *(void *)(v5 + 72) * v18, v57);
    sub_1000A2E58(v21, (uint64_t)v12);
    sub_1000A6AE4(&qword_10020C540, (void (*)(uint64_t))&type metadata accessor for Date);
    char v22 = sub_1001C0BC0();
    sub_1000A2DF4((uint64_t)v12, v60);
    if (v22) {
      goto LABEL_6;
    }
    uint64_t v23 = *(void **)v60;
    uint64_t v25 = *(void *)(*(void *)v60 + 24);
    uint64_t v24 = *(void *)(*(void *)v60 + 32);
    unint64_t v26 = *(void *)(*(void *)v60 + 40);
    uint64_t v55 = *(void *)(*(void *)v60 + 48);
    uint64_t v28 = v23[7];
    uint64_t v27 = v23[8];
    uint64_t v29 = v59[1];
    if (v29)
    {
      BOOL v30 = *v59 == v23[2] && v29 == v25;
      if (!v30 && (sub_1001C1840() & 1) == 0) {
        goto LABEL_6;
      }
    }
    unint64_t v31 = v59[3];
    if (!v31 || ((uint64_t v32 = v59[2], v32 == v24) ? (v33 = v31 == v26) : (v33 = 0), v33))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v35 = v59;
    }
    else
    {
      char v34 = sub_1001C1840();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v35 = v59;
      if ((v34 & 1) == 0)
      {
        sub_10018C7C0(46, 0xE100000000000000, v24, v26);
        if (v36) {
          goto LABEL_5;
        }
        swift_bridgeObjectRetain();
        unint64_t v37 = sub_1001C0D50();
        unint64_t v39 = v38;
        uint64_t v51 = v40;
        uint64_t v42 = v41;
        swift_bridgeObjectRelease();
        char v43 = sub_10018FE0C(v32, v31, v37, v39, v51, v42);
        swift_bridgeObjectRelease();
        uint64_t v35 = v59;
        if ((v43 & 1) == 0) {
          goto LABEL_5;
        }
      }
    }
    uint64_t v44 = v35[5];
    if (v44 && (v35[4] != v55 || v44 != v28) && (sub_1001C1840() & 1) == 0)
    {
LABEL_5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v5 = v53;
      uint64_t v4 = v54;
      uint64_t v15 = v52;
LABEL_6:
      sub_1000A32E8(v60);
      goto LABEL_7;
    }
    char v45 = sub_10002F9EC(v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000A32E8(v60);
    uint64_t v5 = v53;
    uint64_t v4 = v54;
    uint64_t v15 = v52;
    if (v45)
    {
      swift_release();
      uint64_t v46 = v49;
      sub_1000A2E58((uint64_t)v12, v49);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v46, 0, 1, v4);
      goto LABEL_35;
    }
LABEL_7:
    sub_1000A32E8((uint64_t)v12);
    uint64_t v18 = v62;
    uint64_t v19 = v63;
  }
  if (sub_1000A3ADC())
  {
    uint64_t v18 = v62;
    goto LABEL_11;
  }
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v49, 1, 1, v4);
LABEL_35:
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v58, v15);
}

uint64_t sub_1000A17E8(void *a1, uint64_t a2)
{
  uint64_t v54 = a2;
  uint64_t v4 = sub_100003918(&qword_10020BF90);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v59 = (uint64_t)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for RequestLog.Element();
  uint64_t v7 = *(void *)(v58 - 8);
  uint64_t v9 = __chkstk_darwin(v58, v8);
  uint64_t v55 = (uint64_t *)((char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = __chkstk_darwin(v9, v11);
  uint64_t v14 = (char *)&v53 - v13;
  uint64_t v16 = __chkstk_darwin(v12, v15);
  uint64_t v60 = (uint64_t)&v53 - v17;
  __chkstk_darwin(v16, v18);
  uint64_t v53 = (uint64_t *)((char *)&v53 - v19);
  uint64_t v56 = v2;
  uint64_t v20 = *v2;
  uint64_t v21 = *(void *)(*v2 + 24);
  uint64_t v22 = *(void *)(*v2 + 32);
  uint64_t v23 = v21 + v22;
  if (*(void *)(v20 + 16) >= v23) {
    uint64_t v24 = v23;
  }
  else {
    uint64_t v24 = *(void *)(v20 + 16);
  }
  uint64_t v62 = v20;
  uint64_t v63 = v22;
  uint64_t v64 = v24;
  uint64_t v57 = swift_retain_n();
  uint64_t v61 = v57;
  while (1)
  {
    if (v22 == v24)
    {
      if ((sub_1000A3ADC() & 1) == 0)
      {
        swift_release();
        unint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
        uint64_t v38 = v59;
        uint64_t v39 = v59;
        uint64_t v40 = 1;
        goto LABEL_28;
      }
      uint64_t v22 = v63;
      uint64_t v61 = v62;
    }
    uint64_t v27 = v60;
    uint64_t v28 = v7;
    uint64_t v29 = v61
        + ((*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
        + *(void *)(v7 + 72) * v22++;
    uint64_t v63 = v22;
    sub_1000A2DF4(v29, v60);
    sub_1000A2E58(v27, (uint64_t)v14);
    uint64_t v31 = *(void *)(*(void *)v14 + 32);
    uint64_t v30 = *(void *)(*(void *)v14 + 40);
    uint64_t v33 = *(void *)(*(void *)v14 + 48);
    uint64_t v32 = *(void *)(*(void *)v14 + 56);
    BOOL v34 = *(void *)(*(void *)v14 + 16) == *a1 && *(void *)(*(void *)v14 + 24) == a1[1];
    if (v34 || (sub_1001C1840() & 1) != 0)
    {
      BOOL v35 = v31 == a1[2] && v30 == a1[3];
      if (v35 || (sub_1001C1840() & 1) != 0)
      {
        BOOL v36 = v33 == a1[4] && v32 == a1[5];
        if (v36 || (sub_1001C1840() & 1) != 0)
        {
          uint64_t v25 = a1[6];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v26 = swift_bridgeObjectRetain();
          LOBYTE(v25) = sub_10016839C(v26, v25);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v25) {
            break;
          }
        }
      }
    }
    sub_1000A32E8((uint64_t)v14);
    uint64_t v24 = v64;
    uint64_t v7 = v28;
  }
  swift_release();
  uint64_t v38 = v59;
  sub_1000A2E58((uint64_t)v14, v59);
  uint64_t v7 = v28;
  unint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
  uint64_t v39 = v38;
  uint64_t v40 = 0;
LABEL_28:
  uint64_t v41 = v58;
  v37(v39, v40, 1, v58);
  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v38, 1, v41) == 1)
  {
    sub_1000A61D4(v38);
    uint64_t v42 = v55;
    char v43 = (char *)v55 + *(int *)(v41 + 20);
    uint64_t v44 = sub_1001BF2C0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16))(v43, v54, v44);
    type metadata accessor for RequestLog.Element.Storage();
    uint64_t v45 = swift_allocObject();
    long long v46 = *((_OWORD *)a1 + 1);
    *(_OWORD *)(v45 + 16) = *(_OWORD *)a1;
    *(_OWORD *)(v45 + 32) = v46;
    *(_OWORD *)(v45 + 48) = *((_OWORD *)a1 + 2);
    *(void *)(v45 + 64) = a1[6];
    *uint64_t v42 = v45;
    sub_10009A130((uint64_t)a1);
    sub_1000A2EBC((uint64_t)v42);
    uint64_t v47 = v42;
  }
  else
  {
    uint64_t v47 = v53;
    sub_1000A2E58(v38, (uint64_t)v53);
    uint64_t v48 = *v47;
    uint64_t v49 = v55;
    uint64_t v50 = (char *)v55 + *(int *)(v41 + 20);
    uint64_t v51 = sub_1001BF2C0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16))(v50, v54, v51);
    *uint64_t v49 = v48;
    swift_retain();
    sub_1000A2EBC((uint64_t)v49);
    sub_1000A32E8((uint64_t)v49);
  }
  return sub_1000A32E8((uint64_t)v47);
}

uint64_t sub_1000A1C88()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RequestLog.Element.Storage()
{
  return self;
}

uint64_t sub_1000A1D14(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001C0CB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1001C0CB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1001C0CB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10018FB7C(a1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  type metadata accessor for RequestLog.Element();
  sub_1001BF2C0();
  sub_1000A6AE4(&qword_1002084E0, (void (*)(uint64_t))&type metadata accessor for Date);
  return sub_1001C0BB0();
}

Swift::Int sub_1000A1E7C()
{
  sub_1001C1950();
  uint64_t v1 = *(void *)(*(void *)v0 + 64);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001C0CB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1001C0CB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1001C0CB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10018FB7C((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  type metadata accessor for RequestLog.Element();
  sub_1001BF2C0();
  sub_1000A6AE4(&qword_1002084E0, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1001C0BB0();
  return sub_1001C1990();
}

uint64_t sub_1000A1FF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v34[1] = a3;
  uint64_t v3 = __chkstk_darwin(a1, a2);
  uint64_t v40 = (uint64_t)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3, v5);
  uint64_t v37 = (uint64_t)v34 - v7;
  uint64_t v38 = v6;
  uint64_t v8 = *(void **)v6;
  uint64_t v9 = *(void *)(*(void *)v6 + 16);
  uint64_t v10 = v8[3];
  uint64_t v11 = v8[4];
  uint64_t v12 = v8[5];
  uint64_t v14 = v8[6];
  uint64_t v13 = v8[7];
  uint64_t v15 = v8[8];
  uint64_t v39 = v16;
  uint64_t v17 = *(void *)(*(void *)v16 + 16);
  uint64_t v18 = *(void *)(*(void *)v16 + 24);
  uint64_t v19 = *(void *)(*(void *)v16 + 32);
  uint64_t v20 = *(void *)(*(void *)v16 + 40);
  uint64_t v22 = *(void *)(*(void *)v16 + 48);
  uint64_t v21 = *(void *)(*(void *)v16 + 56);
  uint64_t v23 = *(void *)(*(void *)v16 + 64);
  uint64_t v35 = v15;
  uint64_t v36 = v23;
  BOOL v24 = v9 == v17 && v10 == v18;
  if (!v24 && (sub_1001C1840() & 1) == 0
    || (v11 == v19 ? (BOOL v25 = v12 == v20) : (BOOL v25 = 0),
        !v25 && (sub_1001C1840() & 1) == 0
     || (v14 == v22 ? (BOOL v26 = v13 == v21) : (BOOL v26 = 0), !v26 && (sub_1001C1840() & 1) == 0)))
  {
    uint64_t v30 = v37;
    sub_1000A2DF4(v38, v37);
    uint64_t v31 = v40;
    sub_1000A2DF4(v39, v40);
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v27 = v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v28 = v36;
  swift_bridgeObjectRetain();
  char v29 = sub_10016839C(v27, v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v30 = v37;
  sub_1000A2DF4(v38, v37);
  uint64_t v31 = v40;
  sub_1000A2DF4(v39, v40);
  if ((v29 & 1) == 0)
  {
LABEL_19:
    char v32 = 0;
    goto LABEL_20;
  }
  char v32 = sub_1001BF290();
LABEL_20:
  sub_1000A32E8(v31);
  sub_1000A32E8(v30);
  return v32 & 1;
}

Swift::Int sub_1000A224C()
{
  sub_1001C1950();
  uint64_t v1 = *(void *)(*(void *)v0 + 64);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001C0CB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1001C0CB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1001C0CB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10018FB7C((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  sub_1001BF2C0();
  sub_1000A6AE4(&qword_1002084E0, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1001C0BB0();
  return sub_1001C1990();
}

uint64_t sub_1000A23C4()
{
  return sub_1001BF240();
}

BOOL sub_1000A23D4()
{
  return (sub_1001BF240() & 1) == 0;
}

BOOL sub_1000A2404()
{
  return (sub_1001BF240() & 1) == 0;
}

uint64_t sub_1000A2430()
{
  return sub_1001BF240();
}

uint64_t sub_1000A2444(void **a1, void **a2)
{
  return sub_1000A3458(*a2, *a1);
}

uint64_t sub_1000A2454()
{
  if (*v0) {
    return 0x617461646174656DLL;
  }
  else {
    return 6778732;
  }
}

uint64_t sub_1000A2488@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000A54C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000A24B0(uint64_t a1)
{
  unint64_t v2 = sub_1000A2DA0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000A24EC(uint64_t a1)
{
  unint64_t v2 = sub_1000A2DA0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000A2528()
{
  if (*v0) {
    return 0x6D617473656D6974;
  }
  else {
    return 0x617461646174656DLL;
  }
}

uint64_t sub_1000A2574@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000A55A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000A259C(uint64_t a1)
{
  unint64_t v2 = sub_1000A3344();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000A25D8(uint64_t a1)
{
  unint64_t v2 = sub_1000A3344();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000A2614(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100003918(&qword_10020C138);
  uint64_t v71 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v7);
  os_log_type_t v68 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = type metadata accessor for RequestLog.Element();
  uint64_t v70 = *(void *)(v66 - 8);
  uint64_t v10 = __chkstk_darwin(v66, v9);
  uint64_t v65 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v12);
  uint64_t v69 = (uint64_t)&v60 - v13;
  uint64_t v14 = sub_100003918(&qword_10020C140);
  uint64_t v62 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D934(a1, a1[3]);
  sub_1000A2DA0();
  sub_1001C19C0();
  LOBYTE(v72) = 0;
  sub_1001C16B0();
  LOBYTE(v72) = 1;
  uint64_t v63 = v14;
  uint64_t v61 = v17;
  uint64_t v18 = (uint64_t)v65;
  sub_1001C16B0();
  unint64_t v90 = sub_100055A94((uint64_t)&_swiftEmptyArrayStorage);
  uint64_t v19 = a2[4];
  if (a2[2] >= a2[3] + v19) {
    uint64_t v20 = a2[3] + v19;
  }
  else {
    uint64_t v20 = a2[2];
  }
  uint64_t v79 = a2;
  uint64_t v80 = v19;
  uint64_t v81 = v20;
  uint64_t v67 = (void (**)(char *, uint64_t))(v71 + 8);
  swift_retain();
  uint64_t v64 = v6;
  if (v19 == v20)
  {
LABEL_5:
    if (sub_1000A3ADC())
    {
      uint64_t v19 = v80;
      goto LABEL_7;
    }
LABEL_29:
    swift_release();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v61, v63);
    swift_bridgeObjectRelease();
    sub_100003E90((uint64_t)v82);
    return sub_100003E90((uint64_t)v83);
  }
  while (1)
  {
LABEL_7:
    uint64_t v71 = v3;
    uint64_t v80 = v19 + 1;
    uint64_t v21 = v69;
    sub_1000A2DF4((uint64_t)v79+ ((*(unsigned __int8 *)(v70 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80))+ *(void *)(v70 + 72) * v19, v69);
    sub_1000A2E58(v21, v18);
    uint64_t v22 = *(void **)v18;
    long long v23 = *(_OWORD *)(*(void *)v18 + 16);
    long long v24 = *(_OWORD *)(*(void *)v18 + 32);
    long long v25 = *(_OWORD *)(*(void *)v18 + 48);
    uint64_t v89 = *(void *)(*(void *)v18 + 64);
    v88[1] = v24;
    v88[2] = v25;
    v88[0] = v23;
    if (*(void *)(v90 + 16))
    {
      sub_10009A130((uint64_t)v88);
      sub_100169FB8((uint64_t *)v88);
      if (v26)
      {
        sub_10009A184((uint64_t)v88);
        uint64_t v3 = v71;
        uint64_t v27 = v68;
        goto LABEL_23;
      }
      sub_10009A184((uint64_t)v88);
    }
    uint64_t v28 = v22[3];
    uint64_t v29 = v22[4];
    uint64_t v30 = v22[5];
    uint64_t v31 = v22[6];
    uint64_t v32 = v22[7];
    uint64_t v33 = v22[8];
    unint64_t v72 = (void *)v22[2];
    uint64_t v73 = v28;
    uint64_t v74 = v29;
    uint64_t v75 = v30;
    uint64_t v76 = v31;
    uint64_t v77 = v32;
    uint64_t v78 = v33;
    sub_1000A3244((uint64_t)v82, v82[3]);
    sub_1000A3294();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v34 = v71;
    sub_1001C1800();
    uint64_t v3 = v34;
    if (v34)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v58 = (uint64_t)v65;
      goto LABEL_28;
    }
    uint64_t v35 = v22 + 2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v36 = v90;
    uint64_t v37 = *(void *)(v90 + 16);
    long long v39 = *(_OWORD *)v35;
    long long v38 = *((_OWORD *)v35 + 1);
    long long v40 = *((_OWORD *)v35 + 2);
    uint64_t v87 = v35[6];
    long long v85 = v38;
    long long v86 = v40;
    long long v84 = v39;
    sub_10009A130((uint64_t)&v84);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v72 = (void *)v36;
    unint64_t v43 = sub_100169FB8((uint64_t *)&v84);
    uint64_t v44 = *(void *)(v36 + 16);
    BOOL v45 = (v42 & 1) == 0;
    uint64_t v46 = v44 + v45;
    uint64_t v18 = (uint64_t)v65;
    if (__OFADD__(v44, v45)) {
      break;
    }
    char v47 = v42;
    if (*(void *)(v36 + 24) >= v46)
    {
      uint64_t v27 = v68;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1000ED990();
      }
    }
    else
    {
      sub_1000E94A4(v46, isUniquelyReferenced_nonNull_native);
      unint64_t v48 = sub_100169FB8((uint64_t *)&v84);
      uint64_t v27 = v68;
      if ((v47 & 1) != (v49 & 1)) {
        goto LABEL_32;
      }
      unint64_t v43 = v48;
    }
    uint64_t v6 = v64;
    uint64_t v50 = v72;
    if (v47)
    {
      *(void *)(v72[7] + 8 * v43) = v37;
    }
    else
    {
      v72[(v43 >> 6) + 8] |= 1 << v43;
      uint64_t v51 = v50[6] + 56 * v43;
      long long v52 = v84;
      long long v53 = v85;
      long long v54 = v86;
      *(void *)(v51 + 48) = v87;
      *(_OWORD *)(v51 + 16) = v53;
      *(_OWORD *)(v51 + 32) = v54;
      *(_OWORD *)uint64_t v51 = v52;
      *(void *)(v50[7] + 8 * v43) = v37;
      uint64_t v55 = v50[2];
      BOOL v56 = __OFADD__(v55, 1);
      uint64_t v57 = v55 + 1;
      if (v56) {
        goto LABEL_31;
      }
      v50[2] = v57;
      sub_10009A130((uint64_t)&v84);
    }
    unint64_t v90 = (unint64_t)v50;
    swift_bridgeObjectRelease();
    sub_10009A184((uint64_t)&v84);
LABEL_23:
    sub_1000A3244((uint64_t)v83, v83[3]);
    sub_1000A3344();
    sub_1001C17F0();
    LOBYTE(v72) = 0;
    sub_1001C1720();
    if (v3)
    {
      (*v67)(v27, v6);
      uint64_t v58 = v18;
LABEL_28:
      sub_1000A32E8(v58);
      goto LABEL_29;
    }
    LOBYTE(v72) = 1;
    sub_1001BF2C0();
    sub_1000A6AE4(qword_1002084E8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1001C1740();
    (*v67)(v27, v6);
    sub_1000A32E8(v18);
    uint64_t v19 = v80;
    if (v80 == v81) {
      goto LABEL_5;
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  uint64_t result = sub_1001C18C0();
  __break(1u);
  return result;
}

uint64_t sub_1000A2D0C(void *a1)
{
  return sub_1000A2614(a1, *v1);
}

uint64_t sub_1000A2D28@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1000A56C8(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t type metadata accessor for RequestLog.Element()
{
  uint64_t result = qword_10020C1F8;
  if (!qword_10020C1F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1000A2DA0()
{
  unint64_t result = qword_10020C148;
  if (!qword_10020C148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020C148);
  }
  return result;
}

uint64_t sub_1000A2DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RequestLog.Element();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000A2E58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RequestLog.Element();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_1000A2EBC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for RequestLog.Element();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = &v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_100003918(&qword_10020BF90);
  unint64_t result = (void *)__chkstk_darwin(v8 - 8, v9);
  uint64_t v12 = &v22[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = *v1;
  uint64_t v14 = *(void *)(*v1 + 24);
  if (v14)
  {
    uint64_t v15 = v14 - 1;
    if (__OFSUB__(v14, 1))
    {
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
    if (v15 < 0)
    {
LABEL_16:
      __break(1u);
      goto LABEL_17;
    }
    if (v15 >= v14)
    {
LABEL_17:
      __break(1u);
      return result;
    }
    uint64_t v16 = *(void *)(v13 + 32) + v15;
    uint64_t v17 = *(void *)(v13 + 16);
    if (v16 < v17) {
      uint64_t v17 = 0;
    }
    sub_1000A2DF4(v13+ ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ (v16 - v17) * *(void *)(v4 + 72), (uint64_t)v7);
    sub_1000A2E58((uint64_t)v7, (uint64_t)v12);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v4 + 56))(v12, 0, 1, v3);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v12, 1, 1, v3);
  }
  sub_1000A61D4((uint64_t)v12);
  unint64_t result = (void *)*v1;
  uint64_t v18 = *(void *)(*v1 + 24);
  Swift::Int v19 = v18 + 1;
  if (__OFADD__(v18, 1))
  {
    __break(1u);
    goto LABEL_15;
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v1;
  if (*(void *)(*v1 + 16) < v19 || (isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_1000A4018(v19, 0, (uint64_t (*)(void))type metadata accessor for RequestLog.Element, &qword_10020C178, (uint64_t (*)(void))type metadata accessor for RequestLog.Element);
    uint64_t v21 = *v1;
  }
  return sub_1000A430C((void *)(v21 + 16), v21 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)), a1);
}

uint64_t sub_1000A30E0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001BF2C0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RequestLog.Element();
  sub_1001BF260();
  int v11 = sub_1001BF240();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  uint64_t v12 = *a1;
  long long v13 = *(_OWORD *)(*a1 + 16);
  long long v14 = *(_OWORD *)(*a1 + 48);
  v16[1] = *(_OWORD *)(*a1 + 32);
  void v16[2] = v14;
  uint64_t v17 = *(void *)(v12 + 64);
  v16[0] = v13;
  sub_10009A130((uint64_t)v16);
  LODWORD(a3) = sub_100031B70(a2, (uint64_t)v16, a3);
  sub_10009A184((uint64_t)v16);
  return v11 & ~a3 & 1;
}

uint64_t sub_1000A3244(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

unint64_t sub_1000A3294()
{
  unint64_t result = qword_10020C150;
  if (!qword_10020C150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020C150);
  }
  return result;
}

uint64_t sub_1000A32E8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RequestLog.Element();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1000A3344()
{
  unint64_t result = qword_10020C158;
  if (!qword_10020C158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020C158);
  }
  return result;
}

uint64_t sub_1000A3398(uint64_t a1)
{
  unint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v3;
  if ((result & 1) == 0
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0
    || a1 > *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
  {
    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_1001C1590();
      swift_bridgeObjectRelease();
    }
    uint64_t result = sub_1001C1450();
    *uint64_t v1 = result;
  }
  return result;
}

uint64_t sub_1000A3458(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for RequestLog.Element();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v7, v10);
  long long v13 = (char *)&v69 - v12;
  uint64_t v15 = __chkstk_darwin(v11, v14);
  uint64_t v17 = (char *)&v69 - v16;
  __chkstk_darwin(v15, v18);
  uint64_t v20 = (char *)&v69 - v19;
  uint64_t v78 = sub_100003918(&qword_10020C268);
  __chkstk_darwin(v78, v21);
  long long v23 = (char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100003918(&qword_10020BF90);
  uint64_t v26 = __chkstk_darwin(v24 - 8, v25);
  uint64_t v28 = (char *)&v69 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26, v29);
  uint64_t v82 = (uint64_t)&v69 - v30;
  uint64_t v31 = a2[4];
  uint64_t v32 = a2[3] + v31;
  if (a2[2] < v32) {
    uint64_t v32 = a2[2];
  }
  uint64_t v87 = a2;
  uint64_t v88 = v31;
  uint64_t v89 = v32;
  uint64_t v33 = a1[4];
  uint64_t v34 = a1[3] + v33;
  if (a1[2] < v34) {
    uint64_t v34 = a1[2];
  }
  long long v84 = a1;
  uint64_t v85 = v33;
  uint64_t v86 = v34;
  uint64_t v81 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v79 = v5;
  uint64_t v77 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  swift_retain();
  swift_retain();
  uint64_t v72 = v4;
  uint64_t v73 = v20;
  uint64_t v75 = v13;
  uint64_t v76 = v9;
  uint64_t v74 = v17;
  uint64_t v70 = v28;
  uint64_t v71 = v23;
  while (1)
  {
    uint64_t v35 = v88;
    if (v88 != v89) {
      goto LABEL_9;
    }
    if (sub_1000A3ADC())
    {
      uint64_t v35 = v88;
LABEL_9:
      uint64_t v88 = v35 + 1;
      uint64_t v36 = v79;
      uint64_t v37 = v82;
      sub_1000A2DF4((uint64_t)v87+ ((*(unsigned __int8 *)(v79 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80))+ *(void *)(v79 + 72) * v35, v82);
      long long v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56);
      v38(v37, 0, 1, v4);
      goto LABEL_11;
    }
    long long v38 = *v81;
    (*v81)(v82, 1, 1, v4);
LABEL_11:
    uint64_t v39 = v85;
    if (v85 != v86) {
      goto LABEL_14;
    }
    if (sub_1000A3ADC())
    {
      uint64_t v39 = v85;
LABEL_14:
      uint64_t v85 = v39 + 1;
      sub_1000A2DF4((uint64_t)v84+ ((*(unsigned __int8 *)(v79 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80))+ *(void *)(v79 + 72) * v39, (uint64_t)v28);
      uint64_t v40 = 0;
      goto LABEL_16;
    }
    uint64_t v40 = 1;
LABEL_16:
    v38((uint64_t)v28, v40, 1, v4);
    uint64_t v41 = (uint64_t)&v23[*(int *)(v78 + 48)];
    sub_1000A6B2C(v82, (uint64_t)v23);
    sub_1000A6B2C((uint64_t)v28, v41);
    char v42 = *v77;
    if ((*v77)(v23, 1, v4) == 1) {
      break;
    }
    if (v42((char *)v41, 1, v4) == 1)
    {
      swift_release();
      swift_release();
      sub_1000A32E8((uint64_t)v23);
      return 0;
    }
    sub_1000A2E58((uint64_t)v23, (uint64_t)v20);
    sub_1000A2E58(v41, (uint64_t)v17);
    uint64_t v43 = *(void *)v20;
    uint64_t v44 = *(void *)(*(void *)v20 + 16);
    uint64_t v45 = *(void *)(*(void *)v20 + 24);
    uint64_t v46 = *(void *)(*(void *)v20 + 32);
    uint64_t v47 = *(void *)(*(void *)v20 + 40);
    uint64_t v48 = *(void *)(*(void *)v20 + 48);
    uint64_t v49 = *(void *)(*(void *)v20 + 56);
    uint64_t v50 = *(void *)(v43 + 64);
    uint64_t v51 = *(void **)v17;
    uint64_t v52 = *(void *)(*(void *)v17 + 16);
    uint64_t v83 = *(void *)(*(void *)v17 + 24);
    uint64_t v54 = v51[4];
    uint64_t v53 = v51[5];
    uint64_t v55 = v51[6];
    uint64_t v56 = v51[7];
    uint64_t v80 = v51[8];
    if (v44 != v52 || v45 != v83)
    {
      uint64_t v57 = v53;
      uint64_t v58 = v48;
      char v59 = sub_1001C1840();
      uint64_t v48 = v58;
      uint64_t v53 = v57;
      if ((v59 & 1) == 0) {
        goto LABEL_30;
      }
    }
    if ((v46 != v54 || v47 != v53) && (v60 = v48, v61 = sub_1001C1840(), uint64_t v48 = v60, (v61 & 1) == 0)
      || (v48 != v55 || v49 != v56) && (sub_1001C1840() & 1) == 0)
    {
LABEL_30:
      uint64_t v20 = v73;
      uint64_t v64 = (uint64_t)v75;
      sub_1000A2DF4((uint64_t)v73, (uint64_t)v75);
      uint64_t v17 = v74;
      uint64_t v65 = (uint64_t)v76;
      sub_1000A2DF4((uint64_t)v74, (uint64_t)v76);
LABEL_31:
      sub_1000A32E8(v65);
      sub_1000A32E8(v64);
      sub_1000A32E8((uint64_t)v17);
      sub_1000A32E8((uint64_t)v20);
LABEL_32:
      swift_release();
      swift_release();
      return 0;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v62 = v80;
    swift_bridgeObjectRetain();
    char v63 = sub_10016839C(v50, v62);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v20 = v73;
    uint64_t v64 = (uint64_t)v75;
    sub_1000A2DF4((uint64_t)v73, (uint64_t)v75);
    uint64_t v17 = v74;
    uint64_t v65 = (uint64_t)v76;
    sub_1000A2DF4((uint64_t)v74, (uint64_t)v76);
    if ((v63 & 1) == 0) {
      goto LABEL_31;
    }
    uint64_t v4 = v72;
    char v66 = sub_1001BF290();
    sub_1000A32E8(v65);
    sub_1000A32E8(v64);
    sub_1000A32E8((uint64_t)v17);
    sub_1000A32E8((uint64_t)v20);
    uint64_t v28 = v70;
    long long v23 = v71;
    if ((v66 & 1) == 0) {
      goto LABEL_32;
    }
  }
  swift_release();
  swift_release();
  uint64_t v67 = 1;
  if (v42((char *)v41, 1, v4) == 1) {
    return v67;
  }
  sub_1000A61D4(v41);
  return 0;
}

uint64_t sub_1000A3ADC()
{
  uint64_t v1 = *v0;
  uint64_t v3 = *(void *)(*v0 + 24);
  uint64_t v2 = *(void *)(*v0 + 32);
  BOOL v6 = __OFADD__(v2, v3);
  uint64_t v4 = v2 + v3;
  if (v6)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v3 < 0)
  {
LABEL_7:
    if ((v4 & 0x8000000000000000) == 0) {
      goto LABEL_9;
    }
    uint64_t v7 = *(void *)(v1 + 16);
    BOOL v6 = __OFADD__(v4, v7);
    v4 += v7;
    if (!v6) {
      goto LABEL_9;
    }
LABEL_14:
    __break(1u);
    return result;
  }
  uint64_t v5 = *(void *)(v1 + 16);
  BOOL v6 = __OFSUB__(v4, v5);
  uint64_t v1 = v4 - v5;
  if (v1 < 0 == v6)
  {
    uint64_t v4 = v1;
    if (v6)
    {
      __break(1u);
      goto LABEL_7;
    }
  }
LABEL_9:
  if (!v4 || v4 == v0[1]) {
    return 0;
  }
  v0[1] = 0;
  v0[2] = v4;
  return 1;
}

size_t sub_1000A3B44(Swift::Int a1, char a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = (Swift::Int *)(*v2 + 16);
  Swift::Int v5 = *v4;
  if (*v4 >= a1)
  {
    uint64_t v19 = *(unsigned __int8 *)(*(void *)(sub_100003918(&qword_10020C180) - 8) + 80);
    sub_100003918(&qword_10020C190);
    uint64_t v16 = swift_allocObject();
    long long v20 = *(_OWORD *)(v3 + 24);
    *(void *)(v16 + 16) = v5;
    *(_OWORD *)(v16 + 24) = v20;
    if ((uint64_t)v20 >= 1) {
      sub_1000A5184(v16 + 16, v16 + ((v19 + 40) & ~v19), v4, v3 + ((v19 + 40) & ~v19));
    }
    goto LABEL_19;
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v2;
  uint64_t v10 = sub_100003918(&qword_10020C180);
  sub_1001BF610(a1, a2 & 1);
  if (isUniquelyReferenced_nonNull_native)
  {
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
    uint64_t v13 = *(void *)(v9 + 24);
    sub_100003918(&qword_10020C190);
    uint64_t v14 = *(void *)(v11 + 72);
    uint64_t v15 = (v12 + 40) & ~v12;
    uint64_t v16 = swift_allocObject();
    size_t result = j__malloc_size((const void *)v16);
    if (v14)
    {
      if (result - v15 != 0x8000000000000000 || v14 != -1)
      {
        *(void *)(v16 + 16) = (uint64_t)(result - v15) / v14;
        *(void *)(v16 + 24) = v13;
        *(void *)(v16 + 32) = 0;
        if (v13 >= 1)
        {
          swift_retain();
          sub_1000A45E4(v16 + 16, v16 + v15, (void *)(v9 + 16), v9 + v15);
          *(void *)(v9 + 24) = 0;
          swift_release();
        }
LABEL_19:
        size_t result = swift_release();
        *uint64_t v2 = v16;
        return result;
      }
      goto LABEL_22;
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v21 = *(void *)(v10 - 8);
  uint64_t v22 = *(unsigned __int8 *)(v21 + 80);
  sub_100003918(&qword_10020C190);
  uint64_t v23 = *(void *)(v21 + 72);
  uint64_t v24 = (v22 + 40) & ~v22;
  uint64_t v16 = swift_allocObject();
  size_t result = j__malloc_size((const void *)v16);
  if (!v23) {
    goto LABEL_21;
  }
  if (result - v24 != 0x8000000000000000 || v23 != -1)
  {
    uint64_t v26 = *(void *)(v9 + 24);
    *(void *)(v16 + 16) = (uint64_t)(result - v24) / v23;
    *(void *)(v16 + 24) = v26;
    *(void *)(v16 + 32) = 0;
    if (v26 >= 1) {
      sub_1000A4A9C(v16 + 16, v16 + v24, (void *)(v9 + 16), v9 + v24);
    }
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1000A3E24(Swift::Int a1, char a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = (Swift::Int *)(*v2 + 16);
  Swift::Int v5 = *v4;
  if (*v4 >= a1)
  {
    sub_100003918(&qword_10020C188);
    uint64_t v11 = swift_allocObject();
    long long v14 = *(_OWORD *)(v3 + 24);
    *(void *)(v11 + 16) = v5;
    *(_OWORD *)(v11 + 24) = v14;
    if ((uint64_t)v14 >= 1) {
      sub_1000A5368(v11 + 16, v11 + 40, v4, v3 + 40);
    }
  }
  else
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v2;
    sub_1001BF610(a1, a2 & 1);
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v10 = *(void *)(v9 + 24);
      sub_100003918(&qword_10020C188);
      uint64_t v11 = swift_allocObject();
      int64_t v12 = j__malloc_size((const void *)v11);
      uint64_t v13 = v12 - 40;
      if (v12 < 40) {
        uint64_t v13 = v12 - 25;
      }
      *(void *)(v11 + 16) = v13 >> 4;
      *(void *)(v11 + 24) = v10;
      *(void *)(v11 + 32) = 0;
      if (v10 >= 1)
      {
        swift_retain();
        sub_1000A47CC(v11 + 16, (char *)(v11 + 40), (void *)(v9 + 16), (char *)(v9 + 40));
        *(void *)(v9 + 24) = 0;
        swift_release();
      }
    }
    else
    {
      sub_100003918(&qword_10020C188);
      uint64_t v11 = swift_allocObject();
      int64_t v15 = j__malloc_size((const void *)v11);
      uint64_t v16 = v15 - 40;
      if (v15 < 40) {
        uint64_t v16 = v15 - 25;
      }
      uint64_t v17 = *(void *)(v9 + 24);
      *(void *)(v11 + 16) = v16 >> 4;
      *(void *)(v11 + 24) = v17;
      *(void *)(v11 + 32) = 0;
      if (v17 >= 1) {
        sub_1000A4C84(v11 + 16, v11 + 40, (void *)(v9 + 16), v9 + 40);
      }
    }
  }
  uint64_t result = swift_release();
  *uint64_t v2 = v11;
  return result;
}

size_t sub_1000A3FF4(Swift::Int a1, char a2)
{
  return sub_1000A4018(a1, a2, (uint64_t (*)(void))&type metadata accessor for TC2TrustedRequestMetadata, &qword_10020C198, (uint64_t (*)(void))&type metadata accessor for TC2TrustedRequestMetadata);
}

size_t sub_1000A4018(Swift::Int a1, char a2, uint64_t (*a3)(void), uint64_t *a4, uint64_t (*a5)(void))
{
  uint64_t v9 = *v5;
  uint64_t v10 = (Swift::Int *)(*v5 + 16);
  Swift::Int v11 = *v10;
  if (*v10 >= a1)
  {
    uint64_t v25 = *(unsigned __int8 *)(*(void *)(a3(0) - 8) + 80);
    sub_100003918(a4);
    uint64_t v22 = swift_allocObject();
    long long v26 = *(_OWORD *)(v9 + 24);
    *(void *)(v22 + 16) = v11;
    *(_OWORD *)(v22 + 24) = v26;
    if ((uint64_t)v26 >= 1) {
      sub_1000A4FEC(v22 + 16, v22 + ((v25 + 40) & ~v25), v10, v9 + ((v25 + 40) & ~v25), a5);
    }
    goto LABEL_19;
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = *v5;
  uint64_t v16 = a3(0);
  sub_1001BF610(a1, a2 & 1);
  if (isUniquelyReferenced_nonNull_native)
  {
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(unsigned __int8 *)(v17 + 80);
    uint64_t v19 = *(void *)(v15 + 24);
    sub_100003918(a4);
    uint64_t v20 = *(void *)(v17 + 72);
    uint64_t v21 = (v18 + 40) & ~v18;
    uint64_t v22 = swift_allocObject();
    size_t result = j__malloc_size((const void *)v22);
    if (v20)
    {
      if (result - v21 != 0x8000000000000000 || v20 != -1)
      {
        *(void *)(v22 + 16) = (uint64_t)(result - v21) / v20;
        *(void *)(v22 + 24) = v19;
        *(void *)(v22 + 32) = 0;
        if (v19 >= 1)
        {
          swift_retain();
          sub_1000A48FC(v22 + 16, v22 + v21, (void *)(v15 + 16), v15 + v21, a5);
          *(void *)(v15 + 24) = 0;
          swift_release();
        }
LABEL_19:
        size_t result = swift_release();
        *Swift::Int v5 = v22;
        return result;
      }
      goto LABEL_22;
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v27 = *(void *)(v16 - 8);
  uint64_t v28 = *(unsigned __int8 *)(v27 + 80);
  sub_100003918(a4);
  uint64_t v29 = *(void *)(v27 + 72);
  uint64_t v30 = (v28 + 40) & ~v28;
  uint64_t v22 = swift_allocObject();
  size_t result = j__malloc_size((const void *)v22);
  if (!v29) {
    goto LABEL_21;
  }
  if (result - v30 != 0x8000000000000000 || v29 != -1)
  {
    uint64_t v32 = *(void *)(v15 + 24);
    *(void *)(v22 + 16) = (uint64_t)(result - v30) / v29;
    *(void *)(v22 + 24) = v32;
    *(void *)(v22 + 32) = 0;
    if (v32 >= 1) {
      sub_1000A4DEC(v22 + 16, v22 + v30, (void *)(v15 + 16), v15 + v30, a5);
    }
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
  return result;
}

void *sub_1000A430C(void *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = result[1];
  uint64_t v4 = result[2];
  uint64_t v5 = v4 + v3;
  if (!__OFADD__(v4, v3))
  {
    uint64_t v8 = result;
    if ((v3 & 0x8000000000000000) == 0)
    {
      BOOL v9 = __OFSUB__(v5, *result);
      if (v5 < *result || (v5 -= *result, !v9))
      {
LABEL_9:
        uint64_t v10 = type metadata accessor for RequestLog.Element();
        size_t result = (void *)sub_1000A2DF4(a3, a2 + *(void *)(*(void *)(v10 - 8) + 72) * v5);
        uint64_t v11 = v8[1];
        BOOL v9 = __OFADD__(v11, 1);
        uint64_t v12 = v11 + 1;
        if (!v9)
        {
          v8[1] = v12;
          return result;
        }
        goto LABEL_12;
      }
      __break(1u);
    }
    if (v5 < 0)
    {
      BOOL v9 = __OFADD__(v5, *result);
      v5 += *result;
      if (v9) {
        goto LABEL_13;
      }
    }
    goto LABEL_9;
  }
  __break(1u);
LABEL_12:
  __break(1u);
LABEL_13:
  __break(1u);
  return result;
}

void *sub_1000A43C8(void *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = result[1];
  uint64_t v4 = result[2];
  uint64_t v5 = v4 + v3;
  if (!__OFADD__(v4, v3))
  {
    uint64_t v8 = result;
    if ((v3 & 0x8000000000000000) == 0)
    {
      BOOL v9 = __OFSUB__(v5, *result);
      if (v5 < *result || (v5 -= *result, !v9))
      {
LABEL_9:
        uint64_t v10 = sub_100003918(&qword_10020C180);
        size_t result = (void *)sub_1000A616C(a3, a2 + *(void *)(*(void *)(v10 - 8) + 72) * v5);
        uint64_t v11 = v8[1];
        BOOL v9 = __OFADD__(v11, 1);
        uint64_t v12 = v11 + 1;
        if (!v9)
        {
          v8[1] = v12;
          return result;
        }
        goto LABEL_12;
      }
      __break(1u);
    }
    if (v5 < 0)
    {
      BOOL v9 = __OFADD__(v5, *result);
      v5 += *result;
      if (v9) {
        goto LABEL_13;
      }
    }
    goto LABEL_9;
  }
  __break(1u);
LABEL_12:
  __break(1u);
LABEL_13:
  __break(1u);
  return result;
}

void *sub_1000A4488(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = result[1];
  uint64_t v5 = result[2];
  BOOL v7 = __OFADD__(v5, v4);
  uint64_t v6 = v5 + v4;
  if (!v7)
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      BOOL v7 = __OFSUB__(v6, *result);
      if (v6 < *result || (v6 -= *result, !v7))
      {
LABEL_9:
        uint64_t v8 = (uint64_t *)(a2 + 16 * v6);
        uint64_t *v8 = a3;
        v8[1] = a4;
        BOOL v7 = __OFADD__(v4, 1);
        uint64_t v9 = v4 + 1;
        if (!v7)
        {
          result[1] = v9;
          return (void *)sub_100007B14(a3, a4);
        }
        goto LABEL_12;
      }
      __break(1u);
    }
    if (v6 < 0)
    {
      BOOL v7 = __OFADD__(v6, *result);
      v6 += *result;
      if (v7) {
        goto LABEL_13;
      }
    }
    goto LABEL_9;
  }
  __break(1u);
LABEL_12:
  __break(1u);
LABEL_13:
  __break(1u);
  return result;
}

void *sub_1000A4510(void *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = result[1];
  uint64_t v4 = result[2];
  uint64_t v5 = v4 + v3;
  if (!__OFADD__(v4, v3))
  {
    uint64_t v8 = result;
    if ((v3 & 0x8000000000000000) == 0)
    {
      BOOL v9 = __OFSUB__(v5, *result);
      if (v5 < *result || (v5 -= *result, !v9))
      {
LABEL_9:
        uint64_t v10 = sub_1001BFC80();
        size_t result = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(a2 + *(void *)(*(void *)(v10 - 8) + 72) * v5, a3, v10);
        uint64_t v11 = v8[1];
        BOOL v9 = __OFADD__(v11, 1);
        uint64_t v12 = v11 + 1;
        if (!v9)
        {
          v8[1] = v12;
          return result;
        }
        goto LABEL_12;
      }
      __break(1u);
    }
    if (v5 < 0)
    {
      BOOL v9 = __OFADD__(v5, *result);
      v5 += *result;
      if (v9) {
        goto LABEL_13;
      }
    }
    goto LABEL_9;
  }
  __break(1u);
LABEL_12:
  __break(1u);
LABEL_13:
  __break(1u);
  return result;
}

void sub_1000A45E4(uint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v8 = a3[1];
  uint64_t v9 = *(void *)(sub_100003918(&qword_10020C180) - 8);
  if (v5 < v8)
  {
    uint64_t v10 = v8 - v5;
    if (!__OFSUB__(v8, v5))
    {
      uint64_t v11 = v5;
      unint64_t v12 = a4;
      goto LABEL_6;
    }
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  unint64_t v12 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = v8;
LABEL_6:
  BOOL v13 = v5 < v8;
  BOOL v14 = v10 != 0;
  BOOL v15 = v13 && v14;
  if (v13 && v14) {
    unint64_t v16 = v12;
  }
  else {
    unint64_t v16 = 0;
  }
  if (v13 && v14) {
    uint64_t v17 = v10;
  }
  else {
    uint64_t v17 = 0;
  }
  if (v11 < 1)
  {
    uint64_t v11 = 0;
    goto LABEL_20;
  }
  if (!a4)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  unint64_t v18 = a4 + *(void *)(v9 + 72) * v4;
  if (v18 > a2 || v18 + *(void *)(*(void *)(sub_100003918(&qword_10020C180) - 8) + 72) * v11 <= a2)
  {
    sub_100003918(&qword_10020C180);
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v18 != a2)
  {
    swift_arrayInitWithTakeBackToFront();
  }
LABEL_20:
  if (!v15 || v17 <= 0) {
    return;
  }
  if (!v16)
  {
LABEL_34:
    __break(1u);
    return;
  }
  uint64_t v19 = *(void *)(*(void *)(sub_100003918(&qword_10020C180) - 8) + 72);
  unint64_t v20 = a2 + v19 * v11;
  unint64_t v21 = v16 + v19 * v17;
  if (v20 < v16 || v20 >= v21)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v20 != v16)
  {
    swift_arrayInitWithTakeBackToFront();
  }
}

void sub_1000A47CC(int a1, char *__dst, void *a3, char *a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v7 = a3[1];
  if (v5 < v7)
  {
    uint64_t v8 = v7 - v5;
    if (!__OFSUB__(v7, v5))
    {
      uint64_t v9 = *a3 - v4;
      uint64_t v10 = a4;
      goto LABEL_6;
    }
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v10 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = a3[1];
LABEL_6:
  BOOL v11 = v5 < v7;
  BOOL v12 = v8 != 0;
  BOOL v13 = v11 && v12;
  if (v11 && v12) {
    BOOL v14 = v10;
  }
  else {
    BOOL v14 = 0;
  }
  if (v11 && v12) {
    uint64_t v15 = v8;
  }
  else {
    uint64_t v15 = 0;
  }
  if (v9 < 1)
  {
    uint64_t v9 = 0;
    goto LABEL_18;
  }
  if (!a4)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  unint64_t v16 = &a4[16 * v4];
  if (v16 != __dst || &v16[16 * v9] <= __dst) {
    memmove(__dst, v16, 16 * v9);
  }
LABEL_18:
  if (!v13 || v15 <= 0) {
    return;
  }
  if (!v14)
  {
LABEL_32:
    __break(1u);
    return;
  }
  uint64_t v17 = &__dst[16 * v9];
  if (v17 != v14 || v17 >= &v14[16 * v15])
  {
    memmove(v17, v14, 16 * v15);
  }
}

void sub_1000A48FC(uint64_t a1, unint64_t a2, void *a3, unint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a3[2];
  uint64_t v6 = *a3 - v5;
  if (__OFSUB__(*a3, v5))
  {
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v9 = a3[1];
  uint64_t v10 = *(void *)(a5(0) - 8);
  if (v6 < v9)
  {
    uint64_t v11 = v9 - v6;
    if (!__OFSUB__(v9, v6))
    {
      uint64_t v12 = v6;
      unint64_t v13 = a4;
      goto LABEL_6;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  unint64_t v13 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = v9;
LABEL_6:
  BOOL v14 = v6 < v9;
  uint64_t v15 = *(void *)(v10 + 72);
  BOOL v16 = v11 != 0;
  BOOL v17 = v14 && v16;
  if (v14 && v16) {
    unint64_t v18 = v13;
  }
  else {
    unint64_t v18 = 0;
  }
  if (v14 && v16) {
    uint64_t v19 = v11;
  }
  else {
    uint64_t v19 = 0;
  }
  if (v12 < 1)
  {
    uint64_t v12 = 0;
    goto LABEL_22;
  }
  if (!a4)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  unint64_t v20 = a4 + v15 * v5;
  if (v20 <= a2 && v20 + v15 * v12 > a2)
  {
    if (v20 != a2) {
      swift_arrayInitWithTakeBackToFront();
    }
  }
  else
  {
    swift_arrayInitWithTakeFrontToBack();
  }
LABEL_22:
  if (!v17 || v19 <= 0) {
    return;
  }
  if (!v18)
  {
LABEL_36:
    __break(1u);
    return;
  }
  unint64_t v22 = a2 + v15 * v12;
  if (v22 < v18 || v22 >= v18 + v15 * v19)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v22 != v18)
  {
    swift_arrayInitWithTakeBackToFront();
  }
}

uint64_t sub_1000A4A9C(uint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v8 = a3[1];
  uint64_t v9 = sub_100003918(&qword_10020C180);
  uint64_t v12 = *(void *)(v9 - 8);
  uint64_t result = v9 - 8;
  uint64_t v11 = v12;
  if (v5 >= v8)
  {
    unint64_t v15 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = v8;
    if (v8 < 1) {
      goto LABEL_5;
    }
    goto LABEL_7;
  }
  uint64_t v13 = v8 - v5;
  if (__OFSUB__(v8, v5))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v14 = v5;
  unint64_t v15 = a4;
  if (v5 < 1)
  {
LABEL_5:
    uint64_t v14 = 0;
    goto LABEL_13;
  }
LABEL_7:
  if (!a4)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  unint64_t v16 = a4 + *(void *)(v11 + 72) * v4;
  uint64_t v17 = *(void *)(*(void *)(sub_100003918(&qword_10020C180) - 8) + 72) * v14;
  unint64_t v18 = a2 + v17;
  unint64_t v19 = v16 + v17;
  if (v16 < v18 && v19 > a2) {
    goto LABEL_29;
  }
  uint64_t result = swift_arrayInitWithCopy();
LABEL_13:
  if (v5 >= v8 || v13 < 1) {
    return result;
  }
  if (!v15)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    uint64_t result = sub_1001C15D0();
    __break(1u);
    return result;
  }
  uint64_t v22 = *(void *)(*(void *)(sub_100003918(&qword_10020C180) - 8) + 72);
  unint64_t v23 = a2 + v22 * v14;
  uint64_t v24 = v22 * v13;
  unint64_t v25 = v23 + v24;
  unint64_t v26 = v15 + v24;
  if (v25 > v15 && v23 < v26) {
    goto LABEL_29;
  }
  return swift_arrayInitWithCopy();
}

void sub_1000A4C84(uint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a3[1];
  if (v5 >= v7)
  {
    unint64_t v10 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = a3[1];
    if (v7 < 1) {
      goto LABEL_5;
    }
    goto LABEL_7;
  }
  uint64_t v8 = v7 - v5;
  if (__OFSUB__(v7, v5))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v9 = *a3 - v4;
  unint64_t v10 = a4;
  if (v5 < 1)
  {
LABEL_5:
    uint64_t v9 = 0;
    goto LABEL_13;
  }
LABEL_7:
  if (!a4)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  unint64_t v11 = a4 + 16 * v4;
  if (v11 < a2 + 16 * v9 && v11 + 16 * v9 > a2) {
    goto LABEL_26;
  }
  swift_arrayInitWithCopy();
LABEL_13:
  if (v5 < v7 && v8 >= 1)
  {
    if (v10)
    {
      unint64_t v14 = a2 + 16 * v9;
      if (v14 + 16 * v8 <= v10 || v14 >= v10 + 16 * v8)
      {
        swift_arrayInitWithCopy();
        return;
      }
LABEL_26:
      sub_1001C15D0();
      __break(1u);
      return;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
}

uint64_t sub_1000A4DEC(uint64_t a1, unint64_t a2, void *a3, unint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a3[2];
  uint64_t v6 = *a3 - v5;
  if (__OFSUB__(*a3, v5))
  {
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v9 = a3[1];
  uint64_t result = a5(0);
  if (v6 < v9)
  {
    uint64_t v11 = v9 - v6;
    if (!__OFSUB__(v9, v6))
    {
      uint64_t v12 = v6;
      unint64_t v13 = a4;
      goto LABEL_6;
    }
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  unint64_t v13 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = v9;
LABEL_6:
  uint64_t v14 = *(void *)(*(void *)(result - 8) + 72);
  if (v12 < 1)
  {
    uint64_t v12 = 0;
    goto LABEL_14;
  }
  if (!a4)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  unint64_t v15 = a4 + v14 * v5;
  if (v15 < a2 + v14 * v12 && v15 + v14 * v12 > a2) {
    goto LABEL_30;
  }
  uint64_t result = swift_arrayInitWithCopy();
LABEL_14:
  if (v6 >= v9 || v11 < 1) {
    return result;
  }
  if (!v13)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    uint64_t result = sub_1001C15D0();
    __break(1u);
    return result;
  }
  unint64_t v18 = a2 + v14 * v12;
  if (v18 + v14 * v11 > v13 && v18 < v13 + v14 * v11) {
    goto LABEL_30;
  }
  return swift_arrayInitWithCopy();
}

uint64_t sub_1000A4F94(uint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
  return sub_1000A4FEC(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for RequestLog.Element);
}

uint64_t sub_1000A4FC0(uint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
  return sub_1000A4FEC(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for TC2TrustedRequestMetadata);
}

uint64_t sub_1000A4FEC(uint64_t a1, unint64_t a2, void *a3, unint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a3[2];
  uint64_t v6 = *a3 - v5;
  if (__OFSUB__(*a3, v5))
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v9 = a3[1];
  uint64_t result = a5(0);
  if (v6 < v9)
  {
    uint64_t v11 = v9 - v6;
    if (!__OFSUB__(v9, v6))
    {
      uint64_t v12 = v6;
      unint64_t v13 = a4;
      goto LABEL_6;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v13 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = v9;
LABEL_6:
  uint64_t v14 = *(void *)(*(void *)(result - 8) + 72);
  if (v12 < 1) {
    goto LABEL_14;
  }
  if (!a4)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  unint64_t v15 = a4 + v14 * v5;
  unint64_t v16 = a2 + v14 * v5;
  if (v15 < v16 + v14 * v12 && v16 < v15 + v14 * v12) {
    goto LABEL_29;
  }
  uint64_t result = swift_arrayInitWithCopy();
LABEL_14:
  if (v6 < v9 && v11 >= 1)
  {
    if (v13)
    {
      if (a2 + v14 * v11 <= v13 || v13 + v14 * v11 <= a2) {
        return swift_arrayInitWithCopy();
      }
LABEL_29:
      uint64_t result = sub_1001C15D0();
      __break(1u);
      return result;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  return result;
}

uint64_t sub_1000A5184(uint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v8 = a3[1];
  uint64_t v9 = sub_100003918(&qword_10020C180);
  uint64_t v12 = *(void *)(v9 - 8);
  uint64_t result = v9 - 8;
  uint64_t v11 = v12;
  if (v5 >= v8)
  {
    unint64_t v15 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = v8;
    if (v8 < 1) {
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  uint64_t v13 = v8 - v5;
  if (__OFSUB__(v8, v5))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v14 = v5;
  unint64_t v15 = a4;
  if (v5 < 1) {
    goto LABEL_14;
  }
LABEL_7:
  if (!a4)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  unint64_t v16 = a4 + *(void *)(v11 + 72) * v4;
  uint64_t v17 = *(void *)(*(void *)(sub_100003918(&qword_10020C180) - 8) + 72);
  unint64_t v18 = a2 + v17 * v4;
  uint64_t v19 = v17 * v14;
  unint64_t v20 = v18 + v19;
  unint64_t v21 = v16 + v19;
  if (v16 < v20 && v18 < v21) {
    goto LABEL_29;
  }
  uint64_t result = swift_arrayInitWithCopy();
LABEL_14:
  if (v5 < v8 && v13 >= 1)
  {
    if (v15)
    {
      uint64_t v24 = *(void *)(*(void *)(sub_100003918(&qword_10020C180) - 8) + 72) * v13;
      unint64_t v25 = a2 + v24;
      unint64_t v26 = v15 + v24;
      if (v25 <= v15 || v26 <= a2) {
        return swift_arrayInitWithCopy();
      }
LABEL_29:
      uint64_t result = sub_1001C15D0();
      __break(1u);
      return result;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  return result;
}

void sub_1000A5368(uint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v7 = a3[1];
  if (v5 >= v7)
  {
    unint64_t v10 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = a3[1];
    if (v7 < 1) {
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  uint64_t v8 = v7 - v5;
  if (__OFSUB__(v7, v5))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v9 = *a3 - v4;
  unint64_t v10 = a4;
  if (v5 < 1) {
    goto LABEL_14;
  }
LABEL_7:
  if (!a4)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  unint64_t v11 = a4 + 16 * v4;
  unint64_t v12 = a2 + 16 * v4;
  if (v11 < v12 + 16 * v9 && v12 < v11 + 16 * v9) {
    goto LABEL_27;
  }
  swift_arrayInitWithCopy();
LABEL_14:
  if (v5 < v7 && v8 >= 1)
  {
    if (v10)
    {
      if (a2 + 16 * v8 <= v10 || v10 + 16 * v8 <= a2)
      {
        swift_arrayInitWithCopy();
        return;
      }
LABEL_27:
      sub_1001C15D0();
      __break(1u);
      return;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
}

uint64_t sub_1000A54C0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 6778732 && a2 == 0xE300000000000000;
  if (v2 || (sub_1001C1840() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1001C1840();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1000A55A4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x617461646174656DLL && a2 == 0xED00007865646E49;
  if (v2 || (sub_1001C1840() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1001C1840();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1000A56C8(void *a1)
{
  uint64_t v62 = type metadata accessor for RequestLog.Element();
  uint64_t v64 = *(void *)(v62 - 8);
  __chkstk_darwin(v62, v2);
  char v61 = (uint64_t *)((char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v63 = sub_1001BF2C0();
  uint64_t v60 = *(void *)(v63 - 8);
  __chkstk_darwin(v63, v4);
  uint64_t v65 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100003918(&qword_10020C160);
  uint64_t v59 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100003918(&qword_10020C168);
  uint64_t v66 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (void *)sub_1001BF600();
  uint64_t v15 = *v14;
  uint64_t v16 = a1[3];
  uint64_t v67 = a1;
  uint64_t v17 = sub_10000D934(a1, v16);
  sub_1000A2DA0();
  swift_retain();
  uint64_t v18 = v70;
  sub_1001C19B0();
  if (v18)
  {
    swift_release();
    sub_100003E90((uint64_t)v67);
    return (uint64_t)v17;
  }
  uint64_t v55 = v14;
  uint64_t v58 = v15;
  uint64_t v56 = v9;
  uint64_t v57 = v6;
  uint64_t v19 = v64;
  LOBYTE(v73) = 1;
  sub_1001C1600();
  uint64_t v53 = v13;
  uint64_t v54 = v10;
  unint64_t v79 = (unint64_t)&_swiftEmptyArrayStorage;
  sub_10000D934(&v77, v78);
  uint64_t v20 = sub_1001C17C0();
  if ((v21 & 1) == 0)
  {
    sub_1000A3398(v20);
    sub_1001C0E10();
  }
  sub_10000D934(&v77, v78);
  char v22 = sub_1001C17E0();
  unint64_t v23 = v61;
  uint64_t v24 = v55;
  if ((v22 & 1) == 0)
  {
    do
    {
      sub_1000A3244((uint64_t)&v77, v78);
      sub_1000A6114();
      sub_1001C17D0();
      long long v69 = v74;
      long long v70 = v73;
      uint64_t v25 = v75;
      type metadata accessor for RequestLog.Element.Storage();
      long long v68 = v76;
      uint64_t v26 = swift_allocObject();
      long long v27 = v69;
      *(_OWORD *)(v26 + 16) = v70;
      *(_OWORD *)(v26 + 32) = v27;
      *(void *)(v26 + 48) = v25;
      *(_OWORD *)(v26 + 56) = v68;
      sub_1001C0DD0();
      if (*(void *)((v79 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v79 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1001C0E20();
      }
      sub_1001C0E50();
      sub_1001C0E10();
      sub_10000D934(&v77, v78);
    }
    while ((sub_1001C17E0() & 1) == 0);
  }
  LOBYTE(v72) = 0;
  sub_1001C1600();
  uint64_t v28 = (void *)*v24;
  uint64_t v72 = (void *)*v24;
  sub_10000D934(&v73, *((uint64_t *)&v74 + 1));
  swift_retain();
  uint64_t v29 = sub_1001C17C0();
  if ((v30 & 1) == 0)
  {
    Swift::Int v31 = v29;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (v28[2] < v31 || (isUniquelyReferenced_nonNull_native & 1) == 0) {
      sub_1000A4018(v31, 1, (uint64_t (*)(void))type metadata accessor for RequestLog.Element, &qword_10020C178, (uint64_t (*)(void))type metadata accessor for RequestLog.Element);
    }
  }
  sub_10000D934(&v73, *((uint64_t *)&v74 + 1));
  if (sub_1001C17E0())
  {
LABEL_16:
    swift_release();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v53, v54);
    uint64_t v17 = v72;
    sub_100003E90((uint64_t)&v73);
    swift_bridgeObjectRelease();
    sub_100003E90((uint64_t)&v77);
    sub_100003E90((uint64_t)v67);
    return (uint64_t)v17;
  }
  *(void *)&long long v70 = v60 + 16;
  *(void *)&long long v69 = v60 + 8;
  uint64_t v33 = (void (**)(char *, uint64_t))(v59 + 8);
  while (1)
  {
    sub_1000A3244((uint64_t)&v73, *((uint64_t *)&v74 + 1));
    sub_1000A3344();
    sub_1001C17B0();
    char v71 = 0;
    unint64_t v34 = sub_1001C1670();
    char v71 = 1;
    sub_1000A6AE4(&qword_1002084D8, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v35 = v63;
    uint64_t result = sub_1001C1690();
    if ((v79 & 0xC000000000000001) != 0)
    {
      uint64_t v38 = sub_1001C1440();
      uint64_t v37 = v65;
      goto LABEL_22;
    }
    if ((v34 & 0x8000000000000000) != 0) {
      break;
    }
    uint64_t v37 = v65;
    if (v34 >= *(void *)((v79 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_40;
    }
    uint64_t v38 = *(void *)(v79 + 8 * v34 + 32);
    swift_retain();
LABEL_22:
    uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))v70)((char *)v23 + *(int *)(v62 + 20), v37, v35);
    *unint64_t v23 = v38;
    uint64_t v39 = v72;
    uint64_t v40 = v72[3];
    Swift::Int v41 = v40 + 1;
    uint64_t v42 = v57;
    if (__OFADD__(v40, 1)) {
      goto LABEL_41;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if (v39[2] < v41 || (result & 1) == 0)
    {
      uint64_t result = sub_1000A4018(v41, 0, (uint64_t (*)(void))type metadata accessor for RequestLog.Element, &qword_10020C178, (uint64_t (*)(void))type metadata accessor for RequestLog.Element);
      uint64_t v39 = v72;
    }
    uint64_t v44 = v39[3];
    uint64_t v43 = v39[4];
    BOOL v47 = __OFADD__(v43, v44);
    uint64_t v45 = v43 + v44;
    if (v47) {
      goto LABEL_42;
    }
    if (v44 < 0)
    {
      if (v45 < 0)
      {
        uint64_t v49 = v39[2];
        BOOL v47 = __OFADD__(v45, v49);
        v45 += v49;
        if (v47) {
          goto LABEL_45;
        }
      }
    }
    else
    {
      uint64_t v46 = v39[2];
      BOOL v47 = __OFSUB__(v45, v46);
      uint64_t v48 = v45 - v46;
      if (v48 < 0 == v47)
      {
        uint64_t v45 = v48;
        if (v47) {
          goto LABEL_44;
        }
      }
    }
    uint64_t result = sub_1000A2DF4((uint64_t)v23, (uint64_t)v39+ ((*(unsigned __int8 *)(v19 + 80) + 40) & -(*(unsigned __int8 *)(v19 + 80) + 1))+ *(void *)(v19 + 72) * v45);
    uint64_t v50 = v39[3];
    BOOL v47 = __OFADD__(v50, 1);
    uint64_t v51 = v50 + 1;
    if (v47) {
      goto LABEL_43;
    }
    v39[3] = v51;
    sub_1000A32E8((uint64_t)v23);
    (*(void (**)(char *, uint64_t))v69)(v65, v35);
    (*v33)(v56, v42);
    sub_10000D934(&v73, *((uint64_t *)&v74 + 1));
    if (sub_1001C17E0()) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
  return result;
}

unint64_t sub_1000A6114()
{
  unint64_t result = qword_10020C170;
  if (!qword_10020C170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020C170);
  }
  return result;
}

uint64_t sub_1000A616C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100003918(&qword_10020C180);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000A61D4(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020BF90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for RequestLog.CodingKeys()
{
  return &type metadata for RequestLog.CodingKeys;
}

unsigned char *_s20privatecloudcomputed10RequestLogV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000A6314);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RequestLog.ElementCodingKeys()
{
  return &type metadata for RequestLog.ElementCodingKeys;
}

uint64_t *sub_1000A634C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1001BF2C0();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_retain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_1000A6430(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1001BF2C0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *sub_1000A64A8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1001BF2C0();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_retain();
  v8(v5, v6, v7);
  return a1;
}

void *sub_1000A6540(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001BF2C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *sub_1000A65D4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001BF2C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_1000A6660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000A6674);
}

uint64_t sub_1000A6674(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1001BF2C0();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1000A6724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000A6738);
}

void *sub_1000A6738(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1001BF2C0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1000A67E0()
{
  uint64_t result = sub_1001BF2C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for RequestLog()
{
  return &type metadata for RequestLog;
}

uint64_t sub_1000A688C()
{
  return sub_1000A6AE4(&qword_10020C230, (void (*)(uint64_t))type metadata accessor for RequestLog.Element);
}

unint64_t sub_1000A68D8()
{
  unint64_t result = qword_10020C238;
  if (!qword_10020C238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020C238);
  }
  return result;
}

unint64_t sub_1000A6930()
{
  unint64_t result = qword_10020C240;
  if (!qword_10020C240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020C240);
  }
  return result;
}

unint64_t sub_1000A6988()
{
  unint64_t result = qword_10020C248;
  if (!qword_10020C248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020C248);
  }
  return result;
}

unint64_t sub_1000A69E0()
{
  unint64_t result = qword_10020C250;
  if (!qword_10020C250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020C250);
  }
  return result;
}

unint64_t sub_1000A6A38()
{
  unint64_t result = qword_10020C258;
  if (!qword_10020C258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020C258);
  }
  return result;
}

unint64_t sub_1000A6A90()
{
  unint64_t result = qword_10020C260;
  if (!qword_10020C260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020C260);
  }
  return result;
}

uint64_t sub_1000A6AE4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A6B2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100003918(&qword_10020BF90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000A6B94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v47 = a1;
  uint64_t v3 = sub_100003918(&qword_10020C5C8);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_1001BF8D0();
  uint64_t v7 = *(void *)(v50 - 8);
  uint64_t v9 = __chkstk_darwin(v50, v8);
  uint64_t v46 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v42 - v12;
  uint64_t v14 = sub_1001BF530();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v17 = __chkstk_darwin(v14, v16);
  uint64_t v19 = (char *)v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v20);
  uint64_t v49 = (uint64_t)v42 - v21;
  sub_1001BF860();
  sub_1001C0C60();
  swift_bridgeObjectRelease();
  int v22 = os_variant_allows_internal_security_policies();
  swift_release();
  if (v22) {
    sub_1000B1CF4(v47, a2);
  }
  else {
    sub_1000B1F48(a2);
  }
  uint64_t v47 = v7;
  uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v45 = a2;
  v44(v13, a2, v50);
  uint64_t v23 = v49;
  Environment.init(_:)((uint64_t)v13, v49);
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v24(v6, v23, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v6, 0, 1, v14);
  sub_1001BF520();
  if (qword_100207980 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_1001C0340();
  uint64_t v26 = sub_10000D978(v25, (uint64_t)qword_10020D0B8);
  v24(v19, v23, v14);
  v42[1] = v26;
  long long v27 = sub_1001C0330();
  os_log_type_t v28 = sub_1001C11E0();
  BOOL v29 = os_log_type_enabled(v27, v28);
  uint64_t v48 = v15;
  if (v29)
  {
    uint64_t v30 = v15;
    Swift::Int v31 = (uint8_t *)swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    *(_DWORD *)Swift::Int v31 = 136446210;
    uint64_t v43 = (void (*)(char *, uint64_t))(v31 + 4);
    sub_1000B9C84((unint64_t *)&qword_10020C5D0, (void (*)(uint64_t))&type metadata accessor for Environment);
    uint64_t v32 = sub_1001C1780();
    uint64_t v51 = sub_1000DF238(v32, v33, &v52);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    uint64_t v43 = *(void (**)(char *, uint64_t))(v30 + 8);
    v43(v19, v14);
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "TC2Configuration informed CloudAttestation that override environment=%{public}s", v31, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v43 = *(void (**)(char *, uint64_t))(v15 + 8);
    v43(v19, v14);
  }

  uint64_t v34 = v50;
  uint64_t v35 = v46;
  v44(v46, v45, v50);
  uint64_t v36 = sub_1001C0330();
  os_log_type_t v37 = sub_1001C1200();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = (uint8_t *)swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    *(_DWORD *)uint64_t v38 = 136446210;
    uint64_t v39 = sub_1001BF8A0();
    uint64_t v51 = sub_1000DF238(v39, v40, &v52);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v35, v34);
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "current environment=%{public}s", v38, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v47 + 8))(v35, v34);
  }
  return ((uint64_t (*)(uint64_t, uint64_t))v43)(v49, v14);
}

uint64_t sub_1000A7188@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t *a5@<X8>)
{
  uint64_t v83 = a4;
  uint64_t v82 = a3;
  uint64_t v84 = a2;
  uint64_t v90 = sub_1001BF340();
  uint64_t v89 = *(void *)(v90 - 8);
  __chkstk_darwin(v90, v8);
  uint64_t v85 = (char *)v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_1001BF450();
  uint64_t v86 = *(void *)(v87 - 8);
  uint64_t v11 = __chkstk_darwin(v87, v10);
  uint64_t v88 = (char *)v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v13);
  uint64_t v81 = (void *)((char *)v80 - v14);
  uint64_t v100 = sub_1001BF380();
  uint64_t v97 = *(void *)(v100 - 8);
  __chkstk_darwin(v100, v15);
  BOOL v98 = (char *)v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_1001BF390();
  uint64_t v95 = *(void *)(v103 - 8);
  __chkstk_darwin(v103, v17);
  uint64_t v96 = (char *)v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_1001BF370();
  uint64_t v19 = *(void *)(v102 - 8);
  __chkstk_darwin(v102, v20);
  int v22 = (char *)v80 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100003918(&qword_10020C538);
  __chkstk_darwin(v23 - 8, v24);
  os_log_type_t v105 = (char *)v80 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1001BF2C0();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v29 = __chkstk_darwin(v26, v28);
  Swift::Int v31 = (char *)v80 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29, v32);
  uint64_t v34 = (char *)v80 - v33;
  uint64_t v104 = v5;
  uint64_t v35 = v5 + qword_1002082A0;
  swift_beginAccess();
  uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
  uint64_t v93 = v35;
  uint64_t v92 = v27 + 16;
  uint64_t v91 = v36;
  v36(v31, v35, v26);
  sub_1001BF220();
  uint64_t v99 = v27;
  uint64_t v38 = *(void (**)(char *, uint64_t))(v27 + 8);
  uint64_t v37 = v27 + 8;
  v38(v31, v26);
  sub_1000B9C84(&qword_10020C540, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v101 = a1;
  LOBYTE(v35) = sub_1001C0BC0();
  uint64_t v94 = v38;
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v38)(v34, v26);
  unint64_t v40 = 0;
  unint64_t v41 = 0;
  unint64_t v42 = 0;
  if (v35) {
    goto LABEL_7;
  }
  v80[1] = v37;
  v80[0] = a5;
  uint64_t v43 = v22;
  (*(void (**)(char *, void, uint64_t))(v19 + 104))(v22, enum case for Calendar.MatchingPolicy.nextTime(_:), v102);
  uint64_t v45 = v95;
  uint64_t v44 = v96;
  (*(void (**)(char *, void, uint64_t))(v95 + 104))(v96, enum case for Calendar.RepeatedTimePolicy.first(_:), v103);
  uint64_t v47 = v97;
  uint64_t v46 = v98;
  uint64_t v48 = v100;
  (*(void (**)(char *, void, uint64_t))(v97 + 104))(v98, enum case for Calendar.SearchDirection.forward(_:), v100);
  sub_1001BF3A0();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v46, v48);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v44, v103);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v43, v102);
  uint64_t v49 = v99;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v99 + 48))(v105, 1, v26);
  uint64_t v50 = v104;
  if (result != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v34, v105, v26);
    uint64_t v51 = v93;
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v49 + 40))(v51, v34, v26);
    swift_endAccess();
    uint64_t v52 = *(void *)(*(void *)v50 + 144);
    v91(v34, v51, v26);
    sub_100016FC4((uint64_t)v34, *(void **)(v50 + v52));
    uint64_t v53 = (uint64_t (*)(char *, uint64_t))v94;
    v94(v34, v26);
    unint64_t v54 = sub_1000552B4((uint64_t)_swiftEmptyArrayStorage);
    sub_1001BF2B0();
    sub_1001BF280();
    double v56 = v55;
    uint64_t result = v53(v34, v26);
    if ((~*(void *)&v56 & 0x7FF0000000000000) != 0)
    {
      if (v56 > -9.22337204e18)
      {
        if (v56 < 9.22337204e18)
        {
          uint64_t v57 = v81;
          *uint64_t v81 = (uint64_t)v56;
          uint64_t v58 = v86;
          uint64_t v59 = *(char **)(v86 + 104);
          uint64_t v60 = v87;
          ((void (*)(uint64_t *, void, uint64_t))v59)(v57, enum case for EventValue.int(_:), v87);
          char v61 = *(void (**)(char *, uint64_t *, uint64_t))(v58 + 32);
          uint64_t v62 = (uint64_t)v88;
          v61(v88, v57, v60);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v106 = v54;
          sub_1000EB1DC(v62, 0, isUniquelyReferenced_nonNull_native);
          unint64_t v64 = v106;
          swift_bridgeObjectRelease();
          uint64_t v65 = v83;
          *uint64_t v57 = v82;
          v57[1] = v65;
          uint64_t v66 = enum case for EventValue.string(_:);
          os_log_type_t v105 = v59;
          ((void (*)(uint64_t *, void, uint64_t))v59)(v57, enum case for EventValue.string(_:), v60);
          v61((char *)v62, v57, v60);
          swift_bridgeObjectRetain();
          char v67 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v106 = v64;
          sub_1000EB1DC(v62, 1, v67);
          unint64_t v68 = v106;
          swift_bridgeObjectRelease();
          *uint64_t v57 = sub_1001BF2D0();
          v57[1] = v69;
          LODWORD(v103) = v66;
          ((void (*)(uint64_t *, uint64_t, uint64_t))v59)(v57, v66, v60);
          v61((char *)v62, v57, v60);
          char v70 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v106 = v68;
          sub_1000EB1DC(v62, 2, v70);
          unint64_t v71 = v106;
          swift_bridgeObjectRelease();
          uint64_t v72 = *(void *)(v104 + qword_10021F8F0 + 8);
          *uint64_t v57 = *(void *)(v104 + qword_10021F8F0);
          v57[1] = v72;
          ((void (*)(uint64_t *, uint64_t, uint64_t))v59)(v57, v66, v60);
          v61((char *)v62, v57, v60);
          swift_bridgeObjectRetain();
          char v73 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v106 = v71;
          sub_1000EB1DC(v62, 3, v73);
          unint64_t v74 = v106;
          swift_bridgeObjectRelease();
          uint64_t v75 = v85;
          sub_1001BF330();
          uint64_t v76 = sub_1001BF320();
          uint64_t v78 = v77;
          (*(void (**)(char *, uint64_t))(v89 + 8))(v75, v90);
          *uint64_t v57 = v76;
          v57[1] = v78;
          ((void (*)(uint64_t *, void, uint64_t))v105)(v57, v103, v60);
          v61((char *)v62, v57, v60);
          char v79 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v106 = v74;
          sub_1000EB1DC(v62, 4, v79);
          unint64_t v42 = v106;
          uint64_t result = swift_bridgeObjectRelease();
          unint64_t v41 = 0x80000001001C4790;
          unint64_t v40 = 0xD000000000000015;
          a5 = (unint64_t *)v80[0];
LABEL_7:
          *a5 = v40;
          a5[1] = v41;
          a5[3] = 0;
          a5[4] = 0;
          a5[2] = v42;
          return result;
        }
        goto LABEL_10;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000A7BF4(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v34 = a1;
  uint64_t v35 = a2;
  uint64_t v5 = sub_1001BEFF0();
  uint64_t v32 = *(void *)(v5 - 8);
  uint64_t v33 = v5;
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100003918(&qword_10020C370);
  uint64_t v11 = __chkstk_darwin(v9 - 8, v10);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v14);
  uint64_t v16 = (char *)&v32 - v15;
  uint64_t v17 = sub_1001BF8E0();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  uint64_t v21 = (char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = qword_100208328;
  sub_1001BEF30();
  swift_allocObject();
  *(void *)(v3 + v22) = sub_1001BEF20();
  uint64_t v23 = qword_100208330;
  sub_1001BEEF0();
  swift_allocObject();
  *(void *)(v3 + v23) = sub_1001BEEE0();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v21, enum case for TC2LogCategory.daemon(_:), v17);
  sub_1001BFDD0();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
  uint64_t v24 = v35;
  *(void *)(v3 + 16) = v34;
  *(double *)(v3 + 24) = a3;
  swift_retain();
  sub_1001BEF00();
  swift_release();
  uint64_t v25 = sub_1001BF0B0();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  if (v27(v24, 1, v25) == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v3 + qword_100208338, 1, 1, v25);
LABEL_5:
    sub_100010360(v24, &qword_10020C370);
    uint64_t v30 = v3 + qword_100208340;
    *(_DWORD *)uint64_t v30 = 0;
    *(void *)(v30 + 8) = &_swiftEmptyArrayStorage;
    return v3;
  }
  sub_10001A2FC(v24, (uint64_t)v13);
  if (v27((uint64_t)v13, 1, v25) != 1)
  {
    uint64_t v36 = 0x656863616375726CLL;
    unint64_t v37 = 0xEF7473696C702E33;
    uint64_t v29 = v32;
    uint64_t v28 = v33;
    (*(void (**)(char *, void, uint64_t))(v32 + 104))(v8, enum case for URL.DirectoryHint.inferFromPath(_:), v33);
    sub_10001A364();
    sub_1001BF0A0();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v25);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v16, 0, 1, v25);
    sub_10002C318((uint64_t)v16, v3 + qword_100208338, &qword_10020C370);
    goto LABEL_5;
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1000A8054()
{
  v1[9] = v0;
  uint64_t v2 = sub_1001BF8E0();
  v1[10] = v2;
  v1[11] = *(void *)(v2 - 8);
  v1[12] = swift_task_alloc();
  v1[13] = type metadata accessor for TC2MetricReporter();
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  uint64_t v3 = sub_1001C0880();
  v1[16] = v3;
  v1[17] = *(void *)(v3 - 8);
  v1[18] = swift_task_alloc();
  uint64_t v4 = sub_1001C08B0();
  v1[19] = v4;
  v1[20] = *(void *)(v4 - 8);
  v1[21] = swift_task_alloc();
  uint64_t v5 = sub_1001C0890();
  v1[22] = v5;
  v1[23] = *(void *)(v5 - 8);
  v1[24] = swift_task_alloc();
  return _swift_task_switch(sub_1000A8268, 0, 0);
}

uint64_t sub_1000A8268()
{
  *(void *)(v0 + 200) = OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_logger;
  unint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C1200();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Setting up CloudTelemetry xpc service activities.", v3, 2u);
    swift_slowDealloc();
  }

  sub_1001BF4B0();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 208) = v4;
  void *v4 = v0;
  v4[1] = sub_1000A838C;
  return static CloudTelemetry.setupXpcServiceActivities()();
}

uint64_t sub_1000A838C()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1000A8A6C;
  }
  else {
    os_log_type_t v2 = sub_1000A84A0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000A84A0()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[23];
  uint64_t v23 = v0[21];
  uint64_t v4 = v0[18];
  uint64_t v25 = v0[20];
  uint64_t v26 = v0[19];
  uint64_t v6 = v0[16];
  uint64_t v5 = v0[17];
  uint64_t v7 = (void *)v0[9];
  sub_1000A0DDC();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v1, enum case for DispatchQoS.QoSClass.default(_:), v2);
  uint64_t v24 = (void *)sub_1001C1270();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  v0[6] = sub_1000B8604;
  v0[7] = v8;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_1000B08BC;
  v0[5] = &unk_1001FF0A8;
  uint64_t v9 = _Block_copy(v0 + 2);
  id v10 = v7;
  sub_1001C08A0();
  v0[8] = &_swiftEmptyArrayStorage;
  sub_1000B9C84(&qword_10020C388, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100003918(&qword_10020C390);
  sub_1000B860C();
  sub_1001C13D0();
  sub_1001C1250();
  _Block_release(v9);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v26);
  swift_release();
  uint64_t v11 = sub_1001C0330();
  os_log_type_t v12 = sub_1001C1200();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Starting daemon run loop...", v13, 2u);
    swift_slowDealloc();
  }
  uint64_t v15 = (void *)v0[14];
  uint64_t v14 = v0[15];
  uint64_t v16 = v0[12];
  uint64_t v17 = v0[10];
  uint64_t v18 = v0[11];
  uint64_t v19 = v0[9];

  *uint64_t v15 = 0x4B46574D54513336;
  v15[1] = 0xEA00000000003432;
  (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v16, enum case for TC2LogCategory.metricReporter(_:), v17);
  sub_1001BFDD0();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  sub_1000B9698((uint64_t)v15, v14, (uint64_t (*)(void))type metadata accessor for TC2MetricReporter);
  uint64_t v20 = swift_task_alloc();
  v0[28] = v20;
  *(void *)(v20 + 16) = v19;
  *(void *)(v20 + 24) = v14;
  uint64_t v21 = (void *)swift_task_alloc();
  v0[29] = v21;
  *uint64_t v21 = v0;
  v21[1] = sub_1000A888C;
  return withDiscardingTaskGroup<A>(returning:isolation:body:)();
}

uint64_t sub_1000A888C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1000A89A4, 0, 0);
}

uint64_t sub_1000A89A4()
{
  sub_1000B9A3C(*(void *)(v0 + 120), (uint64_t (*)(void))type metadata accessor for TC2MetricReporter);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000A8A6C()
{
  uint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C1200();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Failed to setup CloudTelemetry", v3, 2u);
    swift_slowDealloc();
  }
  swift_errorRelease();

  uint64_t v4 = v0[24];
  uint64_t v5 = v0[22];
  uint64_t v6 = v0[23];
  uint64_t v27 = v0[21];
  uint64_t v28 = v0[20];
  uint64_t v7 = v0[18];
  uint64_t v29 = v0[19];
  uint64_t v8 = (void *)v0[9];
  uint64_t v10 = v0[16];
  uint64_t v9 = v0[17];
  sub_1000A0DDC();
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v4, enum case for DispatchQoS.QoSClass.default(_:), v5);
  uint64_t v11 = (void *)sub_1001C1270();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v8;
  v0[6] = sub_1000B8604;
  v0[7] = v12;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_1000B08BC;
  v0[5] = &unk_1001FF0A8;
  uint64_t v13 = _Block_copy(v0 + 2);
  id v14 = v8;
  sub_1001C08A0();
  v0[8] = &_swiftEmptyArrayStorage;
  sub_1000B9C84(&qword_10020C388, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100003918(&qword_10020C390);
  sub_1000B860C();
  sub_1001C13D0();
  sub_1001C1250();
  _Block_release(v13);

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v10);
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
  swift_release();
  uint64_t v15 = sub_1001C0330();
  os_log_type_t v16 = sub_1001C1200();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Starting daemon run loop...", v17, 2u);
    swift_slowDealloc();
  }
  uint64_t v19 = (void *)v0[14];
  uint64_t v18 = v0[15];
  uint64_t v20 = v0[12];
  uint64_t v21 = v0[10];
  uint64_t v22 = v0[11];
  uint64_t v23 = v0[9];

  *uint64_t v19 = 0x4B46574D54513336;
  v19[1] = 0xEA00000000003432;
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 104))(v20, enum case for TC2LogCategory.metricReporter(_:), v21);
  sub_1001BFDD0();
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
  sub_1000B9698((uint64_t)v19, v18, (uint64_t (*)(void))type metadata accessor for TC2MetricReporter);
  uint64_t v24 = swift_task_alloc();
  v0[28] = v24;
  *(void *)(v24 + 16) = v23;
  *(void *)(v24 + 24) = v18;
  uint64_t v25 = (void *)swift_task_alloc();
  v0[29] = v25;
  *uint64_t v25 = v0;
  v25[1] = sub_1000A888C;
  return withDiscardingTaskGroup<A>(returning:isolation:body:)();
}

char *sub_1000A8EE4(uint64_t a1)
{
  uint64_t v184 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = type metadata accessor for TC2CloudAttestationVerifier();
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v177 = (uint64_t)&v160 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v178 = sub_1001BFB30();
  uint64_t v194 = *(void *)(v178 - 8);
  __chkstk_darwin(v178, v5);
  uint64_t v176 = (char *)&v160 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1001BF8D0();
  uint64_t v179 = *(void *)(v7 - 8);
  uint64_t v180 = v7;
  uint64_t v9 = __chkstk_darwin(v7, v8);
  uint64_t v166 = (char *)&v160 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v11);
  uint64_t v193 = (uint64_t)&v160 - v12;
  uint64_t v13 = sub_100003918(&qword_10020C370);
  uint64_t v15 = __chkstk_darwin(v13 - 8, v14);
  v185 = (char *)&v160 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v17);
  uint64_t v183 = (uint64_t)&v160 - v18;
  uint64_t v197 = sub_1001BF0B0();
  uint64_t v181 = *(void *)(v197 - 8);
  uint64_t v20 = __chkstk_darwin(v197, v19);
  uint64_t v168 = (char *)&v160 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v20, v22);
  char v163 = (char *)&v160 - v24;
  __chkstk_darwin(v23, v25);
  uint64_t v196 = (uint64_t)&v160 - v26;
  uint64_t v175 = sub_100003918(&qword_10020C578);
  uint64_t v27 = *(void *)(v175 - 8);
  __chkstk_darwin(v175, v28);
  uint64_t v30 = (char *)&v160 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v192 = sub_100003918(qword_100208000);
  uint64_t v195 = *(void *)(v192 - 8);
  __chkstk_darwin(v192, v31);
  BOOL v191 = (char *)&v160 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_100003918(&qword_10020C360);
  uint64_t v173 = *(void (**)(char *, uint64_t, uint64_t))(v33 - 8);
  uint64_t v174 = (void (*)(char *, char *, uint64_t))v33;
  __chkstk_darwin(v33, v34);
  unint64_t v171 = (char *)&v160 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1001BF8E0();
  uint64_t v182 = v36;
  uint64_t v37 = *(void *)(v36 - 8);
  __chkstk_darwin(v36, v38);
  unint64_t v40 = (char *)&v160 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_t v188 = *(void (**)(char *, void, uint64_t))(v37 + 104);
  uint64_t v189 = v37 + 104;
  v188(v40, enum case for TC2LogCategory.daemon(_:), v36);
  unint64_t v41 = v1;
  sub_1001BFDD0();
  unint64_t v42 = *(void (**)(char *, uint64_t))(v37 + 8);
  uint64_t v190 = v37 + 8;
  uint64_t v187 = v42;
  v42(v40, v36);
  uint64_t v186 = &v41[OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_config];
  sub_1001BFB20();
  uint64_t v43 = OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_tapToRadarController;
  id v165 = self;
  id v44 = [v165 standardUserDefaults];
  sub_100003918(&qword_10020C580);
  swift_allocObject();
  uint64_t v45 = sub_1000B6770(v44);

  *(void *)&v41[v43] = v45;
  BOOL v170 = &v41[OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_thimbledEventStream];
  uint64_t v46 = &v41[OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_thimbledEventContinuation];
  type metadata accessor for ThimbledEvent();
  uint64_t v47 = v175;
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v30, enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:), v175);
  uint64_t v48 = v171;
  uint64_t v49 = v191;
  sub_1001C0FD0();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v30, v47);
  (*((void (**)(char *, char *, void))v173 + 4))(v170, v48, v174);
  uint64_t v50 = *(void (**)(uint64_t, char *, uint64_t))(v195 + 32);
  uint64_t v175 = (uint64_t)v46;
  BOOL v170 = (char *)(v195 + 32);
  uint64_t v167 = v50;
  v50((uint64_t)v46, v49, v192);
  uint64_t v51 = &v41[OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_structuredRequestFactoriesBySetup];
  unint64_t v52 = sub_100055BFC((uint64_t)_swiftEmptyArrayStorage);
  *(_DWORD *)uint64_t v51 = 0;
  *((void *)v51 + 1) = v52;
  uint64_t v53 = OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_prefetchTracker;
  type metadata accessor for TC2PrefetchTracker();
  uint64_t v54 = swift_allocObject();
  uint64_t v55 = v182;
  v188(v40, enum case for TC2LogCategory.prefetchRequest(_:), v182);
  sub_1001BFDD0();
  unint64_t v171 = v40;
  uint64_t v56 = v55;
  uint64_t v57 = v181;
  v187(v40, v56);
  sub_1001BF950();
  sub_1000B9C84(&qword_10020C588, (void (*)(uint64_t))&type metadata accessor for TC2RequestParameters);
  uint64_t v58 = sub_1001C10D0();
  *(_DWORD *)(v54 + 16) = 0;
  *(void *)(v54 + 24) = v58;
  uint64_t v59 = v41;
  uint64_t v164 = v53;
  *(void *)&v41[v53] = v54;
  uint64_t v60 = v197;
  uint64_t v61 = (uint64_t)v185;
  uint64_t v62 = v183;
  sub_1000EFFEC(v196, v183, v184);
  sub_10001A2FC(v62, v61);
  uint64_t v63 = v57;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v61, 1, v60) == 1)
  {
    sub_100010360(v61, &qword_10020C370);
  }
  else
  {
    uint64_t v64 = (uint64_t)v163;
    uint64_t v65 = v61;
    uint64_t v66 = v197;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v163, v65, v197);
    sub_1000F0C80(v64, v196);
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v64, v66);
  }
  id v67 = [self mainBundle];
  uint64_t result = (char *)(id)MobileGestalt_get_current_device();
  if (result)
  {
    uint64_t v69 = result;
    sub_1000D7C90(v67, (uint64_t)&v201);

    char v70 = v59;
    unint64_t v71 = (long long *)&v59[OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo];
    long long v73 = v202;
    long long v72 = v203;
    *unint64_t v71 = v201;
    v71[1] = v73;
    v71[2] = v72;
    long long v74 = v207;
    long long v76 = v204;
    long long v75 = v205;
    v71[5] = v206;
    v71[6] = v74;
    v71[3] = v76;
    v71[4] = v75;
    long long v77 = v211;
    long long v79 = v208;
    long long v78 = v209;
    v71[9] = v210;
    v71[10] = v77;
    v71[7] = v79;
    v71[8] = v78;
    *((void *)&v224 + 1) = &type metadata for SystemInfo;
    *(void *)&long long v225 = &protocol witness table for SystemInfo;
    uint64_t v80 = (_OWORD *)swift_allocObject();
    *(void *)&long long v223 = v80;
    long long v81 = v210;
    v80[9] = v209;
    v80[10] = v81;
    v80[11] = v211;
    long long v82 = v206;
    v80[5] = v205;
    v80[6] = v82;
    long long v83 = v208;
    v80[7] = v207;
    v80[8] = v83;
    long long v84 = v202;
    v80[1] = v201;
    void v80[2] = v84;
    long long v85 = v204;
    v80[3] = v203;
    v80[4] = v85;
    sub_100016110((uint64_t)&v201);
    uint64_t v86 = v193;
    uint64_t v87 = v186;
    sub_1000A6B94((uint64_t)&v223, v193);
    sub_100003E90((uint64_t)&v223);
    uint64_t v88 = *(void (**)(char *, uint64_t, uint64_t))(v63 + 16);
    v185 = (char *)(v63 + 16);
    uint64_t v173 = v88;
    uint64_t v89 = v168;
    uint64_t v90 = v196;
    v88(v168, v196, v197);
    type metadata accessor for RateLimiter();
    uint64_t v91 = swift_allocObject();
    uint64_t v92 = *(void (**)(char *, char *, uint64_t))(v194 + 16);
    v194 += 16;
    uint64_t v174 = v92;
    uint64_t v93 = (uint64_t)v176;
    v92(v176, v87, v178);
    uint64_t v94 = v89;
    char v163 = (char *)sub_1000B5108(v93, v89, v91);
    uint64_t v172 = v70;
    *(void *)&v70[OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_rateLimiter] = v163;
    uint64_t v95 = v180;
    uint64_t v160 = *(void (**)(char *, uint64_t, uint64_t))(v179 + 16);
    uint64_t v96 = (uint64_t)v166;
    v160(v166, v86, v180);
    uint64_t v97 = v173;
    v173(v94, v90, v197);
    v162 = sub_1000D1740(v96, v94);
    *(void *)&v70[OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_attestationStore] = v162;
    uint64_t v98 = (uint64_t)v94;
    v97(v94, v196, v197);
    type metadata accessor for TC2ServerDrivenConfiguration();
    swift_allocObject();
    uint64_t v161 = TC2ServerDrivenConfiguration.init(from:)(v94);
    uint64_t v99 = v172;
    *(void *)&v172[OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_serverDrivenConfig] = v161;
    v160((char *)v96, v193, v95);
    uint64_t v100 = v177;
    sub_100191E48(v96, v177);
    uint64_t v101 = (uint64_t)&v99[OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_attestationVerifier];
    uint64_t v102 = v100;
    sub_1000B9698(v100, (uint64_t)&v99[OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_attestationVerifier], (uint64_t (*)(void))type metadata accessor for TC2CloudAttestationVerifier);
    long long v104 = v71[1];
    long long v103 = v71[2];
    long long v223 = *v71;
    long long v224 = v104;
    long long v225 = v103;
    long long v105 = v71[6];
    long long v107 = v71[3];
    long long v106 = v71[4];
    long long v228 = v71[5];
    long long v229 = v105;
    long long v226 = v107;
    long long v227 = v106;
    long long v108 = v71[10];
    long long v110 = v71[7];
    long long v109 = v71[8];
    long long v232 = v71[9];
    long long v233 = v108;
    long long v230 = v110;
    long long v231 = v109;
    sub_100016110((uint64_t)&v223);
    id v111 = [v165 standardUserDefaults];
    sub_100003918(&qword_10020C590);
    swift_allocObject();
    uint64_t v112 = sub_1000B60EC((uint64_t)&v223, v111);

    sub_1000161E0((uint64_t)&v223);
    *(void *)&v99[OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_dailyActiveUserReporter] = v112;
    sub_1000B9700(v101, v102, (uint64_t (*)(void))type metadata accessor for TC2CloudAttestationVerifier);
    v97(v94, v196, v197);
    uint64_t v113 = *(char **)(v195 + 16);
    v195 += 16;
    uint64_t v166 = v113;
    uint64_t v114 = (uint64_t)v191;
    ((void (*)(char *, uint64_t, uint64_t))v113)(v191, v175, v192);
    uint64_t v115 = *(void *)&v99[v164];
    sub_100003918(&qword_10020C560);
    uint64_t v116 = swift_allocObject();
    uint64_t v117 = v176;
    uint64_t v118 = v178;
    v174(v176, v186, v178);
    sub_100016110((uint64_t)&v223);
    uint64_t v119 = (uint64_t)v162;
    swift_retain();
    uint64_t v120 = v161;
    swift_retain();
    swift_retain();
    uint64_t v121 = swift_retain();
    uint64_t v122 = (uint64_t)v117;
    uint64_t v123 = v98;
    uint64_t v124 = sub_1000B69A0(v121, v119, v177, v122, v98, v120, &v223, v114, v115, v116);
    sub_1000161E0((uint64_t)&v223);
    swift_release();
    swift_release();
    swift_release();
    uint64_t v125 = v172;
    *(void *)&v172[OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_prefetchActivity] = v124;
    *((void *)&v213 + 1) = v118;
    *(void *)&long long v214 = &protocol witness table for TC2DefaultConfiguration;
    uint64_t v126 = sub_10000395C((uint64_t *)&v212);
    v174((char *)v126, v186, v118);
    sub_100003918(&qword_10020C568);
    uint64_t v127 = swift_allocObject();
    uint64_t v128 = v171;
    uint64_t v129 = v182;
    v188(v171, enum case for TC2LogCategory.updateServerDrivenConfiguration(_:), v182);
    sub_100016110((uint64_t)&v223);
    swift_retain();
    sub_1001BFDD0();
    v187(v128, v129);
    *(void *)(v127 + qword_10020DA90) = v120;
    uint64_t v130 = v193;
    uint64_t v131 = (long long *)(v127 + *(void *)(*(void *)v127 + 112));
    long long v132 = v224;
    *uint64_t v131 = v223;
    v131[1] = v132;
    long long v133 = v228;
    v131[4] = v227;
    v131[5] = v133;
    long long v134 = v226;
    v131[2] = v225;
    v131[3] = v134;
    long long v135 = v233;
    long long v136 = v231;
    v131[9] = v232;
    v131[10] = v135;
    long long v137 = v230;
    v131[6] = v229;
    v131[7] = v137;
    v131[8] = v136;
    sub_10000E720(&v212, v127 + *(void *)(*(void *)v127 + 120));
    *(void *)&v125[OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_updateServerDrivenConfigurationActivity] = v127;
    uint64_t v138 = sub_1001BF8A0();
    uint64_t v140 = v139;
    v173((char *)v123, v196, v197);
    long long v142 = v71[1];
    long long v141 = v71[2];
    long long v212 = *v71;
    long long v213 = v142;
    long long v214 = v141;
    long long v143 = v71[6];
    long long v145 = v71[3];
    long long v144 = v71[4];
    long long v217 = v71[5];
    long long v218 = v143;
    long long v215 = v145;
    long long v216 = v144;
    long long v146 = v71[10];
    long long v148 = v71[7];
    long long v147 = v71[8];
    long long v221 = v71[9];
    long long v222 = v146;
    long long v219 = v148;
    long long v220 = v147;
    sub_100003918(&qword_10020C598);
    swift_allocObject();
    sub_100016110((uint64_t)&v212);
    uint64_t v149 = sub_1000B3E48(v138, v140, v123, &v212);
    *(void *)&v125[OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_nodeDistributionAnalyzer] = v149;
    uint64_t v150 = v191;
    uint64_t v151 = v192;
    ((void (*)(char *, uint64_t, uint64_t))v166)(v191, v175, v192);
    sub_100003918(&qword_10020C570);
    uint64_t v152 = swift_allocObject();
    v188(v128, enum case for TC2LogCategory.metricReporter(_:), v129);
    swift_retain();
    sub_1001BFDD0();
    v187(v128, v129);
    v167(v152 + qword_10021F910, v150, v151);
    *(void *)(v152 + qword_10021F918) = v149;
    *(void *)&v125[OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_nodeDistributionReportActivity] = v152;

    v200.receiver = v125;
    v200.super_class = ObjectType;
    uint64_t v153 = (char *)objc_msgSendSuper2(&v200, "init");
    uint64_t v154 = sub_1001C0330();
    os_log_type_t v155 = sub_1001C1200();
    if (os_log_type_enabled(v154, v155))
    {
      uint64_t v156 = (uint8_t *)swift_slowAlloc();
      uint64_t v157 = swift_slowAlloc();
      *(_DWORD *)uint64_t v156 = 136315138;
      uint64_t v199 = v157;
      uint64_t v158 = *(void *)&v153[OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo + 144];
      unint64_t v159 = *(void *)&v153[OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo + 152];
      swift_bridgeObjectRetain();
      uint64_t v198 = sub_1000DF238(v158, v159, &v199);
      sub_1001C1310();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v154, v155, "Starting daemon. tc2OSInfo: %s", v156, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_100010360(v184, &qword_10020C370);
      (*(void (**)(uint64_t, uint64_t))(v179 + 8))(v193, v180);
    }
    else
    {

      sub_100010360(v184, &qword_10020C370);
      (*(void (**)(uint64_t, uint64_t))(v179 + 8))(v130, v180);
    }
    sub_100010360(v183, &qword_10020C370);
    (*(void (**)(uint64_t, uint64_t))(v181 + 8))(v196, v197);
    return v153;
  }
  else
  {
    __break(1u);
  }
  return result;
}