uint64_t sub_1001568A0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;

  v6 = a2;
  v7 = result;
  if (result >= a2)
  {
    v12 = *a3 - result;
    if (!__OFSUB__(*a3, result))
    {
      v14 = a2 == 0;
      if (a2) {
        v13 = a4;
      }
      else {
        v13 = 0;
      }
      v15 = sub_1001BFC80();
      v16 = *(void *)(v15 - 8);
      result = v15 - 8;
      v10 = v16;
      goto LABEL_9;
    }
  }
  else
  {
    v9 = sub_1001BFC80();
    v11 = *(void *)(v9 - 8);
    result = v9 - 8;
    v10 = v11;
    v12 = v6 - v7;
    if (!__OFSUB__(v6, v7))
    {
      v13 = 0;
      v6 = 0;
      v14 = 1;
LABEL_9:
      *(void *)a5 = a4 + *(void *)(v10 + 72) * v7;
      *(void *)(a5 + 8) = v12;
      *(void *)(a5 + 16) = v13;
      *(void *)(a5 + 24) = v6;
      *(unsigned char *)(a5 + 32) = v14;
      return result;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_100156994(void *a1)
{
  return sub_10015299C(a1);
}

uint64_t sub_1001569C4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_100156A4C(uint64_t a1)
{
  return sub_100153FCC(a1);
}

uint64_t sub_100156A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_100003918(&qword_10020E128);
  __chkstk_darwin(v8 - 8, v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(a2, (uint64_t)v11, &qword_10020E128);
  uint64_t v12 = sub_1001BF810();
  uint64_t v13 = *(void *)(v12 - 8);
  int v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
  v15 = (void *)(a1 + *(int *)(sub_100003918(&qword_100208CA8) + 68));
  sub_100010360((uint64_t)v15, &qword_10020E070);
  if (v14 == 1)
  {
    void *v15 = a3;
    v15[1] = a4;
  }
  else
  {
    v16 = (void *)((char *)v15 + *(int *)(sub_100003918(qword_100208AA8) + 48));
    (*(void (**)(void *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    void *v16 = a3;
    v16[1] = a4;
  }
  sub_100003918(&qword_10020E070);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100156C28@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + *(int *)(sub_100003918(&qword_100208CA8) + 124));
  return swift_bridgeObjectRetain();
}

uint64_t sub_100156C78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10003282C(a1, a2, &qword_100208CA8);
}

uint64_t sub_100156CAC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = *a3;
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_1000074CC;
  return sub_100112844(a1, a2, v12, a4, a5, a6);
}

uint64_t sub_100156D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8)
{
  *(void *)(v8 + 16) = a1;
  uint64_t v12 = *a8;
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v8 + 24) = v13;
  *uint64_t v13 = v8;
  v13[1] = sub_100156E7C;
  return sub_1001140A0(a2, a3, a4, a5, a6, a7, v12, v19);
}

uint64_t sub_100156E7C(uint64_t a1, char a2)
{
  uint64_t v5 = *(void *)(*v2 + 16);
  uint64_t v8 = *v2;
  swift_task_dealloc();
  *(void *)uint64_t v5 = a1;
  *(unsigned char *)(v5 + 8) = a2 & 1;
  uint64_t v6 = *(uint64_t (**)(void))(v8 + 8);
  return v6();
}

uint64_t sub_100156FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v9 + 16) = a1;
  uint64_t v15 = *v19;
  v16 = (void *)swift_task_alloc();
  *(void *)(v9 + 24) = v16;
  void *v16 = v9;
  v16[1] = sub_100162AB4;
  return sub_10015A7F4(a4, a5, a6, a7, a8, v15, v20, a9);
}

uint64_t sub_100157098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 32) = a1;
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v8 + 40) = v13;
  *uint64_t v13 = v8;
  v13[4] = a7;
  v13[5] = a8;
  v13[2] = a5;
  v13[3] = a6;
  v13[1] = sub_1001571B4;
  v16 = (uint64_t (*)(void))((char *)&dword_10020EE28 + dword_10020EE28);
  int v14 = (void *)swift_task_alloc();
  v13[6] = v14;
  *int v14 = v13;
  v14[1] = sub_10011819C;
  return v16();
}

uint64_t sub_1001571B4()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1001572FC;
  }
  else {
    uint64_t v2 = sub_1001572C8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001572C8()
{
  uint64_t v1 = *(void *)(v0 + 32);
  BOOL v2 = *(void *)(v0 + 48) != 0;
  *(void *)uint64_t v1 = *(void *)(v0 + 16);
  *(unsigned char *)(v1 + 8) = v2 | 0x40;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001572FC()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 32);
  *(void *)uint64_t v2 = v1;
  *(unsigned char *)(v2 + 8) = (v1 != 0) | 0x40;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10015732C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 16) = a1;
  v11 = (void *)swift_task_alloc();
  *(void *)(v7 + 24) = v11;
  void *v11 = v7;
  v11[1] = sub_1001573E4;
  return sub_100118F28(a5, a6, a7);
}

uint64_t sub_1001573E4()
{
  *(void *)(*(void *)v1 + 32) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100157524;
  }
  else {
    uint64_t v2 = sub_1001574F8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001574F8()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 8) = (*(void *)(v0 + 32) != 0) | 0x80;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100157524()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 16);
  *(void *)uint64_t v2 = v1;
  *(unsigned char *)(v2 + 8) = (v1 != 0) | 0x80;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100157554(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a1;
  uint64_t v7 = sub_10000D934(a4, a4[3]);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v5 + 24) = v8;
  *uint64_t v8 = v5;
  v8[1] = sub_100157600;
  return sub_10015EC58((uint64_t)v7, a5);
}

uint64_t sub_100157600(uint64_t a1, char a2)
{
  uint64_t v5 = *(void *)(*v2 + 16);
  uint64_t v8 = *v2;
  swift_task_dealloc();
  *(void *)uint64_t v5 = a1;
  *(unsigned char *)(v5 + 8) = a2;
  uint64_t v6 = *(uint64_t (**)(void))(v8 + 8);
  return v6();
}

uint64_t sub_100157720(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_100003918(&qword_10020E160);
  __chkstk_darwin(v8, v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C((uint64_t)a1, (uint64_t)v11, &qword_10020E160);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v14 = (uint64_t)&v11[*(int *)(sub_100003918(&qword_100208A98) + 48)];
    uint64_t v13 = &qword_100208AA0;
    return sub_100010360(v14, v13);
  }
  uint64_t v13 = &qword_10020E160;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v14 = (uint64_t)v11;
    return sub_100010360(v14, v13);
  }
  sub_100010360((uint64_t)a1, &qword_10020E160);
  *a1 = a2;
  a1[1] = a3;
  a1[2] = a4;
  swift_storeEnumTagMultiPayload();
  return swift_errorRetain();
}

uint64_t sub_100157848(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100003918(&qword_10020E160);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C((uint64_t)a1, (uint64_t)v9, &qword_10020E160);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1) {
      sub_100010360((uint64_t)v9, &qword_10020E160);
    }
    sub_100010360((uint64_t)a1, &qword_10020E160);
    v11 = (char *)a1 + *(int *)(sub_100003918(&qword_100208A98) + 48);
    *a1 = a2;
    a1[1] = a3;
    uint64_t v12 = sub_1001C05B0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
    return swift_storeEnumTagMultiPayload();
  }
  else
  {
    uint64_t v14 = sub_100003918(&qword_100208A98);
    return sub_100010360((uint64_t)&v9[*(int *)(v14 + 48)], &qword_100208AA0);
  }
}

uint64_t sub_1001579BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[8] = a8;
  v8[9] = v10;
  v8[6] = a6;
  v8[7] = a7;
  v8[4] = a4;
  v8[5] = a5;
  v8[3] = a1;
  return _swift_task_switch(sub_1001579F0, 0, 0);
}

uint64_t sub_1001579F0()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 80) = v3;
  long long v9 = *(_OWORD *)(v0 + 40);
  long long v4 = *(_OWORD *)(v0 + 56);
  *(void *)(v3 + 16) = v2;
  *(_OWORD *)(v3 + 24) = v9;
  *(_OWORD *)(v3 + 40) = v4;
  *(void *)(v3 + 56) = v1;
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 88) = v5;
  *(void *)(v5 + 16) = v2;
  *(void *)(v5 + 24) = v9;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v6;
  uint64_t v7 = sub_100003918(&qword_10020E298);
  *uint64_t v6 = v0;
  v6[1] = sub_100157B34;
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v0 + 16, &unk_10020E2F0, v3, sub_10015FF6C, v5, 0, 0, v7);
}

uint64_t sub_100157B34()
{
  uint64_t v2 = (void *)*v1;
  v2[13] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_100157C94, 0, 0);
  }
  else
  {
    uint64_t v3 = (void *)v2[3];
    swift_task_dealloc();
    swift_task_dealloc();
    *uint64_t v3 = v2[2];
    long long v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_100157C94()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

const char *sub_100157D00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  result = sub_100146434(a1, a2, v6);
  if (!v3) {
    return (const char *)sub_10002C318((uint64_t)v6, a3, &qword_10020E430);
  }
  return result;
}

uint64_t sub_100157D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 16) = a1;
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v7 + 24) = v14;
  *uint64_t v14 = v7;
  v14[1] = sub_100162A6C;
  return sub_10012D988(a2, a3, a4, a5, a6, a7);
}

uint64_t sub_100157E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 16) = a1;
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v8 + 24) = v16;
  void *v16 = v8;
  v16[1] = sub_100162A6C;
  return sub_10012E100(a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_100157F0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 16) = a1;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v6 + 24) = v10;
  *uint64_t v10 = v6;
  v10[1] = sub_100162A6C;
  return sub_10015B118(a4, a5, a6);
}

uint64_t sub_100157FBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 16) = a1;
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v8 + 24) = v14;
  *uint64_t v14 = v8;
  v14[1] = sub_100162A6C;
  return sub_10015B954(a4, a5, a6, a7, a8, v17);
}

uint64_t sub_100158090(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 16) = a1;
  uint64_t v15 = *a3;
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v8 + 24) = v16;
  void *v16 = v8;
  v16[1] = sub_10015817C;
  return sub_100132450(a2, v15, a4, a5, a6, a7, a8, v19);
}

uint64_t sub_10015817C(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v4 + 16) = a1;
  }
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

uint64_t sub_10015828C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  v4[4] = a1;
  v4[3] = a3;
  uint64_t v8 = (int *)((char *)a4 + *a4);
  uint64_t v6 = (void *)swift_task_alloc();
  v4[5] = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_100158388;
  return ((uint64_t (*)(void *, uint64_t, void *))v8)(v4 + 2, a2, v4 + 3);
}

uint64_t sub_100158388()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (!v0) {
    **(void **)(v2 + 32) = *(void *)(v2 + 16);
  }
  uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
  return v4();
}

uint64_t sub_100158498(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[2] = v4;
  v5[3] = a2;
  v5[1] = sub_1000A12C8;
  return _swift_task_switch(sub_100135088, 0, 0);
}

uint64_t sub_100158548@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result = sub_100144F00(a1, a2, a3, a4, v8);
  if (!v5) {
    return sub_10002C318((uint64_t)v8, a5, &qword_10020E3F8);
  }
  return result;
}

uint64_t sub_1001585A4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = *a3;
  v11 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v11;
  void *v11 = v6;
  v11[5] = a6;
  v11[6] = a4;
  v11[4] = a5;
  v11[1] = sub_1000A12C8;
  v11[2] = v10;
  return _swift_task_switch(sub_1001185EC, 0, 0);
}

uint64_t sub_100158668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v10 = *a5;
  v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  void *v11 = v5;
  v11[1] = sub_1000A12C8;
  return sub_100125C88(a1, a2, a3, a4, v10);
}

uint64_t sub_100158730(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8)
{
  uint64_t v15 = *a7;
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v16;
  void *v16 = v8;
  v16[1] = sub_1000A12C8;
  return sub_100127214(a1, a2, a3, a4, a5, a6, v15, a8);
}

uint64_t sub_100158828(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v11 = *a2;
  uint64_t v12 = swift_task_alloc();
  *(void *)(v7 + 16) = v12;
  *(void *)uint64_t v12 = v7;
  *(unsigned char *)(v12 + 72) = a7;
  *(void *)(v12 + 24) = a3;
  *(void *)(v12 + 32) = a4;
  *(void *)(v12 + 8) = sub_1000A12C8;
  *(void *)(v12 + 16) = v11;
  return _swift_task_switch(sub_100129914, 0, 0);
}

uint64_t sub_1001588EC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *a2;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[3] = a3;
  v8[4] = a4;
  v8[1] = sub_1000A12C8;
  int64x2_t v8[2] = v7;
  return _swift_task_switch(sub_10012A62C, 0, 0);
}

uint64_t sub_1001589A8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v11 = *a2;
  uint64_t v12 = swift_task_alloc();
  *(void *)(v7 + 16) = v12;
  *(void *)uint64_t v12 = v7;
  *(unsigned char *)(v12 + 72) = a7;
  *(void *)(v12 + 24) = a3;
  *(void *)(v12 + 32) = a4;
  *(void *)(v12 + 8) = sub_1000A12C8;
  *(void *)(v12 + 16) = v11;
  return _swift_task_switch(sub_10012A924, 0, 0);
}

uint64_t sub_100158A6C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v11 = *a2;
  uint64_t v12 = swift_task_alloc();
  *(void *)(v7 + 16) = v12;
  *(void *)uint64_t v12 = v7;
  *(unsigned char *)(v12 + 72) = a7;
  *(void *)(v12 + 24) = a3;
  *(void *)(v12 + 32) = a4;
  *(void *)(v12 + 8) = sub_1000A12C8;
  *(void *)(v12 + 16) = v11;
  return _swift_task_switch(sub_10012A2F0, 0, 0);
}

uint64_t sub_100158B30(uint64_t a1, int *a2)
{
  *(void *)(v2 + 32) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 40) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_100158C10;
  return v5(v2 + 16);
}

uint64_t sub_100158C10()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 32);
  uint64_t v3 = *v0;
  swift_task_dealloc();
  char v4 = *(unsigned char *)(v1 + 24);
  *(void *)uint64_t v2 = *(void *)(v1 + 16);
  *(unsigned char *)(v2 + 8) = v4;
  uint64_t v5 = *(uint64_t (**)(void))(v3 + 8);
  return v5();
}

uint64_t sub_100158D44(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = *a3;
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[6] = a5;
  v13[7] = a6;
  v13[4] = a2;
  v13[5] = a4;
  v13[2] = v12;
  v13[3] = a1;
  v13[1] = sub_1000A12C8;
  return _swift_task_switch(sub_10011B0C4, 0, 0);
}

uint64_t sub_100158E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a3;
  *(_OWORD *)(v3 + 32) = *(_OWORD *)a2;
  *(void *)(v3 + 48) = *(void *)(a2 + 16);
  *(unsigned char *)(v3 + 56) = *(unsigned char *)(a2 + 24);
  return _swift_task_switch(sub_100158E54, 0, 0);
}

uint64_t sub_100158E54()
{
  uint64_t v1 = sub_10011F054(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned __int8 *)(v0 + 56));
  uint64_t v2 = *(uint64_t **)(v0 + 16);
  *uint64_t v2 = v1;
  v2[1] = v3;
  char v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100158EE8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100143EC8(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_100158F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_100003918(&qword_100208CA8);
  uint64_t v7 = a1 + *(int *)(result + 76);
  switch(*(unsigned char *)(v7 + 8))
  {
    case 1:
    case 3:
      return result;
    case 2:
      goto LABEL_4;
    case 4:
      *(void *)uint64_t v7 = 0;
      goto LABEL_3;
    default:
LABEL_3:
      *(unsigned char *)(v7 + 8) = 1;
LABEL_4:
      uint64_t v8 = a1 + *(int *)(result + 104);
      *(void *)uint64_t v8 = a2;
      *(void *)(v8 + 8) = a3;
      *(unsigned char *)(v8 + 16) = 0;
      return result;
  }
}

uint64_t sub_100158FC0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *a2;
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  void *v11 = v5;
  v11[1] = sub_1000A12C8;
  return sub_10011B488(a1, v10, a3, a4, a5);
}

uint64_t sub_100159088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _OWORD *a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v14 = v13;
  uint64_t v119 = a8;
  uint64_t v115 = a7;
  id v116 = a5;
  uint64_t v117 = a6;
  uint64_t v124 = a3;
  uint64_t v125 = a4;
  uint64_t v106 = a2;
  uint64_t v114 = a1;
  uint64_t v110 = a13;
  uint64_t v127 = a12;
  uint64_t v120 = a11;
  v107 = a10;
  uint64_t v118 = a9;
  uint64_t v126 = sub_1001C14E0();
  uint64_t v122 = *(void *)(v126 - 8);
  __chkstk_darwin(v126, v15);
  v104 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_100003918(qword_100208000);
  uint64_t v121 = *(void *)(v109 - 8);
  __chkstk_darwin(v109, v17);
  v103 = (char *)&v85 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_1001C0340();
  uint64_t v101 = *(void *)(v102 - 8);
  __chkstk_darwin(v102, v19);
  v100 = (char *)&v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_1001BF950();
  uint64_t v98 = *(void *)(v123 - 8);
  uint64_t v21 = v98;
  __chkstk_darwin(v123, v22);
  uint64_t v108 = (uint64_t)&v85 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100003918(qword_100208CD0);
  __chkstk_darwin(v24 - 8, v25);
  uint64_t v113 = (uint64_t)&v85 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1001BF310();
  uint64_t v99 = *(void *)(v27 - 8);
  uint64_t v28 = v99;
  uint64_t v30 = __chkstk_darwin(v27, v29);
  v112 = (char *)&v85 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30, v32);
  v111 = (char *)&v85 - v33;
  uint64_t v34 = sub_1001BF8E0();
  uint64_t v35 = *(void *)(v34 - 8);
  __chkstk_darwin(v34, v36);
  v38 = (char *)&v85 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_1001BEDD0();
  __chkstk_darwin(v39 - 8, v40);
  uint64_t v41 = *(void *)(*(void *)v13 + 328);
  sub_1001BEE10();
  swift_allocObject();
  uint64_t v42 = sub_1001BEE00();
  sub_1001BEDB0();
  sub_1001BEDE0();
  *(void *)(v14 + v41) = v42;
  *(void *)(v14 + *(void *)(*(void *)v14 + 352)) = 1;
  uint64_t v97 = v14 + *(void *)(*(void *)v14 + 360);
  (*(void (**)(char *, void, uint64_t))(v35 + 104))(v38, enum case for TC2LogCategory.trustedRequest(_:), v34);
  sub_1001BFDD0();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v38, v34);
  uint64_t v96 = v14 + qword_10021F8D0;
  v43 = *(void (**)(void))(v28 + 16);
  v43();
  v95 = (uint64_t *)(v14 + qword_10021F8D8);
  uint64_t v105 = v27;
  v43();
  sub_1001627A0(qword_100207DC0, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v128 = sub_1001C1780();
  uint64_t v129 = v44;
  v130._countAndFlagsBits = 58;
  v130._object = (void *)0xE100000000000000;
  sub_1001C0D00(v130);
  uint64_t v45 = v129;
  v46 = (uint64_t *)(v14 + *(void *)(*(void *)v14 + 368));
  uint64_t *v46 = v128;
  v46[1] = v45;
  sub_100161F3C(v124, v14 + qword_10021F8E0, (uint64_t (*)(void))type metadata accessor for TrustedRequestConfiguration);
  v94 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
  v94(v14 + qword_10021F8E8, v125, v123);
  *(void *)(v14 + *(void *)(*(void *)v14 + 256)) = v116;
  *(void *)(v14 + *(void *)(*(void *)v14 + 264)) = v117;
  *(void *)(v14 + *(void *)(*(void *)v14 + 280)) = v115;
  sub_100161F3C(v119, v14 + *(void *)(*(void *)v14 + 288), (uint64_t (*)(void))type metadata accessor for TC2CloudAttestationVerifier);
  *(void *)(v14 + *(void *)(*(void *)v14 + 296)) = v118;
  v47 = (_OWORD *)(v14 + *(void *)(*(void *)v14 + 304));
  v48 = v107;
  long long v49 = v107[1];
  _OWORD *v47 = *v107;
  v47[1] = v49;
  long long v50 = v48[5];
  v47[4] = v48[4];
  v47[5] = v50;
  long long v51 = v48[3];
  v47[2] = v48[2];
  v47[3] = v51;
  long long v52 = v48[10];
  long long v53 = v48[8];
  v47[9] = v48[9];
  v47[10] = v52;
  long long v54 = v48[7];
  v47[6] = v48[6];
  v47[7] = v54;
  v47[8] = v53;
  *(void *)(v14 + *(void *)(*(void *)v14 + 312)) = v120;
  uint64_t v55 = v14 + *(void *)(*(void *)v14 + 320);
  v88 = *(void (**)(uint64_t, uint64_t, uint64_t))(v122 + 16);
  v88(v55, v127, v126);
  v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(v121 + 16);
  uint64_t v58 = v109;
  uint64_t v57 = v110;
  v56(v14 + *(void *)(*(void *)v14 + 336), v110, v109);
  uint64_t v59 = v105;
  ((void (*)(char *, uint64_t, uint64_t))v43)(v111, v96, v105);
  ((void (*)(char *, uint64_t *, uint64_t))v43)(v112, v95, v59);
  v60 = (int *)type metadata accessor for TrustedRequestConfiguration();
  uint64_t v61 = v60[21];
  uint64_t v62 = v124;
  v63 = (uint64_t *)(v124 + v60[20]);
  uint64_t v65 = *v63;
  v64 = (uint64_t *)v63[1];
  uint64_t v96 = v65;
  v90 = v64;
  uint64_t v66 = v60[22];
  v67 = (uint64_t *)(v124 + v60[23]);
  uint64_t v69 = *v67;
  uint64_t v68 = v67[1];
  uint64_t v93 = v69;
  uint64_t v89 = v68;
  v70 = *(uint64_t **)(v124 + v61 + 8);
  v95 = *(uint64_t **)(v124 + v61);
  v87 = v70;
  sub_10003282C(v124 + v66, v113, qword_100208CD0);
  uint64_t v92 = *(void *)(v62 + 72);
  uint64_t v86 = *(void *)(v62 + 80);
  int v91 = *(unsigned __int8 *)(v62 + v60[26]);
  v94(v108, v125, v123);
  uint64_t v71 = (uint64_t)v100;
  (*(void (**)(char *, uint64_t, uint64_t))(v101 + 16))(v100, v97, v102);
  uint64_t v72 = (uint64_t)v103;
  v56((uint64_t)v103, v57, v58);
  uint64_t v73 = (uint64_t)v104;
  v88((uint64_t)v104, v127, v126);
  sub_100003918(&qword_10020E6F0);
  uint64_t v102 = swift_allocObject();
  uint64_t v74 = v115;
  swift_retain();
  v75 = v107;
  sub_100016110((uint64_t)v107);
  swift_retain();
  sub_100016110((uint64_t)v75);
  v76 = v87;
  swift_bridgeObjectRetain();
  uint64_t v77 = v86;
  swift_bridgeObjectRetain();
  id v78 = v116;
  swift_retain();
  swift_retain();
  swift_retain();
  v79 = v90;
  swift_bridgeObjectRetain();
  uint64_t v80 = v89;
  swift_bridgeObjectRetain();
  uint64_t v81 = sub_10013967C(v111, v112, v96, v79, v93, v80, v95, v76, v113, v92, v77, v91, v108, v71, v72, v73, v74, (uint64_t)v75);
  (*(void (**)(uint64_t, uint64_t))(v121 + 8))(v110, v109);
  (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v127, v126);
  sub_10016290C(v119, (uint64_t (*)(void))type metadata accessor for TC2CloudAttestationVerifier);
  (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v125, v123);
  sub_10016290C(v124, (uint64_t (*)(void))type metadata accessor for TrustedRequestConfiguration);
  v82 = *(void (**)(uint64_t, uint64_t))(v99 + 8);
  uint64_t v83 = v105;
  v82(v106, v105);
  v82(v114, v83);
  *(void *)(v14 + *(void *)(*(void *)v14 + 344)) = v81;
  return v14;
}

void sub_100159BF4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a4;
  uint64_t v6 = a3;
  uint64_t v36 = 0;
  int64_t v7 = 0;
  uint64_t v39 = a3 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(a3 + 64);
  uint64_t v37 = (uint64_t *)(a5 + *(void *)(*(void *)a5 + 368));
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v44 = a4 + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v12 = v11 | (v7 << 6);
      goto LABEL_23;
    }
    int64_t v13 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    if (v13 >= v40) {
      goto LABEL_43;
    }
    unint64_t v14 = *(void *)(v39 + 8 * v13);
    ++v7;
    if (!v14)
    {
      int64_t v7 = v13 + 1;
      if (v13 + 1 >= v40) {
        goto LABEL_43;
      }
      unint64_t v14 = *(void *)(v39 + 8 * v7);
      if (!v14)
      {
        int64_t v7 = v13 + 2;
        if (v13 + 2 >= v40) {
          goto LABEL_43;
        }
        unint64_t v14 = *(void *)(v39 + 8 * v7);
        if (!v14) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v10 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v7 << 6);
LABEL_23:
    int64_t v42 = v7;
    uint64_t v16 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v12);
    uint64_t v17 = *v16;
    unint64_t v18 = v16[1];
    if (!*(void *)(v5 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_41;
    }
    sub_1001C1950();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001C0CB0();
    Swift::Int v19 = sub_1001C1990();
    uint64_t v20 = -1 << *(unsigned char *)(v5 + 32);
    unint64_t v21 = v19 & ~v20;
    if (((*(void *)(v44 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
      goto LABEL_41;
    }
    uint64_t v22 = *(void *)(a4 + 48);
    uint64_t v23 = (void *)(v22 + 16 * v21);
    BOOL v24 = *v23 == v17 && v23[1] == v18;
    if (v24 || (sub_1001C1840() & 1) != 0)
    {
LABEL_37:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(unint64_t *)((char *)a1 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      BOOL v28 = __OFADD__(v36++, 1);
      uint64_t v5 = a4;
      int64_t v7 = v42;
      if (v28) {
        goto LABEL_45;
      }
    }
    else
    {
      uint64_t v25 = ~v20;
      while (1)
      {
        unint64_t v21 = (v21 + 1) & v25;
        if (((*(void *)(v44 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          break;
        }
        uint64_t v26 = (void *)(v22 + 16 * v21);
        BOOL v27 = *v26 == v17 && v26[1] == v18;
        if (v27 || (sub_1001C1840() & 1) != 0) {
          goto LABEL_37;
        }
      }
LABEL_41:
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      uint64_t v29 = sub_1001C0330();
      os_log_type_t v30 = sub_1001C11F0();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v31 = swift_slowAlloc();
        v43[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v31 = 136315394;
        uint64_t v32 = *v37;
        unint64_t v33 = v37[1];
        swift_bridgeObjectRetain();
        *(void *)(v31 + 4) = sub_1000DF238(v32, v33, v43);
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v31 + 12) = 2080;
        swift_bridgeObjectRetain();
        *(void *)(v31 + 14) = sub_1000DF238(v17, v18, v43);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v29, v30, "%s found workload parameter not in allow list: %s", (uint8_t *)v31, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v6 = a3;
        swift_slowDealloc();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_release_n();
      }

      uint64_t v5 = a4;
      int64_t v7 = v42;
    }
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v40)
  {
LABEL_43:
    sub_100020870(a1, a2, v36, v6);
    return;
  }
  unint64_t v14 = *(void *)(v39 + 8 * v15);
  if (v14)
  {
    int64_t v7 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v7 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v7 >= v40) {
      goto LABEL_43;
    }
    unint64_t v14 = *(void *)(v39 + 8 * v7);
    ++v15;
    if (v14) {
      goto LABEL_22;
    }
  }
LABEL_46:
  __break(1u);
}

uint64_t sub_10015A0C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v7 = *(unsigned char *)(a1 + 32);
  unsigned int v8 = v7 & 0x3F;
  unint64_t v9 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v10 = 8 * v9;
  swift_bridgeObjectRetain_n();
  uint64_t isStackAllocationSafe = swift_retain_n();
  if (v8 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe, v12);
    bzero((char *)&v18 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100159BF4((unint64_t *)((char *)&v18 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0)), v9, a1, a2, a3);
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    swift_release();
    if (v3) {
      swift_willThrow();
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    int64_t v15 = (void *)swift_slowAlloc();
    bzero(v15, v10);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100159BF4((unint64_t *)v15, v9, a1, a2, a3);
    uint64_t v14 = v16;
    swift_bridgeObjectRelease();
    swift_release();
    swift_slowDealloc();
    swift_release();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_bridgeObjectRelease();
  return v14;
}

void *sub_10015A2E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v18 = a2;
  uint64_t v5 = type metadata accessor for ValidatedAttestationOrAttestation();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8, v7);
  unint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a1 + 16);
  unint64_t v11 = _swiftEmptyArrayStorage;
  if (v10)
  {
    Swift::Int v19 = _swiftEmptyArrayStorage;
    sub_10018F1D0(0, v10, 0);
    unint64_t v11 = v19;
    uint64_t v12 = *(void *)(type metadata accessor for Proto_Ropes_Common_Attestation(0) - 8);
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    uint64_t v14 = *(void *)(v12 + 72);
    while (1)
    {
      sub_100124F10(v13, v18, (uint64_t)v9);
      if (v3) {
        break;
      }
      uint64_t v3 = 0;
      Swift::Int v19 = v11;
      unint64_t v16 = v11[2];
      unint64_t v15 = v11[3];
      if (v16 >= v15 >> 1)
      {
        sub_10018F1D0(v15 > 1, v16 + 1, 1);
        unint64_t v11 = v19;
      }
      v11[2] = v16 + 1;
      sub_1001627E8((uint64_t)v9, (uint64_t)v11+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v16, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
      v13 += v14;
      if (!--v10) {
        return v11;
      }
    }
    swift_release();
  }
  return v11;
}

void *sub_10015A4D8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_100003918(&qword_100209380);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for RateLimitConfiguration(0);
  uint64_t v9 = *(void *)(v30 - 8);
  uint64_t v11 = __chkstk_darwin(v30, v10);
  uint64_t v29 = (uint64_t)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v13);
  uint64_t v28 = (uint64_t)v25 - v14;
  uint64_t v15 = *(void *)(a1 + 16);
  if (!v15) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v16 = *(void *)(type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration(0) - 8);
  uint64_t v17 = a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  uint64_t v26 = v9;
  uint64_t v18 = (unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  uint64_t v19 = *(void *)(v16 + 72);
  v25[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v20 = _swiftEmptyArrayStorage;
  uint64_t v27 = a2;
  do
  {
    sub_100125310(v17, a2, (uint64_t)v8);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v20;
    }
    if ((*v18)(v8, 1, v30) == 1)
    {
      sub_100010360((uint64_t)v8, &qword_100209380);
    }
    else
    {
      uint64_t v21 = v28;
      sub_1001627E8((uint64_t)v8, v28, type metadata accessor for RateLimitConfiguration);
      sub_1001627E8(v21, v29, type metadata accessor for RateLimitConfiguration);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v20 = (void *)sub_1000E3C5C(0, v20[2] + 1, 1, (unint64_t)v20);
      }
      unint64_t v23 = v20[2];
      unint64_t v22 = v20[3];
      if (v23 >= v22 >> 1) {
        uint64_t v20 = (void *)sub_1000E3C5C(v22 > 1, v23 + 1, 1, (unint64_t)v20);
      }
      v20[2] = v23 + 1;
      sub_1001627E8(v29, (uint64_t)v20+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(void *)(v26 + 72) * v23, type metadata accessor for RateLimitConfiguration);
      a2 = v27;
    }
    v17 += v19;
    --v15;
  }
  while (v15);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_10015A7F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[9] = a8;
  v8[10] = v12;
  v8[7] = a6;
  v8[8] = a7;
  v8[5] = a4;
  v8[6] = a5;
  v8[3] = a2;
  v8[4] = a3;
  int64x2_t v8[2] = a1;
  uint64_t v9 = sub_1001C03B0();
  v8[11] = v9;
  v8[12] = *(void *)(v9 - 8);
  v8[13] = swift_task_alloc();
  return _swift_task_switch(sub_10015A8CC, 0, 0);
}

uint64_t sub_10015A8CC()
{
  sub_100115DFC(v0[3], v0[4], v0[5], v0[13]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[14] = (uint64_t)v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10015A9D4;
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[8];
  uint64_t v7 = v0[5];
  uint64_t v8 = v0[6];
  return sub_1001171B4(v2, v7, v8, v5, v6, v3, v4);
}

uint64_t sub_10015A9D4()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10015AB64;
  }
  else {
    uint64_t v2 = sub_10015AAE8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10015AAE8()
{
  (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_10015AB64()
{
  (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
  uint64_t v1 = v0[15];
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v2(v1, 1);
}

void *sub_10015ABE8(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a2;
  uint64_t v3 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping(0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = _swiftEmptyArrayStorage;
  if (v8)
  {
    uint64_t v20 = _swiftEmptyArrayStorage;
    sub_10018F20C(0, v8, 0);
    uint64_t v10 = *(void *)(type metadata accessor for ValidatedAttestationOrAttestation() - 8);
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v18 = *(void *)(v10 + 72);
    uint64_t v12 = sub_1001627A0(&qword_10020A680, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping);
    v17[1] = v12;
    do
    {
      __chkstk_darwin(v12, v13);
      v17[-2] = v19;
      v17[-1] = v11;
      sub_1001C0060();
      uint64_t v9 = v20;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10018F20C(0, v9[2] + 1, 1);
        uint64_t v9 = v20;
      }
      unint64_t v15 = v9[2];
      unint64_t v14 = v9[3];
      if (v15 >= v14 >> 1)
      {
        sub_10018F20C(v14 > 1, v15 + 1, 1);
        uint64_t v9 = v20;
      }
      v9[2] = v15 + 1;
      uint64_t v12 = sub_1001627E8((uint64_t)v7, (uint64_t)v9+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v15, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping);
      v11 += v18;
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_10015AE7C(uint64_t a1, void (*a2)(void), unint64_t *a3, void (*a4)(uint64_t))
{
  a2(0);
  sub_1001627A0(a3, a4);
  uint64_t result = sub_1001C0000();
  if (!v4)
  {
    unint64_t v9 = v8;
    uint64_t v10 = result;
    switch(v8 >> 62)
    {
      case 1uLL:
        LODWORD(v15) = HIDWORD(result) - result;
        if (__OFSUB__(HIDWORD(result), result)) {
          goto LABEL_22;
        }
        unint64_t v15 = (int)v15;
LABEL_10:
        if ((v15 & 0x8000000000000000) != 0 || HIDWORD(v15))
        {
          sub_1001C1570();
          __break(1u);
          JUMPOUT(0x10015B108);
        }
        unsigned int v18 = bswap32(v15);
        long long v20 = xmmword_1001CB200;
        if (v8 >> 62 != 2) {
          goto LABEL_16;
        }
        uint64_t v17 = *(void *)(result + 16);
        uint64_t v16 = *(void *)(result + 24);
        BOOL v14 = __OFSUB__(v16, v17);
        uint64_t v11 = v16 - v17;
        if (!v14) {
          goto LABEL_18;
        }
        __break(1u);
LABEL_16:
        LODWORD(v11) = HIDWORD(result) - result;
        if (__OFSUB__(HIDWORD(result), result)) {
          goto LABEL_23;
        }
        uint64_t v11 = (int)v11;
LABEL_18:
        if (__OFADD__(v11, 4))
        {
          __break(1u);
LABEL_22:
          __break(1u);
LABEL_23:
          __break(1u);
        }
        sub_1001BF120(v11 + 4);
        v19[3] = &type metadata for UnsafeRawBufferPointer;
        v19[4] = &protocol witness table for UnsafeRawBufferPointer;
        v19[0] = &v18;
        v19[1] = v19;
        sub_10000D934(v19, (uint64_t)&type metadata for UnsafeRawBufferPointer);
        sub_1001BF130();
        sub_100003E90((uint64_t)v19);
        sub_1001BF1B0();
        sub_10000792C(v10, v9);
        uint64_t result = v20;
        break;
      case 2uLL:
        uint64_t v13 = *(void *)(result + 16);
        uint64_t v12 = *(void *)(result + 24);
        BOOL v14 = __OFSUB__(v12, v13);
        unint64_t v15 = v12 - v13;
        if (!v14) {
          goto LABEL_10;
        }
        __break(1u);
LABEL_7:
        uint64_t v11 = 0;
        unsigned int v18 = 0;
        long long v20 = xmmword_1001CB200;
        goto LABEL_18;
      case 3uLL:
        goto LABEL_7;
      default:
        unsigned int v18 = (v8 >> 24) & 0xFF000000;
        long long v20 = xmmword_1001CB200;
        uint64_t v11 = BYTE6(v8);
        goto LABEL_18;
    }
  }
  return result;
}

uint64_t sub_10015B118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[5] = a2;
  v3[6] = a3;
  v3[4] = a1;
  type metadata accessor for ValidatedAttestation();
  v3[7] = swift_task_alloc();
  v3[8] = type metadata accessor for ValidatedAttestationOrAttestation();
  v3[9] = swift_task_alloc();
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  return _swift_task_switch(sub_10015B1F8, 0, 0);
}

uint64_t sub_10015B1F8()
{
  sub_100161F3C(v0[5], v0[11], (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v2 = (uint64_t *)v0[11];
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v4 = *v2;
    uint64_t v3 = v2[1];
    sub_100007918(v2[2], v2[3]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = (uint64_t *)v0[7];
    sub_1001627E8((uint64_t)v2, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
    uint64_t v4 = *v5;
    uint64_t v3 = v5[1];
    swift_bridgeObjectRetain();
    sub_10016290C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
  }
  v0[12] = v3;
  uint64_t v6 = v0[4];
  uint64_t v7 = (void *)swift_task_alloc();
  v0[13] = v7;
  v7[2] = v6;
  v7[3] = v4;
  v7[4] = v3;
  unint64_t v8 = (void *)swift_task_alloc();
  v0[14] = v8;
  int64x2_t v8[2] = v6;
  v8[3] = v4;
  v8[4] = v3;
  unint64_t v9 = (void *)swift_task_alloc();
  v0[15] = v9;
  void *v9 = v0;
  v9[1] = sub_10015B3E4;
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v9, &unk_10020E428, v7, sub_1001610F0, v8, 0, 0, (char *)&type metadata for () + 8);
}

uint64_t sub_10015B3E4()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10015B5A0;
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = sub_10015B508;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10015B508()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_10015B5A0()
{
  unint64_t v23 = v0;
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[5];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_100161F3C(v2, v1, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
  swift_retain_n();
  uint64_t v3 = sub_1001C0330();
  os_log_type_t v4 = sub_1001C11E0();
  BOOL v5 = os_log_type_enabled(v3, v4);
  uint64_t v6 = v0[10];
  if (v5)
  {
    os_log_type_t v21 = v4;
    uint64_t v7 = v0[9];
    uint64_t v8 = v0[6];
    uint64_t v9 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v10 = (uint64_t *)(v8 + *(void *)(*(void *)v8 + 368));
    uint64_t v11 = *v10;
    unint64_t v12 = v10[1];
    swift_bridgeObjectRetain();
    v0[2] = sub_1000DF238(v11, v12, &v22);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v9 + 12) = 2080;
    sub_100161F3C(v6, v7, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    BOOL v14 = (uint64_t *)v0[9];
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v16 = *v14;
      unint64_t v15 = v14[1];
      sub_100007918(v14[2], v14[3]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v17 = (uint64_t *)v0[7];
      sub_1001627E8((uint64_t)v14, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
      uint64_t v16 = *v17;
      unint64_t v15 = v17[1];
      swift_bridgeObjectRetain();
      sub_10016290C((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
    }
    uint64_t v18 = v0[10];
    v0[3] = sub_1000DF238(v16, v15, &v22);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    sub_10016290C(v18, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
    _os_log_impl((void *)&_mh_execute_header, v3, v21, "%s cancelled node stream %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();

    swift_release_n();
    sub_10016290C(v6, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(uint64_t))v0[1];
  return v19(1);
}

uint64_t sub_10015B954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[22] = a5;
  v6[23] = a6;
  v6[20] = a3;
  v6[21] = a4;
  v6[18] = a1;
  v6[19] = a2;
  uint64_t v7 = sub_100003918(&qword_10020E340);
  v6[24] = v7;
  v6[25] = *(void *)(v7 - 8);
  v6[26] = swift_task_alloc();
  v6[27] = type metadata accessor for ValidatedAttestationOrAttestation();
  v6[28] = swift_task_alloc();
  v6[29] = swift_task_alloc();
  v6[30] = swift_task_alloc();
  v6[31] = swift_task_alloc();
  v6[32] = type metadata accessor for ValidatedAttestation();
  v6[33] = swift_task_alloc();
  v6[34] = swift_task_alloc();
  return _swift_task_switch(sub_10015BAB8, 0, 0);
}

uint64_t sub_10015BAB8()
{
  uint64_t v43 = v0;
  sub_100161F3C(*(void *)(v0 + 144), *(void *)(v0 + 248), (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v2 = *(void **)(v0 + 248);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v3 = v2[2];
    unint64_t v4 = v2[3];
    uint64_t v5 = v2[12];
    swift_bridgeObjectRelease();
    sub_100007918(v3, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((char *)v2 + *(int *)(sub_100003918(&qword_100208188) + 48));
    sub_10016290C((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
  }
  *(void *)(v0 + 280) = v5;
  sub_100161F3C(*(void *)(v0 + 144), *(void *)(v0 + 240), (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = *(void *)(v0 + 232);
    uint64_t v7 = *(_OWORD **)(v0 + 240);
    uint64_t v8 = *(void *)(v0 + 144);
    long long v9 = v7[1];
    *(_OWORD *)(v0 + 16) = *v7;
    *(_OWORD *)(v0 + 32) = v9;
    long long v10 = v7[5];
    long long v12 = v7[2];
    long long v11 = v7[3];
    *(_OWORD *)(v0 + 80) = v7[4];
    *(_OWORD *)(v0 + 96) = v10;
    *(_OWORD *)(v0 + 48) = v12;
    *(_OWORD *)(v0 + 64) = v11;
    sub_100161F3C(v8, v6, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
    swift_retain_n();
    uint64_t v13 = sub_1001C0330();
    os_log_type_t v14 = sub_1001C1200();
    if (os_log_type_enabled(v13, v14))
    {
      os_log_type_t v39 = v14;
      log = v13;
      uint64_t v37 = *(void *)(v0 + 232);
      uint64_t v38 = *(void *)(v0 + 224);
      uint64_t v15 = *(void *)(v0 + 152);
      uint64_t v16 = swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136315394;
      uint64_t v17 = (uint64_t *)(v15 + *(void *)(*(void *)v15 + 368));
      uint64_t v19 = *v17;
      unint64_t v18 = v17[1];
      swift_bridgeObjectRetain();
      *(void *)(v0 + 128) = sub_1000DF238(v19, v18, &v42);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v16 + 12) = 2048;
      sub_100161F3C(v37, v38, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
      int v20 = swift_getEnumCaseMultiPayload();
      os_log_type_t v21 = *(void **)(v0 + 224);
      if (v20 == 1)
      {
        uint64_t v22 = v21[2];
        unint64_t v23 = v21[3];
        uint64_t v24 = v21[12];
        swift_bridgeObjectRelease();
        sub_100007918(v22, v23);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v24 = *(void *)((char *)v21 + *(int *)(sub_100003918(&qword_100208188) + 48));
        sub_10016290C((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
      }
      sub_10016290C(*(void *)(v0 + 232), (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
      *(void *)(v0 + 136) = v24;
      sub_1001C1310();
      _os_log_impl((void *)&_mh_execute_header, log, v39, "%s verifying attestation for context %llu", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10016290C(*(void *)(v0 + 232), (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);

      swift_release_n();
    }
    uint64_t v30 = *(void *)(v0 + 152);
    uint64_t v31 = *(void *)(v0 + 16);
    uint64_t v32 = *(void *)(v0 + 24);
    uint64_t v33 = swift_task_alloc();
    *(void *)(v0 + 312) = v33;
    *(void *)(v33 + 16) = v30;
    *(void *)(v33 + 24) = v0 + 16;
    loga = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10020E358
                                                                               + dword_10020E358);
    uint64_t v34 = (void *)swift_task_alloc();
    *(void *)(v0 + 320) = v34;
    *uint64_t v34 = v0;
    v34[1] = sub_10015C354;
    uint64_t v35 = *(void *)(v0 + 264);
    return loga(v35, v31, v32, (uint64_t)&unk_10020E350, v33);
  }
  else
  {
    sub_1001627E8(*(void *)(v0 + 240), *(void *)(v0 + 272), (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
    uint64_t v25 = swift_task_alloc();
    *(void *)(v0 + 288) = v25;
    *(void *)uint64_t v25 = v0;
    *(void *)(v25 + 8) = sub_10015C078;
    uint64_t v27 = *(void *)(v0 + 272);
    uint64_t v26 = *(void *)(v0 + 280);
    uint64_t v28 = *(void *)(v0 + 152);
    long long v29 = *(_OWORD *)(v0 + 168);
    *(void *)(v25 + 64) = *(void *)(v0 + 184);
    *(void *)(v25 + 72) = v28;
    *(_OWORD *)(v25 + 48) = v29;
    *(void *)(v25 + 32) = v27;
    *(void *)(v25 + 40) = v26;
    return _swift_task_switch(sub_10012ED88, 0, 0);
  }
}

uint64_t sub_10015C078(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 296) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_10015C27C;
  }
  else
  {
    *(void *)(v4 + 304) = a1;
    uint64_t v5 = sub_10015C1A0;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10015C1A0()
{
  sub_10016290C(v0[34], (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
  uint64_t v1 = v0[38];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  return v2(v1);
}

uint64_t sub_10015C27C()
{
  sub_10016290C(*(void *)(v0 + 272), (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10015C354()
{
  *(void *)(*(void *)v1 + 328) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10015C5E0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_10015C470;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10015C470()
{
  uint64_t v1 = *(void *)(v0 + 272);
  uint64_t v2 = *(void *)(v0 + 256);
  sub_1001627E8(*(void *)(v0 + 264), v1, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
  uint64_t v3 = (void *)(v1 + *(int *)(v2 + 28));
  uint64_t v4 = v3[1];
  if (v4)
  {
    *(void *)(v0 + 112) = *v3;
    uint64_t v6 = *(void *)(v0 + 200);
    uint64_t v5 = *(void *)(v0 + 208);
    uint64_t v7 = *(void *)(v0 + 192);
    *(void *)(v0 + 120) = v4;
    swift_bridgeObjectRetain();
    sub_100003918(&qword_10020E268);
    sub_1001C0FE0();
    sub_1001609D0(v0 + 16);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  else
  {
    sub_1001609D0(v0 + 16);
  }
  uint64_t v8 = swift_task_alloc();
  *(void *)(v0 + 288) = v8;
  *(void *)uint64_t v8 = v0;
  *(void *)(v8 + 8) = sub_10015C078;
  uint64_t v10 = *(void *)(v0 + 272);
  uint64_t v9 = *(void *)(v0 + 280);
  uint64_t v11 = *(void *)(v0 + 152);
  long long v12 = *(_OWORD *)(v0 + 168);
  *(void *)(v8 + 64) = *(void *)(v0 + 184);
  *(void *)(v8 + 72) = v11;
  *(_OWORD *)(v8 + 48) = v12;
  *(void *)(v8 + 32) = v10;
  *(void *)(v8 + 40) = v9;
  return _swift_task_switch(sub_10012ED88, 0, 0);
}

uint64_t sub_10015C5E0()
{
  uint64_t v1 = *(void *)(v0 + 328);
  swift_task_dealloc();
  sub_1001609D0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_10015C6B4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1001C10D0();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_100101F08(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

void sub_10015C74C()
{
}

uint64_t sub_10015C77C()
{
  _Block_release(*(const void **)(v0 + 16));
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10015C7B4(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_10015C7CC()
{
  swift_unknownObjectRelease();

  sub_10000792C(*(void *)(v0 + 40), *(void *)(v0 + 48));
  swift_release();
  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10015C81C()
{
  long long v6 = *(_OWORD *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 56);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_1000A12C8;
  *(_OWORD *)(v3 + 40) = v4;
  *(void *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v6;
  return _swift_task_switch(sub_100152494, 0, 0);
}

_OWORD *sub_10015C8E8(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_10015C8FC()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_1000A12C8;
  *(void *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  return _swift_task_switch(sub_100152090, 0, 0);
}

uint64_t sub_10015C9B4()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_1000A12C8;
  *(void *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  return _swift_task_switch(sub_100151C84, 0, 0);
}

uint64_t sub_10015CA68()
{
  return sub_1001A1ED0(*(void *)(v0 + 16));
}

uint64_t sub_10015CA74()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_1000A12C8;
  *(void *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  return _swift_task_switch(sub_100151944, 0, 0);
}

uint64_t sub_10015CB28()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 136, 7);
}

uint64_t sub_10015CB88()
{
  long long v10 = *(_OWORD *)(v0 + 48);
  long long v11 = *(_OWORD *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 88);
  long long v8 = *(_OWORD *)(v0 + 96);
  long long v9 = *(_OWORD *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v0 + 120);
  *(void *)(v1 + 16) = v5;
  *(void *)uint64_t v5 = v1;
  *(void *)(v5 + 8) = sub_1000074CC;
  *(_OWORD *)(v5 + 104) = v6;
  *(void *)(v5 + 96) = v4;
  *(_OWORD *)(v5 + 80) = v8;
  *(void *)(v5 + 64) = v2;
  *(void *)(v5 + 72) = v3;
  *(_OWORD *)(v5 + 32) = v10;
  *(_OWORD *)(v5 + 48) = v9;
  *(_OWORD *)(v5 + 16) = v11;
  return _swift_task_switch(sub_100151440, 0, 0);
}

void sub_10015CC88(uint64_t a1, unint64_t a2)
{
  sub_1001A1E64(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_10015CC90()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_10015CCE8()
{
  long long v7 = *(_OWORD *)(v0 + 48);
  long long v8 = *(_OWORD *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 64);
  char v3 = *(unsigned char *)(v0 + 72);
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v0 + 80);
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_1000A12C8;
  *(_OWORD *)(v4 + 56) = v5;
  *(unsigned char *)(v4 + 96) = v3;
  *(void *)(v4 + 48) = v2;
  *(_OWORD *)(v4 + 16) = v8;
  *(_OWORD *)(v4 + 32) = v7;
  return _swift_task_switch(sub_100150E90, 0, 0);
}

uint64_t sub_10015CDC4()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_10015CE1C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  char v6 = *(unsigned char *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  uint64_t v9 = *(void *)(v1 + 56);
  uint64_t v10 = *(void *)(v1 + 64);
  long long v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_1000A12C8;
  return sub_10015059C(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_10015CF1C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000166C8(&qword_10020BFE8);
    sub_1001627A0(a2, (void (*)(uint64_t))&type metadata accessor for TrustedCloudComputeRateLimit);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10015CFB4()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_1000A12C8;
  *(void *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  return _swift_task_switch(sub_10015009C, 0, 0);
}

void sub_10015D06C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  isa = sub_1001C0DE0().super.isa;
  (*(void (**)(uint64_t, objc_class *))(v1 + 16))(v1, isa);
}

uint64_t sub_10015D0D0()
{
  swift_unknownObjectRelease();

  swift_release();
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10015D118()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_1000A12C8;
  *(void *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  return _swift_task_switch(sub_10014FAEC, 0, 0);
}

uint64_t sub_10015D1CC()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_10015D224()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v0 + 48);
  long long v6 = *(_OWORD *)(v0 + 64);
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_1000A12C8;
  *(_OWORD *)(v4 + 32) = v5;
  *(_OWORD *)(v4 + 48) = v6;
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v3;
  return _swift_task_switch(sub_10014F3A0, 0, 0);
}

void *sub_10015D2E0(void *a1)
{
  unint64_t v2 = a1[2];
  uint64_t v3 = a1[6];
  unint64_t v4 = a1[7];
  swift_bridgeObjectRelease();
  sub_10002CA34(v2);
  swift_bridgeObjectRelease();
  sub_100007918(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10015D388(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  switch(a4 >> 61)
  {
    case 0uLL:
      goto LABEL_4;
    case 1uLL:
      swift_release();
      goto LABEL_4;
    case 2uLL:
      swift_bridgeObjectRelease();
LABEL_4:
      uint64_t result = swift_release();
      break;
    case 3uLL:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 4uLL:
      uint64_t result = swift_errorRelease();
      break;
    default:
      return result;
  }
  return result;
}

void sub_10015D45C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_10014D6EC(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_10015D464()
{
  uint64_t v1 = (int *)type metadata accessor for TrustedRequestConfiguration();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v18 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v19 = sub_1001BF950();
  uint64_t v3 = *(void *)(v19 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v17 = *(void *)(v3 + 64);
  uint64_t v5 = sub_1001BF310();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v16 = *(void *)(v6 + 64);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  uint64_t v8 = v0 + ((v2 + 48) & ~v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = v8 + v1[14];
  uint64_t v10 = sub_1001BF0B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = v8 + v1[22];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v5);
  }
  uint64_t v12 = v2 | v4 | v7 | 7;
  uint64_t v13 = (((v2 + 48) & ~v2) + v18 + v4) & ~v4;
  uint64_t v14 = (v13 + v17 + v7) & ~v7;
  swift_bridgeObjectRelease();
  sub_10000792C(*(void *)(v8 + v1[25]), *(void *)(v8 + v1[25] + 8));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v13, v19);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v14, v5);
  return _swift_deallocObject(v0, v14 + v16, v12);
}

uint64_t sub_10015D77C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for TrustedRequestConfiguration() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(sub_1001BF950() - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(sub_1001BF310() - 8) + 80);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = v1[2];
  uint64_t v13 = v1[3];
  uint64_t v14 = v1[4];
  uint64_t v15 = v1[5];
  uint64_t v16 = (uint64_t)v1 + v5;
  uint64_t v17 = (uint64_t)v1 + v8;
  uint64_t v18 = (uint64_t)v1 + (v11 & ~v10);
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v19;
  *uint64_t v19 = v2;
  v19[1] = sub_1000A12C8;
  return sub_100152A5C(a1, v12, v13, v14, v15, v16, v17, v18);
}

uint64_t sub_10015D944(uint64_t a1, uint64_t a2)
{
  return sub_10015DAB0(a1, a2, (uint64_t (*)(uint64_t, void, void, unsigned char *))sub_1001534B0);
}

uint64_t sub_10015D970@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100138604(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
  if (!v3) {
    *a2 = result & 1;
  }
  return result;
}

void sub_10015D9B4(uint64_t a1)
{
}

unint64_t sub_10015D9EC()
{
  unint64_t result = qword_10020E0D0;
  if (!qword_10020E0D0)
  {
    sub_1000166C8(&qword_10020E0C8);
    sub_100016710(&qword_10020E0D8, qword_10020CE78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020E0D0);
  }
  return result;
}

uint64_t sub_10015DA84(uint64_t a1, uint64_t a2)
{
  return sub_10015DAB0(a1, a2, (uint64_t (*)(uint64_t, void, void, unsigned char *))sub_1001550E8);
}

uint64_t sub_10015DAB0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, void, void, unsigned char *))
{
  return a3(a1, *(void *)(v3 + 16), *(void *)(v3 + 24), v5);
}

uint64_t sub_10015DAEC(uint64_t a1)
{
  return sub_100156A7C(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_10015DB10()
{
  unint64_t result = qword_10020E140;
  if (!qword_10020E140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10020E140);
  }
  return result;
}

unint64_t sub_10015DB68()
{
  unint64_t result = qword_100208948;
  if (!qword_100208948)
  {
    sub_1000166C8(&qword_100208930);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100208948);
  }
  return result;
}

uint64_t sub_10015DBD4()
{
  return sub_100146A54();
}

uint64_t sub_10015DBF4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v11 = *(void *)(v4 + 16);
  uint64_t v10 = *(void *)(v4 + 24);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v12;
  *uint64_t v12 = v5;
  v12[1] = sub_1000074CC;
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t))((char *)&dword_10020E170
                                                                                       + dword_10020E170);
  return v13(a1, a2, a3, a4, v11, v10);
}

uint64_t sub_10015DCD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *(int **)(v4 + 16);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  void *v11 = v5;
  v11[1] = sub_1000A12C8;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, int *))((char *)&dword_10020C040 + dword_10020C040);
  return v12(a1, a2, a3, a4, v10);
}

uint64_t sub_10015DDB4(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1000A12C8;
  v4[8] = a1;
  v4[9] = v1;
  return _swift_task_switch(sub_100113AEC, 0, 0);
}

uint64_t sub_10015DE60()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10015DE98(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000A12C8;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_10020E1B8 + dword_10020E1B8);
  return v6(a1, v4);
}

uint64_t sub_10015DF50(uint64_t a1)
{
  return sub_100141734(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_10015DF8C(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_10015DF98()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000A12C8;
  uint64_t v2 = (char *)&dword_10020E1E8 + dword_10020E1E8;
  __asm { BR              X9; sub_100156D7C }
}

uint64_t *sub_10015E0B0(uint64_t *a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v7 = a1[5];
  a2(*a1, a1[1]);
  a2(v4, v5);
  a2(v6, v7);
  return a1;
}

uint64_t sub_10015E120()
{
  uint64_t v1 = (int *)(type metadata accessor for NWAsyncConnection.Inbound(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 104) & ~v2;
  unint64_t v4 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = sub_100003918(&qword_10020E198);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v4 + v7 + 8) & ~v7;
  unint64_t v12 = ((((*(void *)(v6 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v13 = v2 | v7 | 7;
  swift_unknownObjectRelease();
  swift_release();
  sub_10000792C(*(void *)(v0 + 40), *(void *)(v0 + 48));
  sub_10000792C(*(void *)(v0 + 56), *(void *)(v0 + 64));
  sub_10000792C(*(void *)(v0 + 72), *(void *)(v0 + 80));
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v9 = v0 + v3 + v1[7];
  uint64_t v10 = sub_1001C0340();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v8, v5);
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, v12, v13);
}

void sub_10015E320()
{
  type metadata accessor for NWAsyncConnection.Inbound(0);
  sub_100003918(&qword_10020E198);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000A12C8;
  uint64_t v2 = (char *)&dword_10020E208 + dword_10020E208;
  __asm { BR              X9; sub_100156FA0 }
}

uint64_t sub_10015E508()
{
  uint64_t v1 = (int *)(type metadata accessor for NWAsyncConnection.OHTTPStreamFactory(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (((((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v6 = (id *)(v0 + v3);

  swift_release();
  swift_release();
  uint64_t v7 = (char *)v6 + v1[9];
  uint64_t v8 = sub_1001BF310();
  (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_release();
  swift_release();
  uint64_t v9 = v0 + v5;
  sub_10000792C(*(void *)(v0 + v5), *(void *)(v0 + v5 + 8));
  sub_10000792C(*(void *)(v9 + 16), *(void *)(v9 + 24));
  sub_10000792C(*(void *)(v9 + 32), *(void *)(v9 + 40));
  return _swift_deallocObject(v0, v5 + 48, v4);
}

uint64_t sub_10015E66C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for NWAsyncConnection.OHTTPStreamFactory(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = v1[2];
  uint64_t v9 = v1[3];
  uint64_t v10 = v1[4];
  uint64_t v11 = (uint64_t)v1 + v5;
  uint64_t v12 = *(void *)((char *)v1 + v6);
  uint64_t v13 = *(void *)((char *)v1 + v7);
  uint64_t v14 = (uint64_t)v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v15;
  void *v15 = v2;
  v15[1] = sub_1000A12C8;
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10020E218 + dword_10020E218);
  return v16(a1, v8, v9, v10, v11, v12, v13, v14);
}

uint64_t sub_10015E7D4()
{
  uint64_t v1 = sub_100003918(&qword_10020E1A0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (int *)(type metadata accessor for NWAsyncConnection.OHTTPStreamFactory(0) - 8);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)v6 + 80);
  uint64_t v8 = (v5 + v7 + 8) & ~v7;
  uint64_t v9 = v8 + *(void *)(*(void *)v6 + 64);
  uint64_t v10 = v3 | v7 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  swift_release();
  swift_release();
  uint64_t v11 = v0 + v8 + v6[9];
  uint64_t v12 = sub_1001BF310();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  return _swift_deallocObject(v0, v9, v10);
}

uint64_t sub_10015E98C(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(sub_100003918(&qword_10020E1A0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(type metadata accessor for NWAsyncConnection.OHTTPStreamFactory(0) - 8);
  unint64_t v9 = (v7 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v1[2];
  uint64_t v11 = v1[3];
  uint64_t v12 = v1[4];
  uint64_t v13 = (uint64_t)v1 + v6;
  uint64_t v14 = *(void *)((char *)v1 + v7);
  uint64_t v15 = (uint64_t)v1 + v9;
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v16;
  void *v16 = v3;
  v16[1] = sub_1000A12C8;
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10020E228
                                                                                              + dword_10020E228);
  return v17(a1, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_10015EB18()
{
  swift_unknownObjectRelease();
  sub_100003E90(v0 + 32);
  swift_release();
  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_10015EB60(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  unint64_t v6 = v1 + 4;
  uint64_t v7 = v1[9];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000A12C8;
  unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void *, uint64_t))((char *)&dword_10020E238 + dword_10020E238);
  return v9(a1, v4, v5, v6, v7);
}

uint64_t sub_10015EC30(uint64_t result, unsigned __int8 a2)
{
  if (a2 <= 0xFDu) {
    return sub_100010664(result, a2);
  }
  return result;
}

uint64_t sub_10015EC44(uint64_t result, unsigned __int8 a2)
{
  if (a2 <= 0xFDu) {
    return sub_100010698(result, a2);
  }
  return result;
}

uint64_t sub_10015EC58(uint64_t a1, uint64_t a2)
{
  v2[7] = a2;
  uint64_t v4 = sub_1001C05B0();
  v2[8] = v4;
  v2[9] = *(void *)(v4 - 8);
  v2[10] = swift_task_alloc();
  v2[5] = type metadata accessor for NWAsyncConnection.OHTTPStreamFactory(0);
  v2[6] = (uint64_t)&off_100200D00;
  uint64_t v5 = sub_10000395C(v2 + 2);
  sub_100161F3C(a1, (uint64_t)v5, type metadata accessor for NWAsyncConnection.OHTTPStreamFactory);
  return _swift_task_switch(sub_10015ED5C, 0, 0);
}

uint64_t sub_10015ED5C()
{
  sub_10000D934(v0 + 2, v0[5]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[11] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10015EDF8;
  return sub_10019C210();
}

uint64_t sub_10015EDF8()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10015F100;
  }
  else {
    uint64_t v2 = sub_10015EF0C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10015EF0C()
{
  v0[13] = *(void *)(v0[7] + *(void *)(*(void *)v0[7] + 344));
  sub_100119838();
  v0[14] = sub_10000D934(v0 + 2, v0[5]);
  uint64_t v3 = (uint64_t (*)(void))((char *)&dword_10020EE28 + dword_10020EE28);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[15] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10015EFEC;
  return v3();
}

uint64_t sub_10015EFEC()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10015F468;
  }
  else {
    uint64_t v2 = sub_10015F1B0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10015F100()
{
  sub_100119C20(*(void *)(v0 + 96));
  swift_errorRelease();
  sub_100003E90(v0 + 16);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void, uint64_t))(v0 + 8);
  return v1(0, 192);
}

uint64_t sub_10015F1B0()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = swift_task_alloc();
  v0[17] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[18] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10015F29C;
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[8];
  return withCheckedContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000019, 0x80000001001C6670, sub_10015F518, v2, v5);
}

uint64_t sub_10015F29C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_10015F3B4, 0, 0);
}

uint64_t sub_10015F3B4()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[8];
  sub_100119A28(v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_100003E90((uint64_t)(v0 + 2));
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void, uint64_t))v0[1];
  return v4(0, 192);
}

uint64_t sub_10015F468()
{
  sub_100119C20(*(void *)(v0 + 128));
  swift_errorRelease();
  sub_100003E90(v0 + 16);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void, uint64_t))(v0 + 8);
  return v1(0, 192);
}

uint64_t sub_10015F518(uint64_t a1)
{
  return sub_10019C7D0(a1);
}

uint64_t sub_10015F520(uint64_t a1, uint64_t a2)
{
  return sub_100160F4C(a1, a2, (uint64_t (*)(uint64_t, void, void, void, unsigned char *))sub_10013D968);
}

uint64_t sub_10015F54C(void *a1)
{
  return sub_100157848(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10015F56C(void *a1)
{
  return sub_100157720(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10015F590()
{
  uint64_t v1 = sub_100003918(&qword_10020E270);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10015F638()
{
  uint64_t v2 = *(void *)(sub_100003918(&qword_10020E270) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = v0 + v3;
  uint64_t v5 = *(void *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *unint64_t v6 = v1;
  v6[1] = sub_1000A12C8;
  return sub_10012AE0C(v4, v5);
}

uint64_t sub_10015F738(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000A12C8;
  unint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_10020E288 + dword_10020E288);
  return v6(a1, v4);
}

uint64_t sub_10015F7F0(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  uint64_t v10 = v2[6];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v11;
  void *v11 = v3;
  v11[1] = sub_1000A12C8;
  return sub_10012B4D0(a1, a2, v6, v7, v8, v9, v10);
}

uint64_t sub_10015F8C8()
{
  return _swift_deallocObject(v0, 17, 7);
}

unint64_t sub_10015F8D8(unint64_t result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_10015F8F0(result, a2 & 1);
  }
  return result;
}

unint64_t sub_10015F8F0(unint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  else {
    return sub_10015F8FC(a1);
  }
}

unint64_t sub_10015F8FC(unint64_t result)
{
  if (result >= 2) {
    return swift_errorRelease();
  }
  return result;
}

unint64_t sub_10015F90C(unint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRetain();
  }
  else {
    return sub_10015F918(a1);
  }
}

unint64_t sub_10015F918(unint64_t result)
{
  if (result >= 2) {
    return swift_errorRetain();
  }
  return result;
}

uint64_t sub_10015F928()
{
  uint64_t v1 = *(void *)(type metadata accessor for ValidatedAttestationOrAttestation() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = sub_100003918(&qword_10020E268);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v24 = *(void *)(v6 + 64);
  uint64_t v25 = type metadata accessor for NWAsyncConnection.OHTTPStreamFactory(0);
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(v25 - 8) + 80);
  uint64_t v23 = *(void *)(*(void *)(v25 - 8) + 64);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v9 = v0 + v3;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRelease();
  unint64_t v11 = *(void *)(v0 + v3 + 24);
  if (EnumCaseMultiPayload == 1)
  {
    if (v11 >> 60 != 15) {
      sub_10000792C(*(void *)(v9 + 16), v11);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v22 = v4;
    if (v11 >> 60 != 15) {
      sub_10000792C(*(void *)(v9 + 16), v11);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10000792C(*(void *)(v9 + 96), *(void *)(v9 + 104));
    uint64_t v12 = v9 + *(int *)(type metadata accessor for ValidatedAttestation() + 24);
    uint64_t v13 = sub_1001BF2C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
    swift_bridgeObjectRelease();
    uint64_t v4 = v22;
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = v2 | v7 | v8 | 7;
  unint64_t v15 = (((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + v7 + 8) & ~v7;
  unint64_t v16 = (((v24 + v15 + 7) & 0xFFFFFFFFFFFFFFF8) + v8 + 8) & ~v8;
  uint64_t v17 = v16 + v23;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v15, v5);
  swift_release();
  uint64_t v18 = (id *)(v0 + v16);

  swift_release();
  swift_release();
  uint64_t v19 = (char *)v18 + *(int *)(v25 + 28);
  uint64_t v20 = sub_1001BF310();
  (*(void (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  return _swift_deallocObject(v0, v17, v14);
}

void sub_10015FC84()
{
  type metadata accessor for ValidatedAttestationOrAttestation();
  sub_100003918(&qword_10020E268);
  type metadata accessor for NWAsyncConnection.OHTTPStreamFactory(0);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000A12C8;
  uint64_t v2 = (char *)&dword_10020E2D8 + dword_10020E2D8;
  __asm { BR              X9; sub_1001579BC }
}

uint64_t sub_10015FE8C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1000A12C8;
  unint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10020E2E8
                                                                                              + dword_10020E2E8);
  return v11(a1, v4, v5, v6, v7, v9, v8);
}

void sub_10015FF6C()
{
  sub_10012F298(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t (*)(void))&static os_log_type_t.default.getter, "%s Node stream subtask has been cancelled for node: %s");
}

uint64_t sub_10015FFA4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  uint64_t v11 = v2[6];
  uint64_t v10 = v2[7];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v12;
  *uint64_t v12 = v3;
  v12[1] = sub_1000A12C8;
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10020E300 + dword_10020E300);
  return v13(a1, a2, v6, v7, v8, v9, v11, v10);
}

uint64_t sub_100160094()
{
  uint64_t v1 = *(void *)(type metadata accessor for ValidatedAttestationOrAttestation() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v5 = v0 + v3;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRelease();
  unint64_t v7 = *(void *)(v0 + v3 + 24);
  if (EnumCaseMultiPayload == 1)
  {
    if (v7 >> 60 != 15) {
      sub_10000792C(*(void *)(v5 + 16), v7);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (v7 >> 60 != 15) {
      sub_10000792C(*(void *)(v5 + 16), v7);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10000792C(*(void *)(v5 + 96), *(void *)(v5 + 104));
    uint64_t v8 = v5 + *(int *)(type metadata accessor for ValidatedAttestation() + 24);
    uint64_t v9 = sub_1001BF2C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_100160270(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for ValidatedAttestationOrAttestation() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = *(void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_1000A12C8;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10020E318
                                                                                     + dword_10020E318);
  return v12(a1, v6, v7, v8, v9, v10);
}

uint64_t sub_1001603B0()
{
  uint64_t v1 = *(void *)(type metadata accessor for ValidatedAttestationOrAttestation() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = sub_100003918(&qword_10020E268);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v24 = *(void *)(v6 + 64);
  uint64_t v25 = type metadata accessor for NWAsyncConnection.OHTTPStreamFactory(0);
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(v25 - 8) + 80);
  uint64_t v23 = *(void *)(*(void *)(v25 - 8) + 64);
  swift_unknownObjectRelease();
  uint64_t v9 = v0 + v3;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRelease();
  unint64_t v11 = *(void *)(v0 + v3 + 24);
  if (EnumCaseMultiPayload == 1)
  {
    if (v11 >> 60 != 15) {
      sub_10000792C(*(void *)(v9 + 16), v11);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v22 = v4;
    if (v11 >> 60 != 15) {
      sub_10000792C(*(void *)(v9 + 16), v11);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10000792C(*(void *)(v9 + 96), *(void *)(v9 + 104));
    uint64_t v12 = v9 + *(int *)(type metadata accessor for ValidatedAttestation() + 24);
    uint64_t v13 = sub_1001BF2C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
    swift_bridgeObjectRelease();
    uint64_t v4 = v22;
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = v2 | v7 | v8 | 7;
  unint64_t v15 = (((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + v7 + 8) & ~v7;
  unint64_t v16 = (((((v24 + v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v8 + 8) & ~v8;
  uint64_t v17 = v16 + v23;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v15, v5);
  swift_release();
  swift_release();
  uint64_t v18 = (id *)(v0 + v16);

  swift_release();
  swift_release();
  uint64_t v19 = (char *)v18 + *(int *)(v25 + 28);
  uint64_t v20 = sub_1001BF310();
  (*(void (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  return _swift_deallocObject(v0, v17, v14);
}

void sub_100160714()
{
  type metadata accessor for ValidatedAttestationOrAttestation();
  sub_100003918(&qword_10020E268);
  type metadata accessor for NWAsyncConnection.OHTTPStreamFactory(0);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000A12C8;
  uint64_t v2 = (char *)&dword_10020E328 + dword_10020E328;
  __asm { BR              X9; sub_100157FBC }
}

uint64_t sub_100160924(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_1000A12C8;
  return sub_1001300CC(a1, v5, v4);
}

uint64_t sub_1001609D0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a1 + 24);
  swift_bridgeObjectRelease();
  sub_100007918(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_100160A54()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000A12C8;
  uint64_t v2 = (char *)&dword_10020E368 + dword_10020E368;
  __asm { BR              X9; sub_100158090 }
}

uint64_t sub_100160B50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(int **)(v3 + 16);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_1000A12C8;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_10020E378 + dword_10020E378);
  return v10(a1, a2, a3, v8);
}

unint64_t sub_100160C20()
{
  unint64_t result = qword_10020E390;
  if (!qword_10020E390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10020E390);
  }
  return result;
}

uint64_t sub_100160C74()
{
  uint64_t v2 = *(uint64_t **)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1000A12C8;
  uint64_t v5 = (uint64_t (*)(uint64_t *, uint64_t))((char *)&dword_10020E3C0 + dword_10020E3C0);
  return v5(v2, v3);
}

uint64_t sub_100160D20(uint64_t a1)
{
  return sub_100145B50(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_100160D58(uint64_t a1, uint64_t a2)
{
  return sub_1001628D0(a1, a2, (uint64_t (*)(uint64_t, void, void, unsigned char *))sub_1001458E0);
}

uint64_t sub_100160D84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100158548(a1, v2[2], v2[3], v2[4], a2);
}

unint64_t sub_100160DA8()
{
  unint64_t result = qword_10020E3F0;
  if (!qword_10020E3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020E3F0);
  }
  return result;
}

uint64_t sub_100160E00(uint64_t a1, uint64_t a2)
{
  if ((~(a1 & a2) & 0xF000000000000007) != 0) {
    return sub_10002C670(a1, a2);
  }
  return a1;
}

uint64_t sub_100160E18@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100146150(a1, *(void *)(v2 + 16), *(void *)(v2 + 24));
  if (!v3) {
    *a2 = result;
  }
  return result;
}

unint64_t sub_100160E54()
{
  unint64_t result = qword_10020E400;
  if (!qword_10020E400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10020E400);
  }
  return result;
}

uint64_t sub_100160EAC@<X0>(char *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1001447C4(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
  if (!v3) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_100160EF4(uint64_t a1, uint64_t a2)
{
  return sub_1001628D0(a1, a2, (uint64_t (*)(uint64_t, void, void, unsigned char *))sub_100144038);
}

uint64_t sub_100160F20(uint64_t a1, uint64_t a2)
{
  return sub_100160F4C(a1, a2, (uint64_t (*)(uint64_t, void, void, void, unsigned char *))sub_1001442D8);
}

uint64_t sub_100160F4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, void, void, void, unsigned char *))
{
  return a3(a1, v3[2], v3[3], v3[4], v5);
}

unint64_t sub_100160F8C()
{
  unint64_t result = qword_10020E410;
  if (!qword_10020E410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020E410);
  }
  return result;
}

unint64_t sub_100160FE4()
{
  unint64_t result = qword_10020E418;
  if (!qword_10020E418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10020E418);
  }
  return result;
}

uint64_t sub_10016103C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000A12C8;
  return sub_10001DDF4(a1, v4, v5, v6);
}

uint64_t sub_1001610F0()
{
  return sub_10001E338(v0[2], v0[3], v0[4]);
}

const char *sub_1001610FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100157D00(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_10016111C(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_10002C40C(result);
  }
  return result;
}

uint64_t sub_100161130(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v8 = v3[2];
  uint64_t v9 = v3[3];
  uint64_t v10 = v3[4];
  unint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v11;
  void *v11 = v4;
  v11[1] = sub_1000A12C8;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t))((char *)&dword_10020E450
                                                                                       + dword_10020E450);
  return v12(a1, a2, a3, v8, v9, v10);
}

uint64_t sub_100161210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(int **)(v3 + 16);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_1000A12C8;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_10020E460 + dword_10020E460);
  return v10(a1, a2, a3, v8);
}

uint64_t sub_1001612E0()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001612F0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = (uint64_t *)v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000A12C8;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *))((char *)&dword_10020E480 + dword_10020E480);
  return v9(a1, v4, v5, v7, v6);
}

void sub_1001613BC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000A12C8;
  uint64_t v2 = (char *)&dword_10020E498 + dword_10020E498;
  __asm { BR              X9; sub_100158730 }
}

uint64_t sub_1001614BC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000A12C8;
  return sub_1001494C8(a1, v4, v5, v7, v6);
}

uint64_t sub_10016157C(uint64_t a1, uint64_t a2)
{
  return sub_1001628D0(a1, a2, (uint64_t (*)(uint64_t, void, void, unsigned char *))sub_1001415DC);
}

uint64_t sub_1001615A8(uint64_t *a1)
{
  return sub_10000EF88(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1001615C4(uint64_t a1)
{
  uint64_t v4 = *(uint64_t **)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  char v9 = *(unsigned char *)(v1 + 56);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1000A12C8;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10020E4C0
                                                                                             + dword_10020E4C0);
  return v11(a1, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1001616A8(uint64_t a1)
{
  uint64_t v4 = *(uint64_t **)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  char v9 = *(unsigned char *)(v1 + 56);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1000A12C8;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10020E4D8
                                                                                             + dword_10020E4D8);
  return v11(a1, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_10016178C(uint64_t a1)
{
  uint64_t v4 = (uint64_t *)v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000A12C8;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t *, uint64_t, uint64_t))((char *)&dword_10020E4E8 + dword_10020E4E8);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_100161854(uint64_t a1)
{
  uint64_t v4 = *(uint64_t **)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  char v9 = *(unsigned char *)(v1 + 56);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1000A12C8;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10020E4F8
                                                                                             + dword_10020E4F8);
  return v11(a1, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_100161938(uint64_t a1)
{
  return sub_1001413DC(a1, **(void **)(v1 + 16), *(unsigned char *)(*(void *)(v1 + 16) + 8), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned char *)(v1 + 48));
}

uint64_t sub_10016197C(uint64_t a1, uint64_t a2)
{
  return sub_1001620B0(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, unsigned char *))sub_10014129C);
}

uint64_t sub_1001619A8(uint64_t a1)
{
  return sub_10011EE40(a1, *(void *)(v1 + 16));
}

double sub_1001619C4(uint64_t *a1)
{
  return sub_10011EFC0(a1, *(long long **)(v1 + 16));
}

uint64_t sub_1001619E0(uint64_t a1)
{
  return a1;
}

uint64_t sub_100161A10(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000A12C8;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_10020E560 + dword_10020E560);
  return v6(a1, v4);
}

uint64_t sub_100161AC8(uint64_t a1)
{
  return sub_10011E1C4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100161AE4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = (uint64_t *)v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  char v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_1000A12C8;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t))((char *)&dword_10020E588
                                                                                       + dword_10020E588);
  return v10(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100161BC4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000A12C8;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10020F708 + dword_10020F708);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_100161C8C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1000A12C8;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_10020E5D0 + dword_10020E5D0);
  return v7(a1, a2, v2);
}

uint64_t sub_100161D44()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_errorRelease();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100161D8C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000A12C8;
  return sub_1001B66A4(a1, v4, v5, v7, v6);
}

uint64_t sub_100161E50()
{
  swift_unknownObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100161E90@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100142FA4(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48));
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_100161ED4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100142320(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), **(void **)(v2 + 40), *(void *)(v2 + 48));
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_100161F1C(uint64_t a1)
{
  return sub_100158F20(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100161F3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

BOOL sub_100161FA4@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_10013DF34(a1, *(void *)(v2 + 16));
  if (!v3) {
    *a2 = result;
  }
  return result;
}

unint64_t sub_100161FE4()
{
  unint64_t result = qword_10020E648;
  if (!qword_10020E648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10020E648);
  }
  return result;
}

uint64_t sub_10016203C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100162084(uint64_t a1, uint64_t a2)
{
  return sub_1001620B0(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, unsigned char *))sub_10013DDA0);
}

uint64_t sub_1001620B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, void, void, void, void, unsigned char *))
{
  return a3(a1, **(void **)(v3 + 16), *(unsigned __int8 *)(*(void *)(v3 + 16) + 8), *(void *)(v3 + 24), *(void *)(v3 + 32), v5);
}

uint64_t sub_1001620F8(uint64_t a1)
{
  uint64_t v4 = (uint64_t *)v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000A12C8;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t))((char *)&dword_10020E658 + dword_10020E658);
  return v9(a1, v4, v5, v7, v6);
}

uint64_t sub_1001621C4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001621D4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000A12C8;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_10020E668 + dword_10020E668);
  return v6(a1, v4);
}

uint64_t sub_10016228C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  uint64_t v10 = v2[6];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v11;
  void *v11 = v3;
  v11[1] = sub_1000A12C8;
  return sub_1001483F8(a1, a2, v6, v7, v8, v9, v10);
}

uint64_t sub_100162364()
{
  swift_unknownObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001623A4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 32);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000A12C8;
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v6 = (void *)swift_task_alloc();
  v5[2] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_1000A12C8;
  return v8(a1);
}

uint64_t sub_1001624C8()
{
  uint64_t v1 = sub_1001C14E0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1001625A0()
{
  uint64_t v2 = *(void *)(sub_1001C14E0() - 8);
  uint64_t v3 = (uint64_t *)(v0
                 + ((*(void *)(v2 + 64)
                   + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
                   + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *unint64_t v6 = v1;
  v6[1] = sub_1000A12C8;
  uint64_t v9 = (char *)&dword_10020E6B0 + dword_10020E6B0;
  uint64_t v7 = (void *)swift_task_alloc();
  int64x2_t v6[2] = v7;
  *uint64_t v7 = v6;
  v7[1] = sub_100148E5C;
  return ((uint64_t (*)(uint64_t, uint64_t, void, void, uint64_t))v9)(v4, v5, 0, 0, 1);
}

unint64_t sub_100162714()
{
  unint64_t result = qword_10020E6B8;
  if (!qword_10020E6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10020E6B8);
  }
  return result;
}

uint64_t sub_100162768(_DWORD *a1)
{
  return sub_10011E348(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100162784(uint64_t a1)
{
  return sub_10011E6BC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1001627A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001627E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_100162850()
{
  unint64_t result = qword_10020E6E0;
  if (!qword_10020E6E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020E6E0);
  }
  return result;
}

uint64_t sub_1001628A4(uint64_t a1, uint64_t a2)
{
  return sub_1001628D0(a1, a2, (uint64_t (*)(uint64_t, void, void, unsigned char *))sub_10013DBEC);
}

uint64_t sub_1001628D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, void, void, unsigned char *))
{
  return a3(a1, *(void *)(v3 + 16), *(void *)(v3 + 24), v5);
}

uint64_t sub_10016290C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10016296C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 192, 7);
}

void sub_1001629F4(uint64_t a1, uint64_t a2)
{
}

void sub_100162A0C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4 = *(void *)(v3 + 16);
  id v5 = (id)a3();
  (*(void (**)(uint64_t, id))(v4 + 16))(v4, v5);
}

uint64_t sub_100162ABC()
{
  return sub_1001048E8() & 1;
}

uint64_t sub_100162AE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100156C78(a1, a2);
}

uint64_t sub_100162B00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for Proto_Ropes_Common_AttestationList(0);
  uint64_t v8 = __chkstk_darwin(v6, v7);
  uint64_t v10 = (char *)v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v11);
  uint64_t v13 = (char *)v50 - v12;
  uint64_t v14 = type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0);
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v17 = (char *)v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1001C0340();
  uint64_t v54 = *(void *)(v18 - 8);
  uint64_t v55 = v18;
  __chkstk_darwin(v18, v19);
  long long v53 = (char *)v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v21 = *(unsigned int *)(a1 + 32);
  uint64_t v22 = *(void *)(a1 + 16);
  unint64_t v23 = *(void *)(a1 + 24);
  int64_t v24 = 0;
  switch(v23 >> 62)
  {
    case 1uLL:
      BOOL v25 = __OFSUB__(HIDWORD(v22), v22);
      int v26 = HIDWORD(v22) - v22;
      if (v25)
      {
        __break(1u);
LABEL_24:
        __break(1u);
      }
      int64_t v24 = v26;
LABEL_6:
      long long v51 = v13;
      long long v52 = v10;
      uint64_t v30 = sub_1001C0330();
      os_log_type_t v31 = sub_1001C1200();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (_DWORD *)swift_slowAlloc();
        v50[1] = v6;
        uint64_t v33 = a3;
        uint64_t v34 = v32;
        *uint64_t v32 = 134218240;
        int64_t v56 = v24;
        sub_1001C1310();
        *((_WORD *)v34 + 6) = 2048;
        int64_t v56 = v21;
        sub_1001C1310();
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "uncompressing %ld (uncompressed length hint: %ld)", (uint8_t *)v34, 0x16u);
        a3 = v33;
        swift_slowDealloc();
      }

      if (!v21 || !v24)
      {
        uint64_t v42 = sub_1001C0330();
        os_log_type_t v43 = sub_1001C1200();
        if (os_log_type_enabled(v42, v43))
        {
          uint64_t v44 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v44 = 0;
          uint64_t v45 = "returning empty";
LABEL_18:
          _os_log_impl((void *)&_mh_execute_header, v42, v43, v45, v44, 2u);
          swift_slowDealloc();
        }
LABEL_19:

        *a3 = _swiftEmptyArrayStorage;
        return _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
      }
      if (*(void *)a1 != 1)
      {
        uint64_t v42 = sub_1001C0330();
        os_log_type_t v43 = sub_1001C1200();
        if (os_log_type_enabled(v42, v43))
        {
          uint64_t v44 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v44 = 0;
          uint64_t v45 = "unrecognized compression algorithm";
          goto LABEL_18;
        }
        goto LABEL_19;
      }
      uint64_t v36 = (uint64_t)v53;
      uint64_t v35 = v54;
      uint64_t v37 = v55;
      (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v53, a2, v55);
      uint64_t isStackAllocationSafe = sub_100163600(a1, (uint64_t)v17);
      if (v21 <= 0x400
        || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
      {
        __chkstk_darwin(isStackAllocationSafe, v39);
        uint64_t v41 = (uint64_t)v52;
        sub_10016319C((uint8_t *)v50 - v40, v21, v36, (uint64_t)v17);
        uint64_t v47 = v41;
        uint64_t v48 = (uint64_t)v51;
        sub_1001636C0(v47, (uint64_t)v51);
        sub_1001636C0(v48, (uint64_t)a3);
        uint64_t v37 = v55;
      }
      else
      {
        long long v49 = (uint8_t *)swift_slowAlloc();
        sub_10016319C(v49, v21, v36, (uint64_t)v17);
        swift_slowDealloc();
      }
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v37);
      return sub_100163664((uint64_t)v17);
    case 2uLL:
      uint64_t v29 = v22 + 16;
      uint64_t v27 = *(void *)(v22 + 16);
      uint64_t v28 = *(void *)(v29 + 8);
      int64_t v24 = v28 - v27;
      if (!__OFSUB__(v28, v27)) {
        goto LABEL_6;
      }
      goto LABEL_24;
    case 3uLL:
      goto LABEL_6;
    default:
      int64_t v24 = BYTE6(v23);
      goto LABEL_6;
  }
}

uint64_t sub_10016319C(uint8_t *a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1001BFEA0();
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v9 = sub_1001C0330();
  os_log_type_t v10 = sub_1001C1200();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "decompressing using brotli", v11, 2u);
    swift_slowDealloc();
  }

  uint64_t v12 = *(void *)(a4 + 16);
  unint64_t v13 = *(void *)(a4 + 24);
  switch(v13 >> 62)
  {
    case 1uLL:
      if (v12 >> 32 < (int)v12) {
        goto LABEL_42;
      }
      sub_100007B14(v12, v13);
      uint64_t v17 = (const uint8_t *)sub_1001BEE60();
      if (!v17) {
        goto LABEL_10;
      }
      uint64_t v18 = sub_1001BEE90();
      if (__OFSUB__((int)v12, v18)) {
        goto LABEL_45;
      }
      v17 += (int)v12 - v18;
LABEL_10:
      uint64_t v19 = sub_1001BEE80();
      if (v19 >= (v12 >> 32) - (int)v12) {
        size_t v20 = (v12 >> 32) - (int)v12;
      }
      else {
        size_t v20 = v19;
      }
      if (!a1) {
        goto LABEL_47;
      }
      if (!v17) {
        goto LABEL_48;
      }
      int64_t v21 = compression_decode_buffer(a1, a2, v17, v20, 0, COMPRESSION_BROTLI);
      sub_10000792C(v12, v13);
      break;
    case 2uLL:
      uint64_t v22 = *(void *)(v12 + 16);
      uint64_t v23 = *(void *)(v12 + 24);
      swift_retain();
      swift_retain();
      int64_t v24 = (const uint8_t *)sub_1001BEE60();
      if (!v24) {
        goto LABEL_19;
      }
      uint64_t v25 = sub_1001BEE90();
      if (__OFSUB__(v22, v25)) {
        goto LABEL_44;
      }
      v24 += v22 - v25;
LABEL_19:
      BOOL v26 = __OFSUB__(v23, v22);
      int64_t v27 = v23 - v22;
      if (v26) {
        goto LABEL_43;
      }
      uint64_t v28 = sub_1001BEE80();
      if (v28 >= v27) {
        size_t v29 = v27;
      }
      else {
        size_t v29 = v28;
      }
      if (!a1) {
        goto LABEL_49;
      }
      if (!v24) {
        goto LABEL_50;
      }
      int64_t v21 = compression_decode_buffer(a1, a2, v24, v29, 0, COMPRESSION_BROTLI);
      swift_release();
      swift_release();
      break;
    case 3uLL:
      *(void *)&src_buffer[6] = 0;
      *(void *)src_buffer = 0;
      if (!a1) {
        goto LABEL_51;
      }
      uint64_t v15 = a1;
      size_t v16 = a2;
      size_t v14 = 0;
      goto LABEL_28;
    default:
      *(void *)src_buffer = *(void *)(a4 + 16);
      *(_WORD *)&src_buffer[8] = v13;
      src_buffer[10] = BYTE2(v13);
      src_buffer[11] = BYTE3(v13);
      src_buffer[12] = BYTE4(v13);
      src_buffer[13] = BYTE5(v13);
      if (!a1)
      {
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
        JUMPOUT(0x1001635F0);
      }
      size_t v14 = BYTE6(v13);
      uint64_t v15 = a1;
      size_t v16 = a2;
LABEL_28:
      int64_t v21 = compression_decode_buffer(v15, v16, src_buffer, v14, 0, COMPRESSION_BROTLI);
      break;
  }
  uint64_t v30 = sub_1001C0330();
  os_log_type_t v31 = sub_1001C1200();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v32 = 0;
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "deserializing...", v32, 2u);
    swift_slowDealloc();
  }

  if (v21 < 0)
  {
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
  }
  if (a2 >= v21) {
    int64_t v33 = v21;
  }
  else {
    int64_t v33 = a2;
  }
  if (a2 >= 0 && v21 != 0) {
    int64_t v21 = v33;
  }
  type metadata accessor for Proto_Ropes_Common_AttestationList(0);
  uint64_t v39 = 0;
  int64_t v40 = v21;
  uint64_t v41 = a1;
  int64_t v42 = a2;
  uint64_t v38 = 0;
  *(_OWORD *)src_buffer = 0u;
  long long v37 = 0u;
  sub_1001BFE90();
  sub_100003918(&qword_10020E708);
  sub_100163724();
  sub_10016377C();
  return sub_1001C0010();
}

uint64_t sub_100163600(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100163664(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001636C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Proto_Ropes_Common_AttestationList(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100163724()
{
  unint64_t result = qword_1002099C8;
  if (!qword_1002099C8)
  {
    type metadata accessor for Proto_Ropes_Common_AttestationList(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002099C8);
  }
  return result;
}

unint64_t sub_10016377C()
{
  unint64_t result = qword_10020E710;
  if (!qword_10020E710)
  {
    sub_1000166C8(&qword_10020E708);
    sub_1001637F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020E710);
  }
  return result;
}

unint64_t sub_1001637F0()
{
  unint64_t result = qword_10020E718;
  if (!qword_10020E718)
  {
    sub_1000166C8(&qword_10020E720);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020E718);
  }
  return result;
}

uint64_t sub_10016384C()
{
  sub_100163A1C(v0 + 16);
  uint64_t v1 = v0 + OBJC_IVAR____TtC20privatecloudcomputed18TC2PrefetchTracker_logger;
  uint64_t v2 = sub_1001C0340();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1001638F4()
{
  return type metadata accessor for TC2PrefetchTracker();
}

uint64_t type metadata accessor for TC2PrefetchTracker()
{
  uint64_t result = qword_10020E758;
  if (!qword_10020E758) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100163948()
{
  uint64_t result = sub_1001C0340();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

char *sub_1001639E4()
{
  if (&swift_runtimeSupportsNoncopyableTypes) {
    return (char *)sub_100003918(&qword_10020E7E8);
  }
  else {
    return (char *)&type metadata for () + 8;
  }
}

ValueMetadata *type metadata accessor for TC2PrefetchTracker.State()
{
  return &type metadata for TC2PrefetchTracker.State;
}

uint64_t sub_100163A1C(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020E7E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100163A7C(uint64_t a1)
{
  return sub_100163C8C(a1, qword_10021FF38);
}

uint64_t sub_100163AA0(uint64_t a1)
{
  return sub_100163C8C(a1, qword_10021FF50);
}

uint64_t sub_100163AC4(uint64_t a1)
{
  return sub_100163C8C(a1, qword_10021FF68);
}

uint64_t sub_100163AF0(uint64_t a1)
{
  return sub_100163C8C(a1, qword_10021FF80);
}

uint64_t sub_100163B14(uint64_t a1)
{
  return sub_100163C8C(a1, qword_10021FF98);
}

uint64_t sub_100163B38(uint64_t a1)
{
  return sub_100163C8C(a1, qword_10021FFB0);
}

uint64_t sub_100163B64(uint64_t a1)
{
  return sub_100163C8C(a1, qword_10021FFC8);
}

uint64_t sub_100163B90(uint64_t a1)
{
  return sub_100163C8C(a1, qword_10021FFE0);
}

uint64_t sub_100163BB4(uint64_t a1)
{
  return sub_100163C8C(a1, qword_10021FFF8);
}

uint64_t sub_100163BD8(uint64_t a1)
{
  return sub_100163C8C(a1, qword_100220010);
}

uint64_t sub_100163BFC(uint64_t a1)
{
  return sub_100163C8C(a1, qword_100220028);
}

uint64_t sub_100163C20(uint64_t a1)
{
  return sub_100163C8C(a1, qword_100220040);
}

uint64_t sub_100163C44(uint64_t a1)
{
  return sub_100163C8C(a1, qword_100220058);
}

uint64_t sub_100163C68(uint64_t a1)
{
  return sub_100163C8C(a1, qword_100220070);
}

uint64_t sub_100163C8C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100003918(qword_10020E7F0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1001C0820();
  sub_100044F74(v7, a2);
  uint64_t v8 = sub_10000D978(v7, (uint64_t)a2);
  sub_1001C0830();
  uint64_t v9 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v7);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v8, v6, v7);
  }
  __break(1u);
  return result;
}

void sub_100163DB8()
{
  sub_1001C0340();
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F)
    {
      swift_checkMetadataState();
      if (v2 <= 0x3F)
      {
        sub_1001C12F0();
        if (v3 <= 0x3F)
        {
          swift_checkMetadataState();
          if (v4 <= 0x3F)
          {
            swift_checkMetadataState();
            if (v5 <= 0x3F)
            {
              swift_checkMetadataState();
              if (v6 <= 0x3F)
              {
                swift_checkMetadataState();
                if (v7 <= 0x3F)
                {
                  sub_1000101F4();
                  if (v8 <= 0x3F) {
                    swift_initClassMetadata2();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_100164078()
{
  unint64_t v1 = *(void **)v0;
  uint64_t v2 = v0 + qword_100220088;
  uint64_t v3 = sub_1001C0340();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  sub_100003E90(v0 + qword_100220090);
  swift_release();
  (*(void (**)(uint64_t, void))(*(void *)(v1[14] - 8) + 8))(v0 + *(void *)(*(void *)v0 + 216), v1[14]);
  (*(void (**)(uint64_t, void))(*(void *)(v1[10] - 8) + 8))(v0 + *(void *)(*(void *)v0 + 224), v1[10]);
  uint64_t v4 = v0 + *(void *)(*(void *)v0 + 232);
  uint64_t v5 = sub_1001C12F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  (*(void (**)(uint64_t, void))(*(void *)(v1[12] - 8) + 8))(v0 + *(void *)(*(void *)v0 + 240), v1[12]);
  (*(void (**)(uint64_t, void))(*(void *)(v1[13] - 8) + 8))(v0 + *(void *)(*(void *)v0 + 248), v1[13]);
  (*(void (**)(uint64_t, void))(*(void *)(v1[15] - 8) + 8))(v0 + *(void *)(*(void *)v0 + 256), v1[15]);
  (*(void (**)(uint64_t, void))(*(void *)(v1[16] - 8) + 8))(v0 + *(void *)(*(void *)v0 + 264), v1[16]);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v6 = v0 + *(void *)(*(void *)v0 + 296);
  uint64_t v7 = sub_100003918(qword_100208000);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v0 + *(void *)(*(void *)v0 + 304);
  type metadata accessor for TrustedRequestFactory.Metrics();
  uint64_t v9 = sub_1001BF4C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  return v0;
}

uint64_t sub_1001644FC()
{
  sub_100164078();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TrustedRequestFactory()
{
  return swift_getGenericMetadata();
}

char *sub_10016456C()
{
  if (!&swift_runtimeSupportsNoncopyableTypes) {
    return (char *)&type metadata for () + 8;
  }
  type metadata accessor for TrustedRequestFactory.Metrics();
  return (char *)sub_1001BF4C0();
}

uint64_t type metadata accessor for TrustedRequestFactory.Metrics()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1001645FC()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

void *sub_100164638(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *sub_100164670(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1001646D0(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t sub_100164710(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100164758(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t TC2ServerDrivenConfiguration.updateJsonModel(_:)(uint64_t a1, uint64_t a2)
{
  v3[39] = a2;
  v3[40] = v2;
  v3[38] = a1;
  sub_100003918(&qword_10020C370);
  v3[41] = swift_task_alloc();
  uint64_t v4 = sub_1001BF0B0();
  v3[42] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[43] = v5;
  v3[44] = *(void *)(v5 + 64);
  v3[45] = swift_task_alloc();
  v3[46] = swift_task_alloc();
  v3[47] = swift_task_alloc();
  v3[48] = swift_task_alloc();
  return _swift_task_switch(sub_1001648B8, 0, 0);
}

uint64_t sub_1001648B8()
{
  uint64_t v1 = *(void *)(v0 + 320) + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration__jsonModel;
  os_unfair_lock_lock((os_unfair_lock_t)v1);
  sub_1001656A8();
  sub_1001BED80();
  uint64_t v2 = *(void *)(v0 + 336);
  uint64_t v3 = *(void *)(v0 + 344);
  uint64_t v5 = *(void *)(v0 + 320);
  uint64_t v4 = *(void *)(v0 + 328);
  long long v6 = *(_OWORD *)(v1 + 24);
  long long v7 = *(_OWORD *)(v1 + 56);
  long long v8 = *(_OWORD *)(v1 + 8);
  *(_OWORD *)(v0 + 176) = *(_OWORD *)(v1 + 40);
  *(_OWORD *)(v0 + 192) = v7;
  *(_OWORD *)(v0 + 144) = v8;
  *(_OWORD *)(v0 + 160) = v6;
  long long v9 = *(_OWORD *)(v1 + 88);
  long long v10 = *(_OWORD *)(v1 + 104);
  long long v11 = *(_OWORD *)(v1 + 72);
  *(_OWORD *)(v0 + 249) = *(_OWORD *)(v1 + 113);
  *(_OWORD *)(v0 + 224) = v9;
  *(_OWORD *)(v0 + 240) = v10;
  *(_OWORD *)(v0 + 208) = v11;
  sub_10001633C(v0 + 144);
  long long v12 = *(_OWORD *)(v0 + 48);
  long long v13 = *(_OWORD *)(v0 + 64);
  long long v14 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v1 + 8) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 56) = v13;
  *(_OWORD *)(v1 + 40) = v12;
  *(_OWORD *)(v1 + 24) = v14;
  long long v16 = *(_OWORD *)(v0 + 96);
  long long v15 = *(_OWORD *)(v0 + 112);
  long long v17 = *(_OWORD *)(v0 + 121);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v1 + 113) = v17;
  *(_OWORD *)(v1 + 104) = v15;
  *(_OWORD *)(v1 + 88) = v16;
  os_unfair_lock_unlock((os_unfair_lock_t)v1);
  sub_10003282C(v5 + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration_file, v4, &qword_10020C370);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) == 1)
  {
    sub_100010360(*(void *)(v0 + 328), &qword_10020C370);
    uint64_t v18 = sub_1001C0330();
    os_log_type_t v19 = sub_1001C11D0();
    if (os_log_type_enabled(v18, v19))
    {
      size_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)size_t v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "declining to persist server driven configuration without location", v20, 2u);
      swift_slowDealloc();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    int64_t v21 = *(uint64_t (**)(void))(v0 + 8);
    return v21();
  }
  else
  {
    uint64_t v23 = *(void *)(v0 + 376);
    unint64_t v24 = *(void *)(v0 + 384);
    uint64_t v25 = *(void *)(v0 + 344);
    uint64_t v26 = *(void *)(v0 + 336);
    uint64_t v28 = *(void *)(v0 + 304);
    unint64_t v27 = *(void *)(v0 + 312);
    size_t v29 = *(void (**)(unint64_t, uint64_t, uint64_t))(v25 + 32);
    v29(v24, *(void *)(v0 + 328), v26);
    uint64_t v30 = *(void (**)(uint64_t, unint64_t, uint64_t))(v25 + 16);
    v25 += 16;
    *(void *)(v0 + 392) = v30;
    *(void *)(v0 + 400) = v25 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v30(v23, v24, v26);
    unint64_t v31 = (*(unsigned __int8 *)(v25 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 64);
    uint64_t v32 = swift_allocObject();
    *(void *)(v0 + 408) = v32;
    *(void *)(v32 + 16) = v28;
    *(void *)(v32 + 24) = v27;
    v29(v32 + v31, v23, v26);
    sub_100007B14(v28, v27);
    if (qword_100207988 != -1) {
      swift_once();
    }
    int64_t v33 = (void *)blockingIOQueue;
    *(void *)(v0 + 416) = blockingIOQueue;
    id v34 = v33;
    uint64_t v35 = (void *)swift_task_alloc();
    *(void *)(v0 + 424) = v35;
    v35[2] = v34;
    v35[3] = sub_1000989EC;
    v35[4] = v32;
    uint64_t v36 = (void *)swift_task_alloc();
    *(void *)(v0 + 432) = v36;
    *uint64_t v36 = v0;
    v36[1] = sub_100164E18;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)();
  }
}

uint64_t sub_100164E18()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 440) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1001651C0;
  }
  else
  {

    swift_release();
    swift_task_dealloc();
    uint64_t v3 = sub_100164F48;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100164F48()
{
  uint64_t v17 = v0;
  (*(void (**)(void, void, void))(v0 + 392))(*(void *)(v0 + 368), *(void *)(v0 + 384), *(void *)(v0 + 336));
  uint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C11E0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v15 = *(void *)(v0 + 384);
    uint64_t v3 = *(void *)(v0 + 368);
    uint64_t v4 = *(void *)(v0 + 336);
    uint64_t v14 = *(void *)(v0 + 344);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    sub_10016E158((unint64_t *)&qword_10020BF20, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v6 = sub_1001C1780();
    *(void *)(v0 + 280) = sub_1000DF238(v6, v7, &v16);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    long long v8 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v8(v3, v4);
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "wrote persisted server driven configuration, file=%s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v8(v15, v4);
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 384);
    uint64_t v10 = *(void *)(v0 + 336);
    long long v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 344) + 8);
    v11(*(void *)(v0 + 368), v10);

    v11(v9, v10);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1001651C0()
{
  uint64_t v35 = v0;
  uint64_t v1 = (void *)v0[52];
  uint64_t v2 = v0[48];
  uint64_t v3 = (void (*)(uint64_t, uint64_t, uint64_t))v0[49];
  uint64_t v4 = v0[45];
  uint64_t v5 = v0[42];
  swift_task_dealloc();

  swift_release();
  v3(v4, v2, v5);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v6 = sub_1001C0330();
  os_log_type_t v7 = sub_1001C11F0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = v0[45];
    uint64_t v9 = v0[42];
    uint64_t v10 = v0[43];
    uint64_t v11 = swift_slowAlloc();
    uint64_t v32 = (void *)swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315394;
    sub_10016E158((unint64_t *)&qword_10020BF20, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v12 = sub_1001C1780();
    v0[36] = sub_1000DF238(v12, v13, &v34);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    *(_WORD *)(v11 + 12) = 2112;
    swift_errorRetain();
    uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
    v0[37] = v14;
    sub_1001C1310();
    *uint64_t v32 = v14;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "unable to write persisted server driven configuration, file=%s, error=%@", (uint8_t *)v11, 0x16u);
    sub_100003918(&qword_100207DA8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();
  }
  else
  {
    uint64_t v15 = v0[45];
    uint64_t v16 = v0[42];
    uint64_t v17 = v0[43];
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    swift_errorRelease();
    swift_errorRelease();
  }
  ((void (*)(void, void, void))v0[49])(v0[46], v0[48], v0[42]);
  uint64_t v18 = sub_1001C0330();
  os_log_type_t v19 = sub_1001C11E0();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v21 = v0[48];
  uint64_t v22 = v0[46];
  uint64_t v23 = v0[42];
  uint64_t v24 = v0[43];
  if (v20)
  {
    uint64_t v33 = v0[48];
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 136315138;
    sub_10016E158((unint64_t *)&qword_10020BF20, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v26 = sub_1001C1780();
    v0[35] = sub_1000DF238(v26, v27, &v34);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
    v28(v22, v23);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "wrote persisted server driven configuration, file=%s", v25, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v29 = v33;
  }
  else
  {
    uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
    v28(v0[46], v0[42]);

    uint64_t v29 = v21;
  }
  v28(v29, v23);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = (uint64_t (*)(void))v0[1];
  return v30();
}

unint64_t sub_1001656A8()
{
  unint64_t result = qword_10020E918;
  if (!qword_10020E918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020E918);
  }
  return result;
}

double TC2ServerDrivenConfiguration.jsonModel.getter@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration__jsonModel;
  os_unfair_lock_lock((os_unfair_lock_t)v3);
  long long v4 = *(_OWORD *)(v3 + 88);
  long long v15 = *(_OWORD *)(v3 + 72);
  long long v16 = v4;
  v17[0] = *(_OWORD *)(v3 + 104);
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)(v3 + 113);
  long long v5 = *(_OWORD *)(v3 + 24);
  long long v11 = *(_OWORD *)(v3 + 8);
  long long v12 = v5;
  long long v6 = *(_OWORD *)(v3 + 56);
  long long v13 = *(_OWORD *)(v3 + 40);
  long long v14 = v6;
  sub_1000162B0((uint64_t)&v11);
  os_unfair_lock_unlock((os_unfair_lock_t)v3);
  long long v7 = v16;
  a1[4] = v15;
  a1[5] = v7;
  a1[6] = v17[0];
  *(_OWORD *)((char *)a1 + 105) = *(_OWORD *)((char *)v17 + 9);
  long long v8 = v12;
  *a1 = v11;
  a1[1] = v8;
  double result = *(double *)&v13;
  long long v10 = v14;
  a1[2] = v13;
  a1[3] = v10;
  return result;
}

uint64_t TC2ServerDrivenConfiguration.__allocating_init(from:)(unsigned char *a1)
{
  uint64_t v2 = swift_allocObject();
  TC2ServerDrivenConfiguration.init(from:)(a1);
  return v2;
}

uint64_t TC2ServerDrivenConfiguration.maxPrefetchedAttestations.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration__jsonModel;
  os_unfair_lock_lock((os_unfair_lock_t)(v0
                                       + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration__jsonModel));
  uint64_t v2 = *(void *)(v1 + 24);
  os_unfair_lock_unlock((os_unfair_lock_t)v1);
  uint64_t v3 = sub_1001C0330();
  os_log_type_t v4 = sub_1001C11D0();
  if (os_log_type_enabled(v3, v4))
  {
    long long v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)long long v5 = 136315138;
    sub_100003918(&qword_10020E930);
    uint64_t v6 = sub_1001C0C40();
    sub_1000DF238(v6, v7, &v9);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "maxPrefetchedAttestations: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  return v2;
}

Swift::Int_optional __swiftcall TC2ServerDrivenConfiguration.totalAttestations(forRegion:)(Swift::String_optional forRegion)
{
  uint64_t v2 = v1;
  object = forRegion.value._object;
  uint64_t countAndFlagsBits = forRegion.value._countAndFlagsBits;
  if (forRegion.value._object)
  {
    uint64_t v5 = v1 + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration__jsonModel;
    swift_bridgeObjectRetain();
    os_unfair_lock_lock((os_unfair_lock_t)v5);
    long long v6 = *(_OWORD *)(v5 + 88);
    long long v29 = *(_OWORD *)(v5 + 72);
    long long v30 = v6;
    v31[0] = *(_OWORD *)(v5 + 104);
    *(_OWORD *)((char *)v31 + 9) = *(_OWORD *)(v5 + 113);
    long long v7 = *(_OWORD *)(v5 + 24);
    v26[0] = *(_OWORD *)(v5 + 8);
    v26[1] = v7;
    long long v8 = *(_OWORD *)(v5 + 56);
    long long v27 = *(_OWORD *)(v5 + 40);
    long long v28 = v8;
    sub_1000162B0((uint64_t)v26);
    os_unfair_lock_unlock((os_unfair_lock_t)v5);
    uint64_t v9 = v27;
    swift_bridgeObjectRetain();
    sub_10001633C((uint64_t)v26);
    if (v9)
    {
      if (*(void *)(v9 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v10 = sub_100169E3C(countAndFlagsBits, (uint64_t)object);
        if (v11)
        {
          Swift::Int v12 = *(void *)(*(void *)(v9 + 56) + 8 * v10);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          long long v13 = sub_1001C0330();
          os_log_type_t v14 = sub_1001C11D0();
          if (os_log_type_enabled(v13, v14))
          {
            uint64_t v15 = swift_slowAlloc();
            v32[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v15 = 136315394;
            swift_bridgeObjectRetain();
            sub_1000DF238(countAndFlagsBits, (unint64_t)object, v32);
            sub_1001C1310();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v15 + 12) = 2048;
            sub_1001C1310();
            _os_log_impl((void *)&_mh_execute_header, v13, v14, "totalAttestations for region=%s: %ld (regional)", (uint8_t *)v15, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }

          char v18 = 0;
          goto LABEL_18;
        }
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v16 = (unint64_t)object;
  }
  else
  {
    unint64_t v16 = 0xE600000000000000;
  }
  uint64_t v17 = v2 + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration__jsonModel;
  os_unfair_lock_lock((os_unfair_lock_t)(v2
                                       + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration__jsonModel));
  Swift::Int v12 = *(void *)(v17 + 8);
  char v18 = *(unsigned char *)(v17 + 16);
  os_unfair_lock_unlock((os_unfair_lock_t)v17);
  swift_bridgeObjectRetain_n();
  os_log_type_t v19 = sub_1001C0330();
  os_log_type_t v20 = sub_1001C11D0();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    v32[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 136315394;
    if (!object) {
      uint64_t countAndFlagsBits = 0x29656E6F6E28;
    }
    swift_bridgeObjectRetain();
    *(void *)&v26[0] = sub_1000DF238(countAndFlagsBits, v16, v32);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2080;
    *(void *)&v26[0] = v12;
    BYTE8(v26[0]) = v18;
    sub_100003918(&qword_10020E930);
    uint64_t v22 = sub_1001C0C40();
    *(void *)&v26[0] = sub_1000DF238(v22, v23, v32);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "totalAttestations for region=%s: %s (default)", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

LABEL_18:
  Swift::Int v24 = v12;
  Swift::Bool v25 = v18;
  result.value = v24;
  result.is_nil = v25;
  return result;
}

uint64_t sub_100165DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100165E04(a1, a2, a3, a4, &qword_100208640, (uint64_t)&unk_100200AB8, (uint64_t)sub_10016E3A4, (uint64_t)&unk_100200AD0);
}

uint64_t sub_100165DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100165E04(a1, a2, a3, a4, &qword_10020EA50, (uint64_t)&unk_100200A68, (uint64_t)sub_10016E0BC, (uint64_t)&unk_100200A80);
}

uint64_t sub_100165E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v31 = a7;
  uint64_t v32 = a8;
  v28[1] = a6;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  uint64_t v35 = a2;
  uint64_t v10 = sub_1001C0880();
  uint64_t v34 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v11);
  long long v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1001C08B0();
  uint64_t v14 = *(void *)(v33 - 8);
  __chkstk_darwin(v33, v15);
  uint64_t v17 = (char *)v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100003918(a5);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void *)(v19 + 64);
  __chkstk_darwin(v18, v21);
  uint64_t v22 = (char *)v28 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v22, a1, v18);
  unint64_t v23 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = v30;
  *(void *)(v24 + 16) = v29;
  *(void *)(v24 + 24) = v25;
  (*(void (**)(unint64_t, char *, uint64_t))(v19 + 32))(v24 + v23, v22, v18);
  aBlock[4] = v31;
  aBlock[5] = v24;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000B08BC;
  aBlock[3] = v32;
  uint64_t v26 = _Block_copy(aBlock);
  swift_retain();
  sub_1001C08A0();
  uint64_t v36 = &_swiftEmptyArrayStorage;
  sub_10016E158(&qword_10020C388, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100003918(&qword_10020C390);
  sub_1000B860C();
  sub_1001C13D0();
  sub_1001C1250();
  _Block_release(v26);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v33);
  return swift_release();
}

uint64_t sub_100166164(void (*a1)(void))
{
  return sub_1001C0EC0();
}

uint64_t sub_1001661E4(void (*a1)(long long *__return_ptr))
{
  a1(&v2);
  sub_100003918(&qword_10020EA50);
  return sub_1001C0EC0();
}

uint64_t TC2ServerDrivenConfiguration.maxPrefetchWorkloadCount.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration__jsonModel;
  os_unfair_lock_lock((os_unfair_lock_t)(v0
                                       + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration__jsonModel));
  uint64_t v2 = *(void *)(v1 + 104);
  os_unfair_lock_unlock((os_unfair_lock_t)v1);
  uint64_t v3 = sub_1001C0330();
  os_log_type_t v4 = sub_1001C11D0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    sub_100003918(&qword_10020E930);
    uint64_t v6 = sub_1001C0C40();
    sub_1000DF238(v6, v7, &v9);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "maxPrefetchWorkloadCount: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  return v2;
}

uint64_t TC2ServerDrivenConfiguration.maxPrefetchWorkloadAgeSeconds.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration__jsonModel;
  os_unfair_lock_lock((os_unfair_lock_t)(v0
                                       + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration__jsonModel));
  uint64_t v2 = *(void *)(v1 + 120);
  os_unfair_lock_unlock((os_unfair_lock_t)v1);
  uint64_t v3 = sub_1001C0330();
  os_log_type_t v4 = sub_1001C11D0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    sub_100003918(&qword_10020E930);
    uint64_t v6 = sub_1001C0C40();
    sub_1000DF238(v6, v7, &v9);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "maxPrefetchWorkloadAgeSeconds: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  return v2;
}

void *TC2ServerDrivenConfiguration.blockedBundleIds.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration__jsonModel;
  os_unfair_lock_lock((os_unfair_lock_t)(v0
                                       + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration__jsonModel));
  long long v2 = *(_OWORD *)(v1 + 88);
  v13[4] = *(_OWORD *)(v1 + 72);
  long long v14 = v2;
  v15[0] = *(_OWORD *)(v1 + 104);
  *(_OWORD *)((char *)v15 + 9) = *(_OWORD *)(v1 + 113);
  long long v3 = *(_OWORD *)(v1 + 24);
  v13[0] = *(_OWORD *)(v1 + 8);
  v13[1] = v3;
  long long v4 = *(_OWORD *)(v1 + 56);
  v13[2] = *(_OWORD *)(v1 + 40);
  v13[3] = v4;
  sub_1000162B0((uint64_t)v13);
  os_unfair_lock_unlock((os_unfair_lock_t)v1);
  uint64_t v5 = *((void *)&v14 + 1);
  swift_bridgeObjectRetain();
  sub_10001633C((uint64_t)v13);
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_1001C0330();
  os_log_type_t v7 = sub_1001C11D0();
  if (os_log_type_enabled(v6, v7))
  {
    long long v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)long long v8 = 136315138;
    swift_bridgeObjectRetain();
    sub_100003918(&qword_10020E938);
    uint64_t v9 = sub_1001C0C40();
    sub_1000DF238(v9, v10, &v12);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "blockedBundleIds: %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  if (v5) {
    return (void *)v5;
  }
  else {
    return _swiftEmptyArrayStorage;
  }
}

uint64_t TC2ServerDrivenConfiguration.JsonModel.maxPrefetchedAttestations.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t TC2ServerDrivenConfiguration.JsonModel.maxPrefetchedAttestations.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 16) = result;
  *(unsigned char *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t TC2ServerDrivenConfiguration.JsonModel.totalAttestationsByRegion.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TC2ServerDrivenConfiguration.JsonModel.totalAttestationsByRegion.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t TC2ServerDrivenConfiguration.JsonModel.liveOnProdSpillover.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t TC2ServerDrivenConfiguration.JsonModel.liveOnProdSpillover.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 40) = result;
  *(unsigned char *)(v2 + 48) = a2 & 1;
  return result;
}

uint64_t (*TC2ServerDrivenConfiguration.JsonModel.liveOnProdSpillover.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t TC2ServerDrivenConfiguration.JsonModel.maxPrefetchBatches.getter()
{
  return *(void *)(v0 + 72);
}

uint64_t TC2ServerDrivenConfiguration.JsonModel.maxPrefetchBatches.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 72) = result;
  *(unsigned char *)(v2 + 80) = a2 & 1;
  return result;
}

uint64_t TC2ServerDrivenConfiguration.JsonModel.blockedBundleIds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TC2ServerDrivenConfiguration.JsonModel.blockedBundleIds.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 88) = a1;
  return result;
}

uint64_t (*TC2ServerDrivenConfiguration.JsonModel.blockedBundleIds.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t TC2ServerDrivenConfiguration.JsonModel.maxPrefetchWorkloadCount.getter()
{
  return *(void *)(v0 + 96);
}

uint64_t TC2ServerDrivenConfiguration.JsonModel.maxPrefetchWorkloadCount.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 96) = result;
  *(unsigned char *)(v2 + 104) = a2 & 1;
  return result;
}

uint64_t (*TC2ServerDrivenConfiguration.JsonModel.maxPrefetchWorkloadCount.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t TC2ServerDrivenConfiguration.JsonModel.maxPrefetchWorkloadAgeSeconds.getter()
{
  return *(void *)(v0 + 112);
}

uint64_t TC2ServerDrivenConfiguration.JsonModel.maxPrefetchWorkloadAgeSeconds.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 112) = result;
  *(unsigned char *)(v2 + 120) = a2 & 1;
  return result;
}

unint64_t sub_1001668D8(char a1)
{
  unint64_t result = 0xD000000000000018;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000019;
      break;
    case 2:
      unint64_t result = 0xD000000000000019;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0xD000000000000024;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 8:
      unint64_t result = 0xD00000000000001DLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1001669C0(char a1)
{
  unint64_t result = 0xD000000000000018;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000019;
      break;
    case 2:
      unint64_t result = 0xD000000000000019;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0xD000000000000024;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 8:
      unint64_t result = 0xD00000000000001DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100166AA8(unsigned __int8 *a1, char *a2)
{
  return sub_1000E0238(*a1, *a2);
}

Swift::Int sub_100166AB4()
{
  return sub_1001C1990();
}

uint64_t sub_100166AFC()
{
  return sub_1000E0798();
}

Swift::Int sub_100166B04()
{
  return sub_1001C1990();
}

uint64_t sub_100166B48@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10016D148(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_100166B78@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1001668D8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_100166BA4()
{
  return sub_1001669C0(*v0);
}

uint64_t sub_100166BAC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10016D148(a1, a2);
  *a3 = result;
  return result;
}

void sub_100166BD4(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_100166BE0(uint64_t a1)
{
  unint64_t v2 = sub_10016CBB4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100166C1C(uint64_t a1)
{
  unint64_t v2 = sub_10016CBB4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t TC2ServerDrivenConfiguration.JsonModel.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100003918(&qword_10020E940);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10000D934(a1, a1[3]);
  sub_10016CBB4();
  sub_1001C19C0();
  v12[0] = 0;
  sub_1001C16E0();
  if (!v2)
  {
    v12[0] = 1;
    sub_1001C16E0();
    sub_10002C318(v3 + 32, (uint64_t)v14, &qword_10020E950);
    sub_10002C318((uint64_t)v14, (uint64_t)v12, &qword_10020E950);
    HIBYTE(v11) = 2;
    sub_100003918(&qword_10020D290);
    sub_1000EF4BC(qword_10020D2A0);
    sub_1001C16F0();
    v12[0] = 3;
    sub_1001C16D0();
    v12[0] = 4;
    sub_1001C16D0();
    v12[0] = 5;
    sub_1001C16E0();
    sub_10002C318(v3 + 88, (uint64_t)v13, &qword_10020E938);
    sub_10002C318((uint64_t)v13, (uint64_t)v12, &qword_10020E938);
    HIBYTE(v11) = 6;
    sub_100003918(&qword_10020C6F0);
    sub_10016E0F4(&qword_10020C6F8);
    sub_1001C16F0();
    v12[0] = 7;
    sub_1001C16E0();
    v12[0] = 8;
    sub_1001C16E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

double TC2ServerDrivenConfiguration.JsonModel.init(from:)@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_10016D194(a1, v8);
  if (!v2)
  {
    long long v5 = v12;
    a2[4] = v11;
    a2[5] = v5;
    a2[6] = v13[0];
    *(_OWORD *)((char *)a2 + 105) = *(_OWORD *)((char *)v13 + 9);
    long long v6 = v8[1];
    *a2 = v8[0];
    a2[1] = v6;
    double result = *(double *)&v9;
    long long v7 = v10;
    a2[2] = v9;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_100167020(void *a1)
{
  return TC2ServerDrivenConfiguration.JsonModel.encode(to:)(a1);
}

uint64_t sub_100167074()
{
  uint64_t v0 = sub_1001C0C30();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  unint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001C0C20();
  uint64_t v5 = sub_1001C0C00();
  unint64_t v7 = v6;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  if (v7 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    qword_10020E8F8 = v5;
    unk_10020E900 = v7;
  }
  return result;
}

uint64_t TC2ServerDrivenConfiguration.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  TC2ServerDrivenConfiguration.init()();
  return v0;
}

uint64_t TC2ServerDrivenConfiguration.init()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1001BF8E0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  unint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001BEDA0();
  swift_allocObject();
  *(void *)(v0 + 16) = sub_1001BED90();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, enum case for TC2LogCategory.serverDrivenConfiguration(_:), v2);
  sub_1001BFDD0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  uint64_t v7 = v0 + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration_file;
  uint64_t v8 = sub_1001BF0B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  if (qword_100207A00 != -1) {
    swift_once();
  }
  swift_retain();
  sub_10016CEA0((uint64_t)v21);
  swift_release();
  *(_OWORD *)((char *)&v20[2] + 4) = v21[2];
  *(_OWORD *)((char *)&v20[1] + 4) = v21[1];
  *(_OWORD *)((char *)v20 + 4) = v21[0];
  *(_OWORD *)((char *)&v20[6] + 13) = *(_OWORD *)((char *)v22 + 9);
  *(_OWORD *)((char *)&v20[6] + 4) = v22[0];
  *(_OWORD *)((char *)&v20[5] + 4) = v21[5];
  *(_OWORD *)((char *)&v20[4] + 4) = v21[4];
  *(_OWORD *)((char *)&v20[3] + 4) = v21[3];
  uint64_t v9 = v0 + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration__jsonModel;
  *(_DWORD *)uint64_t v9 = 0;
  long long v10 = v20[0];
  long long v11 = v20[1];
  long long v12 = v20[2];
  *(_OWORD *)(v9 + 52) = v20[3];
  *(_OWORD *)(v9 + 36) = v12;
  *(_OWORD *)(v9 + 20) = v11;
  *(_OWORD *)(v9 + 4) = v10;
  long long v13 = v20[4];
  long long v14 = v20[5];
  long long v15 = v20[6];
  *(_OWORD *)(v9 + 113) = *(_OWORD *)((char *)&v20[6] + 13);
  *(_OWORD *)(v9 + 100) = v15;
  *(_OWORD *)(v9 + 84) = v14;
  *(_OWORD *)(v9 + 68) = v13;
  uint64_t v16 = sub_1001C0330();
  os_log_type_t v17 = sub_1001C11E0();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "initialized server driven configuration", v18, 2u);
    swift_slowDealloc();
  }

  return v1;
}

uint64_t TC2ServerDrivenConfiguration.init(from:)(unsigned char *a1)
{
  uint64_t v2 = v1;
  uint64_t v57 = a1;
  uint64_t v3 = sub_1001BEFF0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = &v50[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v52 = sub_1001BF0B0();
  uint64_t v59 = *(void *)(v52 - 8);
  uint64_t v9 = __chkstk_darwin(v52, v8);
  uint64_t v58 = &v50[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __chkstk_darwin(v9, v11);
  uint64_t v54 = &v50[-v13];
  __chkstk_darwin(v12, v14);
  uint64_t v16 = &v50[-v15];
  uint64_t v17 = sub_1001BF8E0();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  uint64_t v21 = &v50[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001BEDA0();
  swift_allocObject();
  *(void *)(v1 + 16) = sub_1001BED90();
  uint64_t v22 = (uint8_t *)(v1 + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration_logger);
  (*(void (**)(unsigned char *, void, uint64_t))(v18 + 104))(v21, enum case for TC2LogCategory.serverDrivenConfiguration(_:), v17);
  int64_t v56 = v22;
  sub_1001BFDD0();
  uint64_t v23 = v17;
  uint64_t v24 = v16;
  (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v21, v23);
  *(void *)&v61[0] = 0xD00000000000001ELL;
  *((void *)&v61[0] + 1) = 0x80000001001C6EE0;
  (*(void (**)(unsigned char *, void, uint64_t))(v4 + 104))(v7, enum case for URL.DirectoryHint.inferFromPath(_:), v3);
  sub_10001A364();
  sub_1001BF0A0();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
  uint64_t v25 = v52;
  swift_bridgeObjectRelease();
  uint64_t v26 = v2;
  uint64_t v27 = v2 + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration_file;
  uint64_t v28 = v59;
  uint64_t v29 = *(void (**)(uint64_t, unsigned char *, uint64_t))(v59 + 16);
  v29(v2 + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration_file, v24, v25);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v28 + 56))(v27, 0, 1, v25);
  uint64_t v30 = (unsigned char *)sub_1001BF0D0();
  uint64_t v55 = v2;
  long long v53 = (void (*)(unsigned char *, unsigned char *, uint64_t))v29;
  unint64_t v32 = v31;
  uint64_t v33 = v54;
  uint64_t v58 = v30;
  swift_retain();
  sub_10016CEA0((uint64_t)v62);
  swift_release();
  *(_OWORD *)((char *)&v61[2] + 4) = v62[2];
  *(_OWORD *)((char *)&v61[1] + 4) = v62[1];
  *(_OWORD *)((char *)v61 + 4) = v62[0];
  *(_OWORD *)((char *)&v61[6] + 13) = *(_OWORD *)&v63[9];
  *(_OWORD *)((char *)&v61[6] + 4) = *(_OWORD *)v63;
  *(_OWORD *)((char *)&v61[5] + 4) = v62[5];
  *(_OWORD *)((char *)&v61[4] + 4) = v62[4];
  *(_OWORD *)((char *)&v61[3] + 4) = v62[3];
  uint64_t v34 = v2 + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration__jsonModel;
  *(_DWORD *)uint64_t v34 = 0;
  long long v35 = v61[0];
  long long v36 = v61[1];
  long long v37 = v61[2];
  *(_OWORD *)(v34 + 52) = v61[3];
  *(_OWORD *)(v34 + 36) = v37;
  *(_OWORD *)(v34 + 20) = v36;
  *(_OWORD *)(v34 + 4) = v35;
  long long v38 = v61[4];
  long long v39 = v61[5];
  long long v40 = v61[6];
  *(_OWORD *)(v34 + 113) = *(_OWORD *)((char *)&v61[6] + 13);
  *(_OWORD *)(v34 + 100) = v40;
  *(_OWORD *)(v34 + 84) = v39;
  *(_OWORD *)(v34 + 68) = v38;
  v53(v33, v24, v25);
  uint64_t v41 = sub_1001C0330();
  os_log_type_t v42 = sub_1001C11E0();
  if (os_log_type_enabled(v41, v42))
  {
    os_log_type_t v43 = (uint8_t *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    long long v51 = v24;
    *(void *)&v61[0] = v44;
    *(_DWORD *)os_log_type_t v43 = 136315138;
    int64_t v56 = v43 + 4;
    sub_10016E158((unint64_t *)&qword_10020BF20, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v45 = sub_1001C1780();
    uint64_t v60 = sub_1000DF238(v45, v46, (uint64_t *)v61);
    uint64_t v26 = v55;
    sub_1001C1310();
    swift_bridgeObjectRelease();
    uint64_t v47 = *(void (**)(unsigned char *, uint64_t))(v59 + 8);
    v47(v33, v25);
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "initialized server driven configuration, file=%s", v43, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_10000792C((uint64_t)v58, v32);
    v47(v57, v25);
    v47(v51, v25);
  }
  else
  {
    sub_10000792C((uint64_t)v58, v32);

    uint64_t v48 = *(void (**)(unsigned char *, uint64_t))(v59 + 8);
    v48(v33, v25);
    v48(v57, v25);
    v48(v24, v25);
  }
  return v26;
}

uint64_t TC2ServerDrivenConfiguration.liveOnProdSpillover.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration__jsonModel;
  os_unfair_lock_lock((os_unfair_lock_t)(v0
                                       + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration__jsonModel));
  uint64_t v2 = *(void *)(v1 + 48);
  os_unfair_lock_unlock((os_unfair_lock_t)v1);
  uint64_t v3 = sub_1001C0330();
  os_log_type_t v4 = sub_1001C11D0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    sub_100003918(&qword_10020E958);
    uint64_t v6 = sub_1001C0C40();
    sub_1000DF238(v6, v7, &v9);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "liveOnProdSpillover: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  return v2;
}

uint64_t TC2ServerDrivenConfiguration.prewarmAttestationsValidityInSeconds.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration__jsonModel;
  os_unfair_lock_lock((os_unfair_lock_t)(v0
                                       + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration__jsonModel));
  uint64_t v2 = *(void *)(v1 + 64);
  os_unfair_lock_unlock((os_unfair_lock_t)v1);
  uint64_t v3 = sub_1001C0330();
  os_log_type_t v4 = sub_1001C11D0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    sub_100003918(&qword_10020E958);
    uint64_t v6 = sub_1001C0C40();
    sub_1000DF238(v6, v7, &v9);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "prewarmAttestationsValidityInSeconds: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  return v2;
}

uint64_t TC2ServerDrivenConfiguration.maxPrefetchBatches.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration__jsonModel;
  os_unfair_lock_lock((os_unfair_lock_t)(v0
                                       + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration__jsonModel));
  uint64_t v2 = *(void *)(v1 + 80);
  os_unfair_lock_unlock((os_unfair_lock_t)v1);
  uint64_t v3 = sub_1001C0330();
  os_log_type_t v4 = sub_1001C11D0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    sub_100003918(&qword_10020E930);
    uint64_t v6 = sub_1001C0C40();
    sub_1000DF238(v6, v7, &v9);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "maxPrefetchBatches: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  return v2;
}

uint64_t TC2ServerDrivenConfiguration.deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration_logger;
  uint64_t v2 = sub_1001C0340();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100010360(v0 + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration_file, &qword_10020C370);
  sub_100010360(v0 + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration__jsonModel, &qword_10020E960);
  return v0;
}

uint64_t TC2ServerDrivenConfiguration.__deallocating_deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration_logger;
  uint64_t v2 = sub_1001C0340();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100010360(v0 + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration_file, &qword_10020C370);
  sub_100010360(v0 + OBJC_IVAR____TtC20privatecloudcomputed28TC2ServerDrivenConfiguration__jsonModel, &qword_10020E960);
  return swift_deallocClassInstance();
}

uint64_t sub_10016839C(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v27 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v11 >= v27) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v27) {
        return 1;
      }
      unint64_t v12 = *(void *)(v5 + 8 * v4);
      if (!v12)
      {
        int64_t v4 = v11 + 2;
        if (v11 + 2 >= v27) {
          return 1;
        }
        unint64_t v12 = *(void *)(v5 + 8 * v4);
        if (!v12) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_23:
    uint64_t v14 = 16 * v10;
    uint64_t v15 = (uint64_t *)(*(void *)(v3 + 48) + v14);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = (uint64_t *)(*(void *)(v3 + 56) + v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_100169E3C(v16, v17);
    char v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v24 = (void *)(*(void *)(a2 + 56) + 16 * v21);
    if (*v24 == v20 && v24[1] == v19)
    {
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      char v26 = sub_1001C1840();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v26 & 1) == 0) {
        return 0;
      }
    }
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v27) {
    return 1;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v27) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1001685A4(uint64_t a1, uint64_t a2)
{
  uint64_t v59 = type metadata accessor for Proto_Ropes_RateLimit_Values(0);
  uint64_t v61 = *(void *)(v59 - 8);
  uint64_t v5 = __chkstk_darwin(v59, v4);
  uint64_t v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  unint64_t v10 = (char *)&v54 - v9;
  uint64_t v11 = sub_100003918(&qword_10020EA60);
  uint64_t v13 = __chkstk_darwin(v11 - 8, v12);
  uint64_t v15 = (uint64_t *)((char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = __chkstk_darwin(v13, v16);
  uint64_t v19 = (uint64_t *)((char *)&v54 - v18);
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v60 = 0;
  uint64_t v58 = a1;
  uint64_t v22 = *(void *)(a1 + 64);
  uint64_t v21 = a1 + 64;
  uint64_t v20 = v22;
  uint64_t v23 = 1 << *(unsigned char *)(v21 - 32);
  uint64_t v24 = -1;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  unint64_t v25 = v24 & v20;
  uint64_t v56 = v21;
  int64_t v57 = (unint64_t)(v23 + 63) >> 6;
  int64_t v55 = v57 - 1;
  while (1)
  {
    if (v25)
    {
      unint64_t v27 = __clz(__rbit64(v25));
      v25 &= v25 - 1;
      unint64_t v28 = v27 | (v60 << 6);
LABEL_9:
      uint64_t v29 = (uint64_t *)(*(void *)(v58 + 48) + 16 * v28);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      uint64_t v32 = *(void *)(v58 + 56) + *(void *)(v61 + 72) * v28;
      uint64_t v33 = sub_100003918(&qword_100209370);
      sub_10016E208(v32, (uint64_t)v15 + *(int *)(v33 + 48), type metadata accessor for Proto_Ropes_RateLimit_Values);
      void *v15 = v31;
      v15[1] = v30;
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v15, 0, 1, v33);
      swift_bridgeObjectRetain();
      goto LABEL_28;
    }
    int64_t v34 = v60 + 1;
    if (__OFADD__(v60, 1))
    {
      __break(1u);
      goto LABEL_54;
    }
    if (v34 < v57)
    {
      unint64_t v35 = *(void *)(v56 + 8 * v34);
      if (v35) {
        goto LABEL_13;
      }
      int64_t v36 = v60 + 2;
      ++v60;
      if (v34 + 1 < v57)
      {
        unint64_t v35 = *(void *)(v56 + 8 * v36);
        if (v35) {
          goto LABEL_16;
        }
        int64_t v60 = v34 + 1;
        if (v34 + 2 < v57)
        {
          unint64_t v35 = *(void *)(v56 + 8 * (v34 + 2));
          if (v35)
          {
            v34 += 2;
            goto LABEL_13;
          }
          int64_t v36 = v34 + 3;
          int64_t v60 = v34 + 2;
          if (v34 + 3 < v57) {
            break;
          }
        }
      }
    }
LABEL_27:
    uint64_t v37 = sub_100003918(&qword_100209370);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v15, 1, 1, v37);
    unint64_t v25 = 0;
LABEL_28:
    sub_10002C318((uint64_t)v15, (uint64_t)v19, &qword_10020EA60);
    uint64_t v38 = sub_100003918(&qword_100209370);
    int v39 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 48))(v19, 1, v38);
    BOOL v40 = v39 == 1;
    if (v39 == 1) {
      return v40;
    }
    uint64_t v41 = (uint64_t)v19 + *(int *)(v38 + 48);
    uint64_t v42 = *v19;
    uint64_t v43 = v19[1];
    sub_10016E1A0(v41, (uint64_t)v10, type metadata accessor for Proto_Ropes_RateLimit_Values);
    unint64_t v44 = sub_100169E3C(v42, v43);
    char v46 = v45;
    swift_bridgeObjectRelease();
    if ((v46 & 1) == 0) {
      goto LABEL_49;
    }
    sub_10016E208(*(void *)(a2 + 56) + *(void *)(v61 + 72) * v44, (uint64_t)v7, type metadata accessor for Proto_Ropes_RateLimit_Values);
    uint64_t v47 = *(void **)v7;
    uint64_t v48 = *(void **)v10;
    uint64_t v49 = *(void *)(*(void *)v7 + 16);
    if (v49 != *(void *)(*(void *)v10 + 16)) {
      goto LABEL_48;
    }
    if (v49 && v47 != v48)
    {
      if ((v47[4] != v48[4] || v47[5] != v48[5]) && (sub_1001C1840() & 1) == 0) {
        goto LABEL_48;
      }
      if (v49 != 1)
      {
        if ((v47[6] != v48[6] || v47[7] != v48[7]) && (sub_1001C1840() & 1) == 0) {
          goto LABEL_48;
        }
        uint64_t v50 = v49 - 2;
        if (v50)
        {
          long long v51 = v48 + 9;
          uint64_t v52 = v47 + 9;
          while (1)
          {
            BOOL v53 = *(v52 - 1) == *(v51 - 1) && *v52 == *v51;
            if (!v53 && (sub_1001C1840() & 1) == 0) {
              break;
            }
            v51 += 2;
            v52 += 2;
            if (!--v50) {
              goto LABEL_6;
            }
          }
LABEL_48:
          sub_10016E270((uint64_t)v7, type metadata accessor for Proto_Ropes_RateLimit_Values);
LABEL_49:
          sub_10016E270((uint64_t)v10, type metadata accessor for Proto_Ropes_RateLimit_Values);
          return 0;
        }
      }
    }
LABEL_6:
    sub_1001BFE60();
    sub_10016E158(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v26 = sub_1001C0BD0();
    sub_10016E270((uint64_t)v7, type metadata accessor for Proto_Ropes_RateLimit_Values);
    uint64_t result = sub_10016E270((uint64_t)v10, type metadata accessor for Proto_Ropes_RateLimit_Values);
    if ((v26 & 1) == 0) {
      return v40;
    }
  }
  unint64_t v35 = *(void *)(v56 + 8 * v36);
  if (v35)
  {
LABEL_16:
    int64_t v34 = v36;
LABEL_13:
    unint64_t v25 = (v35 - 1) & v35;
    unint64_t v28 = __clz(__rbit64(v35)) + (v34 << 6);
    int64_t v60 = v34;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v34 = v36 + 1;
    if (__OFADD__(v36, 1)) {
      break;
    }
    if (v34 >= v57)
    {
      int64_t v60 = v55;
      goto LABEL_27;
    }
    unint64_t v35 = *(void *)(v56 + 8 * v34);
    ++v36;
    if (v35) {
      goto LABEL_13;
    }
  }
LABEL_54:
  __break(1u);
  return result;
}

uint64_t sub_100168BBC(uint64_t a1, uint64_t a2)
{
  return sub_100169CA0(a1, a2, type metadata accessor for Proto_Ropes_Common_Attestation, type metadata accessor for Proto_Ropes_Common_Attestation, (uint64_t (*)(char *, char *))static Proto_Ropes_Common_Attestation.== infix(_:_:), type metadata accessor for Proto_Ropes_Common_Attestation);
}

uint64_t sub_100168C10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (uint64_t *)((char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_100003918(&qword_10020A670);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v56 = (uint64_t *)((char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v58 = sub_100003918(&qword_10020B8F0);
  __chkstk_darwin(v58, v12);
  uint64_t v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload(0);
  uint64_t v16 = __chkstk_darwin(v57, v15);
  uint64_t v18 = (char **)((char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16, v19);
  uint64_t v22 = (char **)((char *)&v49 - v21);
  uint64_t v23 = *(void *)(a1 + 16);
  if (v23 != *(void *)(a2 + 16))
  {
LABEL_45:
    char v43 = 0;
    return v43 & 1;
  }
  if (v23 && a1 != a2)
  {
    uint64_t v49 = v14;
    uint64_t v50 = v8;
    uint64_t v24 = 0;
    unint64_t v25 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    uint64_t v54 = a2 + v25;
    uint64_t v55 = a1 + v25;
    uint64_t v26 = *(void *)(v20 + 72);
    uint64_t v52 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
    uint64_t v53 = v26;
    uint64_t v27 = v57;
    uint64_t v51 = v23;
    while (1)
    {
      uint64_t v28 = v53 * v24;
      sub_10016E208(v55 + v53 * v24, (uint64_t)v22, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload);
      sub_10016E208(v54 + v28, (uint64_t)v18, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload);
      BOOL v29 = *v22 == *v18 && v22[1] == v18[1];
      if (!v29 && (sub_1001C1840() & 1) == 0) {
        goto LABEL_44;
      }
      uint64_t v30 = (void *)v22[2];
      uint64_t v31 = (void *)v18[2];
      uint64_t v32 = v30[2];
      if (v32 != v31[2]) {
        goto LABEL_44;
      }
      if (v32 && v30 != v31)
      {
        BOOL v34 = v30[4] == v31[4] && v30[5] == v31[5];
        if (!v34 && (sub_1001C1840() & 1) == 0) {
          goto LABEL_44;
        }
        uint64_t v35 = v32 - 1;
        if (v35) {
          break;
        }
      }
LABEL_21:
      uint64_t v36 = *(int *)(v27 + 28);
      uint64_t v37 = (uint64_t)v18 + v36;
      uint64_t v38 = (uint64_t)&v14[*(int *)(v58 + 48)];
      sub_10003282C((uint64_t)v22 + v36, (uint64_t)v14, &qword_10020A670);
      sub_10003282C(v37, v38, &qword_10020A670);
      int v39 = *v52;
      if ((*v52)(v14, 1, v4) == 1)
      {
        if (v39((char *)v38, 1, v4) != 1)
        {
          uint64_t v47 = &qword_10020B8F0;
          goto LABEL_43;
        }
        sub_100010360((uint64_t)v14, &qword_10020A670);
      }
      else
      {
        BOOL v40 = v56;
        sub_10003282C((uint64_t)v14, (uint64_t)v56, &qword_10020A670);
        if (v39((char *)v38, 1, v4) == 1)
        {
          uint64_t v47 = &qword_10020B8F0;
          goto LABEL_42;
        }
        uint64_t v41 = v50;
        sub_10016E1A0(v38, (uint64_t)v50, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters);
        if ((sub_10016839C(*v40, *v41) & 1) == 0)
        {
          sub_10016E270((uint64_t)v41, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters);
          uint64_t v47 = &qword_10020A670;
LABEL_42:
          sub_10016E270((uint64_t)v40, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters);
LABEL_43:
          sub_100010360((uint64_t)v14, v47);
          goto LABEL_44;
        }
        sub_1001BFE60();
        sub_10016E158(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        uint64_t v14 = v49;
        char v42 = sub_1001C0BD0();
        sub_10016E270((uint64_t)v41, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters);
        sub_10016E270((uint64_t)v40, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload.Parameters);
        sub_100010360((uint64_t)v14, &qword_10020A670);
        uint64_t v27 = v57;
        if ((v42 & 1) == 0) {
          goto LABEL_44;
        }
      }
      sub_1001BFE60();
      sub_10016E158(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v43 = sub_1001C0BD0();
      sub_10016E270((uint64_t)v18, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload);
      sub_10016E270((uint64_t)v22, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload);
      if ((v43 & 1) != 0 && ++v24 != v51) {
        continue;
      }
      return v43 & 1;
    }
    unint64_t v44 = v31 + 7;
    char v45 = v30 + 7;
    while (1)
    {
      BOOL v46 = *(v45 - 1) == *(v44 - 1) && *v45 == *v44;
      if (!v46 && (sub_1001C1840() & 1) == 0) {
        break;
      }
      v44 += 2;
      v45 += 2;
      if (!--v35) {
        goto LABEL_21;
      }
    }
LABEL_44:
    sub_10016E270((uint64_t)v18, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload);
    sub_10016E270((uint64_t)v22, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.Workload);
    goto LABEL_45;
  }
  char v43 = 1;
  return v43 & 1;
}

uint64_t sub_100169270(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint(0);
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v8 = (uint64_t *)((char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6, v9);
  uint64_t v12 = (uint64_t *)((char *)&v21 - v11);
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13 == *(void *)(a2 + 16))
  {
    if (!v13 || a1 == a2)
    {
      char v17 = 1;
    }
    else
    {
      unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      uint64_t v22 = *(void *)(v10 + 72);
      uint64_t v15 = v13 - 1;
      while (1)
      {
        sub_10016E208(a1 + v14, (uint64_t)v12, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint);
        sub_10016E208(a2 + v14, (uint64_t)v8, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint);
        BOOL v16 = *v12 == *v8 && v12[1] == v8[1];
        if (!v16 && (sub_1001C1840() & 1) == 0) {
          break;
        }
        sub_1001BFE60();
        sub_10016E158(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        char v17 = sub_1001C0BD0();
        sub_10016E270((uint64_t)v8, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint);
        sub_10016E270((uint64_t)v12, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint);
        BOOL v19 = v15-- != 0;
        if (v17)
        {
          v14 += v22;
          if (v19) {
            continue;
          }
        }
        return v17 & 1;
      }
      sub_10016E270((uint64_t)v8, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint);
      sub_10016E270((uint64_t)v12, type metadata accessor for Proto_Ropes_HttpService_AdminApiResponse.ApiEndpoint);
      char v17 = 0;
    }
  }
  else
  {
    char v17 = 0;
  }
  return v17 & 1;
}

uint64_t sub_1001694D0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (char v6 = sub_1001C1840(), result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_1001C1840() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_100169598(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping(0);
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v12 = (char *)&v17 - v11;
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13 == *(void *)(a2 + 16))
  {
    if (!v13 || a1 == a2) {
      return 1;
    }
    unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v18 = *(void *)(v10 + 72);
    while (1)
    {
      sub_10016E208(a1 + v14, (uint64_t)v12, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping);
      sub_10016E208(a2 + v14, (uint64_t)v8, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping);
      BOOL v15 = *(void *)v12 == *(void *)v8 && *((void *)v12 + 1) == *((void *)v8 + 1);
      if (!v15 && (sub_1001C1840() & 1) == 0) {
        break;
      }
      if (*((_DWORD *)v12 + 4) != *((_DWORD *)v8 + 4)) {
        break;
      }
      sub_1001BFE60();
      sub_10016E158(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      if ((sub_1001C0BD0() & 1) == 0) {
        break;
      }
      sub_10016E270((uint64_t)v8, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping);
      sub_10016E270((uint64_t)v12, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping);
      v14 += v18;
      if (!--v13) {
        return 1;
      }
    }
    sub_10016E270((uint64_t)v8, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping);
    sub_10016E270((uint64_t)v12, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping);
  }
  return 0;
}

uint64_t sub_1001697EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (uint64_t *)(a1 + 32);
    uint64_t v4 = (unsigned char *)(a2 + 40);
    do
    {
      uint64_t v6 = *v3;
      v3 += 2;
      uint64_t v5 = v6;
      uint64_t v7 = *((void *)v4 - 1);
      if (*v4 == 1)
      {
        if (v7)
        {
          if (v7 == 1)
          {
            if (v5 != 1) {
              return 0;
            }
          }
          else if (v5 != 2)
          {
            return 0;
          }
        }
        else if (v5)
        {
          return 0;
        }
      }
      else if (v5 != v7)
      {
        return 0;
      }
      v4 += 16;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_100169874(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Proto_Ropes_Common_Workload.Parameter(0);
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v8 = (uint64_t *)((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6, v9);
  uint64_t v12 = (uint64_t *)((char *)&v30 - v11);
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v13 && a1 != a2)
  {
    uint64_t v14 = 0;
    unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v31 = a1 + v15;
    uint64_t v16 = a2 + v15;
    uint64_t v17 = *(void *)(v10 + 72);
    while (1)
    {
      sub_10016E208(v31 + v17 * v14, (uint64_t)v12, type metadata accessor for Proto_Ropes_Common_Workload.Parameter);
      sub_10016E208(v16 + v17 * v14, (uint64_t)v8, type metadata accessor for Proto_Ropes_Common_Workload.Parameter);
      BOOL v18 = *v12 == *v8 && v12[1] == v8[1];
      if (!v18 && (sub_1001C1840() & 1) == 0) {
        break;
      }
      BOOL v19 = (void *)v12[2];
      uint64_t v20 = (void *)v8[2];
      uint64_t v21 = v19[2];
      if (v21 != v20[2]) {
        break;
      }
      if (v21) {
        BOOL v22 = v19 == v20;
      }
      else {
        BOOL v22 = 1;
      }
      if (!v22)
      {
        BOOL v23 = v19[4] == v20[4] && v19[5] == v20[5];
        if (!v23 && (sub_1001C1840() & 1) == 0) {
          break;
        }
        if (v21 != 1)
        {
          BOOL v24 = v19[6] == v20[6] && v19[7] == v20[7];
          if (!v24 && (sub_1001C1840() & 1) == 0) {
            break;
          }
          uint64_t v25 = v21 - 2;
          if (v25)
          {
            uint64_t v26 = v20 + 9;
            uint64_t v27 = v19 + 9;
            do
            {
              BOOL v28 = *(v27 - 1) == *(v26 - 1) && *v27 == *v26;
              if (!v28 && (sub_1001C1840() & 1) == 0) {
                goto LABEL_37;
              }
              v26 += 2;
              v27 += 2;
            }
            while (--v25);
          }
        }
      }
      sub_1001BFE60();
      sub_10016E158(&qword_100209FB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      if ((sub_1001C0BD0() & 1) == 0) {
        break;
      }
      ++v14;
      sub_10016E270((uint64_t)v8, type metadata accessor for Proto_Ropes_Common_Workload.Parameter);
      sub_10016E270((uint64_t)v12, type metadata accessor for Proto_Ropes_Common_Workload.Parameter);
      if (v14 == v13) {
        return 1;
      }
    }
LABEL_37:
    sub_10016E270((uint64_t)v8, type metadata accessor for Proto_Ropes_Common_Workload.Parameter);
    sub_10016E270((uint64_t)v12, type metadata accessor for Proto_Ropes_Common_Workload.Parameter);
    return 0;
  }
  return 1;
}

uint64_t sub_100169B84(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (uint64_t *)(a2 + 56);
    for (i = (uint64_t *)(a1 + 56); ; i += 4)
    {
      uint64_t v5 = *(i - 1);
      uint64_t v6 = *i;
      uint64_t v7 = *(v3 - 1);
      uint64_t v8 = *v3;
      BOOL v9 = *(i - 3) == *(v3 - 3) && *(i - 2) == *(v3 - 2);
      if (!v9 && (sub_1001C1840() & 1) == 0) {
        break;
      }
      BOOL v10 = v5 == v7 && v6 == v8;
      if (!v10 && (sub_1001C1840() & 1) == 0) {
        break;
      }
      v3 += 4;
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_100169C4C(uint64_t a1, uint64_t a2)
{
  return sub_100169CA0(a1, a2, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration, (uint64_t (*)(char *, char *))static Proto_Ropes_RateLimit_RateLimitConfiguration.== infix(_:_:), type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
}

uint64_t sub_100169CA0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(char *, char *), uint64_t (*a6)(void))
{
  uint64_t v11 = a3(0) - 8;
  uint64_t v13 = __chkstk_darwin(v11, v12);
  unint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v16);
  BOOL v19 = (char *)&v29 - v18;
  uint64_t v20 = *(void *)(a1 + 16);
  if (v20 == *(void *)(a2 + 16))
  {
    if (!v20 || a1 == a2)
    {
      char v25 = 1;
    }
    else
    {
      uint64_t v30 = a2;
      uint64_t v21 = a5;
      unint64_t v22 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
      uint64_t v23 = *(void *)(v17 + 72);
      uint64_t v24 = v20 - 1;
      do
      {
        sub_10016E208(a1 + v22, (uint64_t)v19, a4);
        sub_10016E208(v30 + v22, (uint64_t)v15, a4);
        char v25 = v21(v19, v15);
        sub_10016E270((uint64_t)v15, a6);
        sub_10016E270((uint64_t)v19, a6);
        BOOL v27 = v24-- != 0;
        if ((v25 & 1) == 0) {
          break;
        }
        v22 += v23;
      }
      while (v27);
    }
  }
  else
  {
    char v25 = 0;
  }
  return v25 & 1;
}

unint64_t sub_100169E3C(uint64_t a1, uint64_t a2)
{
  sub_1001C1950();
  sub_1001C0CB0();
  Swift::Int v4 = sub_1001C1990();
  return sub_10016A468(a1, a2, v4);
}

unint64_t sub_100169EB4(uint64_t a1)
{
  sub_1001BF310();
  sub_10016E158((unint64_t *)&qword_1002087B0, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v2 = sub_1001C0BA0();
  return sub_10016A54C(a1, v2);
}

unint64_t sub_100169F4C(void *a1)
{
  sub_1001C1950();
  sub_10002F294();
  Swift::Int v2 = sub_1001C1990();
  return sub_10016A70C(a1, v2);
}

unint64_t sub_100169FB8(uint64_t *a1)
{
  sub_1001C1950();
  swift_bridgeObjectRetain();
  sub_1001C0CB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1001C0CB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1001C0CB0();
  swift_bridgeObjectRelease();
  uint64_t v2 = a1[6];
  swift_bridgeObjectRetain();
  sub_10018FB7C((uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  Swift::Int v3 = sub_1001C1990();
  return sub_10016A928(a1, v3);
}

uint64_t sub_10016A0A4(uint64_t a1)
{
  return sub_10016A1AC(a1, (void (*)(uint64_t))sub_1001BBC7C, (uint64_t (*)(uint64_t, Swift::Int))sub_10016AAE8);
}

uint64_t sub_10016A0D0(uint64_t a1)
{
  return sub_10016A1AC(a1, (void (*)(uint64_t))sub_1001BC960, (uint64_t (*)(uint64_t, Swift::Int))sub_10016AC60);
}

uint64_t sub_10016A0FC(uint64_t a1)
{
  return sub_10016A1AC(a1, (void (*)(uint64_t))sub_1001BC44C, (uint64_t (*)(uint64_t, Swift::Int))sub_10016B09C);
}

uint64_t sub_10016A128(uint64_t a1)
{
  return sub_10016A1AC(a1, (void (*)(uint64_t))sub_1001BCFDC, (uint64_t (*)(uint64_t, Swift::Int))sub_10016B560);
}

uint64_t sub_10016A154(uint64_t a1)
{
  return sub_10016A1AC(a1, (void (*)(uint64_t))sub_1001BC19C, (uint64_t (*)(uint64_t, Swift::Int))sub_10016BA00);
}

uint64_t sub_10016A180(uint64_t a1)
{
  return sub_10016A1AC(a1, (void (*)(uint64_t))sub_1001BC6E8, (uint64_t (*)(uint64_t, Swift::Int))sub_10016BEBC);
}

uint64_t sub_10016A1AC(uint64_t a1, void (*a2)(uint64_t), uint64_t (*a3)(uint64_t, Swift::Int))
{
  sub_1001C1950();
  a2(a1);
  sub_1001C0CB0();
  swift_bridgeObjectRelease();
  Swift::Int v5 = sub_1001C1990();
  return a3(a1, v5);
}

unint64_t sub_10016A248(unsigned __int8 a1)
{
  sub_1001C1950();
  sub_1001C0CB0();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_1001C1990();
  return sub_10016C338(a1, v2);
}

unint64_t sub_10016A380(unsigned __int8 a1)
{
  Swift::Int v2 = sub_1000E09BC();
  return sub_10016C5B8(a1, v2);
}

unint64_t sub_10016A3C4(uint64_t a1, uint64_t a2, int a3)
{
  sub_1001C1950();
  swift_bridgeObjectRetain();
  sub_1001C0CB0();
  swift_bridgeObjectRelease();
  sub_1001C1970(a3 & 1);
  Swift::Int v6 = sub_1001C1990();
  return sub_10016C8C0(a1, a2, a3, v6);
}

unint64_t sub_10016A468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    BOOL v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1001C1840() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1001C1840() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_10016A54C(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a1;
  uint64_t v4 = sub_1001BF310();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v2;
  uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v10 = a2 & ~v9;
  uint64_t v19 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    BOOL v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v13 = v5 + 16;
    uint64_t v12 = v14;
    uint64_t v15 = *(void *)(v13 + 56);
    do
    {
      v12(v8, *(void *)(v21 + 48) + v15 * v10, v4);
      sub_10016E158(&qword_10020CB20, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v16 = sub_1001C0BD0();
      (*(void (**)(char *, uint64_t))(v13 - 8))(v8, v4);
      if (v16) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
    }
    while (((*(void *)(v19 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_10016A70C(void *a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  uint64_t v39 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = a1;
    uint64_t v38 = ~v3;
    uint64_t v6 = a1[1];
    uint64_t v36 = *a1;
    uint64_t v7 = *(void *)(v2 + 48);
    do
    {
      uint64_t v8 = (void *)(v7 + 56 * v4);
      uint64_t v9 = v8[1];
      uint64_t v10 = v8[2];
      uint64_t v12 = v8[3];
      uint64_t v11 = v8[4];
      uint64_t v14 = v8[5];
      uint64_t v13 = v8[6];
      if (v9)
      {
        if (!v6) {
          goto LABEL_4;
        }
        if (*v8 != v36 || v9 != v6)
        {
          char v16 = sub_1001C1840();
          uint64_t v5 = a1;
          if ((v16 & 1) == 0) {
            goto LABEL_4;
          }
        }
      }
      else if (v6)
      {
        goto LABEL_4;
      }
      uint64_t v17 = v5[3];
      if (v12)
      {
        if (!v17) {
          goto LABEL_4;
        }
        if (v10 != v5[2] || v12 != v17)
        {
          char v19 = sub_1001C1840();
          uint64_t v5 = a1;
          if ((v19 & 1) == 0) {
            goto LABEL_4;
          }
        }
      }
      else if (v17)
      {
        goto LABEL_4;
      }
      uint64_t v20 = v5[5];
      if (v14)
      {
        if (!v20) {
          goto LABEL_4;
        }
        if (v11 != v5[4] || v14 != v20)
        {
          char v22 = sub_1001C1840();
          uint64_t v5 = a1;
          if ((v22 & 1) == 0) {
            goto LABEL_4;
          }
        }
      }
      else if (v20)
      {
        goto LABEL_4;
      }
      uint64_t v23 = v5[6];
      uint64_t v24 = *(void *)(v13 + 16);
      if (v24 == *(void *)(v23 + 16))
      {
        if (!v24 || v13 == v23) {
          return v4;
        }
        char v25 = (uint64_t *)(v23 + 56);
        for (i = (uint64_t *)(v13 + 56); ; i += 4)
        {
          uint64_t v27 = *(i - 1);
          uint64_t v28 = *i;
          uint64_t v29 = *(v25 - 1);
          uint64_t v30 = *v25;
          if (*(i - 3) != *(v25 - 3) || *(i - 2) != *(v25 - 2))
          {
            char v32 = sub_1001C1840();
            uint64_t v5 = a1;
            if ((v32 & 1) == 0) {
              break;
            }
          }
          if (v27 != v29 || v28 != v30)
          {
            char v34 = sub_1001C1840();
            uint64_t v5 = a1;
            if ((v34 & 1) == 0) {
              break;
            }
          }
          v25 += 4;
          if (!--v24) {
            return v4;
          }
        }
      }
LABEL_4:
      unint64_t v4 = (v4 + 1) & v38;
    }
    while (((*(void *)(v39 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_10016A928(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v22 = ~v3;
    uint64_t v5 = *a1;
    uint64_t v6 = a1[1];
    uint64_t v7 = a1[3];
    uint64_t v25 = a1[2];
    uint64_t v20 = a1[5];
    uint64_t v21 = a1[4];
    uint64_t v19 = a1[6];
    do
    {
      uint64_t v10 = (void *)(*(void *)(v24 + 48) + 56 * v4);
      uint64_t v11 = v10[2];
      uint64_t v12 = v10[3];
      uint64_t v13 = v10[4];
      uint64_t v14 = v10[5];
      BOOL v15 = *v10 == v5 && v10[1] == v6;
      if (v15 || (sub_1001C1840() & 1) != 0)
      {
        BOOL v16 = v11 == v25 && v12 == v7;
        if (v16 || (sub_1001C1840() & 1) != 0)
        {
          BOOL v17 = v13 == v21 && v14 == v20;
          if (v17 || (sub_1001C1840() & 1) != 0)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v8 = swift_bridgeObjectRetain();
            char v9 = sub_10016839C(v8, v19);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v9) {
              break;
            }
          }
        }
      }
      unint64_t v4 = (v4 + 1) & v22;
    }
    while (((*(void *)(v23 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_10016AAE8(char a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    unint64_t v7 = sub_1001BBC7C(*(unsigned char *)(*(void *)(v2 + 48) + v5));
    uint64_t v9 = v8;
    if (v7 == sub_1001BBC7C(a1) && v9 == v10)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v12 = sub_1001C1840();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      uint64_t v13 = ~v4;
      unint64_t v5 = (v5 + 1) & v13;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          unint64_t v14 = sub_1001BBC7C(*(unsigned char *)(*(void *)(v2 + 48) + v5));
          uint64_t v16 = v15;
          if (v14 == sub_1001BBC7C(a1) && v16 == v17) {
            break;
          }
          char v19 = sub_1001C1840();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v19 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v13;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_10016AC60(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE900000000000065;
      unint64_t v8 = 0x6D6954746E657665;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE300000000000000;
          unint64_t v8 = 7761509;
          break;
        case 2:
          unint64_t v8 = 0x696C43656C707061;
          unint64_t v7 = 0xEF6F666E49746E65;
          break;
        case 3:
          unint64_t v8 = 0x616546656C707061;
          unint64_t v7 = 0xEE00646965727574;
          break;
        case 4:
          unint64_t v8 = 0xD000000000000012;
          unint64_t v7 = 0x80000001001C2890;
          break;
        case 5:
          unint64_t v8 = 0x6E7542656C707061;
          unint64_t v7 = 0xED00006469656C64;
          break;
        case 6:
          unint64_t v7 = 0x80000001001C28C0;
          goto LABEL_14;
        case 7:
          unint64_t v8 = 0x636F4C656C707061;
          unint64_t v7 = 0xEB00000000656C61;
          break;
        case 8:
          unint64_t v8 = 0x6552746E65696C63;
          unint64_t v7 = 0xEF64497473657571;
          break;
        case 9:
          unint64_t v8 = 0xD000000000000015;
          unint64_t v7 = 0x80000001001C2E20;
          break;
        case 0xA:
          unint64_t v7 = 0x80000001001C2E40;
LABEL_14:
          unint64_t v8 = 0xD000000000000013;
          break;
        default:
          break;
      }
      unint64_t v9 = 0x6D6954746E657665;
      unint64_t v10 = 0xE900000000000065;
      switch(v6)
      {
        case 1:
          unint64_t v10 = 0xE300000000000000;
          if (v8 == 7761509) {
            goto LABEL_33;
          }
          goto LABEL_34;
        case 2:
          unint64_t v10 = 0xEF6F666E49746E65;
          if (v8 != 0x696C43656C707061) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 3:
          unint64_t v10 = 0xEE00646965727574;
          if (v8 != 0x616546656C707061) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 4:
          unint64_t v10 = 0x80000001001C2890;
          if (v8 != 0xD000000000000012) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 5:
          unint64_t v10 = 0xED00006469656C64;
          if (v8 != 0x6E7542656C707061) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 6:
          unint64_t v10 = 0x80000001001C28C0;
          goto LABEL_38;
        case 7:
          unint64_t v10 = 0xEB00000000656C61;
          if (v8 != 0x636F4C656C707061) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 8:
          unint64_t v10 = 0xEF64497473657571;
          if (v8 != 0x6552746E65696C63) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 9:
          unint64_t v9 = 0xD000000000000015;
          unint64_t v10 = 0x80000001001C2E20;
          goto LABEL_32;
        case 10:
          unint64_t v10 = 0x80000001001C2E40;
LABEL_38:
          if (v8 != 0xD000000000000013) {
            goto LABEL_34;
          }
          goto LABEL_33;
        default:
LABEL_32:
          if (v8 != v9) {
            goto LABEL_34;
          }
LABEL_33:
          if (v7 == v10)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_34:
          char v11 = sub_1001C1840();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_10016B09C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE900000000000065;
      unint64_t v8 = 0x6D6974746E657665;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE300000000000000;
          unint64_t v8 = 7761509;
          break;
        case 2:
          unint64_t v8 = 0x696C63656C707061;
          unint64_t v7 = 0xEF6F666E69746E65;
          break;
        case 3:
          unint64_t v8 = 0x616566656C707061;
          unint64_t v7 = 0xEE00646965727574;
          break;
        case 4:
          unint64_t v8 = 0xD000000000000012;
          unint64_t v7 = 0x80000001001C2CE0;
          break;
        case 5:
          unint64_t v8 = 0x6E7562656C707061;
          unint64_t v7 = 0xED00006469656C64;
          break;
        case 6:
          unint64_t v8 = 0xD000000000000013;
          unint64_t v7 = 0x80000001001C28C0;
          break;
        case 7:
          unint64_t v8 = 0x636F6C656C707061;
          unint64_t v7 = 0xEB00000000656C61;
          break;
        case 8:
          unint64_t v8 = 0x6572746E65696C63;
          unint64_t v7 = 0xEF64697473657571;
          break;
        case 9:
          unint64_t v8 = 0xD000000000000017;
          unint64_t v7 = 0x80000001001C2D20;
          break;
        case 0xA:
          unint64_t v8 = 0xD00000000000001ELL;
          unint64_t v7 = 0x80000001001C2D40;
          break;
        case 0xB:
          unint64_t v8 = 0xD00000000000001CLL;
          unint64_t v7 = 0x80000001001C2D60;
          break;
        case 0xC:
          unint64_t v7 = 0x80000001001C2D80;
          goto LABEL_17;
        case 0xD:
          unint64_t v7 = 0x80000001001C2DA0;
LABEL_17:
          unint64_t v8 = 0xD00000000000001DLL;
          break;
        default:
          break;
      }
      unint64_t v9 = 0x6D6974746E657665;
      unint64_t v10 = 0xE900000000000065;
      switch(v6)
      {
        case 1:
          unint64_t v10 = 0xE300000000000000;
          if (v8 == 7761509) {
            goto LABEL_39;
          }
          goto LABEL_40;
        case 2:
          unint64_t v10 = 0xEF6F666E69746E65;
          if (v8 != 0x696C63656C707061) {
            goto LABEL_40;
          }
          goto LABEL_39;
        case 3:
          unint64_t v10 = 0xEE00646965727574;
          if (v8 != 0x616566656C707061) {
            goto LABEL_40;
          }
          goto LABEL_39;
        case 4:
          unint64_t v11 = 0xD000000000000012;
          char v12 = "lientinfo";
          goto LABEL_35;
        case 5:
          unint64_t v10 = 0xED00006469656C64;
          if (v8 != 0x6E7562656C707061) {
            goto LABEL_40;
          }
          goto LABEL_39;
        case 6:
          unint64_t v11 = 0xD000000000000013;
          char v12 = "on";
          goto LABEL_35;
        case 7:
          unint64_t v10 = 0xEB00000000656C61;
          if (v8 != 0x636F6C656C707061) {
            goto LABEL_40;
          }
          goto LABEL_39;
        case 8:
          unint64_t v10 = 0xEF64697473657571;
          if (v8 != 0x6572746E65696C63) {
            goto LABEL_40;
          }
          goto LABEL_39;
        case 9:
          unint64_t v11 = 0xD000000000000017;
          char v12 = "";
          goto LABEL_35;
        case 10:
          unint64_t v11 = 0xD00000000000001ELL;
          char v12 = "isprefetchedattestation";
LABEL_35:
          unint64_t v10 = (unint64_t)v12 | 0x8000000000000000;
          if (v8 != v11) {
            goto LABEL_40;
          }
          goto LABEL_39;
        case 11:
          unint64_t v9 = 0xD00000000000001CLL;
          unint64_t v10 = 0x80000001001C2D60;
          goto LABEL_38;
        case 12:
          unint64_t v10 = 0x80000001001C2D80;
          goto LABEL_45;
        case 13:
          unint64_t v10 = 0x80000001001C2DA0;
LABEL_45:
          if (v8 != 0xD00000000000001DLL) {
            goto LABEL_40;
          }
          goto LABEL_39;
        default:
LABEL_38:
          if (v8 != v9) {
            goto LABEL_40;
          }
LABEL_39:
          if (v7 == v10)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_40:
          char v13 = sub_1001C1840();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v13) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_10016B560(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE900000000000065;
      unint64_t v8 = 0x6D6974746E657665;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE300000000000000;
          unint64_t v8 = 7761509;
          break;
        case 2:
          unint64_t v8 = 0x696C63656C707061;
          unint64_t v7 = 0xEF6F666E69746E65;
          break;
        case 3:
          unint64_t v8 = 0x616566656C707061;
          unint64_t v7 = 0xEE00646965727574;
          break;
        case 4:
          unint64_t v8 = 0xD000000000000012;
          unint64_t v7 = 0x80000001001C2CE0;
          break;
        case 5:
          unint64_t v8 = 0x6E7562656C707061;
          unint64_t v7 = 0xED00006469656C64;
          break;
        case 6:
          unint64_t v8 = 0xD000000000000013;
          unint64_t v7 = 0x80000001001C28C0;
          break;
        case 7:
          unint64_t v8 = 0x636F6C656C707061;
          unint64_t v7 = 0xEB00000000656C61;
          break;
        case 8:
          unint64_t v8 = 0x6572746E65696C63;
          unint64_t v7 = 0xEF64697473657571;
          break;
        case 9:
          unint64_t v8 = 0xD000000000000017;
          unint64_t v7 = 0x80000001001C2D20;
          break;
        case 0xA:
          unint64_t v8 = 0xD00000000000001CLL;
          unint64_t v7 = 0x80000001001C2D60;
          break;
        case 0xB:
          unint64_t v7 = 0x80000001001C2D80;
          goto LABEL_16;
        case 0xC:
          unint64_t v7 = 0x80000001001C2DA0;
LABEL_16:
          unint64_t v8 = 0xD00000000000001DLL;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE900000000000065;
      switch(v6)
      {
        case 1:
          unint64_t v9 = 0xE300000000000000;
          if (v8 == 7761509) {
            goto LABEL_19;
          }
          goto LABEL_20;
        case 2:
          unint64_t v9 = 0xEF6F666E69746E65;
          if (v8 != 0x696C63656C707061) {
            goto LABEL_20;
          }
          goto LABEL_19;
        case 3:
          unint64_t v9 = 0xEE00646965727574;
          if (v8 != 0x616566656C707061) {
            goto LABEL_20;
          }
          goto LABEL_19;
        case 4:
          unint64_t v11 = 0xD000000000000012;
          char v12 = "lientinfo";
          goto LABEL_38;
        case 5:
          unint64_t v9 = 0xED00006469656C64;
          if (v8 != 0x6E7562656C707061) {
            goto LABEL_20;
          }
          goto LABEL_19;
        case 6:
          unint64_t v11 = 0xD000000000000013;
          char v12 = "on";
          goto LABEL_38;
        case 7:
          unint64_t v9 = 0xEB00000000656C61;
          if (v8 != 0x636F6C656C707061) {
            goto LABEL_20;
          }
          goto LABEL_19;
        case 8:
          unint64_t v9 = 0xEF64697473657571;
          if (v8 != 0x6572746E65696C63) {
            goto LABEL_20;
          }
          goto LABEL_19;
        case 9:
          unint64_t v11 = 0xD000000000000017;
          char v12 = "";
LABEL_38:
          unint64_t v9 = (unint64_t)v12 | 0x8000000000000000;
          if (v8 != v11) {
            goto LABEL_20;
          }
          goto LABEL_19;
        case 10:
          unint64_t v9 = 0x80000001001C2D60;
          if (v8 != 0xD00000000000001CLL) {
            goto LABEL_20;
          }
          goto LABEL_19;
        case 11:
          unint64_t v9 = 0x80000001001C2D80;
          goto LABEL_44;
        case 12:
          unint64_t v9 = 0x80000001001C2DA0;
LABEL_44:
          if (v8 != 0xD00000000000001DLL) {
            goto LABEL_20;
          }
          goto LABEL_19;
        default:
          if (v8 != 0x6D6974746E657665) {
            goto LABEL_20;
          }
LABEL_19:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_20:
          char v10 = sub_1001C1840();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v10) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_10016BA00(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE900000000000065;
      unint64_t v8 = 0x6D6954746E657665;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE300000000000000;
          unint64_t v8 = 7761509;
          break;
        case 2:
          unint64_t v8 = 0x696C43656C707061;
          unint64_t v7 = 0xEF6F666E49746E65;
          break;
        case 3:
          unint64_t v8 = 0x616546656C707061;
          unint64_t v7 = 0xEE00646965727574;
          break;
        case 4:
          unint64_t v8 = 0xD000000000000012;
          unint64_t v7 = 0x80000001001C2890;
          break;
        case 5:
          unint64_t v8 = 0x6E7542656C707061;
          unint64_t v7 = 0xED00006469656C64;
          break;
        case 6:
          unint64_t v8 = 0xD000000000000013;
          unint64_t v7 = 0x80000001001C28C0;
          break;
        case 7:
          unint64_t v8 = 0x636F4C656C707061;
          unint64_t v7 = 0xEB00000000656C61;
          break;
        case 8:
          unint64_t v8 = 0x6552746E65696C63;
          uint64_t v9 = 0x497473657571;
          goto LABEL_15;
        case 9:
          unint64_t v7 = 0x80000001001C2C80;
          unint64_t v8 = 0xD000000000000010;
          break;
        case 0xA:
          unint64_t v8 = 0x6E6553617461646BLL;
          unint64_t v7 = 0xEE00726F72724564;
          break;
        case 0xB:
          unint64_t v8 = 0x6E6553617461646BLL;
          uint64_t v9 = 0x4965646F4E64;
LABEL_15:
          unint64_t v7 = v9 & 0xFFFFFFFFFFFFLL | 0xEF64000000000000;
          break;
        default:
          break;
      }
      unint64_t v10 = 0xE900000000000065;
      switch(v6)
      {
        case 1:
          unint64_t v10 = 0xE300000000000000;
          if (v8 == 7761509) {
            goto LABEL_18;
          }
          goto LABEL_19;
        case 2:
          unint64_t v10 = 0xEF6F666E49746E65;
          if (v8 != 0x696C43656C707061) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 3:
          unint64_t v10 = 0xEE00646965727574;
          if (v8 != 0x616546656C707061) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 4:
          unint64_t v10 = 0x80000001001C2890;
          if (v8 != 0xD000000000000012) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 5:
          unint64_t v10 = 0xED00006469656C64;
          if (v8 != 0x6E7542656C707061) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 6:
          unint64_t v10 = 0x80000001001C28C0;
          if (v8 != 0xD000000000000013) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 7:
          unint64_t v10 = 0xEB00000000656C61;
          if (v8 != 0x636F4C656C707061) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 8:
          uint64_t v12 = 0x6552746E65696C63;
          uint64_t v13 = 0x497473657571;
          goto LABEL_42;
        case 9:
          unint64_t v10 = 0x80000001001C2C80;
          if (v8 != 0xD000000000000010) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 10:
          unint64_t v10 = 0xEE00726F72724564;
          if (v8 != 0x6E6553617461646BLL) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 11:
          uint64_t v12 = 0x6E6553617461646BLL;
          uint64_t v13 = 0x4965646F4E64;
LABEL_42:
          unint64_t v10 = v13 & 0xFFFFFFFFFFFFLL | 0xEF64000000000000;
          if (v8 != v12) {
            goto LABEL_19;
          }
          goto LABEL_18;
        default:
          if (v8 != 0x6D6954746E657665) {
            goto LABEL_19;
          }
LABEL_18:
          if (v7 == v10)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_19:
          char v11 = sub_1001C1840();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_10016BEBC(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE900000000000065;
      unint64_t v8 = 0x6D6954746E657665;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE300000000000000;
          unint64_t v8 = 7761509;
          break;
        case 2:
          unint64_t v8 = 0x696C43656C707061;
          unint64_t v7 = 0xEF6F666E49746E65;
          break;
        case 3:
          unint64_t v8 = 0x616546656C707061;
          unint64_t v7 = 0xEE00646965727574;
          break;
        case 4:
          unint64_t v7 = 0x80000001001C2890;
          unint64_t v8 = 0xD000000000000012;
          break;
        case 5:
          unint64_t v8 = 0xD000000000000013;
          unint64_t v7 = 0x80000001001C28C0;
          break;
        case 6:
          unint64_t v8 = 0x6E7542656C707061;
          unint64_t v7 = 0xED00006469656C64;
          break;
        case 7:
          unint64_t v8 = 0x636F4C656C707061;
          unint64_t v7 = 0xEB00000000656C61;
          break;
        case 8:
          unint64_t v8 = 0x6552746E65696C63;
          unint64_t v7 = 0xEF64497473657571;
          break;
        case 9:
          unint64_t v8 = 0xD00000000000001ELL;
          unint64_t v7 = 0x80000001001C2DC0;
          break;
        case 0xA:
          unint64_t v8 = 0xD00000000000001CLL;
          unint64_t v7 = 0x80000001001C2DE0;
          break;
        case 0xB:
          unint64_t v8 = 0xD00000000000001DLL;
          unint64_t v7 = 0x80000001001C2E00;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE900000000000065;
      switch(v6)
      {
        case 1:
          unint64_t v9 = 0xE300000000000000;
          if (v8 == 7761509) {
            goto LABEL_17;
          }
          goto LABEL_18;
        case 2:
          unint64_t v9 = 0xEF6F666E49746E65;
          if (v8 != 0x696C43656C707061) {
            goto LABEL_18;
          }
          goto LABEL_17;
        case 3:
          unint64_t v9 = 0xEE00646965727574;
          if (v8 != 0x616546656C707061) {
            goto LABEL_18;
          }
          goto LABEL_17;
        case 4:
          unint64_t v9 = 0x80000001001C2890;
          if (v8 != 0xD000000000000012) {
            goto LABEL_18;
          }
          goto LABEL_17;
        case 5:
          unint64_t v11 = 0xD000000000000013;
          uint64_t v12 = "on";
          goto LABEL_37;
        case 6:
          unint64_t v9 = 0xED00006469656C64;
          if (v8 != 0x6E7542656C707061) {
            goto LABEL_18;
          }
          goto LABEL_17;
        case 7:
          unint64_t v9 = 0xEB00000000656C61;
          if (v8 != 0x636F4C656C707061) {
            goto LABEL_18;
          }
          goto LABEL_17;
        case 8:
          unint64_t v9 = 0xEF64497473657571;
          if (v8 != 0x6552746E65696C63) {
            goto LABEL_18;
          }
          goto LABEL_17;
        case 9:
          unint64_t v11 = 0xD00000000000001ELL;
          uint64_t v12 = "attestationverificationtimems";
LABEL_37:
          unint64_t v9 = (unint64_t)v12 | 0x8000000000000000;
          if (v8 != v11) {
            goto LABEL_18;
          }
          goto LABEL_17;
        case 10:
          unint64_t v9 = 0x80000001001C2DE0;
          if (v8 != 0xD00000000000001CLL) {
            goto LABEL_18;
          }
          goto LABEL_17;
        case 11:
          unint64_t v9 = 0x80000001001C2E00;
          if (v8 != 0xD00000000000001DLL) {
            goto LABEL_18;
          }
          goto LABEL_17;
        default:
          if (v8 != 0x6D6954746E657665) {
            goto LABEL_18;
          }
LABEL_17:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_18:
          char v10 = sub_1001C1840();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v10) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_10016C338(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE900000000000065;
      uint64_t v8 = 0x6D6974746E657665;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE300000000000000;
          uint64_t v8 = 7761509;
          break;
        case 2:
          uint64_t v8 = 0x6572746E65696C63;
          unint64_t v7 = 0xEF64697473657571;
          break;
        case 3:
          uint64_t v8 = 0x696C63656C707061;
          unint64_t v7 = 0xEF6F666E69746E65;
          break;
        case 4:
          uint64_t v8 = 0x636F6C656C707061;
          unint64_t v7 = 0xEB00000000656C61;
          break;
        default:
          break;
      }
      uint64_t v9 = 0x6D6974746E657665;
      unint64_t v10 = 0xE900000000000065;
      switch(v6)
      {
        case 1:
          unint64_t v10 = 0xE300000000000000;
          if (v8 == 7761509) {
            goto LABEL_15;
          }
          goto LABEL_16;
        case 2:
          unint64_t v10 = 0xEF64697473657571;
          if (v8 != 0x6572746E65696C63) {
            goto LABEL_16;
          }
          goto LABEL_15;
        case 3:
          uint64_t v9 = 0x696C63656C707061;
          unint64_t v10 = 0xEF6F666E69746E65;
          goto LABEL_14;
        case 4:
          unint64_t v10 = 0xEB00000000656C61;
          if (v8 != 0x636F6C656C707061) {
            goto LABEL_16;
          }
          goto LABEL_15;
        default:
LABEL_14:
          if (v8 != v9) {
            goto LABEL_16;
          }
LABEL_15:
          if (v7 == v10)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_16:
          char v11 = sub_1001C1840();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_10016C5B8(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE900000000000065;
      unint64_t v8 = 0x6D6954746E657665;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE300000000000000;
          unint64_t v8 = 7761509;
          break;
        case 2:
          unint64_t v8 = 0x696C43656C707061;
          unint64_t v7 = 0xEF6F666E49746E65;
          break;
        case 3:
          unint64_t v8 = 0x636F4C656C707061;
          unint64_t v7 = 0xEB00000000656C61;
          break;
        case 4:
          unint64_t v8 = 0xD000000000000017;
          unint64_t v7 = 0x80000001001C2E60;
          break;
        case 5:
          unint64_t v7 = 0x80000001001C2E80;
          unint64_t v8 = 0xD000000000000011;
          break;
        case 6:
          unint64_t v8 = 0xD000000000000019;
          unint64_t v7 = 0x80000001001C2EA0;
          break;
        default:
          break;
      }
      unint64_t v9 = 0x6D6954746E657665;
      unint64_t v10 = 0xE900000000000065;
      switch(v6)
      {
        case 1:
          unint64_t v10 = 0xE300000000000000;
          if (v8 == 7761509) {
            goto LABEL_21;
          }
          goto LABEL_22;
        case 2:
          unint64_t v10 = 0xEF6F666E49746E65;
          if (v8 != 0x696C43656C707061) {
            goto LABEL_22;
          }
          goto LABEL_21;
        case 3:
          unint64_t v10 = 0xEB00000000656C61;
          if (v8 != 0x636F4C656C707061) {
            goto LABEL_22;
          }
          goto LABEL_21;
        case 4:
          unint64_t v10 = 0x80000001001C2E60;
          if (v8 != 0xD000000000000017) {
            goto LABEL_22;
          }
          goto LABEL_21;
        case 5:
          unint64_t v10 = 0x80000001001C2E80;
          unint64_t v9 = 0xD000000000000011;
          goto LABEL_20;
        case 6:
          unint64_t v10 = 0x80000001001C2EA0;
          if (v8 != 0xD000000000000019) {
            goto LABEL_22;
          }
          goto LABEL_21;
        default:
LABEL_20:
          if (v8 != v9) {
            goto LABEL_22;
          }
LABEL_21:
          if (v7 == v10)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_22:
          char v11 = sub_1001C1840();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_10016C8C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = v4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = a4 & ~v6;
  if ((*(void *)(v4 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    uint64_t v11 = ~v6;
    uint64_t v12 = *(void *)(v4 + 48);
    do
    {
      uint64_t v13 = v12 + 24 * v7;
      int v14 = *(unsigned __int8 *)(v13 + 16);
      if (*(void *)v13 == a1 && *(void *)(v13 + 8) == a2)
      {
        if (v14 == (a3 & 1)) {
          return v7;
        }
      }
      else if ((sub_1001C1840() & 1) != 0 && ((v14 ^ a3) & 1) == 0)
      {
        return v7;
      }
      unint64_t v7 = (v7 + 1) & v11;
    }
    while (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

uint64_t sub_10016C9AC(void (*a1)(void))
{
  a1();
  return _swift_stdlib_bridgeErrorToNSError();
}

void sub_10016C9E4(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  sub_1001C1310();
  *a1 = v7;
  unint64_t v8 = *a2;
  if (*a2)
  {
    *unint64_t v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

uint64_t sub_10016CA9C()
{
  uint64_t v1 = sub_1001BF0B0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  sub_10000792C(*(void *)(v0 + 16), *(void *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10016CB68(uint64_t a1)
{
  return sub_100165E04(a1, v1[2], v1[3], v1[4], &qword_100208640, (uint64_t)&unk_100200AB8, (uint64_t)sub_10016E3A4, (uint64_t)&unk_100200AD0);
}

unint64_t sub_10016CBB4()
{
  unint64_t result = qword_10020E948;
  if (!qword_10020E948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020E948);
  }
  return result;
}

uint64_t sub_10016CC08(uint64_t a1, uint64_t a2)
{
  uint64_t v26 = a2;
  uint64_t v2 = sub_1001BEFF0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1001BF0B0();
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  uint64_t v9 = __chkstk_darwin(v7, v8);
  uint64_t v23 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v11);
  uint64_t v22 = (uint64_t)&v21 - v12;
  unint64_t v27 = 0xD00000000000001ELL;
  unint64_t v28 = 0x80000001001C6EE0;
  uint64_t v13 = enum case for URL.DirectoryHint.inferFromPath(_:);
  int v14 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v14(v6, enum case for URL.DirectoryHint.inferFromPath(_:), v2);
  sub_10001A364();
  sub_1001BF0A0();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v3 + 8);
  v15(v6, v2);
  swift_bridgeObjectRelease();
  unint64_t v27 = 0xD00000000000001ELL;
  unint64_t v28 = 0x80000001001C6EE0;
  v14(v6, v13, v2);
  uint64_t v16 = (uint64_t)v23;
  sub_1001BF0A0();
  v15(v6, v2);
  swift_bridgeObjectRelease();
  uint64_t v17 = v22;
  sub_1000EF924(v22, v16);
  uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
  uint64_t v19 = v25;
  v18(v16, v25);
  return ((uint64_t (*)(uint64_t, uint64_t))v18)(v17, v19);
}

uint64_t sub_10016CEA0@<X0>(uint64_t a1@<X8>)
{
  sub_1001656A8();
  sub_1001BED80();
  uint64_t result = v16;
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(unsigned char *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  *(unsigned char *)(a1 + 80) = v12;
  *(_OWORD *)(a1 + 88) = v13;
  *(unsigned char *)(a1 + 104) = v14;
  *(void *)(a1 + 112) = v15;
  *(unsigned char *)(a1 + 120) = v16;
  return result;
}

uint64_t sub_10016D148(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_1001FBE40;
  v6._object = a2;
  unint64_t v4 = sub_1001C15E0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 9) {
    return 9;
  }
  else {
    return v4;
  }
}

uint64_t sub_10016D194@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v50 = sub_100003918(&qword_10020EA58);
  uint64_t v5 = *(void *)(v50 - 8);
  __chkstk_darwin(v50, v6);
  char v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v95 = 1;
  char v93 = 1;
  char v91 = 1;
  char v89 = 1;
  char v87 = 1;
  char v85 = 1;
  char v83 = 1;
  sub_10000D934(a1, a1[3]);
  sub_10016CBB4();
  sub_1001C19B0();
  uint64_t v96 = a1;
  if (v2)
  {
    uint64_t v52 = v2;
    uint64_t v51 = 0;
    sub_100003E90((uint64_t)v96);
    uint64_t v61 = 0;
    char v62 = v95;
    *(_DWORD *)v63 = *(_DWORD *)v94;
    *(_DWORD *)&v63[3] = *(_DWORD *)&v94[3];
    uint64_t v64 = 0;
    char v65 = v93;
    *(_DWORD *)uint64_t v66 = *(_DWORD *)v92;
    *(_DWORD *)&v66[3] = *(_DWORD *)&v92[3];
    uint64_t v67 = 0;
    uint64_t v68 = 0;
    char v69 = v91;
    *(_DWORD *)&v70[3] = *(_DWORD *)&v90[3];
    *(_DWORD *)v70 = *(_DWORD *)v90;
    uint64_t v71 = 0;
    char v72 = v89;
    *(_DWORD *)uint64_t v73 = *(_DWORD *)v88;
    *(_DWORD *)&v73[3] = *(_DWORD *)&v88[3];
    uint64_t v74 = 0;
    char v75 = v87;
    *(_DWORD *)v76 = *(_DWORD *)v86;
    *(_DWORD *)&v76[3] = *(_DWORD *)&v86[3];
    uint64_t v77 = 0;
    uint64_t v78 = v51;
    char v79 = v85;
    *(_DWORD *)&v80[3] = *(_DWORD *)&v84[3];
    *(_DWORD *)uint64_t v80 = *(_DWORD *)v84;
    uint64_t v81 = 0;
    char v82 = v83;
    return sub_10001633C((uint64_t)&v61);
  }
  else
  {
    uint64_t v49 = a2;
    uint64_t v9 = v5;
    LOBYTE(v61) = 0;
    uint64_t v48 = sub_1001C1630();
    char v95 = v11 & 1;
    LOBYTE(v61) = 1;
    int v12 = v11;
    uint64_t v13 = sub_1001C1630();
    int v46 = v12;
    uint64_t v47 = v13;
    char v93 = v14 & 1;
    int v15 = v14;
    sub_100003918(&qword_10020D290);
    LOBYTE(v53) = 2;
    sub_1000EF4BC(&qword_10020D298);
    sub_1001C1640();
    int v45 = v15;
    uint64_t v16 = v61;
    LOBYTE(v61) = 3;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1001C1620();
    int v19 = v18;
    uint64_t v44 = v17;
    char v91 = v18 & 1;
    LOBYTE(v61) = 4;
    uint64_t v20 = sub_1001C1620();
    int v43 = v19;
    char v89 = v21 & 1;
    LOBYTE(v61) = 5;
    int v22 = v21;
    uint64_t v23 = sub_1001C1630();
    HIDWORD(v40) = v22;
    uint64_t v41 = v20;
    uint64_t v42 = v23;
    char v87 = v24 & 1;
    LOBYTE(v22) = v24;
    sub_100003918(&qword_10020C6F0);
    LOBYTE(v53) = 6;
    sub_10016E0F4(&qword_10020CA50);
    sub_1001C1640();
    LOBYTE(v19) = v22;
    uint64_t v25 = v61;
    LOBYTE(v61) = 7;
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_1001C1630();
    LOBYTE(v22) = v26 & 1;
    char v85 = v26 & 1;
    char v60 = 8;
    uint64_t v27 = sub_1001C1630();
    uint64_t v52 = 0;
    uint64_t v28 = v27;
    char v30 = v29;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v50);
    char v31 = v30 & 1;
    char v83 = v30 & 1;
    uint64_t v33 = v47;
    uint64_t v32 = v48;
    *(void *)&long long v53 = v48;
    BYTE8(v53) = v46 & 1;
    *(void *)&long long v54 = v47;
    BYTE8(v54) = v45 & 1;
    *(void *)&long long v55 = v16;
    *((void *)&v55 + 1) = v44;
    LOBYTE(v56) = v43 & 1;
    uint64_t v34 = v41;
    *((void *)&v56 + 1) = v41;
    LOBYTE(v57) = BYTE4(v40) & 1;
    *((void *)&v57 + 1) = v42;
    LOBYTE(v58) = v19 & 1;
    uint64_t v35 = v51;
    *((void *)&v58 + 1) = v25;
    *(void *)uint64_t v59 = v51;
    v59[8] = v22;
    *(void *)&v59[16] = v28;
    v59[24] = v31;
    sub_1000162B0((uint64_t)&v53);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100003E90((uint64_t)v96);
    uint64_t v61 = v32;
    char v62 = v95;
    uint64_t v64 = v33;
    char v65 = v93;
    uint64_t v67 = v16;
    uint64_t v68 = v44;
    char v69 = v91;
    uint64_t v71 = v34;
    char v72 = v89;
    uint64_t v74 = v42;
    char v75 = v87;
    uint64_t v77 = v25;
    uint64_t v78 = v35;
    char v79 = v85;
    uint64_t v81 = v28;
    char v82 = v83;
    uint64_t result = sub_10001633C((uint64_t)&v61);
    long long v36 = v58;
    uint64_t v37 = v49;
    v49[4] = v57;
    v37[5] = v36;
    v37[6] = *(_OWORD *)v59;
    *(_OWORD *)((char *)v37 + 105) = *(_OWORD *)&v59[9];
    long long v38 = v54;
    *uint64_t v37 = v53;
    v37[1] = v38;
    long long v39 = v56;
    v37[2] = v55;
    v37[3] = v39;
  }
  return result;
}

uint64_t sub_10016D944()
{
  return type metadata accessor for TC2ServerDrivenConfiguration();
}

uint64_t type metadata accessor for TC2ServerDrivenConfiguration()
{
  uint64_t result = qword_10020E990;
  if (!qword_10020E990) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10016D998()
{
  sub_1001C0340();
  if (v0 <= 0x3F)
  {
    sub_10001A6E8();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

char *sub_10016DA7C()
{
  if (&swift_runtimeSupportsNoncopyableTypes) {
    return (char *)sub_100003918(&qword_10020E960);
  }
  else {
    return (char *)&type metadata for () + 8;
  }
}

uint64_t destroy for TC2ServerDrivenConfiguration.JsonModel()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TC2ServerDrivenConfiguration.JsonModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v3;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v4 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v4;
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TC2ServerDrivenConfiguration.JsonModel(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  uint64_t v5 = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 32) = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = a2[7];
  *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = a2[9];
  *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
  *(void *)(a1 + 72) = v8;
  *(void *)(a1 + 88) = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[12];
  *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
  *(void *)(a1 + 96) = v9;
  uint64_t v10 = a2[14];
  *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
  *(void *)(a1 + 112) = v10;
  return a1;
}

__n128 initializeWithTake for TC2ServerDrivenConfiguration.JsonModel(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(_OWORD *)(a1 + 105) = *(long long *)((char *)a2 + 105);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for TC2ServerDrivenConfiguration.JsonModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  return a1;
}

uint64_t getEnumTagSinglePayload for TC2ServerDrivenConfiguration.JsonModel(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 121)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 32);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TC2ServerDrivenConfiguration.JsonModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 120) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 121) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 121) = 0;
    }
    if (a2) {
      *(void *)(result + 32) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TC2ServerDrivenConfiguration.JsonModel()
{
  return &type metadata for TC2ServerDrivenConfiguration.JsonModel;
}

uint64_t getEnumTagSinglePayload for TC2ServerDrivenConfiguration.JsonModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TC2ServerDrivenConfiguration.JsonModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    const char *result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10016DF70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          const char *result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TC2ServerDrivenConfiguration.JsonModel.CodingKeys()
{
  return &type metadata for TC2ServerDrivenConfiguration.JsonModel.CodingKeys;
}

unint64_t sub_10016DFAC()
{
  unint64_t result = qword_10020EA38;
  if (!qword_10020EA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020EA38);
  }
  return result;
}

unint64_t sub_10016E004()
{
  unint64_t result = qword_10020EA40;
  if (!qword_10020EA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020EA40);
  }
  return result;
}

unint64_t sub_10016E05C()
{
  unint64_t result = qword_10020EA48;
  if (!qword_10020EA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020EA48);
  }
  return result;
}

uint64_t sub_10016E0B0()
{
  return sub_10016E2DC(&qword_10020EA50);
}

uint64_t sub_10016E0BC()
{
  return sub_10016E3C4(&qword_10020EA50, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001661E4);
}

uint64_t sub_10016E0DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10016E0EC()
{
  return swift_release();
}

uint64_t sub_10016E0F4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000166C8(&qword_10020C6F0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10016E158(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10016E1A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10016E208(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10016E270(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10016E2D0()
{
  return sub_10016E2DC(&qword_100208640);
}

uint64_t sub_10016E2DC(uint64_t *a1)
{
  uint64_t v2 = sub_100003918(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 32) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return _swift_deallocObject(v1, v6, v7);
}

uint64_t sub_10016E3A4()
{
  return sub_10016E3C4(&qword_100208640, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100166164);
}

uint64_t sub_10016E3C4(uint64_t *a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(sub_100003918(a1) - 8);
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return a2(v4, v5, v6);
}

uint64_t sub_10016E440(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  sub_1001BFEA0();
  v2[6] = swift_task_alloc();
  return _swift_task_switch(sub_10016E4D0, 0, 0);
}

uint64_t sub_10016E4D0()
{
  uint64_t v71 = v0;
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = sub_100003918(&qword_10020EB18);
  *(void *)(v0 + 56) = v2;
  uint64_t v3 = *(int *)(v2 + 80);
  *(_DWORD *)(v0 + 128) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  uint64_t v5 = *v4;
  char v6 = *((unsigned char *)v4 + 8);
  while (2)
  {
    if (v6 != 2)
    {
      if (v6)
      {
        if (v5)
        {
          swift_errorRetain();
          swift_willThrow();
          swift_task_dealloc();
          uint64_t v66 = *(uint64_t (**)(void))(v0 + 8);
LABEL_92:
          return v66();
        }
        uint64_t v58 = *(void *)(v0 + 32);
        uint64_t v59 = type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v58, 1, 1, v59);
      }
      else
      {
        uint64_t v49 = *(void *)(v0 + 40);
        if (v5)
        {
          uint64_t v50 = *(int *)(*(void *)(v0 + 56) + 76);
          *(_DWORD *)(v0 + 136) = v50;
          uint64_t v51 = *(void *)(v49 + v50);
          unint64_t v52 = *(void *)(v49 + v50 + 8);
          switch(v52 >> 62)
          {
            case 1uLL:
              LODWORD(v53) = HIDWORD(v51) - v51;
              if (__OFSUB__(HIDWORD(v51), v51)) {
                goto LABEL_111;
              }
              uint64_t v53 = (int)v53;
LABEL_84:
              if (v53 < v5)
              {
LABEL_85:
                char v69 = (uint64_t (*)(void))((char *)&dword_10020EB58 + dword_10020EB58);
                long long v54 = (void *)swift_task_alloc();
                *(void *)(v0 + 96) = v54;
                *long long v54 = v0;
                long long v55 = sub_10016FFA8;
                goto LABEL_86;
              }
              sub_100007B14(v51, v52);
              sub_1001771D4(v5, v51, v52, v70);
              unint64_t v57 = v70[1];
              uint64_t v56 = v70[0];
              sub_100177370(v5);
              uint64_t v49 = *(void *)(v0 + 40);
              break;
            case 2uLL:
              uint64_t v61 = *(void *)(v51 + 16);
              uint64_t v60 = *(void *)(v51 + 24);
              BOOL v18 = __OFSUB__(v60, v61);
              uint64_t v53 = v60 - v61;
              if (!v18) {
                goto LABEL_84;
              }
              goto LABEL_112;
            case 3uLL:
              goto LABEL_85;
            default:
              uint64_t v53 = BYTE6(v52);
              goto LABEL_84;
          }
        }
        else
        {
          uint64_t v56 = 0;
          unint64_t v57 = 0xC000000000000000;
        }
        uint64_t v64 = v49 + *(int *)(v0 + 128);
        *(void *)uint64_t v64 = 0;
        *(unsigned char *)(v64 + 8) = 2;
        uint64_t v65 = type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse(0);
        *(void *)(v0 + 16) = v56;
        *(void *)(v0 + 24) = v57;
        memset(v70, 0, 40);
        sub_10000D9E0(v56, v57);
        sub_1001BFE90();
        sub_10018C778(&qword_10020A878, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse);
        sub_1001C0020();
        uint64_t v67 = *(void *)(v0 + 32);
        sub_100007918(v56, v57);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v67, 0, 1, v65);
      }
      swift_task_dealloc();
      uint64_t v66 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_92;
    }
    uint64_t v9 = *(void *)(v0 + 40);
    uint64_t v10 = *(int *)(*(void *)(v0 + 56) + 76);
    *(_DWORD *)(v0 + 132) = v10;
    int v11 = (uint64_t *)(v9 + v10);
    uint64_t v12 = *(void *)(v9 + v10);
    unint64_t v13 = *(void *)(v9 + v10 + 8);
    unint64_t v14 = v13 >> 62;
    switch(v13 >> 62)
    {
      case 1uLL:
        LODWORD(v15) = HIDWORD(v12) - v12;
        if (__OFSUB__(HIDWORD(v12), v12)) {
          goto LABEL_106;
        }
        uint64_t v15 = (int)v15;
LABEL_10:
        if (v15 >= 4)
        {
          if (v14)
          {
            if (v14 == 1)
            {
              uint64_t v19 = (int)v12;
              uint64_t v20 = v12 >> 32;
            }
            else
            {
              uint64_t v19 = *(void *)(v12 + 16);
              uint64_t v20 = *(void *)(v12 + 24);
              swift_retain();
            }
            swift_retain();
            if (v20 < v19)
            {
              __break(1u);
LABEL_96:
              __break(1u);
LABEL_97:
              __break(1u);
              __break(1u);
LABEL_98:
              __break(1u);
              __break(1u);
LABEL_99:
              __break(1u);
LABEL_100:
              __break(1u);
LABEL_101:
              __break(1u);
LABEL_102:
              __break(1u);
LABEL_103:
              __break(1u);
LABEL_104:
              __break(1u);
LABEL_105:
              __break(1u);
LABEL_106:
              __break(1u);
LABEL_107:
              __break(1u);
LABEL_108:
              __break(1u);
LABEL_109:
              __break(1u);
LABEL_110:
              __break(1u);
LABEL_111:
              __break(1u);
LABEL_112:
              __break(1u);
LABEL_113:
              sub_1001BEE80();
              __break(1u);
LABEL_114:
              sub_1001BEE80();
              __break(1u);
              JUMPOUT(0x10016ECCCLL);
            }
          }
          else
          {
            uint64_t v19 = 0;
            uint64_t v20 = BYTE6(v13);
          }
          if (__OFSUB__(v20, v19)) {
            goto LABEL_98;
          }
          if ((unint64_t)(v20 - v19) < 4)
          {
            if (!v14)
            {
              uint64_t v24 = sub_1001BF140();
              unint64_t v26 = v25;
              sub_10000792C(v12, v13);
              uint64_t v27 = 0;
              unint64_t v28 = BYTE6(v13);
              goto LABEL_50;
            }
            if (v14 == 1)
            {
              uint64_t v21 = v12 >> 32;
LABEL_36:
              if (v21 < (int)v12) {
                goto LABEL_96;
              }
              goto LABEL_41;
            }
            uint64_t v21 = *(void *)(v12 + 24);
            goto LABEL_38;
          }
          uint64_t v21 = v19 + 4;
          if (__OFADD__(v19, 4)) {
            goto LABEL_103;
          }
          if (v14)
          {
            if (v14 == 1)
            {
              uint64_t v22 = (int)v12;
              uint64_t v23 = v12 >> 32;
            }
            else
            {
              uint64_t v22 = *(void *)(v12 + 16);
              uint64_t v23 = *(void *)(v12 + 24);
            }
          }
          else
          {
            uint64_t v22 = 0;
            uint64_t v23 = BYTE6(v13);
          }
          if (v23 < v21 || v21 < v22) {
            goto LABEL_104;
          }
          if (v14)
          {
            if (v14 == 1) {
              goto LABEL_36;
            }
LABEL_38:
            if (v21 < *(void *)(v12 + 16)) {
              goto LABEL_96;
            }
            goto LABEL_41;
          }
          if (v21 < 0) {
            goto LABEL_96;
          }
LABEL_41:
          uint64_t v24 = sub_1001BF140();
          unint64_t v26 = v30;
          sub_10000792C(v12, v13);
          if (v14 == 2)
          {
            uint64_t v27 = *(void *)(v12 + 16);
            uint64_t v31 = *(void *)(v12 + 24);
          }
          else
          {
            if (v14 != 1)
            {
              uint64_t v27 = 0;
              unint64_t v28 = BYTE6(v13);
              goto LABEL_50;
            }
            uint64_t v27 = (int)v12;
            uint64_t v31 = v12 >> 32;
          }
          if (v31 < v27) {
            goto LABEL_97;
          }
          unint64_t v28 = v31 - v27;
          if (__OFSUB__(v31, v27)) {
            goto LABEL_99;
          }
LABEL_50:
          if (v28 < 4) {
            goto LABEL_105;
          }
          uint64_t v32 = v27 + 4;
          if (__OFADD__(v27, 4)) {
            goto LABEL_100;
          }
          if (v14)
          {
            if (v14 == 1)
            {
              uint64_t v33 = (int)v12;
              uint64_t v34 = v12 >> 32;
            }
            else
            {
              uint64_t v33 = *(void *)(v12 + 16);
              uint64_t v34 = *(void *)(v12 + 24);
            }
          }
          else
          {
            uint64_t v33 = 0;
            uint64_t v34 = BYTE6(v13);
          }
          if (v34 < v32 || v32 < v33) {
            goto LABEL_101;
          }
          uint64_t v35 = 0;
          switch((int)v14)
          {
            case 1:
              uint64_t v35 = v12 >> 32;
              break;
            case 2:
              uint64_t v35 = *(void *)(v12 + 24);
              break;
            case 3:
              break;
            default:
              uint64_t v35 = BYTE6(v13);
              break;
          }
          if (v35 < v32) {
            goto LABEL_102;
          }
          uint64_t v36 = sub_1001BF140();
          uint64_t v38 = v37;
          sub_10000792C(v12, v13);
          uint64_t *v11 = v36;
          v11[1] = v38;
          unsigned int v7 = 0;
          switch(v26 >> 62)
          {
            case 1uLL:
              if ((int)v24 > v24 >> 32) {
                goto LABEL_108;
              }
              sub_100007B14(v24, v26);
              uint64_t v40 = sub_1001BEE60();
              if (!v40) {
                goto LABEL_113;
              }
              uint64_t v41 = v40;
              uint64_t v42 = sub_1001BEE90();
              uint64_t v43 = (int)v24 - v42;
              if (__OFSUB__((int)v24, v42)) {
                goto LABEL_110;
              }
              sub_1001BEE80();
              unsigned int v7 = *(_DWORD *)(v41 + v43);
              sub_10000792C(v24, v26);
LABEL_3:
              uint64_t v8 = *(void *)(v0 + 40) + *(int *)(v0 + 128);
              sub_10000792C(v24, v26);
              char v6 = 0;
              uint64_t v5 = bswap32(v7);
              *(void *)uint64_t v8 = v5;
              *(unsigned char *)(v8 + 8) = 0;
              break;
            case 2uLL:
              uint64_t v44 = *(void *)(v24 + 16);
              swift_retain();
              swift_retain();
              uint64_t v45 = sub_1001BEE60();
              if (!v45) {
                goto LABEL_114;
              }
              uint64_t v46 = v45;
              uint64_t v47 = sub_1001BEE90();
              BOOL v18 = __OFSUB__(v44, v47);
              uint64_t v48 = v44 - v47;
              if (v18) {
                goto LABEL_109;
              }
              sub_1001BEE80();
              unsigned int v7 = *(_DWORD *)(v46 + v48);
              swift_release();
              swift_release();
              goto LABEL_3;
            case 3uLL:
              goto LABEL_3;
            default:
              __chkstk_darwin(&v68, v39);
              *((_DWORD *)&v68 - 4) = v24;
              unsigned int v7 = v24;
              goto LABEL_3;
          }
          continue;
        }
LABEL_76:
        char v69 = (uint64_t (*)(void))((char *)&dword_10020EB58 + dword_10020EB58);
        long long v54 = (void *)swift_task_alloc();
        *(void *)(v0 + 64) = v54;
        *long long v54 = v0;
        long long v55 = sub_10016ED0C;
LABEL_86:
        v54[1] = v55;
        char v62 = v69;
        return v62();
      case 2uLL:
        uint64_t v17 = *(void *)(v12 + 16);
        uint64_t v16 = *(void *)(v12 + 24);
        BOOL v18 = __OFSUB__(v16, v17);
        uint64_t v15 = v16 - v17;
        if (!v18) {
          goto LABEL_10;
        }
        goto LABEL_107;
      case 3uLL:
        goto LABEL_76;
      default:
        uint64_t v15 = BYTE6(v13);
        goto LABEL_10;
    }
  }
}

uint64_t sub_10016ED0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[9] = a1;
  v4[10] = a2;
  v4[11] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_10016F758;
  }
  else {
    uint64_t v5 = sub_10016EE24;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10016EE24()
{
  uint64_t v77 = v0;
  unint64_t v1 = *(void *)(v0 + 80);
  if (v1 >> 60 == 15)
  {
    uint64_t v2 = *(void *)(v0 + 40);
    uint64_t v3 = v2 + *(int *)(v0 + 128);
    if (!*(unsigned char *)(v3 + 8))
    {
LABEL_6:
      sub_10000A870();
      uint64_t v7 = swift_allocError();
      sub_10018C550(*(void *)v3, *(unsigned char *)(v3 + 8));
      *(void *)uint64_t v3 = v7;
LABEL_12:
      *(unsigned char *)(v3 + 8) = 1;
      goto LABEL_13;
    }
    if (*(unsigned char *)(v3 + 8) != 1)
    {
      uint64_t v4 = (uint64_t *)(v2 + *(int *)(v0 + 132));
      uint64_t v6 = *v4;
      unint64_t v5 = v4[1];
      switch(v5 >> 62)
      {
        case 1uLL:
          if ((int)v6 != v6 >> 32) {
            goto LABEL_6;
          }
          break;
        case 2uLL:
          if (*(void *)(v6 + 16) != *(void *)(v6 + 24)) {
            goto LABEL_6;
          }
          break;
        case 3uLL:
          break;
        default:
          if ((v5 & 0xFF000000000000) != 0) {
            goto LABEL_6;
          }
          break;
      }
      *(void *)uint64_t v3 = 0;
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 72);
    sub_1001BF1B0();
    sub_100007918(v8, v1);
  }
LABEL_13:
  uint64_t v9 = *(void *)(v0 + 88);
  uint64_t v10 = (uint64_t *)(*(void *)(v0 + 40) + *(int *)(v0 + 128));
  uint64_t v11 = *v10;
  char v12 = *((unsigned char *)v10 + 8);
  while (v12 == 2)
  {
    uint64_t v15 = *(void *)(v0 + 40);
    uint64_t v16 = *(int *)(*(void *)(v0 + 56) + 76);
    *(_DWORD *)(v0 + 132) = v16;
    uint64_t v17 = (uint64_t *)(v15 + v16);
    uint64_t v18 = *(void *)(v15 + v16);
    unint64_t v19 = *(void *)(v15 + v16 + 8);
    unint64_t v20 = v19 >> 62;
    switch(v19 >> 62)
    {
      case 1uLL:
        LODWORD(v21) = HIDWORD(v18) - v18;
        if (__OFSUB__(HIDWORD(v18), v18)) {
          goto LABEL_119;
        }
        uint64_t v21 = (int)v21;
LABEL_22:
        if (v21 < 4)
        {
LABEL_88:
          char v75 = (uint64_t (*)(void))((char *)&dword_10020EB58 + dword_10020EB58);
          uint64_t v60 = (void *)swift_task_alloc();
          *(void *)(v0 + 64) = v60;
          void *v60 = v0;
          uint64_t v61 = (uint64_t (*)(uint64_t, uint64_t))sub_10016ED0C;
LABEL_98:
          v60[1] = v61;
          uint64_t v68 = v75;
          return v68();
        }
        if (v20)
        {
          if (v20 == 1)
          {
            uint64_t v25 = (int)v18;
            uint64_t v26 = v18 >> 32;
          }
          else
          {
            uint64_t v25 = *(void *)(v18 + 16);
            uint64_t v26 = *(void *)(v18 + 24);
            swift_retain();
          }
          swift_retain();
          if (v26 < v25)
          {
            __break(1u);
LABEL_109:
            __break(1u);
LABEL_110:
            __break(1u);
            __break(1u);
LABEL_111:
            __break(1u);
            __break(1u);
LABEL_112:
            __break(1u);
LABEL_113:
            __break(1u);
LABEL_114:
            __break(1u);
LABEL_115:
            __break(1u);
LABEL_116:
            __break(1u);
LABEL_117:
            __break(1u);
LABEL_118:
            __break(1u);
LABEL_119:
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            sub_1001BEE80();
            __break(1u);
LABEL_127:
            sub_1001BEE80();
            __break(1u);
            JUMPOUT(0x10016F708);
          }
        }
        else
        {
          uint64_t v25 = 0;
          uint64_t v26 = BYTE6(v19);
        }
        if (__OFSUB__(v26, v25)) {
          goto LABEL_111;
        }
        if ((unint64_t)(v26 - v25) < 4)
        {
          if (!v20)
          {
            uint64_t v30 = sub_1001BF140();
            unint64_t v32 = v31;
            sub_10000792C(v18, v19);
            uint64_t v33 = 0;
            unint64_t v34 = BYTE6(v19);
            goto LABEL_62;
          }
          if (v20 == 1)
          {
            uint64_t v27 = v18 >> 32;
LABEL_48:
            if (v27 < (int)v18) {
              goto LABEL_109;
            }
            goto LABEL_53;
          }
          uint64_t v27 = *(void *)(v18 + 24);
          goto LABEL_50;
        }
        uint64_t v27 = v25 + 4;
        if (__OFADD__(v25, 4)) {
          goto LABEL_116;
        }
        if (v20)
        {
          if (v20 == 1)
          {
            uint64_t v28 = (int)v18;
            uint64_t v29 = v18 >> 32;
          }
          else
          {
            uint64_t v28 = *(void *)(v18 + 16);
            uint64_t v29 = *(void *)(v18 + 24);
          }
        }
        else
        {
          uint64_t v28 = 0;
          uint64_t v29 = BYTE6(v19);
        }
        if (v29 < v27 || v27 < v28) {
          goto LABEL_117;
        }
        if (v20)
        {
          if (v20 == 1) {
            goto LABEL_48;
          }
LABEL_50:
          if (v27 < *(void *)(v18 + 16)) {
            goto LABEL_109;
          }
          goto LABEL_53;
        }
        if (v27 < 0) {
          goto LABEL_109;
        }
LABEL_53:
        uint64_t v30 = sub_1001BF140();
        unint64_t v32 = v36;
        sub_10000792C(v18, v19);
        if (v20 == 2)
        {
          uint64_t v33 = *(void *)(v18 + 16);
          uint64_t v37 = *(void *)(v18 + 24);
        }
        else
        {
          if (v20 != 1)
          {
            uint64_t v33 = 0;
            unint64_t v34 = BYTE6(v19);
            goto LABEL_62;
          }
          uint64_t v33 = (int)v18;
          uint64_t v37 = v18 >> 32;
        }
        if (v37 < v33) {
          goto LABEL_110;
        }
        unint64_t v34 = v37 - v33;
        if (__OFSUB__(v37, v33)) {
          goto LABEL_112;
        }
LABEL_62:
        if (v34 < 4) {
          goto LABEL_118;
        }
        uint64_t v38 = v33 + 4;
        if (__OFADD__(v33, 4)) {
          goto LABEL_113;
        }
        if (v20)
        {
          if (v20 == 1)
          {
            uint64_t v39 = (int)v18;
            uint64_t v40 = v18 >> 32;
          }
          else
          {
            uint64_t v39 = *(void *)(v18 + 16);
            uint64_t v40 = *(void *)(v18 + 24);
          }
        }
        else
        {
          uint64_t v39 = 0;
          uint64_t v40 = BYTE6(v19);
        }
        if (v40 < v38 || v38 < v39) {
          goto LABEL_114;
        }
        uint64_t v41 = 0;
        switch((int)v20)
        {
          case 1:
            uint64_t v41 = v18 >> 32;
            break;
          case 2:
            uint64_t v41 = *(void *)(v18 + 24);
            break;
          case 3:
            break;
          default:
            uint64_t v41 = BYTE6(v19);
            break;
        }
        if (v41 < v38) {
          goto LABEL_115;
        }
        uint64_t v42 = sub_1001BF140();
        uint64_t v44 = v43;
        sub_10000792C(v18, v19);
        *uint64_t v17 = v42;
        v17[1] = v44;
        unsigned int v13 = 0;
        switch(v32 >> 62)
        {
          case 1uLL:
            if ((int)v30 > v30 >> 32) {
              goto LABEL_121;
            }
            sub_100007B14(v30, v32);
            uint64_t v46 = sub_1001BEE60();
            if (!v46) {
              goto LABEL_126;
            }
            uint64_t v47 = v46;
            uint64_t v48 = sub_1001BEE90();
            uint64_t v49 = (int)v30 - v48;
            if (__OFSUB__((int)v30, v48)) {
              goto LABEL_123;
            }
            sub_1001BEE80();
            unsigned int v13 = *(_DWORD *)(v47 + v49);
            sub_10000792C(v30, v32);
LABEL_15:
            uint64_t v14 = *(void *)(v0 + 40) + *(int *)(v0 + 128);
            sub_10000792C(v30, v32);
            char v12 = 0;
            uint64_t v11 = bswap32(v13);
            *(void *)uint64_t v14 = v11;
            *(unsigned char *)(v14 + 8) = 0;
            break;
          case 2uLL:
            uint64_t v50 = *(void *)(v30 + 16);
            swift_retain();
            swift_retain();
            uint64_t v51 = sub_1001BEE60();
            if (!v51) {
              goto LABEL_127;
            }
            uint64_t v52 = v51;
            uint64_t v53 = sub_1001BEE90();
            BOOL v24 = __OFSUB__(v50, v53);
            uint64_t v54 = v50 - v53;
            if (v24) {
              goto LABEL_122;
            }
            sub_1001BEE80();
            unsigned int v13 = *(_DWORD *)(v52 + v54);
            swift_release();
            swift_release();
            goto LABEL_15;
          case 3uLL:
            goto LABEL_15;
          default:
            __chkstk_darwin(&v74, v45);
            *((_DWORD *)&v74 - 4) = v30;
            unsigned int v13 = v30;
            goto LABEL_15;
        }
        break;
      case 2uLL:
        uint64_t v23 = *(void *)(v18 + 16);
        uint64_t v22 = *(void *)(v18 + 24);
        BOOL v24 = __OFSUB__(v22, v23);
        uint64_t v21 = v22 - v23;
        if (!v24) {
          goto LABEL_22;
        }
        goto LABEL_120;
      case 3uLL:
        goto LABEL_88;
      default:
        uint64_t v21 = BYTE6(v19);
        goto LABEL_22;
    }
  }
  if (v12)
  {
    if (v11)
    {
      swift_errorRetain();
      swift_willThrow();
    }
    else
    {
      uint64_t v64 = *(void *)(v0 + 32);
      uint64_t v65 = type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v64, 1, 1, v65);
    }
  }
  else
  {
    uint64_t v55 = *(void *)(v0 + 40);
    if (v11)
    {
      uint64_t v56 = *(int *)(*(void *)(v0 + 56) + 76);
      *(_DWORD *)(v0 + 136) = v56;
      uint64_t v57 = *(void *)(v55 + v56);
      unint64_t v58 = *(void *)(v55 + v56 + 8);
      switch(v58 >> 62)
      {
        case 1uLL:
          LODWORD(v59) = HIDWORD(v57) - v57;
          if (__OFSUB__(HIDWORD(v57), v57)) {
            goto LABEL_124;
          }
          uint64_t v59 = (int)v59;
LABEL_96:
          if (v59 < v11)
          {
LABEL_97:
            char v75 = (uint64_t (*)(void))((char *)&dword_10020EB58 + dword_10020EB58);
            uint64_t v60 = (void *)swift_task_alloc();
            *(void *)(v0 + 96) = v60;
            void *v60 = v0;
            uint64_t v61 = sub_10016FFA8;
            goto LABEL_98;
          }
          sub_100007B14(v57, v58);
          sub_1001771D4(v11, v57, v58, v76);
          unint64_t v63 = v76[1];
          uint64_t v62 = v76[0];
          sub_100177370(v11);
          uint64_t v55 = *(void *)(v0 + 40);
          break;
        case 2uLL:
          uint64_t v67 = *(void *)(v57 + 16);
          uint64_t v66 = *(void *)(v57 + 24);
          BOOL v24 = __OFSUB__(v66, v67);
          uint64_t v59 = v66 - v67;
          if (!v24) {
            goto LABEL_96;
          }
          goto LABEL_125;
        case 3uLL:
          goto LABEL_97;
        default:
          uint64_t v59 = BYTE6(v58);
          goto LABEL_96;
      }
    }
    else
    {
      uint64_t v62 = 0;
      unint64_t v63 = 0xC000000000000000;
    }
    uint64_t v70 = v55 + *(int *)(v0 + 128);
    *(void *)uint64_t v70 = 0;
    *(unsigned char *)(v70 + 8) = 2;
    uint64_t v71 = type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse(0);
    *(void *)(v0 + 16) = v62;
    *(void *)(v0 + 24) = v63;
    memset(v76, 0, 40);
    sub_10000D9E0(v62, v63);
    sub_1001BFE90();
    sub_10018C778(&qword_10020A878, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse);
    sub_1001C0020();
    if (v9)
    {
      sub_100007918(v62, v63);
    }
    else
    {
      uint64_t v72 = *(void *)(v0 + 32);
      sub_100007918(v62, v63);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v72, 0, 1, v71);
    }
  }
  swift_task_dealloc();
  uint64_t v73 = *(uint64_t (**)(void))(v0 + 8);
  return v73();
}

uint64_t sub_10016F758()
{
  uint64_t v70 = v0;
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 40) + *(int *)(v0 + 128);
  sub_10018C550(*(void *)v2, *(unsigned char *)(v2 + 8));
  *(void *)uint64_t v2 = v1;
  *(unsigned char *)(v2 + 8) = 1;
  uint64_t v3 = (uint64_t *)(*(void *)(v0 + 40) + *(int *)(v0 + 128));
  uint64_t v4 = *v3;
  char v5 = *((unsigned char *)v3 + 8);
  while (2)
  {
    if (v5 != 2)
    {
      if (v5)
      {
        if (v4)
        {
          swift_errorRetain();
          swift_willThrow();
          swift_task_dealloc();
          uint64_t v65 = *(uint64_t (**)(void))(v0 + 8);
LABEL_92:
          return v65();
        }
        uint64_t v57 = *(void *)(v0 + 32);
        uint64_t v58 = type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v57, 1, 1, v58);
      }
      else
      {
        uint64_t v48 = *(void *)(v0 + 40);
        if (v4)
        {
          uint64_t v49 = *(int *)(*(void *)(v0 + 56) + 76);
          *(_DWORD *)(v0 + 136) = v49;
          uint64_t v50 = *(void *)(v48 + v49);
          unint64_t v51 = *(void *)(v48 + v49 + 8);
          switch(v51 >> 62)
          {
            case 1uLL:
              LODWORD(v52) = HIDWORD(v50) - v50;
              if (__OFSUB__(HIDWORD(v50), v50)) {
                goto LABEL_111;
              }
              uint64_t v52 = (int)v52;
LABEL_84:
              if (v52 < v4)
              {
LABEL_85:
                uint64_t v68 = (uint64_t (*)(void))((char *)&dword_10020EB58 + dword_10020EB58);
                uint64_t v53 = (void *)swift_task_alloc();
                *(void *)(v0 + 96) = v53;
                *uint64_t v53 = v0;
                uint64_t v54 = sub_10016FFA8;
                goto LABEL_86;
              }
              sub_100007B14(v50, v51);
              sub_1001771D4(v4, v50, v51, v69);
              unint64_t v56 = v69[1];
              uint64_t v55 = v69[0];
              sub_100177370(v4);
              uint64_t v48 = *(void *)(v0 + 40);
              break;
            case 2uLL:
              uint64_t v60 = *(void *)(v50 + 16);
              uint64_t v59 = *(void *)(v50 + 24);
              BOOL v17 = __OFSUB__(v59, v60);
              uint64_t v52 = v59 - v60;
              if (!v17) {
                goto LABEL_84;
              }
              goto LABEL_112;
            case 3uLL:
              goto LABEL_85;
            default:
              uint64_t v52 = BYTE6(v51);
              goto LABEL_84;
          }
        }
        else
        {
          uint64_t v55 = 0;
          unint64_t v56 = 0xC000000000000000;
        }
        uint64_t v63 = v48 + *(int *)(v0 + 128);
        *(void *)uint64_t v63 = 0;
        *(unsigned char *)(v63 + 8) = 2;
        uint64_t v64 = type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse(0);
        *(void *)(v0 + 16) = v55;
        *(void *)(v0 + 24) = v56;
        memset(v69, 0, 40);
        sub_10000D9E0(v55, v56);
        sub_1001BFE90();
        sub_10018C778(&qword_10020A878, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse);
        sub_1001C0020();
        uint64_t v66 = *(void *)(v0 + 32);
        sub_100007918(v55, v56);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v66, 0, 1, v64);
      }
      swift_task_dealloc();
      uint64_t v65 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_92;
    }
    uint64_t v8 = *(void *)(v0 + 40);
    uint64_t v9 = *(int *)(*(void *)(v0 + 56) + 76);
    *(_DWORD *)(v0 + 132) = v9;
    uint64_t v10 = (uint64_t *)(v8 + v9);
    uint64_t v11 = *(void *)(v8 + v9);
    unint64_t v12 = *(void *)(v8 + v9 + 8);
    unint64_t v13 = v12 >> 62;
    switch(v12 >> 62)
    {
      case 1uLL:
        LODWORD(v14) = HIDWORD(v11) - v11;
        if (__OFSUB__(HIDWORD(v11), v11)) {
          goto LABEL_106;
        }
        uint64_t v14 = (int)v14;
LABEL_10:
        if (v14 >= 4)
        {
          if (v13)
          {
            if (v13 == 1)
            {
              uint64_t v18 = (int)v11;
              uint64_t v19 = v11 >> 32;
            }
            else
            {
              uint64_t v18 = *(void *)(v11 + 16);
              uint64_t v19 = *(void *)(v11 + 24);
              swift_retain();
            }
            swift_retain();
            if (v19 < v18)
            {
              __break(1u);
LABEL_96:
              __break(1u);
LABEL_97:
              __break(1u);
              __break(1u);
LABEL_98:
              __break(1u);
              __break(1u);
LABEL_99:
              __break(1u);
LABEL_100:
              __break(1u);
LABEL_101:
              __break(1u);
LABEL_102:
              __break(1u);
LABEL_103:
              __break(1u);
LABEL_104:
              __break(1u);
LABEL_105:
              __break(1u);
LABEL_106:
              __break(1u);
LABEL_107:
              __break(1u);
LABEL_108:
              __break(1u);
LABEL_109:
              __break(1u);
LABEL_110:
              __break(1u);
LABEL_111:
              __break(1u);
LABEL_112:
              __break(1u);
LABEL_113:
              sub_1001BEE80();
              __break(1u);
LABEL_114:
              sub_1001BEE80();
              __break(1u);
              JUMPOUT(0x10016FF68);
            }
          }
          else
          {
            uint64_t v18 = 0;
            uint64_t v19 = BYTE6(v12);
          }
          if (__OFSUB__(v19, v18)) {
            goto LABEL_98;
          }
          if ((unint64_t)(v19 - v18) < 4)
          {
            if (!v13)
            {
              uint64_t v23 = sub_1001BF140();
              unint64_t v25 = v24;
              sub_10000792C(v11, v12);
              uint64_t v26 = 0;
              unint64_t v27 = BYTE6(v12);
              goto LABEL_50;
            }
            if (v13 == 1)
            {
              uint64_t v20 = v11 >> 32;
LABEL_36:
              if (v20 < (int)v11) {
                goto LABEL_96;
              }
              goto LABEL_41;
            }
            uint64_t v20 = *(void *)(v11 + 24);
            goto LABEL_38;
          }
          uint64_t v20 = v18 + 4;
          if (__OFADD__(v18, 4)) {
            goto LABEL_103;
          }
          if (v13)
          {
            if (v13 == 1)
            {
              uint64_t v21 = (int)v11;
              uint64_t v22 = v11 >> 32;
            }
            else
            {
              uint64_t v21 = *(void *)(v11 + 16);
              uint64_t v22 = *(void *)(v11 + 24);
            }
          }
          else
          {
            uint64_t v21 = 0;
            uint64_t v22 = BYTE6(v12);
          }
          if (v22 < v20 || v20 < v21) {
            goto LABEL_104;
          }
          if (v13)
          {
            if (v13 == 1) {
              goto LABEL_36;
            }
LABEL_38:
            if (v20 < *(void *)(v11 + 16)) {
              goto LABEL_96;
            }
            goto LABEL_41;
          }
          if (v20 < 0) {
            goto LABEL_96;
          }
LABEL_41:
          uint64_t v23 = sub_1001BF140();
          unint64_t v25 = v29;
          sub_10000792C(v11, v12);
          if (v13 == 2)
          {
            uint64_t v26 = *(void *)(v11 + 16);
            uint64_t v30 = *(void *)(v11 + 24);
          }
          else
          {
            if (v13 != 1)
            {
              uint64_t v26 = 0;
              unint64_t v27 = BYTE6(v12);
              goto LABEL_50;
            }
            uint64_t v26 = (int)v11;
            uint64_t v30 = v11 >> 32;
          }
          if (v30 < v26) {
            goto LABEL_97;
          }
          unint64_t v27 = v30 - v26;
          if (__OFSUB__(v30, v26)) {
            goto LABEL_99;
          }
LABEL_50:
          if (v27 < 4) {
            goto LABEL_105;
          }
          uint64_t v31 = v26 + 4;
          if (__OFADD__(v26, 4)) {
            goto LABEL_100;
          }
          if (v13)
          {
            if (v13 == 1)
            {
              uint64_t v32 = (int)v11;
              uint64_t v33 = v11 >> 32;
            }
            else
            {
              uint64_t v32 = *(void *)(v11 + 16);
              uint64_t v33 = *(void *)(v11 + 24);
            }
          }
          else
          {
            uint64_t v32 = 0;
            uint64_t v33 = BYTE6(v12);
          }
          if (v33 < v31 || v31 < v32) {
            goto LABEL_101;
          }
          uint64_t v34 = 0;
          switch((int)v13)
          {
            case 1:
              uint64_t v34 = v11 >> 32;
              break;
            case 2:
              uint64_t v34 = *(void *)(v11 + 24);
              break;
            case 3:
              break;
            default:
              uint64_t v34 = BYTE6(v12);
              break;
          }
          if (v34 < v31) {
            goto LABEL_102;
          }
          uint64_t v35 = sub_1001BF140();
          uint64_t v37 = v36;
          sub_10000792C(v11, v12);
          *uint64_t v10 = v35;
          v10[1] = v37;
          unsigned int v6 = 0;
          switch(v25 >> 62)
          {
            case 1uLL:
              if ((int)v23 > v23 >> 32) {
                goto LABEL_108;
              }
              sub_100007B14(v23, v25);
              uint64_t v39 = sub_1001BEE60();
              if (!v39) {
                goto LABEL_113;
              }
              uint64_t v40 = v39;
              uint64_t v41 = sub_1001BEE90();
              uint64_t v42 = (int)v23 - v41;
              if (__OFSUB__((int)v23, v41)) {
                goto LABEL_110;
              }
              sub_1001BEE80();
              unsigned int v6 = *(_DWORD *)(v40 + v42);
              sub_10000792C(v23, v25);
LABEL_3:
              uint64_t v7 = *(void *)(v0 + 40) + *(int *)(v0 + 128);
              sub_10000792C(v23, v25);
              char v5 = 0;
              uint64_t v4 = bswap32(v6);
              *(void *)uint64_t v7 = v4;
              *(unsigned char *)(v7 + 8) = 0;
              break;
            case 2uLL:
              uint64_t v43 = *(void *)(v23 + 16);
              swift_retain();
              swift_retain();
              uint64_t v44 = sub_1001BEE60();
              if (!v44) {
                goto LABEL_114;
              }
              uint64_t v45 = v44;
              uint64_t v46 = sub_1001BEE90();
              BOOL v17 = __OFSUB__(v43, v46);
              uint64_t v47 = v43 - v46;
              if (v17) {
                goto LABEL_109;
              }
              sub_1001BEE80();
              unsigned int v6 = *(_DWORD *)(v45 + v47);
              swift_release();
              swift_release();
              goto LABEL_3;
            case 3uLL:
              goto LABEL_3;
            default:
              __chkstk_darwin(&v67, v38);
              *((_DWORD *)&v67 - 4) = v23;
              unsigned int v6 = v23;
              goto LABEL_3;
          }
          continue;
        }
LABEL_76:
        uint64_t v68 = (uint64_t (*)(void))((char *)&dword_10020EB58 + dword_10020EB58);
        uint64_t v53 = (void *)swift_task_alloc();
        *(void *)(v0 + 64) = v53;
        *uint64_t v53 = v0;
        uint64_t v54 = (uint64_t (*)(uint64_t, uint64_t))sub_10016ED0C;
LABEL_86:
        v53[1] = v54;
        uint64_t v61 = v68;
        return v61();
      case 2uLL:
        uint64_t v16 = *(void *)(v11 + 16);
        uint64_t v15 = *(void *)(v11 + 24);
        BOOL v17 = __OFSUB__(v15, v16);
        uint64_t v14 = v15 - v16;
        if (!v17) {
          goto LABEL_10;
        }
        goto LABEL_107;
      case 3uLL:
        goto LABEL_76;
      default:
        uint64_t v14 = BYTE6(v12);
        goto LABEL_10;
    }
  }
}

uint64_t sub_10016FFA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[13] = a1;
  v4[14] = a2;
  v4[15] = v2;
  swift_task_dealloc();
  if (v2) {
    char v5 = sub_1001709F4;
  }
  else {
    char v5 = sub_1001700C0;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001700C0()
{
  uint64_t v77 = v0;
  unint64_t v1 = *(void *)(v0 + 112);
  if (v1 >> 60 == 15)
  {
    uint64_t v2 = *(void *)(v0 + 40);
    uint64_t v3 = v2 + *(int *)(v0 + 128);
    if (!*(unsigned char *)(v3 + 8))
    {
LABEL_6:
      sub_10000A870();
      uint64_t v7 = swift_allocError();
      sub_10018C550(*(void *)v3, *(unsigned char *)(v3 + 8));
      *(void *)uint64_t v3 = v7;
LABEL_12:
      *(unsigned char *)(v3 + 8) = 1;
      goto LABEL_13;
    }
    if (*(unsigned char *)(v3 + 8) != 1)
    {
      uint64_t v4 = (uint64_t *)(v2 + *(int *)(v0 + 136));
      uint64_t v6 = *v4;
      unint64_t v5 = v4[1];
      switch(v5 >> 62)
      {
        case 1uLL:
          if ((int)v6 != v6 >> 32) {
            goto LABEL_6;
          }
          break;
        case 2uLL:
          if (*(void *)(v6 + 16) != *(void *)(v6 + 24)) {
            goto LABEL_6;
          }
          break;
        case 3uLL:
          break;
        default:
          if ((v5 & 0xFF000000000000) != 0) {
            goto LABEL_6;
          }
          break;
      }
      *(void *)uint64_t v3 = 0;
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 104);
    sub_1001BF1B0();
    sub_100007918(v8, v1);
  }
LABEL_13:
  uint64_t v9 = *(void *)(v0 + 120);
  uint64_t v10 = (uint64_t *)(*(void *)(v0 + 40) + *(int *)(v0 + 128));
  uint64_t v11 = *v10;
  char v12 = *((unsigned char *)v10 + 8);
  while (v12 == 2)
  {
    uint64_t v15 = *(void *)(v0 + 40);
    uint64_t v16 = *(int *)(*(void *)(v0 + 56) + 76);
    *(_DWORD *)(v0 + 132) = v16;
    BOOL v17 = (uint64_t *)(v15 + v16);
    uint64_t v18 = *(void *)(v15 + v16);
    unint64_t v19 = *(void *)(v15 + v16 + 8);
    unint64_t v20 = v19 >> 62;
    switch(v19 >> 62)
    {
      case 1uLL:
        LODWORD(v21) = HIDWORD(v18) - v18;
        if (__OFSUB__(HIDWORD(v18), v18)) {
          goto LABEL_119;
        }
        uint64_t v21 = (int)v21;
LABEL_22:
        if (v21 < 4)
        {
LABEL_88:
          char v75 = (uint64_t (*)(void))((char *)&dword_10020EB58 + dword_10020EB58);
          uint64_t v60 = (void *)swift_task_alloc();
          *(void *)(v0 + 64) = v60;
          void *v60 = v0;
          uint64_t v61 = sub_10016ED0C;
LABEL_98:
          v60[1] = v61;
          uint64_t v68 = v75;
          return v68();
        }
        if (v20)
        {
          if (v20 == 1)
          {
            uint64_t v25 = (int)v18;
            uint64_t v26 = v18 >> 32;
          }
          else
          {
            uint64_t v25 = *(void *)(v18 + 16);
            uint64_t v26 = *(void *)(v18 + 24);
            swift_retain();
          }
          swift_retain();
          if (v26 < v25)
          {
            __break(1u);
LABEL_109:
            __break(1u);
LABEL_110:
            __break(1u);
            __break(1u);
LABEL_111:
            __break(1u);
            __break(1u);
LABEL_112:
            __break(1u);
LABEL_113:
            __break(1u);
LABEL_114:
            __break(1u);
LABEL_115:
            __break(1u);
LABEL_116:
            __break(1u);
LABEL_117:
            __break(1u);
LABEL_118:
            __break(1u);
LABEL_119:
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            sub_1001BEE80();
            __break(1u);
LABEL_127:
            sub_1001BEE80();
            __break(1u);
            JUMPOUT(0x1001709A4);
          }
        }
        else
        {
          uint64_t v25 = 0;
          uint64_t v26 = BYTE6(v19);
        }
        if (__OFSUB__(v26, v25)) {
          goto LABEL_111;
        }
        if ((unint64_t)(v26 - v25) < 4)
        {
          if (!v20)
          {
            uint64_t v30 = sub_1001BF140();
            unint64_t v32 = v31;
            sub_10000792C(v18, v19);
            uint64_t v33 = 0;
            unint64_t v34 = BYTE6(v19);
            goto LABEL_62;
          }
          if (v20 == 1)
          {
            uint64_t v27 = v18 >> 32;
LABEL_48:
            if (v27 < (int)v18) {
              goto LABEL_109;
            }
            goto LABEL_53;
          }
          uint64_t v27 = *(void *)(v18 + 24);
          goto LABEL_50;
        }
        uint64_t v27 = v25 + 4;
        if (__OFADD__(v25, 4)) {
          goto LABEL_116;
        }
        if (v20)
        {
          if (v20 == 1)
          {
            uint64_t v28 = (int)v18;
            uint64_t v29 = v18 >> 32;
          }
          else
          {
            uint64_t v28 = *(void *)(v18 + 16);
            uint64_t v29 = *(void *)(v18 + 24);
          }
        }
        else
        {
          uint64_t v28 = 0;
          uint64_t v29 = BYTE6(v19);
        }
        if (v29 < v27 || v27 < v28) {
          goto LABEL_117;
        }
        if (v20)
        {
          if (v20 == 1) {
            goto LABEL_48;
          }
LABEL_50:
          if (v27 < *(void *)(v18 + 16)) {
            goto LABEL_109;
          }
          goto LABEL_53;
        }
        if (v27 < 0) {
          goto LABEL_109;
        }
LABEL_53:
        uint64_t v30 = sub_1001BF140();
        unint64_t v32 = v36;
        sub_10000792C(v18, v19);
        if (v20 == 2)
        {
          uint64_t v33 = *(void *)(v18 + 16);
          uint64_t v37 = *(void *)(v18 + 24);
        }
        else
        {
          if (v20 != 1)
          {
            uint64_t v33 = 0;
            unint64_t v34 = BYTE6(v19);
            goto LABEL_62;
          }
          uint64_t v33 = (int)v18;
          uint64_t v37 = v18 >> 32;
        }
        if (v37 < v33) {
          goto LABEL_110;
        }
        unint64_t v34 = v37 - v33;
        if (__OFSUB__(v37, v33)) {
          goto LABEL_112;
        }
LABEL_62:
        if (v34 < 4) {
          goto LABEL_118;
        }
        uint64_t v38 = v33 + 4;
        if (__OFADD__(v33, 4)) {
          goto LABEL_113;
        }
        if (v20)
        {
          if (v20 == 1)
          {
            uint64_t v39 = (int)v18;
            uint64_t v40 = v18 >> 32;
          }
          else
          {
            uint64_t v39 = *(void *)(v18 + 16);
            uint64_t v40 = *(void *)(v18 + 24);
          }
        }
        else
        {
          uint64_t v39 = 0;
          uint64_t v40 = BYTE6(v19);
        }
        if (v40 < v38 || v38 < v39) {
          goto LABEL_114;
        }
        uint64_t v41 = 0;
        switch((int)v20)
        {
          case 1:
            uint64_t v41 = v18 >> 32;
            break;
          case 2:
            uint64_t v41 = *(void *)(v18 + 24);
            break;
          case 3:
            break;
          default:
            uint64_t v41 = BYTE6(v19);
            break;
        }
        if (v41 < v38) {
          goto LABEL_115;
        }
        uint64_t v42 = sub_1001BF140();
        uint64_t v44 = v43;
        sub_10000792C(v18, v19);
        *BOOL v17 = v42;
        v17[1] = v44;
        unsigned int v13 = 0;
        switch(v32 >> 62)
        {
          case 1uLL:
            if ((int)v30 > v30 >> 32) {
              goto LABEL_121;
            }
            sub_100007B14(v30, v32);
            uint64_t v46 = sub_1001BEE60();
            if (!v46) {
              goto LABEL_126;
            }
            uint64_t v47 = v46;
            uint64_t v48 = sub_1001BEE90();
            uint64_t v49 = (int)v30 - v48;
            if (__OFSUB__((int)v30, v48)) {
              goto LABEL_123;
            }
            sub_1001BEE80();
            unsigned int v13 = *(_DWORD *)(v47 + v49);
            sub_10000792C(v30, v32);
LABEL_15:
            uint64_t v14 = *(void *)(v0 + 40) + *(int *)(v0 + 128);
            sub_10000792C(v30, v32);
            char v12 = 0;
            uint64_t v11 = bswap32(v13);
            *(void *)uint64_t v14 = v11;
            *(unsigned char *)(v14 + 8) = 0;
            break;
          case 2uLL:
            uint64_t v50 = *(void *)(v30 + 16);
            swift_retain();
            swift_retain();
            uint64_t v51 = sub_1001BEE60();
            if (!v51) {
              goto LABEL_127;
            }
            uint64_t v52 = v51;
            uint64_t v53 = sub_1001BEE90();
            BOOL v24 = __OFSUB__(v50, v53);
            uint64_t v54 = v50 - v53;
            if (v24) {
              goto LABEL_122;
            }
            sub_1001BEE80();
            unsigned int v13 = *(_DWORD *)(v52 + v54);
            swift_release();
            swift_release();
            goto LABEL_15;
          case 3uLL:
            goto LABEL_15;
          default:
            __chkstk_darwin(&v74, v45);
            *((_DWORD *)&v74 - 4) = v30;
            unsigned int v13 = v30;
            goto LABEL_15;
        }
        break;
      case 2uLL:
        uint64_t v23 = *(void *)(v18 + 16);
        uint64_t v22 = *(void *)(v18 + 24);
        BOOL v24 = __OFSUB__(v22, v23);
        uint64_t v21 = v22 - v23;
        if (!v24) {
          goto LABEL_22;
        }
        goto LABEL_120;
      case 3uLL:
        goto LABEL_88;
      default:
        uint64_t v21 = BYTE6(v19);
        goto LABEL_22;
    }
  }
  if (v12)
  {
    if (v11)
    {
      swift_errorRetain();
      swift_willThrow();
    }
    else
    {
      uint64_t v64 = *(void *)(v0 + 32);
      uint64_t v65 = type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v64, 1, 1, v65);
    }
  }
  else
  {
    uint64_t v55 = *(void *)(v0 + 40);
    if (v11)
    {
      uint64_t v56 = *(int *)(*(void *)(v0 + 56) + 76);
      *(_DWORD *)(v0 + 136) = v56;
      uint64_t v57 = *(void *)(v55 + v56);
      unint64_t v58 = *(void *)(v55 + v56 + 8);
      switch(v58 >> 62)
      {
        case 1uLL:
          LODWORD(v59) = HIDWORD(v57) - v57;
          if (__OFSUB__(HIDWORD(v57), v57)) {
            goto LABEL_124;
          }
          uint64_t v59 = (int)v59;
LABEL_96:
          if (v59 < v11)
          {
LABEL_97:
            char v75 = (uint64_t (*)(void))((char *)&dword_10020EB58 + dword_10020EB58);
            uint64_t v60 = (void *)swift_task_alloc();
            *(void *)(v0 + 96) = v60;
            void *v60 = v0;
            uint64_t v61 = sub_10016FFA8;
            goto LABEL_98;
          }
          sub_100007B14(v57, v58);
          sub_1001771D4(v11, v57, v58, v76);
          unint64_t v63 = v76[1];
          uint64_t v62 = v76[0];
          sub_100177370(v11);
          uint64_t v55 = *(void *)(v0 + 40);
          break;
        case 2uLL:
          uint64_t v67 = *(void *)(v57 + 16);
          uint64_t v66 = *(void *)(v57 + 24);
          BOOL v24 = __OFSUB__(v66, v67);
          uint64_t v59 = v66 - v67;
          if (!v24) {
            goto LABEL_96;
          }
          goto LABEL_125;
        case 3uLL:
          goto LABEL_97;
        default:
          uint64_t v59 = BYTE6(v58);
          goto LABEL_96;
      }
    }
    else
    {
      uint64_t v62 = 0;
      unint64_t v63 = 0xC000000000000000;
    }
    uint64_t v70 = v55 + *(int *)(v0 + 128);
    *(void *)uint64_t v70 = 0;
    *(unsigned char *)(v70 + 8) = 2;
    uint64_t v71 = type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse(0);
    *(void *)(v0 + 16) = v62;
    *(void *)(v0 + 24) = v63;
    memset(v76, 0, 40);
    sub_10000D9E0(v62, v63);
    sub_1001BFE90();
    sub_10018C778(&qword_10020A878, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse);
    sub_1001C0020();
    if (v9)
    {
      sub_100007918(v62, v63);
    }
    else
    {
      uint64_t v72 = *(void *)(v0 + 32);
      sub_100007918(v62, v63);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v72, 0, 1, v71);
    }
  }
  swift_task_dealloc();
  uint64_t v73 = *(uint64_t (**)(void))(v0 + 8);
  return v73();
}

uint64_t sub_1001709F4()
{
  uint64_t v70 = v0;
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 40) + *(int *)(v0 + 128);
  sub_10018C550(*(void *)v2, *(unsigned char *)(v2 + 8));
  *(void *)uint64_t v2 = v1;
  *(unsigned char *)(v2 + 8) = 1;
  uint64_t v3 = (uint64_t *)(*(void *)(v0 + 40) + *(int *)(v0 + 128));
  uint64_t v4 = *v3;
  char v5 = *((unsigned char *)v3 + 8);
  while (2)
  {
    if (v5 != 2)
    {
      if (v5)
      {
        if (v4)
        {
          swift_errorRetain();
          swift_willThrow();
          swift_task_dealloc();
          uint64_t v65 = *(uint64_t (**)(void))(v0 + 8);
LABEL_92:
          return v65();
        }
        uint64_t v57 = *(void *)(v0 + 32);
        uint64_t v58 = type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v57, 1, 1, v58);
      }
      else
      {
        uint64_t v48 = *(void *)(v0 + 40);
        if (v4)
        {
          uint64_t v49 = *(int *)(*(void *)(v0 + 56) + 76);
          *(_DWORD *)(v0 + 136) = v49;
          uint64_t v50 = *(void *)(v48 + v49);
          unint64_t v51 = *(void *)(v48 + v49 + 8);
          switch(v51 >> 62)
          {
            case 1uLL:
              LODWORD(v52) = HIDWORD(v50) - v50;
              if (__OFSUB__(HIDWORD(v50), v50)) {
                goto LABEL_111;
              }
              uint64_t v52 = (int)v52;
LABEL_84:
              if (v52 < v4)
              {
LABEL_85:
                uint64_t v68 = (uint64_t (*)(void))((char *)&dword_10020EB58 + dword_10020EB58);
                uint64_t v53 = (void *)swift_task_alloc();
                *(void *)(v0 + 96) = v53;
                *uint64_t v53 = v0;
                uint64_t v54 = sub_10016FFA8;
                goto LABEL_86;
              }
              sub_100007B14(v50, v51);
              sub_1001771D4(v4, v50, v51, v69);
              unint64_t v56 = v69[1];
              uint64_t v55 = v69[0];
              sub_100177370(v4);
              uint64_t v48 = *(void *)(v0 + 40);
              break;
            case 2uLL:
              uint64_t v60 = *(void *)(v50 + 16);
              uint64_t v59 = *(void *)(v50 + 24);
              BOOL v17 = __OFSUB__(v59, v60);
              uint64_t v52 = v59 - v60;
              if (!v17) {
                goto LABEL_84;
              }
              goto LABEL_112;
            case 3uLL:
              goto LABEL_85;
            default:
              uint64_t v52 = BYTE6(v51);
              goto LABEL_84;
          }
        }
        else
        {
          uint64_t v55 = 0;
          unint64_t v56 = 0xC000000000000000;
        }
        uint64_t v63 = v48 + *(int *)(v0 + 128);
        *(void *)uint64_t v63 = 0;
        *(unsigned char *)(v63 + 8) = 2;
        uint64_t v64 = type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse(0);
        *(void *)(v0 + 16) = v55;
        *(void *)(v0 + 24) = v56;
        memset(v69, 0, 40);
        sub_10000D9E0(v55, v56);
        sub_1001BFE90();
        sub_10018C778(&qword_10020A878, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse);
        sub_1001C0020();
        uint64_t v66 = *(void *)(v0 + 32);
        sub_100007918(v55, v56);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v66, 0, 1, v64);
      }
      swift_task_dealloc();
      uint64_t v65 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_92;
    }
    uint64_t v8 = *(void *)(v0 + 40);
    uint64_t v9 = *(int *)(*(void *)(v0 + 56) + 76);
    *(_DWORD *)(v0 + 132) = v9;
    uint64_t v10 = (uint64_t *)(v8 + v9);
    uint64_t v11 = *(void *)(v8 + v9);
    unint64_t v12 = *(void *)(v8 + v9 + 8);
    unint64_t v13 = v12 >> 62;
    switch(v12 >> 62)
    {
      case 1uLL:
        LODWORD(v14) = HIDWORD(v11) - v11;
        if (__OFSUB__(HIDWORD(v11), v11)) {
          goto LABEL_106;
        }
        uint64_t v14 = (int)v14;
LABEL_10:
        if (v14 >= 4)
        {
          if (v13)
          {
            if (v13 == 1)
            {
              uint64_t v18 = (int)v11;
              uint64_t v19 = v11 >> 32;
            }
            else
            {
              uint64_t v18 = *(void *)(v11 + 16);
              uint64_t v19 = *(void *)(v11 + 24);
              swift_retain();
            }
            swift_retain();
            if (v19 < v18)
            {
              __break(1u);
LABEL_96:
              __break(1u);
LABEL_97:
              __break(1u);
              __break(1u);
LABEL_98:
              __break(1u);
              __break(1u);
LABEL_99:
              __break(1u);
LABEL_100:
              __break(1u);
LABEL_101:
              __break(1u);
LABEL_102:
              __break(1u);
LABEL_103:
              __break(1u);
LABEL_104:
              __break(1u);
LABEL_105:
              __break(1u);
LABEL_106:
              __break(1u);
LABEL_107:
              __break(1u);
LABEL_108:
              __break(1u);
LABEL_109:
              __break(1u);
LABEL_110:
              __break(1u);
LABEL_111:
              __break(1u);
LABEL_112:
              __break(1u);
LABEL_113:
              sub_1001BEE80();
              __break(1u);
LABEL_114:
              sub_1001BEE80();
              __break(1u);
              JUMPOUT(0x100171204);
            }
          }
          else
          {
            uint64_t v18 = 0;
            uint64_t v19 = BYTE6(v12);
          }
          if (__OFSUB__(v19, v18)) {
            goto LABEL_98;
          }
          if ((unint64_t)(v19 - v18) < 4)
          {
            if (!v13)
            {
              uint64_t v23 = sub_1001BF140();
              unint64_t v25 = v24;
              sub_10000792C(v11, v12);
              uint64_t v26 = 0;
              unint64_t v27 = BYTE6(v12);
              goto LABEL_50;
            }
            if (v13 == 1)
            {
              uint64_t v20 = v11 >> 32;
LABEL_36:
              if (v20 < (int)v11) {
                goto LABEL_96;
              }
              goto LABEL_41;
            }
            uint64_t v20 = *(void *)(v11 + 24);
            goto LABEL_38;
          }
          uint64_t v20 = v18 + 4;
          if (__OFADD__(v18, 4)) {
            goto LABEL_103;
          }
          if (v13)
          {
            if (v13 == 1)
            {
              uint64_t v21 = (int)v11;
              uint64_t v22 = v11 >> 32;
            }
            else
            {
              uint64_t v21 = *(void *)(v11 + 16);
              uint64_t v22 = *(void *)(v11 + 24);
            }
          }
          else
          {
            uint64_t v21 = 0;
            uint64_t v22 = BYTE6(v12);
          }
          if (v22 < v20 || v20 < v21) {
            goto LABEL_104;
          }
          if (v13)
          {
            if (v13 == 1) {
              goto LABEL_36;
            }
LABEL_38:
            if (v20 < *(void *)(v11 + 16)) {
              goto LABEL_96;
            }
            goto LABEL_41;
          }
          if (v20 < 0) {
            goto LABEL_96;
          }
LABEL_41:
          uint64_t v23 = sub_1001BF140();
          unint64_t v25 = v29;
          sub_10000792C(v11, v12);
          if (v13 == 2)
          {
            uint64_t v26 = *(void *)(v11 + 16);
            uint64_t v30 = *(void *)(v11 + 24);
          }
          else
          {
            if (v13 != 1)
            {
              uint64_t v26 = 0;
              unint64_t v27 = BYTE6(v12);
              goto LABEL_50;
            }
            uint64_t v26 = (int)v11;
            uint64_t v30 = v11 >> 32;
          }
          if (v30 < v26) {
            goto LABEL_97;
          }
          unint64_t v27 = v30 - v26;
          if (__OFSUB__(v30, v26)) {
            goto LABEL_99;
          }
LABEL_50:
          if (v27 < 4) {
            goto LABEL_105;
          }
          uint64_t v31 = v26 + 4;
          if (__OFADD__(v26, 4)) {
            goto LABEL_100;
          }
          if (v13)
          {
            if (v13 == 1)
            {
              uint64_t v32 = (int)v11;
              uint64_t v33 = v11 >> 32;
            }
            else
            {
              uint64_t v32 = *(void *)(v11 + 16);
              uint64_t v33 = *(void *)(v11 + 24);
            }
          }
          else
          {
            uint64_t v32 = 0;
            uint64_t v33 = BYTE6(v12);
          }
          if (v33 < v31 || v31 < v32) {
            goto LABEL_101;
          }
          uint64_t v34 = 0;
          switch((int)v13)
          {
            case 1:
              uint64_t v34 = v11 >> 32;
              break;
            case 2:
              uint64_t v34 = *(void *)(v11 + 24);
              break;
            case 3:
              break;
            default:
              uint64_t v34 = BYTE6(v12);
              break;
          }
          if (v34 < v31) {
            goto LABEL_102;
          }
          uint64_t v35 = sub_1001BF140();
          uint64_t v37 = v36;
          sub_10000792C(v11, v12);
          *uint64_t v10 = v35;
          v10[1] = v37;
          unsigned int v6 = 0;
          switch(v25 >> 62)
          {
            case 1uLL:
              if ((int)v23 > v23 >> 32) {
                goto LABEL_108;
              }
              sub_100007B14(v23, v25);
              uint64_t v39 = sub_1001BEE60();
              if (!v39) {
                goto LABEL_113;
              }
              uint64_t v40 = v39;
              uint64_t v41 = sub_1001BEE90();
              uint64_t v42 = (int)v23 - v41;
              if (__OFSUB__((int)v23, v41)) {
                goto LABEL_110;
              }
              sub_1001BEE80();
              unsigned int v6 = *(_DWORD *)(v40 + v42);
              sub_10000792C(v23, v25);
LABEL_3:
              uint64_t v7 = *(void *)(v0 + 40) + *(int *)(v0 + 128);
              sub_10000792C(v23, v25);
              char v5 = 0;
              uint64_t v4 = bswap32(v6);
              *(void *)uint64_t v7 = v4;
              *(unsigned char *)(v7 + 8) = 0;
              break;
            case 2uLL:
              uint64_t v43 = *(void *)(v23 + 16);
              swift_retain();
              swift_retain();
              uint64_t v44 = sub_1001BEE60();
              if (!v44) {
                goto LABEL_114;
              }
              uint64_t v45 = v44;
              uint64_t v46 = sub_1001BEE90();
              BOOL v17 = __OFSUB__(v43, v46);
              uint64_t v47 = v43 - v46;
              if (v17) {
                goto LABEL_109;
              }
              sub_1001BEE80();
              unsigned int v6 = *(_DWORD *)(v45 + v47);
              swift_release();
              swift_release();
              goto LABEL_3;
            case 3uLL:
              goto LABEL_3;
            default:
              __chkstk_darwin(&v67, v38);
              *((_DWORD *)&v67 - 4) = v23;
              unsigned int v6 = v23;
              goto LABEL_3;
          }
          continue;
        }
LABEL_76:
        uint64_t v68 = (uint64_t (*)(void))((char *)&dword_10020EB58 + dword_10020EB58);
        uint64_t v53 = (void *)swift_task_alloc();
        *(void *)(v0 + 64) = v53;
        *uint64_t v53 = v0;
        uint64_t v54 = sub_10016ED0C;
LABEL_86:
        v53[1] = v54;
        uint64_t v61 = v68;
        return v61();
      case 2uLL:
        uint64_t v16 = *(void *)(v11 + 16);
        uint64_t v15 = *(void *)(v11 + 24);
        BOOL v17 = __OFSUB__(v15, v16);
        uint64_t v14 = v15 - v16;
        if (!v17) {
          goto LABEL_10;
        }
        goto LABEL_107;
      case 3uLL:
        goto LABEL_76;
      default:
        uint64_t v14 = BYTE6(v12);
        goto LABEL_10;
    }
  }
}

uint64_t sub_100171244(uint64_t a1)
{
  v2[8] = a1;
  v2[9] = v1;
  sub_1001BFEA0();
  v2[10] = swift_task_alloc();
  return _swift_task_switch(sub_1001712D4, 0, 0);
}

uint64_t sub_1001712D4()
{
  uint64_t v69 = v0;
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = sub_100003918(&qword_10020E3B0);
  *(void *)(v0 + 88) = v2;
  uint64_t v3 = *(int *)(v2 + 80);
  *(_DWORD *)(v0 + 128) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  uint64_t v5 = *v4;
  char v6 = *((unsigned char *)v4 + 8);
  while (2)
  {
    if (v6 != 2)
    {
      if (v6)
      {
        if (v5)
        {
          swift_errorRetain();
          swift_willThrow();
          swift_task_dealloc();
          uint64_t v66 = *(uint64_t (**)(void))(v0 + 8);
LABEL_92:
          return v66();
        }
        uint64_t v61 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse(0);
        uint64_t v62 = 1;
      }
      else
      {
        uint64_t v49 = *(void *)(v0 + 72);
        if (v5)
        {
          uint64_t v50 = *(int *)(*(void *)(v0 + 88) + 76);
          *(_DWORD *)(v0 + 136) = v50;
          uint64_t v51 = *(void *)(v49 + v50);
          unint64_t v52 = *(void *)(v49 + v50 + 8);
          switch(v52 >> 62)
          {
            case 1uLL:
              LODWORD(v53) = HIDWORD(v51) - v51;
              if (__OFSUB__(HIDWORD(v51), v51)) {
                goto LABEL_111;
              }
              uint64_t v53 = (int)v53;
LABEL_84:
              if (v53 < v5)
              {
LABEL_85:
                uint64_t v54 = v0 + 32;
                uint64_t v55 = sub_100003918(&qword_10020EB88);
                uint64_t v56 = sub_100016710(&qword_10020EB90, &qword_10020EB88);
                uint64_t v57 = (void *)swift_task_alloc();
                *(void *)(v0 + 112) = v57;
                *uint64_t v57 = v0;
                uint64_t v58 = sub_100172EB0;
                goto LABEL_86;
              }
              sub_100007B14(v51, v52);
              sub_1001771D4(v5, v51, v52, v68);
              unint64_t v60 = v68[1];
              uint64_t v59 = v68[0];
              sub_100177370(v5);
              uint64_t v49 = *(void *)(v0 + 72);
              break;
            case 2uLL:
              uint64_t v64 = *(void *)(v51 + 16);
              uint64_t v63 = *(void *)(v51 + 24);
              BOOL v18 = __OFSUB__(v63, v64);
              uint64_t v53 = v63 - v64;
              if (!v18) {
                goto LABEL_84;
              }
              goto LABEL_112;
            case 3uLL:
              goto LABEL_85;
            default:
              uint64_t v53 = BYTE6(v52);
              goto LABEL_84;
          }
        }
        else
        {
          uint64_t v59 = 0;
          unint64_t v60 = 0xC000000000000000;
        }
        uint64_t v65 = v49 + *(int *)(v0 + 128);
        *(void *)uint64_t v65 = 0;
        *(unsigned char *)(v65 + 8) = 2;
        uint64_t v61 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse(0);
        *(void *)(v0 + 16) = v59;
        *(void *)(v0 + 24) = v60;
        memset(v68, 0, 40);
        sub_10000D9E0(v59, v60);
        sub_1001BFE90();
        sub_10018C778(&qword_10020A0A0, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse);
        sub_1001C0020();
        sub_100007918(v59, v60);
        uint64_t v62 = 0;
      }
      (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(*(void *)(v0 + 64), v62, 1, v61);
      swift_task_dealloc();
      uint64_t v66 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_92;
    }
    uint64_t v9 = *(void *)(v0 + 72);
    uint64_t v10 = *(int *)(*(void *)(v0 + 88) + 76);
    *(_DWORD *)(v0 + 132) = v10;
    uint64_t v11 = (uint64_t *)(v9 + v10);
    uint64_t v12 = *(void *)(v9 + v10);
    unint64_t v13 = *(void *)(v9 + v10 + 8);
    unint64_t v14 = v13 >> 62;
    switch(v13 >> 62)
    {
      case 1uLL:
        LODWORD(v15) = HIDWORD(v12) - v12;
        if (__OFSUB__(HIDWORD(v12), v12)) {
          goto LABEL_106;
        }
        uint64_t v15 = (int)v15;
LABEL_10:
        if (v15 >= 4)
        {
          if (v14)
          {
            if (v14 == 1)
            {
              uint64_t v19 = (int)v12;
              uint64_t v20 = v12 >> 32;
            }
            else
            {
              uint64_t v19 = *(void *)(v12 + 16);
              uint64_t v20 = *(void *)(v12 + 24);
              swift_retain();
            }
            swift_retain();
            if (v20 < v19)
            {
              __break(1u);
LABEL_96:
              __break(1u);
LABEL_97:
              __break(1u);
              __break(1u);
LABEL_98:
              __break(1u);
              __break(1u);
LABEL_99:
              __break(1u);
LABEL_100:
              __break(1u);
LABEL_101:
              __break(1u);
LABEL_102:
              __break(1u);
LABEL_103:
              __break(1u);
LABEL_104:
              __break(1u);
LABEL_105:
              __break(1u);
LABEL_106:
              __break(1u);
LABEL_107:
              __break(1u);
LABEL_108:
              __break(1u);
LABEL_109:
              __break(1u);
LABEL_110:
              __break(1u);
LABEL_111:
              __break(1u);
LABEL_112:
              __break(1u);
LABEL_113:
              sub_1001BEE80();
              __break(1u);
LABEL_114:
              sub_1001BEE80();
              __break(1u);
              JUMPOUT(0x100171B14);
            }
          }
          else
          {
            uint64_t v19 = 0;
            uint64_t v20 = BYTE6(v13);
          }
          if (__OFSUB__(v20, v19)) {
            goto LABEL_98;
          }
          if ((unint64_t)(v20 - v19) < 4)
          {
            if (!v14)
            {
              uint64_t v24 = sub_1001BF140();
              unint64_t v26 = v25;
              sub_10000792C(v12, v13);
              uint64_t v27 = 0;
              unint64_t v28 = BYTE6(v13);
              goto LABEL_50;
            }
            if (v14 == 1)
            {
              uint64_t v21 = v12 >> 32;
LABEL_36:
              if (v21 < (int)v12) {
                goto LABEL_96;
              }
              goto LABEL_41;
            }
            uint64_t v21 = *(void *)(v12 + 24);
            goto LABEL_38;
          }
          uint64_t v21 = v19 + 4;
          if (__OFADD__(v19, 4)) {
            goto LABEL_103;
          }
          if (v14)
          {
            if (v14 == 1)
            {
              uint64_t v22 = (int)v12;
              uint64_t v23 = v12 >> 32;
            }
            else
            {
              uint64_t v22 = *(void *)(v12 + 16);
              uint64_t v23 = *(void *)(v12 + 24);
            }
          }
          else
          {
            uint64_t v22 = 0;
            uint64_t v23 = BYTE6(v13);
          }
          if (v23 < v21 || v21 < v22) {
            goto LABEL_104;
          }
          if (v14)
          {
            if (v14 == 1) {
              goto LABEL_36;
            }
LABEL_38:
            if (v21 < *(void *)(v12 + 16)) {
              goto LABEL_96;
            }
            goto LABEL_41;
          }
          if (v21 < 0) {
            goto LABEL_96;
          }
LABEL_41:
          uint64_t v24 = sub_1001BF140();
          unint64_t v26 = v30;
          sub_10000792C(v12, v13);
          if (v14 == 2)
          {
            uint64_t v27 = *(void *)(v12 + 16);
            uint64_t v31 = *(void *)(v12 + 24);
          }
          else
          {
            if (v14 != 1)
            {
              uint64_t v27 = 0;
              unint64_t v28 = BYTE6(v13);
              goto LABEL_50;
            }
            uint64_t v27 = (int)v12;
            uint64_t v31 = v12 >> 32;
          }
          if (v31 < v27) {
            goto LABEL_97;
          }
          unint64_t v28 = v31 - v27;
          if (__OFSUB__(v31, v27)) {
            goto LABEL_99;
          }
LABEL_50:
          if (v28 < 4) {
            goto LABEL_105;
          }
          uint64_t v32 = v27 + 4;
          if (__OFADD__(v27, 4)) {
            goto LABEL_100;
          }
          if (v14)
          {
            if (v14 == 1)
            {
              uint64_t v33 = (int)v12;
              uint64_t v34 = v12 >> 32;
            }
            else
            {
              uint64_t v33 = *(void *)(v12 + 16);
              uint64_t v34 = *(void *)(v12 + 24);
            }
          }
          else
          {
            uint64_t v33 = 0;
            uint64_t v34 = BYTE6(v13);
          }
          if (v34 < v32 || v32 < v33) {
            goto LABEL_101;
          }
          uint64_t v35 = 0;
          switch((int)v14)
          {
            case 1:
              uint64_t v35 = v12 >> 32;
              break;
            case 2:
              uint64_t v35 = *(void *)(v12 + 24);
              break;
            case 3:
              break;
            default:
              uint64_t v35 = BYTE6(v13);
              break;
          }
          if (v35 < v32) {
            goto LABEL_102;
          }
          uint64_t v36 = sub_1001BF140();
          uint64_t v38 = v37;
          sub_10000792C(v12, v13);
          uint64_t *v11 = v36;
          v11[1] = v38;
          unsigned int v7 = 0;
          switch(v26 >> 62)
          {
            case 1uLL:
              if ((int)v24 > v24 >> 32) {
                goto LABEL_108;
              }
              sub_100007B14(v24, v26);
              uint64_t v40 = sub_1001BEE60();
              if (!v40) {
                goto LABEL_113;
              }
              uint64_t v41 = v40;
              uint64_t v42 = sub_1001BEE90();
              uint64_t v43 = (int)v24 - v42;
              if (__OFSUB__((int)v24, v42)) {
                goto LABEL_110;
              }
              sub_1001BEE80();
              unsigned int v7 = *(_DWORD *)(v41 + v43);
              sub_10000792C(v24, v26);
LABEL_3:
              uint64_t v8 = *(void *)(v0 + 72) + *(int *)(v0 + 128);
              sub_10000792C(v24, v26);
              char v6 = 0;
              uint64_t v5 = bswap32(v7);
              *(void *)uint64_t v8 = v5;
              *(unsigned char *)(v8 + 8) = 0;
              break;
            case 2uLL:
              uint64_t v44 = *(void *)(v24 + 16);
              swift_retain();
              swift_retain();
              uint64_t v45 = sub_1001BEE60();
              if (!v45) {
                goto LABEL_114;
              }
              uint64_t v46 = v45;
              uint64_t v47 = sub_1001BEE90();
              BOOL v18 = __OFSUB__(v44, v47);
              uint64_t v48 = v44 - v47;
              if (v18) {
                goto LABEL_109;
              }
              sub_1001BEE80();
              unsigned int v7 = *(_DWORD *)(v46 + v48);
              swift_release();
              swift_release();
              goto LABEL_3;
            case 3uLL:
              goto LABEL_3;
            default:
              __chkstk_darwin(v68, v39);
              LODWORD(v68[-2]) = v24;
              unsigned int v7 = v24;
              goto LABEL_3;
          }
          continue;
        }
LABEL_76:
        uint64_t v54 = v0 + 48;
        uint64_t v55 = sub_100003918(&qword_10020EB88);
        uint64_t v56 = sub_100016710(&qword_10020EB90, &qword_10020EB88);
        uint64_t v57 = (void *)swift_task_alloc();
        *(void *)(v0 + 96) = v57;
        *uint64_t v57 = v0;
        uint64_t v58 = sub_100171B54;
LABEL_86:
        v57[1] = v58;
        return dispatch thunk of AsyncIteratorProtocol.next()(v54, v55, v56);
      case 2uLL:
        uint64_t v17 = *(void *)(v12 + 16);
        uint64_t v16 = *(void *)(v12 + 24);
        BOOL v18 = __OFSUB__(v16, v17);
        uint64_t v15 = v16 - v17;
        if (!v18) {
          goto LABEL_10;
        }
        goto LABEL_107;
      case 3uLL:
        goto LABEL_76;
      default:
        uint64_t v15 = BYTE6(v13);
        goto LABEL_10;
    }
  }
}

uint64_t sub_100171B54()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1001725F8;
  }
  else {
    uint64_t v2 = sub_100171C68;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100171C68()
{
  uint64_t v80 = v0;
  unint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 72);
  v78[1] = v0 + 16;
  if (v1 >> 60 == 15)
  {
    uint64_t v3 = v2 + *(int *)(v0 + 128);
    if (*(unsigned char *)(v3 + 8))
    {
      if (*(unsigned char *)(v3 + 8) == 1) {
        goto LABEL_13;
      }
      uint64_t v4 = (uint64_t *)(v2 + *(int *)(v0 + 132));
      uint64_t v6 = *v4;
      unint64_t v5 = v4[1];
      switch(v5 >> 62)
      {
        case 1uLL:
          if ((int)v6 != v6 >> 32) {
            goto LABEL_6;
          }
          break;
        case 2uLL:
          if (*(void *)(v6 + 16) != *(void *)(v6 + 24)) {
            goto LABEL_6;
          }
          break;
        case 3uLL:
          break;
        default:
          if ((v5 & 0xFF000000000000) != 0) {
            goto LABEL_6;
          }
          break;
      }
      *(void *)uint64_t v3 = 0;
    }
    else
    {
LABEL_6:
      sub_10000A870();
      uint64_t v7 = swift_allocError();
      sub_10018C550(*(void *)v3, *(unsigned char *)(v3 + 8));
      *(void *)uint64_t v3 = v7;
    }
    *(unsigned char *)(v3 + 8) = 1;
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 48);
    sub_1001BF1B0();
    sub_100007918(v8, v1);
  }
LABEL_13:
  uint64_t v9 = *(void *)(v0 + 104);
  uint64_t v10 = (uint64_t *)(*(void *)(v0 + 72) + *(int *)(v0 + 128));
  uint64_t v11 = *v10;
  char v12 = *((unsigned char *)v10 + 8);
  while (2)
  {
    if (v12 != 2)
    {
      if (v12)
      {
        if (v11)
        {
          swift_errorRetain();
          swift_willThrow();
LABEL_103:
          swift_task_dealloc();
          v76 = *(uint64_t (**)(void))(v0 + 8);
LABEL_106:
          return v76();
        }
        uint64_t v68 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse(0);
        uint64_t v69 = 1;
      }
      else
      {
        uint64_t v55 = *(void *)(v0 + 72);
        if (v11)
        {
          uint64_t v56 = *(int *)(*(void *)(v0 + 88) + 76);
          *(_DWORD *)(v0 + 136) = v56;
          uint64_t v57 = *(void *)(v55 + v56);
          unint64_t v58 = *(void *)(v55 + v56 + 8);
          switch(v58 >> 62)
          {
            case 1uLL:
              LODWORD(v59) = HIDWORD(v57) - v57;
              if (__OFSUB__(HIDWORD(v57), v57)) {
                goto LABEL_125;
              }
              uint64_t v59 = (int)v59;
LABEL_96:
              if (v59 < v11)
              {
LABEL_97:
                uint64_t v72 = sub_100003918(&qword_10020EB88);
                uint64_t v73 = sub_100016710(&qword_10020EB90, &qword_10020EB88);
                uint64_t v74 = (void *)swift_task_alloc();
                *(void *)(v0 + 112) = v74;
                *uint64_t v74 = v0;
                v74[1] = sub_100172EB0;
                uint64_t v63 = v0 + 32;
                uint64_t v64 = v72;
                uint64_t v65 = v73;
                goto LABEL_98;
              }
              sub_100007B14(v57, v58);
              sub_1001771D4(v11, v57, v58, v79);
              unint64_t v67 = v79[1];
              uint64_t v66 = v79[0];
              sub_100177370(v11);
              uint64_t v55 = *(void *)(v0 + 72);
              break;
            case 2uLL:
              uint64_t v71 = *(void *)(v57 + 16);
              uint64_t v70 = *(void *)(v57 + 24);
              BOOL v24 = __OFSUB__(v70, v71);
              uint64_t v59 = v70 - v71;
              if (!v24) {
                goto LABEL_96;
              }
              goto LABEL_126;
            case 3uLL:
              goto LABEL_97;
            default:
              uint64_t v59 = BYTE6(v58);
              goto LABEL_96;
          }
        }
        else
        {
          uint64_t v66 = 0;
          unint64_t v67 = 0xC000000000000000;
        }
        uint64_t v75 = v55 + *(int *)(v0 + 128);
        *(void *)uint64_t v75 = 0;
        *(unsigned char *)(v75 + 8) = 2;
        uint64_t v68 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse(0);
        *(void *)(v0 + 16) = v66;
        *(void *)(v0 + 24) = v67;
        memset(v79, 0, 40);
        sub_10000D9E0(v66, v67);
        sub_1001BFE90();
        sub_10018C778(&qword_10020A0A0, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse);
        sub_1001C0020();
        sub_100007918(v66, v67);
        if (v9) {
          goto LABEL_103;
        }
        uint64_t v69 = 0;
      }
      (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(*(void *)(v0 + 64), v69, 1, v68);
      swift_task_dealloc();
      v76 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_106;
    }
    uint64_t v15 = *(void *)(v0 + 72);
    uint64_t v16 = *(int *)(*(void *)(v0 + 88) + 76);
    *(_DWORD *)(v0 + 132) = v16;
    uint64_t v17 = (uint64_t *)(v15 + v16);
    uint64_t v18 = *(void *)(v15 + v16);
    unint64_t v19 = *(void *)(v15 + v16 + 8);
    unint64_t v20 = v19 >> 62;
    switch(v19 >> 62)
    {
      case 1uLL:
        LODWORD(v21) = HIDWORD(v18) - v18;
        if (__OFSUB__(HIDWORD(v18), v18)) {
          goto LABEL_120;
        }
        uint64_t v21 = (int)v21;
LABEL_22:
        if (v21 >= 4)
        {
          if (v20)
          {
            if (v20 == 1)
            {
              uint64_t v25 = (int)v18;
              uint64_t v26 = v18 >> 32;
            }
            else
            {
              uint64_t v25 = *(void *)(v18 + 16);
              uint64_t v26 = *(void *)(v18 + 24);
              swift_retain();
            }
            swift_retain();
            if (v26 < v25)
            {
              __break(1u);
LABEL_110:
              __break(1u);
LABEL_111:
              __break(1u);
              __break(1u);
LABEL_112:
              __break(1u);
              __break(1u);
LABEL_113:
              __break(1u);
LABEL_114:
              __break(1u);
LABEL_115:
              __break(1u);
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              sub_1001BEE80();
              __break(1u);
LABEL_128:
              sub_1001BEE80();
              __break(1u);
              JUMPOUT(0x1001725A8);
            }
          }
          else
          {
            uint64_t v25 = 0;
            uint64_t v26 = BYTE6(v19);
          }
          if (__OFSUB__(v26, v25)) {
            goto LABEL_112;
          }
          if ((unint64_t)(v26 - v25) < 4)
          {
            if (!v20)
            {
              uint64_t v30 = sub_1001BF140();
              unint64_t v32 = v31;
              sub_10000792C(v18, v19);
              uint64_t v33 = 0;
              unint64_t v34 = BYTE6(v19);
              goto LABEL_62;
            }
            if (v20 == 1)
            {
              uint64_t v27 = v18 >> 32;
LABEL_48:
              if (v27 < (int)v18) {
                goto LABEL_110;
              }
              goto LABEL_53;
            }
            uint64_t v27 = *(void *)(v18 + 24);
            goto LABEL_50;
          }
          uint64_t v27 = v25 + 4;
          if (__OFADD__(v25, 4)) {
            goto LABEL_117;
          }
          if (v20)
          {
            if (v20 == 1)
            {
              uint64_t v28 = (int)v18;
              uint64_t v29 = v18 >> 32;
            }
            else
            {
              uint64_t v28 = *(void *)(v18 + 16);
              uint64_t v29 = *(void *)(v18 + 24);
            }
          }
          else
          {
            uint64_t v28 = 0;
            uint64_t v29 = BYTE6(v19);
          }
          if (v29 < v27 || v27 < v28) {
            goto LABEL_118;
          }
          if (v20)
          {
            if (v20 == 1) {
              goto LABEL_48;
            }
LABEL_50:
            if (v27 < *(void *)(v18 + 16)) {
              goto LABEL_110;
            }
            goto LABEL_53;
          }
          if (v27 < 0) {
            goto LABEL_110;
          }
LABEL_53:
          uint64_t v30 = sub_1001BF140();
          unint64_t v32 = v36;
          sub_10000792C(v18, v19);
          if (v20 == 2)
          {
            uint64_t v33 = *(void *)(v18 + 16);
            uint64_t v37 = *(void *)(v18 + 24);
          }
          else
          {
            if (v20 != 1)
            {
              uint64_t v33 = 0;
              unint64_t v34 = BYTE6(v19);
              goto LABEL_62;
            }
            uint64_t v33 = (int)v18;
            uint64_t v37 = v18 >> 32;
          }
          if (v37 < v33) {
            goto LABEL_111;
          }
          unint64_t v34 = v37 - v33;
          if (__OFSUB__(v37, v33)) {
            goto LABEL_113;
          }
LABEL_62:
          if (v34 < 4) {
            goto LABEL_119;
          }
          uint64_t v38 = v33 + 4;
          if (__OFADD__(v33, 4)) {
            goto LABEL_114;
          }
          if (v20)
          {
            if (v20 == 1)
            {
              uint64_t v39 = (int)v18;
              uint64_t v40 = v18 >> 32;
            }
            else
            {
              uint64_t v39 = *(void *)(v18 + 16);
              uint64_t v40 = *(void *)(v18 + 24);
            }
          }
          else
          {
            uint64_t v39 = 0;
            uint64_t v40 = BYTE6(v19);
          }
          if (v40 < v38 || v38 < v39) {
            goto LABEL_115;
          }
          uint64_t v41 = 0;
          switch((int)v20)
          {
            case 1:
              uint64_t v41 = v18 >> 32;
              break;
            case 2:
              uint64_t v41 = *(void *)(v18 + 24);
              break;
            case 3:
              break;
            default:
              uint64_t v41 = BYTE6(v19);
              break;
          }
          if (v41 < v38) {
            goto LABEL_116;
          }
          uint64_t v42 = sub_1001BF140();
          uint64_t v44 = v43;
          sub_10000792C(v18, v19);
          *uint64_t v17 = v42;
          v17[1] = v44;
          unsigned int v13 = 0;
          switch(v32 >> 62)
          {
            case 1uLL:
              if ((int)v30 > v30 >> 32) {
                goto LABEL_122;
              }
              sub_100007B14(v30, v32);
              uint64_t v46 = sub_1001BEE60();
              if (!v46) {
                goto LABEL_127;
              }
              uint64_t v47 = v46;
              uint64_t v48 = sub_1001BEE90();
              uint64_t v49 = (int)v30 - v48;
              if (__OFSUB__((int)v30, v48)) {
                goto LABEL_124;
              }
              sub_1001BEE80();
              unsigned int v13 = *(_DWORD *)(v47 + v49);
              sub_10000792C(v30, v32);
LABEL_15:
              uint64_t v14 = *(void *)(v0 + 72) + *(int *)(v0 + 128);
              sub_10000792C(v30, v32);
              char v12 = 0;
              uint64_t v11 = bswap32(v13);
              *(void *)uint64_t v14 = v11;
              *(unsigned char *)(v14 + 8) = 0;
              break;
            case 2uLL:
              uint64_t v50 = *(void *)(v30 + 16);
              swift_retain();
              swift_retain();
              uint64_t v51 = sub_1001BEE60();
              if (!v51) {
                goto LABEL_128;
              }
              uint64_t v52 = v51;
              uint64_t v53 = sub_1001BEE90();
              BOOL v24 = __OFSUB__(v50, v53);
              uint64_t v54 = v50 - v53;
              if (v24) {
                goto LABEL_123;
              }
              sub_1001BEE80();
              unsigned int v13 = *(_DWORD *)(v52 + v54);
              swift_release();
              swift_release();
              goto LABEL_15;
            case 3uLL:
              goto LABEL_15;
            default:
              __chkstk_darwin(v78, v45);
              LODWORD(v78[-2]) = v30;
              unsigned int v13 = v30;
              goto LABEL_15;
          }
          continue;
        }
LABEL_88:
        uint64_t v60 = sub_100003918(&qword_10020EB88);
        uint64_t v61 = sub_100016710(&qword_10020EB90, &qword_10020EB88);
        uint64_t v62 = (void *)swift_task_alloc();
        *(void *)(v0 + 96) = v62;
        *uint64_t v62 = v0;
        v62[1] = sub_100171B54;
        uint64_t v63 = v0 + 48;
        uint64_t v64 = v60;
        uint64_t v65 = v61;
LABEL_98:
        return dispatch thunk of AsyncIteratorProtocol.next()(v63, v64, v65);
      case 2uLL:
        uint64_t v23 = *(void *)(v18 + 16);
        uint64_t v22 = *(void *)(v18 + 24);
        BOOL v24 = __OFSUB__(v22, v23);
        uint64_t v21 = v22 - v23;
        if (!v24) {
          goto LABEL_22;
        }
        goto LABEL_121;
      case 3uLL:
        goto LABEL_88;
      default:
        uint64_t v21 = BYTE6(v19);
        goto LABEL_22;
    }
  }
}

uint64_t sub_1001725F8()
{
  uint64_t v72 = v0;
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 72) + *(int *)(v0 + 128);
  sub_10018C550(*(void *)v2, *(unsigned char *)(v2 + 8));
  *(void *)uint64_t v2 = v1;
  *(unsigned char *)(v2 + 8) = 1;
  uint64_t v3 = (uint64_t *)(*(void *)(v0 + 72) + *(int *)(v0 + 128));
  uint64_t v4 = *v3;
  char v5 = *((unsigned char *)v3 + 8);
  while (2)
  {
    if (v5 != 2)
    {
      if (v5)
      {
        if (v4)
        {
          swift_errorRetain();
          swift_willThrow();
          swift_task_dealloc();
          uint64_t v69 = *(uint64_t (**)(void))(v0 + 8);
LABEL_92:
          return v69();
        }
        uint64_t v61 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse(0);
        uint64_t v62 = 1;
      }
      else
      {
        uint64_t v48 = *(void *)(v0 + 72);
        if (v4)
        {
          uint64_t v49 = *(int *)(*(void *)(v0 + 88) + 76);
          *(_DWORD *)(v0 + 136) = v49;
          uint64_t v50 = *(void *)(v48 + v49);
          unint64_t v51 = *(void *)(v48 + v49 + 8);
          switch(v51 >> 62)
          {
            case 1uLL:
              LODWORD(v52) = HIDWORD(v50) - v50;
              if (__OFSUB__(HIDWORD(v50), v50)) {
                goto LABEL_111;
              }
              uint64_t v52 = (int)v52;
LABEL_84:
              if (v52 < v4)
              {
LABEL_85:
                uint64_t v65 = sub_100003918(&qword_10020EB88);
                uint64_t v66 = sub_100016710(&qword_10020EB90, &qword_10020EB88);
                unint64_t v67 = (void *)swift_task_alloc();
                *(void *)(v0 + 112) = v67;
                void *v67 = v0;
                v67[1] = sub_100172EB0;
                uint64_t v56 = v0 + 32;
                uint64_t v57 = v65;
                uint64_t v58 = v66;
                goto LABEL_86;
              }
              sub_100007B14(v50, v51);
              sub_1001771D4(v4, v50, v51, v71);
              unint64_t v60 = v71[1];
              uint64_t v59 = v71[0];
              sub_100177370(v4);
              uint64_t v48 = *(void *)(v0 + 72);
              break;
            case 2uLL:
              uint64_t v64 = *(void *)(v50 + 16);
              uint64_t v63 = *(void *)(v50 + 24);
              BOOL v17 = __OFSUB__(v63, v64);
              uint64_t v52 = v63 - v64;
              if (!v17) {
                goto LABEL_84;
              }
              goto LABEL_112;
            case 3uLL:
              goto LABEL_85;
            default:
              uint64_t v52 = BYTE6(v51);
              goto LABEL_84;
          }
        }
        else
        {
          uint64_t v59 = 0;
          unint64_t v60 = 0xC000000000000000;
        }
        uint64_t v68 = v48 + *(int *)(v0 + 128);
        *(void *)uint64_t v68 = 0;
        *(unsigned char *)(v68 + 8) = 2;
        uint64_t v61 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse(0);
        *(void *)(v0 + 16) = v59;
        *(void *)(v0 + 24) = v60;
        memset(v71, 0, 40);
        sub_10000D9E0(v59, v60);
        sub_1001BFE90();
        sub_10018C778(&qword_10020A0A0, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse);
        sub_1001C0020();
        sub_100007918(v59, v60);
        uint64_t v62 = 0;
      }
      (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(*(void *)(v0 + 64), v62, 1, v61);
      swift_task_dealloc();
      uint64_t v69 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_92;
    }
    uint64_t v8 = *(void *)(v0 + 72);
    uint64_t v9 = *(int *)(*(void *)(v0 + 88) + 76);
    *(_DWORD *)(v0 + 132) = v9;
    uint64_t v10 = (uint64_t *)(v8 + v9);
    uint64_t v11 = *(void *)(v8 + v9);
    unint64_t v12 = *(void *)(v8 + v9 + 8);
    unint64_t v13 = v12 >> 62;
    switch(v12 >> 62)
    {
      case 1uLL:
        LODWORD(v14) = HIDWORD(v11) - v11;
        if (__OFSUB__(HIDWORD(v11), v11)) {
          goto LABEL_106;
        }
        uint64_t v14 = (int)v14;
LABEL_10:
        if (v14 >= 4)
        {
          if (v13)
          {
            if (v13 == 1)
            {
              uint64_t v18 = (int)v11;
              uint64_t v19 = v11 >> 32;
            }
            else
            {
              uint64_t v18 = *(void *)(v11 + 16);
              uint64_t v19 = *(void *)(v11 + 24);
              swift_retain();
            }
            swift_retain();
            if (v19 < v18)
            {
              __break(1u);
LABEL_96:
              __break(1u);
LABEL_97:
              __break(1u);
              __break(1u);
LABEL_98:
              __break(1u);
              __break(1u);
LABEL_99:
              __break(1u);
LABEL_100:
              __break(1u);
LABEL_101:
              __break(1u);
LABEL_102:
              __break(1u);
LABEL_103:
              __break(1u);
LABEL_104:
              __break(1u);
LABEL_105:
              __break(1u);
LABEL_106:
              __break(1u);
LABEL_107:
              __break(1u);
LABEL_108:
              __break(1u);
LABEL_109:
              __break(1u);
LABEL_110:
              __break(1u);
LABEL_111:
              __break(1u);
LABEL_112:
              __break(1u);
LABEL_113:
              sub_1001BEE80();
              __break(1u);
LABEL_114:
              sub_1001BEE80();
              __break(1u);
              JUMPOUT(0x100172E70);
            }
          }
          else
          {
            uint64_t v18 = 0;
            uint64_t v19 = BYTE6(v12);
          }
          if (__OFSUB__(v19, v18)) {
            goto LABEL_98;
          }
          if ((unint64_t)(v19 - v18) < 4)
          {
            if (!v13)
            {
              uint64_t v23 = sub_1001BF140();
              unint64_t v25 = v24;
              sub_10000792C(v11, v12);
              uint64_t v26 = 0;
              unint64_t v27 = BYTE6(v12);
              goto LABEL_50;
            }
            if (v13 == 1)
            {
              uint64_t v20 = v11 >> 32;
LABEL_36:
              if (v20 < (int)v11) {
                goto LABEL_96;
              }
              goto LABEL_41;
            }
            uint64_t v20 = *(void *)(v11 + 24);
            goto LABEL_38;
          }
          uint64_t v20 = v18 + 4;
          if (__OFADD__(v18, 4)) {
            goto LABEL_103;
          }
          if (v13)
          {
            if (v13 == 1)
            {
              uint64_t v21 = (int)v11;
              uint64_t v22 = v11 >> 32;
            }
            else
            {
              uint64_t v21 = *(void *)(v11 + 16);
              uint64_t v22 = *(void *)(v11 + 24);
            }
          }
          else
          {
            uint64_t v21 = 0;
            uint64_t v22 = BYTE6(v12);
          }
          if (v22 < v20 || v20 < v21) {
            goto LABEL_104;
          }
          if (v13)
          {
            if (v13 == 1) {
              goto LABEL_36;
            }
LABEL_38:
            if (v20 < *(void *)(v11 + 16)) {
              goto LABEL_96;
            }
            goto LABEL_41;
          }
          if (v20 < 0) {
            goto LABEL_96;
          }
LABEL_41:
          uint64_t v23 = sub_1001BF140();
          unint64_t v25 = v29;
          sub_10000792C(v11, v12);
          if (v13 == 2)
          {
            uint64_t v26 = *(void *)(v11 + 16);
            uint64_t v30 = *(void *)(v11 + 24);
          }
          else
          {
            if (v13 != 1)
            {
              uint64_t v26 = 0;
              unint64_t v27 = BYTE6(v12);
              goto LABEL_50;
            }
            uint64_t v26 = (int)v11;
            uint64_t v30 = v11 >> 32;
          }
          if (v30 < v26) {
            goto LABEL_97;
          }
          unint64_t v27 = v30 - v26;
          if (__OFSUB__(v30, v26)) {
            goto LABEL_99;
          }
LABEL_50:
          if (v27 < 4) {
            goto LABEL_105;
          }
          uint64_t v31 = v26 + 4;
          if (__OFADD__(v26, 4)) {
            goto LABEL_100;
          }
          if (v13)
          {
            if (v13 == 1)
            {
              uint64_t v32 = (int)v11;
              uint64_t v33 = v11 >> 32;
            }
            else
            {
              uint64_t v32 = *(void *)(v11 + 16);
              uint64_t v33 = *(void *)(v11 + 24);
            }
          }
          else
          {
            uint64_t v32 = 0;
            uint64_t v33 = BYTE6(v12);
          }
          if (v33 < v31 || v31 < v32) {
            goto LABEL_101;
          }
          uint64_t v34 = 0;
          switch((int)v13)
          {
            case 1:
              uint64_t v34 = v11 >> 32;
              break;
            case 2:
              uint64_t v34 = *(void *)(v11 + 24);
              break;
            case 3:
              break;
            default:
              uint64_t v34 = BYTE6(v12);
              break;
          }
          if (v34 < v31) {
            goto LABEL_102;
          }
          uint64_t v35 = sub_1001BF140();
          uint64_t v37 = v36;
          sub_10000792C(v11, v12);
          *uint64_t v10 = v35;
          v10[1] = v37;
          unsigned int v6 = 0;
          switch(v25 >> 62)
          {
            case 1uLL:
              if ((int)v23 > v23 >> 32) {
                goto LABEL_108;
              }
              sub_100007B14(v23, v25);
              uint64_t v39 = sub_1001BEE60();
              if (!v39) {
                goto LABEL_113;
              }
              uint64_t v40 = v39;
              uint64_t v41 = sub_1001BEE90();
              uint64_t v42 = (int)v23 - v41;
              if (__OFSUB__((int)v23, v41)) {
                goto LABEL_110;
              }
              sub_1001BEE80();
              unsigned int v6 = *(_DWORD *)(v40 + v42);
              sub_10000792C(v23, v25);
LABEL_3:
              uint64_t v7 = *(void *)(v0 + 72) + *(int *)(v0 + 128);
              sub_10000792C(v23, v25);
              char v5 = 0;
              uint64_t v4 = bswap32(v6);
              *(void *)uint64_t v7 = v4;
              *(unsigned char *)(v7 + 8) = 0;
              break;
            case 2uLL:
              uint64_t v43 = *(void *)(v23 + 16);
              swift_retain();
              swift_retain();
              uint64_t v44 = sub_1001BEE60();
              if (!v44) {
                goto LABEL_114;
              }
              uint64_t v45 = v44;
              uint64_t v46 = sub_1001BEE90();
              BOOL v17 = __OFSUB__(v43, v46);
              uint64_t v47 = v43 - v46;
              if (v17) {
                goto LABEL_109;
              }
              sub_1001BEE80();
              unsigned int v6 = *(_DWORD *)(v45 + v47);
              swift_release();
              swift_release();
              goto LABEL_3;
            case 3uLL:
              goto LABEL_3;
            default:
              __chkstk_darwin(v71, v38);
              LODWORD(v71[-2]) = v23;
              unsigned int v6 = v23;
              goto LABEL_3;
          }
          continue;
        }
LABEL_76:
        uint64_t v53 = sub_100003918(&qword_10020EB88);
        uint64_t v54 = sub_100016710(&qword_10020EB90, &qword_10020EB88);
        uint64_t v55 = (void *)swift_task_alloc();
        *(void *)(v0 + 96) = v55;
        *uint64_t v55 = v0;
        v55[1] = sub_100171B54;
        uint64_t v56 = v0 + 48;
        uint64_t v57 = v53;
        uint64_t v58 = v54;
LABEL_86:
        return dispatch thunk of AsyncIteratorProtocol.next()(v56, v57, v58);
      case 2uLL:
        uint64_t v16 = *(void *)(v11 + 16);
        uint64_t v15 = *(void *)(v11 + 24);
        BOOL v17 = __OFSUB__(v15, v16);
        uint64_t v14 = v15 - v16;
        if (!v17) {
          goto LABEL_10;
        }
        goto LABEL_107;
      case 3uLL:
        goto LABEL_76;
      default:
        uint64_t v14 = BYTE6(v12);
        goto LABEL_10;
    }
  }
}

uint64_t sub_100172EB0()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100173954;
  }
  else {
    uint64_t v2 = sub_100172FC4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100172FC4()
{
  uint64_t v80 = v0;
  unint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 72);
  v78[1] = v0 + 16;
  if (v1 >> 60 == 15)
  {
    uint64_t v3 = v2 + *(int *)(v0 + 128);
    if (*(unsigned char *)(v3 + 8))
    {
      if (*(unsigned char *)(v3 + 8) == 1) {
        goto LABEL_13;
      }
      uint64_t v4 = (uint64_t *)(v2 + *(int *)(v0 + 136));
      uint64_t v6 = *v4;
      unint64_t v5 = v4[1];
      switch(v5 >> 62)
      {
        case 1uLL:
          if ((int)v6 != v6 >> 32) {
            goto LABEL_6;
          }
          break;
        case 2uLL:
          if (*(void *)(v6 + 16) != *(void *)(v6 + 24)) {
            goto LABEL_6;
          }
          break;
        case 3uLL:
          break;
        default:
          if ((v5 & 0xFF000000000000) != 0) {
            goto LABEL_6;
          }
          break;
      }
      *(void *)uint64_t v3 = 0;
    }
    else
    {
LABEL_6:
      sub_10000A870();
      uint64_t v7 = swift_allocError();
      sub_10018C550(*(void *)v3, *(unsigned char *)(v3 + 8));
      *(void *)uint64_t v3 = v7;
    }
    *(unsigned char *)(v3 + 8) = 1;
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 32);
    sub_1001BF1B0();
    sub_100007918(v8, v1);
  }
LABEL_13:
  uint64_t v9 = *(void *)(v0 + 120);
  uint64_t v10 = (uint64_t *)(*(void *)(v0 + 72) + *(int *)(v0 + 128));
  uint64_t v11 = *v10;
  char v12 = *((unsigned char *)v10 + 8);
  while (2)
  {
    if (v12 != 2)
    {
      if (v12)
      {
        if (v11)
        {
          swift_errorRetain();
          swift_willThrow();
LABEL_103:
          swift_task_dealloc();
          v76 = *(uint64_t (**)(void))(v0 + 8);
LABEL_106:
          return v76();
        }
        uint64_t v68 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse(0);
        uint64_t v69 = 1;
      }
      else
      {
        uint64_t v55 = *(void *)(v0 + 72);
        if (v11)
        {
          uint64_t v56 = *(int *)(*(void *)(v0 + 88) + 76);
          *(_DWORD *)(v0 + 136) = v56;
          uint64_t v57 = *(void *)(v55 + v56);
          unint64_t v58 = *(void *)(v55 + v56 + 8);
          switch(v58 >> 62)
          {
            case 1uLL:
              LODWORD(v59) = HIDWORD(v57) - v57;
              if (__OFSUB__(HIDWORD(v57), v57)) {
                goto LABEL_125;
              }
              uint64_t v59 = (int)v59;
LABEL_96:
              if (v59 < v11)
              {
LABEL_97:
                uint64_t v72 = sub_100003918(&qword_10020EB88);
                uint64_t v73 = sub_100016710(&qword_10020EB90, &qword_10020EB88);
                uint64_t v74 = (void *)swift_task_alloc();
                *(void *)(v0 + 112) = v74;
                *uint64_t v74 = v0;
                v74[1] = sub_100172EB0;
                uint64_t v63 = v0 + 32;
                uint64_t v64 = v72;
                uint64_t v65 = v73;
                goto LABEL_98;
              }
              sub_100007B14(v57, v58);
              sub_1001771D4(v11, v57, v58, v79);
              unint64_t v67 = v79[1];
              uint64_t v66 = v79[0];
              sub_100177370(v11);
              uint64_t v55 = *(void *)(v0 + 72);
              break;
            case 2uLL:
              uint64_t v71 = *(void *)(v57 + 16);
              uint64_t v70 = *(void *)(v57 + 24);
              BOOL v24 = __OFSUB__(v70, v71);
              uint64_t v59 = v70 - v71;
              if (!v24) {
                goto LABEL_96;
              }
              goto LABEL_126;
            case 3uLL:
              goto LABEL_97;
            default:
              uint64_t v59 = BYTE6(v58);
              goto LABEL_96;
          }
        }
        else
        {
          uint64_t v66 = 0;
          unint64_t v67 = 0xC000000000000000;
        }
        uint64_t v75 = v55 + *(int *)(v0 + 128);
        *(void *)uint64_t v75 = 0;
        *(unsigned char *)(v75 + 8) = 2;
        uint64_t v68 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse(0);
        *(void *)(v0 + 16) = v66;
        *(void *)(v0 + 24) = v67;
        memset(v79, 0, 40);
        sub_10000D9E0(v66, v67);
        sub_1001BFE90();
        sub_10018C778(&qword_10020A0A0, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse);
        sub_1001C0020();
        sub_100007918(v66, v67);
        if (v9) {
          goto LABEL_103;
        }
        uint64_t v69 = 0;
      }
      (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(*(void *)(v0 + 64), v69, 1, v68);
      swift_task_dealloc();
      v76 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_106;
    }
    uint64_t v15 = *(void *)(v0 + 72);
    uint64_t v16 = *(int *)(*(void *)(v0 + 88) + 76);
    *(_DWORD *)(v0 + 132) = v16;
    BOOL v17 = (uint64_t *)(v15 + v16);
    uint64_t v18 = *(void *)(v15 + v16);
    unint64_t v19 = *(void *)(v15 + v16 + 8);
    unint64_t v20 = v19 >> 62;
    switch(v19 >> 62)
    {
      case 1uLL:
        LODWORD(v21) = HIDWORD(v18) - v18;
        if (__OFSUB__(HIDWORD(v18), v18)) {
          goto LABEL_120;
        }
        uint64_t v21 = (int)v21;
LABEL_22:
        if (v21 >= 4)
        {
          if (v20)
          {
            if (v20 == 1)
            {
              uint64_t v25 = (int)v18;
              uint64_t v26 = v18 >> 32;
            }
            else
            {
              uint64_t v25 = *(void *)(v18 + 16);
              uint64_t v26 = *(void *)(v18 + 24);
              swift_retain();
            }
            swift_retain();
            if (v26 < v25)
            {
              __break(1u);
LABEL_110:
              __break(1u);
LABEL_111:
              __break(1u);
              __break(1u);
LABEL_112:
              __break(1u);
              __break(1u);
LABEL_113:
              __break(1u);
LABEL_114:
              __break(1u);
LABEL_115:
              __break(1u);
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              sub_1001BEE80();
              __break(1u);
LABEL_128:
              sub_1001BEE80();
              __break(1u);
              JUMPOUT(0x100173904);
            }
          }
          else
          {
            uint64_t v25 = 0;
            uint64_t v26 = BYTE6(v19);
          }
          if (__OFSUB__(v26, v25)) {
            goto LABEL_112;
          }
          if ((unint64_t)(v26 - v25) < 4)
          {
            if (!v20)
            {
              uint64_t v30 = sub_1001BF140();
              unint64_t v32 = v31;
              sub_10000792C(v18, v19);
              uint64_t v33 = 0;
              unint64_t v34 = BYTE6(v19);
              goto LABEL_62;
            }
            if (v20 == 1)
            {
              uint64_t v27 = v18 >> 32;
LABEL_48:
              if (v27 < (int)v18) {
                goto LABEL_110;
              }
              goto LABEL_53;
            }
            uint64_t v27 = *(void *)(v18 + 24);
            goto LABEL_50;
          }
          uint64_t v27 = v25 + 4;
          if (__OFADD__(v25, 4)) {
            goto LABEL_117;
          }
          if (v20)
          {
            if (v20 == 1)
            {
              uint64_t v28 = (int)v18;
              uint64_t v29 = v18 >> 32;
            }
            else
            {
              uint64_t v28 = *(void *)(v18 + 16);
              uint64_t v29 = *(void *)(v18 + 24);
            }
          }
          else
          {
            uint64_t v28 = 0;
            uint64_t v29 = BYTE6(v19);
          }
          if (v29 < v27 || v27 < v28) {
            goto LABEL_118;
          }
          if (v20)
          {
            if (v20 == 1) {
              goto LABEL_48;
            }
LABEL_50:
            if (v27 < *(void *)(v18 + 16)) {
              goto LABEL_110;
            }
            goto LABEL_53;
          }
          if (v27 < 0) {
            goto LABEL_110;
          }
LABEL_53:
          uint64_t v30 = sub_1001BF140();
          unint64_t v32 = v36;
          sub_10000792C(v18, v19);
          if (v20 == 2)
          {
            uint64_t v33 = *(void *)(v18 + 16);
            uint64_t v37 = *(void *)(v18 + 24);
          }
          else
          {
            if (v20 != 1)
            {
              uint64_t v33 = 0;
              unint64_t v34 = BYTE6(v19);
              goto LABEL_62;
            }
            uint64_t v33 = (int)v18;
            uint64_t v37 = v18 >> 32;
          }
          if (v37 < v33) {
            goto LABEL_111;
          }
          unint64_t v34 = v37 - v33;
          if (__OFSUB__(v37, v33)) {
            goto LABEL_113;
          }
LABEL_62:
          if (v34 < 4) {
            goto LABEL_119;
          }
          uint64_t v38 = v33 + 4;
          if (__OFADD__(v33, 4)) {
            goto LABEL_114;
          }
          if (v20)
          {
            if (v20 == 1)
            {
              uint64_t v39 = (int)v18;
              uint64_t v40 = v18 >> 32;
            }
            else
            {
              uint64_t v39 = *(void *)(v18 + 16);
              uint64_t v40 = *(void *)(v18 + 24);
            }
          }
          else
          {
            uint64_t v39 = 0;
            uint64_t v40 = BYTE6(v19);
          }
          if (v40 < v38 || v38 < v39) {
            goto LABEL_115;
          }
          uint64_t v41 = 0;
          switch((int)v20)
          {
            case 1:
              uint64_t v41 = v18 >> 32;
              break;
            case 2:
              uint64_t v41 = *(void *)(v18 + 24);
              break;
            case 3:
              break;
            default:
              uint64_t v41 = BYTE6(v19);
              break;
          }
          if (v41 < v38) {
            goto LABEL_116;
          }
          uint64_t v42 = sub_1001BF140();
          uint64_t v44 = v43;
          sub_10000792C(v18, v19);
          *BOOL v17 = v42;
          v17[1] = v44;
          unsigned int v13 = 0;
          switch(v32 >> 62)
          {
            case 1uLL:
              if ((int)v30 > v30 >> 32) {
                goto LABEL_122;
              }
              sub_100007B14(v30, v32);
              uint64_t v46 = sub_1001BEE60();
              if (!v46) {
                goto LABEL_127;
              }
              uint64_t v47 = v46;
              uint64_t v48 = sub_1001BEE90();
              uint64_t v49 = (int)v30 - v48;
              if (__OFSUB__((int)v30, v48)) {
                goto LABEL_124;
              }
              sub_1001BEE80();
              unsigned int v13 = *(_DWORD *)(v47 + v49);
              sub_10000792C(v30, v32);
LABEL_15:
              uint64_t v14 = *(void *)(v0 + 72) + *(int *)(v0 + 128);
              sub_10000792C(v30, v32);
              char v12 = 0;
              uint64_t v11 = bswap32(v13);
              *(void *)uint64_t v14 = v11;
              *(unsigned char *)(v14 + 8) = 0;
              break;
            case 2uLL:
              uint64_t v50 = *(void *)(v30 + 16);
              swift_retain();
              swift_retain();
              uint64_t v51 = sub_1001BEE60();
              if (!v51) {
                goto LABEL_128;
              }
              uint64_t v52 = v51;
              uint64_t v53 = sub_1001BEE90();
              BOOL v24 = __OFSUB__(v50, v53);
              uint64_t v54 = v50 - v53;
              if (v24) {
                goto LABEL_123;
              }
              sub_1001BEE80();
              unsigned int v13 = *(_DWORD *)(v52 + v54);
              swift_release();
              swift_release();
              goto LABEL_15;
            case 3uLL:
              goto LABEL_15;
            default:
              __chkstk_darwin(v78, v45);
              LODWORD(v78[-2]) = v30;
              unsigned int v13 = v30;
              goto LABEL_15;
          }
          continue;
        }
LABEL_88:
        uint64_t v60 = sub_100003918(&qword_10020EB88);
        uint64_t v61 = sub_100016710(&qword_10020EB90, &qword_10020EB88);
        uint64_t v62 = (void *)swift_task_alloc();
        *(void *)(v0 + 96) = v62;
        *uint64_t v62 = v0;
        v62[1] = sub_100171B54;
        uint64_t v63 = v0 + 48;
        uint64_t v64 = v60;
        uint64_t v65 = v61;
LABEL_98:
        return dispatch thunk of AsyncIteratorProtocol.next()(v63, v64, v65);
      case 2uLL:
        uint64_t v23 = *(void *)(v18 + 16);
        uint64_t v22 = *(void *)(v18 + 24);
        BOOL v24 = __OFSUB__(v22, v23);
        uint64_t v21 = v22 - v23;
        if (!v24) {
          goto LABEL_22;
        }
        goto LABEL_121;
      case 3uLL:
        goto LABEL_88;
      default:
        uint64_t v21 = BYTE6(v19);
        goto LABEL_22;
    }
  }
}

uint64_t sub_100173954()
{
  uint64_t v72 = v0;
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 72) + *(int *)(v0 + 128);
  sub_10018C550(*(void *)v2, *(unsigned char *)(v2 + 8));
  *(void *)uint64_t v2 = v1;
  *(unsigned char *)(v2 + 8) = 1;
  uint64_t v3 = (uint64_t *)(*(void *)(v0 + 72) + *(int *)(v0 + 128));
  uint64_t v4 = *v3;
  char v5 = *((unsigned char *)v3 + 8);
  while (2)
  {
    if (v5 != 2)
    {
      if (v5)
      {
        if (v4)
        {
          swift_errorRetain();
          swift_willThrow();
          swift_task_dealloc();
          uint64_t v69 = *(uint64_t (**)(void))(v0 + 8);
LABEL_92:
          return v69();
        }
        uint64_t v61 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse(0);
        uint64_t v62 = 1;
      }
      else
      {
        uint64_t v48 = *(void *)(v0 + 72);
        if (v4)
        {
          uint64_t v49 = *(int *)(*(void *)(v0 + 88) + 76);
          *(_DWORD *)(v0 + 136) = v49;
          uint64_t v50 = *(void *)(v48 + v49);
          unint64_t v51 = *(void *)(v48 + v49 + 8);
          switch(v51 >> 62)
          {
            case 1uLL:
              LODWORD(v52) = HIDWORD(v50) - v50;
              if (__OFSUB__(HIDWORD(v50), v50)) {
                goto LABEL_111;
              }
              uint64_t v52 = (int)v52;
LABEL_84:
              if (v52 < v4)
              {
LABEL_85:
                uint64_t v65 = sub_100003918(&qword_10020EB88);
                uint64_t v66 = sub_100016710(&qword_10020EB90, &qword_10020EB88);
                unint64_t v67 = (void *)swift_task_alloc();
                *(void *)(v0 + 112) = v67;
                void *v67 = v0;
                v67[1] = sub_100172EB0;
                uint64_t v56 = v0 + 32;
                uint64_t v57 = v65;
                uint64_t v58 = v66;
                goto LABEL_86;
              }
              sub_100007B14(v50, v51);
              sub_1001771D4(v4, v50, v51, v71);
              unint64_t v60 = v71[1];
              uint64_t v59 = v71[0];
              sub_100177370(v4);
              uint64_t v48 = *(void *)(v0 + 72);
              break;
            case 2uLL:
              uint64_t v64 = *(void *)(v50 + 16);
              uint64_t v63 = *(void *)(v50 + 24);
              BOOL v17 = __OFSUB__(v63, v64);
              uint64_t v52 = v63 - v64;
              if (!v17) {
                goto LABEL_84;
              }
              goto LABEL_112;
            case 3uLL:
              goto LABEL_85;
            default:
              uint64_t v52 = BYTE6(v51);
              goto LABEL_84;
          }
        }
        else
        {
          uint64_t v59 = 0;
          unint64_t v60 = 0xC000000000000000;
        }
        uint64_t v68 = v48 + *(int *)(v0 + 128);
        *(void *)uint64_t v68 = 0;
        *(unsigned char *)(v68 + 8) = 2;
        uint64_t v61 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse(0);
        *(void *)(v0 + 16) = v59;
        *(void *)(v0 + 24) = v60;
        memset(v71, 0, 40);
        sub_10000D9E0(v59, v60);
        sub_1001BFE90();
        sub_10018C778(&qword_10020A0A0, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse);
        sub_1001C0020();
        sub_100007918(v59, v60);
        uint64_t v62 = 0;
      }
      (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(*(void *)(v0 + 64), v62, 1, v61);
      swift_task_dealloc();
      uint64_t v69 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_92;
    }
    uint64_t v8 = *(void *)(v0 + 72);
    uint64_t v9 = *(int *)(*(void *)(v0 + 88) + 76);
    *(_DWORD *)(v0 + 132) = v9;
    uint64_t v10 = (uint64_t *)(v8 + v9);
    uint64_t v11 = *(void *)(v8 + v9);
    unint64_t v12 = *(void *)(v8 + v9 + 8);
    unint64_t v13 = v12 >> 62;
    switch(v12 >> 62)
    {
      case 1uLL:
        LODWORD(v14) = HIDWORD(v11) - v11;
        if (__OFSUB__(HIDWORD(v11), v11)) {
          goto LABEL_106;
        }
        uint64_t v14 = (int)v14;
LABEL_10:
        if (v14 >= 4)
        {
          if (v13)
          {
            if (v13 == 1)
            {
              uint64_t v18 = (int)v11;
              uint64_t v19 = v11 >> 32;
            }
            else
            {
              uint64_t v18 = *(void *)(v11 + 16);
              uint64_t v19 = *(void *)(v11 + 24);
              swift_retain();
            }
            swift_retain();
            if (v19 < v18)
            {
              __break(1u);
LABEL_96:
              __break(1u);
LABEL_97:
              __break(1u);
              __break(1u);
LABEL_98:
              __break(1u);
              __break(1u);
LABEL_99:
              __break(1u);
LABEL_100:
              __break(1u);
LABEL_101:
              __break(1u);
LABEL_102:
              __break(1u);
LABEL_103:
              __break(1u);
LABEL_104:
              __break(1u);
LABEL_105:
              __break(1u);
LABEL_106:
              __break(1u);
LABEL_107:
              __break(1u);
LABEL_108:
              __break(1u);
LABEL_109:
              __break(1u);
LABEL_110:
              __break(1u);
LABEL_111:
              __break(1u);
LABEL_112:
              __break(1u);
LABEL_113:
              sub_1001BEE80();
              __break(1u);
LABEL_114:
              sub_1001BEE80();
              __break(1u);
              JUMPOUT(0x1001741CCLL);
            }
          }
          else
          {
            uint64_t v18 = 0;
            uint64_t v19 = BYTE6(v12);
          }
          if (__OFSUB__(v19, v18)) {
            goto LABEL_98;
          }
          if ((unint64_t)(v19 - v18) < 4)
          {
            if (!v13)
            {
              uint64_t v23 = sub_1001BF140();
              unint64_t v25 = v24;
              sub_10000792C(v11, v12);
              uint64_t v26 = 0;
              unint64_t v27 = BYTE6(v12);
              goto LABEL_50;
            }
            if (v13 == 1)
            {
              uint64_t v20 = v11 >> 32;
LABEL_36:
              if (v20 < (int)v11) {
                goto LABEL_96;
              }
              goto LABEL_41;
            }
            uint64_t v20 = *(void *)(v11 + 24);
            goto LABEL_38;
          }
          uint64_t v20 = v18 + 4;
          if (__OFADD__(v18, 4)) {
            goto LABEL_103;
          }
          if (v13)
          {
            if (v13 == 1)
            {
              uint64_t v21 = (int)v11;
              uint64_t v22 = v11 >> 32;
            }
            else
            {
              uint64_t v21 = *(void *)(v11 + 16);
              uint64_t v22 = *(void *)(v11 + 24);
            }
          }
          else
          {
            uint64_t v21 = 0;
            uint64_t v22 = BYTE6(v12);
          }
          if (v22 < v20 || v20 < v21) {
            goto LABEL_104;
          }
          if (v13)
          {
            if (v13 == 1) {
              goto LABEL_36;
            }
LABEL_38:
            if (v20 < *(void *)(v11 + 16)) {
              goto LABEL_96;
            }
            goto LABEL_41;
          }
          if (v20 < 0) {
            goto LABEL_96;
          }
LABEL_41:
          uint64_t v23 = sub_1001BF140();
          unint64_t v25 = v29;
          sub_10000792C(v11, v12);
          if (v13 == 2)
          {
            uint64_t v26 = *(void *)(v11 + 16);
            uint64_t v30 = *(void *)(v11 + 24);
          }
          else
          {
            if (v13 != 1)
            {
              uint64_t v26 = 0;
              unint64_t v27 = BYTE6(v12);
              goto LABEL_50;
            }
            uint64_t v26 = (int)v11;
            uint64_t v30 = v11 >> 32;
          }
          if (v30 < v26) {
            goto LABEL_97;
          }
          unint64_t v27 = v30 - v26;
          if (__OFSUB__(v30, v26)) {
            goto LABEL_99;
          }
LABEL_50:
          if (v27 < 4) {
            goto LABEL_105;
          }
          uint64_t v31 = v26 + 4;
          if (__OFADD__(v26, 4)) {
            goto LABEL_100;
          }
          if (v13)
          {
            if (v13 == 1)
            {
              uint64_t v32 = (int)v11;
              uint64_t v33 = v11 >> 32;
            }
            else
            {
              uint64_t v32 = *(void *)(v11 + 16);
              uint64_t v33 = *(void *)(v11 + 24);
            }
          }
          else
          {
            uint64_t v32 = 0;
            uint64_t v33 = BYTE6(v12);
          }
          if (v33 < v31 || v31 < v32) {
            goto LABEL_101;
          }
          uint64_t v34 = 0;
          switch((int)v13)
          {
            case 1:
              uint64_t v34 = v11 >> 32;
              break;
            case 2:
              uint64_t v34 = *(void *)(v11 + 24);
              break;
            case 3:
              break;
            default:
              uint64_t v34 = BYTE6(v12);
              break;
          }
          if (v34 < v31) {
            goto LABEL_102;
          }
          uint64_t v35 = sub_1001BF140();
          uint64_t v37 = v36;
          sub_10000792C(v11, v12);
          *uint64_t v10 = v35;
          v10[1] = v37;
          unsigned int v6 = 0;
          switch(v25 >> 62)
          {
            case 1uLL:
              if ((int)v23 > v23 >> 32) {
                goto LABEL_108;
              }
              sub_100007B14(v23, v25);
              uint64_t v39 = sub_1001BEE60();
              if (!v39) {
                goto LABEL_113;
              }
              uint64_t v40 = v39;
              uint64_t v41 = sub_1001BEE90();
              uint64_t v42 = (int)v23 - v41;
              if (__OFSUB__((int)v23, v41)) {
                goto LABEL_110;
              }
              sub_1001BEE80();
              unsigned int v6 = *(_DWORD *)(v40 + v42);
              sub_10000792C(v23, v25);
LABEL_3:
              uint64_t v7 = *(void *)(v0 + 72) + *(int *)(v0 + 128);
              sub_10000792C(v23, v25);
              char v5 = 0;
              uint64_t v4 = bswap32(v6);
              *(void *)uint64_t v7 = v4;
              *(unsigned char *)(v7 + 8) = 0;
              break;
            case 2uLL:
              uint64_t v43 = *(void *)(v23 + 16);
              swift_retain();
              swift_retain();
              uint64_t v44 = sub_1001BEE60();
              if (!v44) {
                goto LABEL_114;
              }
              uint64_t v45 = v44;
              uint64_t v46 = sub_1001BEE90();
              BOOL v17 = __OFSUB__(v43, v46);
              uint64_t v47 = v43 - v46;
              if (v17) {
                goto LABEL_109;
              }
              sub_1001BEE80();
              unsigned int v6 = *(_DWORD *)(v45 + v47);
              swift_release();
              swift_release();
              goto LABEL_3;
            case 3uLL:
              goto LABEL_3;
            default:
              __chkstk_darwin(v71, v38);
              LODWORD(v71[-2]) = v23;
              unsigned int v6 = v23;
              goto LABEL_3;
          }
          continue;
        }
LABEL_76:
        uint64_t v53 = sub_100003918(&qword_10020EB88);
        uint64_t v54 = sub_100016710(&qword_10020EB90, &qword_10020EB88);
        uint64_t v55 = (void *)swift_task_alloc();
        *(void *)(v0 + 96) = v55;
        *uint64_t v55 = v0;
        v55[1] = sub_100171B54;
        uint64_t v56 = v0 + 48;
        uint64_t v57 = v53;
        uint64_t v58 = v54;
LABEL_86:
        return dispatch thunk of AsyncIteratorProtocol.next()(v56, v57, v58);
      case 2uLL:
        uint64_t v16 = *(void *)(v11 + 16);
        uint64_t v15 = *(void *)(v11 + 24);
        BOOL v17 = __OFSUB__(v15, v16);
        uint64_t v14 = v15 - v16;
        if (!v17) {
          goto LABEL_10;
        }
        goto LABEL_107;
      case 3uLL:
        goto LABEL_76;
      default:
        uint64_t v14 = BYTE6(v12);
        goto LABEL_10;
    }
  }
}

uint64_t sub_10017420C(uint64_t a1)
{
  v2[8] = a1;
  v2[9] = v1;
  sub_1001BFEA0();
  v2[10] = swift_task_alloc();
  return _swift_task_switch(sub_10017429C, 0, 0);
}

uint64_t sub_10017429C()
{
  uint64_t v69 = v0;
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = sub_100003918(&qword_10020E5C0);
  *(void *)(v0 + 88) = v2;
  uint64_t v3 = *(int *)(v2 + 80);
  *(_DWORD *)(v0 + 128) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  uint64_t v5 = *v4;
  char v6 = *((unsigned char *)v4 + 8);
  while (2)
  {
    if (v6 != 2)
    {
      if (v6)
      {
        if (v5)
        {
          swift_errorRetain();
          swift_willThrow();
          swift_task_dealloc();
          uint64_t v66 = *(uint64_t (**)(void))(v0 + 8);
LABEL_92:
          return v66();
        }
        uint64_t v61 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse(0);
        uint64_t v62 = 1;
      }
      else
      {
        uint64_t v49 = *(void *)(v0 + 72);
        if (v5)
        {
          uint64_t v50 = *(int *)(*(void *)(v0 + 88) + 76);
          *(_DWORD *)(v0 + 136) = v50;
          uint64_t v51 = *(void *)(v49 + v50);
          unint64_t v52 = *(void *)(v49 + v50 + 8);
          switch(v52 >> 62)
          {
            case 1uLL:
              LODWORD(v53) = HIDWORD(v51) - v51;
              if (__OFSUB__(HIDWORD(v51), v51)) {
                goto LABEL_111;
              }
              uint64_t v53 = (int)v53;
LABEL_84:
              if (v53 < v5)
              {
LABEL_85:
                uint64_t v54 = v0 + 32;
                uint64_t v55 = sub_100003918(&qword_10020EBA0);
                uint64_t v56 = sub_100016710(&qword_10020EBA8, &qword_10020EBA0);
                uint64_t v57 = (void *)swift_task_alloc();
                *(void *)(v0 + 112) = v57;
                *uint64_t v57 = v0;
                uint64_t v58 = sub_100175E78;
                goto LABEL_86;
              }
              sub_100007B14(v51, v52);
              sub_1001771D4(v5, v51, v52, v68);
              unint64_t v60 = v68[1];
              uint64_t v59 = v68[0];
              sub_100177370(v5);
              uint64_t v49 = *(void *)(v0 + 72);
              break;
            case 2uLL:
              uint64_t v64 = *(void *)(v51 + 16);
              uint64_t v63 = *(void *)(v51 + 24);
              BOOL v18 = __OFSUB__(v63, v64);
              uint64_t v53 = v63 - v64;
              if (!v18) {
                goto LABEL_84;
              }
              goto LABEL_112;
            case 3uLL:
              goto LABEL_85;
            default:
              uint64_t v53 = BYTE6(v52);
              goto LABEL_84;
          }
        }
        else
        {
          uint64_t v59 = 0;
          unint64_t v60 = 0xC000000000000000;
        }
        uint64_t v65 = v49 + *(int *)(v0 + 128);
        *(void *)uint64_t v65 = 0;
        *(unsigned char *)(v65 + 8) = 2;
        uint64_t v61 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse(0);
        *(void *)(v0 + 16) = v59;
        *(void *)(v0 + 24) = v60;
        memset(v68, 0, 40);
        sub_10000D9E0(v59, v60);
        sub_1001BFE90();
        sub_10018C778(&qword_10020A7D0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse);
        sub_1001C0020();
        sub_100007918(v59, v60);
        uint64_t v62 = 0;
      }
      (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(*(void *)(v0 + 64), v62, 1, v61);
      swift_task_dealloc();
      uint64_t v66 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_92;
    }
    uint64_t v9 = *(void *)(v0 + 72);
    uint64_t v10 = *(int *)(*(void *)(v0 + 88) + 76);
    *(_DWORD *)(v0 + 132) = v10;
    uint64_t v11 = (uint64_t *)(v9 + v10);
    uint64_t v12 = *(void *)(v9 + v10);
    unint64_t v13 = *(void *)(v9 + v10 + 8);
    unint64_t v14 = v13 >> 62;
    switch(v13 >> 62)
    {
      case 1uLL:
        LODWORD(v15) = HIDWORD(v12) - v12;
        if (__OFSUB__(HIDWORD(v12), v12)) {
          goto LABEL_106;
        }
        uint64_t v15 = (int)v15;
LABEL_10:
        if (v15 >= 4)
        {
          if (v14)
          {
            if (v14 == 1)
            {
              uint64_t v19 = (int)v12;
              uint64_t v20 = v12 >> 32;
            }
            else
            {
              uint64_t v19 = *(void *)(v12 + 16);
              uint64_t v20 = *(void *)(v12 + 24);
              swift_retain();
            }
            swift_retain();
            if (v20 < v19)
            {
              __break(1u);
LABEL_96:
              __break(1u);
LABEL_97:
              __break(1u);
              __break(1u);
LABEL_98:
              __break(1u);
              __break(1u);
LABEL_99:
              __break(1u);
LABEL_100:
              __break(1u);
LABEL_101:
              __break(1u);
LABEL_102:
              __break(1u);
LABEL_103:
              __break(1u);
LABEL_104:
              __break(1u);
LABEL_105:
              __break(1u);
LABEL_106:
              __break(1u);
LABEL_107:
              __break(1u);
LABEL_108:
              __break(1u);
LABEL_109:
              __break(1u);
LABEL_110:
              __break(1u);
LABEL_111:
              __break(1u);
LABEL_112:
              __break(1u);
LABEL_113:
              sub_1001BEE80();
              __break(1u);
LABEL_114:
              sub_1001BEE80();
              __break(1u);
              JUMPOUT(0x100174ADCLL);
            }
          }
          else
          {
            uint64_t v19 = 0;
            uint64_t v20 = BYTE6(v13);
          }
          if (__OFSUB__(v20, v19)) {
            goto LABEL_98;
          }
          if ((unint64_t)(v20 - v19) < 4)
          {
            if (!v14)
            {
              uint64_t v24 = sub_1001BF140();
              unint64_t v26 = v25;
              sub_10000792C(v12, v13);
              uint64_t v27 = 0;
              unint64_t v28 = BYTE6(v13);
              goto LABEL_50;
            }
            if (v14 == 1)
            {
              uint64_t v21 = v12 >> 32;
LABEL_36:
              if (v21 < (int)v12) {
                goto LABEL_96;
              }
              goto LABEL_41;
            }
            uint64_t v21 = *(void *)(v12 + 24);
            goto LABEL_38;
          }
          uint64_t v21 = v19 + 4;
          if (__OFADD__(v19, 4)) {
            goto LABEL_103;
          }
          if (v14)
          {
            if (v14 == 1)
            {
              uint64_t v22 = (int)v12;
              uint64_t v23 = v12 >> 32;
            }
            else
            {
              uint64_t v22 = *(void *)(v12 + 16);
              uint64_t v23 = *(void *)(v12 + 24);
            }
          }
          else
          {
            uint64_t v22 = 0;
            uint64_t v23 = BYTE6(v13);
          }
          if (v23 < v21 || v21 < v22) {
            goto LABEL_104;
          }
          if (v14)
          {
            if (v14 == 1) {
              goto LABEL_36;
            }
LABEL_38:
            if (v21 < *(void *)(v12 + 16)) {
              goto LABEL_96;
            }
            goto LABEL_41;
          }
          if (v21 < 0) {
            goto LABEL_96;
          }
LABEL_41:
          uint64_t v24 = sub_1001BF140();
          unint64_t v26 = v30;
          sub_10000792C(v12, v13);
          if (v14 == 2)
          {
            uint64_t v27 = *(void *)(v12 + 16);
            uint64_t v31 = *(void *)(v12 + 24);
          }
          else
          {
            if (v14 != 1)
            {
              uint64_t v27 = 0;
              unint64_t v28 = BYTE6(v13);
              goto LABEL_50;
            }
            uint64_t v27 = (int)v12;
            uint64_t v31 = v12 >> 32;
          }
          if (v31 < v27) {
            goto LABEL_97;
          }
          unint64_t v28 = v31 - v27;
          if (__OFSUB__(v31, v27)) {
            goto LABEL_99;
          }
LABEL_50:
          if (v28 < 4) {
            goto LABEL_105;
          }
          uint64_t v32 = v27 + 4;
          if (__OFADD__(v27, 4)) {
            goto LABEL_100;
          }
          if (v14)
          {
            if (v14 == 1)
            {
              uint64_t v33 = (int)v12;
              uint64_t v34 = v12 >> 32;
            }
            else
            {
              uint64_t v33 = *(void *)(v12 + 16);
              uint64_t v34 = *(void *)(v12 + 24);
            }
          }
          else
          {
            uint64_t v33 = 0;
            uint64_t v34 = BYTE6(v13);
          }
          if (v34 < v32 || v32 < v33) {
            goto LABEL_101;
          }
          uint64_t v35 = 0;
          switch((int)v14)
          {
            case 1:
              uint64_t v35 = v12 >> 32;
              break;
            case 2:
              uint64_t v35 = *(void *)(v12 + 24);
              break;
            case 3:
              break;
            default:
              uint64_t v35 = BYTE6(v13);
              break;
          }
          if (v35 < v32) {
            goto LABEL_102;
          }
          uint64_t v36 = sub_1001BF140();
          uint64_t v38 = v37;
          sub_10000792C(v12, v13);
          uint64_t *v11 = v36;
          v11[1] = v38;
          unsigned int v7 = 0;
          switch(v26 >> 62)
          {
            case 1uLL:
              if ((int)v24 > v24 >> 32) {
                goto LABEL_108;
              }
              sub_100007B14(v24, v26);
              uint64_t v40 = sub_1001BEE60();
              if (!v40) {
                goto LABEL_113;
              }
              uint64_t v41 = v40;
              uint64_t v42 = sub_1001BEE90();
              uint64_t v43 = (int)v24 - v42;
              if (__OFSUB__((int)v24, v42)) {
                goto LABEL_110;
              }
              sub_1001BEE80();
              unsigned int v7 = *(_DWORD *)(v41 + v43);
              sub_10000792C(v24, v26);
LABEL_3:
              uint64_t v8 = *(void *)(v0 + 72) + *(int *)(v0 + 128);
              sub_10000792C(v24, v26);
              char v6 = 0;
              uint64_t v5 = bswap32(v7);
              *(void *)uint64_t v8 = v5;
              *(unsigned char *)(v8 + 8) = 0;
              break;
            case 2uLL:
              uint64_t v44 = *(void *)(v24 + 16);
              swift_retain();
              swift_retain();
              uint64_t v45 = sub_1001BEE60();
              if (!v45) {
                goto LABEL_114;
              }
              uint64_t v46 = v45;
              uint64_t v47 = sub_1001BEE90();
              BOOL v18 = __OFSUB__(v44, v47);
              uint64_t v48 = v44 - v47;
              if (v18) {
                goto LABEL_109;
              }
              sub_1001BEE80();
              unsigned int v7 = *(_DWORD *)(v46 + v48);
              swift_release();
              swift_release();
              goto LABEL_3;
            case 3uLL:
              goto LABEL_3;
            default:
              __chkstk_darwin(v68, v39);
              LODWORD(v68[-2]) = v24;
              unsigned int v7 = v24;
              goto LABEL_3;
          }
          continue;
        }
LABEL_76:
        uint64_t v54 = v0 + 48;
        uint64_t v55 = sub_100003918(&qword_10020EBA0);
        uint64_t v56 = sub_100016710(&qword_10020EBA8, &qword_10020EBA0);
        uint64_t v57 = (void *)swift_task_alloc();
        *(void *)(v0 + 96) = v57;
        *uint64_t v57 = v0;
        uint64_t v58 = sub_100174B1C;
LABEL_86:
        v57[1] = v58;
        return dispatch thunk of AsyncIteratorProtocol.next()(v54, v55, v56);
      case 2uLL:
        uint64_t v17 = *(void *)(v12 + 16);
        uint64_t v16 = *(void *)(v12 + 24);
        BOOL v18 = __OFSUB__(v16, v17);
        uint64_t v15 = v16 - v17;
        if (!v18) {
          goto LABEL_10;
        }
        goto LABEL_107;
      case 3uLL:
        goto LABEL_76;
      default:
        uint64_t v15 = BYTE6(v13);
        goto LABEL_10;
    }
  }
}

uint64_t sub_100174B1C()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1001755C0;
  }
  else {
    uint64_t v2 = sub_100174C30;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100174C30()
{
  uint64_t v80 = v0;
  unint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 72);
  v78[1] = v0 + 16;
  if (v1 >> 60 == 15)
  {
    uint64_t v3 = v2 + *(int *)(v0 + 128);
    if (*(unsigned char *)(v3 + 8))
    {
      if (*(unsigned char *)(v3 + 8) == 1) {
        goto LABEL_13;
      }
      uint64_t v4 = (uint64_t *)(v2 + *(int *)(v0 + 132));
      uint64_t v6 = *v4;
      unint64_t v5 = v4[1];
      switch(v5 >> 62)
      {
        case 1uLL:
          if ((int)v6 != v6 >> 32) {
            goto LABEL_6;
          }
          break;
        case 2uLL:
          if (*(void *)(v6 + 16) != *(void *)(v6 + 24)) {
            goto LABEL_6;
          }
          break;
        case 3uLL:
          break;
        default:
          if ((v5 & 0xFF000000000000) != 0) {
            goto LABEL_6;
          }
          break;
      }
      *(void *)uint64_t v3 = 0;
    }
    else
    {
LABEL_6:
      sub_10000A870();
      uint64_t v7 = swift_allocError();
      sub_10018C550(*(void *)v3, *(unsigned char *)(v3 + 8));
      *(void *)uint64_t v3 = v7;
    }
    *(unsigned char *)(v3 + 8) = 1;
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 48);
    sub_1001BF1B0();
    sub_100007918(v8, v1);
  }
LABEL_13:
  uint64_t v9 = *(void *)(v0 + 104);
  uint64_t v10 = (uint64_t *)(*(void *)(v0 + 72) + *(int *)(v0 + 128));
  uint64_t v11 = *v10;
  char v12 = *((unsigned char *)v10 + 8);
  while (2)
  {
    if (v12 != 2)
    {
      if (v12)
      {
        if (v11)
        {
          swift_errorRetain();
          swift_willThrow();
LABEL_103:
          swift_task_dealloc();
          v76 = *(uint64_t (**)(void))(v0 + 8);
LABEL_106:
          return v76();
        }
        uint64_t v68 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse(0);
        uint64_t v69 = 1;
      }
      else
      {
        uint64_t v55 = *(void *)(v0 + 72);
        if (v11)
        {
          uint64_t v56 = *(int *)(*(void *)(v0 + 88) + 76);
          *(_DWORD *)(v0 + 136) = v56;
          uint64_t v57 = *(void *)(v55 + v56);
          unint64_t v58 = *(void *)(v55 + v56 + 8);
          switch(v58 >> 62)
          {
            case 1uLL:
              LODWORD(v59) = HIDWORD(v57) - v57;
              if (__OFSUB__(HIDWORD(v57), v57)) {
                goto LABEL_125;
              }
              uint64_t v59 = (int)v59;
LABEL_96:
              if (v59 < v11)
              {
LABEL_97:
                uint64_t v72 = sub_100003918(&qword_10020EBA0);
                uint64_t v73 = sub_100016710(&qword_10020EBA8, &qword_10020EBA0);
                uint64_t v74 = (void *)swift_task_alloc();
                *(void *)(v0 + 112) = v74;
                *uint64_t v74 = v0;
                v74[1] = sub_100175E78;
                uint64_t v63 = v0 + 32;
                uint64_t v64 = v72;
                uint64_t v65 = v73;
                goto LABEL_98;
              }
              sub_100007B14(v57, v58);
              sub_1001771D4(v11, v57, v58, v79);
              unint64_t v67 = v79[1];
              uint64_t v66 = v79[0];
              sub_100177370(v11);
              uint64_t v55 = *(void *)(v0 + 72);
              break;
            case 2uLL:
              uint64_t v71 = *(void *)(v57 + 16);
              uint64_t v70 = *(void *)(v57 + 24);
              BOOL v24 = __OFSUB__(v70, v71);
              uint64_t v59 = v70 - v71;
              if (!v24) {
                goto LABEL_96;
              }
              goto LABEL_126;
            case 3uLL:
              goto LABEL_97;
            default:
              uint64_t v59 = BYTE6(v58);
              goto LABEL_96;
          }
        }
        else
        {
          uint64_t v66 = 0;
          unint64_t v67 = 0xC000000000000000;
        }
        uint64_t v75 = v55 + *(int *)(v0 + 128);
        *(void *)uint64_t v75 = 0;
        *(unsigned char *)(v75 + 8) = 2;
        uint64_t v68 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse(0);
        *(void *)(v0 + 16) = v66;
        *(void *)(v0 + 24) = v67;
        memset(v79, 0, 40);
        sub_10000D9E0(v66, v67);
        sub_1001BFE90();
        sub_10018C778(&qword_10020A7D0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse);
        sub_1001C0020();
        sub_100007918(v66, v67);
        if (v9) {
          goto LABEL_103;
        }
        uint64_t v69 = 0;
      }
      (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(*(void *)(v0 + 64), v69, 1, v68);
      swift_task_dealloc();
      v76 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_106;
    }
    uint64_t v15 = *(void *)(v0 + 72);
    uint64_t v16 = *(int *)(*(void *)(v0 + 88) + 76);
    *(_DWORD *)(v0 + 132) = v16;
    uint64_t v17 = (uint64_t *)(v15 + v16);
    uint64_t v18 = *(void *)(v15 + v16);
    unint64_t v19 = *(void *)(v15 + v16 + 8);
    unint64_t v20 = v19 >> 62;
    switch(v19 >> 62)
    {
      case 1uLL:
        LODWORD(v21) = HIDWORD(v18) - v18;
        if (__OFSUB__(HIDWORD(v18), v18)) {
          goto LABEL_120;
        }
        uint64_t v21 = (int)v21;
LABEL_22:
        if (v21 >= 4)
        {
          if (v20)
          {
            if (v20 == 1)
            {
              uint64_t v25 = (int)v18;
              uint64_t v26 = v18 >> 32;
            }
            else
            {
              uint64_t v25 = *(void *)(v18 + 16);
              uint64_t v26 = *(void *)(v18 + 24);
              swift_retain();
            }
            swift_retain();
            if (v26 < v25)
            {
              __break(1u);
LABEL_110:
              __break(1u);
LABEL_111:
              __break(1u);
              __break(1u);
LABEL_112:
              __break(1u);
              __break(1u);
LABEL_113:
              __break(1u);
LABEL_114:
              __break(1u);
LABEL_115:
              __break(1u);
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              sub_1001BEE80();
              __break(1u);
LABEL_128:
              sub_1001BEE80();
              __break(1u);
              JUMPOUT(0x100175570);
            }
          }
          else
          {
            uint64_t v25 = 0;
            uint64_t v26 = BYTE6(v19);
          }
          if (__OFSUB__(v26, v25)) {
            goto LABEL_112;
          }
          if ((unint64_t)(v26 - v25) < 4)
          {
            if (!v20)
            {
              uint64_t v30 = sub_1001BF140();
              unint64_t v32 = v31;
              sub_10000792C(v18, v19);
              uint64_t v33 = 0;
              unint64_t v34 = BYTE6(v19);
              goto LABEL_62;
            }
            if (v20 == 1)
            {
              uint64_t v27 = v18 >> 32;
LABEL_48:
              if (v27 < (int)v18) {
                goto LABEL_110;
              }
              goto LABEL_53;
            }
            uint64_t v27 = *(void *)(v18 + 24);
            goto LABEL_50;
          }
          uint64_t v27 = v25 + 4;
          if (__OFADD__(v25, 4)) {
            goto LABEL_117;
          }
          if (v20)
          {
            if (v20 == 1)
            {
              uint64_t v28 = (int)v18;
              uint64_t v29 = v18 >> 32;
            }
            else
            {
              uint64_t v28 = *(void *)(v18 + 16);
              uint64_t v29 = *(void *)(v18 + 24);
            }
          }
          else
          {
            uint64_t v28 = 0;
            uint64_t v29 = BYTE6(v19);
          }
          if (v29 < v27 || v27 < v28) {
            goto LABEL_118;
          }
          if (v20)
          {
            if (v20 == 1) {
              goto LABEL_48;
            }
LABEL_50:
            if (v27 < *(void *)(v18 + 16)) {
              goto LABEL_110;
            }
            goto LABEL_53;
          }
          if (v27 < 0) {
            goto LABEL_110;
          }
LABEL_53:
          uint64_t v30 = sub_1001BF140();
          unint64_t v32 = v36;
          sub_10000792C(v18, v19);
          if (v20 == 2)
          {
            uint64_t v33 = *(void *)(v18 + 16);
            uint64_t v37 = *(void *)(v18 + 24);
          }
          else
          {
            if (v20 != 1)
            {
              uint64_t v33 = 0;
              unint64_t v34 = BYTE6(v19);
              goto LABEL_62;
            }
            uint64_t v33 = (int)v18;
            uint64_t v37 = v18 >> 32;
          }
          if (v37 < v33) {
            goto LABEL_111;
          }
          unint64_t v34 = v37 - v33;
          if (__OFSUB__(v37, v33)) {
            goto LABEL_113;
          }
LABEL_62:
          if (v34 < 4) {
            goto LABEL_119;
          }
          uint64_t v38 = v33 + 4;
          if (__OFADD__(v33, 4)) {
            goto LABEL_114;
          }
          if (v20)
          {
            if (v20 == 1)
            {
              uint64_t v39 = (int)v18;
              uint64_t v40 = v18 >> 32;
            }
            else
            {
              uint64_t v39 = *(void *)(v18 + 16);
              uint64_t v40 = *(void *)(v18 + 24);
            }
          }
          else
          {
            uint64_t v39 = 0;
            uint64_t v40 = BYTE6(v19);
          }
          if (v40 < v38 || v38 < v39) {
            goto LABEL_115;
          }
          uint64_t v41 = 0;
          switch((int)v20)
          {
            case 1:
              uint64_t v41 = v18 >> 32;
              break;
            case 2:
              uint64_t v41 = *(void *)(v18 + 24);
              break;
            case 3:
              break;
            default:
              uint64_t v41 = BYTE6(v19);
              break;
          }
          if (v41 < v38) {
            goto LABEL_116;
          }
          uint64_t v42 = sub_1001BF140();
          uint64_t v44 = v43;
          sub_10000792C(v18, v19);
          *uint64_t v17 = v42;
          v17[1] = v44;
          unsigned int v13 = 0;
          switch(v32 >> 62)
          {
            case 1uLL:
              if ((int)v30 > v30 >> 32) {
                goto LABEL_122;
              }
              sub_100007B14(v30, v32);
              uint64_t v46 = sub_1001BEE60();
              if (!v46) {
                goto LABEL_127;
              }
              uint64_t v47 = v46;
              uint64_t v48 = sub_1001BEE90();
              uint64_t v49 = (int)v30 - v48;
              if (__OFSUB__((int)v30, v48)) {
                goto LABEL_124;
              }
              sub_1001BEE80();
              unsigned int v13 = *(_DWORD *)(v47 + v49);
              sub_10000792C(v30, v32);
LABEL_15:
              uint64_t v14 = *(void *)(v0 + 72) + *(int *)(v0 + 128);
              sub_10000792C(v30, v32);
              char v12 = 0;
              uint64_t v11 = bswap32(v13);
              *(void *)uint64_t v14 = v11;
              *(unsigned char *)(v14 + 8) = 0;
              break;
            case 2uLL:
              uint64_t v50 = *(void *)(v30 + 16);
              swift_retain();
              swift_retain();
              uint64_t v51 = sub_1001BEE60();
              if (!v51) {
                goto LABEL_128;
              }
              uint64_t v52 = v51;
              uint64_t v53 = sub_1001BEE90();
              BOOL v24 = __OFSUB__(v50, v53);
              uint64_t v54 = v50 - v53;
              if (v24) {
                goto LABEL_123;
              }
              sub_1001BEE80();
              unsigned int v13 = *(_DWORD *)(v52 + v54);
              swift_release();
              swift_release();
              goto LABEL_15;
            case 3uLL:
              goto LABEL_15;
            default:
              __chkstk_darwin(v78, v45);
              LODWORD(v78[-2]) = v30;
              unsigned int v13 = v30;
              goto LABEL_15;
          }
          continue;
        }
LABEL_88:
        uint64_t v60 = sub_100003918(&qword_10020EBA0);
        uint64_t v61 = sub_100016710(&qword_10020EBA8, &qword_10020EBA0);
        uint64_t v62 = (void *)swift_task_alloc();
        *(void *)(v0 + 96) = v62;
        *uint64_t v62 = v0;
        v62[1] = sub_100174B1C;
        uint64_t v63 = v0 + 48;
        uint64_t v64 = v60;
        uint64_t v65 = v61;
LABEL_98:
        return dispatch thunk of AsyncIteratorProtocol.next()(v63, v64, v65);
      case 2uLL:
        uint64_t v23 = *(void *)(v18 + 16);
        uint64_t v22 = *(void *)(v18 + 24);
        BOOL v24 = __OFSUB__(v22, v23);
        uint64_t v21 = v22 - v23;
        if (!v24) {
          goto LABEL_22;
        }
        goto LABEL_121;
      case 3uLL:
        goto LABEL_88;
      default:
        uint64_t v21 = BYTE6(v19);
        goto LABEL_22;
    }
  }
}

uint64_t sub_1001755C0()
{
  uint64_t v72 = v0;
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 72) + *(int *)(v0 + 128);
  sub_10018C550(*(void *)v2, *(unsigned char *)(v2 + 8));
  *(void *)uint64_t v2 = v1;
  *(unsigned char *)(v2 + 8) = 1;
  uint64_t v3 = (uint64_t *)(*(void *)(v0 + 72) + *(int *)(v0 + 128));
  uint64_t v4 = *v3;
  char v5 = *((unsigned char *)v3 + 8);
  while (2)
  {
    if (v5 != 2)
    {
      if (v5)
      {
        if (v4)
        {
          swift_errorRetain();
          swift_willThrow();
          swift_task_dealloc();
          uint64_t v69 = *(uint64_t (**)(void))(v0 + 8);
LABEL_92:
          return v69();
        }
        uint64_t v61 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse(0);
        uint64_t v62 = 1;
      }
      else
      {
        uint64_t v48 = *(void *)(v0 + 72);
        if (v4)
        {
          uint64_t v49 = *(int *)(*(void *)(v0 + 88) + 76);
          *(_DWORD *)(v0 + 136) = v49;
          uint64_t v50 = *(void *)(v48 + v49);
          unint64_t v51 = *(void *)(v48 + v49 + 8);
          switch(v51 >> 62)
          {
            case 1uLL:
              LODWORD(v52) = HIDWORD(v50) - v50;
              if (__OFSUB__(HIDWORD(v50), v50)) {
                goto LABEL_111;
              }
              uint64_t v52 = (int)v52;
LABEL_84:
              if (v52 < v4)
              {
LABEL_85:
                uint64_t v65 = sub_100003918(&qword_10020EBA0);
                uint64_t v66 = sub_100016710(&qword_10020EBA8, &qword_10020EBA0);
                unint64_t v67 = (void *)swift_task_alloc();
                *(void *)(v0 + 112) = v67;
                void *v67 = v0;
                v67[1] = sub_100175E78;
                uint64_t v56 = v0 + 32;
                uint64_t v57 = v65;
                uint64_t v58 = v66;
                goto LABEL_86;
              }
              sub_100007B14(v50, v51);
              sub_1001771D4(v4, v50, v51, v71);
              unint64_t v60 = v71[1];
              uint64_t v59 = v71[0];
              sub_100177370(v4);
              uint64_t v48 = *(void *)(v0 + 72);
              break;
            case 2uLL:
              uint64_t v64 = *(void *)(v50 + 16);
              uint64_t v63 = *(void *)(v50 + 24);
              BOOL v17 = __OFSUB__(v63, v64);
              uint64_t v52 = v63 - v64;
              if (!v17) {
                goto LABEL_84;
              }
              goto LABEL_112;
            case 3uLL:
              goto LABEL_85;
            default:
              uint64_t v52 = BYTE6(v51);
              goto LABEL_84;
          }
        }
        else
        {
          uint64_t v59 = 0;
          unint64_t v60 = 0xC000000000000000;
        }
        uint64_t v68 = v48 + *(int *)(v0 + 128);
        *(void *)uint64_t v68 = 0;
        *(unsigned char *)(v68 + 8) = 2;
        uint64_t v61 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse(0);
        *(void *)(v0 + 16) = v59;
        *(void *)(v0 + 24) = v60;
        memset(v71, 0, 40);
        sub_10000D9E0(v59, v60);
        sub_1001BFE90();
        sub_10018C778(&qword_10020A7D0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse);
        sub_1001C0020();
        sub_100007918(v59, v60);
        uint64_t v62 = 0;
      }
      (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(*(void *)(v0 + 64), v62, 1, v61);
      swift_task_dealloc();
      uint64_t v69 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_92;
    }
    uint64_t v8 = *(void *)(v0 + 72);
    uint64_t v9 = *(int *)(*(void *)(v0 + 88) + 76);
    *(_DWORD *)(v0 + 132) = v9;
    uint64_t v10 = (uint64_t *)(v8 + v9);
    uint64_t v11 = *(void *)(v8 + v9);
    unint64_t v12 = *(void *)(v8 + v9 + 8);
    unint64_t v13 = v12 >> 62;
    switch(v12 >> 62)
    {
      case 1uLL:
        LODWORD(v14) = HIDWORD(v11) - v11;
        if (__OFSUB__(HIDWORD(v11), v11)) {
          goto LABEL_106;
        }
        uint64_t v14 = (int)v14;
LABEL_10:
        if (v14 >= 4)
        {
          if (v13)
          {
            if (v13 == 1)
            {
              uint64_t v18 = (int)v11;
              uint64_t v19 = v11 >> 32;
            }
            else
            {
              uint64_t v18 = *(void *)(v11 + 16);
              uint64_t v19 = *(void *)(v11 + 24);
              swift_retain();
            }
            swift_retain();
            if (v19 < v18)
            {
              __break(1u);
LABEL_96:
              __break(1u);
LABEL_97:
              __break(1u);
              __break(1u);
LABEL_98:
              __break(1u);
              __break(1u);
LABEL_99:
              __break(1u);
LABEL_100:
              __break(1u);
LABEL_101:
              __break(1u);
LABEL_102:
              __break(1u);
LABEL_103:
              __break(1u);
LABEL_104:
              __break(1u);
LABEL_105:
              __break(1u);
LABEL_106:
              __break(1u);
LABEL_107:
              __break(1u);
LABEL_108:
              __break(1u);
LABEL_109:
              __break(1u);
LABEL_110:
              __break(1u);
LABEL_111:
              __break(1u);
LABEL_112:
              __break(1u);
LABEL_113:
              sub_1001BEE80();
              __break(1u);
LABEL_114:
              sub_1001BEE80();
              __break(1u);
              JUMPOUT(0x100175E38);
            }
          }
          else
          {
            uint64_t v18 = 0;
            uint64_t v19 = BYTE6(v12);
          }
          if (__OFSUB__(v19, v18)) {
            goto LABEL_98;
          }
          if ((unint64_t)(v19 - v18) < 4)
          {
            if (!v13)
            {
              uint64_t v23 = sub_1001BF140();
              unint64_t v25 = v24;
              sub_10000792C(v11, v12);
              uint64_t v26 = 0;
              unint64_t v27 = BYTE6(v12);
              goto LABEL_50;
            }
            if (v13 == 1)
            {
              uint64_t v20 = v11 >> 32;
LABEL_36:
              if (v20 < (int)v11) {
                goto LABEL_96;
              }
              goto LABEL_41;
            }
            uint64_t v20 = *(void *)(v11 + 24);
            goto LABEL_38;
          }
          uint64_t v20 = v18 + 4;
          if (__OFADD__(v18, 4)) {
            goto LABEL_103;
          }
          if (v13)
          {
            if (v13 == 1)
            {
              uint64_t v21 = (int)v11;
              uint64_t v22 = v11 >> 32;
            }
            else
            {
              uint64_t v21 = *(void *)(v11 + 16);
              uint64_t v22 = *(void *)(v11 + 24);
            }
          }
          else
          {
            uint64_t v21 = 0;
            uint64_t v22 = BYTE6(v12);
          }
          if (v22 < v20 || v20 < v21) {
            goto LABEL_104;
          }
          if (v13)
          {
            if (v13 == 1) {
              goto LABEL_36;
            }
LABEL_38:
            if (v20 < *(void *)(v11 + 16)) {
              goto LABEL_96;
            }
            goto LABEL_41;
          }
          if (v20 < 0) {
            goto LABEL_96;
          }
LABEL_41:
          uint64_t v23 = sub_1001BF140();
          unint64_t v25 = v29;
          sub_10000792C(v11, v12);
          if (v13 == 2)
          {
            uint64_t v26 = *(void *)(v11 + 16);
            uint64_t v30 = *(void *)(v11 + 24);
          }
          else
          {
            if (v13 != 1)
            {
              uint64_t v26 = 0;
              unint64_t v27 = BYTE6(v12);
              goto LABEL_50;
            }
            uint64_t v26 = (int)v11;
            uint64_t v30 = v11 >> 32;
          }
          if (v30 < v26) {
            goto LABEL_97;
          }
          unint64_t v27 = v30 - v26;
          if (__OFSUB__(v30, v26)) {
            goto LABEL_99;
          }
LABEL_50:
          if (v27 < 4) {
            goto LABEL_105;
          }
          uint64_t v31 = v26 + 4;
          if (__OFADD__(v26, 4)) {
            goto LABEL_100;
          }
          if (v13)
          {
            if (v13 == 1)
            {
              uint64_t v32 = (int)v11;
              uint64_t v33 = v11 >> 32;
            }
            else
            {
              uint64_t v32 = *(void *)(v11 + 16);
              uint64_t v33 = *(void *)(v11 + 24);
            }
          }
          else
          {
            uint64_t v32 = 0;
            uint64_t v33 = BYTE6(v12);
          }
          if (v33 < v31 || v31 < v32) {
            goto LABEL_101;
          }
          uint64_t v34 = 0;
          switch((int)v13)
          {
            case 1:
              uint64_t v34 = v11 >> 32;
              break;
            case 2:
              uint64_t v34 = *(void *)(v11 + 24);
              break;
            case 3:
              break;
            default:
              uint64_t v34 = BYTE6(v12);
              break;
          }
          if (v34 < v31) {
            goto LABEL_102;
          }
          uint64_t v35 = sub_1001BF140();
          uint64_t v37 = v36;
          sub_10000792C(v11, v12);
          *uint64_t v10 = v35;
          v10[1] = v37;
          unsigned int v6 = 0;
          switch(v25 >> 62)
          {
            case 1uLL:
              if ((int)v23 > v23 >> 32) {
                goto LABEL_108;
              }
              sub_100007B14(v23, v25);
              uint64_t v39 = sub_1001BEE60();
              if (!v39) {
                goto LABEL_113;
              }
              uint64_t v40 = v39;
              uint64_t v41 = sub_1001BEE90();
              uint64_t v42 = (int)v23 - v41;
              if (__OFSUB__((int)v23, v41)) {
                goto LABEL_110;
              }
              sub_1001BEE80();
              unsigned int v6 = *(_DWORD *)(v40 + v42);
              sub_10000792C(v23, v25);
LABEL_3:
              uint64_t v7 = *(void *)(v0 + 72) + *(int *)(v0 + 128);
              sub_10000792C(v23, v25);
              char v5 = 0;
              uint64_t v4 = bswap32(v6);
              *(void *)uint64_t v7 = v4;
              *(unsigned char *)(v7 + 8) = 0;
              break;
            case 2uLL:
              uint64_t v43 = *(void *)(v23 + 16);
              swift_retain();
              swift_retain();
              uint64_t v44 = sub_1001BEE60();
              if (!v44) {
                goto LABEL_114;
              }
              uint64_t v45 = v44;
              uint64_t v46 = sub_1001BEE90();
              BOOL v17 = __OFSUB__(v43, v46);
              uint64_t v47 = v43 - v46;
              if (v17) {
                goto LABEL_109;
              }
              sub_1001BEE80();
              unsigned int v6 = *(_DWORD *)(v45 + v47);
              swift_release();
              swift_release();
              goto LABEL_3;
            case 3uLL:
              goto LABEL_3;
            default:
              __chkstk_darwin(v71, v38);
              LODWORD(v71[-2]) = v23;
              unsigned int v6 = v23;
              goto LABEL_3;
          }
          continue;
        }
LABEL_76:
        uint64_t v53 = sub_100003918(&qword_10020EBA0);
        uint64_t v54 = sub_100016710(&qword_10020EBA8, &qword_10020EBA0);
        uint64_t v55 = (void *)swift_task_alloc();
        *(void *)(v0 + 96) = v55;
        *uint64_t v55 = v0;
        v55[1] = sub_100174B1C;
        uint64_t v56 = v0 + 48;
        uint64_t v57 = v53;
        uint64_t v58 = v54;
LABEL_86:
        return dispatch thunk of AsyncIteratorProtocol.next()(v56, v57, v58);
      case 2uLL:
        uint64_t v16 = *(void *)(v11 + 16);
        uint64_t v15 = *(void *)(v11 + 24);
        BOOL v17 = __OFSUB__(v15, v16);
        uint64_t v14 = v15 - v16;
        if (!v17) {
          goto LABEL_10;
        }
        goto LABEL_107;
      case 3uLL:
        goto LABEL_76;
      default:
        uint64_t v14 = BYTE6(v12);
        goto LABEL_10;
    }
  }
}

uint64_t sub_100175E78()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10017691C;
  }
  else {
    uint64_t v2 = sub_100175F8C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100175F8C()
{
  uint64_t v80 = v0;
  unint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 72);
  v78[1] = v0 + 16;
  if (v1 >> 60 == 15)
  {
    uint64_t v3 = v2 + *(int *)(v0 + 128);
    if (*(unsigned char *)(v3 + 8))
    {
      if (*(unsigned char *)(v3 + 8) == 1) {
        goto LABEL_13;
      }
      uint64_t v4 = (uint64_t *)(v2 + *(int *)(v0 + 136));
      uint64_t v6 = *v4;
      unint64_t v5 = v4[1];
      switch(v5 >> 62)
      {
        case 1uLL:
          if ((int)v6 != v6 >> 32) {
            goto LABEL_6;
          }
          break;
        case 2uLL:
          if (*(void *)(v6 + 16) != *(void *)(v6 + 24)) {
            goto LABEL_6;
          }
          break;
        case 3uLL:
          break;
        default:
          if ((v5 & 0xFF000000000000) != 0) {
            goto LABEL_6;
          }
          break;
      }
      *(void *)uint64_t v3 = 0;
    }
    else
    {
LABEL_6:
      sub_10000A870();
      uint64_t v7 = swift_allocError();
      sub_10018C550(*(void *)v3, *(unsigned char *)(v3 + 8));
      *(void *)uint64_t v3 = v7;
    }
    *(unsigned char *)(v3 + 8) = 1;
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 32);
    sub_1001BF1B0();
    sub_100007918(v8, v1);
  }
LABEL_13:
  uint64_t v9 = *(void *)(v0 + 120);
  uint64_t v10 = (uint64_t *)(*(void *)(v0 + 72) + *(int *)(v0 + 128));
  uint64_t v11 = *v10;
  char v12 = *((unsigned char *)v10 + 8);
  while (2)
  {
    if (v12 != 2)
    {
      if (v12)
      {
        if (v11)
        {
          swift_errorRetain();
          swift_willThrow();
LABEL_103:
          swift_task_dealloc();
          v76 = *(uint64_t (**)(void))(v0 + 8);
LABEL_106:
          return v76();
        }
        uint64_t v68 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse(0);
        uint64_t v69 = 1;
      }
      else
      {
        uint64_t v55 = *(void *)(v0 + 72);
        if (v11)
        {
          uint64_t v56 = *(int *)(*(void *)(v0 + 88) + 76);
          *(_DWORD *)(v0 + 136) = v56;
          uint64_t v57 = *(void *)(v55 + v56);
          unint64_t v58 = *(void *)(v55 + v56 + 8);
          switch(v58 >> 62)
          {
            case 1uLL:
              LODWORD(v59) = HIDWORD(v57) - v57;
              if (__OFSUB__(HIDWORD(v57), v57)) {
                goto LABEL_125;
              }
              uint64_t v59 = (int)v59;
LABEL_96:
              if (v59 < v11)
              {
LABEL_97:
                uint64_t v72 = sub_100003918(&qword_10020EBA0);
                uint64_t v73 = sub_100016710(&qword_10020EBA8, &qword_10020EBA0);
                uint64_t v74 = (void *)swift_task_alloc();
                *(void *)(v0 + 112) = v74;
                *uint64_t v74 = v0;
                v74[1] = sub_100175E78;
                uint64_t v63 = v0 + 32;
                uint64_t v64 = v72;
                uint64_t v65 = v73;
                goto LABEL_98;
              }
              sub_100007B14(v57, v58);
              sub_1001771D4(v11, v57, v58, v79);
              unint64_t v67 = v79[1];
              uint64_t v66 = v79[0];
              sub_100177370(v11);
              uint64_t v55 = *(void *)(v0 + 72);
              break;
            case 2uLL:
              uint64_t v71 = *(void *)(v57 + 16);
              uint64_t v70 = *(void *)(v57 + 24);
              BOOL v24 = __OFSUB__(v70, v71);
              uint64_t v59 = v70 - v71;
              if (!v24) {
                goto LABEL_96;
              }
              goto LABEL_126;
            case 3uLL:
              goto LABEL_97;
            default:
              uint64_t v59 = BYTE6(v58);
              goto LABEL_96;
          }
        }
        else
        {
          uint64_t v66 = 0;
          unint64_t v67 = 0xC000000000000000;
        }
        uint64_t v75 = v55 + *(int *)(v0 + 128);
        *(void *)uint64_t v75 = 0;
        *(unsigned char *)(v75 + 8) = 2;
        uint64_t v68 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse(0);
        *(void *)(v0 + 16) = v66;
        *(void *)(v0 + 24) = v67;
        memset(v79, 0, 40);
        sub_10000D9E0(v66, v67);
        sub_1001BFE90();
        sub_10018C778(&qword_10020A7D0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse);
        sub_1001C0020();
        sub_100007918(v66, v67);
        if (v9) {
          goto LABEL_103;
        }
        uint64_t v69 = 0;
      }
      (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(*(void *)(v0 + 64), v69, 1, v68);
      swift_task_dealloc();
      v76 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_106;
    }
    uint64_t v15 = *(void *)(v0 + 72);
    uint64_t v16 = *(int *)(*(void *)(v0 + 88) + 76);
    *(_DWORD *)(v0 + 132) = v16;
    BOOL v17 = (uint64_t *)(v15 + v16);
    uint64_t v18 = *(void *)(v15 + v16);
    unint64_t v19 = *(void *)(v15 + v16 + 8);
    unint64_t v20 = v19 >> 62;
    switch(v19 >> 62)
    {
      case 1uLL:
        LODWORD(v21) = HIDWORD(v18) - v18;
        if (__OFSUB__(HIDWORD(v18), v18)) {
          goto LABEL_120;
        }
        uint64_t v21 = (int)v21;
LABEL_22:
        if (v21 >= 4)
        {
          if (v20)
          {
            if (v20 == 1)
            {
              uint64_t v25 = (int)v18;
              uint64_t v26 = v18 >> 32;
            }
            else
            {
              uint64_t v25 = *(void *)(v18 + 16);
              uint64_t v26 = *(void *)(v18 + 24);
              swift_retain();
            }
            swift_retain();
            if (v26 < v25)
            {
              __break(1u);
LABEL_110:
              __break(1u);
LABEL_111:
              __break(1u);
              __break(1u);
LABEL_112:
              __break(1u);
              __break(1u);
LABEL_113:
              __break(1u);
LABEL_114:
              __break(1u);
LABEL_115:
              __break(1u);
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              sub_1001BEE80();
              __break(1u);
LABEL_128:
              sub_1001BEE80();
              __break(1u);
              JUMPOUT(0x1001768CCLL);
            }
          }
          else
          {
            uint64_t v25 = 0;
            uint64_t v26 = BYTE6(v19);
          }
          if (__OFSUB__(v26, v25)) {
            goto LABEL_112;
          }
          if ((unint64_t)(v26 - v25) < 4)
          {
            if (!v20)
            {
              uint64_t v30 = sub_1001BF140();
              unint64_t v32 = v31;
              sub_10000792C(v18, v19);
              uint64_t v33 = 0;
              unint64_t v34 = BYTE6(v19);
              goto LABEL_62;
            }
            if (v20 == 1)
            {
              uint64_t v27 = v18 >> 32;
LABEL_48:
              if (v27 < (int)v18) {
                goto LABEL_110;
              }
              goto LABEL_53;
            }
            uint64_t v27 = *(void *)(v18 + 24);
            goto LABEL_50;
          }
          uint64_t v27 = v25 + 4;
          if (__OFADD__(v25, 4)) {
            goto LABEL_117;
          }
          if (v20)
          {
            if (v20 == 1)
            {
              uint64_t v28 = (int)v18;
              uint64_t v29 = v18 >> 32;
            }
            else
            {
              uint64_t v28 = *(void *)(v18 + 16);
              uint64_t v29 = *(void *)(v18 + 24);
            }
          }
          else
          {
            uint64_t v28 = 0;
            uint64_t v29 = BYTE6(v19);
          }
          if (v29 < v27 || v27 < v28) {
            goto LABEL_118;
          }
          if (v20)
          {
            if (v20 == 1) {
              goto LABEL_48;
            }
LABEL_50:
            if (v27 < *(void *)(v18 + 16)) {
              goto LABEL_110;
            }
            goto LABEL_53;
          }
          if (v27 < 0) {
            goto LABEL_110;
          }
LABEL_53:
          uint64_t v30 = sub_1001BF140();
          unint64_t v32 = v36;
          sub_10000792C(v18, v19);
          if (v20 == 2)
          {
            uint64_t v33 = *(void *)(v18 + 16);
            uint64_t v37 = *(void *)(v18 + 24);
          }
          else
          {
            if (v20 != 1)
            {
              uint64_t v33 = 0;
              unint64_t v34 = BYTE6(v19);
              goto LABEL_62;
            }
            uint64_t v33 = (int)v18;
            uint64_t v37 = v18 >> 32;
          }
          if (v37 < v33) {
            goto LABEL_111;
          }
          unint64_t v34 = v37 - v33;
          if (__OFSUB__(v37, v33)) {
            goto LABEL_113;
          }
LABEL_62:
          if (v34 < 4) {
            goto LABEL_119;
          }
          uint64_t v38 = v33 + 4;
          if (__OFADD__(v33, 4)) {
            goto LABEL_114;
          }
          if (v20)
          {
            if (v20 == 1)
            {
              uint64_t v39 = (int)v18;
              uint64_t v40 = v18 >> 32;
            }
            else
            {
              uint64_t v39 = *(void *)(v18 + 16);
              uint64_t v40 = *(void *)(v18 + 24);
            }
          }
          else
          {
            uint64_t v39 = 0;
            uint64_t v40 = BYTE6(v19);
          }
          if (v40 < v38 || v38 < v39) {
            goto LABEL_115;
          }
          uint64_t v41 = 0;
          switch((int)v20)
          {
            case 1:
              uint64_t v41 = v18 >> 32;
              break;
            case 2:
              uint64_t v41 = *(void *)(v18 + 24);
              break;
            case 3:
              break;
            default:
              uint64_t v41 = BYTE6(v19);
              break;
          }
          if (v41 < v38) {
            goto LABEL_116;
          }
          uint64_t v42 = sub_1001BF140();
          uint64_t v44 = v43;
          sub_10000792C(v18, v19);
          *BOOL v17 = v42;
          v17[1] = v44;
          unsigned int v13 = 0;
          switch(v32 >> 62)
          {
            case 1uLL:
              if ((int)v30 > v30 >> 32) {
                goto LABEL_122;
              }
              sub_100007B14(v30, v32);
              uint64_t v46 = sub_1001BEE60();
              if (!v46) {
                goto LABEL_127;
              }
              uint64_t v47 = v46;
              uint64_t v48 = sub_1001BEE90();
              uint64_t v49 = (int)v30 - v48;
              if (__OFSUB__((int)v30, v48)) {
                goto LABEL_124;
              }
              sub_1001BEE80();
              unsigned int v13 = *(_DWORD *)(v47 + v49);
              sub_10000792C(v30, v32);
LABEL_15:
              uint64_t v14 = *(void *)(v0 + 72) + *(int *)(v0 + 128);
              sub_10000792C(v30, v32);
              char v12 = 0;
              uint64_t v11 = bswap32(v13);
              *(void *)uint64_t v14 = v11;
              *(unsigned char *)(v14 + 8) = 0;
              break;
            case 2uLL:
              uint64_t v50 = *(void *)(v30 + 16);
              swift_retain();
              swift_retain();
              uint64_t v51 = sub_1001BEE60();
              if (!v51) {
                goto LABEL_128;
              }
              uint64_t v52 = v51;
              uint64_t v53 = sub_1001BEE90();
              BOOL v24 = __OFSUB__(v50, v53);
              uint64_t v54 = v50 - v53;
              if (v24) {
                goto LABEL_123;
              }
              sub_1001BEE80();
              unsigned int v13 = *(_DWORD *)(v52 + v54);
              swift_release();
              swift_release();
              goto LABEL_15;
            case 3uLL:
              goto LABEL_15;
            default:
              __chkstk_darwin(v78, v45);
              LODWORD(v78[-2]) = v30;
              unsigned int v13 = v30;
              goto LABEL_15;
          }
          continue;
        }
LABEL_88:
        uint64_t v60 = sub_100003918(&qword_10020EBA0);
        uint64_t v61 = sub_100016710(&qword_10020EBA8, &qword_10020EBA0);
        uint64_t v62 = (void *)swift_task_alloc();
        *(void *)(v0 + 96) = v62;
        *uint64_t v62 = v0;
        v62[1] = sub_100174B1C;
        uint64_t v63 = v0 + 48;
        uint64_t v64 = v60;
        uint64_t v65 = v61;
LABEL_98:
        return dispatch thunk of AsyncIteratorProtocol.next()(v63, v64, v65);
      case 2uLL:
        uint64_t v23 = *(void *)(v18 + 16);
        uint64_t v22 = *(void *)(v18 + 24);
        BOOL v24 = __OFSUB__(v22, v23);
        uint64_t v21 = v22 - v23;
        if (!v24) {
          goto LABEL_22;
        }
        goto LABEL_121;
      case 3uLL:
        goto LABEL_88;
      default:
        uint64_t v21 = BYTE6(v19);
        goto LABEL_22;
    }
  }
}

uint64_t sub_10017691C()
{
  uint64_t v72 = v0;
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 72) + *(int *)(v0 + 128);
  sub_10018C550(*(void *)v2, *(unsigned char *)(v2 + 8));
  *(void *)uint64_t v2 = v1;
  *(unsigned char *)(v2 + 8) = 1;
  uint64_t v3 = (uint64_t *)(*(void *)(v0 + 72) + *(int *)(v0 + 128));
  uint64_t v4 = *v3;
  char v5 = *((unsigned char *)v3 + 8);
  while (2)
  {
    if (v5 != 2)
    {
      if (v5)
      {
        if (v4)
        {
          swift_errorRetain();
          swift_willThrow();
          swift_task_dealloc();
          uint64_t v69 = *(uint64_t (**)(void))(v0 + 8);
LABEL_92:
          return v69();
        }
        uint64_t v61 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse(0);
        uint64_t v62 = 1;
      }
      else
      {
        uint64_t v48 = *(void *)(v0 + 72);
        if (v4)
        {
          uint64_t v49 = *(int *)(*(void *)(v0 + 88) + 76);
          *(_DWORD *)(v0 + 136) = v49;
          uint64_t v50 = *(void *)(v48 + v49);
          unint64_t v51 = *(void *)(v48 + v49 + 8);
          switch(v51 >> 62)
          {
            case 1uLL:
              LODWORD(v52) = HIDWORD(v50) - v50;
              if (__OFSUB__(HIDWORD(v50), v50)) {
                goto LABEL_111;
              }
              uint64_t v52 = (int)v52;
LABEL_84:
              if (v52 < v4)
              {
LABEL_85:
                uint64_t v65 = sub_100003918(&qword_10020EBA0);
                uint64_t v66 = sub_100016710(&qword_10020EBA8, &qword_10020EBA0);
                unint64_t v67 = (void *)swift_task_alloc();
                *(void *)(v0 + 112) = v67;
                void *v67 = v0;
                v67[1] = sub_100175E78;
                uint64_t v56 = v0 + 32;
                uint64_t v57 = v65;
                uint64_t v58 = v66;
                goto LABEL_86;
              }
              sub_100007B14(v50, v51);
              sub_1001771D4(v4, v50, v51, v71);
              unint64_t v60 = v71[1];
              uint64_t v59 = v71[0];
              sub_100177370(v4);
              uint64_t v48 = *(void *)(v0 + 72);
              break;
            case 2uLL:
              uint64_t v64 = *(void *)(v50 + 16);
              uint64_t v63 = *(void *)(v50 + 24);
              BOOL v17 = __OFSUB__(v63, v64);
              uint64_t v52 = v63 - v64;
              if (!v17) {
                goto LABEL_84;
              }
              goto LABEL_112;
            case 3uLL:
              goto LABEL_85;
            default:
              uint64_t v52 = BYTE6(v51);
              goto LABEL_84;
          }
        }
        else
        {
          uint64_t v59 = 0;
          unint64_t v60 = 0xC000000000000000;
        }
        uint64_t v68 = v48 + *(int *)(v0 + 128);
        *(void *)uint64_t v68 = 0;
        *(unsigned char *)(v68 + 8) = 2;
        uint64_t v61 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse(0);
        *(void *)(v0 + 16) = v59;
        *(void *)(v0 + 24) = v60;
        memset(v71, 0, 40);
        sub_10000D9E0(v59, v60);
        sub_1001BFE90();
        sub_10018C778(&qword_10020A7D0, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeResponse);
        sub_1001C0020();
        sub_100007918(v59, v60);
        uint64_t v62 = 0;
      }
      (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(*(void *)(v0 + 64), v62, 1, v61);
      swift_task_dealloc();
      uint64_t v69 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_92;
    }
    uint64_t v8 = *(void *)(v0 + 72);
    uint64_t v9 = *(int *)(*(void *)(v0 + 88) + 76);
    *(_DWORD *)(v0 + 132) = v9;
    uint64_t v10 = (uint64_t *)(v8 + v9);
    uint64_t v11 = *(void *)(v8 + v9);
    unint64_t v12 = *(void *)(v8 + v9 + 8);
    unint64_t v13 = v12 >> 62;
    switch(v12 >> 62)
    {
      case 1uLL:
        LODWORD(v14) = HIDWORD(v11) - v11;
        if (__OFSUB__(HIDWORD(v11), v11)) {
          goto LABEL_106;
        }
        uint64_t v14 = (int)v14;
LABEL_10:
        if (v14 >= 4)
        {
          if (v13)
          {
            if (v13 == 1)
            {
              uint64_t v18 = (int)v11;
              uint64_t v19 = v11 >> 32;
            }
            else
            {
              uint64_t v18 = *(void *)(v11 + 16);
              uint64_t v19 = *(void *)(v11 + 24);
              swift_retain();
            }
            swift_retain();
            if (v19 < v18)
            {
              __break(1u);
LABEL_96:
              __break(1u);
LABEL_97:
              __break(1u);
              __break(1u);
LABEL_98:
              __break(1u);
              __break(1u);
LABEL_99:
              __break(1u);
LABEL_100:
              __break(1u);
LABEL_101:
              __break(1u);
LABEL_102:
              __break(1u);
LABEL_103:
              __break(1u);
LABEL_104:
              __break(1u);
LABEL_105:
              __break(1u);
LABEL_106:
              __break(1u);
LABEL_107:
              __break(1u);
LABEL_108:
              __break(1u);
LABEL_109:
              __break(1u);
LABEL_110:
              __break(1u);
LABEL_111:
              __break(1u);
LABEL_112:
              __break(1u);
LABEL_113:
              sub_1001BEE80();
              __break(1u);
LABEL_114:
              sub_1001BEE80();
              __break(1u);
              JUMPOUT(0x100177194);
            }
          }
          else
          {
            uint64_t v18 = 0;
            uint64_t v19 = BYTE6(v12);
          }
          if (__OFSUB__(v19, v18)) {
            goto LABEL_98;
          }
          if ((unint64_t)(v19 - v18) < 4)
          {
            if (!v13)
            {
              uint64_t v23 = sub_1001BF140();
              unint64_t v25 = v24;
              sub_10000792C(v11, v12);
              uint64_t v26 = 0;
              unint64_t v27 = BYTE6(v12);
              goto LABEL_50;
            }
            if (v13 == 1)
            {
              uint64_t v20 = v11 >> 32;
LABEL_36:
              if (v20 < (int)v11) {
                goto LABEL_96;
              }
              goto LABEL_41;
            }
            uint64_t v20 = *(void *)(v11 + 24);
            goto LABEL_38;
          }
          uint64_t v20 = v18 + 4;
          if (__OFADD__(v18, 4)) {
            goto LABEL_103;
          }
          if (v13)
          {
            if (v13 == 1)
            {
              uint64_t v21 = (int)v11;
              uint64_t v22 = v11 >> 32;
            }
            else
            {
              uint64_t v21 = *(void *)(v11 + 16);
              uint64_t v22 = *(void *)(v11 + 24);
            }
          }
          else
          {
            uint64_t v21 = 0;
            uint64_t v22 = BYTE6(v12);
          }
          if (v22 < v20 || v20 < v21) {
            goto LABEL_104;
          }
          if (v13)
          {
            if (v13 == 1) {
              goto LABEL_36;
            }
LABEL_38:
            if (v20 < *(void *)(v11 + 16)) {
              goto LABEL_96;
            }
            goto LABEL_41;
          }
          if (v20 < 0) {
            goto LABEL_96;
          }
LABEL_41:
          uint64_t v23 = sub_1001BF140();
          unint64_t v25 = v29;
          sub_10000792C(v11, v12);
          if (v13 == 2)
          {
            uint64_t v26 = *(void *)(v11 + 16);
            uint64_t v30 = *(void *)(v11 + 24);
          }
          else
          {
            if (v13 != 1)
            {
              uint64_t v26 = 0;
              unint64_t v27 = BYTE6(v12);
              goto LABEL_50;
            }
            uint64_t v26 = (int)v11;
            uint64_t v30 = v11 >> 32;
          }
          if (v30 < v26) {
            goto LABEL_97;
          }
          unint64_t v27 = v30 - v26;
          if (__OFSUB__(v30, v26)) {
            goto LABEL_99;
          }
LABEL_50:
          if (v27 < 4) {
            goto LABEL_105;
          }
          uint64_t v31 = v26 + 4;
          if (__OFADD__(v26, 4)) {
            goto LABEL_100;
          }
          if (v13)
          {
            if (v13 == 1)
            {
              uint64_t v32 = (int)v11;
              uint64_t v33 = v11 >> 32;
            }
            else
            {
              uint64_t v32 = *(void *)(v11 + 16);
              uint64_t v33 = *(void *)(v11 + 24);
            }
          }
          else
          {
            uint64_t v32 = 0;
            uint64_t v33 = BYTE6(v12);
          }
          if (v33 < v31 || v31 < v32) {
            goto LABEL_101;
          }
          uint64_t v34 = 0;
          switch((int)v13)
          {
            case 1:
              uint64_t v34 = v11 >> 32;
              break;
            case 2:
              uint64_t v34 = *(void *)(v11 + 24);
              break;
            case 3:
              break;
            default:
              uint64_t v34 = BYTE6(v12);
              break;
          }
          if (v34 < v31) {
            goto LABEL_102;
          }
          uint64_t v35 = sub_1001BF140();
          uint64_t v37 = v36;
          sub_10000792C(v11, v12);
          *uint64_t v10 = v35;
          v10[1] = v37;
          unsigned int v6 = 0;
          switch(v25 >> 62)
          {
            case 1uLL:
              if ((int)v23 > v23 >> 32) {
                goto LABEL_108;
              }
              sub_100007B14(v23, v25);
              uint64_t v39 = sub_1001BEE60();
              if (!v39) {
                goto LABEL_113;
              }
              uint64_t v40 = v39;
              uint64_t v41 = sub_1001BEE90();
              uint64_t v42 = (int)v23 - v41;
              if (__OFSUB__((int)v23, v41)) {
                goto LABEL_110;
              }
              sub_1001BEE80();
              unsigned int v6 = *(_DWORD *)(v40 + v42);
              sub_10000792C(v23, v25);
LABEL_3:
              uint64_t v7 = *(void *)(v0 + 72) + *(int *)(v0 + 128);
              sub_10000792C(v23, v25);
              char v5 = 0;
              uint64_t v4 = bswap32(v6);
              *(void *)uint64_t v7 = v4;
              *(unsigned char *)(v7 + 8) = 0;
              break;
            case 2uLL:
              uint64_t v43 = *(void *)(v23 + 16);
              swift_retain();
              swift_retain();
              uint64_t v44 = sub_1001BEE60();
              if (!v44) {
                goto LABEL_114;
              }
              uint64_t v45 = v44;
              uint64_t v46 = sub_1001BEE90();
              BOOL v17 = __OFSUB__(v43, v46);
              uint64_t v47 = v43 - v46;
              if (v17) {
                goto LABEL_109;
              }
              sub_1001BEE80();
              unsigned int v6 = *(_DWORD *)(v45 + v47);
              swift_release();
              swift_release();
              goto LABEL_3;
            case 3uLL:
              goto LABEL_3;
            default:
              __chkstk_darwin(v71, v38);
              LODWORD(v71[-2]) = v23;
              unsigned int v6 = v23;
              goto LABEL_3;
          }
          continue;
        }
LABEL_76:
        uint64_t v53 = sub_100003918(&qword_10020EBA0);
        uint64_t v54 = sub_100016710(&qword_10020EBA8, &qword_10020EBA0);
        uint64_t v55 = (void *)swift_task_alloc();
        *(void *)(v0 + 96) = v55;
        *uint64_t v55 = v0;
        v55[1] = sub_100174B1C;
        uint64_t v56 = v0 + 48;
        uint64_t v57 = v53;
        uint64_t v58 = v54;
LABEL_86:
        return dispatch thunk of AsyncIteratorProtocol.next()(v56, v57, v58);
      case 2uLL:
        uint64_t v16 = *(void *)(v11 + 16);
        uint64_t v15 = *(void *)(v11 + 24);
        BOOL v17 = __OFSUB__(v15, v16);
        uint64_t v14 = v15 - v16;
        if (!v17) {
          goto LABEL_10;
        }
        goto LABEL_107;
      case 3uLL:
        goto LABEL_76;
      default:
        uint64_t v14 = BYTE6(v12);
        goto LABEL_10;
    }
  }
}

uint64_t sub_1001771D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = a3 >> 62;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v10 = (int)a2;
      uint64_t v9 = a2 >> 32;
      break;
    case 2uLL:
      uint64_t v10 = *(void *)(a2 + 16);
      uint64_t v9 = *(void *)(a2 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v10 = 0;
      uint64_t v9 = BYTE6(a3);
      break;
  }
  uint64_t v11 = sub_10018AFF0(v10, v9, a2, a3);
  if (a1 && (v11 & 0x8000000000000000) == 0 && v11 < a1)
  {
    switch((int)v5)
    {
      case 1:
        uint64_t v12 = a2 >> 32;
        goto LABEL_12;
      case 2:
        uint64_t v12 = *(void *)(a2 + 24);
        goto LABEL_14;
      default:
        goto LABEL_16;
    }
  }
  uint64_t v12 = sub_10018AF74(v10, a1, a2, a3);
  uint64_t v13 = 0;
  switch((int)v5)
  {
    case 1:
LABEL_12:
      uint64_t v13 = (int)a2;
      break;
    case 2:
LABEL_14:
      uint64_t v13 = *(void *)(a2 + 16);
      break;
    default:
      break;
  }
  if (v12 < v13)
  {
LABEL_18:
    __break(1u);
    JUMPOUT(0x100177340);
  }
LABEL_16:
  uint64_t v14 = sub_1001BF140();
  uint64_t v16 = v15;
  uint64_t result = sub_10000792C(a2, a3);
  *a4 = v14;
  a4[1] = v16;
  return result;
}

uint64_t sub_100177370(uint64_t result)
{
  if (result)
  {
    uint64_t v2 = result;
    if (result < 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v3 = *(void *)v1;
      unint64_t v4 = *(void *)(v1 + 8);
      uint64_t v5 = 0;
      uint64_t v6 = 0;
      switch(v4 >> 62)
      {
        case 1uLL:
          uint64_t v6 = (int)v3;
          uint64_t v5 = v3 >> 32;
          break;
        case 2uLL:
          uint64_t v6 = *(void *)(v3 + 16);
          uint64_t v5 = *(void *)(v3 + 24);
          break;
        case 3uLL:
          break;
        default:
          uint64_t v6 = 0;
          uint64_t v5 = BYTE6(v4);
          break;
      }
      uint64_t v7 = sub_10018AFF0(v6, v5, *(void *)v1, *(void *)(v1 + 8));
      if ((v7 & 0x8000000000000000) == 0 && v7 < v2)
      {
LABEL_18:
        __break(1u);
        JUMPOUT(0x10017749CLL);
      }
      uint64_t v8 = sub_10018AF74(v6, v2, v3, v4);
      uint64_t v9 = 0;
      switch(v4 >> 62)
      {
        case 1uLL:
          uint64_t v9 = v3 >> 32;
          break;
        case 2uLL:
          uint64_t v9 = *(void *)(v3 + 24);
          break;
        case 3uLL:
          break;
        default:
          uint64_t v9 = BYTE6(v4);
          break;
      }
      if (v9 >= v8)
      {
        uint64_t v10 = sub_1001BF140();
        uint64_t v12 = v11;
        uint64_t result = sub_10000792C(v3, v4);
        *(void *)uint64_t v1 = v10;
        *(void *)(v1 + 8) = v12;
        return result;
      }
    }
    __break(1u);
    goto LABEL_18;
  }
  return result;
}

uint64_t sub_1001774BC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v9 + 96) = v14;
  *(void *)(v9 + 104) = v8;
  *(void *)(v9 + 80) = a8;
  *(void *)(v9 + 88) = v13;
  *(void *)(v9 + 64) = a5;
  *(void *)(v9 + 72) = a7;
  *(unsigned char *)(v9 + 185) = a6;
  *(unsigned char *)(v9 + 184) = a4;
  *(void *)(v9 + 48) = a2;
  *(void *)(v9 + 56) = a3;
  *(void *)(v9 + 40) = a1;
  uint64_t v10 = sub_1001BF950();
  *(void *)(v9 + 112) = v10;
  *(void *)(v9 + 120) = *(void *)(v10 - 8);
  *(void *)(v9 + 128) = swift_task_alloc();
  sub_1001BEDD0();
  *(void *)(v9 + 136) = swift_task_alloc();
  return _swift_task_switch(sub_1001775C8, 0, 0);
}

uint64_t sub_1001775C8()
{
  uint64_t v1 = *(void *)(v0 + 104);
  sub_1001BEE10();
  swift_allocObject();
  uint64_t v2 = sub_1001BEE00();
  *(void *)(v0 + 144) = v2;
  sub_1001BEDB0();
  sub_1001BEDE0();
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_attestationStore);
  *(void *)(v0 + 152) = v3;
  if (v3)
  {
    uint64_t v4 = *(void *)(v0 + 128);
    uint64_t v5 = *(void *)(v0 + 104);
    uint64_t v19 = *(void *)(v0 + 96);
    uint64_t v18 = *(void *)(v0 + 88);
    long long v17 = *(_OWORD *)(v0 + 72);
    char v16 = *(unsigned char *)(v0 + 185);
    char v6 = *(unsigned char *)(v0 + 184);
    uint64_t v7 = *(void *)(v0 + 64);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001BF920();
    uint64_t v8 = swift_task_alloc();
    *(void *)(v0 + 160) = v8;
    *(void *)(v8 + 16) = v3;
    *(void *)(v8 + 24) = v5;
    *(void *)(v8 + 32) = v4;
    *(unsigned char *)(v8 + 40) = v6;
    *(void *)(v8 + 48) = v7;
    *(unsigned char *)(v8 + 56) = v16 & 1;
    *(_OWORD *)(v8 + 64) = v17;
    *(void *)(v8 + 80) = v18;
    *(void *)(v8 + 88) = v19;
    *(void *)(v8 + 96) = v2;
    uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t, void *, uint64_t))((char *)&dword_10020D958 + dword_10020D958);
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v9;
    void *v9 = v0;
    v9[1] = sub_100177898;
    uint64_t v10 = *(void *)(v0 + 128);
    return v20(v0 + 16, v10, &unk_10020EA80, v8);
  }
  else
  {
    uint64_t v12 = sub_1001C0330();
    uint64_t v13 = sub_1001C1200();
    if (os_log_type_enabled(v12, (os_log_type_t)v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, (os_log_type_t)v13, "store unavailable", v14, 2u);
      swift_slowDealloc();
    }
    swift_release();

    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = *(uint64_t (**)(void, unint64_t))(v0 + 8);
    return v15(0, 0xF000000000000000);
  }
}

uint64_t sub_100177898()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100177A74;
  }
  else {
    uint64_t v2 = sub_1001779C8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001779C8()
{
  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[14];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v5 = v0[2];
  uint64_t v4 = v0[3];
  swift_task_dealloc();
  swift_task_dealloc();
  char v6 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v6(v5, v4);
}

uint64_t sub_100177A74()
{
  (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C1200();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[4] = v5;
    sub_1001C1310();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "failed prefetch attestations: %@", v3, 0xCu);
    sub_100003918(&qword_100207DA8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();
    swift_release();
    swift_errorRelease();
  }
  else
  {
    swift_release();
    swift_release();
    swift_errorRelease();

    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  char v6 = (uint64_t (*)(void, unint64_t))v0[1];
  return v6(0, 0xF000000000000000);
}

uint64_t sub_100177C94()
{
  v1[62] = v0;
  uint64_t v2 = sub_1001BFDC0();
  v1[63] = v2;
  v1[64] = *(void *)(v2 - 8);
  v1[65] = swift_task_alloc();
  v1[66] = swift_task_alloc();
  v1[67] = swift_task_alloc();
  uint64_t v3 = sub_1001BF8D0();
  v1[68] = v3;
  v1[69] = *(void *)(v3 - 8);
  v1[70] = swift_task_alloc();
  uint64_t v4 = sub_1001BF310();
  v1[71] = v4;
  v1[72] = *(void *)(v4 - 8);
  v1[73] = swift_task_alloc();
  v1[74] = swift_task_alloc();
  v1[75] = swift_task_alloc();
  v1[76] = swift_task_alloc();
  uint64_t v5 = sub_100003918(&qword_10020C5E0);
  v1[77] = v5;
  v1[78] = *(void *)(v5 - 8);
  v1[79] = swift_task_alloc();
  v1[80] = swift_task_alloc();
  uint64_t v6 = sub_1001C0820();
  v1[81] = v6;
  v1[82] = *(void *)(v6 - 8);
  v1[83] = swift_task_alloc();
  v1[84] = swift_task_alloc();
  uint64_t v7 = sub_1001C03B0();
  v1[85] = v7;
  v1[86] = *(void *)(v7 - 8);
  v1[87] = swift_task_alloc();
  uint64_t v8 = sub_1001BF2C0();
  v1[88] = v8;
  v1[89] = *(void *)(v8 - 8);
  v1[90] = swift_task_alloc();
  v1[91] = swift_task_alloc();
  v1[92] = swift_task_alloc();
  v1[93] = swift_task_alloc();
  uint64_t v9 = sub_100003918(&qword_10020C350);
  v1[94] = v9;
  v1[95] = *(void *)(v9 - 8);
  v1[96] = swift_task_alloc();
  uint64_t v10 = sub_100003918(&qword_10020BFB8);
  v1[97] = v10;
  v1[98] = *(void *)(v10 - 8);
  v1[99] = swift_task_alloc();
  sub_1001C0C30();
  v1[100] = swift_task_alloc();
  sub_100003918(&qword_100208C60);
  v1[101] = swift_task_alloc();
  uint64_t v11 = sub_1001BF950();
  v1[102] = v11;
  v1[103] = *(void *)(v11 - 8);
  v1[104] = swift_task_alloc();
  return _swift_task_switch(sub_100178184, 0, 0);
}

uint64_t sub_100178184()
{
  uint64_t v254 = v0;
  uint64_t v1 = *(void *)(v0 + 496);
  *(void *)(v0 + 840) = *(void *)(*(void *)v1 + 280);
  *(void *)(v0 + 848) = sub_10018C778(qword_100207DC0, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v252 = sub_1001C1780();
  unint64_t v253 = v2;
  v259._uint64_t countAndFlagsBits = 58;
  v259._object = (void *)0xE100000000000000;
  sub_1001C0D00(v259);
  uint64_t v3 = v252;
  unint64_t v4 = v253;
  *(void *)(v0 + 856) = v252;
  *(void *)(v0 + 864) = v4;
  uint64_t v5 = qword_10020F458;
  *(void *)(v0 + 872) = qword_10020F458;
  uint64_t v6 = v1 + v5;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  HIDWORD(log) = HIDWORD(v6);
  uint64_t v7 = sub_1001C0330();
  os_log_type_t v8 = sub_1001C1200();
  type = (void *)(v0 + 496);
  uint64_t v249 = v3;
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = *(void *)(v0 + 496);
    uint64_t v10 = swift_slowAlloc();
    uint64_t v252 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 488) = sub_1000DF238(v3, v4, &v252);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v10 + 12) = 1024;
    int v11 = *(unsigned __int8 *)(v9 + *(void *)(*(void *)v9 + 248));
    swift_release();
    *(_DWORD *)(v0 + 1048) = v11;
    sub_1001C1310();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "%s executing batch of prefetch requests, prewarm=%{BOOL}d", (uint8_t *)v10, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();

    swift_bridgeObjectRelease_n();
  }
  uint64_t v12 = *(void *)(v0 + 824);
  uint64_t v13 = *(void *)(v0 + 816);
  uint64_t v14 = *(void *)(v0 + 808);
  sub_1000238F4(v14);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v14, 1, v13) == 1)
  {
    sub_100010360(*(void *)(v0 + 808), &qword_100208C60);
    swift_bridgeObjectRetain_n();
    uint64_t v15 = sub_1001C0330();
    os_log_type_t v16 = sub_1001C11F0();
    if (os_log_type_enabled(v15, v16))
    {
      long long v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v252 = swift_slowAlloc();
      *(_DWORD *)long long v17 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 320) = sub_1000DF238(v3, v4, &v252);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s invalid set of parameters for prefetching", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_10018ACD0(*(void *)(v0 + 496), v3, v4, "%s finished batch of prefetch requests");
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v21 = *(uint64_t (**)(void *))(v0 + 8);
    return v21(_swiftEmptyArrayStorage);
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 824) + 32))(*(void *)(v0 + 832), *(void *)(v0 + 808), *(void *)(v0 + 816));
  *(void *)(v0 + 304) = sub_1001BF940();
  sub_100003918(&qword_100208930);
  sub_10015DB68();
  *(void *)(v0 + 880) = sub_1001BEDF0();
  *(void *)(v0 + 888) = v18;
  unint64_t v233 = v4;
  uint64_t v22 = *(void *)(v0 + 792);
  uint64_t v23 = *(void *)(v0 + 784);
  uint64_t v241 = *(void *)(v0 + 776);
  uint64_t v24 = *(void *)(v0 + 496);
  swift_bridgeObjectRelease();
  sub_1001C0C20();
  uint64_t v25 = sub_1001C0C10();
  *(void *)(v0 + 896) = v26;
  *(void *)(v0 + 904) = v25;
  uint64_t v27 = *(void *)(*(void *)v24 + 208);
  *(void *)(v0 + 912) = v27;
  uint64_t v28 = (void *)(v24 + v27);
  sub_10000D934((void *)(v24 + v27), *(void *)(v24 + v27 + 24));
  sub_1001BFA30();
  sub_1001BF8F0();
  unint64_t v29 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v29(v22, v241);
  uint64_t v30 = *(void *)(v0 + 296);
  uint64_t v31 = TC2ServerDrivenConfiguration.maxPrefetchedAttestations.getter();
  if (v32) {
    uint64_t v33 = v30;
  }
  else {
    uint64_t v33 = v31;
  }
  if (v30 < v33) {
    uint64_t v33 = v30;
  }
  if (v33 <= 1) {
    uint64_t v34 = 1;
  }
  else {
    uint64_t v34 = v33;
  }
  *(void *)(v0 + 920) = v34;
  uint64_t v35 = TC2ServerDrivenConfiguration.maxPrefetchBatches.getter();
  v232 = v28;
  if (v36)
  {
    uint64_t v37 = *(void *)(v0 + 792);
    uint64_t v38 = *(void *)(v0 + 776);
    sub_10000D934(v28, v28[3]);
    sub_1001BF9B0();
    sub_1001BF8F0();
    v29(v37, v38);
    uint64_t v35 = *(void *)(v0 + 288);
  }
  uint64_t v39 = *(void *)(v0 + 496);
  if (v35 <= 1) {
    uint64_t v40 = 1;
  }
  else {
    uint64_t v40 = v35;
  }
  *(void *)(v0 + 928) = v40;
  uint64_t v41 = v39 + *(void *)(*(void *)v39 + 272);
  uint64_t v42 = *(void *)v41;
  *(void *)(v0 + 936) = *(void *)v41;
  int v43 = *(unsigned __int8 *)(v41 + 8);
  *(unsigned char *)(v0 + 1056) = v43;
  if (v43) {
    uint64_t v44 = v40 - 1;
  }
  else {
    uint64_t v44 = v42;
  }
  unint64_t v237 = v44;
  if (v43) {
    uint64_t v45 = 0;
  }
  else {
    uint64_t v45 = v42;
  }
  uint64_t v46 = 3 * v34;
  *(void *)(v0 + 944) = 3 * v34;
  if ((unsigned __int128)(v34 * (__int128)3) >> 64 != (3 * v34) >> 63)
  {
    __break(1u);
    goto LABEL_117;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v47 = sub_1001C0330();
  os_log_type_t v48 = sub_1001C1200();
  if (!os_log_type_enabled(v47, v48))
  {

    swift_bridgeObjectRelease_n();
    uint64_t v53 = v232;
    if (!v43) {
      goto LABEL_57;
    }
    goto LABEL_40;
  }
  v229 = v47;
  uint64_t v230 = v40 - 1;
  os_log_type_t v227 = v48;
  uint64_t v228 = v40;
  LODWORD(log) = v43;
  unint64_t v49 = v45;
  uint64_t v50 = swift_slowAlloc();
  uint64_t v252 = swift_slowAlloc();
  *(_DWORD *)uint64_t v50 = 136316418;
  swift_bridgeObjectRetain();
  *(void *)(v0 + 440) = sub_1000DF238(v249, v233, &v252);
  sub_1001C1310();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v50 + 12) = 2048;
  *(void *)(v0 + 448) = v34;
  sub_1001C1310();
  *(_WORD *)(v50 + 22) = 2048;
  if (v49 <= v237)
  {
    uint64_t v51 = v40 - 1;
    if (v43) {
      uint64_t v52 = v40 - 1;
    }
    else {
      uint64_t v52 = 0;
    }
  }
  else
  {
    uint64_t v51 = v40 - 1;
    if ((uint64_t)(v49 - v237) < 0)
    {
      __break(1u);
      goto LABEL_120;
    }
    uint64_t v52 = v237 - v49;
  }
  uint64_t v55 = v52 + 1;
  uint64_t v56 = v34 * (v52 + 1);
  if ((unsigned __int128)(v34 * (__int128)v55) >> 64 != v56 >> 63)
  {
LABEL_117:
    __break(1u);
LABEL_118:
    swift_once();
LABEL_58:
    uint64_t v69 = *(void *)(v0 + 672);
    uint64_t v70 = *(void *)(v0 + 656);
    uint64_t v71 = *(void *)(v0 + 648);
    uint64_t v72 = *(void *)(v0 + 496);
    uint64_t v73 = sub_10000D978(v71, (uint64_t)qword_10021FF50);
    uint64_t v74 = *(NSObject **)(v70 + 16);
    *(void *)(v0 + 976) = v74;
    *(void *)(v0 + 984) = (v70 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    ((void (*)(uint64_t, uint64_t, uint64_t))v74)(v69, v73, v71);
    uint64_t v75 = v72 + *(void *)(*(void *)v72 + 224);
    uint64_t v76 = *(void *)(v75 + 144);
    uint64_t v77 = *(NSObject **)(v75 + 152);
    uint64_t v228 = v75;
    swift_bridgeObjectRetain();
    v229 = v77;
    uint64_t v230 = v76;
    sub_1001C0840();
    if (qword_1002079A0 != -1) {
      swift_once();
    }
    uint64_t v78 = *(void *)(v0 + 672);
    uint64_t v79 = *(void *)(v0 + 648);
    uint64_t v80 = sub_10000D978(v79, (uint64_t)qword_10021FF68);
    ((void (*)(uint64_t, uint64_t, uint64_t))v74)(v78, v80, v79);
    sub_1001BF930();
    sub_1001C0840();
    if (qword_1002079A8 != -1) {
      swift_once();
    }
    uint64_t v81 = *(void *)(v0 + 672);
    uint64_t v82 = *(void *)(v0 + 648);
    v234 = *(uint64_t **)(v0 + 496);
    uint64_t v83 = sub_10000D978(v82, (uint64_t)qword_10021FF80);
    os_log_t log = v74;
    ((void (*)(uint64_t, uint64_t, uint64_t))v74)(v81, v83, v82);
    swift_bridgeObjectRetain();
    sub_1001C0840();
    sub_1001C07E0();
    sub_1001C0840();
    sub_1001C0810();
    sub_1001C0840();
    *(void *)(v0 + 280) = v237;
    sub_10018C778(&qword_10020C078, (void (*)(uint64_t))&type metadata accessor for HTTPFields);
    sub_1001C1190();
    sub_100003918(&qword_10020C080);
    sub_100016710((unint64_t *)&qword_10020C088, &qword_10020C080);
    sub_1001C1160();
    uint64_t v84 = *v234;
    if (*((unsigned char *)v234 + *(void *)(*v234 + 248)) == 1)
    {
      if (*(void *)(*type + *(void *)(v84 + 256) + 8))
      {
        if (*(void *)(*type + *(void *)(v84 + 264) + 8))
        {
          uint64_t v85 = qword_1002079C0;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v85 != -1) {
            swift_once();
          }
          uint64_t v86 = *(void *)(v0 + 672);
          uint64_t v87 = *(void *)(v0 + 648);
          uint64_t v88 = sub_10000D978(v87, (uint64_t)qword_10021FFC8);
          char v89 = (void (*)(uint64_t, uint64_t, uint64_t))log;
          ((void (*)(uint64_t, uint64_t, uint64_t))log)(v86, v88, v87);
          sub_1001C03D0();
          if (qword_1002079B8 != -1) {
            swift_once();
          }
          uint64_t v90 = *(void *)(v0 + 672);
          uint64_t v91 = *(void *)(v0 + 648);
          uint64_t v92 = sub_10000D978(v91, (uint64_t)qword_10021FFB0);
          ((void (*)(uint64_t, uint64_t, uint64_t))log)(v90, v92, v91);
LABEL_78:
          sub_1001C03D0();
          id v107 = [self automatedDeviceGroup];
          if (v107)
          {
            uint64_t v108 = v107;
            sub_1001C0BF0();

            if (qword_1002079D0 != -1) {
              swift_once();
            }
            uint64_t v109 = *(void *)(v0 + 672);
            uint64_t v110 = *(void *)(v0 + 648);
            uint64_t v111 = sub_10000D978(v110, (uint64_t)qword_10021FFF8);
            v89(v109, v111, v110);
            sub_1001C03D0();
          }
          uint64_t v112 = *(void *)(v0 + 640);
          uint64_t v113 = *(void *)(v0 + 624);
          uint64_t v114 = *(void *)(v0 + 616);
          uint64_t v115 = (void *)(*(void *)(v0 + 496) + *(void *)(v0 + 912));
          sub_10000D934(v115, v115[3]);
          sub_100003918(&qword_100207DB8);
          sub_1001BF970();
          sub_1000B9CCC();
          sub_1001BF8F0();
          id v116 = *(void (**)(uint64_t, uint64_t))(v113 + 8);
          v116(v112, v114);
          if (*(void *)(v0 + 272))
          {
            if (qword_1002079E0 != -1) {
              swift_once();
            }
            uint64_t v117 = *(void *)(v0 + 672);
            uint64_t v118 = *(void *)(v0 + 648);
            uint64_t v119 = sub_10000D978(v118, (uint64_t)qword_100220028);
            ((void (*)(uint64_t, uint64_t, uint64_t))log)(v117, v119, v118);
            sub_1001C03D0();
          }
          uint64_t v242 = v0 + 192;
          uint64_t v120 = *(void *)(v0 + 632);
          uint64_t v121 = *(void *)(v0 + 616);
          uint64_t v122 = (void *)(*(void *)(v0 + 496) + *(void *)(v0 + 912));
          sub_10000D934(v122, v122[3]);
          sub_1001BF990();
          sub_1001BF8F0();
          v116(v120, v121);
          if (*(void *)(v0 + 256))
          {
            if (qword_1002079E8 != -1) {
              swift_once();
            }
            uint64_t v123 = *(void *)(v0 + 672);
            uint64_t v124 = *(void *)(v0 + 648);
            uint64_t v125 = sub_10000D978(v124, (uint64_t)qword_100220040);
            ((void (*)(uint64_t, uint64_t, uint64_t))log)(v123, v125, v124);
            sub_1001C03D0();
            if (qword_1002079F0 != -1) {
              swift_once();
            }
            uint64_t v126 = *(void *)(v0 + 672);
            uint64_t v127 = *(void *)(v0 + 648);
            uint64_t v128 = sub_10000D978(v127, (uint64_t)qword_100220058);
            ((void (*)(uint64_t, uint64_t, uint64_t))log)(v126, v128, v127);
            sub_1001C03D0();
          }
          uint64_t v129 = (unsigned char *)(v0 + 1056);
          uint64_t v130 = *(void *)(v0 + 728);
          uint64_t v131 = *(void *)(v0 + 720);
          uint64_t v132 = *(void *)(v0 + 712);
          uint64_t v133 = *(void *)(v0 + 704);
          sub_1001BF2B0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v132 + 16))(v131, v130, v133);
          swift_bridgeObjectRetain_n();
          v134 = sub_1001C0330();
          os_log_type_t v135 = sub_1001C1200();
          BOOL v136 = os_log_type_enabled(v134, v135);
          unint64_t v137 = *(void *)(v0 + 864);
          if (v136)
          {
            uint64_t v138 = *(void *)(v0 + 856);
            uint64_t v231 = *(void *)(v0 + 720);
            uint64_t v235 = *(void *)(v0 + 712);
            uint64_t v226 = *(void *)(v0 + 704);
            uint64_t v139 = swift_slowAlloc();
            uint64_t v252 = swift_slowAlloc();
            *(_DWORD *)uint64_t v139 = 136315394;
            swift_bridgeObjectRetain();
            *(void *)(v0 + 392) = sub_1000DF238(v138, v137, &v252);
            sub_1001C1310();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v139 + 12) = 2080;
            sub_10018C778(&qword_10020C558, (void (*)(uint64_t))&type metadata accessor for Date);
            uint64_t v140 = sub_1001C1780();
            *(void *)(v0 + 400) = sub_1000DF238(v140, v141, &v252);
            sub_1001C1310();
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t, uint64_t))(v235 + 8))(v231, v226);
            _os_log_impl((void *)&_mh_execute_header, v134, v135, "%s fetchTime: %s", (uint8_t *)v139, 0x16u);
            swift_arrayDestroy();
            uint64_t v129 = (unsigned char *)(v0 + 1056);
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            uint64_t v142 = *(void *)(v0 + 720);
            uint64_t v143 = *(void *)(v0 + 712);
            uint64_t v144 = *(void *)(v0 + 704);

            swift_bridgeObjectRelease_n();
            (*(void (**)(uint64_t, uint64_t))(v143 + 8))(v142, v144);
          }
          uint64_t v145 = *(void *)(v0 + 552);
          long long v146 = *(_OWORD *)(v228 + 32);
          long long v147 = *(_OWORD *)(v228 + 48);
          long long v148 = *(_OWORD *)(v228 + 64);
          long long v149 = *(_OWORD *)(v228 + 80);
          long long v150 = *(_OWORD *)(v228 + 96);
          long long v151 = *(_OWORD *)(v228 + 112);
          uint64_t v152 = *(void *)(v228 + 128);
          uint64_t v153 = *(void *)(v228 + 136);
          uint64_t v154 = *(void *)(v228 + 160);
          uint64_t v155 = *(void *)(v228 + 168);
          long long v156 = *(_OWORD *)(v228 + 16);
          *(_OWORD *)(v0 + 16) = *(_OWORD *)v228;
          *(_OWORD *)(v0 + 32) = v156;
          *(_OWORD *)(v0 + 48) = v146;
          *(_OWORD *)(v0 + 64) = v147;
          *(_OWORD *)(v0 + 80) = v148;
          *(_OWORD *)(v0 + 96) = v149;
          *(_OWORD *)(v0 + 112) = v150;
          *(_OWORD *)(v0 + 128) = v151;
          *(void *)(v0 + 144) = v152;
          *(void *)(v0 + 152) = v153;
          *(void *)(v0 + 160) = v230;
          *(void *)(v0 + 168) = v229;
          *(void *)(v0 + 176) = v154;
          *(void *)(v0 + 184) = v155;
          int v157 = enum case for TC2Environment.production(_:);
          *(_DWORD *)(v0 + 1052) = enum case for TC2Environment.production(_:);
          if (*v129) {
            uint64_t v158 = 0;
          }
          else {
            uint64_t v158 = *(void *)(v0 + 936);
          }
          *(void *)(v0 + 1000) = _swiftEmptyArrayStorage;
          *(void *)(v0 + 992) = v158;
          uint64_t v159 = *(void *)(v0 + 560);
          v160 = (void *)(*(void *)(v0 + 496) + *(void *)(v0 + 912));
          os_log_t logb = *(os_log_t *)(v0 + 544);
          *(void *)(v0 + 232) = sub_1001C1780();
          *(void *)(v0 + 240) = v161;
          v260._uint64_t countAndFlagsBits = 35;
          v260._object = (void *)0xE100000000000000;
          sub_1001C0D00(v260);
          uint64_t v250 = v158;
          *(void *)(v0 + 312) = v158;
          v261._uint64_t countAndFlagsBits = sub_1001C1780();
          sub_1001C0D00(v261);
          swift_bridgeObjectRelease();
          v262._uint64_t countAndFlagsBits = 58;
          v262._object = (void *)0xE100000000000000;
          sub_1001C0D00(v262);
          v163 = *(NSObject **)(v0 + 232);
          unint64_t v162 = *(void *)(v0 + 240);
          *(void *)(v0 + 1008) = v163;
          *(void *)(v0 + 1016) = v162;
          sub_1001BF300();
          v164 = (void (*)(char *, uint64_t, uint64_t))v160[3];
          uint64_t v165 = v160[4];
          sub_10000D934(v160, (uint64_t)v164);
          *(void *)(v0 + 216) = &type metadata for SystemInfo;
          *(void *)(v0 + 224) = &protocol witness table for SystemInfo;
          v166 = (_OWORD *)swift_allocObject();
          *(void *)(v0 + 192) = v166;
          long long v167 = *(_OWORD *)(v0 + 160);
          v166[9] = *(_OWORD *)(v0 + 144);
          v166[10] = v167;
          v166[11] = *(_OWORD *)(v0 + 176);
          long long v168 = *(_OWORD *)(v0 + 96);
          v166[5] = *(_OWORD *)(v0 + 80);
          v166[6] = v168;
          long long v169 = *(_OWORD *)(v0 + 128);
          v166[7] = *(_OWORD *)(v0 + 112);
          v166[8] = v169;
          long long v170 = *(_OWORD *)(v0 + 32);
          v166[1] = *(_OWORD *)(v0 + 16);
          v166[2] = v170;
          long long v171 = *(_OWORD *)(v0 + 64);
          v166[3] = *(_OWORD *)(v0 + 48);
          v166[4] = v171;
          sub_100016110(v0 + 16);
          TC2Configuration.environment(systemInfo:)(v242, v164, v165, v159);
          sub_100003E90(v242);
          if ((*(unsigned int (**)(uint64_t, os_log_t))(v145 + 88))(v159, logb) == v157)
          {
            os_log_t loga = v163;
            uint64_t v172 = *(void *)(v0 + 608);
            uint64_t v173 = *(void *)(v0 + 600);
            uint64_t v174 = *(void *)(v0 + 592);
            uint64_t v175 = *(void *)(v0 + 584);
            uint64_t v176 = *(void *)(v0 + 576);
            uint64_t v177 = *(void *)(v0 + 568);
            sub_1001BF300();
            v178 = *(void (**)(uint64_t, uint64_t, uint64_t))(v176 + 16);
            v178(v174, v172, v177);
            v178(v175, v173, v177);
            swift_bridgeObjectRetain_n();
            v179 = sub_1001C0330();
            os_log_type_t v180 = sub_1001C1200();
            if (os_log_type_enabled(v179, v180))
            {
              uint64_t v181 = *(void *)(v0 + 592);
              uint64_t v236 = *(void *)(v0 + 576);
              uint64_t v238 = *(void *)(v0 + 584);
              uint64_t v182 = *(void *)(v0 + 568);
              uint64_t v183 = swift_slowAlloc();
              uint64_t v252 = swift_slowAlloc();
              *(_DWORD *)uint64_t v183 = 136315650;
              swift_bridgeObjectRetain();
              *(void *)(v0 + 368) = sub_1000DF238((uint64_t)loga, v162, &v252);
              sub_1001C1310();
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v183 + 12) = 2080;
              uint64_t v184 = sub_1001C1780();
              *(void *)(v0 + 376) = sub_1000DF238(v184, v185, &v252);
              sub_1001C1310();
              swift_bridgeObjectRelease();
              v186 = *(void (**)(uint64_t, uint64_t))(v236 + 8);
              v186(v181, v182);
              *(_WORD *)(v183 + 22) = 2080;
              uint64_t v187 = sub_1001C1780();
              *(void *)(v0 + 384) = sub_1000DF238(v187, v188, &v252);
              sub_1001C1310();
              swift_bridgeObjectRelease();
              v186(v238, v182);
              _os_log_impl((void *)&_mh_execute_header, v179, v180, "%s Request: %s RequestIDForReporting: %s", (uint8_t *)v183, 0x20u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
              uint64_t v192 = *(void *)(v0 + 592);
              uint64_t v193 = *(void *)(v0 + 584);
              uint64_t v194 = *(void *)(v0 + 576);
              uint64_t v195 = *(void *)(v0 + 568);

              swift_bridgeObjectRelease_n();
              v196 = *(void (**)(uint64_t, uint64_t))(v194 + 8);
              v196(v192, v195);
              v196(v193, v195);
            }
          }
          else
          {
            uint64_t v189 = *(void *)(v0 + 560);
            uint64_t v190 = *(void *)(v0 + 552);
            uint64_t v191 = *(void *)(v0 + 544);
            (*(void (**)(void, void, void))(*(void *)(v0 + 576) + 16))(*(void *)(v0 + 600), *(void *)(v0 + 608), *(void *)(v0 + 568));
            (*(void (**)(uint64_t, uint64_t))(v190 + 8))(v189, v191);
          }
          if (qword_100207990 != -1) {
            swift_once();
          }
          v197 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 976);
          os_log_t logc = *(os_log_t *)(v0 + 904);
          unint64_t v198 = *(void *)(v0 + 896);
          uint64_t v199 = *(void *)(v0 + 840);
          uint64_t v200 = *(void *)(v0 + 672);
          uint64_t v201 = *(void *)(v0 + 648);
          uint64_t v202 = *(void *)(v0 + 496);
          uint64_t v203 = sub_10000D978(v201, (uint64_t)qword_10021FF38);
          v197(v200, v203, v201);
          sub_1001BF2D0();
          sub_1001C03D0();
          v204 = (void *)swift_task_alloc();
          *(void *)(v0 + 1024) = v204;
          void *v204 = v0;
          v204[1] = sub_10017C12C;
          os_log_t v205 = logc;
          if (!v198) {
            os_log_t v205 = 0;
          }
          unint64_t v206 = 0xE000000000000000;
          if (v198) {
            unint64_t v206 = v198;
          }
          uint64_t v207 = *(void *)(v0 + 920);
          uint64_t v208 = *(void *)(v0 + 832);
          uint64_t v209 = *(void *)(v0 + 728);
          uint64_t v210 = *(void *)(v0 + 696);
          uint64_t v211 = *(void *)(v0 + 608);
          uint64_t v212 = *(void *)(v0 + 600);
          uint64_t v213 = *(void *)(v0 + 528);
          unint64_t v257 = v206;
          uint64_t v258 = v207;
          os_log_t v256 = v205;
          return sub_100180B08(v213, v202 + v199, v211, v212, v250, v209, v210, v208);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain_n();
        uint64_t v98 = sub_1001C0330();
        os_log_type_t v214 = sub_1001C11F0();
        BOOL v215 = os_log_type_enabled(v98, v214);
        unint64_t v216 = *(void *)(v0 + 864);
        if (v215)
        {
          uint64_t v217 = *(void *)(v0 + 856);
          v218 = (uint8_t *)swift_slowAlloc();
          uint64_t v252 = swift_slowAlloc();
          *(_DWORD *)v218 = 136315138;
          swift_bridgeObjectRetain();
          *(void *)(v0 + 416) = sub_1000DF238(v217, v216, &v252);
          sub_1001C1310();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v98, v214, "%s not prefetching, missing featureIdentifier", v218, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          goto LABEL_115;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain_n();
        uint64_t v98 = sub_1001C0330();
        os_log_type_t v99 = sub_1001C11F0();
        BOOL v100 = os_log_type_enabled(v98, v99);
        unint64_t v101 = *(void *)(v0 + 864);
        if (v100)
        {
          uint64_t v102 = *(void *)(v0 + 856);
          v103 = (uint8_t *)swift_slowAlloc();
          uint64_t v252 = swift_slowAlloc();
          *(_DWORD *)v103 = 136315138;
          swift_bridgeObjectRetain();
          *(void *)(v0 + 408) = sub_1000DF238(v102, v101, &v252);
          sub_1001C1310();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v98, v99, "%s not prefetching, missing bundleIdentifier", v103, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          goto LABEL_115;
        }
      }

      swift_bridgeObjectRelease_n();
LABEL_115:
      unint64_t v219 = *(void *)(v0 + 888);
      uint64_t v220 = *(void *)(v0 + 880);
      unint64_t v221 = *(void *)(v0 + 864);
      os_log_t logd = *(os_log_t *)(v0 + 832);
      uint64_t v251 = *(void *)(v0 + 856);
      uint64_t v222 = *(void *)(v0 + 824);
      uint64_t v223 = *(void *)(v0 + 696);
      uint64_t v224 = *(void *)(v0 + 688);
      uint64_t v225 = *(void *)(v0 + 680);
      *(void *)typea = *(void *)(v0 + 816);
      uint64_t v243 = *(void *)(v0 + 496);
      sub_1001BF810();
      sub_10018C778(&qword_10020D938, (void (*)(uint64_t))&type metadata accessor for TrustedCloudComputeError);
      swift_allocError();
      sub_1001BF800();
      swift_willThrow();
      sub_10000792C(v220, v219);
      (*(void (**)(uint64_t, uint64_t))(v224 + 8))(v223, v225);
      (*(void (**)(os_log_t, os_log_type_t *))(v222 + 8))(logd, *(os_log_type_t **)typea);
      sub_10018ACD0(v243, v251, v221, "%s finished batch of prefetch requests");
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
      return v19();
    }
    if (qword_1002079C0 == -1)
    {
LABEL_71:
      uint64_t v93 = *(void *)(v0 + 664);
      uint64_t v94 = *(void *)(v0 + 648);
      uint64_t v95 = sub_10000D978(v94, (uint64_t)qword_10021FFC8);
      char v89 = (void (*)(uint64_t, uint64_t, uint64_t))log;
      ((void (*)(uint64_t, uint64_t, uint64_t))log)(v93, v95, v94);
      id v96 = [self mainBundle];
      id v97 = [v96 bundleIdentifier];

      if (v97)
      {
        sub_1001C0BF0();
      }
      sub_1001C03D0();
      if (qword_1002079B8 != -1) {
        swift_once();
      }
      uint64_t v104 = *(void *)(v0 + 672);
      uint64_t v105 = *(void *)(v0 + 648);
      uint64_t v106 = sub_10000D978(v105, (uint64_t)qword_10021FFB0);
      ((void (*)(uint64_t, uint64_t, uint64_t))log)(v104, v106, v105);
      goto LABEL_78;
    }
LABEL_121:
    swift_once();
    goto LABEL_71;
  }
  *(void *)(v0 + 456) = v56;
  sub_1001C1310();
  *(_WORD *)(v50 + 32) = 2048;
  uint64_t v53 = v232;
  if (v49 > v237)
  {
    if ((uint64_t)(v49 - v237) >= 0)
    {
      uint64_t v57 = v237 - v49;
      goto LABEL_56;
    }
LABEL_120:
    __break(1u);
    goto LABEL_121;
  }
  if (v43) {
    uint64_t v57 = v51;
  }
  else {
    uint64_t v57 = 0;
  }
LABEL_56:
  *(void *)(v0 + 464) = v57 + 1;
  sub_1001C1310();
  *(_WORD *)(v50 + 42) = 2048;
  *(void *)(v0 + 472) = v40;
  sub_1001C1310();
  *(_WORD *)(v50 + 52) = 2048;
  *(void *)(v0 + 480) = v46;
  sub_1001C1310();
  _os_log_impl((void *)&_mh_execute_header, v229, v227, "%s configuration: maxPrefetchedAttestations: %ld, clientCacheSize: %ld, maxPrefetchRequests: %ld, maxPrefetchBatches: %ld, prewarmAttestationsAvailability: %ld", (uint8_t *)v50, 0x3Eu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  if (!v43)
  {
LABEL_57:
    sub_100003918(&qword_10020C070);
    sub_1001C0870();
    uint64_t v68 = swift_allocObject();
    *(_OWORD *)(v68 + 16) = xmmword_1001CD7E0;
    unint64_t v237 = v68;
    if (qword_100207998 == -1) {
      goto LABEL_58;
    }
    goto LABEL_118;
  }
LABEL_40:
  TC2ServerDrivenConfiguration.prewarmAttestationsValidityInSeconds.getter();
  if (v54)
  {
    uint64_t v58 = *(void *)(v0 + 768);
    uint64_t v59 = *(void *)(v0 + 760);
    uint64_t v60 = *(void *)(v0 + 752);
    sub_10000D934(v53, v53[3]);
    sub_1001BFAB0();
    sub_1001BF8F0();
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v58, v60);
  }
  uint64_t v61 = *(void *)(v0 + 736);
  uint64_t v62 = *(void *)(v0 + 712);
  uint64_t v63 = *(void *)(v0 + 704);
  uint64_t v64 = *(void *)(v0 + 496);
  sub_1001BF2B0();
  sub_1001BF260();
  uint64_t v65 = *(void (**)(uint64_t, uint64_t))(v62 + 8);
  *(void *)(v0 + 952) = v65;
  *(void *)(v0 + 960) = (v62 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v65(v61, v63);
  *(void *)(v0 + 968) = *(void *)(v64 + *(void *)(*(void *)v64 + 184));
  type metadata accessor for TC2AttestationStore();
  sub_10018C778(&qword_10020C4E0, (void (*)(uint64_t))type metadata accessor for TC2AttestationStore);
  uint64_t v67 = sub_1001C0EA0();
  return _swift_task_switch(sub_10017A5D4, v67, v66);
}

uint64_t sub_10017A5D4()
{
  *(unsigned char *)(v0 + 1057) = sub_1000CC400(*(void *)(v0 + 832), *(void *)(v0 + 944), *(void *)(v0 + 744));
  return _swift_task_switch(sub_10017A650, 0, 0);
}

uint64_t sub_10017A650()
{
  uint64_t v204 = v0;
  if (*(unsigned char *)(v0 + 1057) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    uint64_t v1 = sub_1001C0330();
    os_log_type_t v2 = sub_1001C11F0();
    BOOL v3 = os_log_type_enabled(v1, v2);
    unint64_t v4 = *(void *)(v0 + 864);
    if (v3)
    {
      uint64_t v5 = *(void *)(v0 + 856);
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v203 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 432) = sub_1000DF238(v5, v4, &v203);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s not prefetching, attestations exist for workload", v6, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v191 = *(void (**)(uint64_t, uint64_t))(v0 + 952);
    unint64_t v35 = *(void *)(v0 + 888);
    uint64_t v36 = *(void *)(v0 + 880);
    unint64_t v37 = *(void *)(v0 + 864);
    uint64_t v200 = *(void *)(v0 + 856);
    uint64_t v38 = *(void *)(v0 + 832);
    uint64_t v39 = *(void *)(v0 + 824);
    uint64_t v40 = *(void *)(v0 + 816);
    uint64_t v41 = *(void *)(v0 + 744);
    uint64_t v42 = *(void *)(v0 + 704);
    *(void *)typea = *(void *)(v0 + 496);
    sub_1001BF810();
    sub_10018C778(&qword_10020D938, (void (*)(uint64_t))&type metadata accessor for TrustedCloudComputeError);
    swift_allocError();
    sub_1001BF800();
    swift_willThrow();
    sub_10000792C(v36, v35);
    v191(v41, v42);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
    uint64_t v43 = *(void *)typea;
    uint64_t v44 = v200;
    unint64_t v45 = v37;
    goto LABEL_67;
  }
  (*(void (**)(void, void))(v0 + 952))(*(void *)(v0 + 744), *(void *)(v0 + 704));
  sub_100003918(&qword_10020C070);
  sub_1001C0870();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1001CD7E0;
  uint64_t v190 = v7;
  if (qword_100207998 != -1) {
    swift_once();
  }
  uint64_t v8 = *(void *)(v0 + 672);
  uint64_t v9 = *(void *)(v0 + 656);
  uint64_t v10 = *(void *)(v0 + 648);
  uint64_t v11 = *(void *)(v0 + 496);
  uint64_t v12 = sub_10000D978(v10, (uint64_t)qword_10021FF50);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  *(void *)(v0 + 976) = v13;
  *(void *)(v0 + 984) = (v9 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v13(v8, v12, v10);
  uint64_t v14 = v11 + *(void *)(*(void *)v11 + 224);
  uint64_t v15 = *(void *)(v14 + 144);
  uint64_t v16 = *(void *)(v14 + 152);
  uint64_t v181 = v14;
  swift_bridgeObjectRetain();
  uint64_t v182 = v16;
  uint64_t v183 = v15;
  sub_1001C0840();
  if (qword_1002079A0 != -1) {
    swift_once();
  }
  uint64_t v17 = *(void *)(v0 + 672);
  uint64_t v18 = *(void *)(v0 + 648);
  uint64_t v19 = sub_10000D978(v18, (uint64_t)qword_10021FF68);
  v13(v17, v19, v18);
  sub_1001BF930();
  sub_1001C0840();
  uint64_t v20 = v13;
  if (qword_1002079A8 != -1) {
    swift_once();
  }
  uint64_t v21 = *(void *)(v0 + 672);
  uint64_t v22 = *(void *)(v0 + 648);
  *(void *)type = *(void *)(v0 + 496);
  uint64_t v23 = sub_10000D978(v22, (uint64_t)qword_10021FF80);
  uint64_t v199 = v20;
  v20(v21, v23, v22);
  swift_bridgeObjectRetain();
  sub_1001C0840();
  sub_1001C07E0();
  sub_1001C0840();
  sub_1001C0810();
  sub_1001C0840();
  *(void *)(v0 + 280) = v190;
  sub_10018C778(&qword_10020C078, (void (*)(uint64_t))&type metadata accessor for HTTPFields);
  sub_1001C1190();
  sub_100003918(&qword_10020C080);
  sub_100016710((unint64_t *)&qword_10020C088, &qword_10020C080);
  sub_1001C1160();
  uint64_t v24 = **(void **)type;
  if (*(unsigned char *)(*(void *)type + *(void *)(**(void **)type + 248)) != 1)
  {
    if (qword_1002079C0 != -1) {
      swift_once();
    }
    uint64_t v46 = *(void *)(v0 + 664);
    uint64_t v47 = *(void *)(v0 + 648);
    uint64_t v48 = sub_10000D978(v47, (uint64_t)qword_10021FFC8);
    uint64_t v31 = v20;
    v20(v46, v48, v47);
    id v49 = [self mainBundle];
    id v50 = [v49 bundleIdentifier];

    if (v50)
    {
      sub_1001C0BF0();
    }
    sub_1001C03D0();
    if (qword_1002079B8 != -1) {
      swift_once();
    }
    uint64_t v57 = *(void *)(v0 + 672);
    uint64_t v58 = *(void *)(v0 + 648);
    uint64_t v59 = sub_10000D978(v58, (uint64_t)qword_10021FFB0);
    v20(v57, v59, v58);
    goto LABEL_29;
  }
  uint64_t v25 = *(void *)(v0 + 496);
  if (!*(void *)(v25 + *(void *)(v24 + 256) + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    uint64_t v51 = sub_1001C0330();
    os_log_type_t v52 = sub_1001C11F0();
    BOOL v53 = os_log_type_enabled(v51, v52);
    unint64_t v54 = *(void *)(v0 + 864);
    if (v53)
    {
      uint64_t v55 = *(void *)(v0 + 856);
      uint64_t v56 = (uint8_t *)swift_slowAlloc();
      uint64_t v203 = swift_slowAlloc();
      *(_DWORD *)uint64_t v56 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 408) = sub_1000DF238(v55, v54, &v203);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v51, v52, "%s not prefetching, missing bundleIdentifier", v56, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

LABEL_66:
      unint64_t v173 = *(void *)(v0 + 888);
      uint64_t v174 = *(void *)(v0 + 880);
      unint64_t v175 = *(void *)(v0 + 864);
      uint64_t v202 = *(void *)(v0 + 856);
      uint64_t v176 = *(void *)(v0 + 824);
      *(void *)typeb = *(void *)(v0 + 816);
      uint64_t v177 = *(void *)(v0 + 696);
      uint64_t v178 = *(void *)(v0 + 688);
      uint64_t v179 = *(void *)(v0 + 680);
      uint64_t v193 = *(void *)(v0 + 496);
      os_log_t logd = *(os_log_t *)(v0 + 832);
      sub_1001BF810();
      sub_10018C778(&qword_10020D938, (void (*)(uint64_t))&type metadata accessor for TrustedCloudComputeError);
      swift_allocError();
      sub_1001BF800();
      swift_willThrow();
      sub_10000792C(v174, v173);
      (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v177, v179);
      (*(void (**)(os_log_t, os_log_type_t *))(v176 + 8))(logd, *(os_log_type_t **)typeb);
      uint64_t v43 = v193;
      uint64_t v44 = v202;
      unint64_t v45 = v175;
LABEL_67:
      sub_10018ACD0(v43, v44, v45, "%s finished batch of prefetch requests");
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      os_log_type_t v180 = *(uint64_t (**)(void))(v0 + 8);
      return v180();
    }
LABEL_65:

    swift_bridgeObjectRelease_n();
    goto LABEL_66;
  }
  if (!*(void *)(v25 + *(void *)(v24 + 264) + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    uint64_t v51 = sub_1001C0330();
    os_log_type_t v168 = sub_1001C11F0();
    BOOL v169 = os_log_type_enabled(v51, v168);
    unint64_t v170 = *(void *)(v0 + 864);
    if (v169)
    {
      uint64_t v171 = *(void *)(v0 + 856);
      uint64_t v172 = (uint8_t *)swift_slowAlloc();
      uint64_t v203 = swift_slowAlloc();
      *(_DWORD *)uint64_t v172 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 416) = sub_1000DF238(v171, v170, &v203);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v51, v168, "%s not prefetching, missing featureIdentifier", v172, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      goto LABEL_66;
    }
    goto LABEL_65;
  }
  uint64_t v26 = qword_1002079C0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v26 != -1) {
    swift_once();
  }
  uint64_t v27 = *(void *)(v0 + 672);
  uint64_t v28 = *(void *)(v0 + 648);
  uint64_t v29 = sub_10000D978(v28, (uint64_t)qword_10021FFC8);
  uint64_t v30 = v28;
  uint64_t v31 = v20;
  v20(v27, v29, v30);
  sub_1001C03D0();
  if (qword_1002079B8 != -1) {
    swift_once();
  }
  uint64_t v32 = *(void *)(v0 + 672);
  uint64_t v33 = *(void *)(v0 + 648);
  uint64_t v34 = sub_10000D978(v33, (uint64_t)qword_10021FFB0);
  v20(v32, v34, v33);
LABEL_29:
  sub_1001C03D0();
  id v60 = [self automatedDeviceGroup];
  if (v60)
  {
    uint64_t v61 = v60;
    sub_1001C0BF0();

    if (qword_1002079D0 != -1) {
      swift_once();
    }
    uint64_t v62 = *(void *)(v0 + 672);
    uint64_t v63 = *(void *)(v0 + 648);
    uint64_t v64 = sub_10000D978(v63, (uint64_t)qword_10021FFF8);
    v31(v62, v64, v63);
    sub_1001C03D0();
  }
  uint64_t v65 = *(void *)(v0 + 640);
  uint64_t v66 = *(void *)(v0 + 624);
  uint64_t v67 = *(void *)(v0 + 616);
  uint64_t v68 = (void *)(*(void *)(v0 + 496) + *(void *)(v0 + 912));
  sub_10000D934(v68, v68[3]);
  sub_100003918(&qword_100207DB8);
  sub_1001BF970();
  sub_1000B9CCC();
  sub_1001BF8F0();
  uint64_t v69 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
  v69(v65, v67);
  if (*(void *)(v0 + 272))
  {
    if (qword_1002079E0 != -1) {
      swift_once();
    }
    uint64_t v70 = *(void *)(v0 + 672);
    uint64_t v71 = *(void *)(v0 + 648);
    uint64_t v72 = sub_10000D978(v71, (uint64_t)qword_100220028);
    v199(v70, v72, v71);
    sub_1001C03D0();
  }
  uint64_t v192 = v0 + 192;
  uint64_t v73 = *(void *)(v0 + 632);
  uint64_t v74 = *(void *)(v0 + 616);
  uint64_t v75 = (void *)(*(void *)(v0 + 496) + *(void *)(v0 + 912));
  sub_10000D934(v75, v75[3]);
  sub_1001BF990();
  sub_1001BF8F0();
  v69(v73, v74);
  if (*(void *)(v0 + 256))
  {
    if (qword_1002079E8 != -1) {
      swift_once();
    }
    uint64_t v76 = *(void *)(v0 + 672);
    uint64_t v77 = *(void *)(v0 + 648);
    uint64_t v78 = sub_10000D978(v77, (uint64_t)qword_100220040);
    v199(v76, v78, v77);
    sub_1001C03D0();
    if (qword_1002079F0 != -1) {
      swift_once();
    }
    uint64_t v79 = *(void *)(v0 + 672);
    uint64_t v80 = *(void *)(v0 + 648);
    uint64_t v81 = sub_10000D978(v80, (uint64_t)qword_100220058);
    v199(v79, v81, v80);
    sub_1001C03D0();
  }
  uint64_t v82 = *(void *)(v0 + 728);
  uint64_t v83 = *(void *)(v0 + 720);
  uint64_t v84 = *(void *)(v0 + 712);
  uint64_t v85 = *(void *)(v0 + 704);
  sub_1001BF2B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 16))(v83, v82, v85);
  swift_bridgeObjectRetain_n();
  uint64_t v86 = sub_1001C0330();
  os_log_type_t v87 = sub_1001C1200();
  BOOL v88 = os_log_type_enabled(v86, v87);
  unint64_t v89 = *(void *)(v0 + 864);
  if (v88)
  {
    uint64_t v90 = *(void *)(v0 + 856);
    uint64_t v184 = *(void *)(v0 + 720);
    os_log_t loga = *(os_log_t *)(v0 + 712);
    uint64_t v91 = *(void *)(v0 + 704);
    uint64_t v92 = swift_slowAlloc();
    uint64_t v203 = swift_slowAlloc();
    *(_DWORD *)uint64_t v92 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 392) = sub_1000DF238(v90, v89, &v203);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v92 + 12) = 2080;
    sub_10018C778(&qword_10020C558, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v93 = sub_1001C1780();
    *(void *)(v0 + 400) = sub_1000DF238(v93, v94, &v203);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    ((void (*)(uint64_t, uint64_t))loga[1].isa)(v184, v91);
    _os_log_impl((void *)&_mh_execute_header, v86, v87, "%s fetchTime: %s", (uint8_t *)v92, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v95 = *(void *)(v0 + 720);
    uint64_t v96 = *(void *)(v0 + 712);
    uint64_t v97 = *(void *)(v0 + 704);

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v95, v97);
  }
  uint64_t v98 = *(void *)(v0 + 552);
  long long v99 = *(_OWORD *)(v181 + 32);
  long long v100 = *(_OWORD *)(v181 + 48);
  long long v101 = *(_OWORD *)(v181 + 64);
  long long v102 = *(_OWORD *)(v181 + 80);
  long long v103 = *(_OWORD *)(v181 + 96);
  long long v104 = *(_OWORD *)(v181 + 112);
  uint64_t v105 = *(void *)(v181 + 128);
  uint64_t v106 = *(void *)(v181 + 136);
  uint64_t v107 = *(void *)(v181 + 160);
  uint64_t v108 = *(void *)(v181 + 168);
  long long v109 = *(_OWORD *)(v181 + 16);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)v181;
  *(_OWORD *)(v0 + 32) = v109;
  *(_OWORD *)(v0 + 48) = v99;
  *(_OWORD *)(v0 + 64) = v100;
  *(_OWORD *)(v0 + 80) = v101;
  *(_OWORD *)(v0 + 96) = v102;
  *(_OWORD *)(v0 + 112) = v103;
  *(_OWORD *)(v0 + 128) = v104;
  *(void *)(v0 + 144) = v105;
  *(void *)(v0 + 152) = v106;
  *(void *)(v0 + 160) = v183;
  *(void *)(v0 + 168) = v182;
  *(void *)(v0 + 176) = v107;
  *(void *)(v0 + 184) = v108;
  int v110 = enum case for TC2Environment.production(_:);
  *(_DWORD *)(v0 + 1052) = enum case for TC2Environment.production(_:);
  if (*(unsigned char *)(v0 + 1056)) {
    uint64_t v111 = 0;
  }
  else {
    uint64_t v111 = *(void *)(v0 + 936);
  }
  *(void *)(v0 + 1000) = _swiftEmptyArrayStorage;
  *(void *)(v0 + 992) = v111;
  uint64_t v112 = *(void *)(v0 + 560);
  uint64_t v113 = (void *)(*(void *)(v0 + 496) + *(void *)(v0 + 912));
  os_log_t logb = *(os_log_t *)(v0 + 544);
  *(void *)(v0 + 232) = sub_1001C1780();
  *(void *)(v0 + 240) = v114;
  v209._uint64_t countAndFlagsBits = 35;
  v209._object = (void *)0xE100000000000000;
  sub_1001C0D00(v209);
  uint64_t v201 = v111;
  *(void *)(v0 + 312) = v111;
  v210._uint64_t countAndFlagsBits = sub_1001C1780();
  sub_1001C0D00(v210);
  swift_bridgeObjectRelease();
  v211._uint64_t countAndFlagsBits = 58;
  v211._object = (void *)0xE100000000000000;
  sub_1001C0D00(v211);
  id v116 = *(NSObject **)(v0 + 232);
  unint64_t v115 = *(void *)(v0 + 240);
  *(void *)(v0 + 1008) = v116;
  *(void *)(v0 + 1016) = v115;
  sub_1001BF300();
  uint64_t v117 = (void (*)(char *, uint64_t, uint64_t))v113[3];
  uint64_t v118 = v113[4];
  sub_10000D934(v113, (uint64_t)v117);
  *(void *)(v0 + 216) = &type metadata for SystemInfo;
  *(void *)(v0 + 224) = &protocol witness table for SystemInfo;
  uint64_t v119 = (_OWORD *)swift_allocObject();
  *(void *)(v0 + 192) = v119;
  long long v120 = *(_OWORD *)(v0 + 160);
  v119[9] = *(_OWORD *)(v0 + 144);
  v119[10] = v120;
  v119[11] = *(_OWORD *)(v0 + 176);
  long long v121 = *(_OWORD *)(v0 + 96);
  v119[5] = *(_OWORD *)(v0 + 80);
  v119[6] = v121;
  long long v122 = *(_OWORD *)(v0 + 128);
  v119[7] = *(_OWORD *)(v0 + 112);
  v119[8] = v122;
  long long v123 = *(_OWORD *)(v0 + 32);
  v119[1] = *(_OWORD *)(v0 + 16);
  v119[2] = v123;
  long long v124 = *(_OWORD *)(v0 + 64);
  v119[3] = *(_OWORD *)(v0 + 48);
  v119[4] = v124;
  sub_100016110(v0 + 16);
  TC2Configuration.environment(systemInfo:)(v192, v117, v118, v112);
  sub_100003E90(v192);
  if ((*(unsigned int (**)(uint64_t, os_log_t))(v98 + 88))(v112, logb) == v110)
  {
    os_log_t log = v116;
    uint64_t v125 = *(void *)(v0 + 608);
    uint64_t v126 = *(void *)(v0 + 600);
    uint64_t v127 = *(void *)(v0 + 592);
    uint64_t v128 = *(void *)(v0 + 584);
    uint64_t v129 = *(void *)(v0 + 576);
    uint64_t v130 = *(void *)(v0 + 568);
    sub_1001BF300();
    uint64_t v131 = *(void (**)(uint64_t, uint64_t, uint64_t))(v129 + 16);
    v131(v127, v125, v130);
    v131(v128, v126, v130);
    swift_bridgeObjectRetain_n();
    uint64_t v132 = sub_1001C0330();
    os_log_type_t v133 = sub_1001C1200();
    if (os_log_type_enabled(v132, v133))
    {
      uint64_t v134 = *(void *)(v0 + 592);
      uint64_t v186 = *(void *)(v0 + 584);
      uint64_t v185 = *(void *)(v0 + 576);
      uint64_t v135 = *(void *)(v0 + 568);
      uint64_t v136 = swift_slowAlloc();
      uint64_t v203 = swift_slowAlloc();
      *(_DWORD *)uint64_t v136 = 136315650;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 368) = sub_1000DF238((uint64_t)log, v115, &v203);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v136 + 12) = 2080;
      uint64_t v137 = sub_1001C1780();
      *(void *)(v0 + 376) = sub_1000DF238(v137, v138, &v203);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      uint64_t v139 = *(void (**)(uint64_t, uint64_t))(v185 + 8);
      v139(v134, v135);
      *(_WORD *)(v136 + 22) = 2080;
      uint64_t v140 = sub_1001C1780();
      *(void *)(v0 + 384) = sub_1000DF238(v140, v141, &v203);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      v139(v186, v135);
      _os_log_impl((void *)&_mh_execute_header, v132, v133, "%s Request: %s RequestIDForReporting: %s", (uint8_t *)v136, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v145 = *(void *)(v0 + 592);
      uint64_t v146 = *(void *)(v0 + 584);
      uint64_t v147 = *(void *)(v0 + 576);
      uint64_t v148 = *(void *)(v0 + 568);

      swift_bridgeObjectRelease_n();
      long long v149 = *(void (**)(uint64_t, uint64_t))(v147 + 8);
      v149(v145, v148);
      v149(v146, v148);
    }
  }
  else
  {
    uint64_t v142 = *(void *)(v0 + 560);
    uint64_t v143 = *(void *)(v0 + 552);
    uint64_t v144 = *(void *)(v0 + 544);
    (*(void (**)(void, void, void))(*(void *)(v0 + 576) + 16))(*(void *)(v0 + 600), *(void *)(v0 + 608), *(void *)(v0 + 568));
    (*(void (**)(uint64_t, uint64_t))(v143 + 8))(v142, v144);
  }
  if (qword_100207990 != -1) {
    swift_once();
  }
  long long v150 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 976);
  os_log_t logc = *(os_log_t *)(v0 + 904);
  unint64_t v151 = *(void *)(v0 + 896);
  uint64_t v152 = *(void *)(v0 + 840);
  uint64_t v153 = *(void *)(v0 + 672);
  uint64_t v154 = *(void *)(v0 + 648);
  uint64_t v155 = *(void *)(v0 + 496);
  uint64_t v156 = sub_10000D978(v154, (uint64_t)qword_10021FF38);
  v150(v153, v156, v154);
  sub_1001BF2D0();
  sub_1001C03D0();
  int v157 = (void *)swift_task_alloc();
  *(void *)(v0 + 1024) = v157;
  *int v157 = v0;
  v157[1] = sub_10017C12C;
  os_log_t v158 = logc;
  if (!v151) {
    os_log_t v158 = 0;
  }
  unint64_t v159 = 0xE000000000000000;
  if (v151) {
    unint64_t v159 = v151;
  }
  uint64_t v160 = *(void *)(v0 + 920);
  uint64_t v161 = *(void *)(v0 + 832);
  uint64_t v162 = *(void *)(v0 + 728);
  uint64_t v163 = *(void *)(v0 + 696);
  uint64_t v164 = *(void *)(v0 + 608);
  uint64_t v165 = *(void *)(v0 + 600);
  uint64_t v166 = *(void *)(v0 + 528);
  unint64_t v207 = v159;
  uint64_t v208 = v160;
  os_log_t v206 = v158;
  return sub_100180B08(v166, v155 + v152, v164, v165, v201, v162, v163, v161);
}

uint64_t sub_10017C12C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 1032) = a1;
  *(void *)(v3 + 1040) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v4 = sub_10017CE08;
  }
  else
  {
    unint64_t v4 = sub_10017C260;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_10017C260()
{
  unint64_t v1 = *(void *)(v0 + 536);
  uint64_t v2 = *(void *)(v0 + 520);
  uint64_t v3 = *(void *)(v0 + 504);
  uint64_t v4 = *(void *)(v0 + 512);
  uint64_t v5 = *(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32);
  v5(v1, *(void *)(v0 + 528), v3);
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v4 + 16))(v2, v1, v3);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v7 = *(void *)(v0 + 1000);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    unint64_t v7 = sub_1000E4560(0, *(void *)(v7 + 16) + 1, 1, *(void *)(v0 + 1000));
  }
  unint64_t v9 = *(void *)(v7 + 16);
  unint64_t v8 = *(void *)(v7 + 24);
  if (v9 >= v8 >> 1) {
    unint64_t v7 = sub_1000E4560(v8 > 1, v9 + 1, 1, v7);
  }
  uint64_t v10 = *(void *)(v0 + 1032);
  uint64_t v11 = *(void *)(v0 + 520);
  uint64_t v12 = *(void *)(v0 + 504);
  uint64_t v13 = *(void *)(v0 + 512);
  *(void *)(v7 + 16) = v9 + 1;
  v5(v7+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * v9, v11, v12);
  uint64_t v14 = *(void *)(sub_1001BFDB0() + 16);
  swift_bridgeObjectRelease();
  uint64_t v15 = v14 - v10;
  if (__OFSUB__(v14, v10))
  {
    __break(1u);
  }
  else
  {
    uint64_t v113 = v7;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1001C0330();
    os_log_type_t v17 = sub_1001C1200();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v96 = *(void *)(v0 + 1032);
      unint64_t v18 = *(void *)(v0 + 1016);
      uint64_t v19 = *(void *)(v0 + 1008);
      uint64_t v106 = *(void *)(v0 + 600);
      uint64_t v108 = *(void *)(v0 + 608);
      uint64_t v20 = *(void *)(v0 + 576);
      uint64_t v101 = *(void *)(v0 + 536);
      *(void *)type = *(void *)(v0 + 568);
      uint64_t v97 = *(void *)(v0 + 512);
      uint64_t v99 = *(void *)(v0 + 504);
      uint64_t v21 = swift_slowAlloc();
      uint64_t v115 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136315650;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 344) = sub_1000DF238(v19, v18, &v115);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v21 + 12) = 2048;
      *(void *)(v0 + 352) = v96;
      sub_1001C1310();
      *(_WORD *)(v21 + 22) = 2048;
      *(void *)(v0 + 360) = v15;
      sub_1001C1310();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "%s attestations saved: %ld duplicates: %ld", (uint8_t *)v21, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v101, v99);
      uint64_t v22 = *(void (**)(uint64_t, void))(v20 + 8);
      v22(v106, *(void *)type);
      v22(v108, *(void *)type);
    }
    else
    {
      uint64_t v23 = *(void *)(v0 + 608);
      uint64_t v24 = *(void *)(v0 + 600);
      uint64_t v25 = *(void *)(v0 + 576);
      uint64_t v26 = *(void *)(v0 + 568);
      uint64_t v27 = *(void *)(v0 + 536);
      uint64_t v28 = *(void *)(v0 + 504);
      uint64_t v29 = *(void *)(v0 + 512);

      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
      uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
      v30(v24, v26);
      v30(v23, v26);
    }
    uint64_t v31 = *(void *)(v0 + 992);
    if (*(unsigned char *)(v0 + 1056)) {
      uint64_t v32 = *(void *)(v0 + 928) - 1;
    }
    else {
      uint64_t v32 = *(void *)(v0 + 936);
    }
    if (v31 == v32)
    {
      unint64_t v33 = *(void *)(v0 + 864);
      uint64_t v109 = *(void *)(v0 + 832);
      os_log_t log = *(os_log_t *)(v0 + 856);
      uint64_t v34 = *(void *)(v0 + 824);
      uint64_t v35 = *(void *)(v0 + 728);
      uint64_t v36 = *(void *)(v0 + 712);
      uint64_t v37 = *(void *)(v0 + 704);
      uint64_t v38 = *(void *)(v0 + 696);
      uint64_t v39 = *(void *)(v0 + 688);
      uint64_t v40 = *(void *)(v0 + 680);
      uint64_t typea = *(void *)(v0 + 496);
      uint64_t v107 = *(void *)(v0 + 816);
      sub_10000792C(*(void *)(v0 + 880), *(void *)(v0 + 888));
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v109, v107);
      sub_10018ACD0(typea, (uint64_t)log, v33, "%s finished batch of prefetch requests");
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v41 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v41(v113);
    }
    uint64_t v43 = v31 + 1;
    if (v31 != -1)
    {
      *(void *)(v0 + 1000) = v113;
      *(void *)(v0 + 992) = v43;
      int v110 = *(_DWORD *)(v0 + 1052);
      uint64_t v44 = *(void *)(v0 + 560);
      uint64_t v45 = *(void *)(v0 + 552);
      uint64_t v46 = (void *)(*(void *)(v0 + 496) + *(void *)(v0 + 912));
      *(void *)typeb = *(void *)(v0 + 544);
      *(void *)(v0 + 232) = sub_1001C1780();
      *(void *)(v0 + 240) = v47;
      v116._uint64_t countAndFlagsBits = 35;
      v116._object = (void *)0xE100000000000000;
      sub_1001C0D00(v116);
      uint64_t v113 = v43;
      *(void *)(v0 + 312) = v43;
      v117._uint64_t countAndFlagsBits = sub_1001C1780();
      sub_1001C0D00(v117);
      swift_bridgeObjectRelease();
      v118._uint64_t countAndFlagsBits = 58;
      v118._object = (void *)0xE100000000000000;
      sub_1001C0D00(v118);
      uint64_t v49 = *(void *)(v0 + 232);
      unint64_t v48 = *(void *)(v0 + 240);
      *(void *)(v0 + 1008) = v49;
      *(void *)(v0 + 1016) = v48;
      sub_1001BF300();
      id v50 = (void (*)(char *, uint64_t, uint64_t))v46[3];
      uint64_t v51 = v46[4];
      sub_10000D934(v46, (uint64_t)v50);
      *(void *)(v0 + 216) = &type metadata for SystemInfo;
      *(void *)(v0 + 224) = &protocol witness table for SystemInfo;
      os_log_type_t v52 = (_OWORD *)swift_allocObject();
      *(void *)(v0 + 192) = v52;
      long long v53 = *(_OWORD *)(v0 + 160);
      v52[9] = *(_OWORD *)(v0 + 144);
      v52[10] = v53;
      v52[11] = *(_OWORD *)(v0 + 176);
      long long v54 = *(_OWORD *)(v0 + 96);
      v52[5] = *(_OWORD *)(v0 + 80);
      v52[6] = v54;
      long long v55 = *(_OWORD *)(v0 + 128);
      v52[7] = *(_OWORD *)(v0 + 112);
      v52[8] = v55;
      long long v56 = *(_OWORD *)(v0 + 32);
      v52[1] = *(_OWORD *)(v0 + 16);
      v52[2] = v56;
      long long v57 = *(_OWORD *)(v0 + 64);
      v52[3] = *(_OWORD *)(v0 + 48);
      v52[4] = v57;
      sub_100016110(v0 + 16);
      TC2Configuration.environment(systemInfo:)(v0 + 192, v50, v51, v44);
      sub_100003E90(v0 + 192);
      if ((*(unsigned int (**)(uint64_t, os_log_type_t *))(v45 + 88))(v44, *(os_log_type_t **)typeb) == v110)
      {
        uint64_t v111 = v49;
        uint64_t v58 = *(void *)(v0 + 608);
        uint64_t v59 = *(void *)(v0 + 600);
        uint64_t v60 = *(void *)(v0 + 592);
        uint64_t v61 = *(void *)(v0 + 584);
        uint64_t v62 = *(void *)(v0 + 576);
        uint64_t v63 = *(void *)(v0 + 568);
        sub_1001BF300();
        uint64_t v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 16);
        v64(v60, v58, v63);
        v64(v61, v59, v63);
        swift_bridgeObjectRetain_n();
        uint64_t v65 = sub_1001C0330();
        os_log_type_t v66 = sub_1001C1200();
        if (os_log_type_enabled(v65, v66))
        {
          os_log_type_t typec = v66;
          uint64_t v67 = *(void *)(v0 + 592);
          uint64_t v98 = *(void *)(v0 + 576);
          uint64_t v100 = *(void *)(v0 + 584);
          uint64_t v68 = *(void *)(v0 + 568);
          uint64_t v69 = swift_slowAlloc();
          uint64_t v115 = swift_slowAlloc();
          *(_DWORD *)uint64_t v69 = 136315650;
          swift_bridgeObjectRetain();
          *(void *)(v0 + 368) = sub_1000DF238(v111, v48, &v115);
          sub_1001C1310();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v69 + 12) = 2080;
          uint64_t v70 = sub_1001C1780();
          *(void *)(v0 + 376) = sub_1000DF238(v70, v71, &v115);
          sub_1001C1310();
          swift_bridgeObjectRelease();
          uint64_t v72 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
          v72(v67, v68);
          *(_WORD *)(v69 + 22) = 2080;
          uint64_t v73 = sub_1001C1780();
          *(void *)(v0 + 384) = sub_1000DF238(v73, v74, &v115);
          sub_1001C1310();
          swift_bridgeObjectRelease();
          v72(v100, v68);
          _os_log_impl((void *)&_mh_execute_header, v65, typec, "%s Request: %s RequestIDForReporting: %s", (uint8_t *)v69, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          uint64_t v78 = *(void *)(v0 + 592);
          uint64_t v79 = *(void *)(v0 + 584);
          uint64_t v80 = *(void *)(v0 + 576);
          uint64_t v81 = *(void *)(v0 + 568);

          swift_bridgeObjectRelease_n();
          uint64_t v82 = *(void (**)(uint64_t, uint64_t))(v80 + 8);
          v82(v78, v81);
          v82(v79, v81);
        }
      }
      else
      {
        uint64_t v75 = *(void *)(v0 + 560);
        uint64_t v76 = *(void *)(v0 + 552);
        uint64_t v77 = *(void *)(v0 + 544);
        (*(void (**)(void, void, void))(*(void *)(v0 + 576) + 16))(*(void *)(v0 + 600), *(void *)(v0 + 608), *(void *)(v0 + 568));
        (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v75, v77);
      }
      if (qword_100207990 == -1) {
        goto LABEL_23;
      }
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_28:
  swift_once();
LABEL_23:
  uint64_t v83 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 976);
  uint64_t v84 = *(void *)(v0 + 840);
  uint64_t v85 = *(void *)(v0 + 672);
  uint64_t v86 = *(void *)(v0 + 648);
  uint64_t v87 = *(void *)(v0 + 496);
  uint64_t v88 = sub_10000D978(v86, (uint64_t)qword_10021FF38);
  v83(v85, v88, v86);
  sub_1001BF2D0();
  sub_1001C03D0();
  unint64_t v89 = (void *)swift_task_alloc();
  *(void *)(v0 + 1024) = v89;
  *unint64_t v89 = v0;
  v89[1] = sub_10017C12C;
  uint64_t v90 = *(void *)(v0 + 832);
  uint64_t v91 = *(void *)(v0 + 728);
  uint64_t v92 = *(void *)(v0 + 696);
  uint64_t v93 = *(void *)(v0 + 608);
  uint64_t v94 = *(void *)(v0 + 600);
  uint64_t v95 = *(void *)(v0 + 528);
  return sub_100180B08(v95, v87 + v84, v93, v94, v113, v91, v92, v90);
}

uint64_t sub_10017CE08()
{
  uint64_t v30 = v0;
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  unint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C11F0();
  if (os_log_type_enabled(v1, v2))
  {
    unint64_t v3 = v0[127];
    uint64_t v4 = v0[126];
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    swift_bridgeObjectRetain();
    v0[41] = sub_1000DF238(v4, v3, &v29);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v5 + 12) = 2112;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[42] = v7;
    sub_1001C1310();
    *uint64_t v6 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s failed to fetch batch error: %@", (uint8_t *)v5, 0x16u);
    sub_100003918(&qword_100207DA8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v8 = v0[110];
  uint64_t v27 = v0[107];
  unint64_t v28 = v0[108];
  uint64_t v9 = v0[103];
  uint64_t v25 = v0[102];
  uint64_t v26 = v0[104];
  uint64_t v10 = v0[89];
  unint64_t v19 = v0[111];
  uint64_t v20 = v0[88];
  uint64_t v11 = v0[86];
  uint64_t v21 = v0[91];
  uint64_t v22 = v0[85];
  uint64_t v12 = v0[76];
  uint64_t v13 = v0[75];
  uint64_t v14 = v0[72];
  uint64_t v15 = v0[71];
  uint64_t v23 = v0[87];
  uint64_t v24 = v0[62];
  swift_willThrow();
  sub_10000792C(v8, v19);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v16(v13, v15);
  v16(v12, v15);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v21, v20);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v23, v22);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v26, v25);
  sub_10018ACD0(v24, v27, v28, "%s finished batch of prefetch requests");
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_10017D28C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[6] = a3;
  v4[7] = v3;
  v4[4] = a1;
  v4[5] = a2;
  return _swift_task_switch(sub_10017D2B0, 0, 0);
}

uint64_t sub_10017D2B0()
{
  uint64_t v16 = v0;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  unint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C1200();
  if (os_log_type_enabled(v1, v2))
  {
    unint64_t v3 = v0[5];
    uint64_t v4 = v0[4];
    os_log_type_t type = v2;
    uint64_t v5 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    swift_bridgeObjectRetain();
    v0[2] = sub_1000DF238(v4, v3, &v15);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v5 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1001C0B90();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    v0[3] = sub_1000DF238(v6, v8, &v15);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v1, type, "prefetch workloadType=%s workloadParameters=%s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v9 = (void *)swift_task_alloc();
  v0[8] = v9;
  void *v9 = v0;
  v9[1] = sub_10017D554;
  uint64_t v10 = v0[6];
  uint64_t v12 = v0[4];
  uint64_t v11 = v0[5];
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  return sub_1001774BC(v12, v11, v10, 0, 0, 1, 0, 0);
}

uint64_t sub_10017D554(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, a2);
}

uint64_t sub_10017D658(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v39 = a6;
  uint64_t v43 = a1;
  uint64_t v41 = type metadata accessor for ThimbledEvent();
  __chkstk_darwin(v41, v13);
  uint64_t v15 = (void *)((char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_100003918(&qword_100208A00);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v18);
  uint64_t v40 = (char *)v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = v7;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v20 = sub_1001C0330();
  os_log_type_t v21 = sub_1001C1200();
  int v38 = v21;
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v37 = a5;
    uint64_t v23 = v22;
    uint64_t v34 = swift_slowAlloc();
    uint64_t v45 = v34;
    *(_DWORD *)uint64_t v23 = 136315394;
    uint64_t v35 = a4;
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_1000DF238(v43, a2, &v45);
    uint64_t v36 = v16;
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v23 + 12) = 2080;
    v33[1] = v23 + 14;
    swift_bridgeObjectRetain();
    uint64_t v24 = v17;
    uint64_t v25 = sub_1001C0B90();
    uint64_t v26 = a7;
    unint64_t v28 = v27;
    swift_bridgeObjectRelease();
    uint64_t v29 = v25;
    uint64_t v17 = v24;
    uint64_t v44 = sub_1000DF238(v29, v28, &v45);
    uint64_t v16 = v36;
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    a7 = v26;
    a4 = v35;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v20, (os_log_type_t)v38, "prewarm workloadType=%s workloadParameters=%s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a5 = v37;
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  void *v15 = v43;
  v15[1] = a2;
  _OWORD v15[2] = a3;
  v15[3] = a4;
  uint64_t v30 = v39;
  v15[4] = a5;
  v15[5] = v30;
  v15[6] = a7;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100003918(qword_100208000);
  uint64_t v31 = v40;
  sub_1001C0FE0();
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v31, v16);
}

uint64_t sub_10017DA04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for NWAsyncConnection.Inbound(0);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (uint64_t *)&v32[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for NWAsyncConnection.Inbound.AsyncIterator(0);
  uint64_t v10 = (int *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = &v32[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10018C4E8(v1, (uint64_t)v8, type metadata accessor for NWAsyncConnection.Inbound);
  uint64_t v14 = *(os_unfair_lock_s **)((char *)v8 + *(int *)(v5 + 32));
  uint64_t v15 = v14 + 4;
  uint64_t v16 = v14 + 5;
  os_unfair_lock_lock(v14 + 5);
  sub_10019A430(v15);
  os_unfair_lock_unlock(v16);
  uint64_t v17 = *v8;
  uint64_t v18 = (char *)v8 + *(int *)(v5 + 28);
  uint64_t v19 = (char *)v13 + v10[7];
  uint64_t v20 = sub_1001C0340();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v19, v18, v20);
  *(void *)((char *)v13 + v10[8]) = 0;
  *((unsigned char *)v13 + v10[9]) = 0;
  *uint64_t v13 = v17;
  swift_retain();
  sub_10018C608((uint64_t)v8, type metadata accessor for NWAsyncConnection.Inbound);
  uint64_t v21 = sub_100003918(&qword_10020EAF0);
  uint64_t v22 = *(int *)(v21 + 40);
  uint64_t v23 = (uint64_t *)(v2 + *(int *)(v21 + 36));
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  uint64_t v27 = *(void *)(v2 + v22);
  uint64_t v26 = *(void *)(v2 + v22 + 8);
  unint64_t v28 = (int *)sub_100003918(&qword_10020EB60);
  *(unsigned char *)(a1 + v28[9]) = 1;
  *(unsigned char *)(a1 + v28[10]) = 0;
  sub_10018C710((uint64_t)v13, a1, type metadata accessor for NWAsyncConnection.Inbound.AsyncIterator);
  uint64_t v29 = (void *)(a1 + v28[11]);
  *uint64_t v29 = v25;
  v29[1] = v24;
  uint64_t v30 = (void *)(a1 + v28[12]);
  *uint64_t v30 = v27;
  v30[1] = v26;
  swift_retain();
  return swift_retain();
}

uint64_t sub_10017DC44()
{
  v1[6] = v0;
  uint64_t v2 = sub_1001C0340();
  v1[7] = v2;
  v1[8] = *(void *)(v2 - 8);
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  sub_100003918(&qword_100207FE8);
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  sub_100003918(&qword_10020DA80);
  v1[13] = swift_task_alloc();
  uint64_t v3 = sub_1001C04D0();
  v1[14] = v3;
  v1[15] = *(void *)(v3 - 8);
  v1[16] = swift_task_alloc();
  return _swift_task_switch(sub_10017DDE0, 0, 0);
}

uint64_t sub_10017DDE0()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = sub_100003918(&qword_10020EB60);
  *(void *)(v0 + 136) = v2;
  uint64_t v3 = *(int *)(v2 + 40);
  *(_DWORD *)(v0 + 44) = v3;
  if (*(unsigned char *)(v1 + v3))
  {
LABEL_2:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void, unint64_t))(v0 + 8);
    return v4(0, 0xF000000000000000);
  }
  uint64_t v6 = *(int *)(v2 + 36);
  if (*(unsigned char *)(v1 + v6))
  {
    *(unsigned char *)(v1 + v6) = 0;
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_10017E19C;
    return NWAsyncConnection.Inbound.AsyncIterator.next()();
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 64);
    uint64_t v9 = type metadata accessor for NWAsyncConnection.Inbound.AsyncIterator(0);
    uint64_t v10 = *(int *)(v9 + 20);
    *(_DWORD *)(v0 + 288) = v10;
    *(_DWORD *)(v0 + 292) = *(_DWORD *)(v9 + 28);
    uint64_t v11 = *(void (**)(void, uint64_t, void))(v8 + 16);
    *(void *)(v0 + 216) = v11;
    v11(*(void *)(v0 + 80), v1 + v10, *(void *)(v0 + 56));
    uint64_t v12 = sub_1001C0330();
    os_log_type_t v13 = sub_1001C11E0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Waiting for data on NW connection", v14, 2u);
      swift_slowDealloc();
    }
    uint64_t v15 = *(int *)(v0 + 292);
    uint64_t v16 = *(void *)(v0 + 80);
    uint64_t v17 = *(void *)(v0 + 56);
    uint64_t v18 = *(void *)(v0 + 64);
    uint64_t v19 = *(void *)(v0 + 48);

    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
    v20(v16, v17);
    if (*(unsigned char *)(v19 + v15) == 1)
    {
      (*(void (**)(void, void, void))(v0 + 216))(*(void *)(v0 + 72), *(void *)(v0 + 48) + *(int *)(v0 + 288), *(void *)(v0 + 56));
      uint64_t v21 = sub_1001C0330();
      os_log_type_t v22 = sub_1001C11F0();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v23 = 0;
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "Continuing iteration on NW connection that previously completed", v23, 2u);
        swift_slowDealloc();
      }
      uint64_t v24 = *(void *)(v0 + 72);
      uint64_t v25 = *(void *)(v0 + 56);

      v20(v24, v25);
      goto LABEL_2;
    }
    uint64_t v26 = **(void **)(v0 + 48);
    uint64_t v27 = (void *)swift_task_alloc();
    *(void *)(v0 + 224) = v27;
    *uint64_t v27 = v0;
    v27[1] = sub_10017F3C0;
    return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v0 + 16, &unk_10020EB68, v26, sub_10018C600, v26, 0, 0, &type metadata for NWConnectionReceived);
  }
}

uint64_t sub_10017E19C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6 = *v5;
  *(void *)(v6 + 152) = a1;
  *(void *)(v6 + 160) = a2;
  *(void *)(v6 + 168) = a3;
  *(unsigned char *)(v6 + 41) = a4;
  swift_task_dealloc();
  if (v4)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v6 + 8);
    return v7();
  }
  else
  {
    return _swift_task_switch(sub_10017E32C, 0, 0);
  }
}

uint64_t sub_10017E32C()
{
  uint64_t v1 = *(void *)(v0 + 168);
  long long v47 = xmmword_1001CE850;
  if (v1 == 1) {
    goto LABEL_29;
  }
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 104);
  if (v1)
  {
    swift_retain();
    sub_1001C0530();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) != 1)
    {
      uint64_t v5 = *(void *)(v0 + 136);
      uint64_t v6 = *(void *)(v0 + 48);
      (*(void (**)(void, void, void))(*(void *)(v0 + 120) + 32))(*(void *)(v0 + 128), *(void *)(v0 + 104), *(void *)(v0 + 112));
      unint64_t v48 = (uint64_t (*)(uint64_t))(*(void *)(v6 + *(int *)(v5 + 44)) + **(int **)(v6 + *(int *)(v5 + 44)));
      uint64_t v7 = (void *)swift_task_alloc();
      *(void *)(v0 + 176) = v7;
      *uint64_t v7 = v0;
      v7[1] = sub_10017E998;
      uint64_t v8 = *(void *)(v0 + 128);
LABEL_5:
      return v48(v8);
    }
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v3 + 56))(*(void *)(v0 + 104), 1, 1, *(void *)(v0 + 112));
  }
  sub_100010360(*(void *)(v0 + 104), &qword_10020DA80);
  unint64_t v10 = *(void *)(v0 + 160);
  char v11 = *(unsigned char *)(v0 + 41);
  if (v10 >> 60 != 15)
  {
    *(unsigned char *)(*(void *)(v0 + 48) + *(int *)(v0 + 44)) = v11 & 1;
    if (v11)
    {
      if (*(void *)(v0 + 168))
      {
        uint64_t v40 = *(void *)(v0 + 152);
        unint64_t v39 = *(void *)(v0 + 160);
        sub_1001C0750();
        swift_retain();
        sub_10000D9E0(v40, v39);
        sub_1001C0700();
        uint64_t v41 = sub_1001C0550();
        *(void *)(v0 + 192) = v41;
        swift_release();
        swift_release();
        if (v41)
        {
          sub_1001C0740();
          if (swift_dynamicCastClass())
          {
            uint64_t v42 = *(int **)(*(void *)(v0 + 48) + *(int *)(*(void *)(v0 + 136) + 48));
            sub_1001C0730();
            unint64_t v48 = (uint64_t (*)(uint64_t))((char *)v42 + *v42);
            uint64_t v43 = (void *)swift_task_alloc();
            *(void *)(v0 + 200) = v43;
            *uint64_t v43 = v0;
            v43[1] = sub_10017F0D4;
            uint64_t v8 = *(void *)(v0 + 96);
            goto LABEL_5;
          }
          sub_1000A110C(*(void *)(v0 + 152), *(void *)(v0 + 160), *(void *)(v0 + 168));
          swift_release();
          goto LABEL_28;
        }
        unint64_t v35 = *(void *)(v0 + 160);
        uint64_t v36 = *(void *)(v0 + 168);
        uint64_t v34 = *(void *)(v0 + 152);
      }
      else
      {
        uint64_t v44 = *(void *)(v0 + 152);
        unint64_t v45 = *(void *)(v0 + 160);
        sub_10000D9E0(v44, v45);
        uint64_t v34 = v44;
        unint64_t v35 = v45;
        uint64_t v36 = 0;
      }
    }
    else
    {
      unint64_t v31 = *(void *)(v0 + 160);
      uint64_t v32 = *(void *)(v0 + 168);
      uint64_t v33 = *(void *)(v0 + 152);
      sub_10000D9E0(v33, v31);
      uint64_t v34 = v33;
      unint64_t v35 = v31;
      uint64_t v36 = v32;
    }
    sub_1000A110C(v34, v35, v36);
LABEL_28:
    long long v47 = *(_OWORD *)(v0 + 152);
LABEL_29:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v46 = *(uint64_t (**)(void, void))(v0 + 8);
    return v46(v47, *((void *)&v47 + 1));
  }
  sub_1000A110C(*(void *)(v0 + 152), v10, *(void *)(v0 + 168));
  uint64_t v12 = *(void *)(v0 + 64);
  uint64_t v13 = *(void *)(v0 + 48);
  uint64_t v14 = type metadata accessor for NWAsyncConnection.Inbound.AsyncIterator(0);
  uint64_t v15 = *(int *)(v14 + 20);
  *(_DWORD *)(v0 + 288) = v15;
  *(_DWORD *)(v0 + 292) = *(_DWORD *)(v14 + 28);
  uint64_t v16 = *(void (**)(void, uint64_t, void))(v12 + 16);
  *(void *)(v0 + 216) = v16;
  v16(*(void *)(v0 + 80), v13 + v15, *(void *)(v0 + 56));
  uint64_t v17 = sub_1001C0330();
  os_log_type_t v18 = sub_1001C11E0();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Waiting for data on NW connection", v19, 2u);
    swift_slowDealloc();
  }
  uint64_t v20 = *(int *)(v0 + 292);
  uint64_t v21 = *(void *)(v0 + 80);
  uint64_t v22 = *(void *)(v0 + 56);
  uint64_t v23 = *(void *)(v0 + 64);
  uint64_t v24 = *(void *)(v0 + 48);

  uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v25(v21, v22);
  if (*(unsigned char *)(v24 + v20) == 1)
  {
    (*(void (**)(void, void, void))(v0 + 216))(*(void *)(v0 + 72), *(void *)(v0 + 48) + *(int *)(v0 + 288), *(void *)(v0 + 56));
    uint64_t v26 = sub_1001C0330();
    os_log_type_t v27 = sub_1001C11F0();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Continuing iteration on NW connection that previously completed", v28, 2u);
      swift_slowDealloc();
    }
    uint64_t v29 = *(void *)(v0 + 72);
    uint64_t v30 = *(void *)(v0 + 56);

    v25(v29, v30);
    goto LABEL_29;
  }
  uint64_t v37 = **(void **)(v0 + 48);
  int v38 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v38;
  void *v38 = v0;
  v38[1] = sub_10017F3C0;
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v0 + 16, &unk_10020EB68, v37, sub_10018C600, v37, 0, 0, &type metadata for NWConnectionReceived);
}

uint64_t sub_10017E998()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10017EFFC;
  }
  else {
    uint64_t v2 = sub_10017EAAC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10017EAAC()
{
  (*(void (**)(void, void))(*(void *)(v0 + 120) + 8))(*(void *)(v0 + 128), *(void *)(v0 + 112));
  unint64_t v1 = *(void *)(v0 + 160);
  char v2 = *(unsigned char *)(v0 + 41);
  if (v1 >> 60 != 15)
  {
    *(unsigned char *)(*(void *)(v0 + 48) + *(int *)(v0 + 44)) = v2 & 1;
    if (v2)
    {
      if (*(void *)(v0 + 168))
      {
        uint64_t v32 = *(void *)(v0 + 152);
        unint64_t v31 = *(void *)(v0 + 160);
        sub_1001C0750();
        swift_retain();
        sub_10000D9E0(v32, v31);
        sub_1001C0700();
        uint64_t v33 = sub_1001C0550();
        *(void *)(v0 + 192) = v33;
        swift_release();
        swift_release();
        if (v33)
        {
          sub_1001C0740();
          if (swift_dynamicCastClass())
          {
            uint64_t v34 = *(int **)(*(void *)(v0 + 48) + *(int *)(*(void *)(v0 + 136) + 48));
            sub_1001C0730();
            uint64_t v41 = (uint64_t (*)(uint64_t))((char *)v34 + *v34);
            unint64_t v35 = (void *)swift_task_alloc();
            *(void *)(v0 + 200) = v35;
            *unint64_t v35 = v0;
            v35[1] = sub_10017F0D4;
            uint64_t v36 = *(void *)(v0 + 96);
            return v41(v36);
          }
          sub_1000A110C(*(void *)(v0 + 152), *(void *)(v0 + 160), *(void *)(v0 + 168));
          swift_release();
LABEL_22:
          long long v22 = *(_OWORD *)(v0 + 152);
LABEL_23:
          long long v42 = v22;
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          unint64_t v39 = *(uint64_t (**)(void, void))(v0 + 8);
          return v39(v42, *((void *)&v42 + 1));
        }
        unint64_t v27 = *(void *)(v0 + 160);
        uint64_t v28 = *(void *)(v0 + 168);
        uint64_t v26 = *(void *)(v0 + 152);
      }
      else
      {
        uint64_t v37 = *(void *)(v0 + 152);
        unint64_t v38 = *(void *)(v0 + 160);
        sub_10000D9E0(v37, v38);
        uint64_t v26 = v37;
        unint64_t v27 = v38;
        uint64_t v28 = 0;
      }
    }
    else
    {
      unint64_t v23 = *(void *)(v0 + 160);
      uint64_t v24 = *(void *)(v0 + 168);
      uint64_t v25 = *(void *)(v0 + 152);
      sub_10000D9E0(v25, v23);
      uint64_t v26 = v25;
      unint64_t v27 = v23;
      uint64_t v28 = v24;
    }
    sub_1000A110C(v26, v27, v28);
    goto LABEL_22;
  }
  sub_1000A110C(*(void *)(v0 + 152), v1, *(void *)(v0 + 168));
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v5 = type metadata accessor for NWAsyncConnection.Inbound.AsyncIterator(0);
  uint64_t v6 = *(int *)(v5 + 20);
  *(_DWORD *)(v0 + 288) = v6;
  *(_DWORD *)(v0 + 292) = *(_DWORD *)(v5 + 28);
  uint64_t v7 = *(void (**)(void, uint64_t, void))(v3 + 16);
  *(void *)(v0 + 216) = v7;
  v7(*(void *)(v0 + 80), v4 + v6, *(void *)(v0 + 56));
  uint64_t v8 = sub_1001C0330();
  os_log_type_t v9 = sub_1001C11E0();
  if (os_log_type_enabled(v8, v9))
  {
    unint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Waiting for data on NW connection", v10, 2u);
    swift_slowDealloc();
  }
  uint64_t v11 = *(int *)(v0 + 292);
  uint64_t v12 = *(void *)(v0 + 80);
  uint64_t v13 = *(void *)(v0 + 56);
  uint64_t v14 = *(void *)(v0 + 64);
  uint64_t v15 = *(void *)(v0 + 48);

  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v16(v12, v13);
  if (*(unsigned char *)(v15 + v11) == 1)
  {
    (*(void (**)(void, void, void))(v0 + 216))(*(void *)(v0 + 72), *(void *)(v0 + 48) + *(int *)(v0 + 288), *(void *)(v0 + 56));
    uint64_t v17 = sub_1001C0330();
    os_log_type_t v18 = sub_1001C11F0();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Continuing iteration on NW connection that previously completed", v19, 2u);
      swift_slowDealloc();
    }
    uint64_t v20 = *(void *)(v0 + 72);
    uint64_t v21 = *(void *)(v0 + 56);

    v16(v20, v21);
    long long v22 = xmmword_1001CE850;
    goto LABEL_23;
  }
  uint64_t v29 = **(void **)(v0 + 48);
  uint64_t v30 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v30;
  *uint64_t v30 = v0;
  v30[1] = sub_10017F3C0;
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v0 + 16, &unk_10020EB68, v29, sub_10018C600, v29, 0, 0, &type metadata for NWConnectionReceived);
}

uint64_t sub_10017EFFC()
{
  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[14];
  sub_1000A110C(v0[19], v0[20], v0[21]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10017F0D4()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 96);
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  sub_100010360(v2, &qword_100207FE8);
  if (v0) {
    uint64_t v3 = sub_10017F2E4;
  }
  else {
    uint64_t v3 = sub_10017F20C;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10017F20C()
{
  sub_1000A110C(v0[19], v0[20], v0[21]);
  swift_release();
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[20];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v3(v1, v2);
}

uint64_t sub_10017F2E4()
{
  unint64_t v1 = v0[20];
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[19];
  swift_release();
  sub_100007918(v3, v1);
  sub_1000A110C(v3, v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10017F3C0()
{
  *(void *)(*(void *)v1 + 232) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10017F9C4;
  }
  else {
    uint64_t v2 = sub_10017F4D4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10017F4D4()
{
  uint64_t v2 = *(void *)(v0 + 16);
  unint64_t v1 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  *(void *)(v0 + 240) = v2;
  *(void *)(v0 + 248) = v1;
  *(void *)(v0 + 256) = v3;
  if (*(unsigned char *)(v0 + 40))
  {
    uint64_t v4 = *(int *)(v0 + 44);
    uint64_t v5 = *(void *)(v0 + 48);
    *(unsigned char *)(v5 + *(int *)(v0 + 292)) = 1;
    *(unsigned char *)(v5 + v4) = 1;
    if (v3)
    {
      sub_1001C0750();
      swift_retain();
      sub_1001C0700();
      uint64_t v6 = sub_1001C0550();
      *(void *)(v0 + 264) = v6;
      swift_release();
      swift_release();
      if (v6)
      {
        sub_1001C0740();
        if (swift_dynamicCastClass())
        {
          uint64_t v7 = *(int **)(*(void *)(v0 + 48) + *(int *)(*(void *)(v0 + 136) + 48));
          sub_1001C0730();
          uint64_t v30 = (uint64_t (*)(uint64_t))((char *)v7 + *v7);
          uint64_t v8 = (void *)swift_task_alloc();
          *(void *)(v0 + 272) = v8;
          *uint64_t v8 = v0;
          v8[1] = sub_10017FA6C;
          uint64_t v9 = *(void *)(v0 + 88);
          return v30(v9);
        }
        swift_release();
      }
    }
    unint64_t v27 = *(void *)(v0 + 248);
    uint64_t v28 = *(void *)(v0 + 240);
    sub_10000D9E0(v28, v27);
    sub_100007918(v28, v27);
    swift_release();
    uint64_t v2 = *(void *)(v0 + 240);
    unint64_t v1 = *(void *)(v0 + 248);
    goto LABEL_21;
  }
  if (v1 >> 60 != 15)
  {
    sub_100007B14(v2, v1);
    sub_100007918(v2, v1);
    swift_release();
LABEL_21:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v29 = *(uint64_t (**)(uint64_t, unint64_t))(v0 + 8);
    return v29(v2, v1);
  }
  sub_100007918(v2, v1);
  swift_release();
  (*(void (**)(void, void, void))(v0 + 216))(*(void *)(v0 + 80), *(void *)(v0 + 48) + *(int *)(v0 + 288), *(void *)(v0 + 56));
  uint64_t v11 = sub_1001C0330();
  os_log_type_t v12 = sub_1001C11E0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Waiting for data on NW connection", v13, 2u);
    swift_slowDealloc();
  }
  uint64_t v14 = *(int *)(v0 + 292);
  uint64_t v15 = *(void *)(v0 + 80);
  uint64_t v16 = *(void *)(v0 + 56);
  uint64_t v17 = *(void *)(v0 + 64);
  uint64_t v18 = *(void *)(v0 + 48);

  uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
  v19(v15, v16);
  if (*(unsigned char *)(v18 + v14) == 1)
  {
    (*(void (**)(void, void, void))(v0 + 216))(*(void *)(v0 + 72), *(void *)(v0 + 48) + *(int *)(v0 + 288), *(void *)(v0 + 56));
    uint64_t v20 = sub_1001C0330();
    os_log_type_t v21 = sub_1001C11F0();
    if (os_log_type_enabled(v20, v21))
    {
      long long v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Continuing iteration on NW connection that previously completed", v22, 2u);
      swift_slowDealloc();
    }
    uint64_t v23 = *(void *)(v0 + 72);
    uint64_t v24 = *(void *)(v0 + 56);

    v19(v23, v24);
    uint64_t v2 = 0;
    unint64_t v1 = 0xF000000000000000;
    goto LABEL_21;
  }
  uint64_t v25 = **(void **)(v0 + 48);
  uint64_t v26 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v26;
  *uint64_t v26 = v0;
  v26[1] = sub_10017F3C0;
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v0 + 16, &unk_10020EB68, v25, sub_10018C600, v25, 0, 0, &type metadata for NWConnectionReceived);
}

uint64_t sub_10017F9C4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10017FA6C()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 88);
  *(void *)(*(void *)v1 + 280) = v0;
  swift_task_dealloc();
  sub_100010360(v2, &qword_100207FE8);
  if (v0) {
    uint64_t v3 = sub_10017FC90;
  }
  else {
    uint64_t v3 = sub_10017FBA4;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10017FBA4()
{
  swift_release();
  unint64_t v1 = v0[31];
  uint64_t v2 = v0[30];
  sub_10000D9E0(v2, v1);
  sub_100007918(v2, v1);
  swift_release();
  uint64_t v3 = v0[30];
  uint64_t v4 = v0[31];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v5(v3, v4);
}

uint64_t sub_10017FC90()
{
  uint64_t v2 = v0[30];
  unint64_t v1 = v0[31];
  swift_release();
  sub_100007918(v2, v1);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10017FD58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8)
{
  *(void *)(v8 + 264) = v18;
  *(void *)(v8 + 272) = v19;
  *(_OWORD *)(v8 + 248) = v17;
  *(unsigned char *)(v8 + 481) = a7;
  *(void *)(v8 + 232) = a6;
  *(void *)(v8 + 240) = a8;
  *(unsigned char *)(v8 + 480) = a5;
  *(void *)(v8 + 216) = a3;
  *(void *)(v8 + 224) = a4;
  *(void *)(v8 + 200) = a1;
  *(void *)(v8 + 208) = a2;
  uint64_t v9 = sub_1001BF310();
  *(void *)(v8 + 280) = v9;
  *(void *)(v8 + 288) = *(void *)(v9 - 8);
  *(void *)(v8 + 296) = swift_task_alloc();
  uint64_t v10 = sub_1001BFD90();
  *(void *)(v8 + 304) = v10;
  *(void *)(v8 + 312) = *(void *)(v10 - 8);
  *(void *)(v8 + 320) = swift_task_alloc();
  *(void *)(v8 + 328) = swift_task_alloc();
  uint64_t v11 = sub_1001BFDC0();
  *(void *)(v8 + 336) = v11;
  *(void *)(v8 + 344) = *(void *)(v11 - 8);
  *(void *)(v8 + 352) = swift_task_alloc();
  *(void *)(v8 + 360) = swift_task_alloc();
  uint64_t v12 = sub_1001BFB30();
  *(void *)(v8 + 368) = v12;
  *(void *)(v8 + 376) = *(void *)(v12 - 8);
  *(void *)(v8 + 384) = swift_task_alloc();
  uint64_t v13 = sub_100003918(qword_100208000);
  *(void *)(v8 + 392) = v13;
  *(void *)(v8 + 400) = *(void *)(v13 - 8);
  *(void *)(v8 + 408) = swift_task_alloc();
  uint64_t v14 = sub_1001BF950();
  *(void *)(v8 + 416) = v14;
  *(void *)(v8 + 424) = *(void *)(v14 - 8);
  *(void *)(v8 + 432) = swift_task_alloc();
  type metadata accessor for TC2CloudAttestationVerifier();
  *(void *)(v8 + 440) = swift_task_alloc();
  return _swift_task_switch(sub_100180058, 0, 0);
}

uint64_t sub_100180058()
{
  uint64_t v1 = *(void *)(v0 + 432);
  uint64_t v3 = *(void *)(v0 + 416);
  uint64_t v2 = *(void *)(v0 + 424);
  uint64_t v4 = *(void *)(v0 + 400);
  uint64_t v23 = *(void *)(v0 + 408);
  uint64_t v24 = *(void *)(v0 + 392);
  uint64_t v5 = *(void *)(v0 + 376);
  uint64_t v27 = *(void *)(v0 + 384);
  uint64_t v28 = *(void *)(v0 + 368);
  uint64_t v29 = *(void *)(v0 + 440);
  uint64_t v30 = *(void *)(v0 + 264);
  uint64_t v34 = *(void *)(v0 + 240);
  uint64_t v35 = *(void *)(v0 + 256);
  unsigned __int8 v33 = *(unsigned char *)(v0 + 480);
  uint64_t v6 = *(void *)(v0 + 224);
  uint64_t v32 = *(void *)(v0 + 232);
  uint64_t v7 = *(void *)(v0 + 216);
  uint64_t v26 = *(void *)(v0 + 208);
  unsigned __int8 v31 = *(unsigned char *)(v0 + 481) & 1;
  uint64_t v25 = *(void *)(v7 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_rateLimiter);
  sub_10018C4E8(v7 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_attestationVerifier, v29, (uint64_t (*)(void))type metadata accessor for TC2CloudAttestationVerifier);
  uint64_t v8 = v7 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_config;
  uint64_t v9 = *(void *)(v7 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_serverDrivenConfig);
  uint64_t v10 = (_OWORD *)(v7 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo);
  long long v12 = *(_OWORD *)(v7 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo + 16);
  long long v11 = *(_OWORD *)(v7 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo + 32);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v7 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo);
  *(_OWORD *)(v0 + 32) = v12;
  *(_OWORD *)(v0 + 48) = v11;
  long long v13 = v10[6];
  long long v15 = v10[3];
  long long v14 = v10[4];
  *(_OWORD *)(v0 + 96) = v10[5];
  *(_OWORD *)(v0 + 112) = v13;
  *(_OWORD *)(v0 + 64) = v15;
  *(_OWORD *)(v0 + 80) = v14;
  long long v16 = v10[10];
  long long v18 = v10[7];
  long long v17 = v10[8];
  *(_OWORD *)(v0 + 160) = v10[9];
  *(_OWORD *)(v0 + 176) = v16;
  *(_OWORD *)(v0 + 128) = v18;
  *(_OWORD *)(v0 + 144) = v17;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v6, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v23, v7 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_thimbledEventContinuation, v24);
  sub_100003918(&qword_10020C500);
  uint64_t v19 = (void *)swift_allocObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v27, v8, v28);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100016110(v0 + 16);
  swift_bridgeObjectRetain();
  uint64_t v20 = swift_bridgeObjectRetain();
  *(void *)(v0 + 448) = sub_10018B20C(v26, v25, v29, v27, v9, (_OWORD *)(v0 + 16), v1, v23, v33, v32, v31, v34, v20, v35, v30, v19);
  uint64_t v36 = (uint64_t (*)(void))((char *)&dword_10020EA88 + dword_10020EA88);
  os_log_type_t v21 = (void *)swift_task_alloc();
  *(void *)(v0 + 456) = v21;
  *os_log_type_t v21 = v0;
  v21[1] = sub_100180334;
  return v36();
}

uint64_t sub_100180334(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 464) = a1;
  *(void *)(v3 + 472) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_100180A28;
  }
  else {
    uint64_t v4 = sub_100180448;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_100180448()
{
  long long v57 = v0;
  uint64_t v1 = v0[58];
  uint64_t v43 = *(void *)(v1 + 16);
  if (v43)
  {
    uint64_t v2 = v0[43];
    uint64_t v3 = v0[39];
    uint64_t v41 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v51 = (void (**)(uint64_t, unint64_t, uint64_t))(v3 + 16);
    uint64_t v39 = v3;
    id v50 = (void (**)(uint64_t, uint64_t))(v3 + 8);
    uint64_t v42 = v2;
    uint64_t v4 = (void (**)(uint64_t, uint64_t))(v2 + 8);
    unint64_t v45 = (void (**)(uint64_t, uint64_t))(v0[36] + 8);
    uint64_t result = swift_bridgeObjectRetain();
    unint64_t v6 = 0;
    uint64_t v40 = v1;
    long long v53 = v4;
    while (v6 < *(void *)(v1 + 16))
    {
      long long v54 = *(void (**)(void, unint64_t, void))(v42 + 16);
      v54(v0[45], v41 + *(void *)(v42 + 72) * v6, v0[42]);
      uint64_t v7 = sub_1001BFDB0();
      uint64_t v8 = *(void *)(v7 + 16);
      if (v8)
      {
        unint64_t v44 = v6;
        unint64_t v9 = v7 + ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80));
        uint64_t v52 = *(void *)(v39 + 72);
        do
        {
          uint64_t v13 = v0[41];
          uint64_t v14 = v0[40];
          uint64_t v15 = v0[38];
          v54(v0[44], v0[45], v0[42]);
          long long v16 = *v51;
          (*v51)(v13, v9, v15);
          v16(v14, v9, v15);
          long long v17 = sub_1001C0330();
          os_log_type_t v18 = sub_1001C1200();
          long long v55 = v17;
          BOOL v19 = os_log_type_enabled(v17, v18);
          uint64_t v20 = v0[44];
          uint64_t v21 = v0[41];
          uint64_t v22 = v0[42];
          uint64_t v23 = v0[38];
          if (v19)
          {
            os_log_type_t type = v18;
            uint64_t v24 = v0[37];
            uint64_t v46 = v0[42];
            uint64_t v47 = v0[38];
            uint64_t v25 = v0[35];
            uint64_t v48 = v0[40];
            uint64_t v26 = swift_slowAlloc();
            v56[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v26 = 136315650;
            sub_1001BFD20();
            sub_10018C778(qword_100207DC0, (void (*)(uint64_t))&type metadata accessor for UUID);
            uint64_t v27 = sub_1001C1780();
            unint64_t v29 = v28;
            (*v45)(v24, v25);
            *(void *)(v26 + 4) = sub_1000DF238(v27, v29, v56);
            swift_bridgeObjectRelease();
            long long v12 = *v53;
            (*v53)(v20, v46);
            *(_WORD *)(v26 + 12) = 2080;
            uint64_t v30 = sub_1001BFD60();
            *(void *)(v26 + 14) = sub_1000DF238(v30, v31, v56);
            swift_bridgeObjectRelease();
            uint64_t v32 = *v50;
            (*v50)(v21, v47);
            *(_WORD *)(v26 + 22) = 1024;
            LODWORD(v25) = sub_1001BFD70() & 1;
            v32(v48, v47);
            *(_DWORD *)(v26 + 24) = v25;
            _os_log_impl((void *)&_mh_execute_header, v55, type, "%s %s saved: %{BOOL}d", (uint8_t *)v26, 0x1Cu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            uint64_t v10 = v0[41];
            long long v11 = *v50;
            (*v50)(v0[40], v0[38]);
            long long v12 = *v53;
            (*v53)(v20, v22);
            v11(v10, v23);
          }

          v9 += v52;
          --v8;
        }
        while (v8);
        swift_bridgeObjectRelease();
        uint64_t v1 = v40;
        uint64_t v4 = v53;
        unint64_t v6 = v44;
      }
      else
      {
        swift_bridgeObjectRelease();
        long long v12 = *v4;
      }
      ++v6;
      uint64_t result = ((uint64_t (*)(void, void))v12)(v0[45], v0[42]);
      if (v6 == v43)
      {
        swift_bridgeObjectRelease();
        uint64_t v1 = v0[58];
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    uint64_t v33 = v0[59];
    v0[24] = v1;
    sub_100003918(&qword_10020EA90);
    sub_10018B678();
    uint64_t v35 = sub_1001BEDF0();
    if (v33)
    {
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v37 = v34;
      unint64_t v38 = (uint64_t *)v0[25];
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t *v38 = v35;
      v38[1] = v37;
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v36 = (uint64_t (*)(void))v0[1];
    return v36();
  }
  return result;
}

uint64_t sub_100180A28()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100180B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v9 + 320) = v19;
  *(void *)(v9 + 328) = v8;
  *(_OWORD *)(v9 + 304) = v18;
  *(void *)(v9 + 288) = a7;
  *(void *)(v9 + 296) = a8;
  *(void *)(v9 + 272) = a5;
  *(void *)(v9 + 280) = a6;
  *(void *)(v9 + 256) = a3;
  *(void *)(v9 + 264) = a4;
  *(void *)(v9 + 248) = a1;
  uint64_t v10 = sub_1001C03E0();
  *(void *)(v9 + 336) = v10;
  *(void *)(v9 + 344) = *(void *)(v10 - 8);
  *(void *)(v9 + 352) = swift_task_alloc();
  uint64_t v11 = sub_1001C0420();
  *(void *)(v9 + 360) = v11;
  *(void *)(v9 + 368) = *(void *)(v11 - 8);
  *(void *)(v9 + 376) = swift_task_alloc();
  *(void *)(v9 + 384) = swift_task_alloc();
  uint64_t v12 = sub_100003918(&qword_10020C028);
  *(void *)(v9 + 392) = v12;
  *(void *)(v9 + 400) = *(void *)(v12 - 8);
  *(void *)(v9 + 408) = swift_task_alloc();
  uint64_t v13 = sub_1001BF8D0();
  *(void *)(v9 + 416) = v13;
  *(void *)(v9 + 424) = *(void *)(v13 - 8);
  *(void *)(v9 + 432) = swift_task_alloc();
  uint64_t v14 = sub_1001BF310();
  *(void *)(v9 + 440) = v14;
  *(void *)(v9 + 448) = *(void *)(v14 - 8);
  *(void *)(v9 + 456) = swift_task_alloc();
  uint64_t v15 = sub_1001BFDC0();
  *(void *)(v9 + 464) = v15;
  *(void *)(v9 + 472) = *(void *)(v15 - 8);
  *(void *)(v9 + 480) = swift_task_alloc();
  return _swift_task_switch(sub_100180DC8, 0, 0);
}

uint64_t sub_100180DC8()
{
  uint64_t v54 = v0;
  *(void *)(v0 + 232) = 0;
  (*(void (**)(void, void, void))(*(void *)(v0 + 448) + 16))(*(void *)(v0 + 456), *(void *)(v0 + 256), *(void *)(v0 + 440));
  sub_1001BFD30();
  sub_10018C778(qword_100207DC0, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v52 = sub_1001C1780();
  unint64_t v53 = v1;
  v56._uint64_t countAndFlagsBits = 58;
  v56._object = (void *)0xE100000000000000;
  sub_1001C0D00(v56);
  uint64_t v3 = v52;
  unint64_t v2 = v53;
  *(void *)(v0 + 488) = v52;
  *(void *)(v0 + 496) = v2;
  unint64_t v50 = v2;
  swift_bridgeObjectRetain_n();
  uint64_t v4 = sub_1001C0330();
  os_log_type_t v5 = sub_1001C1200();
  uint64_t v46 = v3;
  if (os_log_type_enabled(v4, v5))
  {
    unint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    *(_DWORD *)unint64_t v6 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 240) = sub_1000DF238(v3, v50, &v52);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s executing prefetch request", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v47 = *(void *)(v0 + 480);
  uint64_t v7 = *(void *)(v0 + 432);
  uint64_t v8 = *(void *)(v0 + 408);
  uint64_t v36 = *(void *)(v0 + 400);
  uint64_t v37 = *(void *)(v0 + 392);
  uint64_t v48 = *(void *)(v0 + 376);
  uint64_t v49 = *(void *)(v0 + 384);
  uint64_t v38 = *(void *)(v0 + 368);
  uint64_t v39 = *(void *)(v0 + 360);
  uint64_t v9 = *(void *)(v0 + 328);
  long long v42 = *(_OWORD *)(v0 + 304);
  uint64_t v44 = *(void *)(v0 + 320);
  uint64_t v45 = *(void *)(v0 + 280);
  uint64_t v43 = *(void *)(v0 + 272);
  uint64_t v10 = (void *)(v9 + *(void *)(*(void *)v9 + 208));
  uint64_t v11 = (void (*)(char *, uint64_t, uint64_t))v10[3];
  uint64_t v35 = v10[4];
  long long v40 = *(_OWORD *)(v0 + 288);
  long long v41 = *(_OWORD *)(v0 + 256);
  sub_10000D934(v10, (uint64_t)v11);
  uint64_t v12 = (_OWORD *)(v9 + *(void *)(*(void *)v9 + 224));
  *(void *)(v0 + 216) = &type metadata for SystemInfo;
  *(void *)(v0 + 224) = &protocol witness table for SystemInfo;
  uint64_t v13 = (_OWORD *)swift_allocObject();
  *(void *)(v0 + 192) = v13;
  long long v15 = v12[1];
  long long v14 = v12[2];
  *(_OWORD *)(v0 + 16) = *v12;
  *(_OWORD *)(v0 + 32) = v15;
  *(_OWORD *)(v0 + 48) = v14;
  long long v16 = v12[6];
  long long v18 = v12[3];
  long long v17 = v12[4];
  *(_OWORD *)(v0 + 96) = v12[5];
  *(_OWORD *)(v0 + 112) = v16;
  *(_OWORD *)(v0 + 64) = v18;
  *(_OWORD *)(v0 + 80) = v17;
  long long v19 = v12[10];
  long long v21 = v12[7];
  long long v20 = v12[8];
  *(_OWORD *)(v0 + 160) = v12[9];
  *(_OWORD *)(v0 + 176) = v19;
  *(_OWORD *)(v0 + 128) = v21;
  *(_OWORD *)(v0 + 144) = v20;
  long long v22 = *v12;
  long long v23 = v12[2];
  _OWORD v13[2] = v12[1];
  v13[3] = v23;
  v13[1] = v22;
  long long v24 = v12[3];
  long long v25 = v12[4];
  long long v26 = v12[6];
  v13[6] = v12[5];
  v13[7] = v26;
  v13[4] = v24;
  _OWORD v13[5] = v25;
  long long v27 = v12[7];
  long long v28 = v12[8];
  long long v29 = v12[10];
  v13[10] = v12[9];
  v13[11] = v29;
  unsigned char v13[8] = v27;
  v13[9] = v28;
  sub_100016110(v0 + 16);
  TC2Configuration.environment(systemInfo:)(v0 + 192, v11, v35, v7);
  sub_100003E90(v0 + 192);
  sub_10000D934(v10, v10[3]);
  sub_1001BFA10();
  sub_1001BF8F0();
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v8, v37);
  LOBYTE(v12) = *(unsigned char *)(v0 + 568);
  char v30 = sub_1001BF870();
  *(void *)(v0 + 504) = sub_1000D6310((char)v12, v30 & 1, 1, *(void *)(v9 + *(void *)(*(void *)v9 + 256)), *(void *)(v9 + *(void *)(*(void *)v9 + 256) + 8));
  sub_1001BF8B0();
  (*(void (**)(uint64_t, void, uint64_t))(v38 + 104))(v49, enum case for NWEndpoint.url(_:), v39);
  sub_1001C0410();
  *(void *)(v0 + 512) = sub_1001C03F0();
  sub_1000A0DDC();
  *(void *)(v0 + 520) = sub_1001C1240();
  uint64_t v31 = swift_task_alloc();
  *(void *)(v0 + 528) = v31;
  *(void *)(v31 + 16) = v9;
  *(void *)(v31 + 24) = v46;
  *(void *)(v31 + 32) = v50;
  *(_OWORD *)(v31 + 40) = v42;
  *(void *)(v31 + 56) = v44;
  *(void *)(v31 + 64) = v7;
  *(_OWORD *)(v31 + 72) = v40;
  *(void *)(v31 + 88) = v43;
  *(void *)(v31 + 96) = v0 + 232;
  *(void *)(v31 + 104) = v47;
  *(_OWORD *)(v31 + 112) = v41;
  *(void *)(v31 + 128) = v45;
  uint64_t v32 = swift_task_alloc();
  *(void *)(v0 + 536) = v32;
  *(void *)(v32 + 16) = &unk_10020EAB8;
  *(void *)(v32 + 24) = v31;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v48, v49, v39);
  sub_1001C0650();
  swift_allocObject();
  swift_retain();
  *(void *)(v0 + 544) = sub_1001C05F0();
  swift_retain();
  sub_1001C0510();
  uint64_t v51 = (uint64_t (*)(void))((char *)&dword_10020C050 + dword_10020C050);
  uint64_t v33 = (void *)swift_task_alloc();
  *(void *)(v0 + 552) = v33;
  *uint64_t v33 = v0;
  v33[1] = sub_1001813D8;
  return v51();
}

uint64_t sub_1001813D8()
{
  *(void *)(*(void *)v1 + 560) = v0;
  swift_task_dealloc();
  if (v0) {
    unint64_t v2 = sub_100181730;
  }
  else {
    unint64_t v2 = sub_1001814EC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001814EC()
{
  uint64_t v13 = (void *)v0[65];
  uint64_t v1 = v0[60];
  uint64_t v19 = v0[61];
  unint64_t v20 = v0[62];
  uint64_t v2 = v0[59];
  uint64_t v18 = v0[58];
  uint64_t v3 = v0[53];
  uint64_t v15 = v0[52];
  uint64_t v16 = v0[54];
  uint64_t v12 = v0[48];
  uint64_t v4 = v0[46];
  uint64_t v5 = v0[44];
  uint64_t v6 = v0[45];
  uint64_t v8 = v0[42];
  uint64_t v7 = v0[43];
  uint64_t v17 = v0[41];
  uint64_t v14 = v0[31];
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v5, enum case for NWActivity.CompletionReason.success(_:), v8);
  sub_1001C0400();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v8);
  swift_release();
  swift_release();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v12, v6);

  swift_release();
  swift_release();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v16, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v14, v1, v18);
  uint64_t v9 = v0[29];
  sub_10018ACD0(v17, v19, v20, "%s finished prefetch request");
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v18);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(uint64_t))v0[1];
  return v10(v9);
}

uint64_t sub_100181730()
{
  uint64_t v11 = (void *)v0[65];
  uint64_t v15 = v0[61];
  uint64_t v1 = v0[59];
  unint64_t v16 = v0[62];
  uint64_t v17 = v0[58];
  uint64_t v18 = v0[60];
  uint64_t v2 = v0[53];
  uint64_t v14 = v0[54];
  uint64_t v13 = v0[52];
  uint64_t v10 = v0[48];
  uint64_t v3 = v0[46];
  uint64_t v4 = v0[44];
  uint64_t v5 = v0[45];
  uint64_t v7 = v0[42];
  uint64_t v6 = v0[43];
  uint64_t v12 = v0[41];
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v4, enum case for NWActivity.CompletionReason.failure(_:), v7);
  sub_1001C0400();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v7);
  swift_willThrow();
  swift_release();
  swift_release();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v10, v5);

  swift_release();
  swift_release();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v14, v13);
  sub_10018ACD0(v12, v15, v16, "%s finished prefetch request");
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v18, v17);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_10018194C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 240) = v23;
  *(_OWORD *)(v8 + 208) = v21;
  *(_OWORD *)(v8 + 224) = v22;
  *(_OWORD *)(v8 + 176) = v19;
  *(_OWORD *)(v8 + 192) = v20;
  *(_OWORD *)(v8 + 160) = v18;
  *(void *)(v8 + 144) = a7;
  *(void *)(v8 + 152) = a8;
  *(void *)(v8 + 128) = a5;
  *(void *)(v8 + 136) = a6;
  *(void *)(v8 + 112) = a2;
  *(void *)(v8 + 120) = a3;
  *(void *)(v8 + 248) = type metadata accessor for ThimbledEvent();
  *(void *)(v8 + 256) = swift_task_alloc();
  uint64_t v9 = sub_100003918(qword_100208000);
  *(void *)(v8 + 264) = v9;
  *(void *)(v8 + 272) = *(void *)(v9 - 8);
  *(void *)(v8 + 280) = swift_task_alloc();
  uint64_t v10 = sub_100003918(&qword_100208A00);
  *(void *)(v8 + 288) = v10;
  *(void *)(v8 + 296) = *(void *)(v10 - 8);
  *(void *)(v8 + 304) = swift_task_alloc();
  uint64_t v11 = sub_1001BF950();
  *(void *)(v8 + 312) = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  *(void *)(v8 + 320) = v12;
  *(void *)(v8 + 328) = *(void *)(v12 + 64);
  *(void *)(v8 + 336) = swift_task_alloc();
  sub_100003918(&qword_10020EAC8);
  *(void *)(v8 + 344) = swift_task_alloc();
  uint64_t v13 = sub_1001C03B0();
  *(void *)(v8 + 352) = v13;
  *(void *)(v8 + 360) = *(void *)(v13 - 8);
  *(void *)(v8 + 368) = swift_task_alloc();
  *(void *)(v8 + 376) = swift_task_alloc();
  uint64_t v14 = sub_100003918(&qword_10020C068);
  *(void *)(v8 + 384) = v14;
  *(void *)(v8 + 392) = *(void *)(v14 - 8);
  *(void *)(v8 + 400) = swift_task_alloc();
  sub_1001C0440();
  *(void *)(v8 + 408) = swift_task_alloc();
  uint64_t v15 = sub_1001C0460();
  *(void *)(v8 + 416) = v15;
  *(void *)(v8 + 424) = *(void *)(v15 - 8);
  *(void *)(v8 + 432) = swift_task_alloc();
  *(void *)(v8 + 440) = swift_task_alloc();
  *(void *)(v8 + 448) = swift_task_alloc();
  *(void *)(v8 + 456) = type metadata accessor for Proto_Ropes_HttpService_PrefetchRequest(0);
  *(void *)(v8 + 464) = swift_task_alloc();
  return _swift_task_switch(sub_100181D00, 0, 0);
}

uint64_t sub_100181D00()
{
  unint64_t v71 = v0;
  v0[59] = qword_10020F458;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C1200();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v4 = v0[19];
    unint64_t v3 = v0[20];
    uint64_t v6 = v0[17];
    unint64_t v5 = v0[18];
    uint64_t v7 = swift_slowAlloc();
    v70[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    swift_bridgeObjectRetain();
    v0[12] = sub_1000DF238(v6, v5, v70);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[13] = sub_1000DF238(v4, v3, v70);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s sending request with parameters: %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v8 = v0[21];
  *(void *)(swift_task_alloc() + 16) = v8;
  sub_10018C778(&qword_10020A848, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_PrefetchRequest);
  sub_1001C0060();
  swift_task_dealloc();
  uint64_t v9 = sub_1001C0000();
  v0[60] = v9;
  v0[61] = v10;
  unint64_t v63 = v10;
  uint64_t v64 = v9;
  uint64_t v58 = v0[56];
  uint64_t v69 = v0[55];
  uint64_t v11 = v0[53];
  uint64_t v12 = v0[50];
  uint64_t v13 = v0[49];
  uint64_t v66 = v0[48];
  uint64_t v67 = v0[52];
  uint64_t v14 = v0[45];
  os_log_t log = (os_log_t)v0[47];
  uint64_t v56 = v0[44];
  uint64_t v54 = v0[23];
  uint64_t v15 = v0[16];
  sub_1001C0430();
  sub_1001BF880();
  sub_10000D934((void *)(v15 + *(void *)(*(void *)v15 + 208)), *(void *)(v15 + *(void *)(*(void *)v15 + 208) + 24));
  sub_1001BF9D0();
  sub_1001BF8F0();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v66);
  unint64_t v16 = *(void (**)(os_log_t, uint64_t, uint64_t))(v14 + 16);
  v16(log, v54, v56);
  sub_1001C0450();
  uint64_t v17 = v67;
  uint64_t v68 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
  v68(v69, v58, v17);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  long long v18 = sub_1001C0330();
  os_log_type_t v19 = sub_1001C1200();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v21 = v0[55];
  uint64_t v65 = v16;
  if (v20)
  {
    uint64_t v22 = v0[53];
    uint64_t v23 = v0[54];
    os_log_type_t type = v19;
    uint64_t v24 = v0[52];
    unint64_t v25 = v0[18];
    unint64_t v57 = v0[20];
    uint64_t v59 = v0[19];
    uint64_t v26 = v0[17];
    uint64_t v27 = swift_slowAlloc();
    v70[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 136315650;
    swift_bridgeObjectRetain();
    v0[9] = sub_1000DF238(v26, v25, v70);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v27 + 12) = 2080;
    v68(v23, v21, v24);
    uint64_t v28 = sub_1001C0C50();
    v0[10] = sub_1000DF238(v28, v29, v70);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    char v30 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v30(v21, v24);
    *(_WORD *)(v27 + 22) = 2080;
    swift_bridgeObjectRetain();
    v0[11] = sub_1000DF238(v59, v57, v70);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v18, type, "%s sending request: %s with parameters: %s", (uint8_t *)v27, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    unint64_t v16 = v65;
    swift_slowDealloc();
  }
  else
  {
    uint64_t v31 = v0[52];
    uint64_t v32 = v0[53];

    swift_bridgeObjectRelease_n();
    char v30 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
    v30(v21, v31);
    swift_bridgeObjectRelease_n();
  }
  v0[62] = v30;
  v16((os_log_t)v0[46], v0[23], v0[44]);
  swift_bridgeObjectRetain_n();
  uint64_t v33 = sub_1001C0330();
  os_log_type_t v34 = sub_1001C1200();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v60 = v0[47];
    uint64_t v35 = v0[45];
    *(void *)uint64_t typea = v0[46];
    uint64_t v36 = v0[44];
    uint64_t v38 = v0[17];
    unint64_t v37 = v0[18];
    uint64_t v39 = swift_slowAlloc();
    v70[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v39 = 136315394;
    swift_bridgeObjectRetain();
    v0[7] = sub_1000DF238(v38, v37, v70);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v39 + 12) = 2080;
    v65(v60, *(void *)typea, v36);
    uint64_t v40 = sub_1001C0C40();
    v0[8] = sub_1000DF238(v40, v41, v70);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    (*(void (**)(os_log_type_t *, uint64_t))(v35 + 8))(*(os_log_type_t **)typea, v36);
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "%s headers: %s", (uint8_t *)v39, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v43 = v0[45];
    uint64_t v42 = v0[46];
    uint64_t v44 = v0[44];

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v44);
  }
  uint64_t v45 = v0[56];
  uint64_t v46 = v0[54];
  uint64_t v47 = v0[52];
  uint64_t v48 = v0[15];
  sub_1001C0570();
  v68(v46, v45, v47);
  sub_100007B14(v64, v63);
  uint64_t v49 = sub_1001C0560();
  v0[63] = v49;
  uint64_t v50 = swift_task_alloc();
  v0[64] = v50;
  *(void *)(v50 + 16) = v48;
  *(void *)(v50 + 24) = v64;
  *(void *)(v50 + 32) = v63;
  *(void *)(v50 + 40) = v49;
  *(unsigned char *)(v50 + 48) = 1;
  uint64_t v51 = (void *)swift_task_alloc();
  v0[65] = v51;
  *uint64_t v51 = v0;
  v51[1] = sub_10018274C;
  uint64_t v52 = v0[15];
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v51, &unk_10020C090, v50, sub_1000A10C0, v52, 0, 0, (char *)&type metadata for () + 8);
}

uint64_t sub_10018274C()
{
  *(void *)(*(void *)v1 + 528) = v0;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v2 = sub_100182C84;
  }
  else
  {
    swift_task_dealloc();
    os_log_type_t v2 = sub_100182868;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100182868()
{
  uint64_t v1 = *(void *)(v0 + 480);
  unint64_t v2 = *(void *)(v0 + 488);
  swift_release();
  sub_10000792C(v1, v2);
  swift_bridgeObjectRetain_n();
  unint64_t v3 = sub_1001C0330();
  os_log_type_t v4 = sub_1001C11D0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v6 = *(void *)(v0 + 136);
    unint64_t v5 = *(void *)(v0 + 144);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 48) = sub_1000DF238(v6, v5, &v37);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s waiting for response", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v8 = *(void *)(v0 + 336);
  uint64_t v29 = *(void *)(v0 + 344);
  uint64_t v9 = *(void *)(v0 + 320);
  uint64_t v10 = *(void *)(v0 + 328);
  uint64_t v11 = *(void *)(v0 + 312);
  uint64_t v35 = *(void *)(v0 + 240);
  uint64_t v12 = *(void *)(v0 + 200);
  uint64_t v33 = *(void *)(v0 + 208);
  uint64_t v34 = *(void *)(v0 + 216);
  uint64_t v30 = *(void *)(v0 + 192);
  uint64_t v32 = *(void *)(v0 + 168);
  uint64_t v13 = *(void *)(v0 + 136);
  uint64_t v26 = v13;
  uint64_t v27 = *(void *)(v0 + 144);
  uint64_t v14 = *(void *)(v0 + 128);
  uint64_t v28 = *(void *)(v0 + 112);
  long long v31 = *(_OWORD *)(v0 + 224);
  (*(void (**)(uint64_t))(v9 + 16))(v8);
  unint64_t v15 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v16 = (v10 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = (char *)swift_allocObject();
  *((void *)v17 + 2) = v14;
  *((void *)v17 + 3) = v13;
  *((void *)v17 + 4) = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(&v17[v15], v8, v11);
  *(void *)&v17[v16] = v12;
  long long v18 = (void *)swift_allocObject();
  v18[2] = v14;
  v18[3] = v13;
  v18[4] = v27;
  sub_10018C4E8(v28, v29, type metadata accessor for NWAsyncConnection.Inbound);
  uint64_t v19 = sub_100003918(&qword_10020EAF0);
  BOOL v20 = (void *)(v29 + *(int *)(v19 + 36));
  *BOOL v20 = &unk_10020EAD8;
  v20[1] = v17;
  uint64_t v21 = (void *)(v29 + *(int *)(v19 + 40));
  *uint64_t v21 = &unk_10020EAE8;
  v21[1] = v18;
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = _swiftEmptyArrayStorage;
  uint64_t v22 = sub_1001BFD90();
  uint64_t v23 = swift_task_alloc();
  *(void *)(v0 + 536) = v23;
  *(void *)(v23 + 16) = v29;
  *(void *)(v23 + 24) = v14;
  *(void *)(v23 + 32) = v26;
  *(void *)(v23 + 40) = v27;
  *(void *)(v23 + 48) = v0 + 32;
  *(void *)(v23 + 56) = v33;
  *(void *)(v23 + 64) = v0 + 40;
  *(void *)(v23 + 72) = v34;
  *(void *)(v23 + 80) = v32;
  *(void *)(v23 + 88) = v30;
  *(_OWORD *)(v23 + 96) = v31;
  *(void *)(v23 + 112) = v12;
  *(void *)(v23 + 120) = v35;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v24 = (void *)swift_task_alloc();
  *(void *)(v0 + 544) = v24;
  *uint64_t v24 = v0;
  v24[1] = sub_100182E04;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v24, v22, (char *)&type metadata for () + 8, 0, 0, &unk_10020EB00, v23, v22);
}

uint64_t sub_100182C84()
{
  unint64_t v1 = v0[61];
  unint64_t v2 = (void (*)(uint64_t, uint64_t))v0[62];
  uint64_t v3 = v0[60];
  uint64_t v4 = v0[58];
  uint64_t v5 = v0[56];
  uint64_t v6 = v0[52];
  swift_task_dealloc();
  swift_release();
  sub_10000792C(v3, v1);
  sub_10000792C(v3, v1);
  v2(v5, v6);
  sub_10018C608(v4, type metadata accessor for Proto_Ropes_HttpService_PrefetchRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100182E04()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_100182F1C, 0, 0);
}

uint64_t sub_100182F1C()
{
  uint64_t v2 = v0[60];
  unint64_t v1 = v0[61];
  uint64_t v3 = v0[58];
  uint64_t v4 = v0[56];
  if (v0[4])
  {
    uint64_t v24 = v0[58];
    uint64_t v5 = v0[53];
    uint64_t v22 = v0[52];
    uint64_t v23 = v0[43];
    uint64_t v18 = v0[38];
    unint64_t v19 = v0[61];
    uint64_t v20 = v0[60];
    uint64_t v6 = v0[37];
    uint64_t v21 = v0[36];
    uint64_t v8 = v0[34];
    uint64_t v7 = v0[35];
    uint64_t v9 = v0[32];
    uint64_t v10 = v0[33];
    uint64_t v11 = v0[16];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v11 + *(void *)(*(void *)v11 + 240), v10);
    char v12 = *(unsigned char *)(v11 + *(void *)(*(void *)v11 + 248));
    *(void *)uint64_t v9 = v0[5];
    *(unsigned char *)(v9 + 8) = v12;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1001C0FE0();
    sub_10000792C(v20, v19);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v10);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v18, v21);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v22);
    sub_10018C608(v24, type metadata accessor for Proto_Ropes_HttpService_PrefetchRequest);
    sub_100010360(v23, &qword_10020EAC8);
  }
  else
  {
    uint64_t v15 = v0[52];
    uint64_t v14 = v0[53];
    uint64_t v16 = v0[43];
    sub_1001BF810();
    sub_10018C778(&qword_10020D938, (void (*)(uint64_t))&type metadata accessor for TrustedCloudComputeError);
    swift_allocError();
    sub_1001BF800();
    swift_willThrow();
    sub_10000792C(v2, v1);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v4, v15);
    sub_10018C608(v3, type metadata accessor for Proto_Ropes_HttpService_PrefetchRequest);
    sub_100010360(v16, &qword_10020EAC8);
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_10018332C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[9] = a5;
  v6[10] = a6;
  v6[7] = a3;
  v6[8] = a4;
  v6[5] = a1;
  v6[6] = a2;
  uint64_t v7 = sub_1001C04B0();
  v6[11] = v7;
  v6[12] = *(void *)(v7 - 8);
  v6[13] = swift_task_alloc();
  v6[14] = swift_task_alloc();
  v6[15] = sub_1001C03B0();
  v6[16] = swift_task_alloc();
  uint64_t v8 = sub_1001C04D0();
  v6[17] = v8;
  v6[18] = *(void *)(v8 - 8);
  v6[19] = swift_task_alloc();
  v6[20] = swift_task_alloc();
  v6[21] = swift_task_alloc();
  return _swift_task_switch(sub_1001834AC, 0, 0);
}

uint64_t sub_1001834AC()
{
  uint64_t v46 = v0;
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[17];
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[18] + 16);
  v4(v0[21], v1, v3);
  v4(v2, v1, v3);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_1001C0330();
  os_log_type_t v6 = sub_1001C11D0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = v0[21];
    os_log_type_t type = v6;
    uint64_t v8 = v0[19];
    uint64_t v44 = v0[18];
    uint64_t v9 = v0[17];
    uint64_t v41 = v0[20];
    os_log_t log = v5;
    uint64_t v40 = v4;
    uint64_t v11 = v0[7];
    unint64_t v10 = v0[8];
    uint64_t v12 = swift_slowAlloc();
    v45[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315650;
    swift_bridgeObjectRetain();
    v0[2] = sub_1000DF238(v11, v10, v45);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 2080;
    v40(v8, v7, v9);
    uint64_t v13 = sub_1001C0C40();
    v0[3] = sub_1000DF238(v13, v14, v45);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
    v15(v7, v9);
    *(_WORD *)(v12 + 22) = 2080;
    sub_1001C0470();
    uint64_t v16 = sub_1001C0C40();
    v0[4] = sub_1000DF238(v16, v17, v45);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    v15(v41, v9);
    _os_log_impl((void *)&_mh_execute_header, log, type, "%s response head received: %s; headers: %s",
      (uint8_t *)v12,
      0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v19 = v0[20];
    uint64_t v18 = v0[21];
    uint64_t v21 = v0[17];
    uint64_t v20 = v0[18];

    swift_bridgeObjectRelease_n();
    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v22(v18, v21);
    v22(v19, v21);
  }
  uint64_t v24 = v0[13];
  uint64_t v23 = v0[14];
  uint64_t v25 = v0[11];
  uint64_t v26 = v0[12];
  sub_1001C04C0();
  sub_1001C0490();
  char v27 = sub_1001C0480();
  uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
  v28(v24, v25);
  v28(v23, v25);
  if (v27)
  {
    v0[22] = *(void *)(v0[6] + *(void *)(*(void *)v0[6] + 184));
    type metadata accessor for TC2AttestationStore();
    sub_10018C778(&qword_10020C4E0, (void (*)(uint64_t))type metadata accessor for TC2AttestationStore);
    uint64_t v30 = sub_1001C0EA0();
    return _swift_task_switch(sub_100183A04, v30, v29);
  }
  else
  {
    uint64_t v31 = v0[14];
    uint64_t v32 = v0[11];
    sub_1001C04C0();
    uint64_t v33 = sub_1001C04A0();
    v28(v31, v32);
    sub_10018C668();
    uint64_t v34 = swift_allocError();
    *uint64_t v35 = v33;
    sub_100003918(&qword_100208CC0);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1001CC760;
    *(void *)(v36 + 32) = v34;
    sub_10018C6BC();
    swift_allocError();
    *uint64_t v37 = v36;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v38 = (uint64_t (*)(void))v0[1];
    return v38();
  }
}

uint64_t sub_100183A04()
{
  sub_1000C8890(v0[9], v0[10]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100183AC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[6] = a3;
  v4[7] = a4;
  v4[4] = a1;
  v4[5] = a2;
  v4[8] = sub_100003918(&qword_100207FE8);
  v4[9] = swift_task_alloc();
  v4[10] = swift_task_alloc();
  return _swift_task_switch(sub_100183B6C, 0, 0);
}

uint64_t sub_100183B6C()
{
  unint64_t v14 = v0;
  sub_10003282C(v0[4], v0[10], &qword_100207FE8);
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C11D0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v4 = v0[9];
    uint64_t v3 = v0[10];
    unint64_t v5 = v0[7];
    uint64_t v6 = v0[6];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    swift_bridgeObjectRetain();
    v0[2] = sub_1000DF238(v6, v5, &v13);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 12) = 2080;
    sub_10003282C(v3, v4, &qword_100207FE8);
    uint64_t v8 = sub_1001C0C40();
    v0[3] = sub_1000DF238(v8, v9, &v13);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    sub_100010360(v3, &qword_100207FE8);
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s response trailers received: %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v10 = v0[10];

    swift_bridgeObjectRelease_n();
    sub_100010360(v10, &qword_100207FE8);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_100183DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 552) = v25;
  *(void *)(v8 + 544) = v24;
  *(_OWORD *)(v8 + 512) = v22;
  *(_OWORD *)(v8 + 528) = v23;
  *(_OWORD *)(v8 + 496) = v21;
  *(void *)(v8 + 480) = a7;
  *(void *)(v8 + 488) = a8;
  *(void *)(v8 + 464) = a5;
  *(void *)(v8 + 472) = a6;
  *(void *)(v8 + 448) = a3;
  *(void *)(v8 + 456) = a4;
  *(void *)(v8 + 440) = a2;
  sub_100003918(&qword_10020BF98);
  *(void *)(v8 + 560) = swift_task_alloc();
  type metadata accessor for RateLimitTimingDetails(0);
  *(void *)(v8 + 568) = swift_task_alloc();
  sub_100003918(&qword_100209380);
  *(void *)(v8 + 576) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for RateLimitConfiguration(0);
  *(void *)(v8 + 584) = v9;
  *(void *)(v8 + 592) = *(void *)(v9 - 8);
  *(void *)(v8 + 600) = swift_task_alloc();
  *(void *)(v8 + 608) = swift_task_alloc();
  *(void *)(v8 + 616) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration(0);
  *(void *)(v8 + 624) = v10;
  *(void *)(v8 + 632) = *(void *)(v10 - 8);
  *(void *)(v8 + 640) = swift_task_alloc();
  *(void *)(v8 + 648) = swift_task_alloc();
  *(void *)(v8 + 656) = swift_task_alloc();
  uint64_t v11 = sub_1001BF2C0();
  *(void *)(v8 + 664) = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  *(void *)(v8 + 672) = v12;
  *(void *)(v8 + 680) = *(void *)(v12 + 64);
  *(void *)(v8 + 688) = swift_task_alloc();
  uint64_t v13 = sub_1001BF310();
  *(void *)(v8 + 696) = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  *(void *)(v8 + 704) = v14;
  *(void *)(v8 + 712) = *(void *)(v14 + 64);
  *(void *)(v8 + 720) = swift_task_alloc();
  *(void *)(v8 + 728) = swift_task_alloc();
  uint64_t v15 = sub_1001BF950();
  *(void *)(v8 + 736) = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  *(void *)(v8 + 744) = v16;
  *(void *)(v8 + 752) = *(void *)(v16 + 64);
  *(void *)(v8 + 760) = swift_task_alloc();
  sub_100003918(&qword_10020C3B0);
  *(void *)(v8 + 768) = swift_task_alloc();
  *(void *)(v8 + 776) = swift_task_alloc();
  sub_100003918(&qword_10020EB08);
  *(void *)(v8 + 784) = swift_task_alloc();
  *(void *)(v8 + 792) = swift_task_alloc();
  uint64_t v17 = sub_1001BFD90();
  *(void *)(v8 + 800) = v17;
  *(void *)(v8 + 808) = *(void *)(v17 - 8);
  *(void *)(v8 + 816) = swift_task_alloc();
  *(void *)(v8 + 824) = swift_task_alloc();
  *(void *)(v8 + 832) = swift_task_alloc();
  *(void *)(v8 + 840) = swift_task_alloc();
  type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0);
  *(void *)(v8 + 848) = swift_task_alloc();
  *(void *)(v8 + 856) = swift_task_alloc();
  uint64_t v18 = *(void *)(type metadata accessor for Proto_Ropes_Common_Attestation(0) - 8);
  *(void *)(v8 + 864) = v18;
  *(void *)(v8 + 872) = *(void *)(v18 + 64);
  *(void *)(v8 + 880) = swift_task_alloc();
  *(void *)(v8 + 888) = swift_task_alloc();
  sub_100003918(&qword_10020A660);
  *(void *)(v8 + 896) = swift_task_alloc();
  sub_100003918(&qword_10020EB10);
  *(void *)(v8 + 904) = swift_task_alloc();
  *(void *)(v8 + 912) = sub_100003918(&qword_10020EB18);
  *(void *)(v8 + 920) = swift_task_alloc();
  return _swift_task_switch(sub_100184354, 0, 0);
}

uint64_t sub_100184354()
{
  uint64_t v1 = v0[115];
  uint64_t v2 = v0[114];
  uint64_t v3 = (uint64_t *)v0[57];
  sub_10017DA04(v1);
  uint64_t v4 = v1 + *(int *)(v2 + 80);
  *(void *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 8) = 2;
  *(_OWORD *)(v1 + *(int *)(v2 + 76)) = xmmword_1001CB200;
  v0[116] = qword_10020F458;
  uint64_t v5 = *v3;
  v0[117] = *(void *)(*v3 + 208);
  v0[118] = *(void *)(v5 + 192);
  v0[119] = 0;
  uint64_t v9 = (uint64_t (*)(uint64_t))((char *)&dword_10020EB20 + dword_10020EB20);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[120] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_100184488;
  uint64_t v7 = v0[113];
  return v9(v7);
}

uint64_t sub_100184488()
{
  *(void *)(*(void *)v1 + 968) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1001855BC;
  }
  else {
    uint64_t v2 = sub_10018459C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10018459C()
{
  uint64_t v128 = v0;
  uint64_t v1 = *(void *)(v0 + 904);
  uint64_t v2 = type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    sub_100010360(*(void *)(v0 + 920), &qword_10020EB18);
    swift_bridgeObjectRetain_n();
    uint64_t v3 = sub_1001C0330();
    os_log_type_t v4 = sub_1001C11D0();
    BOOL v5 = os_log_type_enabled(v3, v4);
    unint64_t v6 = *(void *)(v0 + 472);
    if (v5)
    {
      uint64_t v7 = *(void *)(v0 + 464);
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      v127[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 376) = sub_1000DF238(v7, v6, v127);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s response complete", v8, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 1056) = v14;
    uint64_t v15 = sub_100003918(&qword_10020EB28);
    *uint64_t v14 = v0;
    v14[1] = sub_100186E04;
    uint64_t v16 = *(void *)(v0 + 784);
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v0 + 896);
  sub_10003282C(v1, v9, &qword_10020A660);
  sub_10018C608(v1, type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse);
  uint64_t v10 = type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10) == 1) {
    goto LABEL_5;
  }
  uint64_t v19 = *(void *)(v0 + 896);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_10018C710(v19, *(void *)(v0 + 888), type metadata accessor for Proto_Ropes_Common_Attestation);
    swift_bridgeObjectRetain_n();
    uint64_t v30 = sub_1001C0330();
    os_log_type_t v31 = sub_1001C11E0();
    BOOL v32 = os_log_type_enabled(v30, v31);
    unint64_t v33 = *(void *)(v0 + 472);
    if (v32)
    {
      uint64_t v34 = *(void *)(v0 + 464);
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      v127[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 432) = sub_1000DF238(v34, v33, v127);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "%s attestation received", v35, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v16 = swift_bridgeObjectRelease_n();
    }
    uint64_t v64 = *(void **)(v0 + 480);
    if (__OFADD__(*v64, 1))
    {
      __break(1u);
    }
    else
    {
      uint64_t v65 = *(void *)(v0 + 952);
      ++*v64;
      if (v65 == 10)
      {
        uint64_t v66 = (void *)swift_task_alloc();
        *(void *)(v0 + 984) = v66;
        uint64_t v15 = sub_100003918(&qword_10020EB28);
        *uint64_t v66 = v0;
        v66[1] = sub_100185A28;
        uint64_t v16 = *(void *)(v0 + 792);
LABEL_10:
        uint64_t v17 = 0;
        uint64_t v18 = 0;
        return TaskGroup.next(isolation:)(v16, v17, v18, v15);
      }
      uint64_t v67 = *(void *)(v0 + 952);
      uint64_t v68 = *(void *)(v0 + 512);
      uint64_t v69 = *(void *)(sub_1001BFDB0() + 16);
      uint64_t v16 = swift_bridgeObjectRelease();
      if (v69 >= v68) {
        goto LABEL_48;
      }
      uint64_t v120 = v67 + 1;
      if (!__OFADD__(v67, 1))
      {
        uint64_t v102 = *(void *)(v0 + 888);
        uint64_t v70 = *(void *)(v0 + 880);
        uint64_t v114 = *(void *)(v0 + 872);
        uint64_t v105 = v70;
        uint64_t v106 = *(void *)(v0 + 864);
        uint64_t v71 = *(void *)(v0 + 776);
        uint64_t v117 = v71;
        uint64_t v119 = *(void *)(v0 + 768);
        uint64_t v72 = *(void *)(v0 + 760);
        uint64_t v113 = *(void *)(v0 + 752);
        uint64_t v73 = *(void *)(v0 + 744);
        uint64_t v74 = *(void *)(v0 + 736);
        uint64_t v107 = v74;
        uint64_t v108 = v72;
        uint64_t v75 = *(void *)(v0 + 728);
        uint64_t v76 = *(void *)(v0 + 720);
        uint64_t v109 = v75;
        uint64_t v110 = v76;
        uint64_t v111 = *(void *)(v0 + 712);
        uint64_t v77 = *(void *)(v0 + 704);
        uint64_t v122 = *(void *)(v0 + 696);
        uint64_t v123 = *(void *)(v0 + 688);
        uint64_t v121 = *(void *)(v0 + 672);
        uint64_t v78 = *(void *)(v0 + 664);
        uint64_t v112 = v78;
        uint64_t v118 = *(void *)(v0 + 544);
        uint64_t v103 = *(void *)(v0 + 536);
        uint64_t v104 = *(void *)(v0 + 552);
        uint64_t v100 = *(void *)(v0 + 520);
        uint64_t v101 = *(void *)(v0 + 528);
        uint64_t v126 = *(void *)(v0 + 456);
        uint64_t v116 = sub_1001C0FC0();
        uint64_t v115 = *(void *)(v116 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v115 + 56))(v71, 1, 1, v116);
        sub_10018C4E8(v102, v70, type metadata accessor for Proto_Ropes_Common_Attestation);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 16))(v72, v100, v74);
        uint64_t v79 = *(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 16);
        v79(v75, v101, v122);
        v79(v76, v103, v122);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v121 + 16))(v123, v104, v78);
        unint64_t v80 = (*(unsigned __int8 *)(v106 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80);
        unint64_t v81 = (v114 + *(unsigned __int8 *)(v73 + 80) + v80) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
        uint64_t v82 = *(unsigned __int8 *)(v77 + 80);
        unint64_t v83 = (v113 + v82 + v81) & ~v82;
        unint64_t v84 = (v111 + v82 + v83) & ~v82;
        unint64_t v85 = (v111 + v84 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v86 = (*(unsigned __int8 *)(v121 + 80) + v85 + 8) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80);
        uint64_t v87 = (char *)swift_allocObject();
        *((void *)v87 + 2) = 0;
        *((void *)v87 + 3) = 0;
        *((void *)v87 + 4) = v126;
        sub_10018C710(v105, (uint64_t)&v87[v80], type metadata accessor for Proto_Ropes_Common_Attestation);
        (*(void (**)(char *, uint64_t, uint64_t))(v73 + 32))(&v87[v81], v108, v107);
        uint64_t v88 = *(void (**)(char *, uint64_t, uint64_t))(v77 + 32);
        v88(&v87[v83], v109, v122);
        v88(&v87[v84], v110, v122);
        *(void *)&v87[v85] = v118;
        (*(void (**)(char *, uint64_t, uint64_t))(v121 + 32))(&v87[v86], v123, v112);
        sub_10003282C(v117, v119, &qword_10020C3B0);
        LODWORD(v81) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v115 + 48))(v119, 1, v116);
        swift_retain();
        uint64_t v89 = *(void *)(v0 + 768);
        if (v81 == 1)
        {
          sub_100010360(*(void *)(v0 + 768), &qword_10020C3B0);
        }
        else
        {
          sub_1001C0FB0();
          (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v89, v116);
        }
        if (*((void *)v87 + 2))
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          uint64_t v93 = sub_1001C0EA0();
          uint64_t v95 = v94;
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v93 = 0;
          uint64_t v95 = 0;
        }
        uint64_t v96 = **(void **)(v0 + 440);
        uint64_t v97 = swift_allocObject();
        *(void *)(v97 + 16) = &unk_10020EB38;
        *(void *)(v97 + 24) = v87;
        uint64_t v98 = v95 | v93;
        if (v95 | v93)
        {
          uint64_t v98 = v0 + 256;
          *(void *)(v0 + 256) = 0;
          *(void *)(v0 + 264) = 0;
          *(void *)(v0 + 272) = v93;
          *(void *)(v0 + 280) = v95;
        }
        uint64_t v67 = v120;
        uint64_t v99 = *(void *)(v0 + 776);
        *(void *)(v0 + 320) = 1;
        *(void *)(v0 + 328) = v98;
        *(void *)(v0 + 336) = v96;
        swift_task_create();
        swift_release();
        sub_100010360(v99, &qword_10020C3B0);
LABEL_48:
        sub_10018C608(*(void *)(v0 + 888), type metadata accessor for Proto_Ropes_Common_Attestation);
        *(void *)(v0 + 952) = v67;
LABEL_5:
        long long v124 = (uint64_t (*)(uint64_t))((char *)&dword_10020EB20 + dword_10020EB20);
        uint64_t v11 = (void *)swift_task_alloc();
        *(void *)(v0 + 960) = v11;
        void *v11 = v0;
        v11[1] = sub_100184488;
        uint64_t v12 = *(void *)(v0 + 904);
        return v124(v12);
      }
    }
    __break(1u);
    return TaskGroup.next(isolation:)(v16, v17, v18, v15);
  }
  uint64_t v20 = *(void *)(v0 + 856);
  uint64_t v21 = *(void *)(v0 + 848);
  sub_10018C710(v19, v20, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  sub_10018C4E8(v20, v21, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  swift_bridgeObjectRetain_n();
  long long v22 = sub_1001C0330();
  os_log_type_t v23 = sub_1001C1200();
  BOOL v24 = os_log_type_enabled(v22, v23);
  uint64_t v25 = *(void *)(v0 + 848);
  unint64_t v26 = *(void *)(v0 + 472);
  if (v24)
  {
    uint64_t v27 = *(void *)(v0 + 464);
    uint64_t v28 = swift_slowAlloc();
    v127[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v28 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 392) = sub_1000DF238(v27, v26, v127);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v28 + 12) = 2048;
    uint64_t v29 = *(void *)(*(void *)v25 + 16);
    sub_10018C608(v25, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
    *(void *)(v0 + 400) = v29;
    sub_1001C1310();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "%s received rate limit configuration count %ld", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10018C608(*(void *)(v0 + 848), type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);

    swift_bridgeObjectRelease_n();
  }
  uint64_t v36 = **(void **)(v0 + 856);
  *(void *)(v0 + 992) = v36;
  uint64_t v37 = *(void *)(v36 + 16);
  *(void *)(v0 + 1000) = v37;
  if (v37)
  {
    uint64_t v38 = v0 + 184;
    uint64_t v39 = *(void *)(v0 + 632);
    *(_DWORD *)(v0 + 1064) = *(_DWORD *)(v39 + 80);
    *(void *)(v0 + 1008) = *(void *)(v39 + 72);
    uint64_t v125 = *(void *)(v0 + 968);
    swift_bridgeObjectRetain();
    uint64_t v40 = 0;
    while (1)
    {
      *(void *)(v0 + 1024) = v40;
      *(void *)(v0 + 1016) = v125;
      uint64_t v48 = *(void *)(v0 + 688);
      uint64_t v49 = *(void *)(v0 + 656);
      uint64_t v50 = *(void **)(v0 + 648);
      uint64_t v51 = *(void *)(v0 + 592);
      uint64_t v52 = *(void *)(v0 + 584);
      unint64_t v53 = *(void **)(v0 + 576);
      uint64_t v54 = *(void *)(v0 + 456) + *(void *)(v0 + 936);
      sub_10018C4E8(*(void *)(v0 + 992)+ ((*(unsigned __int8 *)(v0 + 1064) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 1064))+ *(void *)(v0 + 1008) * v40, v49, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
      _s20privatecloudcomputed8LRUCacheC10addToCache3now5valueSb10Foundation4DateV_xtFfA__0();
      sub_10018C4E8(v49, (uint64_t)v50, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
      sub_100032890(v54, v38);
      sub_10002E48C(v48, v50, v38, v53);
      int v55 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v51 + 48))(v53, 1, v52);
      uint64_t v56 = *(void *)(v0 + 456);
      if (v55 != 1) {
        break;
      }
      uint64_t v57 = *(void *)(v0 + 656);
      uint64_t v58 = *(void *)(v0 + 640);
      sub_100010360(*(void *)(v0 + 576), &qword_100209380);
      sub_10018C4E8(v57, v58, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
      swift_bridgeObjectRetain_n();
      uint64_t v59 = sub_1001C0330();
      os_log_type_t v60 = sub_1001C11F0();
      BOOL v61 = os_log_type_enabled(v59, v60);
      uint64_t v62 = *(void *)(v0 + 656);
      if (v61)
      {
        uint64_t v41 = *(void *)(v0 + 648);
        uint64_t v42 = *(void *)(v0 + 640);
        uint64_t v44 = *(void *)(v0 + 464);
        unint64_t v43 = *(void *)(v0 + 472);
        uint64_t v45 = swift_slowAlloc();
        v127[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v45 = 136315394;
        swift_bridgeObjectRetain();
        *(void *)(v45 + 4) = sub_1000DF238(v44, v43, v127);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v45 + 12) = 2080;
        sub_10018C4E8(v42, v41, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
        uint64_t v38 = v0 + 184;
        uint64_t v46 = sub_1001C0C40();
        *(void *)(v45 + 14) = sub_1000DF238(v46, v47, v127);
        swift_bridgeObjectRelease();
        sub_10018C608(v42, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
        _os_log_impl((void *)&_mh_execute_header, v59, v60, "%s unable to process rate limit configuration %s", (uint8_t *)v45, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        uint64_t v63 = *(void *)(v0 + 640);
        swift_bridgeObjectRelease_n();
        sub_10018C608(v63, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
      }

      sub_10018C608(v62, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
      uint64_t v40 = *(void *)(v0 + 1024) + 1;
      if (v40 == *(void *)(v0 + 1000))
      {
        swift_bridgeObjectRelease();
        goto LABEL_38;
      }
    }
    uint64_t v90 = *(void *)(v0 + 944);
    sub_10018C710(*(void *)(v0 + 576), *(void *)(v0 + 616), type metadata accessor for RateLimitConfiguration);
    uint64_t v91 = *(void *)(v56 + v90);
    *(void *)(v0 + 1040) = v91;
    return _swift_task_switch(sub_100186478, v91, 0);
  }
  else
  {
LABEL_38:
    uint64_t v92 = (void *)swift_task_alloc();
    *(void *)(v0 + 1032) = v92;
    *uint64_t v92 = v0;
    v92[1] = sub_1001862B4;
    return sub_100092DF4();
  }
}

uint64_t sub_1001855BC()
{
  v0[46] = v0[121];
  v0[122] = sub_100003918(&qword_100208C98);
  swift_willThrowTypedImpl();
  return _swift_task_switch(sub_10018564C, 0, 0);
}

uint64_t sub_10018564C()
{
  uint64_t v12 = v0;
  sub_100010360(v0[115], &qword_10020EB18);
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C11F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[121];
    uint64_t v5 = v0[58];
    unint64_t v4 = v0[59];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    swift_bridgeObjectRetain();
    v0[53] = sub_1000DF238(v5, v4, &v11);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 12) = 2080;
    v0[52] = v3;
    swift_errorRetain();
    uint64_t v7 = sub_1001C0C40();
    v0[51] = sub_1000DF238(v7, v8, &v11);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s response failed: %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();

    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100185A28()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100185B24, 0, 0);
}

uint64_t sub_100185B24()
{
  uint64_t v1 = *(void *)(v0 + 808);
  uint64_t v2 = *(void *)(v0 + 800);
  uint64_t v3 = *(void *)(v0 + 792);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2);
  if (result == 1) {
    goto LABEL_30;
  }
  uint64_t v5 = *(void (**)(unint64_t, uint64_t, uint64_t))(v1 + 32);
  v5(*(void *)(v0 + 840), v3, v2);
  uint64_t result = sub_1001BFD70();
  if (result)
  {
    uint64_t v6 = *(void **)(v0 + 488);
    if (!__OFADD__(*v6, 1))
    {
      ++*v6;
      goto LABEL_5;
    }
    __break(1u);
LABEL_30:
    __break(1u);
    return result;
  }
LABEL_5:
  unint64_t v85 = v5;
  uint64_t v7 = sub_1001BFD40();
  if (v8)
  {
    uint64_t v9 = v7;
    uint64_t v10 = v8;
    uint64_t v11 = *(char ***)(v0 + 496);
    uint64_t v12 = *v11;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    void *v11 = v12;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      os_log_type_t v60 = *(char ***)(v0 + 496);
      uint64_t v12 = sub_1000E3F44(0, *((void *)v12 + 2) + 1, 1, v12);
      NSObject *v60 = v12;
    }
    unint64_t v15 = *((void *)v12 + 2);
    unint64_t v14 = *((void *)v12 + 3);
    if (v15 >= v14 >> 1)
    {
      BOOL v61 = *(char ***)(v0 + 496);
      uint64_t v12 = sub_1000E3F44((char *)(v14 > 1), v15 + 1, 1, v12);
      *BOOL v61 = v12;
    }
    *((void *)v12 + 2) = v15 + 1;
    uint64_t v16 = &v12[16 * v15];
    *((void *)v16 + 4) = v9;
    *((void *)v16 + 5) = v10;
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 808) + 16))(*(void *)(v0 + 832), *(void *)(v0 + 840), *(void *)(v0 + 800));
  uint64_t v17 = (void (*)(uint64_t, void))sub_1001BFDA0();
  uint64_t v19 = v18;
  unint64_t v20 = *v18;
  char v21 = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v19 = v20;
  if ((v21 & 1) == 0)
  {
    unint64_t v20 = sub_1000E4594(0, *(void *)(v20 + 16) + 1, 1, v20);
    *uint64_t v19 = v20;
  }
  unint64_t v23 = *(void *)(v20 + 16);
  unint64_t v22 = *(void *)(v20 + 24);
  if (v23 >= v22 >> 1)
  {
    unint64_t v20 = sub_1000E4594(v22 > 1, v23 + 1, 1, v20);
    *uint64_t v19 = v20;
  }
  uint64_t v24 = *(void *)(v0 + 840);
  uint64_t v25 = *(void *)(v0 + 832);
  uint64_t v26 = *(void *)(v0 + 808);
  uint64_t v27 = *(void *)(v0 + 800);
  *(void *)(v20 + 16) = v23 + 1;
  v85(v20+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(void *)(v26 + 72) * v23, v25, v27);
  v17(v0 + 224, 0);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v27);
  uint64_t v28 = *(void *)(v0 + 512);
  uint64_t v29 = *(void *)(sub_1001BFDB0() + 16);
  swift_bridgeObjectRelease();
  if (v29 >= v28)
  {
    uint64_t v50 = 9;
  }
  else
  {
    uint64_t v64 = *(void *)(v0 + 888);
    uint64_t v30 = *(void *)(v0 + 880);
    uint64_t v76 = *(void *)(v0 + 872);
    uint64_t v67 = v30;
    uint64_t v68 = *(void *)(v0 + 864);
    uint64_t v31 = *(void *)(v0 + 776);
    uint64_t v79 = v31;
    uint64_t v81 = *(void *)(v0 + 768);
    uint64_t v32 = *(void *)(v0 + 760);
    uint64_t v75 = *(void *)(v0 + 752);
    uint64_t v33 = *(void *)(v0 + 744);
    uint64_t v34 = *(void *)(v0 + 736);
    uint64_t v69 = v34;
    uint64_t v70 = v32;
    uint64_t v35 = *(void *)(v0 + 728);
    uint64_t v36 = *(void *)(v0 + 720);
    uint64_t v71 = v35;
    uint64_t v72 = v36;
    uint64_t v73 = *(void *)(v0 + 712);
    uint64_t v37 = *(void *)(v0 + 704);
    uint64_t v83 = *(void *)(v0 + 696);
    uint64_t v84 = *(void *)(v0 + 688);
    uint64_t v82 = *(void *)(v0 + 672);
    uint64_t v38 = *(void *)(v0 + 664);
    uint64_t v74 = v38;
    uint64_t v66 = *(void *)(v0 + 552);
    uint64_t v80 = *(void *)(v0 + 544);
    uint64_t v65 = *(void *)(v0 + 536);
    uint64_t v62 = *(void *)(v0 + 520);
    uint64_t v63 = *(void *)(v0 + 528);
    uint64_t v86 = *(void *)(v0 + 456);
    uint64_t v78 = sub_1001C0FC0();
    uint64_t v77 = *(void *)(v78 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v77 + 56))(v31, 1, 1, v78);
    sub_10018C4E8(v64, v30, type metadata accessor for Proto_Ropes_Common_Attestation);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v32, v62, v34);
    uint64_t v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16);
    v39(v35, v63, v83);
    v39(v36, v65, v83);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 16))(v84, v66, v38);
    unint64_t v40 = (*(unsigned __int8 *)(v68 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
    unint64_t v41 = (v76 + *(unsigned __int8 *)(v33 + 80) + v40) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
    uint64_t v42 = *(unsigned __int8 *)(v37 + 80);
    unint64_t v43 = (v75 + v42 + v41) & ~v42;
    unint64_t v44 = (v73 + v42 + v43) & ~v42;
    unint64_t v45 = (v73 + v44 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v46 = (*(unsigned __int8 *)(v82 + 80) + v45 + 8) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
    unint64_t v47 = (char *)swift_allocObject();
    *((void *)v47 + 2) = 0;
    *((void *)v47 + 3) = 0;
    *((void *)v47 + 4) = v86;
    sub_10018C710(v67, (uint64_t)&v47[v40], type metadata accessor for Proto_Ropes_Common_Attestation);
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(&v47[v41], v70, v69);
    uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 32);
    v48(&v47[v43], v71, v83);
    v48(&v47[v44], v72, v83);
    *(void *)&v47[v45] = v80;
    (*(void (**)(char *, uint64_t, uint64_t))(v82 + 32))(&v47[v46], v84, v74);
    sub_10003282C(v79, v81, &qword_10020C3B0);
    LODWORD(v41) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v77 + 48))(v81, 1, v78);
    swift_retain();
    uint64_t v49 = *(void *)(v0 + 768);
    if (v41 == 1)
    {
      sub_100010360(*(void *)(v0 + 768), &qword_10020C3B0);
    }
    else
    {
      sub_1001C0FB0();
      (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v49, v78);
    }
    if (*((void *)v47 + 2))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v51 = sub_1001C0EA0();
      uint64_t v53 = v52;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v51 = 0;
      uint64_t v53 = 0;
    }
    uint64_t v54 = **(void **)(v0 + 440);
    uint64_t v55 = swift_allocObject();
    *(void *)(v55 + 16) = &unk_10020EB38;
    *(void *)(v55 + 24) = v47;
    uint64_t v56 = v53 | v51;
    if (v53 | v51)
    {
      uint64_t v56 = v0 + 256;
      *(void *)(v0 + 256) = 0;
      *(void *)(v0 + 264) = 0;
      *(void *)(v0 + 272) = v51;
      *(void *)(v0 + 280) = v53;
    }
    uint64_t v57 = *(void *)(v0 + 776);
    *(void *)(v0 + 320) = 1;
    *(void *)(v0 + 328) = v56;
    *(void *)(v0 + 336) = v54;
    swift_task_create();
    swift_release();
    sub_100010360(v57, &qword_10020C3B0);
    uint64_t v50 = 10;
  }
  sub_10018C608(*(void *)(v0 + 888), type metadata accessor for Proto_Ropes_Common_Attestation);
  *(void *)(v0 + 952) = v50;
  uint64_t v87 = (uint64_t (*)(uint64_t))((char *)&dword_10020EB20 + dword_10020EB20);
  uint64_t v58 = (void *)swift_task_alloc();
  *(void *)(v0 + 960) = v58;
  *uint64_t v58 = v0;
  v58[1] = sub_100184488;
  uint64_t v59 = *(void *)(v0 + 904);
  return v87(v59);
}

uint64_t sub_1001862B4()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1001863B0, 0, 0);
}

uint64_t sub_1001863B0()
{
  sub_10018C608(v0[107], type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  unint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_10020EB20 + dword_10020EB20);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[120] = (uint64_t)v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100184488;
  uint64_t v2 = v0[113];
  return v4(v2);
}

uint64_t sub_100186478()
{
  uint64_t v1 = (uint64_t)(v0 + 2);
  uint64_t v2 = (uint64_t)(v0 + 9);
  uint64_t v3 = v0[77];
  uint64_t v4 = v0[75];
  sub_10018C4E8(v3, v0[76], type metadata accessor for RateLimitConfiguration);
  sub_10018C4E8(v3, v4, type metadata accessor for RateLimitConfiguration);
  uint64_t v5 = sub_1001C0330();
  os_log_type_t v6 = sub_1001C11D0();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = v0[76];
  uint64_t v9 = v0[75];
  uint64_t v51 = v0;
  if (v7)
  {
    uint64_t v49 = v0[73];
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 134218240;
    uint64_t v11 = *(void *)(v8 + *(int *)(v49 + 20));
    sub_10018C608(v8, type metadata accessor for RateLimitConfiguration);
    *(void *)(v10 + 4) = v11;
    *(_WORD *)(v10 + 12) = 2048;
    *(void *)(v10 + 14) = *(void *)(v9 + *(int *)(v49 + 20) + 8);
    sub_10018C608(v9, type metadata accessor for RateLimitConfiguration);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "rate limit discovered for rate with count=%lu, duration=%f", (uint8_t *)v10, 0x16u);
    swift_slowDealloc();
  }
  else
  {
    sub_10018C608(v8, type metadata accessor for RateLimitConfiguration);

    sub_10018C608(v9, type metadata accessor for RateLimitConfiguration);
  }
  uint64_t v12 = v0[127];
  uint64_t v13 = (long long *)v0[77];
  uint64_t v14 = v0[73];
  uint64_t v15 = v0[71];
  uint64_t v16 = (void *)(v0[130] + OBJC_IVAR____TtC20privatecloudcomputed11RateLimiter_model);
  swift_beginAccess();
  long long v17 = *v13;
  long long v18 = v13[1];
  long long v19 = v13[2];
  *(void *)(v1 + 48) = *((void *)v13 + 6);
  *(_OWORD *)(v1 + 16) = v18;
  *(_OWORD *)(v1 + 32) = v19;
  *(_OWORD *)uint64_t v1 = v17;
  sub_10018C4E8((uint64_t)v13 + *(int *)(v14 + 20), v15, type metadata accessor for RateLimitTimingDetails);
  sub_100032A2C(v1);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v52 = *v16;
  void *v16 = 0x8000000000000000;
  sub_1000EA71C(v15, (void *)v1, isUniquelyReferenced_nonNull_native);
  void *v16 = v52;
  swift_bridgeObjectRelease();
  uint64_t v21 = v1;
  unint64_t v22 = v16;
  sub_100032A84(v21);
  long long v23 = *v13;
  long long v24 = v13[1];
  long long v25 = v13[2];
  uint64_t v26 = v51;
  *(void *)(v2 + 48) = *((void *)v13 + 6);
  *(_OWORD *)(v2 + 16) = v24;
  *(_OWORD *)(v2 + 32) = v25;
  *(_OWORD *)uint64_t v2 = v23;
  sub_100032A2C(v2);
  uint64_t v27 = swift_bridgeObjectRetain();
  uint64_t v28 = sub_10018D158(v27, v2);
  v51[131] = v12;
  uint64_t v29 = *(void *)(v28 + 16);
  if (v29)
  {
    uint64_t v30 = v51 + 16;
    uint64_t v50 = v51 + 48;
    uint64_t v31 = v28 + 32;
    do
    {
      long long v34 = *(_OWORD *)v31;
      long long v35 = *(_OWORD *)(v31 + 16);
      long long v36 = *(_OWORD *)(v31 + 32);
      v51[22] = *(void *)(v31 + 48);
      *((_OWORD *)v51 + 9) = v35;
      *((_OWORD *)v51 + 10) = v36;
      *(_OWORD *)uint64_t v30 = v34;
      sub_10009A130((uint64_t)v30);
      swift_bridgeObjectRetain();
      unint64_t v37 = sub_100169FB8(v30);
      char v39 = v38;
      swift_bridgeObjectRelease();
      if (v39)
      {
        char v40 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v41 = v22[2];
        *uint64_t v50 = v41;
        _OWORD v22[2] = 0x8000000000000000;
        uint64_t v42 = v22;
        if ((v40 & 1) == 0)
        {
          sub_1000EC234();
          uint64_t v41 = *v50;
        }
        uint64_t v43 = v26[70];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v44 = *(void *)(v41 + 56);
        uint64_t v45 = sub_1001BF7A0();
        uint64_t v46 = *(void *)(v45 - 8);
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v46 + 32))(v43, v44 + *(void *)(v46 + 72) * v37, v45);
        sub_10018E3F4(v37, v41);
        v42[2] = v41;
        swift_bridgeObjectRelease();
        uint64_t v47 = v43;
        uint64_t v26 = v51;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v47, 0, 1, v45);
        unint64_t v22 = v42;
      }
      else
      {
        uint64_t v32 = v26[70];
        uint64_t v33 = sub_1001BF7A0();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v32, 1, 1, v33);
      }
      sub_100010360(v26[70], &qword_10020BF98);
      sub_10009A184((uint64_t)v30);
      v31 += 56;
      --v29;
    }
    while (v29);
  }
  swift_bridgeObjectRelease();
  swift_endAccess();
  return _swift_task_switch(sub_100186980, 0, 0);
}

uint64_t sub_100186980()
{
  uint64_t v34 = v0;
  uint64_t v1 = *(void *)(v0 + 656);
  sub_10018C608(*(void *)(v0 + 616), type metadata accessor for RateLimitConfiguration);
  sub_10018C608(v1, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
  uint64_t v2 = *(void *)(v0 + 1024) + 1;
  if (v2 == *(void *)(v0 + 1000))
  {
LABEL_2:
    swift_bridgeObjectRelease();
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 1032) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1001862B4;
    return sub_100092DF4();
  }
  else
  {
    uint64_t v5 = v0 + 184;
    uint64_t v32 = *(void *)(v0 + 1048);
    while (1)
    {
      *(void *)(v0 + 1024) = v2;
      *(void *)(v0 + 1016) = v32;
      uint64_t v13 = *(void *)(v0 + 688);
      uint64_t v14 = *(void *)(v0 + 656);
      uint64_t v15 = *(void **)(v0 + 648);
      uint64_t v16 = *(void *)(v0 + 592);
      uint64_t v17 = *(void *)(v0 + 584);
      long long v18 = *(void **)(v0 + 576);
      uint64_t v19 = *(void *)(v0 + 456) + *(void *)(v0 + 936);
      sub_10018C4E8(*(void *)(v0 + 992)+ ((*(unsigned __int8 *)(v0 + 1064) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 1064))+ *(void *)(v0 + 1008) * v2, v14, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
      _s20privatecloudcomputed8LRUCacheC10addToCache3now5valueSb10Foundation4DateV_xtFfA__0();
      sub_10018C4E8(v14, (uint64_t)v15, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
      sub_100032890(v19, v5);
      sub_10002E48C(v13, v15, v5, v18);
      int v20 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48))(v18, 1, v17);
      uint64_t v21 = *(void *)(v0 + 576);
      if (v20 != 1) {
        break;
      }
      uint64_t v22 = *(void *)(v0 + 656);
      uint64_t v23 = *(void *)(v0 + 640);
      sub_100010360(v21, &qword_100209380);
      sub_10018C4E8(v22, v23, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
      swift_bridgeObjectRetain_n();
      long long v24 = sub_1001C0330();
      os_log_type_t v25 = sub_1001C11F0();
      BOOL v26 = os_log_type_enabled(v24, v25);
      uint64_t v27 = *(void *)(v0 + 656);
      if (v26)
      {
        uint64_t v6 = *(void *)(v0 + 648);
        uint64_t v7 = *(void *)(v0 + 640);
        uint64_t v9 = *(void *)(v0 + 464);
        unint64_t v8 = *(void *)(v0 + 472);
        uint64_t v10 = swift_slowAlloc();
        uint64_t v33 = swift_slowAlloc();
        *(_DWORD *)uint64_t v10 = 136315394;
        swift_bridgeObjectRetain();
        *(void *)(v10 + 4) = sub_1000DF238(v9, v8, &v33);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v10 + 12) = 2080;
        sub_10018C4E8(v7, v6, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
        uint64_t v5 = v0 + 184;
        uint64_t v11 = sub_1001C0C40();
        *(void *)(v10 + 14) = sub_1000DF238(v11, v12, &v33);
        swift_bridgeObjectRelease();
        sub_10018C608(v7, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "%s unable to process rate limit configuration %s", (uint8_t *)v10, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        uint64_t v28 = *(void *)(v0 + 640);
        swift_bridgeObjectRelease_n();
        sub_10018C608(v28, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
      }

      sub_10018C608(v27, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
      uint64_t v2 = *(void *)(v0 + 1024) + 1;
      if (v2 == *(void *)(v0 + 1000)) {
        goto LABEL_2;
      }
    }
    uint64_t v29 = *(void *)(v0 + 944);
    uint64_t v30 = *(void *)(v0 + 456);
    sub_10018C710(v21, *(void *)(v0 + 616), type metadata accessor for RateLimitConfiguration);
    uint64_t v31 = *(void *)(v30 + v29);
    *(void *)(v0 + 1040) = v31;
    return _swift_task_switch(sub_100186478, v31, 0);
  }
}

uint64_t sub_100186E04()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100186F00, 0, 0);
}

uint64_t sub_100186F00()
{
  uint64_t v1 = v0[101];
  uint64_t v2 = v0[100];
  uint64_t v3 = v0[98];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2) != 1)
  {
    uint64_t v6 = *(void (**)(unint64_t, uint64_t, uint64_t))(v1 + 32);
    v6(v0[103], v3, v2);
    uint64_t v7 = sub_1001BFD70();
    if (v7)
    {
      uint64_t v11 = (void *)v0[61];
      if (__OFADD__(*v11, 1))
      {
        __break(1u);
        return TaskGroup.next(isolation:)(v7, v8, v9, v10);
      }
      ++*v11;
    }
    uint64_t v12 = sub_1001BFD40();
    if (v13)
    {
      uint64_t v14 = v12;
      uint64_t v15 = v13;
      uint64_t v16 = (char **)v0[62];
      uint64_t v17 = *v16;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      void *v16 = v17;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v35 = (char **)v0[62];
        uint64_t v17 = sub_1000E3F44(0, *((void *)v17 + 2) + 1, 1, v17);
        *uint64_t v35 = v17;
      }
      unint64_t v20 = *((void *)v17 + 2);
      unint64_t v19 = *((void *)v17 + 3);
      if (v20 >= v19 >> 1)
      {
        long long v36 = (char **)v0[62];
        uint64_t v17 = sub_1000E3F44((char *)(v19 > 1), v20 + 1, 1, v17);
        *long long v36 = v17;
      }
      *((void *)v17 + 2) = v20 + 1;
      uint64_t v21 = &v17[16 * v20];
      *((void *)v21 + 4) = v14;
      *((void *)v21 + 5) = v15;
    }
    (*(void (**)(void, void, void))(v0[101] + 16))(v0[102], v0[103], v0[100]);
    uint64_t v22 = (void (*)(void))sub_1001BFDA0();
    long long v24 = v23;
    unint64_t v25 = *v23;
    char v26 = swift_isUniquelyReferenced_nonNull_native();
    *long long v24 = v25;
    if ((v26 & 1) == 0)
    {
      unint64_t v25 = sub_1000E4594(0, *(void *)(v25 + 16) + 1, 1, v25);
      *long long v24 = v25;
    }
    unint64_t v28 = *(void *)(v25 + 16);
    unint64_t v27 = *(void *)(v25 + 24);
    uint64_t v29 = v6;
    if (v28 >= v27 >> 1)
    {
      unint64_t v25 = sub_1000E4594(v27 > 1, v28 + 1, 1, v25);
      *long long v24 = v25;
    }
    uint64_t v30 = v0[103];
    uint64_t v31 = v0[102];
    uint64_t v32 = v0[101];
    uint64_t v33 = v0[100];
    *(void *)(v25 + 16) = v28 + 1;
    v29(v25+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(void *)(v32 + 72) * v28, v31, v33);
    v22();
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v33);
    uint64_t v34 = (void *)swift_task_alloc();
    v0[132] = v34;
    uint64_t v10 = sub_100003918(&qword_10020EB28);
    *uint64_t v34 = v0;
    v34[1] = sub_100186E04;
    uint64_t v7 = v0[98];
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    return TaskGroup.next(isolation:)(v7, v8, v9, v10);
  }
  sub_100010360(v3, &qword_10020EB08);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1001873B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[8] = v10;
  v8[9] = v11;
  v8[6] = a7;
  v8[7] = a8;
  v8[4] = a5;
  v8[5] = a6;
  _OWORD v8[2] = a1;
  v8[3] = a4;
  return _swift_task_switch(sub_1001873EC, 0, 0);
}

uint64_t sub_1001873EC()
{
  char v1 = *(unsigned char *)(v0[3] + *(void *)(*(void *)v0[3] + 248));
  uint64_t v2 = (void *)swift_task_alloc();
  v0[10] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1001874AC;
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[9];
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[4];
  uint64_t v8 = v0[5];
  uint64_t v9 = v0[2];
  return sub_1001875A0(v9, v7, v8, v1, v5, v6, v3, v4);
}

uint64_t sub_1001874AC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  char v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1001875A0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v9 + 680) = v8;
  *(void *)(v9 + 672) = a8;
  *(void *)(v9 + 664) = a7;
  *(void *)(v9 + 656) = a6;
  *(void *)(v9 + 648) = a5;
  *(unsigned char *)(v9 + 1124) = a4;
  *(void *)(v9 + 640) = a3;
  *(void *)(v9 + 632) = a2;
  *(void *)(v9 + 624) = a1;
  *(void *)(v9 + 688) = type metadata accessor for ThimbledEvent();
  *(void *)(v9 + 696) = swift_task_alloc();
  uint64_t v10 = sub_100003918(&qword_100208A00);
  *(void *)(v9 + 704) = v10;
  *(void *)(v9 + 712) = *(void *)(v10 - 8);
  *(void *)(v9 + 720) = swift_task_alloc();
  uint64_t v11 = sub_1001BF340();
  *(void *)(v9 + 728) = v11;
  *(void *)(v9 + 736) = *(void *)(v11 - 8);
  *(void *)(v9 + 744) = swift_task_alloc();
  uint64_t v12 = sub_1001BF8D0();
  *(void *)(v9 + 752) = v12;
  *(void *)(v9 + 760) = *(void *)(v12 - 8);
  *(void *)(v9 + 768) = swift_task_alloc();
  uint64_t v13 = sub_1001BF450();
  *(void *)(v9 + 776) = v13;
  *(void *)(v9 + 784) = *(void *)(v13 - 8);
  *(void *)(v9 + 792) = swift_task_alloc();
  *(void *)(v9 + 800) = swift_task_alloc();
  uint64_t v14 = sub_1001BFD80();
  *(void *)(v9 + 808) = v14;
  *(void *)(v9 + 816) = *(void *)(v14 - 8);
  *(void *)(v9 + 824) = swift_task_alloc();
  *(void *)(v9 + 832) = type metadata accessor for ValidatedAttestation();
  *(void *)(v9 + 840) = swift_task_alloc();
  *(void *)(v9 + 848) = swift_task_alloc();
  uint64_t v15 = sub_1001BF2C0();
  *(void *)(v9 + 856) = v15;
  *(void *)(v9 + 864) = *(void *)(v15 - 8);
  *(void *)(v9 + 872) = swift_task_alloc();
  *(void *)(v9 + 880) = swift_task_alloc();
  uint64_t v16 = sub_1001BF950();
  *(void *)(v9 + 888) = v16;
  *(void *)(v9 + 896) = *(void *)(v16 - 8);
  *(void *)(v9 + 904) = swift_task_alloc();
  *(void *)(v9 + 912) = type metadata accessor for Proto_Ropes_Common_Attestation(0);
  *(void *)(v9 + 920) = swift_task_alloc();
  *(void *)(v9 + 928) = swift_task_alloc();
  *(void *)(v9 + 936) = swift_task_alloc();
  *(void *)(v9 + 944) = swift_task_alloc();
  *(void *)(v9 + 952) = swift_task_alloc();
  *(void *)(v9 + 960) = swift_task_alloc();
  *(void *)(v9 + 968) = swift_task_alloc();
  *(void *)(v9 + 976) = swift_task_alloc();
  *(void *)(v9 + 984) = swift_task_alloc();
  return _swift_task_switch(sub_1001879D0, 0, 0);
}

uint64_t sub_1001879D0()
{
  char v1 = (uint64_t *)v0[123];
  uint64_t v2 = v0[113];
  uint64_t v3 = v0[112];
  uint64_t v11 = v0[111];
  uint64_t v4 = v0[85];
  uint64_t v5 = v0[80];
  uint64_t v6 = v0[79];
  sub_1001BF310();
  sub_10018C778(qword_100207DC0, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v12 = sub_1001C1780();
  uint64_t v13 = v7;
  v15._uint64_t countAndFlagsBits = 58;
  v15._object = (void *)0xE100000000000000;
  sub_1001C0D00(v15);
  v0[124] = v12;
  v0[125] = v13;
  v0[126] = *(void *)(*(void *)v4 + 200);
  sub_10018C4E8(v6, (uint64_t)v1, type metadata accessor for Proto_Ropes_Common_Attestation);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[127] = (uint64_t)v8;
  v0[128] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v8(v2, v5, v11);
  sub_1000BA1C8(v1, v2, v0 + 36);
  uint64_t v9 = (void *)swift_task_alloc();
  v0[129] = (uint64_t)v9;
  void *v9 = v0;
  v9[1] = sub_100187B8C;
  return sub_100193DE4((uint64_t)(v0 + 36));
}

uint64_t sub_100187B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[130] = a1;
  v4[131] = a2;
  v4[132] = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v5 = sub_1001885F0;
  }
  else
  {
    sub_1001609D0((uint64_t)(v4 + 36));
    uint64_t v5 = sub_100187CB0;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100187CB0()
{
  uint64_t v16 = v0;
  if (v0[131])
  {
    v0[133] = *(void *)(v0[85] + *(void *)(*(void *)v0[85] + 184));
    type metadata accessor for TC2AttestationStore();
    sub_10018C778(&qword_10020C4E0, (void (*)(uint64_t))type metadata accessor for TC2AttestationStore);
    uint64_t v2 = sub_1001C0EA0();
    v0[134] = v2;
    v0[135] = v1;
    return _swift_task_switch(sub_100188190, v2, v1);
  }
  else
  {
    sub_10018C4E8(v0[79], v0[121], type metadata accessor for Proto_Ropes_Common_Attestation);
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1001C0330();
    os_log_type_t v4 = sub_1001C11F0();
    BOOL v5 = os_log_type_enabled(v3, v4);
    unint64_t v6 = v0[125];
    if (v5)
    {
      uint64_t v7 = v0[124];
      uint64_t v8 = v0[121];
      uint64_t v9 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315394;
      swift_bridgeObjectRetain();
      v0[56] = sub_1000DF238(v7, v6, &v15);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v9 + 12) = 2080;
      uint64_t v10 = *(void *)(v8 + 16);
      unint64_t v11 = *(void *)(v8 + 24);
      swift_bridgeObjectRetain();
      v0[57] = sub_1000DF238(v10, v11, &v15);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      sub_10018C608(v8, type metadata accessor for Proto_Ropes_Common_Attestation);
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s unique identifier for attestation %s missing", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v12 = v0[121];

      swift_bridgeObjectRelease_n();
      sub_10018C608(v12, type metadata accessor for Proto_Ropes_Common_Attestation);
    }
    (*(void (**)(void, void, void))(v0[102] + 104))(v0[103], enum case for Prefetch.Response.Node.ValidationResult.noUniqueIdentifier(_:), v0[101]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001BFD50();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_100188190()
{
  *(unsigned char *)(v0 + 1125) = sub_1000C975C(*(void *)(v0 + 1040), *(void *)(v0 + 1048));
  return _swift_task_switch(sub_100188208, 0, 0);
}

uint64_t sub_100188208()
{
  uint64_t v25 = v0;
  if (*(unsigned char *)(v0 + 1125) == 1)
  {
    sub_10018C4E8(*(void *)(v0 + 632), *(void *)(v0 + 960), type metadata accessor for Proto_Ropes_Common_Attestation);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v1 = sub_1001C0330();
    os_log_type_t v2 = sub_1001C1200();
    BOOL v3 = os_log_type_enabled(v1, v2);
    unint64_t v4 = *(void *)(v0 + 1048);
    if (v3)
    {
      uint64_t v23 = *(void *)(v0 + 1040);
      unint64_t v5 = *(void *)(v0 + 1000);
      uint64_t v6 = *(void *)(v0 + 992);
      uint64_t v7 = *(void *)(v0 + 960);
      uint64_t v8 = swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136315650;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 600) = sub_1000DF238(v6, v5, &v24);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v8 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 608) = sub_1000DF238(v23, v4, &v24);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v8 + 22) = 2080;
      uint64_t v9 = *(void *)(v7 + 16);
      unint64_t v10 = *(void *)(v7 + 24);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 616) = sub_1000DF238(v9, v10, &v24);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      sub_10018C608(v7, type metadata accessor for Proto_Ropes_Common_Attestation);
      _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s node exists in store for attestation %s %s", (uint8_t *)v8, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v20 = *(void *)(v0 + 960);

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      sub_10018C608(v20, type metadata accessor for Proto_Ropes_Common_Attestation);
    }
    uint64_t v21 = *(void *)(v0 + 1080);
    uint64_t v22 = *(void *)(v0 + 1072);
    return _swift_task_switch(sub_1001893E0, v22, v21);
  }
  else
  {
    unint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1016);
    uint64_t v12 = *(uint64_t **)(v0 + 984);
    uint64_t v13 = *(void *)(v0 + 904);
    uint64_t v14 = *(void *)(v0 + 888);
    uint64_t v15 = *(void *)(v0 + 640);
    uint64_t v16 = *(void *)(v0 + 632);
    swift_bridgeObjectRelease();
    sub_1001BF2B0();
    sub_10018C4E8(v16, (uint64_t)v12, type metadata accessor for Proto_Ropes_Common_Attestation);
    v11(v13, v15, v14);
    sub_1000BA1C8(v12, v13, (uint64_t *)(v0 + 192));
    uint64_t v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 1088) = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_100188A64;
    uint64_t v18 = *(void *)(v0 + 848);
    return sub_1001923EC(v18, v0 + 192);
  }
}

uint64_t sub_1001885F0()
{
  unint64_t v19 = v0;
  uint64_t v1 = v0[122];
  uint64_t v2 = v0[79];
  sub_1001609D0((uint64_t)(v0 + 36));
  sub_10018C4E8(v2, v1, type metadata accessor for Proto_Ropes_Common_Attestation);
  swift_bridgeObjectRetain();
  BOOL v3 = sub_1001C0330();
  os_log_type_t v4 = sub_1001C11F0();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = v0[125];
    uint64_t v6 = v0[124];
    uint64_t v7 = v0[122];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315394;
    swift_bridgeObjectRetain();
    v0[59] = sub_1000DF238(v6, v5, &v18);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    uint64_t v9 = *(void *)(v7 + 16);
    unint64_t v10 = *(void *)(v7 + 24);
    swift_bridgeObjectRetain();
    v0[58] = sub_1000DF238(v9, v10, &v18);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    sub_10018C608(v7, type metadata accessor for Proto_Ropes_Common_Attestation);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s unable to check the unique id of the attestation and hence skipping validation: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v11 = v0[122];

    swift_bridgeObjectRelease_n();
    sub_10018C608(v11, type metadata accessor for Proto_Ropes_Common_Attestation);
  }
  uint64_t v12 = (uint64_t *)v0[103];
  uint64_t v13 = v0[102];
  uint64_t v17 = v0[101];
  v0[61] = v0[132];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  sub_100003918(&qword_100208C98);
  *uint64_t v12 = sub_1001C0C40();
  v12[1] = v14;
  (*(void (**)(uint64_t *, void, uint64_t))(v13 + 104))(v12, enum case for Prefetch.Response.Node.ValidationResult.invalid(_:), v17);
  sub_1001BFD50();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_100188A64()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1096) = v0;
  swift_task_dealloc();
  if (v0)
  {
    BOOL v3 = sub_1001896D0;
  }
  else
  {
    sub_1001609D0(v2 + 192);
    BOOL v3 = sub_100188B80;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100188B80()
{
  uint64_t v47 = v0;
  uint64_t v1 = *(void *)(v0 + 832);
  uint64_t v2 = (void *)(*(void *)(v0 + 848) + *(int *)(v1 + 28));
  *(void *)(v0 + 1104) = *v2;
  uint64_t v3 = v2[1];
  *(void *)(v0 + 1112) = v3;
  if (!v3)
  {
    sub_10018C4E8(*(void *)(v0 + 632), *(void *)(v0 + 944), type metadata accessor for Proto_Ropes_Common_Attestation);
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1001C0330();
    uint64_t v21 = sub_1001C11F0();
    BOOL v22 = os_log_type_enabled(v20, (os_log_type_t)v21);
    unint64_t v23 = *(void *)(v0 + 1000);
    if (v22)
    {
      uint64_t v24 = *(void *)(v0 + 992);
      uint64_t v25 = *(void *)(v0 + 944);
      uint64_t v26 = swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 528) = sub_1000DF238(v24, v23, &v46);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v26 + 12) = 2080;
      uint64_t v27 = *(void *)(v25 + 16);
      unint64_t v28 = *(void *)(v25 + 24);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 536) = sub_1000DF238(v27, v28, &v46);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      sub_10018C608(v25, type metadata accessor for Proto_Ropes_Common_Attestation);
      _os_log_impl((void *)&_mh_execute_header, v20, (os_log_type_t)v21, "%s attestation validation did not return a unique id for attestation: %s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v31 = *(void *)(v0 + 944);

      swift_bridgeObjectRelease_n();
      sub_10018C608(v31, type metadata accessor for Proto_Ropes_Common_Attestation);
    }
    uint64_t v45 = *(void *)(v0 + 880);
    uint64_t v32 = *(void *)(v0 + 864);
    uint64_t v42 = *(void *)(v0 + 848);
    uint64_t v43 = *(void *)(v0 + 856);
    uint64_t v33 = *(void *)(v0 + 824);
    uint64_t v34 = *(void *)(v0 + 816);
    uint64_t v35 = *(void *)(v0 + 808);
    long long v36 = (unsigned int *)&enum case for Prefetch.Response.Node.ValidationResult.noUniqueIdentifier(_:);
    goto LABEL_14;
  }
  *(_DWORD *)(v0 + 1120) = *(_DWORD *)(v1 + 24);
  swift_bridgeObjectRetain();
  sub_1001BF270();
  if (v4 > 172800.0)
  {
    uint64_t v5 = *(void *)(v0 + 936);
    uint64_t v6 = *(void *)(v0 + 848);
    uint64_t v7 = *(void *)(v0 + 840);
    uint64_t v8 = *(void *)(v0 + 632);
    swift_bridgeObjectRelease();
    sub_10018C4E8(v8, v5, type metadata accessor for Proto_Ropes_Common_Attestation);
    sub_10018C4E8(v6, v7, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1001C0330();
    os_log_type_t v10 = sub_1001C11F0();
    BOOL v11 = os_log_type_enabled(v9, v10);
    unint64_t v12 = *(void *)(v0 + 1000);
    if (v11)
    {
      uint64_t v13 = *(void *)(v0 + 992);
      os_log_type_t v44 = v10;
      uint64_t v14 = *(void *)(v0 + 936);
      uint64_t v41 = *(void *)(v0 + 840);
      uint64_t v15 = swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315650;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 576) = sub_1000DF238(v13, v12, &v46);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v15 + 12) = 2080;
      uint64_t v16 = *(void *)(v14 + 16);
      unint64_t v17 = *(void *)(v14 + 24);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 584) = sub_1000DF238(v16, v17, &v46);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      sub_10018C608(v14, type metadata accessor for Proto_Ropes_Common_Attestation);
      *(_WORD *)(v15 + 22) = 2080;
      sub_10018C778(&qword_10020C558, (void (*)(uint64_t))&type metadata accessor for Date);
      uint64_t v18 = sub_1001C1780();
      *(void *)(v0 + 592) = sub_1000DF238(v18, v19, &v46);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      sub_10018C608(v41, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
      _os_log_impl((void *)&_mh_execute_header, v9, v44, "%s attestation validation returned too long expiration for attestation: %s; expiry: %s",
        (uint8_t *)v15,
        0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v37 = *(void *)(v0 + 936);
      uint64_t v38 = *(void *)(v0 + 840);

      swift_bridgeObjectRelease_n();
      sub_10018C608(v37, type metadata accessor for Proto_Ropes_Common_Attestation);
      sub_10018C608(v38, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
    }
    uint64_t v45 = *(void *)(v0 + 880);
    uint64_t v32 = *(void *)(v0 + 864);
    uint64_t v42 = *(void *)(v0 + 848);
    uint64_t v43 = *(void *)(v0 + 856);
    uint64_t v33 = *(void *)(v0 + 824);
    uint64_t v34 = *(void *)(v0 + 816);
    uint64_t v35 = *(void *)(v0 + 808);
    long long v36 = (unsigned int *)&enum case for Prefetch.Response.Node.ValidationResult.validatedExpiryTooLarge(_:);
LABEL_14:
    (*(void (**)(uint64_t, void, uint64_t))(v34 + 104))(v33, *v36, v35);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001BFD50();
    sub_10018C608(v42, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v45, v43);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v39 = *(uint64_t (**)(void))(v0 + 8);
    return v39();
  }
  uint64_t v29 = *(void *)(v0 + 1080);
  uint64_t v30 = *(void *)(v0 + 1072);
  return _swift_task_switch(sub_10018A5F0, v30, v29);
}

uint64_t sub_1001893E0()
{
  *(unsigned char *)(v0 + 1126) = sub_1000CA738(*(void *)(v0 + 640), *(void *)(v0 + 1040), *(void *)(v0 + 1048), (*(unsigned char *)(v0 + 1124) & 1) == 0, *(void **)(v0 + 664), *(void *)(v0 + 672)) & 1;
  return _swift_task_switch(sub_100189470, 0, 0);
}

uint64_t sub_100189470()
{
  if (*(unsigned char *)(v0 + 1126)) {
    uint64_t v1 = (unsigned int *)&enum case for Prefetch.Response.Node.ValidationResult.nodeAlreadyExistsInBatch(_:);
  }
  else {
    uint64_t v1 = (unsigned int *)&enum case for Prefetch.Response.Node.ValidationResult.validationNotNeeded(_:);
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 816) + 104))(*(void *)(v0 + 824), *v1, *(void *)(v0 + 808));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001BFD50();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1001896D0()
{
  uint64_t v134 = v0;
  uint64_t v1 = *(void *)(v0 + 952);
  uint64_t v2 = *(void *)(v0 + 632);
  sub_1001609D0(v0 + 192);
  sub_10018C4E8(v2, v1, type metadata accessor for Proto_Ropes_Common_Attestation);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v3 = sub_1001C0330();
  os_log_type_t v4 = sub_1001C11F0();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = *(void *)(v0 + 1000);
    uint64_t v6 = *(void *)(v0 + 992);
    uint64_t v7 = *(void *)(v0 + 952);
    uint64_t v8 = swift_slowAlloc();
    uint64_t v132 = (void *)swift_slowAlloc();
    v133[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315650;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 504) = sub_1000DF238(v6, v5, v133);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    uint64_t v9 = *(void *)(v7 + 16);
    unint64_t v10 = *(void *)(v7 + 24);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 512) = sub_1000DF238(v9, v10, v133);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    sub_10018C608(v7, type metadata accessor for Proto_Ropes_Common_Attestation);
    *(_WORD *)(v8 + 22) = 2112;
    swift_errorRetain();
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 520) = v11;
    sub_1001C1310();
    *uint64_t v132 = v11;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s attestation validation failed for node: %s with error: %@", (uint8_t *)v8, 0x20u);
    sub_100003918(&qword_100207DA8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v12 = *(void *)(v0 + 952);

    swift_bridgeObjectRelease_n();
    sub_10018C608(v12, type metadata accessor for Proto_Ropes_Common_Attestation);
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v13 = *(void *)(v0 + 872);
  uint64_t v14 = *(void *)(v0 + 864);
  uint64_t v125 = *(void *)(v0 + 856);
  uint64_t v15 = *(uint64_t **)(v0 + 800);
  uint64_t v16 = *(void *)(v0 + 792);
  uint64_t v17 = *(void *)(v0 + 784);
  uint64_t v18 = *(void *)(v0 + 776);
  unint64_t v19 = (uint64_t *)(*(void *)(v0 + 680) + *(void *)(**(void **)(v0 + 680) + 256));
  uint64_t v20 = v19[1];
  uint64_t v120 = *v19;
  swift_bridgeObjectRetain();
  unint64_t v21 = sub_10005523C((uint64_t)_swiftEmptyArrayStorage);
  uint64_t *v15 = sub_1001BF2D0();
  v15[1] = v22;
  unsigned int v128 = enum case for EventValue.string(_:);
  uint64_t v126 = *(void (**)(uint64_t *))(v17 + 104);
  v126(v15);
  uint64_t v130 = v15;
  uint64_t v127 = *(void (**)(uint64_t, uint64_t *, uint64_t))(v17 + 32);
  v127(v16, v15, v18);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v133[0] = v21;
  sub_1000EB0EC(v16, 8, isUniquelyReferenced_nonNull_native);
  uint64_t v24 = v133[0];
  swift_bridgeObjectRelease();
  sub_1001BF2B0();
  sub_1001BF280();
  double v26 = v25;
  long long v124 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8);
  uint64_t result = v124(v13, v125);
  if ((~*(void *)&v26 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (v26 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v26 >= 9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v123 = v20;
  unint64_t v28 = *(uint64_t **)(v0 + 800);
  uint64_t v29 = *(void *)(v0 + 792);
  uint64_t v30 = *(void *)(v0 + 776);
  uint64_t v111 = *(void *)(v0 + 768);
  uint64_t v116 = *(void *)(v0 + 760);
  uint64_t v121 = *(void *)(v0 + 752);
  uint64_t v31 = *(void *)(v0 + 680);
  *unint64_t v28 = (uint64_t)v26;
  unsigned int v107 = enum case for EventValue.int(_:);
  v126(v28);
  v127(v29, v28, v30);
  char v32 = swift_isUniquelyReferenced_nonNull_native();
  v133[0] = v24;
  sub_1000EB0EC(v29, 0, v32);
  uint64_t v113 = v133[0];
  swift_bridgeObjectRelease();
  uint64_t v110 = v31;
  uint64_t v33 = (void *)(v31 + *(void *)(*(void *)v31 + 208));
  uint64_t v35 = (void (*)(char *, uint64_t, uint64_t))v33[3];
  uint64_t v34 = v33[4];
  sub_10000D934(v33, (uint64_t)v35);
  long long v36 = (_OWORD *)(v31 + *(void *)(*(void *)v31 + 224));
  *(void *)(v0 + 408) = &type metadata for SystemInfo;
  *(void *)(v0 + 416) = &protocol witness table for SystemInfo;
  uint64_t v37 = (_OWORD *)swift_allocObject();
  *(void *)(v0 + 384) = v37;
  long long v39 = v36[1];
  long long v38 = v36[2];
  *(_OWORD *)(v0 + 16) = *v36;
  *(_OWORD *)(v0 + 32) = v39;
  *(_OWORD *)(v0 + 48) = v38;
  long long v40 = v36[6];
  long long v42 = v36[3];
  long long v41 = v36[4];
  *(_OWORD *)(v0 + 96) = v36[5];
  *(_OWORD *)(v0 + 112) = v40;
  *(_OWORD *)(v0 + 64) = v42;
  *(_OWORD *)(v0 + 80) = v41;
  long long v43 = v36[10];
  long long v45 = v36[7];
  long long v44 = v36[8];
  *(_OWORD *)(v0 + 160) = v36[9];
  *(_OWORD *)(v0 + 176) = v43;
  *(_OWORD *)(v0 + 128) = v45;
  *(_OWORD *)(v0 + 144) = v44;
  uint64_t v46 = *(void *)(v0 + 168);
  uint64_t v108 = *(void *)(v0 + 160);
  long long v48 = v36[1];
  long long v47 = v36[2];
  v37[1] = *v36;
  v37[2] = v48;
  v37[3] = v47;
  long long v49 = v36[6];
  long long v51 = v36[3];
  long long v50 = v36[4];
  v37[6] = v36[5];
  v37[7] = v49;
  v37[4] = v51;
  v37[5] = v50;
  long long v52 = v36[10];
  long long v54 = v36[7];
  long long v53 = v36[8];
  v37[10] = v36[9];
  v37[11] = v52;
  v37[8] = v54;
  v37[9] = v53;
  sub_100016110(v0 + 16);
  TC2Configuration.environment(systemInfo:)(v0 + 384, v35, v34, v111);
  sub_100003E90(v0 + 384);
  uint64_t v55 = sub_1001BF8A0();
  uint64_t v57 = v56;
  (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v111, v121);
  *unint64_t v28 = v55;
  v130[1] = v57;
  ((void (*)(uint64_t *, void, uint64_t))v126)(v28, v128, v30);
  v127(v29, v28, v30);
  char v58 = swift_isUniquelyReferenced_nonNull_native();
  v133[0] = v113;
  sub_1000EB0EC(v29, 1, v58);
  uint64_t v59 = v133[0];
  swift_bridgeObjectRelease();
  *unint64_t v28 = v108;
  v130[1] = v46;
  ((void (*)(uint64_t *, void, uint64_t))v126)(v28, v128, v30);
  v127(v29, v28, v30);
  swift_bridgeObjectRetain();
  char v60 = swift_isUniquelyReferenced_nonNull_native();
  v133[0] = v59;
  sub_1000EB0EC(v29, 2, v60);
  uint64_t v61 = v133[0];
  swift_bridgeObjectRelease();
  uint64_t v62 = (uint64_t *)(v110 + *(void *)(*(void *)v110 + 264));
  uint64_t v63 = v62[1];
  if (v63)
  {
    uint64_t v64 = *(uint64_t **)(v0 + 800);
    uint64_t v65 = *(void *)(v0 + 792);
    uint64_t v66 = *(void *)(v0 + 776);
    uint64_t *v64 = *v62;
    v130[1] = v63;
    uint64_t v67 = v128;
    uint64_t v68 = v126;
    ((void (*)(uint64_t *, void, uint64_t))v126)(v64, v128, v66);
    v127(v65, v64, v66);
    swift_bridgeObjectRetain();
    char v69 = swift_isUniquelyReferenced_nonNull_native();
    v133[0] = v61;
    sub_1000EB0EC(v65, 3, v69);
    uint64_t v61 = v133[0];
    swift_bridgeObjectRelease();
    uint64_t v70 = v123;
    if (!v123) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v70 = v123;
  uint64_t v68 = v126;
  uint64_t v67 = v128;
  if (v123)
  {
LABEL_9:
    uint64_t v71 = *(uint64_t **)(v0 + 800);
    uint64_t v72 = *(void *)(v0 + 792);
    uint64_t v73 = *(void *)(v0 + 776);
    *uint64_t v71 = v120;
    v130[1] = v70;
    ((void (*)(uint64_t *, uint64_t, uint64_t))v68)(v71, v67, v73);
    v127(v72, v71, v73);
    swift_bridgeObjectRetain();
    char v74 = swift_isUniquelyReferenced_nonNull_native();
    v133[0] = v61;
    sub_1000EB0EC(v72, 5, v74);
    uint64_t v61 = v133[0];
    swift_bridgeObjectRelease();
  }
LABEL_10:
  uint64_t v114 = *(void *)(v0 + 872);
  uint64_t v117 = *(void *)(v0 + 856);
  uint64_t v75 = *(unint64_t **)(v0 + 800);
  uint64_t v76 = *(void *)(v0 + 792);
  uint64_t v77 = *(void *)(v0 + 776);
  uint64_t v78 = *(void *)(v0 + 744);
  uint64_t v79 = *(void *)(v0 + 736);
  uint64_t v80 = *(void *)(v0 + 728);
  uint64_t v122 = *(void *)(v0 + 632);
  sub_1001BF330();
  uint64_t v81 = sub_1001BF320();
  uint64_t v83 = v82;
  (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v78, v80);
  unint64_t *v75 = v81;
  v130[1] = v83;
  ((void (*)(unint64_t *, void, uint64_t))v126)(v75, v128, v77);
  v127(v76, (uint64_t *)v75, v77);
  char v84 = swift_isUniquelyReferenced_nonNull_native();
  v133[0] = v61;
  sub_1000EB0EC(v76, 7, v84);
  uint64_t v85 = v133[0];
  swift_bridgeObjectRelease();
  sub_1001BF440();
  v127(v76, (uint64_t *)v75, v77);
  char v86 = swift_isUniquelyReferenced_nonNull_native();
  v133[0] = v85;
  sub_1000EB0EC(v76, 9, v86);
  uint64_t v87 = v133[0];
  swift_bridgeObjectRelease();
  uint64_t v88 = *(void *)(v122 + 24);
  unint64_t *v75 = *(void *)(v122 + 16);
  v130[1] = v88;
  ((void (*)(unint64_t *, void, uint64_t))v126)(v75, v128, v77);
  v127(v76, (uint64_t *)v75, v77);
  swift_bridgeObjectRetain();
  char v89 = swift_isUniquelyReferenced_nonNull_native();
  v133[0] = v87;
  sub_1000EB0EC(v76, 11, v89);
  uint64_t v90 = v133[0];
  swift_bridgeObjectRelease();
  swift_getErrorValue();
  Error.telemetryString.getter(*(void *)(v0 + 432), *(void *)(v0 + 440), v75);
  v127(v76, (uint64_t *)v75, v77);
  char v91 = swift_isUniquelyReferenced_nonNull_native();
  v133[0] = v90;
  sub_1000EB0EC(v76, 10, v91);
  uint64_t v92 = v133[0];
  swift_bridgeObjectRelease();
  sub_1001BF2B0();
  sub_1001BF210();
  double v94 = v93;
  uint64_t result = v124(v114, v117);
  double v95 = v94 * 1000.0;
  if ((~COERCE__INT64(v94 * 1000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v95 <= -9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v95 >= 9.22337204e18)
  {
LABEL_23:
    __break(1u);
    return result;
  }
  uint64_t v112 = *(void *)(v0 + 1096);
  uint64_t v129 = *(void *)(v0 + 856);
  uint64_t v131 = *(void *)(v0 + 880);
  uint64_t v115 = *(uint64_t **)(v0 + 824);
  uint64_t v118 = *(void *)(v0 + 816);
  uint64_t v119 = *(void *)(v0 + 808);
  uint64_t v96 = *(uint64_t **)(v0 + 800);
  uint64_t v97 = *(void *)(v0 + 792);
  uint64_t v98 = *(void *)(v0 + 776);
  uint64_t v99 = *(void *)(v0 + 712);
  uint64_t v109 = *(void *)(v0 + 704);
  uint64_t v100 = *(void **)(v0 + 696);
  uint64_t v106 = *(void *)(v0 + 720);
  *uint64_t v96 = (uint64_t)v95;
  ((void (*)(uint64_t *, void, uint64_t))v126)(v96, v107, v98);
  v127(v97, v96, v98);
  char v101 = swift_isUniquelyReferenced_nonNull_native();
  v133[0] = v92;
  sub_1000EB0EC(v97, 12, v101);
  uint64_t v102 = v133[0];
  swift_bridgeObjectRelease();
  v100[3] = &type metadata for TC2AttestationnVerificationErrorMetric;
  v100[4] = sub_100160F8C();
  uint64_t v103 = (void *)swift_allocObject();
  void *v100 = v103;
  v103[2] = 0xD000000000000015;
  v103[3] = 0x80000001001C6770;
  v103[4] = v102;
  v103[5] = v120;
  v103[6] = v123;
  swift_storeEnumTagMultiPayload();
  sub_100003918(qword_100208000);
  sub_1001C0FE0();
  (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v106, v109);
  *(void *)(v0 + 496) = v112;
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100003918(&qword_100208C98);
  *uint64_t v115 = sub_1001C0C40();
  v115[1] = v104;
  (*(void (**)(uint64_t *, void, uint64_t))(v118 + 104))(v115, enum case for Prefetch.Response.Node.ValidationResult.invalid(_:), v119);
  sub_1001BFD50();
  swift_errorRelease();
  v124(v131, v129);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v105 = *(uint64_t (**)(void))(v0 + 8);
  return v105();
}

uint64_t sub_10018A5F0()
{
  *(unsigned char *)(v0 + 1127) = sub_1000C2CAC(*(unint64_t **)(v0 + 848), *(void *)(v0 + 640), (*(unsigned char *)(v0 + 1124) & 1) == 0, *(void *)(v0 + 664), *(void *)(v0 + 672)) & 1;
  return _swift_task_switch(sub_10018A67C, 0, 0);
}

uint64_t sub_10018A67C()
{
  uint64_t v33 = v0;
  uint64_t v1 = *(void *)(v0 + 632);
  if (*(unsigned char *)(v0 + 1127) == 1)
  {
    sub_10018C4E8(v1, *(void *)(v0 + 928), type metadata accessor for Proto_Ropes_Common_Attestation);
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1001C0330();
    os_log_type_t v3 = sub_1001C1200();
    BOOL v4 = os_log_type_enabled(v2, v3);
    unint64_t v5 = *(void *)(v0 + 1000);
    if (v4)
    {
      uint64_t v6 = *(void *)(v0 + 992);
      uint64_t v7 = *(void *)(v0 + 928);
      uint64_t v8 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 560) = sub_1000DF238(v6, v5, &v32);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v8 + 12) = 2080;
      uint64_t v9 = *(void *)(v7 + 16);
      unint64_t v10 = *(void *)(v7 + 24);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 568) = sub_1000DF238(v9, v10, &v32);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      sub_10018C608(v7, type metadata accessor for Proto_Ropes_Common_Attestation);
      uint64_t v11 = "%s successfully saved attestation for node: %s";
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v2, v3, v11, (uint8_t *)v8, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      goto LABEL_10;
    }
    uint64_t v18 = *(void *)(v0 + 928);
  }
  else
  {
    sub_10018C4E8(v1, *(void *)(v0 + 920), type metadata accessor for Proto_Ropes_Common_Attestation);
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1001C0330();
    os_log_type_t v3 = sub_1001C1200();
    BOOL v12 = os_log_type_enabled(v2, v3);
    unint64_t v13 = *(void *)(v0 + 1000);
    if (v12)
    {
      uint64_t v14 = *(void *)(v0 + 992);
      uint64_t v15 = *(void *)(v0 + 920);
      uint64_t v8 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 544) = sub_1000DF238(v14, v13, &v32);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v8 + 12) = 2080;
      uint64_t v16 = *(void *)(v15 + 16);
      unint64_t v17 = *(void *)(v15 + 24);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 552) = sub_1000DF238(v16, v17, &v32);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      sub_10018C608(v15, type metadata accessor for Proto_Ropes_Common_Attestation);
      uint64_t v11 = "%s failed to save attestation for node: %s";
      goto LABEL_6;
    }
    uint64_t v18 = *(void *)(v0 + 920);
  }

  swift_bridgeObjectRelease_n();
  sub_10018C608(v18, type metadata accessor for Proto_Ropes_Common_Attestation);
LABEL_10:
  uint64_t v31 = *(void *)(v0 + 880);
  uint64_t v19 = *(void *)(v0 + 864);
  uint64_t v20 = *(void *)(v0 + 856);
  uint64_t v21 = *(void *)(v0 + 848);
  uint64_t v22 = *(uint64_t **)(v0 + 824);
  uint64_t v23 = *(void *)(v0 + 816);
  uint64_t v30 = *(void *)(v0 + 808);
  uint64_t v29 = v21 + *(int *)(v0 + 1120);
  uint64_t v24 = (char *)v22 + *(int *)(sub_100003918(&qword_10020EB50) + 48);
  uint64_t v25 = *(void *)(v21 + 96);
  unint64_t v26 = *(void *)(v21 + 104);
  *uint64_t v22 = v25;
  v22[1] = v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v24, v29, v20);
  (*(void (**)(uint64_t *, void, uint64_t))(v23 + 104))(v22, enum case for Prefetch.Response.Node.ValidationResult.valid(_:), v30);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100007B14(v25, v26);
  sub_1001BFD50();
  sub_10018C608(v21, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v31, v20);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
  return v27();
}

void sub_10018ACD0(uint64_t a1, uint64_t a2, unint64_t a3, const char *a4)
{
  swift_bridgeObjectRetain_n();
  osos_log_t log = sub_1001C0330();
  os_log_type_t v7 = sub_1001C1200();
  if (os_log_type_enabled(oslog, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    swift_bridgeObjectRetain();
    sub_1000DF238(a2, a3, &v10);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, oslog, v7, a4, v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_10018AE68(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 32);
  char v6 = *(unsigned char *)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + 48);
  char v8 = *(unsigned char *)(v1 + 56);
  uint64_t v9 = *(void *)(v1 + 64);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1000A12C8;
  return sub_10017FD58(a1, v12, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_10018AF74(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  BOOL v4 = __OFADD__(a1, a2);
  uint64_t result = a1 + a2;
  if (v4)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v7 = (int)a3;
      uint64_t v6 = a3 >> 32;
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(a3 + 16);
      uint64_t v6 = *(void *)(a3 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v7 = 0;
      uint64_t v6 = BYTE6(a4);
      break;
  }
  if (v6 < result || result < v7)
  {
LABEL_10:
    __break(1u);
    JUMPOUT(0x10018AFE0);
  }
  return result;
}

uint64_t sub_10018AFF0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v5 = (int)a3;
      uint64_t v4 = a3 >> 32;
      break;
    case 2uLL:
      uint64_t v5 = *(void *)(a3 + 16);
      uint64_t v4 = *(void *)(a3 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v5 = 0;
      uint64_t v4 = BYTE6(a4);
      break;
  }
  if (v4 < a1 || v5 > a1)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v7 = (int)a3;
      uint64_t v6 = a3 >> 32;
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(a3 + 16);
      uint64_t v6 = *(void *)(a3 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v7 = 0;
      uint64_t v6 = BYTE6(a4);
      break;
  }
  if (v6 < a2 || v7 > a2) {
    goto LABEL_16;
  }
  BOOL v8 = __OFSUB__(a2, a1);
  uint64_t result = a2 - a1;
  if (v8)
  {
LABEL_17:
    __break(1u);
    JUMPOUT(0x10018B0BCLL);
  }
  return result;
}

uint64_t sub_10018B0DC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = *a3;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v10;
  *uint64_t v10 = v8;
  v10[1] = sub_1000074CC;
  return sub_10018194C(a1, a2, v9, a4, a5, a6, a7, a8);
}

void *sub_10018B20C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _OWORD *a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10, unsigned __int8 a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  uint64_t v50 = a5;
  uint64_t v51 = a7;
  uint64_t v49 = a3;
  int v59 = a11;
  uint64_t v57 = a15;
  uint64_t v58 = a10;
  uint64_t v56 = a14;
  uint64_t v54 = a8;
  uint64_t v55 = a13;
  uint64_t v53 = a12;
  int v52 = a9;
  uint64_t v21 = sub_1001BF8E0();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21, v23);
  uint64_t v25 = (char *)&v48 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1001BEDD0();
  __chkstk_darwin(v26 - 8, v27);
  uint64_t v28 = sub_1001BFB30();
  uint64_t v61 = v28;
  uint64_t v62 = &protocol witness table for TC2DefaultConfiguration;
  uint64_t v29 = sub_10000395C((uint64_t *)&v60);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 32))(v29, a4, v28);
  sub_1001BEE10();
  swift_allocObject();
  uint64_t v30 = sub_1001BEE00();
  sub_1001BEDB0();
  sub_1001BEDE0();
  a16[2] = v30;
  (*(void (**)(char *, void, uint64_t))(v22 + 104))(v25, enum case for TC2LogCategory.prefetchRequest(_:), v21);
  sub_1001BFDD0();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v21);
  sub_1001BF300();
  *(void *)((char *)a16 + *(void *)(*a16 + 184)) = a1;
  *(void *)((char *)a16 + *(void *)(*a16 + 192)) = a2;
  sub_10018C710(v49, (uint64_t)a16 + *(void *)(*a16 + 200), (uint64_t (*)(void))type metadata accessor for TC2CloudAttestationVerifier);
  sub_10000E720(&v60, (uint64_t)a16 + *(void *)(*a16 + 208));
  *(void *)((char *)a16 + *(void *)(*a16 + 216)) = v50;
  uint64_t v31 = (_OWORD *)((char *)a16 + *(void *)(*a16 + 224));
  long long v32 = a6[1];
  *uint64_t v31 = *a6;
  v31[1] = v32;
  long long v33 = a6[5];
  v31[4] = a6[4];
  v31[5] = v33;
  long long v34 = a6[3];
  _OWORD v31[2] = a6[2];
  v31[3] = v34;
  long long v35 = a6[10];
  long long v36 = a6[8];
  v31[9] = a6[9];
  v31[10] = v35;
  long long v37 = a6[7];
  v31[6] = a6[6];
  v31[7] = v37;
  v31[8] = v36;
  long long v38 = (char *)a16 + *(void *)(*a16 + 232);
  uint64_t v39 = sub_1001BF950();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 32))(v38, v51, v39);
  long long v40 = (char *)a16 + *(void *)(*a16 + 240);
  uint64_t v41 = sub_100003918(qword_100208000);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 32))(v40, v54, v41);
  *((unsigned char *)a16 + *(void *)(*a16 + 248)) = v52;
  long long v42 = (void *)((char *)a16 + *(void *)(*a16 + 256));
  uint64_t v43 = v55;
  *long long v42 = v53;
  v42[1] = v43;
  long long v44 = (void *)((char *)a16 + *(void *)(*a16 + 264));
  uint64_t v45 = v57;
  *long long v44 = v56;
  v44[1] = v45;
  uint64_t v46 = (char *)a16 + *(void *)(*a16 + 272);
  *(void *)uint64_t v46 = v58;
  v46[8] = v59 & 1;
  return a16;
}

unint64_t sub_10018B678()
{
  unint64_t result = qword_10020EA98;
  if (!qword_10020EA98)
  {
    sub_1000166C8(&qword_10020EA90);
    sub_10018C778(&qword_10020EAA0, (void (*)(uint64_t))&type metadata accessor for Prefetch.Response);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020EA98);
  }
  return result;
}

uint64_t sub_10018B71C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 192, 7);
}

void sub_10018B7A4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000A12C8;
  uint64_t v2 = (char *)&dword_10020EAB0 + dword_10020EAB0;
  __asm { BR              X9; sub_10018B0DC }
}

uint64_t sub_10018B8EC(uint64_t a1)
{
  return sub_1001ACB40(a1, *(void *)(v1 + 16));
}

uint64_t sub_10018B908()
{
  uint64_t v1 = sub_1001BF950();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10018B9E8(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1001BF950() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = *(void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_1000A12C8;
  return sub_10018332C(a1, v6, v7, v8, v9, v10);
}

uint64_t sub_10018BB10()
{
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10018BB50(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000A12C8;
  return sub_100183AC0(a1, v4, v5, v6);
}

uint64_t sub_10018BC00(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v9 = v2[6];
  uint64_t v10 = v2[7];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v11;
  void *v11 = v3;
  v11[1] = sub_1000A12C8;
  return sub_100183DC8(a1, a2, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_10018BD1C()
{
  uint64_t v1 = type metadata accessor for Proto_Ropes_Common_Attestation(0);
  uint64_t v23 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v22 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v29 = sub_1001BF950();
  uint64_t v27 = *(void *)(v29 - 8);
  uint64_t v2 = *(unsigned __int8 *)(v27 + 80);
  uint64_t v21 = *(void *)(v27 + 64);
  uint64_t v28 = sub_1001BF310();
  uint64_t v3 = *(void *)(v28 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v20 = *(void *)(v3 + 64);
  uint64_t v5 = sub_1001BF2C0();
  uint64_t v25 = *(void *)(v5 - 8);
  uint64_t v26 = v5;
  uint64_t v6 = *(unsigned __int8 *)(v25 + 80);
  uint64_t v19 = *(void *)(v25 + 64);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v24 = (v23 + 40) & ~v23;
  sub_10000792C(*(void *)(v0 + v24), *(void *)(v0 + v24 + 8));
  swift_bridgeObjectRelease();
  uint64_t v7 = v0 + v24 + *(int *)(v1 + 24);
  uint64_t v8 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v0 + v24 + *(int *)(v1 + 32);
  uint64_t v10 = sub_1001BFDF0();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v23 | v2 | v4 | v6 | 7;
  uint64_t v13 = (v24 + v22 + v2) & ~v2;
  uint64_t v14 = (v13 + v21 + v4) & ~v4;
  uint64_t v15 = (v20 + v4 + v14) & ~v4;
  unint64_t v16 = (v6 + ((v20 + v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v0 + v13, v29);
  unint64_t v17 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v17(v0 + v14, v28);
  v17(v0 + v15, v28);
  (*(void (**)(unint64_t, uint64_t))(v25 + 8))(v0 + v16, v26);
  return _swift_deallocObject(v0, v16 + v19, v12);
}

uint64_t sub_10018C0D0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Proto_Ropes_Common_Attestation(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(sub_1001BF950() - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(sub_1001BF310() - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  unint64_t v12 = (v8 + v9 + v11) & ~v11;
  uint64_t v13 = *(void *)(v10 + 64);
  unint64_t v14 = (v13 + v11 + v12) & ~v11;
  unint64_t v15 = (v13 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v16 = *(unsigned __int8 *)(*(void *)(sub_1001BF2C0() - 8) + 80);
  uint64_t v17 = v16 + v15 + 8;
  uint64_t v18 = *(void *)(v1 + 32);
  uint64_t v19 = v1 + v5;
  uint64_t v20 = v1 + v8;
  uint64_t v21 = v1 + v12;
  uint64_t v22 = v1 + v14;
  uint64_t v23 = *(void *)(v1 + v15);
  uint64_t v24 = v1 + (v17 & ~v16);
  uint64_t v25 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v25;
  *uint64_t v25 = v2;
  v25[8] = v23;
  v25[9] = v24;
  v25[6] = v21;
  v25[7] = v22;
  v25[4] = v19;
  v25[5] = v20;
  void v25[2] = a1;
  v25[3] = v18;
  v25[1] = sub_1000074CC;
  return _swift_task_switch(sub_1001873EC, 0, 0);
}

uint64_t sub_10018C314()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10018C34C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_1000A12C8;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_10020F550 + dword_10020F550);
  return v6(a1, v4);
}

uint64_t sub_10018C404(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1001C0CE0();
    return sub_1001C0D50();
  }
  return result;
}

uint64_t sub_10018C4A0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10018C4E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10018C550(uint64_t a1, char a2)
{
  if (a2 == 1) {
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_10018C564(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1000A12C8;
  return sub_1001B98A0(a1, v1);
}

void sub_10018C600()
{
  sub_1001BA860(v0);
}

uint64_t sub_10018C608(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_10018C668()
{
  unint64_t result = qword_10020EB70;
  if (!qword_10020EB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020EB70);
  }
  return result;
}

unint64_t sub_10018C6BC()
{
  unint64_t result = qword_10020EB78;
  if (!qword_10020EB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020EB78);
  }
  return result;
}

uint64_t sub_10018C710(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10018C778(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10018C7C0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v4 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4) {
    return 0;
  }
  uint64_t v7 = 4 * v4;
  unint64_t v8 = 15;
  while (sub_1001C0D30() != a1 || v9 != a2)
  {
    char v10 = sub_1001C1840();
    swift_bridgeObjectRelease();
    if (v10) {
      return v8;
    }
    unint64_t v8 = sub_1001C0CD0();
    if (v7 == v8 >> 14) {
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_10018C8B0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v39 = a1;
  uint64_t v7 = sub_1001BF2C0();
  uint64_t v40 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v8);
  char v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100003918(&qword_10020BF98);
  uint64_t v13 = __chkstk_darwin(v11 - 8, v12);
  long long v38 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)&v35 - v16;
  uint64_t v18 = sub_1001BF7A0();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18, v20);
  uint64_t v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *v3;
  if (!*(void *)(v23 + 16))
  {
    uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
    v26(v17, 1, 1, v18);
LABEL_7:
    sub_10018DA98((uint64_t)v17);
    uint64_t v27 = a3;
    uint64_t v28 = 1;
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v26)(v27, v28, 1, v18);
  }
  long long v37 = v4;
  sub_10009A130((uint64_t)a2);
  unint64_t v24 = sub_100169FB8(a2);
  if (v25)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v19 + 16))(v17, *(void *)(v23 + 56) + *(void *)(v19 + 72) * v24, v18);
    uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
    v26(v17, 0, 1, v18);
  }
  else
  {
    uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
    v26(v17, 1, 1, v18);
  }
  sub_10009A184((uint64_t)a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1) {
    goto LABEL_7;
  }
  long long v36 = a3;
  uint64_t v30 = v17;
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  v31(v22, v30, v18);
  sub_1001BF780();
  sub_100190224(&qword_10020C540, (void (*)(uint64_t))&type metadata accessor for Date);
  char v32 = sub_1001C0BC0();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v7);
  if ((v32 & 1) == 0)
  {
    long long v34 = v36;
    v31(v36, v22, v18);
    uint64_t v27 = v34;
    uint64_t v28 = 0;
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v26)(v27, v28, 1, v18);
  }
  uint64_t v33 = (uint64_t)v38;
  v26(v38, 1, 1, v18);
  sub_10009A130((uint64_t)a2);
  sub_100091914(v33, a2);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v26)(v36, 1, 1, v18);
}

uint64_t sub_10018CCA8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003918(&qword_10020BF98);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v8 = *(_OWORD *)(a1 + 16);
  v30[0] = *(_OWORD *)a1;
  v30[1] = v8;
  v30[2] = *(_OWORD *)(a1 + 32);
  uint64_t v31 = *(void *)(a1 + 48);
  sub_100032A2C((uint64_t)v30);
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v26 = sub_10018D158(v9, (uint64_t)v30);
  uint64_t v10 = *(void *)(v26 + 16);
  if (v10)
  {
    uint64_t v11 = v26 + 32;
    do
    {
      long long v13 = *(_OWORD *)v11;
      long long v14 = *(_OWORD *)(v11 + 16);
      long long v15 = *(_OWORD *)(v11 + 32);
      uint64_t v29 = *(void *)(v11 + 48);
      v28[1] = v14;
      void v28[2] = v15;
      v28[0] = v13;
      sub_10009A130((uint64_t)v28);
      swift_bridgeObjectRetain();
      unint64_t v16 = sub_100169FB8((uint64_t *)v28);
      char v18 = v17;
      swift_bridgeObjectRelease();
      if (v18)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v20 = *v2;
        uint64_t v27 = *v2;
        *uint64_t v2 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1000EC234();
          uint64_t v20 = v27;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v21 = *(void *)(v20 + 56);
        uint64_t v22 = sub_1001BF7A0();
        uint64_t v23 = *(void *)(v22 - 8);
        (*(void (**)(char *, unint64_t, uint64_t))(v23 + 32))(v7, v21 + *(void *)(v23 + 72) * v16, v22);
        sub_10018E3F4(v16, v20);
        *uint64_t v2 = v20;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v7, 0, 1, v22);
      }
      else
      {
        uint64_t v12 = sub_1001BF7A0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v7, 1, 1, v12);
      }
      sub_10018DA98((uint64_t)v7);
      sub_10009A184((uint64_t)v28);
      v11 += 56;
      --v10;
    }
    while (v10);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_10018CF48(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_100003918(&qword_10020EC18);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  long long v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D934(a1, a1[3]);
  sub_100190078();
  sub_1001C19C0();
  v10[1] = a2;
  sub_100003918(&qword_10020EC00);
  sub_100190178();
  sub_1001C1740();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_10018D098(uint64_t a1)
{
  unint64_t v2 = sub_100190078();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10018D0D4(uint64_t a1)
{
  unint64_t v2 = sub_100190078();
  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_10018D110@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_10018FEF0(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_10018D13C(void *a1)
{
  return sub_10018CF48(a1, *v1);
}

uint64_t sub_10018D158(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 32) = v5;
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(a2 + 32);
  *(void *)(v4 + 64) = *(void *)(a2 + 48);
  uint64_t v46 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v44 = a1 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v6;
  uint64_t result = sub_100032A2C(a2);
  int64_t v11 = 0;
  int64_t v45 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v39 = &_swiftEmptyArrayStorage;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_54;
    }
    if (v14 >= v45) {
      goto LABEL_52;
    }
    unint64_t v15 = *(void *)(v44 + 8 * v14);
    ++v11;
    if (!v15)
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v45) {
        goto LABEL_52;
      }
      unint64_t v15 = *(void *)(v44 + 8 * v11);
      if (!v15)
      {
        int64_t v11 = v14 + 2;
        if (v14 + 2 >= v45) {
          goto LABEL_52;
        }
        unint64_t v15 = *(void *)(v44 + 8 * v11);
        if (!v15)
        {
          int64_t v11 = v14 + 3;
          if (v14 + 3 >= v45) {
            goto LABEL_52;
          }
          unint64_t v15 = *(void *)(v44 + 8 * v11);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
LABEL_24:
    uint64_t v17 = *(void *)(v46 + 48) + 56 * v13;
    uint64_t v19 = *(void *)v17;
    uint64_t v18 = *(void *)(v17 + 8);
    uint64_t v20 = *(void *)(v17 + 16);
    unint64_t v21 = *(void *)(v17 + 24);
    uint64_t v48 = *(void *)(v17 + 32);
    long long v49 = *(_OWORD *)(v17 + 40);
    uint64_t v22 = *(void *)(a2 + 8);
    if (v22)
    {
      if (*(void *)a2 != v19 || v22 != v18)
      {
        uint64_t result = sub_1001C1840();
        if ((result & 1) == 0) {
          continue;
        }
      }
    }
    int64_t v47 = v11;
    unint64_t v24 = *(void *)(a2 + 24);
    if (!v24
      || ((uint64_t v25 = *(void *)(a2 + 16), v25 == v20) ? (v26 = v24 == v21) : (v26 = 0), v26 || (sub_1001C1840() & 1) != 0))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10018C7C0(46, 0xE100000000000000, v20, v21);
      if (v29) {
        goto LABEL_5;
      }
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_1001C0D50();
      unint64_t v42 = v31;
      unint64_t v43 = v30;
      uint64_t v40 = v33;
      uint64_t v41 = v32;
      swift_bridgeObjectRelease();
      char v34 = sub_10018FE0C(v25, v24, v43, v42, v41, v40);
      swift_bridgeObjectRelease();
      if ((v34 & 1) == 0) {
        goto LABEL_5;
      }
    }
    uint64_t v27 = *(void *)(a2 + 40);
    if ((!v27
       || (*(void *)(a2 + 32) == v48 ? (BOOL v28 = v27 == (void)v49) : (BOOL v28 = 0), v28 || (sub_1001C1840() & 1) != 0))
      && (sub_10002F9EC(*((uint64_t *)&v49 + 1)) & 1) != 0)
    {
      uint64_t v35 = v39;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = sub_10018F174(0, v39[2] + 1, 1);
        uint64_t v35 = v39;
      }
      unint64_t v37 = v35[2];
      unint64_t v36 = v35[3];
      if (v37 >= v36 >> 1)
      {
        uint64_t result = sub_10018F174(v36 > 1, v37 + 1, 1);
        uint64_t v35 = v39;
      }
      v35[2] = v37 + 1;
      uint64_t v39 = v35;
      long long v38 = &v35[7 * v37];
      v38[4] = v19;
      v38[5] = v18;
      v38[6] = v20;
      v38[7] = v21;
      int64_t v11 = v47;
      v38[8] = v48;
      *(_OWORD *)(v38 + 9) = v49;
    }
    else
    {
LABEL_5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      int64_t v11 = v47;
    }
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v45)
  {
LABEL_52:
    swift_release();
    swift_release();
    sub_100032A84(a2);
    return (uint64_t)v39;
  }
  unint64_t v15 = *(void *)(v44 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v45) {
      goto LABEL_52;
    }
    unint64_t v15 = *(void *)(v44 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_54:
  __break(1u);
  return result;
}

uint64_t sub_10018D58C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1001BF2C0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001BF780();
  char v9 = sub_1001BF240();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  uint64_t v10 = sub_1001BF7A0();
  uint64_t v11 = *(void *)(v10 - 8);
  if (v9)
  {
    uint64_t v12 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(a2, a1, v10);
    uint64_t v12 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a2, v12, 1, v10);
}

uint64_t sub_10018D704@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_100169F4C(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v19 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1000EBF2C();
      uint64_t v9 = v19;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = *(void *)(v9 + 56);
    uint64_t v11 = type metadata accessor for RateLimitTimingDetails(0);
    uint64_t v18 = *(void *)(v11 - 8);
    sub_10018FE78(v10 + *(void *)(v18 + 72) * v6, a2, type metadata accessor for RateLimitTimingDetails);
    sub_10018E024(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    uint64_t v13 = a2;
    uint64_t v14 = 0;
    uint64_t v15 = v11;
  }
  else
  {
    uint64_t v16 = type metadata accessor for RateLimitTimingDetails(0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    uint64_t v15 = v16;
    uint64_t v13 = a2;
    uint64_t v14 = 1;
  }
  return v12(v13, v14, 1, v15);
}

uint64_t sub_10018D8CC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_100169FB8(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v19 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1000EC234();
      uint64_t v9 = v19;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = *(void *)(v9 + 56);
    uint64_t v11 = sub_1001BF7A0();
    uint64_t v18 = *(void *)(v11 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v18 + 32))(a2, v10 + *(void *)(v18 + 72) * v6, v11);
    sub_10018E3F4(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    uint64_t v13 = a2;
    uint64_t v14 = 0;
    uint64_t v15 = v11;
  }
  else
  {
    uint64_t v16 = sub_1001BF7A0();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    uint64_t v15 = v16;
    uint64_t v13 = a2;
    uint64_t v14 = 1;
  }
  return v12(v13, v14, 1, v15);
}

uint64_t sub_10018DA98(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020BF98);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10018DAF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_100169E3C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v21 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1000EC8EC();
      uint64_t v11 = v21;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56);
    uint64_t v13 = type metadata accessor for ValidatedAttestation();
    uint64_t v20 = *(void *)(v13 - 8);
    sub_10018FE78(v12 + *(void *)(v20 + 72) * v8, a3, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
    sub_10018E700(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a3;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for ValidatedAttestation();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a3;
    uint64_t v16 = 1;
  }
  return v14(v15, v16, 1, v17);
}

uint64_t sub_10018DC9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_100169EB4(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1000ECEE4();
      uint64_t v9 = v21;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_1001BF310();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    uint64_t v12 = *(void *)(v9 + 56);
    uint64_t v13 = sub_100003918(&qword_100208640);
    uint64_t v20 = *(void *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 32))(a2, v12 + *(void *)(v20 + 72) * v6, v13);
    sub_10018E910(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = sub_100003918(&qword_100208640);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }
  return v14(v15, v16, 1, v17);
}

uint64_t sub_10018DE74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_100169E3C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v21 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1000ED290();
      uint64_t v11 = v21;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56);
    uint64_t v13 = sub_100003918(&qword_100208640);
    uint64_t v20 = *(void *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 32))(a3, v12 + *(void *)(v20 + 72) * v8, v13);
    sub_10018EC5C(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a3;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = sub_100003918(&qword_100208640);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a3;
    uint64_t v16 = 1;
  }
  return v14(v15, v16, 1, v17);
}

unint64_t sub_10018E024(unint64_t result, uint64_t a2)
{
  uint64_t v2 = a2;
  unint64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1001C13E0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      uint64_t v31 = v2;
      unint64_t v32 = (result + 1) & v7;
      uint64_t v33 = v4;
      do
      {
        int64_t v34 = v3;
        unint64_t v8 = (void *)(*(void *)(v2 + 48) + 56 * v6);
        uint64_t v9 = v8[1];
        uint64_t v10 = v8[3];
        uint64_t v11 = v8[5];
        uint64_t v12 = v8[6];
        sub_1001C1950();
        if (v9)
        {
          sub_1001C1970(1u);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          sub_1001C0CB0();
          swift_bridgeObjectRelease();
          if (v10) {
            goto LABEL_9;
          }
        }
        else
        {
          sub_1001C1970(0);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v10)
          {
LABEL_9:
            sub_1001C1970(1u);
            swift_bridgeObjectRetain();
            sub_1001C0CB0();
            swift_bridgeObjectRelease();
            goto LABEL_12;
          }
        }
        sub_1001C1970(0);
LABEL_12:
        if (v11)
        {
          sub_1001C1970(1u);
          swift_bridgeObjectRetain();
          sub_1001C0CB0();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1001C1970(0);
        }
        sub_1001C1960(*(void *)(v12 + 16));
        uint64_t v13 = *(void *)(v12 + 16);
        if (v13)
        {
          swift_bridgeObjectRetain();
          uint64_t v14 = v12 + 56;
          do
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1001C0CB0();
            sub_1001C0CB0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v14 += 32;
            --v13;
          }
          while (v13);
          swift_bridgeObjectRelease();
          uint64_t v2 = v31;
        }
        Swift::Int v15 = sub_1001C1990();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v16 = v15 & v7;
        unint64_t v3 = v34;
        if (v34 >= (uint64_t)v32)
        {
          uint64_t v4 = v33;
          if (v16 < v32) {
            goto LABEL_6;
          }
LABEL_23:
          if (v34 < (uint64_t)v16) {
            goto LABEL_6;
          }
          goto LABEL_24;
        }
        uint64_t v4 = v33;
        if (v16 < v32) {
          goto LABEL_23;
        }
LABEL_24:
        uint64_t v17 = *(void *)(v2 + 48);
        unint64_t v18 = v17 + 56 * v34;
        uint64_t v19 = (long long *)(v17 + 56 * v6);
        if (v34 != v6 || v18 >= (unint64_t)v19 + 56)
        {
          long long v20 = *v19;
          long long v21 = v19[1];
          long long v22 = v19[2];
          *(void *)(v18 + 48) = *((void *)v19 + 6);
          *(_OWORD *)(v18 + 16) = v21;
          *(_OWORD *)(v18 + 32) = v22;
          *(_OWORD *)unint64_t v18 = v20;
        }
        uint64_t v23 = *(void *)(v2 + 56);
        uint64_t v24 = *(void *)(*(void *)(type metadata accessor for RateLimitTimingDetails(0) - 8) + 72);
        uint64_t result = v23 + v24 * v34;
        if (v24 * v34 < (uint64_t)(v24 * v6) || result >= v23 + v24 * v6 + v24)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          unint64_t v3 = v6;
          if (v24 * v34 == v24 * v6) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        unint64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v25 = (uint64_t *)(v4 + 8 * (v3 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v25 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << result) - 1;
  }
  *uint64_t v25 = v27 & v26;
  uint64_t v28 = *(void *)(v2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v2 + 16) = v30;
    ++*(_DWORD *)(v2 + 36);
  }
  return result;
}

unint64_t sub_10018E3F4(unint64_t result, uint64_t a2)
{
  uint64_t v2 = a2;
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1001C13E0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      uint64_t v27 = v2;
      uint64_t v28 = v4;
      do
      {
        uint64_t v9 = *(void *)(*(void *)(v2 + 48) + 56 * v6 + 48);
        sub_1001C1950();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1001C0CB0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_1001C0CB0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_1001C0CB0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_10018FB7C((uint64_t)v29, v9);
        swift_bridgeObjectRelease();
        Swift::Int v10 = sub_1001C1990();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        Swift::Int v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
          {
            uint64_t v2 = v27;
            uint64_t v4 = v28;
            goto LABEL_6;
          }
          uint64_t v2 = v27;
          uint64_t v4 = v28;
          if (v3 < v11) {
            goto LABEL_6;
          }
        }
        else
        {
          uint64_t v2 = v27;
          uint64_t v4 = v28;
          if (v11 < v8 && v3 < v11) {
            goto LABEL_6;
          }
        }
        uint64_t v12 = *(void *)(v2 + 48);
        unint64_t v13 = v12 + 56 * v3;
        uint64_t v14 = (long long *)(v12 + 56 * v6);
        if (v3 != v6 || v13 >= (unint64_t)v14 + 56)
        {
          long long v15 = *v14;
          long long v16 = v14[1];
          long long v17 = v14[2];
          *(void *)(v13 + 48) = *((void *)v14 + 6);
          *(_OWORD *)(v13 + 16) = v16;
          *(_OWORD *)(v13 + 32) = v17;
          *(_OWORD *)unint64_t v13 = v15;
        }
        uint64_t v18 = *(void *)(v2 + 56);
        uint64_t v19 = *(void *)(*(void *)(sub_1001BF7A0() - 8) + 72);
        int64_t v20 = v19 * v3;
        uint64_t result = v18 + v19 * v3;
        if (v19 * v3 < (uint64_t)(v19 * v6) || result >= v18 + v19 * v6 + v19)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v20 == v19 * v6) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    long long v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    long long v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << result) - 1;
  }
  *long long v21 = v23 & v22;
  uint64_t v24 = *(void *)(v2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v2 + 16) = v26;
    ++*(_DWORD *)(v2 + 36);
  }
  return result;
}

unint64_t sub_10018E700(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1001C13E0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_1001C1950();
        swift_bridgeObjectRetain();
        sub_1001C0CB0();
        Swift::Int v9 = sub_1001C1990();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v10 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v11 = *(void *)(a2 + 48);
        uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
        unint64_t v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1) {
          *uint64_t v12 = *v13;
        }
        uint64_t v14 = *(void *)(a2 + 56);
        uint64_t v15 = *(void *)(*(void *)(type metadata accessor for ValidatedAttestation() - 8) + 72);
        int64_t v16 = v15 * v3;
        uint64_t result = v14 + v15 * v3;
        int64_t v17 = v15 * v6;
        unint64_t v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v16 == v17) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v10 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v10) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    int64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *int64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10018E910(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BF310();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = __chkstk_darwin(v4, v6);
  Swift::Int v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a2 + 64;
  uint64_t v11 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v12 = (a1 + 1) & ~v11;
  if (((1 << v12) & *(void *)(a2 + 64 + 8 * (v12 >> 6))) != 0)
  {
    uint64_t v13 = ~v11;
    unint64_t result = sub_1001C13E0();
    if ((*(void *)(v10 + 8 * (v12 >> 6)) & (1 << v12)) != 0)
    {
      unint64_t v40 = (result + 1) & v13;
      uint64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v14 = v5 + 16;
      uint64_t v16 = *(void *)(v14 + 56);
      uint64_t v41 = v14;
      long long v38 = (uint64_t (**)(char *, uint64_t))(v14 - 8);
      uint64_t v39 = v15;
      uint64_t v37 = v13;
      do
      {
        uint64_t v17 = v10;
        uint64_t v18 = v16;
        int64_t v19 = v16 * v12;
        v39(v9, *(void *)(a2 + 48) + v16 * v12, v4);
        sub_100190224((unint64_t *)&qword_1002087B0, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v20 = sub_1001C0BA0();
        unint64_t result = (*v38)(v9, v4);
        unint64_t v21 = v20 & v13;
        if (a1 >= (uint64_t)v40)
        {
          if (v21 >= v40 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            if (v18 * a1 < v19
              || *(void *)(a2 + 48) + v18 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v19 + v18))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v18 * a1 != v19)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v24 = *(void *)(a2 + 56);
            uint64_t v25 = *(void *)(*(void *)(sub_100003918(&qword_100208640) - 8) + 72);
            int64_t v26 = v25 * a1;
            unint64_t result = v24 + v25 * a1;
            int64_t v27 = v25 * v12;
            unint64_t v28 = v24 + v25 * v12 + v25;
            BOOL v29 = v26 < v27 || result >= v28;
            uint64_t v10 = v17;
            if (v29)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
              a1 = v12;
              uint64_t v13 = v37;
            }
            else
            {
              a1 = v12;
              uint64_t v13 = v37;
              if (v26 != v27)
              {
                unint64_t result = swift_arrayInitWithTakeBackToFront();
                a1 = v12;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v40 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        uint64_t v10 = v17;
LABEL_5:
        unint64_t v12 = (v12 + 1) & v13;
        uint64_t v16 = v18;
      }
      while (((*(void *)(v10 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
    }
    uint64_t v30 = (uint64_t *)(v10 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v30;
    uint64_t v32 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v30 = (uint64_t *)(v10 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v32 = *v30;
    uint64_t v31 = (-1 << a1) - 1;
  }
  *uint64_t v30 = v32 & v31;
  uint64_t v33 = *(void *)(a2 + 16);
  BOOL v34 = __OFSUB__(v33, 1);
  uint64_t v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v35;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10018EC5C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1001C13E0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_1001C1950();
        swift_bridgeObjectRetain();
        sub_1001C0CB0();
        Swift::Int v9 = sub_1001C1990();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v10 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v11 = *(void *)(a2 + 48);
        unint64_t v12 = (_OWORD *)(v11 + 16 * v3);
        uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1) {
          *unint64_t v12 = *v13;
        }
        uint64_t v14 = *(void *)(a2 + 56);
        uint64_t v15 = *(void *)(*(void *)(sub_100003918(&qword_100208640) - 8) + 72);
        int64_t v16 = v15 * v3;
        unint64_t result = v14 + v15 * v3;
        int64_t v17 = v15 * v6;
        unint64_t v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v16 == v17) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v10 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v10) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *uint64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10018EE7C(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BF310();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = __chkstk_darwin(v4, v6);
  Swift::Int v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(void *)(a2 + 64 + 8 * (v11 >> 6))) != 0)
  {
    uint64_t v12 = ~v10;
    uint64_t v35 = a2 + 64;
    unint64_t result = sub_1001C13E0();
    uint64_t v13 = v35;
    if ((*(void *)(v35 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      unint64_t v32 = (result + 1) & v12;
      uint64_t v33 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v34 = v5 + 16;
      uint64_t v14 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v15 = *(void *)(v5 + 72);
      do
      {
        uint64_t v16 = v15;
        int64_t v17 = v15 * v11;
        v33(v9, *(void *)(a2 + 48) + v15 * v11, v4);
        sub_100190224((unint64_t *)&qword_1002087B0, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v18 = sub_1001C0BA0();
        unint64_t result = (*v14)(v9, v4);
        unint64_t v19 = v18 & v12;
        if (a1 >= (uint64_t)v32)
        {
          if (v19 >= v32 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            uint64_t v22 = *(void *)(a2 + 48);
            uint64_t v15 = v16;
            unint64_t result = v22 + v16 * a1;
            if (v16 * a1 < v17 || result >= v22 + v17 + v16)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v16 * a1 != v17)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v23 = *(void *)(a2 + 56);
            BOOL v24 = (void *)(v23 + 8 * a1);
            uint64_t v25 = (void *)(v23 + 8 * v11);
            uint64_t v13 = v35;
            if (a1 != v11 || (a1 = v11, v24 >= v25 + 1))
            {
              *BOOL v24 = *v25;
              a1 = v11;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v32 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        uint64_t v13 = v35;
        uint64_t v15 = v16;
LABEL_5:
        unint64_t v11 = (v11 + 1) & v12;
      }
      while (((*(void *)(v13 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    int64_t v26 = (uint64_t *)(v13 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v26;
    uint64_t v28 = (-1 << a1) - 1;
  }
  else
  {
    int64_t v26 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v28 = *v26;
    uint64_t v27 = (-1 << a1) - 1;
  }
  *int64_t v26 = v28 & v27;
  uint64_t v29 = *(void *)(a2 + 16);
  BOOL v30 = __OFSUB__(v29, 1);
  uint64_t v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_10018F174(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018F3F4(a1, a2, a3, *v3);
  *int64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10018F194(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018F6EC(a1, a2, a3, (void *)*v3, &qword_10020EBE8, (uint64_t (*)(void))&type metadata accessor for TrustedCloudComputeError.RateLimitInfo.WorkloadTag);
  *int64_t v3 = result;
  return result;
}

uint64_t sub_10018F1D0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018F6EC(a1, a2, a3, (void *)*v3, &qword_10020EBD8, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
  *int64_t v3 = result;
  return result;
}

uint64_t sub_10018F20C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018F6EC(a1, a2, a3, (void *)*v3, &qword_10020EBE0, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest.AttestationMapping);
  *int64_t v3 = result;
  return result;
}

uint64_t sub_10018F248(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018F580(a1, a2, a3, *v3);
  *int64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10018F268(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018F6EC(a1, a2, a3, (void *)*v3, &qword_10020EBC0, (uint64_t (*)(void))&type metadata accessor for TrustedCloudComputeRateLimit);
  *int64_t v3 = result;
  return result;
}

uint64_t sub_10018F2A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018F6EC(a1, a2, a3, (void *)*v3, &qword_10020EBC8, (uint64_t (*)(void))&type metadata accessor for TrustedCloudComputeRateLimit.WorkloadParameter);
  *int64_t v3 = result;
  return result;
}

uint64_t sub_10018F2E0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018F6EC(a1, a2, a3, (void *)*v3, &qword_10020D1E8, (uint64_t (*)(void))&type metadata accessor for TC2TrustedRequestMetadata);
  *int64_t v3 = result;
  return result;
}

uint64_t sub_10018F31C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018F6EC(a1, a2, a3, (void *)*v3, &qword_10020EBD0, (uint64_t (*)(void))&type metadata accessor for TC2TrustedRequestEndpointMetadata);
  *int64_t v3 = result;
  return result;
}

uint64_t sub_10018F358(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018F934(a1, a2, a3, (void *)*v3, &qword_10020D1D0, qword_10020CE78);
  *int64_t v3 = result;
  return result;
}

uint64_t sub_10018F388(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018F6EC(a1, a2, a3, (void *)*v3, &qword_10020EBB8, (uint64_t (*)(void))&type metadata accessor for TC2RequestParameters);
  *int64_t v3 = result;
  return result;
}

uint64_t sub_10018F3C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018F934(a1, a2, a3, (void *)*v3, &qword_10020D5A0, &qword_100208640);
  *int64_t v3 = result;
  return result;
}

uint64_t sub_10018F3F4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100003918(&qword_10020EBB0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8]) {
      memmove(v12, v13, 56 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[56 * v8] || v12 >= &v13[56 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1001C15D0();
  __break(1u);
  return result;
}

uint64_t sub_10018F580(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100003918(&qword_10020D1C0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1001C15D0();
  __break(1u);
  return result;
}

uint64_t sub_10018F6EC(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100003918(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  BOOL v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_1001C15D0();
  __break(1u);
  return result;
}

uint64_t sub_10018F934(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100003918(a5);
  uint64_t v13 = *(void *)(sub_100003918(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(sub_100003918(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  BOOL v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_1001C15D0();
  __break(1u);
  return result;
}

void sub_10018FB7C(uint64_t a1, uint64_t a2)
{
  uint64_t v11 = a2 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  uint64_t v4 = v3 & *(void *)(a2 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  swift_bridgeObjectRetain();
  Swift::UInt v6 = 0;
  int64_t v7 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    int64_t v8 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v8 >= v5) {
      goto LABEL_19;
    }
    uint64_t v9 = *(void *)(v11 + 8 * v8);
    ++v7;
    if (!v9)
    {
      int64_t v7 = v8 + 1;
      if (v8 + 1 >= v5) {
        goto LABEL_19;
      }
      uint64_t v9 = *(void *)(v11 + 8 * v7);
      if (!v9) {
        break;
      }
    }
LABEL_18:
    uint64_t v4 = (v9 - 1) & v9;
LABEL_5:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001C0CB0();
    swift_bridgeObjectRelease();
    sub_1001C0CB0();
    swift_bridgeObjectRelease();
    v6 ^= sub_1001C1990();
  }
  int64_t v10 = v8 + 2;
  if (v10 >= v5)
  {
LABEL_19:
    swift_release();
    sub_1001C1960(v6);
    return;
  }
  uint64_t v9 = *(void *)(v11 + 8 * v10);
  if (v9)
  {
    int64_t v7 = v10;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v7 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v7 >= v5) {
      goto LABEL_19;
    }
    uint64_t v9 = *(void *)(v11 + 8 * v7);
    ++v10;
    if (v9) {
      goto LABEL_18;
    }
  }
LABEL_21:
  __break(1u);
}

uint64_t sub_10018FD44()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10018FD94(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if ((a4 & 0x2000000000000000) != 0) {
    uint64_t v6 = HIBYTE(a4) & 0xF;
  }
  else {
    uint64_t v6 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (a1 == a3 && a2 == a4 && v5 == v6) {
    return 1;
  }
  else {
    return sub_1001C1760() & 1;
  }
}

uint64_t sub_10018FE0C(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v7 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v7 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (a1 == a5 && a2 == a6 && !(a3 >> 16) && v7 == a4 >> 16) {
    return 1;
  }
  else {
    return sub_1001C1760() & 1;
  }
}

uint64_t sub_10018FE78(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

ValueMetadata *type metadata accessor for DeniedRequestLog()
{
  return &type metadata for DeniedRequestLog;
}

void *sub_10018FEF0(void *a1)
{
  uint64_t v3 = sub_100003918(&qword_10020EBF0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005586C((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
  int64_t v8 = sub_10000D934(a1, a1[3]);
  sub_100190078();
  sub_1001C19B0();
  if (v1)
  {
    sub_100003E90((uint64_t)a1);
  }
  else
  {
    sub_100003918(&qword_10020EC00);
    sub_1001900CC();
    sub_1001C1690();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    int64_t v8 = (void *)v10[1];
    sub_100003E90((uint64_t)a1);
  }
  return v8;
}

unint64_t sub_100190078()
{
  unint64_t result = qword_10020EBF8;
  if (!qword_10020EBF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020EBF8);
  }
  return result;
}

unint64_t sub_1001900CC()
{
  unint64_t result = qword_10020EC08;
  if (!qword_10020EC08)
  {
    sub_1000166C8(&qword_10020EC00);
    sub_1000A6114();
    sub_100190224(&qword_10020EC10, (void (*)(uint64_t))&type metadata accessor for TrustedCloudComputeError.RateLimitInfo);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020EC08);
  }
  return result;
}

unint64_t sub_100190178()
{
  unint64_t result = qword_10020EC20;
  if (!qword_10020EC20)
  {
    sub_1000166C8(&qword_10020EC00);
    sub_1000A3294();
    sub_100190224(&qword_10020EC28, (void (*)(uint64_t))&type metadata accessor for TrustedCloudComputeError.RateLimitInfo);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020EC20);
  }
  return result;
}

uint64_t sub_100190224(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DeniedRequestLog.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        void *result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      void *result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100190308);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DeniedRequestLog.CodingKeys()
{
  return &type metadata for DeniedRequestLog.CodingKeys;
}

unint64_t sub_100190344()
{
  unint64_t result = qword_10020EC30;
  if (!qword_10020EC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020EC30);
  }
  return result;
}

unint64_t sub_10019039C()
{
  unint64_t result = qword_10020EC38;
  if (!qword_10020EC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020EC38);
  }
  return result;
}

unint64_t sub_1001903F4()
{
  unint64_t result = qword_10020EC40;
  if (!qword_10020EC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020EC40);
  }
  return result;
}

uint64_t AsyncConnectionWriterProtocol.write<A>(_:isComplete:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v7 + 48) = a6;
  *(void *)(v7 + 56) = v6;
  *(void *)(v7 + 32) = a4;
  *(void *)(v7 + 40) = a5;
  *(unsigned char *)(v7 + 104) = a2;
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a3;
  return _swift_task_switch(sub_100190474, 0, 0);
}

uint64_t sub_100190474()
{
  uint64_t v1 = sub_100190818();
  *(void *)(v0 + 64) = v1;
  *(void *)(v0 + 72) = v2;
  uint64_t v3 = v1;
  unint64_t v4 = v2;
  uint64_t v12 = *(void *)(v0 + 40);
  sub_1001C0570();
  sub_100007B14(v3, v4);
  uint64_t v5 = sub_1001C0540();
  *(void *)(v0 + 80) = v5;
  uint64_t v11 = (uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 + 8)
                                                                                              + **(int **)(v12 + 8));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_100190608;
  uint64_t v7 = *(void *)(v0 + 40);
  uint64_t v8 = *(void *)(v0 + 24);
  uint64_t v9 = *(unsigned __int8 *)(v0 + 104);
  return v11(v3, v4, v5, v9, v8, v7);
}

uint64_t sub_100190608()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_100190798;
  }
  else
  {
    unint64_t v4 = *(void *)(v2 + 72);
    uint64_t v5 = *(void *)(v2 + 64);
    swift_release();
    sub_10000792C(v5, v4);
    uint64_t v3 = sub_100190734;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100190734()
{
  sub_10000792C(v0[8], v0[9]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100190798()
{
  unint64_t v1 = v0[9];
  uint64_t v2 = v0[8];
  swift_release();
  sub_10000792C(v2, v1);
  sub_10000792C(v2, v1);
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100190818()
{
  uint64_t result = sub_1001C0000();
  if (!v0)
  {
    unint64_t v3 = v2;
    uint64_t v4 = result;
    switch(v2 >> 62)
    {
      case 1uLL:
        LODWORD(v9) = HIDWORD(result) - result;
        if (__OFSUB__(HIDWORD(result), result)) {
          goto LABEL_22;
        }
        unint64_t v9 = (int)v9;
LABEL_10:
        if ((v9 & 0x8000000000000000) != 0 || HIDWORD(v9))
        {
          sub_1001C1570();
          __break(1u);
          JUMPOUT(0x100190A5CLL);
        }
        unsigned int v12 = bswap32(v9);
        long long v14 = xmmword_1001CB200;
        if (v2 >> 62 != 2) {
          goto LABEL_16;
        }
        uint64_t v11 = *(void *)(result + 16);
        uint64_t v10 = *(void *)(result + 24);
        BOOL v8 = __OFSUB__(v10, v11);
        uint64_t v5 = v10 - v11;
        if (!v8) {
          goto LABEL_18;
        }
        __break(1u);
LABEL_16:
        LODWORD(v5) = HIDWORD(result) - result;
        if (__OFSUB__(HIDWORD(result), result)) {
          goto LABEL_23;
        }
        uint64_t v5 = (int)v5;
LABEL_18:
        if (__OFADD__(v5, 4))
        {
          __break(1u);
LABEL_22:
          __break(1u);
LABEL_23:
          __break(1u);
        }
        sub_1001BF120(v5 + 4);
        v13[3] = &type metadata for UnsafeRawBufferPointer;
        v13[4] = &protocol witness table for UnsafeRawBufferPointer;
        v13[0] = &v12;
        v13[1] = v13;
        sub_10000D934(v13, (uint64_t)&type metadata for UnsafeRawBufferPointer);
        sub_1001BF130();
        sub_100003E90((uint64_t)v13);
        sub_1001BF1B0();
        sub_10000792C(v4, v3);
        uint64_t result = v14;
        break;
      case 2uLL:
        uint64_t v7 = *(void *)(result + 16);
        uint64_t v6 = *(void *)(result + 24);
        BOOL v8 = __OFSUB__(v6, v7);
        unint64_t v9 = v6 - v7;
        if (!v8) {
          goto LABEL_10;
        }
        __break(1u);
LABEL_7:
        uint64_t v5 = 0;
        unsigned int v12 = 0;
        long long v14 = xmmword_1001CB200;
        goto LABEL_18;
      case 3uLL:
        goto LABEL_7;
      default:
        unsigned int v12 = (v2 >> 24) & 0xFF000000;
        long long v14 = xmmword_1001CB200;
        uint64_t v5 = BYTE6(v2);
        goto LABEL_18;
    }
  }
  return result;
}

void sub_100190A6C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1001C0340();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v5 = __chkstk_darwin(v2, v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  uint64_t v10 = (char *)&v23 - v9;
  BOOL v24 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v24((char *)&v23 - v9, v1, v2);
  uint64_t v11 = sub_1001C0330();
  os_log_type_t v12 = sub_1001C1200();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "acquirePowerAssertion", v13, 2u);
    swift_slowDealloc();
  }

  uint64_t v23 = *(void (**)(char *, uint64_t))(v3 + 8);
  v23(v10, v2);
  IOPMAssertionID AssertionID = 0;
  long long v14 = (__CFString *)sub_1001C0BE0();
  uint64_t v15 = type metadata accessor for PowerAssertion();
  uint64_t v16 = (__CFString *)sub_1001C0BE0();
  size_t v17 = (__CFString *)sub_1001C0BE0();
  IOReturn v18 = IOPMAssertionCreateWithDescription(v14, v16, v17, 0, 0, 10.0, 0, &AssertionID);

  if (v18)
  {
    v24(v7, v1, v2);
    uint64_t v19 = sub_1001C0330();
    os_log_type_t v20 = sub_1001C11F0();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "failed to create assertion for trusted request", v21, 2u);
      swift_slowDealloc();
    }

    v23(v7, v2);
    IOPMAssertionID v22 = 0;
  }
  else
  {
    IOPMAssertionID v22 = AssertionID;
  }
  *(_DWORD *)(v1 + *(int *)(v15 + 24)) = v22;
}

uint64_t type metadata accessor for PowerAssertion()
{
  uint64_t result = qword_10020ECA8;
  if (!qword_10020ECA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_100190DC8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1001C0340();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    *(_DWORD *)((char *)a1 + v9) = *(_DWORD *)((char *)a2 + v9);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100190EA8(uint64_t a1)
{
  uint64_t v2 = sub_1001C0340();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100190F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001C0340();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  void *v9 = *v10;
  v9[1] = v11;
  *(_DWORD *)(a1 + v8) = *(_DWORD *)(a2 + v8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100190FB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001C0340();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + *(int *)(a3 + 24)) = *(_DWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100191058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001C0340();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + v7) = *(_DWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_1001910DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001C0340();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + *(int *)(a3 + 24)) = *(_DWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100191174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100191188);
}

uint64_t sub_100191188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001C0340();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10019124C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100191260);
}

uint64_t sub_100191260(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1001C0340();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_100191320()
{
  uint64_t result = sub_1001C0340();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1001913C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1001C0340();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1001BF8D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    long long v14 = (char *)a2 + v12;
    uint64_t v15 = sub_1001BF560();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t sub_10019151C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001C0340();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1001BF8D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_1001BF560();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  return v9(v7, v8);
}

uint64_t sub_10019160C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001C0340();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1001BF8D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1001BF560();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t sub_100191714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001C0340();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1001BF8D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1001BF560();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t sub_10019181C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001C0340();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1001BF8D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1001BF560();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t sub_100191924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001C0340();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1001BF8D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1001BF560();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_100191A2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100191A40);
}

uint64_t sub_100191A40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001C0340();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1001BF8D0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_1001BF560();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);
  return v15(v17, a2, v16);
}

uint64_t sub_100191B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100191BA0);
}

uint64_t sub_100191BA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1001C0340();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_1001BF8D0();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_1001BF560();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);
  return v17(v19, a2, a2, v18);
}

uint64_t type metadata accessor for TC2CloudAttestationVerifier()
{
  uint64_t result = qword_10020ED40;
  if (!qword_10020ED40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100191D44()
{
  uint64_t result = sub_1001C0340();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1001BF8D0();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_1001BF560();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_100191E48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1001BF560();
  uint64_t v36 = *(void *)(v4 - 8);
  uint64_t v37 = v4;
  __chkstk_darwin(v4, v5);
  uint64_t v35 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_1001BF8D0();
  uint64_t v7 = *(void *)(v34 - 8);
  __chkstk_darwin(v34, v8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1001BF530();
  uint64_t v11 = *(void *)(v33 - 8);
  uint64_t v13 = __chkstk_darwin(v33, v12);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v16);
  uint64_t v18 = (char *)&v32 - v17;
  uint64_t v19 = sub_1001BF8E0();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19, v21);
  uint64_t v23 = (char *)&v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v20 + 104))(v23, enum case for TC2LogCategory.attestationVerifier(_:), v19);
  uint64_t v32 = a2;
  sub_1001BFDD0();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);
  uint64_t v24 = type metadata accessor for TC2CloudAttestationVerifier();
  uint64_t v25 = a2 + *(int *)(v24 + 20);
  uint64_t v26 = v7;
  uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  uint64_t v28 = v34;
  v27(v25, a1, v34);
  v27((uint64_t)v10, a1, v28);
  Environment.init(_:)((uint64_t)v10, (uint64_t)v18);
  uint64_t v29 = v33;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v18, v33);
  BOOL v30 = v35;
  sub_1001BF550();
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(a1, v28);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v29);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v36 + 32))(v32 + *(int *)(v24 + 24), v30, v37);
}

uint64_t sub_1001921C8(uint64_t a1, unint64_t a2)
{
  v10[3] = &type metadata for Data;
  v10[4] = &protocol witness table for Data;
  v10[0] = a1;
  v10[1] = a2;
  uint64_t v4 = sub_10000D934(v10, (uint64_t)&type metadata for Data);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  switch(v6 >> 62)
  {
    case 1uLL:
      if (v5 >> 32 < (int)v5) {
        __break(1u);
      }
      sub_100007B14(a1, a2);
      sub_100007B14(v5, v6);
      sub_100194428((int)v5, v5 >> 32);
      sub_10000792C(v5, v6);
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(v5 + 16);
      uint64_t v8 = *(void *)(v5 + 24);
      sub_100007B14(a1, a2);
      swift_retain();
      swift_retain();
      sub_100194428(v7, v8);
      swift_release();
      swift_release();
      break;
    default:
      sub_100007B14(a1, a2);
      sub_1001BF130();
      break;
  }
  return sub_100003E90((uint64_t)v10);
}

uint64_t sub_1001923EC(uint64_t a1, uint64_t a2)
{
  v3[19] = a2;
  v3[20] = v2;
  v3[18] = a1;
  v3[21] = type metadata accessor for TC2CloudAttestationVerifier();
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  uint64_t v4 = sub_1001C0340();
  v3[24] = v4;
  v3[25] = *(void *)(v4 - 8);
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  v3[28] = swift_task_alloc();
  uint64_t v5 = sub_100003918(&qword_10020EDA0);
  v3[29] = v5;
  v3[30] = *(void *)(v5 - 8);
  v3[31] = swift_task_alloc();
  uint64_t v6 = sub_1001BF5D0();
  v3[32] = v6;
  v3[33] = *(void *)(v6 - 8);
  v3[34] = swift_task_alloc();
  v3[35] = swift_task_alloc();
  v3[36] = swift_task_alloc();
  uint64_t v7 = sub_1001BF2C0();
  v3[37] = v7;
  v3[38] = *(void *)(v7 - 8);
  v3[39] = swift_task_alloc();
  v3[40] = swift_task_alloc();
  v3[41] = swift_task_alloc();
  v3[42] = swift_task_alloc();
  uint64_t v8 = sub_1001BF580();
  v3[43] = v8;
  v3[44] = *(void *)(v8 - 8);
  v3[45] = swift_task_alloc();
  v3[46] = swift_task_alloc();
  v3[47] = swift_task_alloc();
  v3[48] = swift_task_alloc();
  uint64_t v9 = sub_1001BF500();
  v3[49] = v9;
  v3[50] = *(void *)(v9 - 8);
  v3[51] = swift_task_alloc();
  v3[52] = swift_task_alloc();
  return _swift_task_switch(sub_100192784, 0, 0);
}

uint64_t sub_100192784()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = *(void *)(v1 + 16);
  v0[53] = v2;
  unint64_t v3 = *(void *)(v1 + 24);
  v0[54] = v3;
  if (v3 >> 60 == 15)
  {
    sub_10002C2C4();
    swift_allocError();
    *(unsigned char *)uint64_t v4 = 8;
    *(void *)(v4 + 8) = _swiftEmptyArrayStorage;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    sub_100007B14(v2, v3);
    sub_100007B14(v2, v3);
    sub_1001BF4F0();
    (*(void (**)(void, void, void))(v0[50] + 32))(v0[52], v0[51], v0[49]);
    sub_1001BF560();
    sub_100194540(&qword_10020EDA8, (void (*)(uint64_t))&type metadata accessor for NodeValidator);
    sub_1001BF5E0();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[55] = v7;
    swift_getOpaqueTypeConformance2();
    *uint64_t v7 = v0;
    v7[1] = sub_100192B50;
    uint64_t v8 = v0[52];
    uint64_t v10 = v0[41];
    uint64_t v11 = v0[35];
    uint64_t v12 = v0[31];
    uint64_t v13 = v0[29];
    uint64_t v9 = v0[47];
    return dispatch thunk of Validator.validate<A>(bundle:nonce:policy:)(v9, v10, v11, v8, 0, 0xF000000000000000, v12, v13);
  }
}

uint64_t sub_100192B50()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 448) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[30] + 8))(v2[31], v2[29]);
  if (v0) {
    unint64_t v3 = sub_1001939D8;
  }
  else {
    unint64_t v3 = sub_100192CE4;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100192CE4()
{
  uint64_t v143 = v0;
  uint64_t v1 = *(void *)(v0 + 328);
  uint64_t v2 = *(void *)(v0 + 336);
  uint64_t v3 = *(void *)(v0 + 296);
  uint64_t v4 = *(void *)(v0 + 304);
  uint64_t v6 = *(void *)(v0 + 280);
  uint64_t v5 = *(void *)(v0 + 288);
  uint64_t v7 = *(void *)(v0 + 256);
  uint64_t v8 = *(void *)(v0 + 264);
  (*(void (**)(void, void, void))(*(void *)(v0 + 352) + 32))(*(void *)(v0 + 384), *(void *)(v0 + 376), *(void *)(v0 + 344));
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  v9(v2, v1, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v5, v6, v7);
  uint64_t v10 = sub_1001BF5A0();
  if (v11)
  {
    uint64_t v12 = v10;
    uint64_t v13 = v11;
    sub_100194588(*(void *)(v0 + 152) + 64, v0 + 72);
    sub_100194588(v0 + 72, v0 + 56);
    uint64_t v14 = *(void *)(v0 + 64);
    if (!v14 || v13 == v14 && v12 == *(void *)(v0 + 56))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v73 = sub_1001C1840();
      swift_bridgeObjectRelease();
      if ((v73 & 1) == 0)
      {
        uint64_t v74 = *(void *)(v0 + 152);
        (*(void (**)(void, void, void))(*(void *)(v0 + 200) + 16))(*(void *)(v0 + 224), *(void *)(v0 + 160), *(void *)(v0 + 192));
        sub_1001944BC(v74);
        uint64_t v75 = sub_1001C0330();
        os_log_type_t v76 = sub_1001C11F0();
        BOOL v77 = os_log_type_enabled(v75, v76);
        uint64_t v78 = *(void *)(v0 + 224);
        uint64_t v79 = *(void *)(v0 + 192);
        uint64_t v80 = *(void *)(v0 + 200);
        uint64_t v81 = *(uint64_t **)(v0 + 152);
        if (v77)
        {
          uint64_t v140 = *(void *)(v0 + 224);
          uint64_t v82 = (uint8_t *)swift_slowAlloc();
          v142[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v82 = 136315138;
          uint64_t v135 = v79;
          uint64_t v84 = *v81;
          unint64_t v83 = v81[1];
          swift_bridgeObjectRetain();
          *(void *)(v0 + 104) = sub_1000DF238(v84, v83, v142);
          sub_1001C1310();
          swift_bridgeObjectRelease();
          sub_1001609D0((uint64_t)v81);
          _os_log_impl((void *)&_mh_execute_header, v75, v76, "RoutingHint mismatch detected for attestation=%s", v82, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v140, v135);
        }
        else
        {
          sub_1001609D0(*(void *)(v0 + 152));

          (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v78, v79);
        }
        uint64_t v86 = *(void *)(v0 + 424);
        unint64_t v85 = *(void *)(v0 + 432);
        uint64_t v87 = *(void *)(v0 + 400);
        uint64_t v136 = *(void *)(v0 + 392);
        uint64_t v141 = *(void *)(v0 + 416);
        uint64_t v88 = *(void *)(v0 + 352);
        uint64_t v132 = *(void *)(v0 + 344);
        uint64_t v134 = *(void *)(v0 + 384);
        uint64_t v89 = *(void *)(v0 + 304);
        uint64_t v125 = *(void *)(v0 + 296);
        uint64_t v129 = *(void *)(v0 + 336);
        uint64_t v90 = *(void *)(v0 + 288);
        uint64_t v92 = *(void *)(v0 + 256);
        uint64_t v91 = *(void *)(v0 + 264);
        sub_10002C2C4();
        swift_allocError();
        *(unsigned char *)uint64_t v93 = 10;
        *(void *)(v93 + 8) = _swiftEmptyArrayStorage;
        swift_willThrow();
        sub_100007918(v86, v85);
        (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v90, v92);
        (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v129, v125);
        (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v134, v132);
        (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v141, v136);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v71 = *(uint64_t (**)(void))(v0 + 8);
        goto LABEL_10;
      }
    }
  }
  os_log_type_t v133 = (void (*)(char *, uint64_t, uint64_t))v9;
  uint64_t v16 = *(void *)(v0 + 344);
  uint64_t v15 = *(void *)(v0 + 352);
  uint64_t v137 = *(void *)(v0 + 336);
  uint64_t v130 = *(void *)(v0 + 320);
  uint64_t v17 = *(void *)(v0 + 304);
  uint64_t v123 = *(void *)(v0 + 384);
  uint64_t v126 = *(void *)(v0 + 296);
  uint64_t v118 = *(void *)(v0 + 368);
  uint64_t v120 = *(void *)(v0 + 288);
  uint64_t v18 = *(void *)(v0 + 264);
  uint64_t v19 = *(void *)(v0 + 272);
  uint64_t v20 = *(void *)(v0 + 256);
  uint64_t v21 = *(void *)(v0 + 184);
  uint64_t v22 = *(void *)(v0 + 160);
  (*(void (**)(void, uint64_t, void))(*(void *)(v0 + 200) + 16))(*(void *)(v0 + 216), v22, *(void *)(v0 + 192));
  sub_10019430C(v22, v21);
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
  v23(v118, v123, v16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v19, v120, v20);
  uint64_t v24 = v126;
  uint64_t v127 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
  v127(v130, v137, v24);
  uint64_t v25 = sub_1001C0330();
  os_log_type_t v26 = sub_1001C1200();
  unint64_t v138 = v25;
  BOOL v27 = os_log_type_enabled(v25, v26);
  uint64_t v124 = *(void *)(v0 + 368);
  if (v27)
  {
    uint64_t v28 = *(void *)(v0 + 352);
    uint64_t v103 = *(void *)(v0 + 360);
    uint64_t v29 = *(void *)(v0 + 344);
    uint64_t v113 = *(void *)(v0 + 320);
    uint64_t v110 = *(void *)(v0 + 304);
    uint64_t v106 = *(void *)(v0 + 312);
    uint64_t v108 = *(void *)(v0 + 296);
    uint64_t v121 = *(void *)(v0 + 272);
    uint64_t v111 = *(void *)(v0 + 264);
    uint64_t v112 = *(void *)(v0 + 256);
    uint64_t v117 = *(void *)(v0 + 216);
    uint64_t v115 = *(void *)(v0 + 200);
    uint64_t v116 = *(void *)(v0 + 192);
    os_log_type_t type = v26;
    uint64_t v30 = *(void *)(v0 + 184);
    uint64_t v31 = swift_slowAlloc();
    v142[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v31 = 136446978;
    uint64_t v32 = sub_1001BF8A0();
    *(void *)(v0 + 112) = sub_1000DF238(v32, v33, v142);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    sub_100194370(v30);
    *(_WORD *)(v31 + 12) = 2080;
    v23(v103, v124, v29);
    uint64_t v34 = sub_1001C0C40();
    *(void *)(v0 + 120) = sub_1000DF238(v34, v35, v142);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    uint64_t v96 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    v96(v124, v29);
    *(_WORD *)(v31 + 22) = 2080;
    sub_1001BF5B0();
    sub_100194540(&qword_10020C558, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v36 = sub_1001C1780();
    unint64_t v38 = v37;
    uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v110 + 8);
    v39(v106, v108);
    *(void *)(v0 + 128) = sub_1000DF238(v36, v38, v142);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    double v94 = *(void (**)(uint64_t, uint64_t))(v111 + 8);
    v94(v121, v112);
    *(_WORD *)(v31 + 32) = 2080;
    uint64_t v40 = sub_1001C1780();
    *(void *)(v0 + 136) = sub_1000DF238(v40, v41, v142);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    double v95 = v39;
    v39(v113, v108);
    _os_log_impl((void *)&_mh_execute_header, v138, type, "verified attestation bundle environment=%{public}s publicKey=%s keyExpiration=%s attestationExpiry=%s", (uint8_t *)v31, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v117, v116);
  }
  else
  {
    uint64_t v42 = *(void *)(v0 + 344);
    uint64_t v43 = *(void *)(v0 + 352);
    uint64_t v44 = *(void *)(v0 + 320);
    uint64_t v45 = *(void *)(v0 + 296);
    uint64_t v46 = *(void *)(v0 + 304);
    uint64_t v48 = *(void *)(v0 + 264);
    uint64_t v47 = *(void *)(v0 + 272);
    uint64_t v49 = *(void *)(v0 + 256);
    uint64_t v50 = *(void *)(v0 + 200);
    uint64_t v119 = *(void *)(v0 + 192);
    uint64_t v122 = *(void *)(v0 + 216);
    sub_100194370(*(void *)(v0 + 184));
    uint64_t v96 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
    v96(v124, v42);
    double v94 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
    v94(v47, v49);
    double v95 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
    v95(v44, v45);

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v122, v119);
  }
  uint64_t v101 = *(void *)(v0 + 424);
  unint64_t v102 = *(void *)(v0 + 432);
  uint64_t v109 = *(void *)(v0 + 416);
  uint64_t v105 = *(void *)(v0 + 400);
  uint64_t v107 = *(void *)(v0 + 392);
  uint64_t v98 = *(void *)(v0 + 384);
  uint64_t v104 = *(void *)(v0 + 344);
  uint64_t v139 = *(void *)(v0 + 336);
  uint64_t v51 = *(void *)(v0 + 312);
  uint64_t v52 = *(void *)(v0 + 296);
  uint64_t v99 = *(void *)(v0 + 288);
  uint64_t v100 = *(void *)(v0 + 256);
  uint64_t v54 = *(char **)(v0 + 144);
  uint64_t v53 = *(_OWORD **)(v0 + 152);
  *(_OWORD *)uint64_t v142 = xmmword_1001CB200;
  uint64_t v55 = sub_100003918(&qword_10020EDB0);
  *(void *)(v0 + 40) = v55;
  *(void *)(v0 + 48) = sub_1001943CC();
  *(unsigned char *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 456) = *(unsigned char *)sub_10000D934((void *)(v0 + 16), v55);
  sub_1001BF110();
  sub_100003E90(v0 + 16);
  sub_1001BF130();
  uint64_t v56 = sub_1001BF570();
  unint64_t v58 = v57;
  sub_1001921C8(v56, v57);
  sub_10000792C(v56, v58);
  sub_1001BF130();
  sub_1001BF130();
  sub_1001BF130();
  long long v59 = *(_OWORD *)v142;
  v127(v51, v139, v52);
  sub_1001944BC((uint64_t)v53);
  sub_100007B14(v59, *((unint64_t *)&v59 + 1));
  uint64_t v60 = sub_1001BF5C0();
  uint64_t v128 = v61;
  uint64_t v131 = v60;
  uint64_t v97 = sub_1001BF5A0();
  uint64_t v63 = v62;
  sub_100007918(v101, v102);
  sub_10000792C(v59, *((unint64_t *)&v59 + 1));
  v94(v99, v100);
  v95(v139, v52);
  v96(v98, v104);
  (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v109, v107);
  long long v64 = v53[1];
  *(_OWORD *)uint64_t v54 = *v53;
  *((_OWORD *)v54 + 1) = v64;
  long long v65 = v53[2];
  long long v66 = v53[3];
  long long v67 = v53[5];
  *((_OWORD *)v54 + 4) = v53[4];
  *((_OWORD *)v54 + 5) = v67;
  *((_OWORD *)v54 + 2) = v65;
  *((_OWORD *)v54 + 3) = v66;
  *((_OWORD *)v54 + 6) = v59;
  uint64_t v68 = (int *)type metadata accessor for ValidatedAttestation();
  v133(&v54[v68[6]], v51, v52);
  char v69 = (uint64_t *)&v54[v68[7]];
  *char v69 = v131;
  v69[1] = v128;
  uint64_t v70 = (uint64_t *)&v54[v68[8]];
  uint64_t *v70 = v97;
  v70[1] = v63;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v71 = *(uint64_t (**)(void))(v0 + 8);
LABEL_10:
  return v71();
}

uint64_t sub_1001939D8()
{
  uint64_t v25 = v0;
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[20];
  (*(void (**)(void, uint64_t, void))(v0[25] + 16))(v0[26], v2, v0[24]);
  sub_10019430C(v2, v1);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = sub_1001C0330();
  os_log_type_t v4 = sub_1001C11F0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v21 = v0[25];
    uint64_t v22 = v0[24];
    uint64_t v23 = v0[26];
    uint64_t v5 = v0[22];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446466;
    uint64_t v8 = sub_1001BF8A0();
    v0[12] = sub_1000DF238(v8, v9, &v24);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    sub_100194370(v5);
    *(_WORD *)(v6 + 12) = 2112;
    swift_errorRetain();
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[11] = v10;
    sub_1001C1310();
    *uint64_t v7 = v10;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "unable to verify attestation, environment=%{public}s error=%@", (uint8_t *)v6, 0x16u);
    sub_100003918(&qword_100207DA8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v22);
  }
  else
  {
    uint64_t v12 = v0[25];
    uint64_t v11 = v0[26];
    uint64_t v13 = v0[24];
    sub_100194370(v0[22]);
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[53];
  unint64_t v15 = v0[54];
  uint64_t v16 = v0[52];
  uint64_t v17 = v0[49];
  uint64_t v18 = v0[50];
  swift_willThrow();
  sub_100007918(v14, v15);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_100193DE4(uint64_t a1)
{
  v1[4] = a1;
  uint64_t v2 = sub_1001BF500();
  v1[5] = v2;
  v1[6] = *(void *)(v2 - 8);
  v1[7] = swift_task_alloc();
  return _swift_task_switch(sub_100193EA4, 0, 0);
}

uint64_t sub_100193EA4()
{
  uint64_t v1 = v0[4];
  unint64_t v2 = *(void *)(v1 + 24);
  if (v2 >> 60 == 15)
  {
    sub_10002C2C4();
    swift_allocError();
    *(unsigned char *)uint64_t v3 = 8;
    *(void *)(v3 + 8) = _swiftEmptyArrayStorage;
    swift_willThrow();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    uint64_t v4 = *(void *)(v1 + 16);
    sub_100007B14(v4, *(void *)(v1 + 24));
    sub_100007B14(v4, v2);
    sub_1001BF4F0();
    uint64_t v8 = v0[6];
    uint64_t v7 = v0[7];
    uint64_t v9 = v0[5];
    sub_100003918(&qword_100207DB8);
    sub_1001BF4D0();
    sub_100007918(v4, v2);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    uint64_t v11 = v0[2];
    uint64_t v10 = v0[3];
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
    return v12(v11, v10);
  }
}

uint64_t sub_100194084@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1001BF540();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1001940C0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000074CC;
  return sub_1001923EC(a1, a2);
}

uint64_t sub_100194168(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1001941FC;
  return sub_100193DE4(a1);
}

uint64_t sub_1001941FC(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = *v3;
  uint64_t v6 = swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
  if (!v2)
  {
    uint64_t v6 = a1;
    uint64_t v7 = a2;
  }
  return v8(v6, v7);
}

uint64_t sub_10019430C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TC2CloudAttestationVerifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100194370(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TC2CloudAttestationVerifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1001943CC()
{
  unint64_t result = qword_10020EDB8;
  if (!qword_10020EDB8)
  {
    sub_1000166C8(&qword_10020EDB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10020EDB8);
  }
  return result;
}

uint64_t sub_100194428(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1001BEE60();
  if (!result || (uint64_t result = sub_1001BEE90(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_1001BEE80();
      return sub_1001BF130();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001944BC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a1 + 24);
  swift_bridgeObjectRetain();
  sub_10000D9E0(v2, v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100194540(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100194588(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100003918(&qword_100207DB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001945F0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003918(&qword_10020C370);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1001BF0B0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(v2 + qword_100208338, (uint64_t)v7, &qword_10020C370);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_100010360((uint64_t)v7, &qword_10020C370);
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v7, v8);
  id v14 = [self defaultManager];
  sub_1001BF070();
  NSString v15 = sub_1001C0BE0();
  swift_bridgeObjectRelease();
  unsigned __int8 v16 = [v14 fileExistsAtPath:v15];

  if ((v16 & 1) == 0) {
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  uint64_t v17 = sub_1001BF0D0();
  unint64_t v19 = v18;
  sub_100003918(&qword_10020E0C8);
  sub_100197098();
  uint64_t v20 = sub_1001BEED0();
  uint64_t v22 = v37;
  int64_t v23 = v37[2];
  int64_t v24 = *(void *)(v2 + 16);
  uint64_t v35 = v2;
  if (v24 < v23)
  {
    int64_t v34 = v24;
    swift_retain();
    uint64_t v25 = sub_1001C0330();
    os_log_type_t v26 = sub_1001C1200();
    int v32 = v26;
    if (os_log_type_enabled(v25, v26))
    {
      BOOL v27 = (_DWORD *)swift_slowAlloc();
      os_log_t v33 = v25;
      uint64_t v28 = v27;
      *BOOL v27 = 134218240;
      v31[1] = v27 + 1;
      swift_beginAccess();
      uint64_t v22 = v37;
      int64_t v36 = v37[2];
      sub_1001C1310();
      *((_WORD *)v28 + 6) = 2048;
      int64_t v36 = v34;
      sub_1001C1310();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v33, (os_log_type_t)v32, "trimming archive, count=%ld, maxCount=%ld", (uint8_t *)v28, 0x16u);
      uint64_t v25 = v33;
      swift_slowDealloc();
    }
    else
    {
      swift_release();
    }

    swift_bridgeObjectRetain();
    uint64_t v22 = (int64_t *)sub_100194BB0(v34, (uint64_t)v22);
    swift_beginAccess();
    unint64_t v37 = v22;
    uint64_t v20 = swift_bridgeObjectRelease();
  }
  __chkstk_darwin(v20, v21);
  uint64_t v29 = v35;
  v31[-4] = v22;
  v31[-3] = v29;
  v31[-2] = a1;
  uint64_t v30 = (os_unfair_lock_s *)(v29 + qword_100208340);
  swift_bridgeObjectRetain();
  os_unfair_lock_lock(v30);
  sub_100197168((uint64_t)&v30[2]);
  os_unfair_lock_unlock(v30);
  sub_10000792C(v17, v19);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  return swift_bridgeObjectRelease();
}

void *sub_100194BB0(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100003918(qword_10020CE78);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = (void *)__chkstk_darwin(v4 - 8, v6);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 < 0)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (!a1)
  {
    swift_bridgeObjectRelease();
    return &_swiftEmptyArrayStorage;
  }
  if (*(void *)(a2 + 16) >= a1) {
    int64_t v10 = a1;
  }
  else {
    int64_t v10 = *(void *)(a2 + 16);
  }
  uint64_t v30 = &_swiftEmptyArrayStorage;
  sub_10018F358(0, v10, 0);
  uint64_t v11 = (uint64_t)v30;
  uint64_t v12 = *(void *)(a2 + 16);
  if (!v12)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    return (void *)v11;
  }
  unint64_t v27 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v13 = a2 + v27;
  uint64_t v28 = *(void *)(v5 + 72);
  swift_bridgeObjectRetain();
  unint64_t v14 = 0;
  unint64_t v15 = 0;
  uint64_t v26 = v12 - 1;
  uint64_t v16 = a2;
  while (1)
  {
    uint64_t v19 = (uint64_t)v9;
    uint64_t result = (void *)sub_10003282C(v13, (uint64_t)v9, qword_10020CE78);
    unint64_t v20 = *(void *)(v11 + 16);
    uint64_t v30 = (void *)v11;
    if ((uint64_t)v20 < a1)
    {
      unint64_t v17 = *(void *)(v11 + 24);
      if (v20 >= v17 >> 1)
      {
        sub_10018F358(v17 > 1, v20 + 1, 1);
        uint64_t v11 = (uint64_t)v30;
      }
      *(void *)(v11 + 16) = v20 + 1;
      uint64_t v18 = v11 + v27 + v20 * v28;
      uint64_t v9 = (char *)v19;
      uint64_t result = (void *)sub_10002C318(v19, v18, qword_10020CE78);
    }
    else
    {
      if (v15 >= v20) {
        goto LABEL_30;
      }
      uint64_t v9 = (char *)v19;
      uint64_t result = (void *)sub_100104970(v19, v11 + v27 + v28 * v15);
      uint64_t v11 = (uint64_t)v30;
      if ((uint64_t)++v15 >= a1)
      {
        if (v26 == v14)
        {
          swift_bridgeObjectRelease_n();
          return (void *)v11;
        }
        unint64_t v15 = 0;
        goto LABEL_12;
      }
    }
    if (v26 == v14) {
      break;
    }
LABEL_12:
    ++v14;
    v13 += v28;
    if (v14 >= *(void *)(v16 + 16))
    {
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
  }
  swift_bridgeObjectRelease();
  if (!v15) {
    goto LABEL_25;
  }
  int64_t v21 = *(void *)(v11 + 16);
  uint64_t v29 = &_swiftEmptyArrayStorage;
  uint64_t result = (void *)sub_10018F358(0, v21, 0);
  if (v21 < (uint64_t)v15)
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if ((v15 & 0x8000000000000000) != 0) {
    goto LABEL_33;
  }
  unint64_t v22 = *(void *)(v11 + 16);
  if (v22 >= v15 && v22 >= v21)
  {
    uint64_t v23 = v11 + v27;
    uint64_t v24 = swift_retain();
    sub_1001969DC(v24, v23, v15, (2 * v21) | 1);
    swift_bridgeObjectRelease();
    sub_1001969DC(v11, v23, 0, (2 * v15) | 1);
    return v29;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_100194ED0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003918(&qword_10020C370);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = &v27[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1001BF0B0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  int64_t v10 = &v27[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10003282C(v1 + qword_100208338, (uint64_t)v5, &qword_10020C370);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1) {
    return sub_100010360((uint64_t)v5, &qword_10020C370);
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 32))(v10, v5, v6);
  uint64_t v12 = self;
  id v13 = [v12 defaultManager];
  sub_1001BF070();
  NSString v14 = sub_1001C0BE0();
  swift_bridgeObjectRelease();
  unsigned __int8 v15 = [v13 fileExistsAtPath:v14];

  if (v15)
  {
    id v16 = [v12 defaultManager];
    sub_1001BF020(v17);
    uint64_t v19 = v18;
    id v28 = 0;
    unsigned __int8 v20 = [v16 removeItemAtURL:v18 error:&v28];

    if (v20)
    {
      int64_t v21 = *(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8);
      id v22 = v28;
      return v21(v10, v6);
    }
    id v23 = v28;
    sub_1001BEFE0();

    swift_willThrow();
    uint64_t v24 = sub_1001C0330();
    os_log_type_t v25 = sub_1001C1200();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "failed to delete archive", v26, 2u);
      swift_slowDealloc();
    }
    swift_errorRelease();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_100195214()
{
  v1[8] = v0;
  uint64_t v2 = type metadata accessor for ValidatedAttestation();
  v1[9] = v2;
  v1[10] = *(void *)(v2 - 8);
  v1[11] = swift_task_alloc();
  sub_100003918(&qword_10020EDE8);
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  return _swift_task_switch(sub_100195314, 0, 0);
}

uint64_t sub_100195314()
{
  uint64_t v1 = *(void *)(v0[8] + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_attestationStore);
  v0[14] = v1;
  if (v1)
  {
    type metadata accessor for TC2AttestationStore();
    sub_10019718C(&qword_10020C4E0, (void (*)(uint64_t))type metadata accessor for TC2AttestationStore);
    swift_retain();
    uint64_t v3 = sub_1001C0EA0();
    return _swift_task_switch(sub_1001954CC, v3, v2);
  }
  else
  {
    uint64_t v4 = sub_1001C0330();
    os_log_type_t v5 = sub_1001C1200();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "attestation store unavailable", v6, 2u);
      swift_slowDealloc();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void *))v0[1];
    return v7(_swiftEmptyArrayStorage);
  }
}

uint64_t sub_1001954CC()
{
  *(void *)(v0 + 120) = sub_1000C46DC();
  return _swift_task_switch(sub_100195538, 0, 0);
}

void sub_100195538()
{
  int64_t v51 = 0;
  uint64_t v1 = v0[15];
  uint64_t v50 = v0[13];
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v44 = v1 + 64;
  uint64_t v47 = v0[12];
  uint64_t v48 = v1;
  uint64_t v3 = -1;
  uint64_t v4 = -1 << *(unsigned char *)(v1 + 32);
  if (-v4 < 64) {
    uint64_t v3 = ~(-1 << -(char)v4);
  }
  unint64_t v5 = v3 & v2;
  uint64_t v6 = (void *)v0[11];
  uint64_t v46 = v0[10];
  uint64_t v49 = v0[9];
  uint64_t v7 = (char *)_swiftEmptyArrayStorage;
  int64_t v45 = (unint64_t)(63 - v4) >> 6;
  if ((v3 & v2) == 0) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v8 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  unint64_t v9 = v8 | (v51 << 6);
  while (2)
  {
    int64_t v10 = (void *)v0[12];
    uint64_t v11 = (void *)(*(void *)(v48 + 48) + 16 * v9);
    uint64_t v12 = v11[1];
    *int64_t v10 = *v11;
    *(void *)(v47 + 8) = v12;
    uint64_t v13 = *(void *)(v48 + 56) + *(void *)(v46 + 72) * v9;
    uint64_t v14 = sub_100003918(&qword_100208C68);
    sub_10002C0E4(v13, (uint64_t)v10 + *(int *)(v14 + 48));
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v10, 0, 1, v14);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v20 = v0[13];
      sub_10002C318(v0[12], v20, &qword_10020EDE8);
      uint64_t v21 = sub_100003918(&qword_100208C68);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v20, 1, v21) == 1)
      {
        swift_release();
        swift_release();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v43 = (void (*)(char *))v0[1];
        v43(v7);
        return;
      }
      id v22 = (uint64_t *)v0[13];
      uint64_t v23 = v0[11];
      uint64_t v24 = *v22;
      os_log_type_t v25 = *(void **)(v50 + 8);
      sub_1000D479C((uint64_t)v22 + *(int *)(v21 + 48), v23);
      sub_1001C1420(163);
      v53._uint64_t countAndFlagsBits = v24;
      v53._object = v25;
      sub_1001C0D00(v53);
      swift_bridgeObjectRelease();
      v54._uint64_t countAndFlagsBits = 0x6C62757020202020;
      v54._object = (void *)0xEF203A79654B6369;
      sub_1001C0D00(v54);
      uint64_t v26 = v6[12];
      unint64_t v27 = v6[13];
      sub_100007B14(v26, v27);
      uint64_t v28 = sub_1001BF0E0();
      uint64_t v30 = v29;
      sub_10000792C(v26, v27);
      v55._uint64_t countAndFlagsBits = v28;
      v55._object = v30;
      sub_1001C0D00(v55);
      swift_bridgeObjectRelease();
      v56._uint64_t countAndFlagsBits = 0xD000000000000018;
      v56._object = (void *)0x80000001001C7150;
      sub_1001C0D00(v56);
      sub_1001BF2C0();
      sub_10019718C(&qword_10020C558, (void (*)(uint64_t))&type metadata accessor for Date);
      v57._uint64_t countAndFlagsBits = sub_1001C1780();
      sub_1001C0D00(v57);
      swift_bridgeObjectRelease();
      v58._uint64_t countAndFlagsBits = 0xD000000000000015;
      v58._object = (void *)0x80000001001C7170;
      sub_1001C0D00(v58);
      uint64_t v31 = v6[4];
      int v32 = (void *)v6[5];
      swift_bridgeObjectRetain();
      v59._uint64_t countAndFlagsBits = v31;
      v59._object = v32;
      sub_1001C0D00(v59);
      swift_bridgeObjectRelease();
      v60._uint64_t countAndFlagsBits = 0xD000000000000019;
      v60._object = (void *)0x80000001001C7190;
      sub_1001C0D00(v60);
      uint64_t v33 = v6[6];
      int64_t v34 = (void *)v6[7];
      swift_bridgeObjectRetain();
      v61._uint64_t countAndFlagsBits = v33;
      v61._object = v34;
      sub_1001C0D00(v61);
      swift_bridgeObjectRelease();
      v62._uint64_t countAndFlagsBits = 0xD000000000000015;
      v62._object = (void *)0x80000001001C71B0;
      sub_1001C0D00(v62);
      uint64_t v35 = v6[9];
      v0[2] = v6[8];
      v0[3] = v35;
      swift_bridgeObjectRetain();
      sub_100003918(&qword_100207DB8);
      v63._uint64_t countAndFlagsBits = sub_1001C0C40();
      sub_1001C0D00(v63);
      swift_bridgeObjectRelease();
      v64._uint64_t countAndFlagsBits = 0xD000000000000017;
      v64._object = (void *)0x80000001001C71D0;
      sub_1001C0D00(v64);
      int64_t v36 = (void *)(v23 + *(int *)(v49 + 32));
      uint64_t v37 = v36[1];
      v0[4] = *v36;
      v0[5] = v37;
      swift_bridgeObjectRetain();
      v65._uint64_t countAndFlagsBits = sub_1001C0C40();
      sub_1001C0D00(v65);
      swift_bridgeObjectRelease();
      v66._uint64_t countAndFlagsBits = 0xD000000000000012;
      v66._object = (void *)0x80000001001C71F0;
      sub_1001C0D00(v66);
      uint64_t v38 = v6[11];
      v0[6] = v6[10];
      v0[7] = v38;
      swift_bridgeObjectRetain();
      v67._uint64_t countAndFlagsBits = sub_1001C0C40();
      sub_1001C0D00(v67);
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v7 = sub_1000E3F44(0, *((void *)v7 + 2) + 1, 1, v7);
      }
      unint64_t v40 = *((void *)v7 + 2);
      unint64_t v39 = *((void *)v7 + 3);
      if (v40 >= v39 >> 1) {
        uint64_t v7 = sub_1000E3F44((char *)(v39 > 1), v40 + 1, 1, v7);
      }
      uint64_t v41 = v0[11];
      *((void *)v7 + 2) = v40 + 1;
      uint64_t v42 = &v7[16 * v40];
      *((void *)v42 + 4) = 0;
      *((void *)v42 + 5) = 0xE000000000000000;
      sub_1000D42EC(v41);
      if (v5) {
        goto LABEL_4;
      }
LABEL_6:
      int64_t v15 = v51 + 1;
      if (__OFADD__(v51, 1))
      {
        __break(1u);
        goto LABEL_35;
      }
      if (v15 < v45)
      {
        unint64_t v16 = *(void *)(v44 + 8 * v15);
        if (v16) {
          goto LABEL_9;
        }
        int64_t v17 = v51 + 2;
        ++v51;
        if (v15 + 1 < v45)
        {
          unint64_t v16 = *(void *)(v44 + 8 * v17);
          if (v16) {
            goto LABEL_12;
          }
          int64_t v51 = v15 + 1;
          if (v15 + 2 < v45)
          {
            unint64_t v16 = *(void *)(v44 + 8 * (v15 + 2));
            if (v16)
            {
              v15 += 2;
              goto LABEL_9;
            }
            int64_t v17 = v15 + 3;
            int64_t v51 = v15 + 2;
            if (v15 + 3 < v45) {
              break;
            }
          }
        }
      }
LABEL_23:
      uint64_t v18 = v0[12];
      uint64_t v19 = sub_100003918(&qword_100208C68);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
      unint64_t v5 = 0;
    }
    unint64_t v16 = *(void *)(v44 + 8 * v17);
    if (v16)
    {
LABEL_12:
      int64_t v15 = v17;
LABEL_9:
      unint64_t v5 = (v16 - 1) & v16;
      unint64_t v9 = __clz(__rbit64(v16)) + (v15 << 6);
      int64_t v51 = v15;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v15 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v15 >= v45)
    {
      int64_t v51 = v45 - 1;
      goto LABEL_23;
    }
    unint64_t v16 = *(void *)(v44 + 8 * v15);
    ++v17;
    if (v16) {
      goto LABEL_9;
    }
  }
LABEL_35:
  __break(1u);
}

char *sub_100195BDC()
{
  uint64_t v1 = sub_1001BF950();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v50 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1001BF2C0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  unint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_prefetchActivity) + qword_10021FEE8);
  swift_retain();
  _s20privatecloudcomputed8LRUCacheC10addToCache3now5valueSb10Foundation4DateV_xtFfA__0();
  uint64_t v51 = v10;
  uint64_t v52 = v9;
  uint64_t v11 = v10 + qword_100208340;
  os_unfair_lock_lock((os_unfair_lock_t)(v10 + qword_100208340));
  sub_1001971D4((uint64_t *)(v11 + 8), v54);
  os_unfair_lock_unlock((os_unfair_lock_t)v11);
  swift_release();
  uint64_t v12 = v54[0];
  uint64_t result = (char *)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t v47 = *(void *)(v12 + 16);
  if (v47)
  {
    unint64_t v14 = 0;
    unint64_t v46 = v12 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v45 = v2 + 16;
    unint64_t v40 = (uint64_t (**)(char *, uint64_t))(v2 + 8);
    int64_t v15 = (char *)_swiftEmptyArrayStorage;
    uint64_t v43 = v1;
    uint64_t v44 = (void *)0x80000001001C7130;
    uint64_t v41 = v12;
    uint64_t v42 = v2;
    while (1)
    {
      if (v14 >= *(void *)(v12 + 16))
      {
LABEL_35:
        __break(1u);
        return result;
      }
      unint64_t v48 = v14 + 1;
      uint64_t v49 = v15;
      (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v50, v46 + *(void *)(v2 + 72) * v14, v1);
      v55._uint64_t countAndFlagsBits = sub_1001BF930();
      strcpy((char *)v54, "pipelinekind: ");
      HIBYTE(v54[1]) = -18;
      sub_1001C0D00(v55);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v56._uint64_t countAndFlagsBits = 0xD000000000000014;
      v56._object = v44;
      sub_1001C0D00(v56);
      swift_bridgeObjectRelease();
      uint64_t result = (char *)sub_1001BF940();
      unint64_t v16 = result;
      int64_t v17 = 0;
      uint64_t v18 = result + 64;
      uint64_t v19 = 1 << result[32];
      uint64_t v20 = v19 < 64 ? ~(-1 << v19) : -1;
      unint64_t v21 = v20 & *((void *)result + 8);
      int64_t v22 = (unint64_t)(v19 + 63) >> 6;
      while (1)
      {
        if (v21)
        {
          unint64_t v23 = __clz(__rbit64(v21));
          v21 &= v21 - 1;
          unint64_t v24 = v23 | (v17 << 6);
          goto LABEL_9;
        }
        int64_t v31 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(1u);
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }
        if (v31 >= v22) {
          goto LABEL_25;
        }
        unint64_t v32 = v18[v31];
        ++v17;
        if (!v32)
        {
          int64_t v17 = v31 + 1;
          if (v31 + 1 >= v22) {
            goto LABEL_25;
          }
          unint64_t v32 = v18[v17];
          if (!v32)
          {
            int64_t v17 = v31 + 2;
            if (v31 + 2 >= v22) {
              goto LABEL_25;
            }
            unint64_t v32 = v18[v17];
            if (!v32) {
              break;
            }
          }
        }
LABEL_24:
        unint64_t v21 = (v32 - 1) & v32;
        unint64_t v24 = __clz(__rbit64(v32)) + (v17 << 6);
LABEL_9:
        uint64_t v25 = 16 * v24;
        uint64_t v26 = (uint64_t *)(*((void *)v16 + 6) + v25);
        v57._uint64_t countAndFlagsBits = *v26;
        unint64_t v27 = (void *)v26[1];
        uint64_t v28 = (uint64_t *)(*((void *)v16 + 7) + v25);
        uint64_t v30 = *v28;
        uint64_t v29 = (void *)v28[1];
        v53._uint64_t countAndFlagsBits = 91;
        v53._object = (void *)0xE100000000000000;
        v57._object = v27;
        sub_1001C0D00(v57);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v58._uint64_t countAndFlagsBits = 8250;
        v58._object = (void *)0xE200000000000000;
        sub_1001C0D00(v58);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        v59._uint64_t countAndFlagsBits = v30;
        v59._object = v29;
        sub_1001C0D00(v59);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        v60._uint64_t countAndFlagsBits = 93;
        v60._object = (void *)0xE100000000000000;
        sub_1001C0D00(v60);
        swift_bridgeObjectRelease();
        sub_1001C0D00(v53);
        uint64_t result = (char *)swift_bridgeObjectRelease();
      }
      int64_t v33 = v31 + 3;
      if (v33 < v22) {
        break;
      }
LABEL_25:
      swift_release();
      uint64_t v34 = v54[0];
      uint64_t v35 = v54[1];
      int64_t v15 = v49;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int64_t v15 = sub_1000E3F44(0, *((void *)v15 + 2) + 1, 1, v15);
      }
      uint64_t v2 = v42;
      unint64_t v37 = *((void *)v15 + 2);
      unint64_t v36 = *((void *)v15 + 3);
      if (v37 >= v36 >> 1) {
        int64_t v15 = sub_1000E3F44((char *)(v36 > 1), v37 + 1, 1, v15);
      }
      *((void *)v15 + 2) = v37 + 1;
      uint64_t v38 = &v15[16 * v37];
      *((void *)v38 + 4) = v34;
      *((void *)v38 + 5) = v35;
      uint64_t v1 = v43;
      uint64_t result = (char *)(*v40)(v50, v43);
      unint64_t v14 = v48;
      uint64_t v12 = v41;
      if (v48 == v47)
      {
        swift_bridgeObjectRelease();
        return v15;
      }
    }
    unint64_t v32 = v18[v33];
    if (!v32)
    {
      while (1)
      {
        int64_t v17 = v33 + 1;
        if (__OFADD__(v33, 1)) {
          goto LABEL_34;
        }
        if (v17 >= v22) {
          goto LABEL_25;
        }
        unint64_t v32 = v18[v17];
        ++v33;
        if (v32) {
          goto LABEL_24;
        }
      }
    }
    int64_t v17 = v33;
    goto LABEL_24;
  }
  swift_bridgeObjectRelease();
  return (char *)_swiftEmptyArrayStorage;
}

char *sub_10019614C()
{
  uint64_t v56 = sub_1001BF950();
  uint64_t v52 = *(void *)(v56 - 8);
  __chkstk_darwin(v56, v1);
  Swift::String v55 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1001BF2C0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v6 = __chkstk_darwin(v3, v5);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v45 - v10;
  uint64_t v12 = *(void *)(v0 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_prefetchActivity);
  uint64_t v13 = qword_10021FEE8;
  swift_retain();
  _s20privatecloudcomputed8LRUCacheC10addToCache3now5valueSb10Foundation4DateV_xtFfA__0();
  sub_1001945F0((uint64_t)v11);
  swift_release();
  unint64_t v14 = *(void (**)(char *, uint64_t))(v4 + 8);
  v14(v11, v3);
  uint64_t v15 = *(void *)(v12 + v13);
  swift_retain();
  _s20privatecloudcomputed8LRUCacheC10addToCache3now5valueSb10Foundation4DateV_xtFfA__0();
  uint64_t v57 = v15;
  Swift::String v58 = v8;
  uint64_t v16 = v15 + qword_100208340;
  os_unfair_lock_lock((os_unfair_lock_t)(v15 + qword_100208340));
  sub_100197078((uint64_t *)(v16 + 8), v60);
  os_unfair_lock_unlock((os_unfair_lock_t)v16);
  swift_release();
  uint64_t v17 = v60[0];
  uint64_t result = (char *)((uint64_t (*)(char *, uint64_t))v14)(v8, v3);
  uint64_t v51 = *(void *)(v17 + 16);
  if (v51)
  {
    unint64_t v19 = 0;
    unint64_t v50 = v17 + ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80));
    uint64_t v49 = v52 + 16;
    unint64_t v46 = (uint64_t (**)(char *, uint64_t))(v52 + 8);
    uint64_t v20 = (char *)_swiftEmptyArrayStorage;
    uint64_t v47 = v17;
    unint64_t v48 = (void *)0x80000001001C7130;
    uint64_t v21 = v52;
    while (1)
    {
      if (v19 >= *(void *)(v17 + 16))
      {
LABEL_35:
        __break(1u);
        return result;
      }
      unint64_t v53 = v19 + 1;
      Swift::String v54 = v20;
      (*(void (**)(char *, unint64_t, uint64_t))(v21 + 16))(v55, v50 + *(void *)(v21 + 72) * v19, v56);
      v61._uint64_t countAndFlagsBits = sub_1001BF930();
      strcpy((char *)v60, "pipelinekind: ");
      HIBYTE(v60[1]) = -18;
      sub_1001C0D00(v61);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v62._uint64_t countAndFlagsBits = 0xD000000000000014;
      v62._object = v48;
      sub_1001C0D00(v62);
      swift_bridgeObjectRelease();
      uint64_t result = (char *)sub_1001BF940();
      int64_t v22 = result;
      int64_t v23 = 0;
      unint64_t v24 = result + 64;
      uint64_t v25 = 1 << result[32];
      uint64_t v26 = v25 < 64 ? ~(-1 << v25) : -1;
      unint64_t v27 = v26 & *((void *)result + 8);
      int64_t v28 = (unint64_t)(v25 + 63) >> 6;
      while (1)
      {
        if (v27)
        {
          unint64_t v29 = __clz(__rbit64(v27));
          v27 &= v27 - 1;
          unint64_t v30 = v29 | (v23 << 6);
          goto LABEL_9;
        }
        int64_t v37 = v23 + 1;
        if (__OFADD__(v23, 1))
        {
          __break(1u);
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }
        if (v37 >= v28) {
          goto LABEL_25;
        }
        unint64_t v38 = v24[v37];
        ++v23;
        if (!v38)
        {
          int64_t v23 = v37 + 1;
          if (v37 + 1 >= v28) {
            goto LABEL_25;
          }
          unint64_t v38 = v24[v23];
          if (!v38)
          {
            int64_t v23 = v37 + 2;
            if (v37 + 2 >= v28) {
              goto LABEL_25;
            }
            unint64_t v38 = v24[v23];
            if (!v38) {
              break;
            }
          }
        }
LABEL_24:
        unint64_t v27 = (v38 - 1) & v38;
        unint64_t v30 = __clz(__rbit64(v38)) + (v23 << 6);
LABEL_9:
        uint64_t v31 = 16 * v30;
        unint64_t v32 = (uint64_t *)(*((void *)v22 + 6) + v31);
        v63._uint64_t countAndFlagsBits = *v32;
        int64_t v33 = (void *)v32[1];
        uint64_t v34 = (uint64_t *)(*((void *)v22 + 7) + v31);
        uint64_t v36 = *v34;
        uint64_t v35 = (void *)v34[1];
        v59._uint64_t countAndFlagsBits = 91;
        v59._object = (void *)0xE100000000000000;
        v63._object = v33;
        sub_1001C0D00(v63);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v64._uint64_t countAndFlagsBits = 8250;
        v64._object = (void *)0xE200000000000000;
        sub_1001C0D00(v64);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        v65._uint64_t countAndFlagsBits = v36;
        v65._object = v35;
        sub_1001C0D00(v65);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        v66._uint64_t countAndFlagsBits = 93;
        v66._object = (void *)0xE100000000000000;
        sub_1001C0D00(v66);
        swift_bridgeObjectRelease();
        sub_1001C0D00(v59);
        uint64_t result = (char *)swift_bridgeObjectRelease();
      }
      int64_t v39 = v37 + 3;
      if (v39 < v28) {
        break;
      }
LABEL_25:
      swift_release();
      uint64_t v40 = v60[0];
      uint64_t v41 = v60[1];
      uint64_t v20 = v54;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v20 = sub_1000E3F44(0, *((void *)v20 + 2) + 1, 1, v20);
      }
      unint64_t v43 = *((void *)v20 + 2);
      unint64_t v42 = *((void *)v20 + 3);
      if (v43 >= v42 >> 1) {
        uint64_t v20 = sub_1000E3F44((char *)(v42 > 1), v43 + 1, 1, v20);
      }
      *((void *)v20 + 2) = v43 + 1;
      uint64_t v44 = &v20[16 * v43];
      *((void *)v44 + 4) = v40;
      *((void *)v44 + 5) = v41;
      uint64_t result = (char *)(*v46)(v55, v56);
      unint64_t v19 = v53;
      uint64_t v21 = v52;
      uint64_t v17 = v47;
      if (v53 == v51)
      {
        swift_bridgeObjectRelease();
        return v20;
      }
    }
    unint64_t v38 = v24[v39];
    if (!v38)
    {
      while (1)
      {
        int64_t v23 = v39 + 1;
        if (__OFADD__(v39, 1)) {
          goto LABEL_34;
        }
        if (v23 >= v28) {
          goto LABEL_25;
        }
        unint64_t v38 = v24[v23];
        ++v39;
        if (v38) {
          goto LABEL_24;
        }
      }
    }
    int64_t v23 = v39;
    goto LABEL_24;
  }
  swift_bridgeObjectRelease();
  return (char *)_swiftEmptyArrayStorage;
}

uint64_t sub_100196710()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_100196730, 0, 0);
}

uint64_t sub_100196730()
{
  uint64_t v1 = *(void *)(v0[2] + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_attestationStore);
  v0[3] = v1;
  if (v1)
  {
    type metadata accessor for TC2AttestationStore();
    sub_10019718C(&qword_10020C4E0, (void (*)(uint64_t))type metadata accessor for TC2AttestationStore);
    swift_retain();
    uint64_t v3 = sub_1001C0EA0();
    return _swift_task_switch(sub_1001968D0, v3, v2);
  }
  else
  {
    uint64_t v4 = sub_1001C0330();
    os_log_type_t v5 = sub_1001C1200();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "attestation store unavailable", v6, 2u);
      swift_slowDealloc();
    }

    uint64_t v7 = (uint64_t (*)(BOOL))v0[1];
    BOOL v8 = v0[3] != 0;
    return v7(v8);
  }
}

uint64_t sub_1001968D0()
{
  sub_1000C8F50();
  return _swift_task_switch(sub_100196938, 0, 0);
}

uint64_t sub_100196938()
{
  swift_retain();
  sub_100194ED0();
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(BOOL))(v0 + 8);
  BOOL v2 = *(void *)(v0 + 24) != 0;
  return v1(v2);
}

uint64_t sub_1001969DC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v56 = a2;
  uint64_t v65 = sub_100003918(qword_10020CE78);
  uint64_t v61 = *(void *)(v65 - 8);
  __chkstk_darwin(v65, v8);
  Swift::String v60 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100003918(&qword_10020EDD8);
  uint64_t v12 = __chkstk_darwin(v10 - 8, v11);
  unint64_t v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v12, v15);
  __chkstk_darwin(v16, v17);
  uint64_t v20 = (char *)&v54 - v19;
  unint64_t v21 = a4 >> 1;
  uint64_t v57 = a3;
  BOOL v22 = __OFSUB__(a4 >> 1, a3);
  uint64_t v23 = (a4 >> 1) - a3;
  if (v22)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  uint64_t v55 = v18;
  uint64_t v24 = *v4;
  int64_t v25 = *(void *)(*v4 + 16);
  int64_t v26 = v25 + v23;
  if (__OFADD__(v25, v23))
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  uint64_t v62 = v21;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v4 = v24;
  if (!isUniquelyReferenced_nonNull_native || (int64_t v28 = *(void *)(v24 + 24) >> 1, v28 < v26))
  {
    if (v25 <= v26) {
      int64_t v29 = v25 + v23;
    }
    else {
      int64_t v29 = v25;
    }
    sub_10018F358(isUniquelyReferenced_nonNull_native, v29, 1);
    uint64_t v24 = *v4;
    int64_t v28 = *(void *)(*v4 + 24) >> 1;
  }
  uint64_t v30 = *(void *)(v24 + 16);
  uint64_t v31 = v28 - v30;
  if (v62 != v57)
  {
    if (v31 >= v23)
    {
      if (v23 < 0) {
        goto LABEL_52;
      }
      uint64_t v33 = *(void *)(v61 + 72);
      unint64_t v34 = v24
          + ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80))
          + v33 * v30;
      unint64_t v35 = v56 + v33 * v57;
      if (v35 < v34 + v33 * v23 && v34 < v35 + v33 * v23) {
        goto LABEL_52;
      }
      swift_arrayInitWithCopy();
      if (v23)
      {
        uint64_t v37 = *(void *)(v24 + 16);
        BOOL v22 = __OFADD__(v37, v23);
        uint64_t v38 = v37 + v23;
        uint64_t v32 = v62;
        if (v22)
        {
LABEL_51:
          __break(1u);
LABEL_52:
          uint64_t result = sub_1001C15D0();
          __break(1u);
          return result;
        }
        *(void *)(v24 + 16) = v38;
        if (v23 == v31) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t v32 = v62;
        if (!v31) {
          goto LABEL_23;
        }
      }
LABEL_43:
      return swift_unknownObjectRelease();
    }
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  if (v23 > 0)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  uint64_t v32 = v57;
  if (v31) {
    goto LABEL_43;
  }
LABEL_23:
  uint64_t v54 = a1;
  int64_t v39 = *(void *)(v24 + 16);
  uint64_t v40 = v61;
  uint64_t v41 = v65;
  Swift::String v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v61 + 56);
  uint64_t v59 = v61 + 56;
  v58(v20, 1, 1, v65);
  uint64_t v42 = v55;
  sub_10003282C((uint64_t)v20, v55, &qword_10020EDD8);
  Swift::String v63 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 48);
  uint64_t v64 = v40 + 48;
  int v43 = v63(v42, 1, v41);
  uint64_t v44 = (uint64_t)v60;
  if (v43 != 1)
  {
    do
    {
      sub_100010360(v42, &qword_10020EDD8);
      uint64_t v47 = *v4;
      unint64_t v48 = *(void *)(*v4 + 24);
      int64_t v46 = v48 >> 1;
      if ((uint64_t)(v48 >> 1) < v39 + 1)
      {
        sub_10018F358(v48 > 1, v39 + 1, 1);
        uint64_t v47 = *v4;
        int64_t v46 = *(void *)(*v4 + 24) >> 1;
      }
      swift_retain();
      sub_10003282C((uint64_t)v20, (uint64_t)v14, &qword_10020EDD8);
      if (v63((uint64_t)v14, 1, v65) != 1)
      {
        if (v39 > v46) {
          int64_t v46 = v39;
        }
        do
        {
          sub_10002C318((uint64_t)v14, v44, qword_10020CE78);
          if (v46 == v39)
          {
            sub_100010360(v44, qword_10020CE78);
            swift_release();
            int64_t v39 = v46;
            goto LABEL_27;
          }
          sub_100010360((uint64_t)v20, &qword_10020EDD8);
          uint64_t v52 = v44;
          uint64_t v53 = *(void *)(v61 + 72);
          sub_10002C318(v52, v47+ ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80))+ v53 * v39, qword_10020CE78);
          if (v32 == v62)
          {
            uint64_t v49 = 1;
            uint64_t v32 = v62;
          }
          else
          {
            if (v32 < v57 || v32 >= v62)
            {
              __break(1u);
              goto LABEL_47;
            }
            sub_10003282C(v56 + v53 * v32, (uint64_t)v20, qword_10020CE78);
            uint64_t v49 = 0;
            ++v32;
          }
          uint64_t v50 = v65;
          v58(v20, v49, 1, v65);
          sub_10003282C((uint64_t)v20, (uint64_t)v14, &qword_10020EDD8);
          int v51 = v63((uint64_t)v14, 1, v50);
          ++v39;
          uint64_t v44 = (uint64_t)v60;
        }
        while (v51 != 1);
      }
      swift_release();
      sub_100010360((uint64_t)v14, &qword_10020EDD8);
      int64_t v46 = v39;
LABEL_27:
      *(void *)(*v4 + 16) = v46;
      uint64_t v42 = v55;
      sub_10003282C((uint64_t)v20, v55, &qword_10020EDD8);
    }
    while (v63(v42, 1, v65) != 1);
  }
  sub_100010360((uint64_t)v20, &qword_10020EDD8);
  swift_unknownObjectRelease();
  return sub_100010360(v42, &qword_10020EDD8);
}

uint64_t sub_100196FD4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)a1 = a2;
  uint64_t result = sub_100103DD4((uint64_t (*)(unint64_t))sub_1001048E8);
  int64_t v5 = *(void *)(*(void *)a1 + 16);
  if (v5 >= result) {
    return sub_1000D6630(result, v5);
  }
  __break(1u);
  return result;
}

uint64_t sub_100197078@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100104724(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

unint64_t sub_100197098()
{
  unint64_t result = qword_10020EDC8;
  if (!qword_10020EDC8)
  {
    sub_1000166C8(&qword_10020E0C8);
    sub_10019710C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020EDC8);
  }
  return result;
}

unint64_t sub_10019710C()
{
  unint64_t result = qword_10020EDD0;
  if (!qword_10020EDD0)
  {
    sub_1000166C8(qword_10020CE78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020EDD0);
  }
  return result;
}

uint64_t sub_100197168(uint64_t a1)
{
  return sub_100196FD4(a1, *(void *)(v1 + 16));
}

uint64_t sub_10019718C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001971D4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100197078(a1, a2);
}

uint64_t sub_1001971EC(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  uint64_t v3 = sub_1001BF310();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  return _swift_task_switch(sub_1001972AC, v1, 0);
}

uint64_t sub_1001972AC()
{
  uint64_t v1 = v0[4];
  int v2 = *(unsigned __int8 *)(v1 + 128);
  if (v2 == 255)
  {
    uint64_t v3 = v0[7];
    sub_1001BF300();
    uint64_t v4 = swift_task_alloc();
    v0[8] = v4;
    *(void *)(v4 + 16) = v1;
    *(void *)(v4 + 24) = v3;
    uint64_t v5 = swift_task_alloc();
    v0[9] = v5;
    *(void *)(v5 + 16) = v1;
    *(void *)(v5 + 24) = v3;
    unint64_t v6 = sub_10019F398();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[10] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_100197468;
    uint64_t v8 = v0[3];
    return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v8, &unk_10020F178, v4, sub_10019FFFC, v5, v1, v6, (char *)&type metadata for () + 8);
  }
  else
  {
    if (v2)
    {
      v0[2] = *(void *)(v1 + 120);
      swift_errorRetain();
      sub_100003918(&qword_100208C98);
      swift_willThrowTypedImpl();
    }
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
}

uint64_t sub_100197468()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 32);
  if (v0) {
    uint64_t v4 = sub_100197650;
  }
  else {
    uint64_t v4 = sub_1001975D4;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1001975D4()
{
  (*(void (**)(void, void))(v0[6] + 8))(v0[7], v0[5]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100197650()
{
  (*(void (**)(void, void))(v0[6] + 8))(v0[7], v0[5]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t NWConnectionReceived.data.getter(uint64_t a1, unint64_t a2)
{
  return a1;
}

uint64_t NWConnectionReceived.data.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100007918(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t NWConnectionReceived.contentContext.getter()
{
  return swift_retain();
}

uint64_t NWConnectionReceived.contentContext.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t NWConnectionReceived.isComplete.getter(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return a4 & 1;
}

uint64_t NWConnectionReceived.isComplete.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 24) = result;
  return result;
}

uint64_t (*NWConnectionReceived.isComplete.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t sub_1001977A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[9] = a6;
  v7[10] = a7;
  v7[7] = a4;
  v7[8] = a5;
  v7[5] = a2;
  v7[6] = a3;
  v7[4] = a1;
  v7[11] = type metadata accessor for NWAsyncConnection.OHTTPStreamFactory(0);
  v7[12] = swift_task_alloc();
  v7[13] = swift_task_alloc();
  return _swift_task_switch(sub_100197850, 0, 0);
}

uint64_t sub_100197850()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void **)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v6 = *(void **)(v0 + 48);
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v7 = *(void *)(v0 + 40);
  sub_100003918(&qword_10020C058);
  uint64_t v8 = swift_allocObject();
  *(void *)(v0 + 112) = v8;
  long long v19 = *(_OWORD *)(v0 + 64);
  swift_defaultActor_initialize();
  *(void *)(v8 + 112) = sub_1000546D8((uint64_t)_swiftEmptyArrayStorage);
  *(void *)(v8 + 120) = 0;
  *(unsigned char *)(v8 + 128) = -1;
  uint64_t v9 = (char *)v2 + *(int *)(v3 + 28);
  uint64_t v10 = sub_1001BF310();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v9, v5, v10);
  v2[1] = v7;
  v2[2] = v8;
  *uint64_t v2 = v6;
  sub_10019F0A8((uint64_t)v2, v1);
  *(void *)(v0 + 16) = v1;
  uint64_t v11 = swift_task_alloc();
  *(void *)(v0 + 120) = v11;
  *(void *)(v11 + 16) = v4;
  *(_OWORD *)(v11 + 24) = v19;
  swift_retain();
  swift_retain();
  id v12 = v6;
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v13;
  *(void *)(v0 + 24) = v3;
  *uint64_t v13 = v0;
  v13[1] = sub_100197A2C;
  uint64_t v14 = *(void *)(v0 + 48);
  uint64_t v15 = *(void *)(v0 + 56);
  uint64_t v16 = *(void *)(v0 + 32);
  uint64_t v17 = *(void *)(v0 + 40);
  return sub_100198CA0(v16, v17, v14, v15, v8, v0 + 16, (uint64_t)&unk_10020F188, v11);
}

uint64_t sub_100197A2C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_100197C00;
  }
  else
  {
    sub_10019F10C(*(void *)(v2 + 96), type metadata accessor for NWAsyncConnection.OHTTPStreamFactory);
    uint64_t v3 = sub_100197B5C;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100197B5C()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_release();
  sub_10019F10C(v1, type metadata accessor for NWAsyncConnection.OHTTPStreamFactory);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100197C00()
{
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  swift_release();
  sub_10019F10C(v1, type metadata accessor for NWAsyncConnection.OHTTPStreamFactory);
  sub_10019F10C(v2, type metadata accessor for NWAsyncConnection.OHTTPStreamFactory);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100197CB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, int *a5)
{
  uint64_t v9 = *a4;
  id v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)a5 + *a5);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_1000074CC;
  return v12(a1, a2, a3, v9);
}

uint64_t sub_100197DB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  _OWORD v8[2] = a1;
  v8[3] = a2;
  type metadata accessor for NWAsyncConnection.OHTTPStreamFactory(0);
  v8[10] = swift_task_alloc();
  v8[11] = type metadata accessor for NWAsyncConnection.Inbound(0);
  v8[12] = swift_task_alloc();
  uint64_t v9 = sub_1001BF310();
  v8[13] = v9;
  v8[14] = *(void *)(v9 - 8);
  v8[15] = swift_task_alloc();
  uint64_t v10 = sub_1001BF8E0();
  v8[16] = v10;
  v8[17] = *(void *)(v10 - 8);
  v8[18] = swift_task_alloc();
  uint64_t v11 = sub_1001C0340();
  v8[19] = v11;
  v8[20] = *(void *)(v11 - 8);
  v8[21] = swift_task_alloc();
  v8[22] = swift_task_alloc();
  return _swift_task_switch(sub_100197FA4, 0, 0);
}

uint64_t sub_100197FA4()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[20];
  uint64_t v5 = v0[17];
  uint64_t v4 = v0[18];
  uint64_t v6 = v0[16];
  uint64_t v19 = v0[21];
  uint64_t v20 = v0[15];
  uint64_t v7 = v0[14];
  uint64_t v21 = v0[13];
  uint64_t v23 = v0[11];
  uint64_t v24 = (uint64_t *)v0[12];
  uint64_t v26 = v0[10];
  unint64_t v27 = (int *)v0[8];
  int64_t v25 = (uint64_t *)v0[7];
  uint64_t v8 = v0[5];
  uint64_t v22 = v0[6];
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v4, enum case for TC2LogCategory.network(_:), v6);
  sub_1001BFDD0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v9(v19, v1, v2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v20, v8, v21);
  type metadata accessor for NWConnectionWrapper(0);
  swift_allocObject();
  swift_retain();
  uint64_t v10 = swift_retain();
  uint64_t v11 = sub_1001B6724(v10, v22, v19, v20);
  v0[23] = v11;
  sub_1001B5B14();
  v9((uint64_t)v24 + *(int *)(v23 + 20), v1, v2);
  uint64_t v12 = *(int *)(v23 + 24);
  sub_100003918(&qword_100207A38);
  uint64_t v13 = swift_allocObject();
  *(_DWORD *)(v13 + 20) = 0;
  *(unsigned char *)(v13 + 16) = 0;
  *(uint64_t *)((char *)v24 + v12) = v13;
  *uint64_t v24 = v11;
  sub_10019F0A8(*v25, v26);
  int64_t v28 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v27 + *v27);
  swift_retain();
  uint64_t v14 = (void *)swift_task_alloc();
  v0[24] = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_100198228;
  uint64_t v15 = v0[12];
  uint64_t v16 = v0[10];
  uint64_t v17 = v0[2];
  return v28(v17, v15, v11, v16);
}

uint64_t sub_100198228()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_10019845C;
  }
  else
  {
    sub_10019F10C(*(void *)(v2 + 80), type metadata accessor for NWAsyncConnection.OHTTPStreamFactory);
    uint64_t v3 = sub_100198358;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100198358()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[19];
  sub_10019F10C(v0[12], type metadata accessor for NWAsyncConnection.Inbound);
  sub_1001B8728();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10019845C()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[19];
  uint64_t v4 = v0[10];
  sub_10019F10C(v0[12], type metadata accessor for NWAsyncConnection.Inbound);
  sub_10019F10C(v4, type metadata accessor for NWAsyncConnection.OHTTPStreamFactory);
  sub_1001B8728();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_10019857C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[7] = a7;
  v8[8] = a8;
  v8[5] = a4;
  v8[6] = a5;
  v8[3] = a2;
  v8[4] = a3;
  _OWORD v8[2] = a1;
  v8[9] = type metadata accessor for NWAsyncConnection.Inbound(0);
  v8[10] = swift_task_alloc();
  uint64_t v9 = sub_1001BF310();
  v8[11] = v9;
  v8[12] = *(void *)(v9 - 8);
  v8[13] = swift_task_alloc();
  uint64_t v10 = sub_1001BF8E0();
  v8[14] = v10;
  v8[15] = *(void *)(v10 - 8);
  v8[16] = swift_task_alloc();
  uint64_t v11 = sub_1001C0340();
  v8[17] = v11;
  v8[18] = *(void *)(v11 - 8);
  v8[19] = swift_task_alloc();
  v8[20] = swift_task_alloc();
  return _swift_task_switch(sub_100198740, 0, 0);
}

uint64_t sub_100198740()
{
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[16];
  uint64_t v6 = v0[14];
  uint64_t v18 = v0[19];
  uint64_t v19 = v0[13];
  uint64_t v7 = v0[12];
  uint64_t v20 = v0[11];
  uint64_t v22 = v0[9];
  uint64_t v23 = (uint64_t *)v0[10];
  uint64_t v24 = (int *)v0[7];
  uint64_t v8 = v0[5];
  uint64_t v21 = v0[6];
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v5, enum case for TC2LogCategory.network(_:), v6);
  sub_1001BFDD0();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v9(v18, v1, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v19, v8, v20);
  type metadata accessor for NWConnectionWrapper(0);
  swift_allocObject();
  swift_retain();
  uint64_t v10 = swift_retain();
  uint64_t v11 = sub_1001B6724(v10, v21, v18, v19);
  v0[21] = v11;
  sub_1001B5B14();
  v9((uint64_t)v23 + *(int *)(v22 + 20), v1, v3);
  uint64_t v12 = *(int *)(v22 + 24);
  sub_100003918(&qword_100207A38);
  uint64_t v13 = swift_allocObject();
  *(_DWORD *)(v13 + 20) = 0;
  *(unsigned char *)(v13 + 16) = 0;
  *(uint64_t *)((char *)v23 + v12) = v13;
  *uint64_t v23 = v11;
  int64_t v25 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v24 + *v24);
  swift_retain();
  uint64_t v14 = (void *)swift_task_alloc();
  v0[22] = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_1001989AC;
  uint64_t v15 = v0[10];
  uint64_t v16 = v0[2];
  return v25(v16, v15, v11);
}

uint64_t sub_1001989AC()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100198BB0;
  }
  else {
    uint64_t v2 = sub_100198AC0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100198AC0()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[17];
  sub_10019F10C(v0[10], type metadata accessor for NWAsyncConnection.Inbound);
  sub_1001B8728();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100198BB0()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[17];
  sub_10019F10C(v0[10], type metadata accessor for NWAsyncConnection.Inbound);
  sub_1001B8728();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100198CA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[10] = v28;
  v8[11] = v29;
  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  uint64_t v9 = (void *)(v29 & 0xFFFFFFFFFFFFFFFELL);
  _OWORD v8[2] = a1;
  v8[3] = a2;
  if (v28 == 1)
  {
    uint64_t TupleTypeMetadata = *v9;
    unint64_t v11 = 16;
  }
  else
  {
    unint64_t v11 = (8 * v28 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v12 = swift_task_alloc();
    if (v28)
    {
      unint64_t v13 = 0;
      if (v28 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v12 - (void)v9) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v13 = v28 & 0xFFFFFFFFFFFFFFFCLL;
      uint64_t v14 = (long long *)(v9 + 2);
      uint64_t v15 = (_OWORD *)(v12 + 16);
      unint64_t v16 = v28 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v17 = *v14;
        *(v15 - 1) = *(v14 - 1);
        _OWORD *v15 = v17;
        v14 += 2;
        v15 += 2;
        v16 -= 4;
      }
      while (v16);
      if (v13 != v28)
      {
LABEL_9:
        unint64_t v18 = v28 - v13;
        uint64_t v19 = v13;
        uint64_t v20 = (void *)(v12 + 8 * v13);
        uint64_t v21 = &v9[v19];
        do
        {
          uint64_t v22 = *v21++;
          *v20++ = v22;
          --v18;
        }
        while (v18);
      }
    }
    uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    swift_task_dealloc();
  }
  v8[12] = v11;
  v8[13] = TupleTypeMetadata;
  v8[14] = *(void *)(TupleTypeMetadata - 8);
  v8[15] = swift_task_alloc();
  v8[16] = type metadata accessor for NWAsyncConnection.Inbound(0);
  v8[17] = swift_task_alloc();
  uint64_t v23 = sub_1001BF310();
  v8[18] = v23;
  v8[19] = *(void *)(v23 - 8);
  v8[20] = swift_task_alloc();
  uint64_t v24 = sub_1001BF8E0();
  v8[21] = v24;
  v8[22] = *(void *)(v24 - 8);
  v8[23] = swift_task_alloc();
  uint64_t v25 = sub_1001C0340();
  v8[24] = v25;
  v8[25] = *(void *)(v25 - 8);
  v8[26] = swift_task_alloc();
  v8[27] = swift_task_alloc();
  return _swift_task_switch(sub_100198F8C, 0, 0);
}

uint64_t sub_100198F8C()
{
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[25];
  uint64_t v4 = v0[22];
  uint64_t v5 = v0[23];
  uint64_t v6 = v0[21];
  uint64_t v25 = v0[26];
  uint64_t v26 = v0[20];
  uint64_t v7 = v0[19];
  uint64_t v27 = v0[18];
  uint64_t v29 = v0[16];
  uint64_t v30 = (uint64_t *)v0[17];
  uint64_t v31 = v0[10];
  uint64_t v8 = v0[5];
  uint64_t v28 = v0[6];
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v5, enum case for TC2LogCategory.network(_:), v6);
  sub_1001BFDD0();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v9(v25, v1, v2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v26, v8, v27);
  type metadata accessor for NWConnectionWrapper(0);
  swift_allocObject();
  swift_retain();
  uint64_t v10 = swift_retain();
  uint64_t v11 = sub_1001B6724(v10, v28, v25, v26);
  v0[28] = v11;
  sub_1001B5B14();
  v9((uint64_t)v30 + *(int *)(v29 + 20), v1, v2);
  uint64_t v12 = *(int *)(v29 + 24);
  sub_100003918(&qword_100207A38);
  uint64_t v13 = swift_allocObject();
  *(_DWORD *)(v13 + 20) = 0;
  *(unsigned char *)(v13 + 16) = 0;
  *(uint64_t *)((char *)v30 + v12) = v13;
  *uint64_t v30 = v11;
  uint64_t v14 = swift_task_alloc();
  v0[29] = v14;
  if (v31)
  {
    uint64_t v15 = 0;
    unint64_t v16 = v0[11] & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v17 = 32;
    do
    {
      uint64_t v20 = v0[10];
      if (v20 == 1) {
        int v18 = 0;
      }
      else {
        int v18 = *(_DWORD *)(v0[13] + v17);
      }
      uint64_t v19 = v0[15] + v18;
      (*(void (**)(uint64_t, void))(*(void *)(*(void *)(v16 + 8 * v15) - 8) + 16))(v19, *(void *)(v0[7] + 8 * v15));
      *(void *)(v14 + 8 * v15++) = v19;
      v17 += 16;
    }
    while (v15 != v20);
  }
  uint64_t v32 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(v0[8] + *(int *)v0[8]);
  swift_retain();
  uint64_t v21 = (void *)swift_task_alloc();
  v0[30] = v21;
  *uint64_t v21 = v0;
  v21[1] = sub_1001992A0;
  uint64_t v22 = v0[17];
  uint64_t v23 = v0[2];
  return v32(v23, v22, v11, v14);
}

uint64_t sub_1001992A0()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 248) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1001994E0;
  }
  else
  {
    (*(void (**)(void, void))(v2[14] + 8))(v2[15], v2[13]);
    uint64_t v3 = sub_1001993CC;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001993CC()
{
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[25];
  sub_10019F10C(v0[17], type metadata accessor for NWAsyncConnection.Inbound);
  sub_1001B8728();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1001994E0()
{
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[25];
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[15];
  uint64_t v6 = v0[13];
  sub_10019F10C(v0[17], type metadata accessor for NWAsyncConnection.Inbound);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
  sub_1001B8728();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t NWAsyncConnection.connect<A>(parameters:endpoint:activity:on:requestID:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[9] = a8;
  v8[10] = v12;
  v8[7] = a6;
  v8[8] = a7;
  v8[5] = a4;
  v8[6] = a5;
  v8[3] = a2;
  v8[4] = a3;
  _OWORD v8[2] = a1;
  uint64_t v9 = sub_1001C0420();
  v8[11] = v9;
  v8[12] = *(void *)(v9 - 8);
  v8[13] = swift_task_alloc();
  return _swift_task_switch(sub_1001996EC, 0, 0);
}

uint64_t sub_1001996EC()
{
  uint64_t v1 = v0[5];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[12] + 16))(v0[13], v0[4], v0[11]);
  sub_1001C0650();
  swift_allocObject();
  swift_retain();
  uint64_t v2 = sub_1001C05F0();
  v0[14] = v2;
  if (v1)
  {
    uint64_t v3 = v0[10];
    uint64_t v4 = v0[5];
    uint64_t v5 = swift_task_alloc();
    v0[15] = v5;
    long long v6 = *((_OWORD *)v0 + 3);
    long long v7 = *((_OWORD *)v0 + 4);
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v2;
    *(_OWORD *)(v5 + 32) = v6;
    *(_OWORD *)(v5 + 48) = v7;
    swift_retain();
    uint64_t v8 = (void *)swift_task_alloc();
    v0[16] = (uint64_t)v8;
    *uint64_t v8 = v0;
    v8[1] = sub_1001998BC;
    uint64_t v9 = v0[2];
    return NWConnection.withActivity<A>(activity:_:)(v9, v4, (uint64_t)&unk_10020EE08, v5);
  }
  else
  {
    uint64_t v11 = (void *)swift_task_alloc();
    v0[18] = (uint64_t)v11;
    void *v11 = v0;
    v11[1] = sub_100199A50;
    uint64_t v12 = v0[9];
    uint64_t v13 = v0[10];
    uint64_t v14 = v0[7];
    uint64_t v15 = v0[8];
    uint64_t v16 = v0[6];
    uint64_t v17 = v0[2];
    return sub_1001977A0(v17, v2, v16, v14, v15, v12, v13);
  }
}

uint64_t sub_1001998BC()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100199C3C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1001999D8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001999D8()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100199A50()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100199BD0;
  }
  else {
    uint64_t v2 = sub_100199B64;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100199B64()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100199BD0()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100199C3C()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100199CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  void *v15 = v7;
  v15[1] = sub_1000A12C8;
  return sub_1001977A0(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_100199D9C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1000A12C8;
  return sub_100199CBC(a1, v5, v6, v7, v9, v8, v4);
}

uint64_t sub_100199E70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v16;
  v16[2] = v21;
  v16[3] = a7;
  v16[4] = a8;
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v8 + 24) = v17;
  *uint64_t v17 = v8;
  v17[1] = sub_1001A0000;
  return NWAsyncConnection.connect<A>(parameters:endpoint:activity:on:requestID:_:)(a1, a2, a3, a4, a5, a6, (uint64_t)&unk_10020F170, (uint64_t)v16);
}

uint64_t NWAsyncConnection.Outbound.write(content:contentContext:isComplete:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  *(unsigned char *)(v5 + 72) = a4;
  *(void *)(v5 + 32) = a3;
  *(void *)(v5 + 40) = a5;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  return _swift_task_switch(sub_100199FBC, 0, 0);
}

uint64_t sub_100199FBC()
{
  char v1 = *(unsigned char *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  long long v8 = *(_OWORD *)(v0 + 16);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 48) = v4;
  *(void *)(v4 + 16) = v2;
  *(_OWORD *)(v4 + 24) = v8;
  *(void *)(v4 + 40) = v3;
  *(unsigned char *)(v4 + 48) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10019A0D4;
  uint64_t v6 = *(void *)(v0 + 40);
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v5, &unk_10020C090, v4, sub_1000A10C0, v6, 0, 0, (char *)&type metadata for () + 8);
}

uint64_t sub_10019A0D4()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10001E060;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100036354;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10019A1F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v5 + 72) = a4;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  uint64_t v6 = *v4;
  *(void *)(v5 + 32) = a3;
  *(void *)(v5 + 40) = v6;
  return _swift_task_switch(sub_10019A21C, 0, 0);
}

uint64_t sub_10019A21C()
{
  char v1 = *(unsigned char *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  long long v8 = *(_OWORD *)(v0 + 16);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 48) = v4;
  *(void *)(v4 + 16) = v2;
  *(_OWORD *)(v4 + 24) = v8;
  *(void *)(v4 + 40) = v3;
  *(unsigned char *)(v4 + 48) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10019A0D4;
  uint64_t v6 = *(void *)(v0 + 40);
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v5, &unk_10020F160, v4, sub_1000A10C0, v6, 0, 0, (char *)&type metadata for () + 8);
}

uint64_t NWAsyncConnection.Inbound.makeAsyncIterator()@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for NWAsyncConnection.Inbound(0);
  uint64_t v5 = *(os_unfair_lock_s **)((char *)v1 + *(int *)(v4 + 24));
  uint64_t v6 = v5 + 4;
  uint64_t v7 = v5 + 5;
  os_unfair_lock_lock(v5 + 5);
  sub_10019A430(v6);
  os_unfair_lock_unlock(v7);
  uint64_t v8 = *v2;
  uint64_t v9 = (char *)v2 + *(int *)(v4 + 20);
  uint64_t v10 = (int *)type metadata accessor for NWAsyncConnection.Inbound.AsyncIterator(0);
  uint64_t v11 = (char *)a1 + v10[5];
  uint64_t v12 = sub_1001C0340();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v11, v9, v12);
  *(void *)((char *)a1 + v10[6]) = 0;
  *((unsigned char *)a1 + v10[7]) = 0;
  *a1 = v8;
  return swift_retain();
}

unsigned char *sub_10019A430(unsigned char *result)
{
  if (*result == 1)
  {
    uint64_t result = (unsigned char *)sub_1001C1580();
    __break(1u);
  }
  else
  {
    char *result = 1;
  }
  return result;
}

uint64_t NWAsyncConnection.Inbound.AsyncIterator.next()()
{
  v1[6] = v0;
  uint64_t v2 = sub_1001C0340();
  v1[7] = v2;
  v1[8] = *(void *)(v2 - 8);
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  return _swift_task_switch(sub_10019A57C, 0, 0);
}

uint64_t sub_10019A57C()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v5 = type metadata accessor for NWAsyncConnection.Inbound.AsyncIterator(0);
  uint64_t v6 = v4 + *(int *)(v5 + 20);
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v25(v1, v6, v2);
  uint64_t v7 = sub_1001C0330();
  os_log_type_t v8 = sub_1001C11E0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Waiting for data on NW connection", v9, 2u);
    swift_slowDealloc();
  }
  uint64_t v10 = *(void *)(v0 + 80);
  uint64_t v11 = *(void *)(v0 + 56);
  uint64_t v12 = *(void *)(v0 + 64);
  uint64_t v13 = *(void *)(v0 + 48);

  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v14(v10, v11);
  uint64_t v15 = *(int *)(v5 + 28);
  *(_DWORD *)(v0 + 44) = v15;
  if (*(unsigned char *)(v13 + v15) == 1)
  {
    v25(*(void *)(v0 + 72), v6, *(void *)(v0 + 56));
    uint64_t v16 = sub_1001C0330();
    os_log_type_t v17 = sub_1001C11F0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Continuing iteration on NW connection that previously completed", v18, 2u);
      swift_slowDealloc();
    }
    uint64_t v19 = *(void *)(v0 + 72);
    uint64_t v20 = *(void *)(v0 + 56);

    v14(v19, v20);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v21 = *(uint64_t (**)(void, void, uint64_t, void))(v0 + 8);
    return v21(0, 0, 1, 0);
  }
  else
  {
    uint64_t v23 = **(void **)(v0 + 48);
    uint64_t v24 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_10019A870;
    return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v0 + 16, &unk_10020EB68, v23, sub_10018C600, v23, 0, 0, &type metadata for NWConnectionReceived);
  }
}

uint64_t sub_10019A870()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10019AA34;
  }
  else {
    uint64_t v2 = sub_10019A984;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10019A984()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = *(unsigned __int8 *)(v0 + 40);
  if (v4 == 1) {
    *(unsigned char *)(*(void *)(v0 + 48) + *(int *)(v0 + 44)) = 1;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 8);
  return v5(v2, v1, v3, v4);
}

uint64_t sub_10019AA34()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10019AAA0(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10019AB30;
  return NWAsyncConnection.Inbound.AsyncIterator.next()();
}

uint64_t sub_10019AB30(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v10 = *v5;
  uint64_t v11 = *v5;
  swift_task_dealloc();
  if (!v4)
  {
    uint64_t v12 = *(void *)(v10 + 16);
    *(void *)uint64_t v12 = a1;
    *(void *)(v12 + 8) = a2;
    *(void *)(v12 + 16) = a3;
    *(unsigned char *)(v12 + 24) = a4;
  }
  uint64_t v13 = *(uint64_t (**)(void))(v11 + 8);
  return v13();
}

uint64_t sub_10019AC64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = (void *)swift_task_alloc();
  v4[7] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_10019ACF8;
  return NWAsyncConnection.Inbound.AsyncIterator.next()();
}

uint64_t sub_10019ACF8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v10 = (void *)*v5;
  v10[8] = v4;
  swift_task_dealloc();
  if (v4)
  {
    if (v10[4])
    {
      swift_getObjectType();
      uint64_t v11 = sub_1001C0EA0();
      uint64_t v13 = v12;
    }
    else
    {
      uint64_t v11 = 0;
      uint64_t v13 = 0;
    }
    return _swift_task_switch(sub_10019AE90, v11, v13);
  }
  else
  {
    uint64_t v14 = v10[3];
    *(void *)uint64_t v14 = a1;
    *(void *)(v14 + 8) = a2;
    *(void *)(v14 + 16) = a3;
    *(unsigned char *)(v14 + 24) = a4;
    uint64_t v15 = (uint64_t (*)(void))v10[1];
    return v15();
  }
}

uint64_t sub_10019AE90()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = (void *)v0[6];
  v0[2] = v1;
  sub_100003918(&qword_100208C98);
  swift_willThrowTypedImpl();
  *uint64_t v2 = v1;
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10019AF28@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = v2;
  uint64_t v6 = *(os_unfair_lock_s **)((char *)v2 + *(int *)(a1 + 24));
  uint64_t v7 = v6 + 4;
  os_log_type_t v8 = v6 + 5;
  os_unfair_lock_lock(v6 + 5);
  sub_10019A430(v7);
  os_unfair_lock_unlock(v8);
  uint64_t v9 = *v4;
  uint64_t v10 = (char *)v4 + *(int *)(a1 + 20);
  uint64_t v11 = (int *)type metadata accessor for NWAsyncConnection.Inbound.AsyncIterator(0);
  uint64_t v12 = (char *)a2 + v11[5];
  uint64_t v13 = sub_1001C0340();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v12, v10, v13);
  *(void *)((char *)a2 + v11[6]) = 0;
  *((unsigned char *)a2 + v11[7]) = 0;
  *a2 = v9;
  swift_retain();
  return sub_10019F10C((uint64_t)v4, type metadata accessor for NWAsyncConnection.Inbound);
}

uint64_t NWAsyncConnection.OHTTPStreamFactory.withOHTTPSubStream<A>(ohttpContext:gatewayKeyConfig:mediaType:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v9[10] = v13;
  v9[11] = v8;
  v9[8] = a7;
  v9[9] = a8;
  v9[6] = a5;
  v9[7] = a6;
  v9[4] = a3;
  v9[5] = a4;
  v9[2] = a1;
  v9[3] = a2;
  uint64_t v10 = sub_1001BF310();
  v9[12] = v10;
  v9[13] = *(void *)(v10 - 8);
  v9[14] = swift_task_alloc();
  return _swift_task_switch(sub_10019B104, 0, 0);
}

uint64_t sub_10019B104()
{
  uint64_t v3 = (uint64_t (*)(uint64_t))((char *)&dword_10020EE28 + dword_10020EE28);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10019B1AC;
  return v3((uint64_t)v3);
}

uint64_t sub_10019B1AC()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10019B6EC;
  }
  else {
    uint64_t v2 = sub_10019B2C0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10019B2C0()
{
  uint64_t v1 = v0;
  uint64_t v3 = v0[4];
  unint64_t v2 = v0[5];
  sub_1001C0650();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_100007B14(v3, v2);
  uint64_t v4 = sub_1001C05C0();
  v0[17] = v4;
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v7 = v0[13];
    uint64_t v6 = v0[14];
    uint64_t v9 = v1[11];
    uint64_t v8 = v1[12];
    uint64_t v10 = v1[10];
    sub_1000A0DDC();
    long long v19 = *((_OWORD *)v1 + 4);
    uint64_t v11 = sub_1001C1240();
    v1[18] = v11;
    uint64_t v12 = type metadata accessor for NWAsyncConnection.OHTTPStreamFactory(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v9 + *(int *)(v12 + 28), v8);
    uint64_t v13 = swift_task_alloc();
    v1[19] = v13;
    *(void *)(v13 + 16) = v10;
    *(_OWORD *)(v13 + 24) = v19;
    uint64_t v14 = (void *)swift_task_alloc();
    v1[20] = v14;
    *uint64_t v14 = v1;
    v14[1] = sub_10019B4F0;
    uint64_t v15 = v1[14];
    uint64_t v16 = v1[2];
    return sub_100198CA0(v16, v5, v11, v15, 0, (uint64_t)(v1 + 2), (uint64_t)&unk_10020EE38, v13);
  }
  else
  {
    sub_100160C20();
    swift_allocError();
    swift_willThrow();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    return v18();
  }
}

uint64_t sub_10019B4F0()
{
  unint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)v2[18];
  (*(void (**)(void, void))(v2[13] + 8))(v2[14], v2[12]);

  if (v0) {
    uint64_t v4 = sub_10019B750;
  }
  else {
    uint64_t v4 = sub_10019B670;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_10019B670()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10019B6EC()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10019B750()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10019B7C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)a5 + *a5);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v9;
  void *v9 = v5;
  v9[1] = sub_1000A12C8;
  return v11(a1, a2, a3);
}

uint64_t NWAsyncConnection.OHTTPStreamFactory.withOHTTPSubStream<A, B>(ohttpContext:standaloneAEADKey:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v9[9] = a8;
  v9[10] = v8;
  v9[7] = a6;
  v9[8] = a7;
  v9[5] = a4;
  v9[6] = a5;
  v9[3] = a2;
  v9[4] = a3;
  v9[2] = a1;
  uint64_t v11 = sub_1001BF310();
  v9[11] = v11;
  v9[12] = *(void *)(v11 - 8);
  v9[13] = swift_task_alloc();
  v9[14] = *(void *)(a7 - 8);
  v9[15] = swift_task_alloc();
  return _swift_task_switch(sub_10019B9E0, 0, 0);
}

uint64_t sub_10019B9E0()
{
  uint64_t v3 = (uint64_t (*)(uint64_t))((char *)&dword_10020EE28 + dword_10020EE28);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10019BA88;
  return v3((uint64_t)v3);
}

uint64_t sub_10019BA88()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    unint64_t v2 = sub_10019C000;
  }
  else {
    unint64_t v2 = sub_10019BB9C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10019BB9C()
{
  uint64_t v1 = v0;
  uint64_t v3 = v0[14];
  uint64_t v2 = v0[15];
  uint64_t v4 = v0[8];
  uint64_t v5 = v0[4];
  sub_1001C0650();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  swift_retain();
  uint64_t v6 = sub_1001C05D0();
  v0[18] = v6;
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v9 = v0[12];
    uint64_t v8 = v0[13];
    uint64_t v11 = v1[10];
    uint64_t v10 = v1[11];
    uint64_t v12 = v1[9];
    sub_1000A0DDC();
    long long v21 = *(_OWORD *)(v1 + 7);
    long long v22 = *(_OWORD *)(v1 + 5);
    uint64_t v13 = sub_1001C1240();
    v1[19] = v13;
    uint64_t v14 = type metadata accessor for NWAsyncConnection.OHTTPStreamFactory(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v11 + *(int *)(v14 + 28), v10);
    uint64_t v15 = swift_task_alloc();
    v1[20] = v15;
    *(_OWORD *)(v15 + 16) = v21;
    *(void *)(v15 + 32) = v12;
    *(_OWORD *)(v15 + 40) = v22;
    uint64_t v16 = (void *)swift_task_alloc();
    v1[21] = v16;
    void *v16 = v1;
    v16[1] = sub_10019BDF0;
    uint64_t v17 = v1[13];
    uint64_t v18 = v1[2];
    return sub_100198CA0(v18, v7, v13, v17, 0, (uint64_t)(v1 + 2), (uint64_t)&unk_10020EE58, v15);
  }
  else
  {
    sub_100160C20();
    swift_allocError();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = (uint64_t (*)(void))v0[1];
    return v20();
  }
}

uint64_t sub_10019BDF0()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)v2[19];
  (*(void (**)(void, void))(v2[12] + 8))(v2[13], v2[11]);

  if (v0) {
    uint64_t v4 = sub_10019C070;
  }
  else {
    uint64_t v4 = sub_10019BF70;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_10019BF70()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10019C000()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10019C070()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10019C0F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)a5 + *a5);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v9;
  void *v9 = v5;
  v9[1] = sub_1000A12C8;
  return v11(a1, a2, a3);
}

uint64_t NWAsyncConnection.OHTTPStreamFactory.startActivity(_:)()
{
  return sub_1001C0510();
}

uint64_t sub_10019C210()
{
  v1[3] = v0;
  uint64_t v2 = sub_1001BF310();
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  return _swift_task_switch(sub_10019C2D0, 0, 0);
}

uint64_t sub_10019C2D0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) + 16);
  *(void *)(v0 + 56) = v1;
  return _swift_task_switch(sub_10019C2F4, v1, 0);
}

uint64_t sub_10019C2F4()
{
  uint64_t v1 = v0[7];
  int v2 = *(unsigned __int8 *)(v1 + 128);
  if (v2 == 255)
  {
    uint64_t v3 = v0[6];
    sub_1001BF300();
    uint64_t v4 = swift_task_alloc();
    v0[8] = v4;
    *(void *)(v4 + 16) = v1;
    *(void *)(v4 + 24) = v3;
    uint64_t v5 = swift_task_alloc();
    v0[9] = v5;
    *(void *)(v5 + 16) = v1;
    *(void *)(v5 + 24) = v3;
    unint64_t v6 = sub_10019F398();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[10] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_10019C4A4;
    return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v7, &unk_10020F110, v4, sub_10019F390, v5, v1, v6, (char *)&type metadata for () + 8);
  }
  else
  {
    if (v2)
    {
      uint64_t v9 = *(void *)(v1 + 120);
      v0[2] = v9;
      swift_errorRetain();
      sub_100003918(&qword_100208C98);
      swift_willThrowTypedImpl();
      v0[12] = v9;
      uint64_t v8 = sub_10019C674;
    }
    else
    {
      uint64_t v8 = sub_10019C610;
    }
    return _swift_task_switch(v8, 0, 0);
  }
}

uint64_t sub_10019C4A4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 56);
  if (v0) {
    uint64_t v4 = sub_10019C750;
  }
  else {
    uint64_t v4 = sub_10019C6D8;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10019C610()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10019C674()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10019C6D8()
{
  (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
  return _swift_task_switch(sub_10019C610, 0, 0);
}

uint64_t sub_10019C750()
{
  (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
  v0[12] = v0[11];
  return _swift_task_switch(sub_10019C674, 0, 0);
}

uint64_t sub_10019C7D0(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020F0F8);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2, v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7 + v6, (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_1001C05E0();
  return swift_release();
}

uint64_t sub_10019C918(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_100208AA0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10019F274(a1, (uint64_t)v5);
  uint64_t v6 = sub_1001C05B0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_100003918(&qword_10020F0F8);
    return sub_1001C0EC0();
  }
  return result;
}

uint64_t sub_10019C9FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v16;
  v16[2] = v21;
  v16[3] = a7;
  v16[4] = a8;
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v8 + 24) = v17;
  *uint64_t v17 = v8;
  v17[1] = sub_10019CB20;
  return NWAsyncConnection.OHTTPStreamFactory.withOHTTPSubStream<A>(ohttpContext:gatewayKeyConfig:mediaType:_:)(a1, a2, a3, a4, a5, a6, (uint64_t)&unk_10020F158, (uint64_t)v16);
}

uint64_t sub_10019CB20()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10019CC30(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  *(void *)(v4 + 16) = a3;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)a4 + *a4);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v7;
  *uint64_t v7 = v4;
  v7[1] = sub_1001A0004;
  return v9(a1, a2, v4 + 16);
}

uint64_t sub_10019CD28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v17;
  _OWORD v17[2] = a6;
  v17[3] = a7;
  v17[4] = a8;
  v17[5] = a4;
  v17[6] = a5;
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v8 + 24) = v18;
  *uint64_t v18 = v8;
  v18[1] = sub_1001A0000;
  return NWAsyncConnection.OHTTPStreamFactory.withOHTTPSubStream<A, B>(ohttpContext:standaloneAEADKey:_:)(a1, a2, a3, (uint64_t)&unk_10020F148, (uint64_t)v17, a6, a7, a8);
}

uint64_t sub_10019CE50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return _swift_task_switch(sub_10019CE70, a2, 0);
}

uint64_t sub_10019CE70()
{
  unint64_t v1 = sub_10019F398();
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 40) = v2;
  long long v6 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v2 + 16) = v6;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10019CF7C;
  uint64_t v4 = *(void *)(v0 + 16);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, v6, v1, 0xD000000000000010, 0x80000001001C7210, sub_10019F610, v2, (char *)&type metadata for () + 8);
}

uint64_t sub_10019CF7C()
{
  uint64_t v2 = (void *)*v1;
  v2[7] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[3];
    return _swift_task_switch(sub_10019D0B8, v3, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_10019D0B8()
{
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10019D11C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_100003918(&qword_100208648);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1001BF310();
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v13 + 16))(v12, a3);
  uint64_t v14 = sub_100003918(&qword_100208640);
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v8, a1, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v8, 0, 1, v14);
  swift_beginAccess();
  sub_100091AE0((uint64_t)v8, (uint64_t)v12);
  return swift_endAccess();
}

uint64_t sub_10019D2E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BF310();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4, v7);
  uint64_t v8 = sub_100003918(&qword_10020C3B0);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1001C0FC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = (char *)swift_allocObject();
  *((void *)v14 + 2) = 0;
  *((void *)v14 + 3) = 0;
  *((void *)v14 + 4) = a1;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v14[v13], (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  swift_retain();
  sub_1001A1CC0((uint64_t)v11, (uint64_t)&unk_10020F128, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_10019D4B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return _swift_task_switch(sub_10019D4D4, a4, 0);
}

uint64_t sub_10019D4D4()
{
  sub_10019D534(*(void *)(v0 + 24));
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10019D534(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_100208648);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100003918(&qword_100208640);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_10018DC9C(a1, (uint64_t)v5);
  swift_endAccess();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1) {
    return sub_10019F5B0((uint64_t)v5);
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
  sub_1001C0EE0();
  sub_10019DA20(&qword_100208790, (void (*)(uint64_t))&type metadata accessor for CancellationError);
  uint64_t v12 = swift_allocError();
  sub_1001C0B70();
  v13[1] = v12;
  sub_1001C0EB0();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t type metadata accessor for NWAsyncConnection.Inbound(uint64_t a1)
{
  return sub_10001C958(a1, qword_10020EF80);
}

uint64_t type metadata accessor for NWAsyncConnection.Inbound.AsyncIterator(uint64_t a1)
{
  return sub_10001C958(a1, qword_10020F018);
}

uint64_t type metadata accessor for NWAsyncConnection.OHTTPStreamFactory(uint64_t a1)
{
  return sub_10001C958(a1, qword_10020F0B0);
}

uint64_t sub_10019D79C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *(int **)(v4 + 24);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  void *v11 = v5;
  v11[1] = sub_1000A12C8;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, int *))((char *)&dword_10020EE30 + dword_10020EE30);
  return v12(a1, a2, a3, a4, v10);
}

void sub_10019D884()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_1000A12C8;
  uint64_t v2 = (char *)&dword_10020EE50 + dword_10020EE50;
  __asm { BR              X9; sub_10019C0F4 }
}

uint64_t sub_10019D984()
{
  return sub_10019DA20(&qword_10020E3D8, (void (*)(uint64_t))type metadata accessor for NWAsyncConnection.Inbound);
}

_UNKNOWN **sub_10019D9CC()
{
  return &protocol witness table for NWAsyncConnection.OHTTPStreamFactory;
}

uint64_t sub_10019D9D8()
{
  return sub_10019DA20(&qword_10020EE60, (void (*)(uint64_t))type metadata accessor for NWAsyncConnection.OHTTPStreamFactory);
}

uint64_t sub_10019DA20(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

_UNKNOWN **sub_10019DA68()
{
  return &protocol witness table for NWAsyncConnection.Outbound;
}

uint64_t sub_10019DA74()
{
  return sub_10019DA20(&qword_10020EED0, (void (*)(uint64_t))type metadata accessor for NWAsyncConnection.Inbound.AsyncIterator);
}

unint64_t sub_10019DAC0()
{
  unint64_t result = qword_10020EED8;
  if (!qword_10020EED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020EED8);
  }
  return result;
}

uint64_t destroy for NWConnectionReceived(uint64_t *a1)
{
  unint64_t v1 = a1[1];
  if (v1 >> 60 != 15) {
    sub_10000792C(*a1, v1);
  }
  return swift_release();
}

uint64_t initializeWithCopy for NWConnectionReceived(uint64_t a1, uint64_t *a2)
{
  unint64_t v4 = a2[1];
  if (v4 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v5 = *a2;
    sub_100007B14(*a2, a2[1]);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v4;
  }
  *(void *)(a1 + 16) = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for NWConnectionReceived(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8) >> 60 != 15)
  {
    if (v4 >> 60 != 15)
    {
      uint64_t v6 = *(void *)a2;
      sub_100007B14(*(void *)a2, *(void *)(a2 + 8));
      uint64_t v7 = *(void *)a1;
      unint64_t v8 = *(void *)(a1 + 8);
      *(void *)a1 = v6;
      *(void *)(a1 + 8) = v4;
      sub_10000792C(v7, v8);
      goto LABEL_8;
    }
    sub_10002CC88(a1);
    goto LABEL_6;
  }
  if (v4 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)a2;
  sub_100007B14(*(void *)a2, *(void *)(a2 + 8));
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
LABEL_8:
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for NWConnectionReceived(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 8);
  if (v4 >> 60 != 15)
  {
    unint64_t v5 = *(void *)(a2 + 8);
    if (v5 >> 60 != 15)
    {
      uint64_t v6 = *(void *)a1;
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v5;
      sub_10000792C(v6, v4);
      goto LABEL_6;
    }
    sub_10002CC88(a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_6:
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for NWConnectionReceived(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NWConnectionReceived(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NWConnectionReceived()
{
  return &type metadata for NWConnectionReceived;
}

ValueMetadata *type metadata accessor for NWAsyncConnection()
{
  return &type metadata for NWAsyncConnection;
}

ValueMetadata *type metadata accessor for NWAsyncConnection.Outbound()
{
  return &type metadata for NWAsyncConnection.Outbound;
}

uint64_t *initializeBufferWithCopyOfBuffer for NWAsyncConnection.Inbound(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1001C0340();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_retain();
    v12(v9, v10, v11);
    *(uint64_t *)((char *)v7 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  swift_retain();
  return v7;
}

uint64_t destroy for NWAsyncConnection.Inbound(uint64_t a1, uint64_t a2)
{
  return sub_10019E3C0(a1, a2, (uint64_t (*)(uint64_t))&_swift_release);
}

void *initializeWithCopy for NWAsyncConnection.Inbound(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001C0340();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_retain();
  v10(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_retain();
  return a1;
}

void *assignWithCopy for NWAsyncConnection.Inbound(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001C0340();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_retain();
  swift_release();
  return a1;
}

void *initializeWithTake for NWAsyncConnection.Inbound(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001C0340();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *assignWithTake for NWAsyncConnection.Inbound(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001C0340();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for NWAsyncConnection.Inbound(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10019E1DC);
}

uint64_t storeEnumTagSinglePayload for NWAsyncConnection.Inbound(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10019E1F4);
}

uint64_t sub_10019E1F8()
{
  uint64_t result = sub_1001C0340();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for NWAsyncConnection.Inbound.AsyncIterator(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1001C0340();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_retain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = *(void *)((char *)a2 + v13);
    swift_errorRetain();
    *(void *)((char *)v7 + v13) = v14;
    *((unsigned char *)v7 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  }
  return v7;
}

uint64_t destroy for NWAsyncConnection.Inbound.AsyncIterator(uint64_t a1, uint64_t a2)
{
  return sub_10019E3C0(a1, a2, (uint64_t (*)(uint64_t))&_swift_errorRelease);
}

uint64_t sub_10019E3C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  swift_release();
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1001C0340();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = *(void *)(a1 + *(int *)(a2 + 24));
  return a3(v7);
}

void *initializeWithCopy for NWAsyncConnection.Inbound.AsyncIterator(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001C0340();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_retain();
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = *(void *)((char *)a2 + v11);
  swift_errorRetain();
  *(void *)((char *)a1 + v11) = v12;
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

void *assignWithCopy for NWAsyncConnection.Inbound.AsyncIterator(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001C0340();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = *(void *)((char *)a2 + v10);
  swift_errorRetain();
  *(void *)((char *)a1 + v10) = v11;
  swift_errorRelease();
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

void *initializeWithTake for NWAsyncConnection.Inbound.AsyncIterator(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001C0340();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
  return a1;
}

void *assignWithTake for NWAsyncConnection.Inbound.AsyncIterator(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001C0340();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_errorRelease();
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

uint64_t getEnumTagSinglePayload for NWAsyncConnection.Inbound.AsyncIterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10019E758);
}

uint64_t sub_10019E75C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1001C0340();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for NWAsyncConnection.Inbound.AsyncIterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10019E820);
}

void *sub_10019E824(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    char *result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1001C0340();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_10019E8CC()
{
  uint64_t result = sub_1001C0340();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for NWAsyncConnection.OHTTPStreamFactory(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[2];
    *((void *)a1 + 1) = a2[1];
    *((void *)a1 + 2) = v6;
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = &a1[v7];
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = sub_1001BF310();
    uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    uint64_t v12 = v4;
    swift_retain();
    swift_retain();
    v11(v8, v9, v10);
  }
  return v5;
}

uint64_t destroy for NWAsyncConnection.OHTTPStreamFactory(id *a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_1001BF310();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for NWAsyncConnection.OHTTPStreamFactory(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1001BF310();
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  id v11 = v5;
  swift_retain();
  swift_retain();
  v10(v7, v8, v9);
  return a1;
}

uint64_t assignWithCopy for NWAsyncConnection.OHTTPStreamFactory(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1001BF310();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t initializeWithTake for NWAsyncConnection.OHTTPStreamFactory(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1001BF310();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for NWAsyncConnection.OHTTPStreamFactory(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  swift_release();
  *(void *)(a1 + 16) = a2[2];
  swift_release();
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1001BF310();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for NWAsyncConnection.OHTTPStreamFactory(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10019EDBC);
}

uint64_t sub_10019EDBC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1001BF310();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for NWAsyncConnection.OHTTPStreamFactory(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10019EE80);
}

void *sub_10019EE80(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    char *result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1001BF310();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_10019EF28()
{
  uint64_t result = sub_1001BF310();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NWAsyncConnection.OHTTPStreamFactory.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        char *result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      char *result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10019F070);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for NWAsyncConnection.OHTTPStreamFactory.Error()
{
  return &type metadata for NWAsyncConnection.OHTTPStreamFactory.Error;
}

uint64_t sub_10019F0A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NWAsyncConnection.OHTTPStreamFactory(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10019F10C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10019F16C()
{
  uint64_t v1 = sub_100003918(&qword_10020F0F8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10019F200(uint64_t a1)
{
  sub_100003918(&qword_10020F0F8);
  return sub_10019C918(a1);
}

uint64_t sub_10019F274(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100003918(&qword_100208AA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10019F2DC(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_1000A12C8;
  *(_OWORD *)(v4 + 24) = v5;
  *(void *)(v4 + 16) = a1;
  return _swift_task_switch(sub_10019CE70, v5, 0);
}

uint64_t sub_10019F390()
{
  return sub_10019D2E0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_10019F398()
{
  unint64_t result = qword_10020F118;
  if (!qword_10020F118)
  {
    sub_1000166C8(&qword_10020C058);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10020F118);
  }
  return result;
}

uint64_t sub_10019F3F4()
{
  uint64_t v1 = sub_1001BF310();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10019F4C8()
{
  uint64_t v2 = *(void *)(sub_1001BF310() - 8);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[2] = v3;
  v5[3] = v4;
  v5[1] = sub_1000074CC;
  return _swift_task_switch(sub_10019D4D4, v3, 0);
}

uint64_t sub_10019F5B0(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_100208648);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10019F610(uint64_t a1)
{
  return sub_10019D11C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10019F618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a3;
  v7[6] = a4;
  v7[3] = a1;
  v7[4] = a2;
  v7[9] = type metadata accessor for NWAsyncConnection.Inbound(0);
  v7[10] = swift_task_alloc();
  uint64_t v8 = sub_1001BF310();
  v7[11] = v8;
  v7[12] = *(void *)(v8 - 8);
  v7[13] = swift_task_alloc();
  uint64_t v9 = sub_1001BF8E0();
  v7[14] = v9;
  v7[15] = *(void *)(v9 - 8);
  v7[16] = swift_task_alloc();
  uint64_t v10 = sub_1001C0340();
  v7[17] = v10;
  v7[18] = *(void *)(v10 - 8);
  v7[19] = swift_task_alloc();
  v7[20] = swift_task_alloc();
  return _swift_task_switch(sub_10019F7D8, 0, 0);
}

uint64_t sub_10019F7D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + 2;
  uint64_t v3 = v0[19];
  uint64_t v4 = v0[20];
  uint64_t v6 = v0[17];
  uint64_t v5 = v0[18];
  uint64_t v7 = v0[16];
  uint64_t v8 = v1[14];
  uint64_t v9 = v1[15];
  uint64_t v10 = v1[12];
  uint64_t v20 = v3;
  uint64_t v21 = v1[13];
  uint64_t v22 = v1[11];
  uint64_t v24 = v1[9];
  uint64_t v25 = (uint64_t *)v1[10];
  uint64_t v26 = (int *)v1[7];
  uint64_t v28 = v2;
  uint64_t v11 = v1[5];
  uint64_t v23 = v1[6];
  (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v7, enum case for TC2LogCategory.network(_:), v8);
  sub_1001BFDD0();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v12(v20, v4, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v21, v11, v22);
  type metadata accessor for NWConnectionWrapper(0);
  swift_allocObject();
  swift_retain();
  uint64_t v13 = swift_retain();
  uint64_t v14 = sub_1001B6724(v13, v23, v20, v21);
  v1[21] = v14;
  sub_1001B5B14();
  v12((uint64_t)v25 + *(int *)(v24 + 20), v4, v6);
  uint64_t v15 = *(int *)(v24 + 24);
  sub_100003918(&qword_100207A38);
  uint64_t v16 = swift_allocObject();
  *(_DWORD *)(v16 + 20) = 0;
  *(unsigned char *)(v16 + 16) = 0;
  *(uint64_t *)((char *)v25 + v15) = v16;
  *uint64_t v25 = v14;
  uint64_t v27 = (int *)((char *)v26 + *v26);
  swift_retain();
  uint64_t v17 = (void *)swift_task_alloc();
  v1[22] = v17;
  *uint64_t v17 = v1;
  v17[1] = sub_10019FA48;
  uint64_t v18 = v1[10];
  return ((uint64_t (*)(void *, uint64_t, uint64_t))v27)(v28, v18, v14);
}

uint64_t sub_10019FA48()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_100198BB0;
  }
  else
  {
    *(void *)(v2 + 192) = *(void *)(v2 + 16);
    uint64_t v3 = sub_10019FB64;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10019FB64()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[17];
  sub_10019F10C(v0[10], type metadata accessor for NWAsyncConnection.Inbound);
  sub_1001B8728();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v5 = v0[24];
  return v4(v5);
}

uint64_t sub_10019FC58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(int **)(v3 + 40);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_1000A12C8;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_10020F140 + dword_10020F140);
  return v10(a1, a2, a3, v8);
}

uint64_t sub_10019FD4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(int **)(v3 + 24);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_1000A12C8;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_10020F150 + dword_10020F150);
  return v10(a1, a2, a3, v8);
}

uint64_t sub_10019FE2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *(int **)(v4 + 24);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  void *v11 = v5;
  v11[1] = sub_1000A12C8;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, int *))((char *)&dword_10020F168 + dword_10020F168);
  return v12(a1, a2, a3, a4, v10);
}

uint64_t sub_10019FF14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v10 = *(int **)(v4 + 24);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  void *v11 = v5;
  v11[1] = sub_1000074CC;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *, int *))((char *)&dword_10020F180 + dword_10020F180);
  return v12(a1, a2, a3, a4, v10);
}

uint64_t sub_1001A0008()
{
  sub_1000166C8(&qword_100208C98);
  sub_1001C19A0();
  uint64_t result = sub_1001C12F0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1001A00DC()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 104);
  sub_1000166C8(&qword_100208C98);
  sub_1001C19A0();
  uint64_t v2 = sub_1001C12F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_1001A01A4()
{
  sub_1001A00DC();
  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for TC2Event()
{
  return sub_10000E738();
}

uint64_t sub_1001A01E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1001BF2C0();
  uint64_t v32 = *(void *)(v4 - 8);
  uint64_t v33 = v4;
  __chkstk_darwin(v4, v5);
  uint64_t v21 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = a1;
  swift_getKeyPath();
  sub_1001A1500(&qword_10020C748, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  sub_1001BF410();
  swift_release();
  swift_getKeyPath();
  sub_1001A1500(&qword_100207A30, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  sub_1001C0A40();
  swift_release();
  uint64_t v30 = v35;
  uint64_t v31 = v34;
  uint64_t v34 = a1;
  swift_getKeyPath();
  sub_1001BF410();
  swift_release();
  swift_getKeyPath();
  sub_1001C0A40();
  swift_release();
  uint64_t v28 = v35;
  uint64_t v29 = v34;
  uint64_t v34 = a1;
  swift_getKeyPath();
  sub_1001BF410();
  swift_release();
  swift_getKeyPath();
  sub_1001C0A40();
  swift_release();
  uint64_t v26 = v35;
  uint64_t v27 = v34;
  uint64_t v34 = a1;
  swift_getKeyPath();
  sub_1001BF410();
  swift_release();
  swift_getKeyPath();
  sub_1001A078C();
  sub_1001C0A40();
  swift_release();
  uint64_t v24 = v35;
  uint64_t v25 = v34;
  uint64_t v34 = a1;
  swift_getKeyPath();
  sub_1001BF410();
  swift_release();
  swift_getKeyPath();
  sub_1000D461C();
  sub_1001C0A40();
  swift_release();
  uint64_t v22 = v35;
  uint64_t v23 = v34;
  uint64_t v34 = a1;
  swift_getKeyPath();
  sub_1001BF410();
  swift_release();
  swift_getKeyPath();
  sub_1001A1500(&qword_1002084D8, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1001C0A40();
  swift_release();
  uint64_t v34 = a1;
  swift_getKeyPath();
  sub_1001BF410();
  swift_release();
  swift_getKeyPath();
  sub_1001C0A40();
  swift_release();
  uint64_t v7 = v34;
  uint64_t v20 = v35;
  uint64_t v34 = a1;
  swift_getKeyPath();
  sub_1001BF410();
  swift_release();
  swift_getKeyPath();
  sub_1001C0A40();
  swift_release();
  swift_release();
  uint64_t v8 = v34;
  uint64_t v9 = v35;
  uint64_t v10 = v30;
  *(void *)a2 = v31;
  *(void *)(a2 + 8) = v10;
  *(_OWORD *)(a2 + 16) = xmmword_1001CE850;
  uint64_t v11 = v28;
  *(void *)(a2 + 32) = v29;
  *(void *)(a2 + 40) = v11;
  uint64_t v12 = v26;
  *(void *)(a2 + 48) = v27;
  *(void *)(a2 + 56) = v12;
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = 0;
  uint64_t v13 = v24;
  *(void *)(a2 + 80) = v25;
  *(void *)(a2 + 88) = v13;
  uint64_t v14 = v22;
  *(void *)(a2 + 96) = v23;
  *(void *)(a2 + 104) = v14;
  uint64_t v15 = (int *)type metadata accessor for ValidatedAttestation();
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(a2 + v15[6], v21, v33);
  uint64_t v16 = (void *)(a2 + v15[7]);
  uint64_t v17 = v20;
  void *v16 = v7;
  v16[1] = v17;
  uint64_t v18 = (void *)(a2 + v15[8]);
  *uint64_t v18 = v8;
  v18[1] = v9;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v15 - 1) + 56))(a2, 0, 1, v15);
}

unint64_t sub_1001A078C()
{
  unint64_t result = qword_10020CCC8;
  if (!qword_10020CCC8)
  {
    sub_1000166C8(&qword_100207DB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020CCC8);
  }
  return result;
}

uint64_t type metadata accessor for ValidatedAttestation()
{
  uint64_t result = qword_10020F268;
  if (!qword_10020F268) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001A0864(uint64_t a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2 + 2;
    unint64_t v9 = a2[3];
    swift_bridgeObjectRetain();
    if (v9 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 16) = *v8;
    }
    else
    {
      uint64_t v11 = *(void *)v8;
      sub_100007B14(v11, v9);
      *(void *)(a1 + 16) = v11;
      *(void *)(a1 + 24) = v9;
    }
    uint64_t v12 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v12;
    uint64_t v13 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v13;
    uint64_t v14 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v14;
    uint64_t v15 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v15;
    uint64_t v16 = a2[12];
    unint64_t v17 = a2[13];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100007B14(v16, v17);
    *(void *)(a1 + 96) = v16;
    *(void *)(a1 + 104) = v17;
    uint64_t v18 = a3[6];
    uint64_t v19 = a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = sub_1001BF2C0();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    uint64_t v22 = a3[7];
    uint64_t v23 = a3[8];
    uint64_t v24 = (void *)(a1 + v22);
    uint64_t v25 = (void *)((char *)a2 + v22);
    uint64_t v26 = v25[1];
    *uint64_t v24 = *v25;
    v24[1] = v26;
    uint64_t v27 = (void *)(a1 + v23);
    uint64_t v28 = (void *)((char *)a2 + v23);
    uint64_t v29 = v28[1];
    *uint64_t v27 = *v28;
    v27[1] = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1001A0A04(void *a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  unint64_t v4 = a1[3];
  if (v4 >> 60 != 15) {
    sub_10000792C(a1[2], v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10000792C(a1[12], a1[13]);
  int v5 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v6 = sub_1001BF2C0();
  (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001A0AE4(uint64_t a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = a2 + 2;
  unint64_t v8 = a2[3];
  swift_bridgeObjectRetain();
  if (v8 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *v7;
  }
  else
  {
    uint64_t v9 = *(void *)v7;
    sub_100007B14(v9, v8);
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v8;
  }
  uint64_t v10 = a2[5];
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = v10;
  uint64_t v11 = a2[7];
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = v11;
  uint64_t v12 = a2[9];
  *(void *)(a1 + 64) = a2[8];
  *(void *)(a1 + 72) = v12;
  uint64_t v13 = a2[11];
  *(void *)(a1 + 80) = a2[10];
  *(void *)(a1 + 88) = v13;
  uint64_t v14 = a2[12];
  unint64_t v15 = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100007B14(v14, v15);
  *(void *)(a1 + 96) = v14;
  *(void *)(a1 + 104) = v15;
  uint64_t v16 = a3[6];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_1001BF2C0();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  uint64_t v20 = a3[7];
  uint64_t v21 = a3[8];
  uint64_t v22 = (void *)(a1 + v20);
  uint64_t v23 = (void *)((char *)a2 + v20);
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  uint64_t v25 = (void *)(a1 + v21);
  uint64_t v26 = (void *)((char *)a2 + v21);
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1001A0C34(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a2 + 2;
  unint64_t v7 = a2[3];
  if (a1[3] >> 60 != 15)
  {
    if (v7 >> 60 != 15)
    {
      uint64_t v9 = *v6;
      sub_100007B14(*v6, a2[3]);
      uint64_t v10 = a1[2];
      unint64_t v11 = a1[3];
      a1[2] = v9;
      a1[3] = v7;
      sub_10000792C(v10, v11);
      goto LABEL_8;
    }
    sub_10002CC88((uint64_t)(a1 + 2));
    goto LABEL_6;
  }
  if (v7 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 1) = *(_OWORD *)v6;
    goto LABEL_8;
  }
  uint64_t v8 = *v6;
  sub_100007B14(*v6, a2[3]);
  a1[2] = v8;
  a1[3] = v7;
LABEL_8:
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = a2[12];
  unint64_t v13 = a2[13];
  sub_100007B14(v12, v13);
  uint64_t v14 = a1[12];
  unint64_t v15 = a1[13];
  a1[12] = v12;
  a1[13] = v13;
  sub_10000792C(v14, v15);
  uint64_t v16 = a3[6];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_1001BF2C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  uint64_t v20 = a3[7];
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[8];
  uint64_t v24 = (void *)((char *)a1 + v23);
  uint64_t v25 = (void *)((char *)a2 + v23);
  *uint64_t v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1001A0E48(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  long long v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  long long v8 = a2[1];
  *a1 = *a2;
  a1[1] = v8;
  uint64_t v9 = a3[6];
  uint64_t v10 = (char *)a1 + v9;
  unint64_t v11 = (char *)a2 + v9;
  a1[6] = a2[6];
  uint64_t v12 = sub_1001BF2C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  return a1;
}

void *sub_1001A0F00(void *a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  long long v7 = (void *)(a2 + 16);
  unint64_t v8 = a1[3];
  if (v8 >> 60 != 15)
  {
    unint64_t v9 = *(void *)(a2 + 24);
    if (v9 >> 60 != 15)
    {
      uint64_t v10 = a1[2];
      a1[2] = *v7;
      a1[3] = v9;
      sub_10000792C(v10, v8);
      goto LABEL_6;
    }
    sub_10002CC88((uint64_t)(a1 + 2));
  }
  *((_OWORD *)a1 + 1) = *(_OWORD *)v7;
LABEL_6:
  uint64_t v11 = *(void *)(a2 + 40);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 56);
  a1[6] = *(void *)(a2 + 48);
  a1[7] = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 72);
  a1[8] = *(void *)(a2 + 64);
  a1[9] = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 88);
  a1[10] = *(void *)(a2 + 80);
  a1[11] = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = a1[12];
  unint64_t v16 = a1[13];
  *((_OWORD *)a1 + 6) = *(_OWORD *)(a2 + 96);
  sub_10000792C(v15, v16);
  uint64_t v17 = a3[6];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_1001BF2C0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  uint64_t v21 = a3[7];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[8];
  uint64_t v27 = (void *)((char *)a1 + v26);
  uint64_t v28 = (uint64_t *)(a2 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *uint64_t v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1001A1068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001A107C);
}

uint64_t sub_1001A107C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1001BF2C0();
    unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1001A112C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001A1140);
}

uint64_t sub_1001A1140(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1001BF2C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1001A11E8()
{
  uint64_t result = sub_1001BF2C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1001A1294()
{
  uint64_t v1 = v0;
  long long v2 = *(_OWORD *)(v0 + 48);
  _OWORD v8[2] = *(_OWORD *)(v0 + 32);
  v8[3] = v2;
  long long v3 = *(_OWORD *)(v0 + 80);
  v8[4] = *(_OWORD *)(v0 + 64);
  v8[5] = v3;
  long long v4 = *(_OWORD *)(v0 + 16);
  v8[0] = *(_OWORD *)v0;
  v8[1] = v4;
  sub_1001944BC((uint64_t)v8);
  sub_1000B9D70();
  sub_1001609D0((uint64_t)v8);
  uint64_t v5 = *(void *)(v0 + 96);
  unint64_t v6 = *(void *)(v1 + 104);
  sub_100007B14(*(void *)(v1 + 96), v6);
  sub_1001BF190();
  sub_10000792C(v5, v6);
  uint64_t v7 = type metadata accessor for ValidatedAttestation();
  sub_1001BF2C0();
  sub_1001A1500(&qword_1002084E0, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1001C0BB0();
  if (*(void *)(v1 + *(int *)(v7 + 28) + 8))
  {
    sub_1001C1970(1u);
    swift_bridgeObjectRetain();
    sub_1001C0CB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1001C1970(0);
  }
  if (*(void *)(v1 + *(int *)(v7 + 32) + 8))
  {
    sub_1001C1970(1u);
    swift_bridgeObjectRetain();
    sub_1001C0CB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1001C1970(0);
  }
}

Swift::Int sub_1001A1434()
{
  return sub_1001C1990();
}

Swift::Int sub_1001A1478()
{
  return sub_1001C1990();
}

uint64_t sub_1001A14B8()
{
  return sub_1001A1500(&qword_10020F2B0, (void (*)(uint64_t))type metadata accessor for ValidatedAttestation);
}

uint64_t sub_1001A1500(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001A1548(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a1 + 48);
  v23[2] = *(_OWORD *)(a1 + 32);
  v23[3] = v4;
  long long v5 = *(_OWORD *)(a1 + 80);
  v23[4] = *(_OWORD *)(a1 + 64);
  v23[5] = v5;
  long long v6 = *(_OWORD *)(a1 + 16);
  v23[0] = *(_OWORD *)a1;
  v23[1] = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  v24[2] = *(_OWORD *)(a2 + 32);
  v24[3] = v7;
  long long v8 = *(_OWORD *)(a2 + 80);
  v24[4] = *(_OWORD *)(a2 + 64);
  v24[5] = v8;
  long long v9 = *(_OWORD *)(a2 + 16);
  v24[0] = *(_OWORD *)a2;
  v24[1] = v9;
  if ((sub_1000B9FD0(v23, v24) & 1) == 0) {
    return 0;
  }
  if ((sub_10004C464(*(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a2 + 96), *(void *)(a2 + 104)) & 1) == 0) {
    return 0;
  }
  uint64_t v10 = type metadata accessor for ValidatedAttestation();
  if ((sub_1001BF290() & 1) == 0) {
    return 0;
  }
  uint64_t v11 = *(int *)(v10 + 28);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = *(void *)(a1 + v11 + 8);
  uint64_t v14 = (void *)(a2 + v11);
  uint64_t v15 = v14[1];
  if (!v13)
  {
    if (v15) {
      return 0;
    }
    goto LABEL_11;
  }
  if (!v15) {
    return 0;
  }
  if (*v12 == *v14 && v13 == v15 || (char v16 = sub_1001C1840(), result = 0, (v16 & 1) != 0))
  {
LABEL_11:
    uint64_t v18 = *(int *)(v10 + 32);
    uint64_t v19 = (void *)(a1 + v18);
    uint64_t v20 = *(void *)(a1 + v18 + 8);
    uint64_t v21 = (void *)(a2 + v18);
    uint64_t v22 = v21[1];
    if (v20)
    {
      if (v22 && (*v19 == *v21 && v20 == v22 || (sub_1001C1840() & 1) != 0)) {
        return 1;
      }
    }
    else if (!v22)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t destroy for TapToRadarContext()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for TapToRadarContext(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for TapToRadarContext(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for TapToRadarContext(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

void *assignWithTake for TapToRadarContext(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TapToRadarContext(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TapToRadarContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TapToRadarContext()
{
  return &type metadata for TapToRadarContext;
}

uint64_t sub_1001A1970()
{
  uint64_t result = sub_1001BF2C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_1001C0340();
      if (v3 <= 0x3F) {
        return swift_initClassMetadata2();
      }
    }
  }
  return result;
}

void sub_1001A1A84(uint64_t a1, void *a2)
{
  sub_1001BF200();
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v3 >= 9.22337204e18)
  {
LABEL_9:
    __break(1u);
    return;
  }
  Class isa = sub_1001C10F0().super.super.isa;
  id v5 = sub_1001C0BE0();
  [a2 setValue:isa forKey:v5];
}

uint64_t *sub_1001A1B50()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (uint64_t)v0 + qword_10020F2B8;
  uint64_t v3 = sub_1001BF2C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 112));
  uint64_t v4 = (uint64_t)v0 + *(void *)(*v0 + 120);
  uint64_t v5 = sub_1001C0340();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_1001A1C6C()
{
  sub_1001A1B50();
  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for TapToRadarController()
{
  return sub_10000E738();
}

ValueMetadata *type metadata accessor for TapToRadarControllerUserDefaultsStore()
{
  return &type metadata for TapToRadarControllerUserDefaultsStore;
}

uint64_t sub_1001A1CC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001C0FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1001C0FB0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1001A3C44(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1001C0EA0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

void sub_1001A1E64(uint64_t a1, unint64_t a2, uint64_t a3)
{
  if (a2 >> 60 == 15) {
    Class isa = 0;
  }
  else {
    Class isa = sub_1001BF160().super.isa;
  }
  Class v5 = isa;
  (*(void (**)(uint64_t))(a3 + 16))(a3);
}

uint64_t sub_1001A1ED0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t sub_1001A1EDC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC20privatecloudcomputed22TrustedRequestXPCProxy_logger;
  uint64_t v2 = sub_1001C0340();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  uint64_t v3 = v0 + OBJC_IVAR____TtC20privatecloudcomputed22TrustedRequestXPCProxy_nextCallID;
  uint64_t v4 = sub_100003918(&qword_10020D430);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t sub_1001A2018()
{
  return type metadata accessor for TrustedRequestXPCProxy();
}

uint64_t type metadata accessor for TrustedRequestXPCProxy()
{
  uint64_t result = qword_10020F370;
  if (!qword_10020F370) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001A206C()
{
  uint64_t result = sub_1001C0340();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

char *sub_1001A2130()
{
  if (&swift_runtimeSupportsNoncopyableTypes) {
    return (char *)sub_100003918(&qword_10020D430);
  }
  else {
    return (char *)&type metadata for () + 8;
  }
}

uint64_t sub_1001A2158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  *(void *)(v8 + 48) = a8;
  *(void *)(v8 + 56) = v12;
  *(unsigned char *)(v8 + 128) = a7;
  *(void *)(v8 + 32) = a5;
  *(void *)(v8 + 40) = a6;
  *(void *)(v8 + 24) = a4;
  uint64_t v9 = sub_1001BF810();
  *(void *)(v8 + 64) = v9;
  *(void *)(v8 + 72) = *(void *)(v9 - 8);
  *(void *)(v8 + 80) = swift_task_alloc();
  *(void *)(v8 + 88) = swift_task_alloc();
  *(void *)(v8 + 96) = swift_task_alloc();
  return _swift_task_switch(sub_1001A2248, 0, 0);
}

uint64_t sub_1001A2248()
{
  char v1 = *(unsigned char *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 32);
  unint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(*(void *)(v0 + 24)
                 + OBJC_IVAR____TtC20privatecloudcomputed22TrustedRequestXPCProxy_outgoingUserDataWriter);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 104) = v5;
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v2;
  *(void *)(v5 + 32) = v3;
  *(unsigned char *)(v5 + 40) = v1;
  sub_100007B14(v2, v3);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1001A236C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v6, 0, 0, 0xD000000000000017, 0x80000001001C7380, sub_1001A42E4, v5, (char *)&type metadata for () + 8);
}

uint64_t sub_1001A236C()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1001A2518;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1001A2488;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001A2488()
{
  uint64_t v1 = (void (*)(void, unint64_t))v0[6];
  sub_10000792C(v0[4], v0[5]);
  v1(0, 0xF000000000000000);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1001A2518()
{
  uint64_t v1 = (void *)v0[15];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[8];
  uint64_t v5 = v0[9];
  sub_10000792C(v0[4], v0[5]);
  swift_task_dealloc();
  static TrustedCloudComputeError.wrapAny(error:)(v1, v2);
  sub_1001A42F4(&qword_10020D938, (void (*)(uint64_t))&type metadata accessor for TrustedCloudComputeError);
  swift_willThrowTypedImpl();
  swift_errorRelease();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
  v6(v3, v2, v4);
  uint64_t v7 = swift_allocError();
  v6(v8, v3, v4);
  v0[2] = v7;
  swift_errorRetain();
  sub_100003918(&qword_100208C98);
  if (swift_dynamicCast())
  {
    uint64_t v9 = v0[11];
    uint64_t v10 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v17 = (void (*)(void))v0[6];
    v6(v9, v0[10], v10);
    sub_1001A42F4(&qword_10020E078, (void (*)(uint64_t))&type metadata accessor for TrustedCloudComputeError);
    sub_1001A42F4(&qword_10020E080, (void (*)(uint64_t))&type metadata accessor for TrustedCloudComputeError);
    uint64_t v12 = sub_1001BFD00();
    unint64_t v14 = v13;
    v17();
    sub_10000792C(v12, v14);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    swift_errorRelease();
    swift_errorRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = (uint64_t (*)(void))v0[1];
    return v15();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    return sub_1001C1580();
  }
}

uint64_t sub_1001A2A30(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100003918(&qword_10020C3B0);
  uint64_t result = __chkstk_darwin(v6 - 8, v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v2 + OBJC_IVAR____TtC20privatecloudcomputed22TrustedRequestXPCProxy_nextCallID);
  uint64_t v12 = (atomic_ullong *)(v2 + OBJC_IVAR____TtC20privatecloudcomputed22TrustedRequestXPCProxy_nextCallID);
  do
  {
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v13 = v11;
    atomic_compare_exchange_strong_explicit(v12, (unint64_t *)&v13, v11 + 1, memory_order_relaxed, memory_order_relaxed);
    BOOL v14 = v13 == v11;
    uint64_t v11 = v13;
  }
  while (!v14);
  swift_retain_n();
  uint64_t v15 = sub_1001C0330();
  os_log_type_t v16 = sub_1001C1200();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v24 = v10;
    uint64_t v18 = v17;
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136315394;
    uint64_t v25 = a1;
    uint64_t v19 = a2;
    uint64_t v21 = *(void *)(v3 + OBJC_IVAR____TtC20privatecloudcomputed22TrustedRequestXPCProxy_logPrefix);
    unint64_t v20 = *(void *)(v3 + OBJC_IVAR____TtC20privatecloudcomputed22TrustedRequestXPCProxy_logPrefix + 8);
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_1000DF238(v21, v20, &v27);
    sub_1001C1310();
    swift_release_n();
    a2 = v19;
    a1 = v25;
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2048;
    uint64_t v26 = v11;
    sub_1001C1310();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s Next call (callID: %ld received", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v10 = v24;
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  uint64_t v22 = sub_1001C0FC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v10, 1, 1, v22);
  uint64_t v23 = (void *)swift_allocObject();
  v23[2] = 0;
  v23[3] = 0;
  v23[4] = v3;
  v23[5] = v11;
  _OWORD v23[6] = a1;
  v23[7] = a2;
  swift_retain();
  swift_retain();
  sub_1001A1CC0((uint64_t)v10, (uint64_t)&unk_10020F430, (uint64_t)v23);
  return swift_release();
}

uint64_t sub_1001A2D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[11] = a6;
  v7[12] = a7;
  v7[9] = a4;
  v7[10] = a5;
  uint64_t v8 = sub_1001BF810();
  v7[13] = v8;
  v7[14] = *(void *)(v8 - 8);
  v7[15] = swift_task_alloc();
  v7[16] = swift_task_alloc();
  v7[17] = swift_task_alloc();
  v7[18] = swift_task_alloc();
  v7[19] = swift_task_alloc();
  return _swift_task_switch(sub_1001A2DF8, 0, 0);
}

uint64_t sub_1001A2DF8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1001A2E94;
  return sub_10010B118();
}

uint64_t sub_1001A2E94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[21] = a1;
  v4[22] = a2;
  v4[23] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_1001A2FAC;
  }
  else {
    uint64_t v5 = sub_1001A3568;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001A2FAC()
{
  uint64_t v43 = v0;
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 112);
  static TrustedCloudComputeError.wrapAny(error:)(*(void **)(v0 + 184), v1);
  sub_1001A42F4(&qword_10020D938, (void (*)(uint64_t))&type metadata accessor for TrustedCloudComputeError);
  swift_willThrowTypedImpl();
  swift_errorRelease();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  v5(v2, v1, v3);
  uint64_t v6 = swift_allocError();
  v5(v7, v2, v3);
  *(void *)(v0 + 16) = v6;
  swift_errorRetain();
  sub_100003918(&qword_100208C98);
  if (swift_dynamicCast())
  {
    uint64_t v8 = *(void *)(v0 + 128);
    uint64_t v9 = *(void *)(v0 + 112);
    uint64_t v10 = *(void *)(v0 + 120);
    uint64_t v11 = *(void *)(v0 + 104);
    v5(v8, *(void *)(v0 + 136), v11);
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
    v12(v10, v8, v11);
    swift_retain_n();
    uint64_t v13 = sub_1001C0330();
    os_log_type_t v14 = sub_1001C11F0();
    BOOL v15 = os_log_type_enabled(v13, v14);
    uint64_t v17 = *(void *)(v0 + 112);
    uint64_t v16 = *(void *)(v0 + 120);
    uint64_t v18 = *(void *)(v0 + 104);
    if (v15)
    {
      uint64_t v41 = v12;
      uint64_t v19 = *(void *)(v0 + 72);
      uint64_t v38 = *(void *)(v0 + 80);
      uint64_t v20 = swift_slowAlloc();
      int64_t v39 = (void *)swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136315650;
      uint64_t v21 = v16;
      os_log_type_t type = v14;
      uint64_t v23 = *(void *)(v19 + OBJC_IVAR____TtC20privatecloudcomputed22TrustedRequestXPCProxy_logPrefix);
      unint64_t v22 = *(void *)(v19 + OBJC_IVAR____TtC20privatecloudcomputed22TrustedRequestXPCProxy_logPrefix + 8);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 24) = sub_1000DF238(v23, v22, &v42);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v20 + 12) = 2048;
      *(void *)(v0 + 32) = v38;
      sub_1001C1310();
      *(_WORD *)(v20 + 22) = 2112;
      swift_allocError();
      uint64_t v24 = v18;
      v41(v25, v21, v18);
      uint64_t v26 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 40) = v26;
      sub_1001C1310();
      *int64_t v39 = v26;
      uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      v27(v21, v24);
      uint64_t v28 = v27;
      _os_log_impl((void *)&_mh_execute_header, v13, type, "%s Next call (callID: %ld) failed. Error: %@", (uint8_t *)v20, 0x20u);
      sub_100003918(&qword_100207DA8);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
      uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      v30(v16, v18);
      uint64_t v28 = v30;
    }
    uint64_t v31 = *(void *)(v0 + 128);
    uint64_t v32 = *(void *)(v0 + 104);
    uint64_t v33 = *(void (**)(void, unint64_t, uint64_t, unint64_t))(v0 + 88);
    sub_1001A42F4(&qword_10020E078, (void (*)(uint64_t))&type metadata accessor for TrustedCloudComputeError);
    sub_1001A42F4(&qword_10020E080, (void (*)(uint64_t))&type metadata accessor for TrustedCloudComputeError);
    uint64_t v34 = sub_1001BFD00();
    unint64_t v36 = v35;
    v33(0, 0xF000000000000000, v34, v35);
    sub_10000792C(v34, v36);
    v28(v31, v32);
    swift_errorRelease();
    swift_errorRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v37 = *(uint64_t (**)(void))(v0 + 8);
    return v37();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    return sub_1001C1580();
  }
}

uint64_t sub_1001A3568()
{
  uint64_t v26 = v0;
  uint64_t v2 = *(void *)(v0 + 168);
  unint64_t v1 = *(void *)(v0 + 176);
  swift_retain();
  sub_10000D9E0(v2, v1);
  swift_retain();
  sub_10000D9E0(v2, v1);
  uint64_t v3 = sub_1001C0330();
  os_log_type_t v4 = sub_1001C1200();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v24 = *(void *)(v0 + 176);
    uint64_t v6 = *(void *)(v0 + 72);
    uint64_t v5 = *(void *)(v0 + 80);
    uint64_t v7 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315650;
    uint64_t v8 = *(void *)(v6 + OBJC_IVAR____TtC20privatecloudcomputed22TrustedRequestXPCProxy_logPrefix);
    unint64_t v9 = *(void *)(v6 + OBJC_IVAR____TtC20privatecloudcomputed22TrustedRequestXPCProxy_logPrefix + 8);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 48) = sub_1000DF238(v8, v9, &v25);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v7 + 12) = 2048;
    *(void *)(v0 + 56) = v5;
    sub_1001C1310();
    *(_WORD *)(v7 + 22) = 2048;
    uint64_t v10 = -1;
    if (v24 >> 60 != 15)
    {
      unint64_t v11 = *(void *)(v0 + 176);
      switch(v11 >> 62)
      {
        case 1uLL:
          uint64_t v14 = *(void *)(v0 + 168);
          sub_100007918(v14, *(void *)(v0 + 176));
          LODWORD(v10) = HIDWORD(v14) - v14;
          if (__OFSUB__(HIDWORD(v14), v14))
          {
            __break(1u);
            JUMPOUT(0x1001A38C4);
          }
          uint64_t v10 = (int)v10;
          break;
        case 2uLL:
          uint64_t v15 = *(void *)(v0 + 168);
          uint64_t v17 = *(void *)(v15 + 16);
          uint64_t v16 = *(void *)(v15 + 24);
          sub_100007918(v15, *(void *)(v0 + 176));
          uint64_t v10 = v16 - v17;
          if (__OFSUB__(v16, v17))
          {
            __break(1u);
            goto LABEL_11;
          }
          break;
        case 3uLL:
LABEL_11:
          sub_100007918(*(void *)(v0 + 168), v11);
          uint64_t v10 = 0;
          break;
        default:
          sub_100007918(*(void *)(v0 + 168), *(void *)(v0 + 176));
          uint64_t v10 = BYTE6(v11);
          break;
      }
    }
    uint64_t v19 = *(void *)(v0 + 168);
    unint64_t v18 = *(void *)(v0 + 176);
    *(void *)(v0 + 64) = v10;
    sub_1001C1310();
    sub_100007918(v19, v18);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s Next call (callID: %ld) returned. Bytes: %ld", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 168);
    unint64_t v12 = *(void *)(v0 + 176);
    sub_100007918(v13, v12);

    swift_release_n();
    sub_100007918(v13, v12);
  }
  uint64_t v21 = *(void *)(v0 + 168);
  unint64_t v20 = *(void *)(v0 + 176);
  (*(void (**)(uint64_t, unint64_t, void, unint64_t))(v0 + 88))(v21, v20, 0, 0xF000000000000000);
  sub_100007918(v21, v20);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

void sub_1001A3964(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  if (a2 >> 60 == 15) {
    Class isa = 0;
  }
  else {
    Class isa = sub_1001BF160().super.isa;
  }
  if (a4 >> 60 == 15) {
    Class v8 = 0;
  }
  else {
    Class v8 = sub_1001BF160().super.isa;
  }
  Class v9 = v8;
  (*(void (**)(uint64_t, Class))(a5 + 16))(a5, isa);
}

uint64_t sub_1001A3A0C()
{
  _Block_release(*(const void **)(v0 + 16));
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1001A3A44(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  sub_1001A3964(a1, a2, a3, a4, *(void *)(v4 + 16));
}

uint64_t sub_1001A3A4C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1001A3A94(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1000074CC;
  return sub_1001A2D00(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1001A3B68(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1000B4C7C;
  return v6(a1);
}

uint64_t sub_1001A3C44(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020C3B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001A3CA4()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001A3CDC(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000074CC;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_10020F438 + dword_10020F438);
  return v6(a1, v4);
}

uint64_t sub_1001A3D94(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_1001BF8E0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v14, enum case for TC2LogCategory.trustedRequestXPCProxy(_:), v10);
  sub_1001BFDD0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  uint64_t v15 = OBJC_IVAR____TtC20privatecloudcomputed22TrustedRequestXPCProxy_jsonEncoder;
  sub_1001BEE10();
  swift_allocObject();
  *(void *)(v5 + v15) = sub_1001BEE00();
  *(void *)(v5 + OBJC_IVAR____TtC20privatecloudcomputed22TrustedRequestXPCProxy_nextCallID) = 0;
  *(void *)(v5 + OBJC_IVAR____TtC20privatecloudcomputed22TrustedRequestXPCProxy_outgoingUserDataWriter) = a2;
  *(void *)(v5 + OBJC_IVAR____TtC20privatecloudcomputed22TrustedRequestXPCProxy_incomingUserDataReader) = a3;
  *(void *)(v5 + OBJC_IVAR____TtC20privatecloudcomputed22TrustedRequestXPCProxy_task) = a4;
  uint64_t v16 = sub_1001BF310();
  sub_1001A42F4(qword_100207DC0, (void (*)(uint64_t))&type metadata accessor for UUID);
  id v17 = a2;
  swift_retain();
  swift_retain();
  uint64_t v23 = sub_1001C1780();
  uint64_t v24 = v18;
  v25._uint64_t countAndFlagsBits = 58;
  v25._object = (void *)0xE100000000000000;
  sub_1001C0D00(v25);
  uint64_t v19 = v23;
  uint64_t v20 = v24;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a1, v16);
  uint64_t v21 = (uint64_t *)(v5 + OBJC_IVAR____TtC20privatecloudcomputed22TrustedRequestXPCProxy_logPrefix);
  *uint64_t v21 = v19;
  v21[1] = v20;
  return v5;
}

uint64_t sub_1001A3FD8(uint64_t a1, uint64_t a2)
{
  swift_retain_n();
  uint64_t v4 = sub_1001C0330();
  os_log_type_t v5 = sub_1001C1200();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v7 = *(void *)(a1 + OBJC_IVAR____TtC20privatecloudcomputed22TrustedRequestXPCProxy_logPrefix);
    unint64_t v8 = *(void *)(a1 + OBJC_IVAR____TtC20privatecloudcomputed22TrustedRequestXPCProxy_logPrefix + 8);
    swift_bridgeObjectRetain();
    sub_1000DF238(v7, v8, &v10);
    sub_1001C1310();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s Cancellation received. Cancelling task!", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  sub_100003918(&qword_100208C98);
  sub_1001C1030();
  return (*(uint64_t (**)(uint64_t))(a2 + 16))(a2);
}

uint64_t sub_1001A41A4()
{
  swift_unknownObjectRelease();
  swift_release();
  sub_10000792C(*(void *)(v0 + 40), *(void *)(v0 + 48));
  swift_release();
  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1001A41F4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  char v9 = *(unsigned char *)(v1 + 56);
  uint64_t v10 = *(void *)(v1 + 64);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_1000A12C8;
  return sub_1001A2158(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1001A42E4(uint64_t a1)
{
  return sub_1000F7FB4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
}

uint64_t sub_1001A42F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1001A4340()
{
  sub_1001C0340();
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F)
    {
      swift_checkMetadataState();
      if (v2 <= 0x3F)
      {
        swift_checkMetadataState();
        if (v3 <= 0x3F)
        {
          swift_checkMetadataState();
          if (v4 <= 0x3F)
          {
            swift_checkMetadataState();
            if (v5 <= 0x3F)
            {
              sub_1001BF950();
              if (v6 <= 0x3F)
              {
                sub_1000101F4();
                if (v7 <= 0x3F)
                {
                  sub_1001BF310();
                  if (v8 <= 0x3F) {
                    swift_initClassMetadata2();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1001A4600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v19 = swift_allocObject();
  sub_1001A9BB0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12 & 1, a13, a14, a15, a16);
  return v19;
}

uint64_t sub_1001A46CC()
{
  v1[40] = v0;
  v1[41] = *v0;
  uint64_t v2 = sub_1001BFDC0();
  v1[42] = v2;
  v1[43] = *(void *)(v2 - 8);
  v1[44] = swift_task_alloc();
  v1[45] = swift_task_alloc();
  v1[46] = swift_task_alloc();
  uint64_t v3 = sub_1001BF8D0();
  v1[47] = v3;
  v1[48] = *(void *)(v3 - 8);
  v1[49] = swift_task_alloc();
  uint64_t v4 = sub_1001BF310();
  v1[50] = v4;
  v1[51] = *(void *)(v4 - 8);
  v1[52] = swift_task_alloc();
  v1[53] = swift_task_alloc();
  v1[54] = swift_task_alloc();
  v1[55] = swift_task_alloc();
  uint64_t v5 = sub_100003918(&qword_10020C5E0);
  v1[56] = v5;
  v1[57] = *(void *)(v5 - 8);
  v1[58] = swift_task_alloc();
  v1[59] = swift_task_alloc();
  uint64_t v6 = sub_1001C0820();
  v1[60] = v6;
  v1[61] = *(void *)(v6 - 8);
  v1[62] = swift_task_alloc();
  v1[63] = swift_task_alloc();
  uint64_t v7 = sub_1001C03B0();
  v1[64] = v7;
  v1[65] = *(void *)(v7 - 8);
  v1[66] = swift_task_alloc();
  uint64_t v8 = sub_1001BF2C0();
  v1[67] = v8;
  v1[68] = *(void *)(v8 - 8);
  v1[69] = swift_task_alloc();
  v1[70] = swift_task_alloc();
  v1[71] = swift_task_alloc();
  v1[72] = swift_task_alloc();
  uint64_t v9 = sub_100003918(&qword_10020C350);
  v1[73] = v9;
  v1[74] = *(void *)(v9 - 8);
  v1[75] = swift_task_alloc();
  uint64_t v10 = sub_100003918(&qword_10020BFB8);
  v1[76] = v10;
  v1[77] = *(void *)(v10 - 8);
  v1[78] = swift_task_alloc();
  sub_1001C0C30();
  v1[79] = swift_task_alloc();
  sub_100003918(&qword_100208C60);
  v1[80] = swift_task_alloc();
  uint64_t v11 = sub_1001BF950();
  v1[81] = v11;
  v1[82] = *(void *)(v11 - 8);
  v1[83] = swift_task_alloc();
  return _swift_task_switch(sub_1001A4BE4, 0, 0);
}

uint64_t sub_1001A4BE4()
{
  uint64_t v238 = v0;
  *(void *)(v0 + 672) = *(void *)(**(void **)(v0 + 320) + 280);
  *(void *)(v0 + 680) = sub_1001B4F10(qword_100207DC0, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v236 = sub_1001C1780();
  unint64_t v237 = v1;
  v243._uint64_t countAndFlagsBits = 58;
  v243._object = (void *)0xE100000000000000;
  sub_1001C0D00(v243);
  uint64_t v3 = v236;
  unint64_t v2 = v237;
  *(void *)(v0 + 688) = v236;
  *(void *)(v0 + 696) = v2;
  *(void *)(v0 + 704) = qword_10020F458;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v4 = sub_1001C0330();
  os_log_type_t v5 = sub_1001C1200();
  uint64_t v228 = (void *)(v0 + 320);
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v233 = v3;
    uint64_t v6 = *(void *)(v0 + 320);
    uint64_t v7 = swift_slowAlloc();
    uint64_t v236 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 312) = sub_1000DF238(v233, v2, &v236);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 12) = 1024;
    int v8 = *(unsigned __int8 *)(v6 + *(void *)(*(void *)v6 + 248));
    swift_release();
    *(_DWORD *)(v0 + 904) = v8;
    sub_1001C1310();
    uint64_t v3 = v233;
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s executing batch of prefetch requests, prewarm=%{BOOL}d", (uint8_t *)v7, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();

    swift_bridgeObjectRelease_n();
  }
  uint64_t v9 = *(void *)(v0 + 656);
  uint64_t v10 = *(void *)(v0 + 648);
  uint64_t v11 = *(void *)(v0 + 640);
  sub_1000238F4(v11);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v11, 1, v10) == 1)
  {
    sub_100010360(*(void *)(v0 + 640), &qword_100208C60);
    swift_bridgeObjectRetain_n();
    uint64_t v12 = sub_1001C0330();
    os_log_type_t v13 = sub_1001C11F0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v236 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 144) = sub_1000DF238(v3, v2, &v236);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "%s invalid set of parameters for prefetching", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1001B4730(*(void *)(v0 + 320), *(void *)(v0 + 688), *(void *)(v0 + 696), "%s finished batch of prefetch requests");
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = *(uint64_t (**)(void *))(v0 + 8);
    return v18(_swiftEmptyArrayStorage);
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 656) + 32))(*(void *)(v0 + 664), *(void *)(v0 + 640), *(void *)(v0 + 648));
  *(void *)(v0 + 128) = sub_1001BF940();
  sub_100003918(&qword_100208930);
  sub_10015DB68();
  *(void *)(v0 + 712) = sub_1001BEDF0();
  *(void *)(v0 + 720) = v15;
  v234 = (void (*)(uint64_t, uint64_t, uint64_t))v3;
  uint64_t v19 = *(void *)(v0 + 624);
  uint64_t v20 = *(void *)(v0 + 616);
  *(void *)typeb = *(void *)(v0 + 608);
  uint64_t v21 = *(void *)(v0 + 320);
  swift_bridgeObjectRelease();
  sub_1001C0C20();
  uint64_t v22 = sub_1001C0C10();
  *(void *)(v0 + 728) = v23;
  *(void *)(v0 + 736) = v22;
  uint64_t v24 = *(void *)(*(void *)v21 + 208);
  *(void *)(v0 + 744) = v24;
  Swift::String v25 = (void *)(v21 + v24);
  sub_10000D934((void *)(v21 + v24), *(void *)(v21 + v24 + 24));
  sub_1001BFA30();
  sub_1001BF8F0();
  uint64_t v26 = *(void (**)(uint64_t, void))(v20 + 8);
  v26(v19, *(void *)typeb);
  uint64_t v27 = *(void *)(v0 + 120);
  uint64_t v28 = *(NSObject **)(v21 + *(void *)(*(void *)v21 + 216));
  uint64_t v29 = TC2ServerDrivenConfiguration.maxPrefetchedAttestations.getter();
  if (v30) {
    uint64_t v31 = v27;
  }
  else {
    uint64_t v31 = v29;
  }
  if (v27 < v31) {
    uint64_t v31 = v27;
  }
  if (v31 <= 1) {
    uint64_t v32 = 1;
  }
  else {
    uint64_t v32 = v31;
  }
  *(void *)(v0 + 752) = v32;
  uint64_t v33 = TC2ServerDrivenConfiguration.maxPrefetchBatches.getter();
  unint64_t v216 = v25;
  os_log_t log = v28;
  if (v34)
  {
    uint64_t v35 = *(void *)(v0 + 624);
    *(void *)os_log_type_t typec = *(void *)(v0 + 608);
    sub_10000D934(v25, v25[3]);
    sub_1001BF9B0();
    sub_1001BF8F0();
    v26(v35, *(void *)typec);
    uint64_t v33 = *(void *)(v0 + 112);
  }
  uint64_t v36 = *(void *)(v0 + 320);
  if (v33 <= 1) {
    uint64_t v37 = 1;
  }
  else {
    uint64_t v37 = v33;
  }
  *(void *)(v0 + 760) = v37;
  uint64_t v38 = v36 + *(void *)(*(void *)v36 + 272);
  unint64_t v39 = *(void *)v38;
  *(void *)(v0 + 768) = *(void *)v38;
  int v40 = *(unsigned __int8 *)(v38 + 8);
  *(unsigned char *)(v0 + 912) = v40;
  if (v40) {
    unint64_t v41 = v37 - 1;
  }
  else {
    unint64_t v41 = v39;
  }
  if (v40) {
    unint64_t v42 = 0;
  }
  else {
    unint64_t v42 = v39;
  }
  *(void *)os_log_type_t type = v42;
  uint64_t v43 = 3 * v32;
  if ((unsigned __int128)(v32 * (__int128)3) >> 64 != (3 * v32) >> 63)
  {
    __break(1u);
    goto LABEL_118;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v44 = sub_1001C0330();
  int v45 = sub_1001C1200();
  if (!os_log_type_enabled(v44, (os_log_type_t)v45))
  {

    swift_bridgeObjectRelease_n();
    uint64_t v49 = v216;
    if (!v40) {
      goto LABEL_58;
    }
    goto LABEL_40;
  }
  os_log_type_t v214 = v44;
  LODWORD(v213) = v45;
  uint64_t v46 = swift_slowAlloc();
  uint64_t v236 = swift_slowAlloc();
  *(_DWORD *)uint64_t v46 = 136316418;
  swift_bridgeObjectRetain();
  *(void *)(v0 + 264) = sub_1000DF238((uint64_t)v234, v2, &v236);
  sub_1001C1310();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v46 + 12) = 2048;
  *(void *)(v0 + 272) = v32;
  sub_1001C1310();
  *(_WORD *)(v46 + 22) = 2048;
  if (*(void *)type <= v41)
  {
    uint64_t v47 = v37 - 1;
    if (v40) {
      uint64_t v48 = v37 - 1;
    }
    else {
      uint64_t v48 = 0;
    }
  }
  else
  {
    uint64_t v47 = v37 - 1;
    if ((uint64_t)(*(void *)type - v41) < 0)
    {
      __break(1u);
      goto LABEL_121;
    }
    uint64_t v48 = v41 - *(void *)type;
  }
  uint64_t v51 = v48 + 1;
  uint64_t v52 = v32 * (v48 + 1);
  if ((unsigned __int128)(v32 * (__int128)v51) >> 64 != v52 >> 63)
  {
LABEL_118:
    __break(1u);
LABEL_119:
    swift_once();
LABEL_59:
    uint64_t v68 = *(void *)(v0 + 504);
    uint64_t v69 = *(void *)(v0 + 480);
    uint64_t v70 = *(void *)(v0 + 488);
    uint64_t v72 = *(void *)(v0 + 320);
    uint64_t v71 = *(void *)(v0 + 328);
    uint64_t v73 = sub_10000D978(v69, (uint64_t)qword_10021FF50);
    uint64_t v74 = *(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 16);
    *(void *)(v0 + 800) = v74;
    *(void *)(v0 + 808) = (v70 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v74(v68, v73, v69);
    *(void *)(v0 + 816) = *(void *)(*(void *)v72 + 224);
    uint64_t v75 = *(void *)(v71 + 152);
    *(void *)(v0 + 824) = v75;
    os_log_type_t v76 = *(void (**)(void))(v75 + 88);
    uint64_t v77 = *(void *)(v71 + 112);
    *(void *)(v0 + 832) = v77;
    uint64_t v213 = v77;
    os_log_type_t v214 = v75;
    v76();
    sub_1001C0840();
    if (qword_1002079A0 != -1) {
      swift_once();
    }
    uint64_t v78 = *(void *)(v0 + 504);
    uint64_t v79 = *(void *)(v0 + 480);
    uint64_t v80 = sub_10000D978(v79, (uint64_t)qword_10021FF68);
    v74(v78, v80, v79);
    sub_1001BF930();
    sub_1001C0840();
    if (qword_1002079A8 != -1) {
      swift_once();
    }
    uint64_t v81 = *(void *)(v0 + 504);
    uint64_t v82 = *(void *)(v0 + 480);
    unint64_t v219 = *(uint64_t **)(v0 + 320);
    uint64_t v83 = sub_10000D978(v82, (uint64_t)qword_10021FF80);
    v234 = v74;
    v74(v81, v83, v82);
    swift_bridgeObjectRetain();
    sub_1001C0840();
    sub_1001C07E0();
    sub_1001C0840();
    sub_1001C0810();
    sub_1001C0840();
    *(void *)(v0 + 104) = log;
    sub_1001B4F10(&qword_10020C078, (void (*)(uint64_t))&type metadata accessor for HTTPFields);
    sub_1001C1190();
    sub_100003918(&qword_10020C080);
    sub_1001B4CD0();
    sub_1001C1160();
    uint64_t v84 = *v219;
    if (*((unsigned char *)v219 + *(void *)(*v219 + 248)) == 1)
    {
      if (*(void *)(*v228 + *(void *)(v84 + 256) + 8))
      {
        if (*(void *)(*v228 + *(void *)(v84 + 264) + 8))
        {
          uint64_t v85 = qword_1002079C0;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v85 != -1) {
            swift_once();
          }
          uint64_t v86 = *(void *)(v0 + 504);
          uint64_t v87 = *(void *)(v0 + 480);
          uint64_t v88 = sub_10000D978(v87, (uint64_t)qword_10021FFC8);
          v74(v86, v88, v87);
          sub_1001C03D0();
          if (qword_1002079B8 != -1) {
            swift_once();
          }
          uint64_t v89 = *(void *)(v0 + 504);
          uint64_t v90 = *(void *)(v0 + 480);
          uint64_t v91 = sub_10000D978(v90, (uint64_t)qword_10021FFB0);
          v74(v89, v91, v90);
LABEL_79:
          sub_1001C03D0();
          ((void (*)(uint64_t))v214[10].isa)(v213);
          if (v106)
          {
            if (qword_1002079D0 != -1) {
              swift_once();
            }
            uint64_t v107 = *(void *)(v0 + 504);
            uint64_t v108 = *(void *)(v0 + 480);
            uint64_t v109 = sub_10000D978(v108, (uint64_t)qword_10021FFF8);
            v74(v107, v109, v108);
            sub_1001C03D0();
          }
          uint64_t v110 = *(void *)(v0 + 472);
          uint64_t v112 = *(void *)(v0 + 448);
          uint64_t v111 = *(void *)(v0 + 456);
          uint64_t v113 = (void *)(*(void *)(v0 + 320) + *(void *)(v0 + 744));
          sub_10000D934(v113, v113[3]);
          sub_100003918(&qword_100207DB8);
          sub_1001BF970();
          sub_1000B9CCC();
          sub_1001BF8F0();
          uint64_t v114 = *(void (**)(uint64_t, uint64_t))(v111 + 8);
          v114(v110, v112);
          if (*(void *)(v0 + 96))
          {
            if (qword_1002079E0 != -1) {
              swift_once();
            }
            uint64_t v115 = *(void *)(v0 + 504);
            uint64_t v116 = *(void *)(v0 + 480);
            uint64_t v117 = sub_10000D978(v116, (uint64_t)qword_100220028);
            v234(v115, v117, v116);
            sub_1001C03D0();
          }
          uint64_t typea = (uint64_t *)(v0 + 16);
          uint64_t v118 = *(void *)(v0 + 464);
          uint64_t v119 = *(void *)(v0 + 448);
          uint64_t v120 = (void *)(*(void *)(v0 + 320) + *(void *)(v0 + 744));
          sub_10000D934(v120, v120[3]);
          sub_1001BF990();
          sub_1001BF8F0();
          v114(v118, v119);
          if (*(void *)(v0 + 80))
          {
            if (qword_1002079E8 != -1) {
              swift_once();
            }
            uint64_t v121 = *(void *)(v0 + 504);
            uint64_t v122 = *(void *)(v0 + 480);
            uint64_t v123 = sub_10000D978(v122, (uint64_t)qword_100220040);
            v234(v121, v123, v122);
            sub_1001C03D0();
            if (qword_1002079F0 != -1) {
              swift_once();
            }
            uint64_t v124 = *(void *)(v0 + 504);
            uint64_t v125 = *(void *)(v0 + 480);
            uint64_t v126 = sub_10000D978(v125, (uint64_t)qword_100220058);
            v234(v124, v126, v125);
            sub_1001C03D0();
          }
          uint64_t v127 = (unsigned char *)(v0 + 912);
          uint64_t v128 = *(void *)(v0 + 560);
          uint64_t v129 = *(void *)(v0 + 552);
          uint64_t v130 = *(void *)(v0 + 544);
          uint64_t v131 = *(void *)(v0 + 536);
          sub_1001BF2B0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v130 + 16))(v129, v128, v131);
          swift_bridgeObjectRetain_n();
          uint64_t v132 = sub_1001C0330();
          os_log_type_t v133 = sub_1001C1200();
          BOOL v134 = os_log_type_enabled(v132, v133);
          unint64_t v135 = *(void *)(v0 + 696);
          if (v134)
          {
            uint64_t v136 = *(void *)(v0 + 688);
            uint64_t v217 = *(void *)(v0 + 552);
            uint64_t v230 = *(void *)(v0 + 544);
            uint64_t v137 = *(void *)(v0 + 536);
            uint64_t v138 = swift_slowAlloc();
            uint64_t v236 = swift_slowAlloc();
            *(_DWORD *)uint64_t v138 = 136315394;
            swift_bridgeObjectRetain();
            *(void *)(v0 + 216) = sub_1000DF238(v136, v135, &v236);
            sub_1001C1310();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v138 + 12) = 2080;
            sub_1001B4F10(&qword_10020C558, (void (*)(uint64_t))&type metadata accessor for Date);
            uint64_t v139 = sub_1001C1780();
            *(void *)(v0 + 224) = sub_1000DF238(v139, v140, &v236);
            sub_1001C1310();
            swift_bridgeObjectRelease();
            uint64_t v141 = *(void (**)(uint64_t, uint64_t))(v230 + 8);
            v141(v217, v137);
            _os_log_impl((void *)&_mh_execute_header, v132, v133, "%s fetchTime: %s", (uint8_t *)v138, 0x16u);
            swift_arrayDestroy();
            uint64_t v127 = (unsigned char *)(v0 + 912);
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            uint64_t v142 = *(void *)(v0 + 552);
            uint64_t v143 = *(void *)(v0 + 544);
            uint64_t v144 = *(void *)(v0 + 536);

            swift_bridgeObjectRelease_n();
            uint64_t v141 = *(void (**)(uint64_t, uint64_t))(v143 + 8);
            v141(v142, v144);
          }
          *(void *)(v0 + 840) = v141;
          int v145 = enum case for TC2Environment.production(_:);
          *(_DWORD *)(v0 + 908) = enum case for TC2Environment.production(_:);
          if (*v127) {
            uint64_t v146 = 0;
          }
          else {
            uint64_t v146 = *(void *)(v0 + 768);
          }
          *(void *)(v0 + 856) = _swiftEmptyArrayStorage;
          *(void *)(v0 + 848) = v146;
          uint64_t v147 = *(void *)(v0 + 832);
          uint64_t v215 = *(void *)(v0 + 824);
          uint64_t v148 = *(void *)(v0 + 392);
          uint64_t v149 = *(void *)(v0 + 320);
          uint64_t v218 = v149 + *(void *)(v0 + 816);
          long long v150 = (void *)(v149 + *(void *)(v0 + 744));
          uint64_t v151 = *(void *)(v0 + 384);
          uint64_t v231 = *(void *)(v0 + 376);
          *(void *)(v0 + 56) = sub_1001C1780();
          *(void *)(v0 + 64) = v152;
          v244._uint64_t countAndFlagsBits = 35;
          v244._object = (void *)0xE100000000000000;
          sub_1001C0D00(v244);
          uint64_t v235 = v146;
          *(void *)(v0 + 136) = v146;
          v245._uint64_t countAndFlagsBits = sub_1001C1780();
          sub_1001C0D00(v245);
          swift_bridgeObjectRelease();
          v246._uint64_t countAndFlagsBits = 58;
          v246._object = (void *)0xE100000000000000;
          sub_1001C0D00(v246);
          unint64_t v153 = *(void *)(v0 + 64);
          os_log_t loga = *(os_log_t *)(v0 + 56);
          *(void *)(v0 + 864) = loga;
          *(void *)(v0 + 872) = v153;
          sub_1001BF300();
          uint64_t v154 = (void (*)(char *, uint64_t, uint64_t))v150[3];
          uint64_t v155 = v150[4];
          sub_10000D934(v150, (uint64_t)v154);
          *(void *)(v0 + 40) = v147;
          *(void *)(v0 + 48) = v215;
          uint64_t v156 = sub_10000395C(typea);
          (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v147 - 8) + 16))(v156, v218, v147);
          TC2Configuration.environment(systemInfo:)((uint64_t)typea, v154, v155, v148);
          sub_100003E90((uint64_t)typea);
          if ((*(unsigned int (**)(uint64_t, uint64_t))(v151 + 88))(v148, v231) == v145)
          {
            uint64_t v157 = *(void *)(v0 + 432);
            uint64_t v158 = *(void *)(v0 + 440);
            uint64_t v160 = *(void *)(v0 + 416);
            uint64_t v159 = *(void *)(v0 + 424);
            uint64_t v162 = *(void *)(v0 + 400);
            uint64_t v161 = *(void *)(v0 + 408);
            sub_1001BF300();
            uint64_t v163 = *(void (**)(uint64_t, uint64_t, uint64_t))(v161 + 16);
            v163(v159, v158, v162);
            v163(v160, v157, v162);
            swift_bridgeObjectRetain_n();
            uint64_t v164 = sub_1001C0330();
            os_log_type_t v165 = sub_1001C1200();
            if (os_log_type_enabled(v164, v165))
            {
              os_log_type_t typed = v165;
              uint64_t v166 = *(void *)(v0 + 424);
              uint64_t v220 = *(void *)(v0 + 416);
              uint64_t v167 = *(void *)(v0 + 400);
              uint64_t v168 = *(void *)(v0 + 408);
              uint64_t v169 = swift_slowAlloc();
              uint64_t v236 = swift_slowAlloc();
              *(_DWORD *)uint64_t v169 = 136315650;
              swift_bridgeObjectRetain();
              *(void *)(v0 + 192) = sub_1000DF238((uint64_t)loga, v153, &v236);
              sub_1001C1310();
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v169 + 12) = 2080;
              uint64_t v170 = sub_1001C1780();
              *(void *)(v0 + 200) = sub_1000DF238(v170, v171, &v236);
              sub_1001C1310();
              swift_bridgeObjectRelease();
              uint64_t v172 = *(void (**)(uint64_t, uint64_t))(v168 + 8);
              v172(v166, v167);
              *(_WORD *)(v169 + 22) = 2080;
              uint64_t v173 = sub_1001C1780();
              *(void *)(v0 + 208) = sub_1000DF238(v173, v174, &v236);
              sub_1001C1310();
              swift_bridgeObjectRelease();
              v172(v220, v167);
              _os_log_impl((void *)&_mh_execute_header, v164, typed, "%s Request: %s RequestIDForReporting: %s", (uint8_t *)v169, 0x20u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
              uint64_t v178 = *(void *)(v0 + 416);
              uint64_t v179 = *(void *)(v0 + 424);
              uint64_t v180 = *(void *)(v0 + 400);
              uint64_t v181 = *(void *)(v0 + 408);

              swift_bridgeObjectRelease_n();
              uint64_t v182 = *(void (**)(uint64_t, uint64_t))(v181 + 8);
              v182(v179, v180);
              v182(v178, v180);
            }
          }
          else
          {
            uint64_t v176 = *(void *)(v0 + 384);
            uint64_t v175 = *(void *)(v0 + 392);
            uint64_t v177 = *(void *)(v0 + 376);
            (*(void (**)(void, void, void))(*(void *)(v0 + 408) + 16))(*(void *)(v0 + 432), *(void *)(v0 + 440), *(void *)(v0 + 400));
            (*(void (**)(uint64_t, uint64_t))(v176 + 8))(v175, v177);
          }
          if (qword_100207990 != -1) {
            swift_once();
          }
          uint64_t v183 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 800);
          uint64_t v232 = *(void *)(v0 + 736);
          unint64_t v184 = *(void *)(v0 + 728);
          uint64_t v185 = *(void *)(v0 + 672);
          uint64_t v186 = *(void *)(v0 + 504);
          uint64_t v187 = *(void *)(v0 + 480);
          uint64_t v188 = *(void *)(v0 + 320);
          uint64_t v189 = sub_10000D978(v187, (uint64_t)qword_10021FF38);
          v183(v186, v189, v187);
          sub_1001BF2D0();
          sub_1001C03D0();
          uint64_t v190 = (void *)swift_task_alloc();
          *(void *)(v0 + 880) = v190;
          *uint64_t v190 = v0;
          v190[1] = sub_1001A8A6C;
          uint64_t v191 = v232;
          if (!v184) {
            uint64_t v191 = 0;
          }
          unint64_t v192 = 0xE000000000000000;
          if (v184) {
            unint64_t v192 = v184;
          }
          uint64_t v193 = *(void *)(v0 + 752);
          uint64_t v194 = *(void *)(v0 + 664);
          uint64_t v195 = *(void *)(v0 + 560);
          uint64_t v196 = *(void *)(v0 + 528);
          uint64_t v198 = *(void *)(v0 + 432);
          uint64_t v197 = *(void *)(v0 + 440);
          uint64_t v199 = *(void *)(v0 + 360);
          unint64_t v241 = v192;
          uint64_t v242 = v193;
          uint64_t v240 = v191;
          return sub_1001AA0E0(v199, v188 + v185, v197, v198, v235, v195, v196, v194);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain_n();
        uint64_t v97 = sub_1001C0330();
        os_log_type_t v200 = sub_1001C11F0();
        BOOL v201 = os_log_type_enabled(v97, v200);
        unint64_t v202 = *(void *)(v0 + 696);
        if (v201)
        {
          uint64_t v203 = *(void *)(v0 + 688);
          uint64_t v204 = (uint8_t *)swift_slowAlloc();
          uint64_t v236 = swift_slowAlloc();
          *(_DWORD *)uint64_t v204 = 136315138;
          swift_bridgeObjectRetain();
          *(void *)(v0 + 240) = sub_1000DF238(v203, v202, &v236);
          sub_1001C1310();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v97, v200, "%s not prefetching, missing featureIdentifier", v204, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          goto LABEL_116;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain_n();
        uint64_t v97 = sub_1001C0330();
        os_log_type_t v98 = sub_1001C11F0();
        BOOL v99 = os_log_type_enabled(v97, v98);
        unint64_t v100 = *(void *)(v0 + 696);
        if (v99)
        {
          uint64_t v101 = *(void *)(v0 + 688);
          unint64_t v102 = (uint8_t *)swift_slowAlloc();
          uint64_t v236 = swift_slowAlloc();
          *(_DWORD *)unint64_t v102 = 136315138;
          swift_bridgeObjectRetain();
          *(void *)(v0 + 232) = sub_1000DF238(v101, v100, &v236);
          sub_1001C1310();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v97, v98, "%s not prefetching, missing bundleIdentifier", v102, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          goto LABEL_116;
        }
      }

      swift_bridgeObjectRelease_n();
LABEL_116:
      unint64_t v205 = *(void *)(v0 + 720);
      uint64_t v206 = *(void *)(v0 + 712);
      uint64_t v207 = *(void *)(v0 + 664);
      uint64_t v208 = *(void *)(v0 + 656);
      uint64_t v209 = *(void *)(v0 + 648);
      uint64_t v210 = *(void *)(v0 + 528);
      uint64_t v211 = *(void *)(v0 + 520);
      uint64_t v212 = *(void *)(v0 + 512);
      sub_1001BF810();
      sub_1001B4F10(&qword_10020D938, (void (*)(uint64_t))&type metadata accessor for TrustedCloudComputeError);
      swift_allocError();
      sub_1001BF800();
      swift_willThrow();
      sub_10000792C(v206, v205);
      (*(void (**)(uint64_t, uint64_t))(v211 + 8))(v210, v212);
      (*(void (**)(uint64_t, uint64_t))(v208 + 8))(v207, v209);
      sub_1001B4730(*(void *)(v0 + 320), *(void *)(v0 + 688), *(void *)(v0 + 696), "%s finished batch of prefetch requests");
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
      return v16();
    }
    if (qword_1002079C0 == -1)
    {
LABEL_72:
      uint64_t v92 = *(void *)(v0 + 496);
      uint64_t v93 = *(void *)(v0 + 480);
      uint64_t v94 = sub_10000D978(v93, (uint64_t)qword_10021FFC8);
      uint64_t v74 = v234;
      v234(v92, v94, v93);
      id v95 = [self mainBundle];
      id v96 = [v95 bundleIdentifier];

      if (v96)
      {
        sub_1001C0BF0();
      }
      sub_1001C03D0();
      if (qword_1002079B8 != -1) {
        swift_once();
      }
      uint64_t v103 = *(void *)(v0 + 504);
      uint64_t v104 = *(void *)(v0 + 480);
      uint64_t v105 = sub_10000D978(v104, (uint64_t)qword_10021FFB0);
      v234(v103, v105, v104);
      goto LABEL_79;
    }
LABEL_122:
    swift_once();
    goto LABEL_72;
  }
  *(void *)(v0 + 280) = v52;
  sub_1001C1310();
  *(_WORD *)(v46 + 32) = 2048;
  uint64_t v49 = v216;
  if (*(void *)type > v41)
  {
    uint64_t v43 = 3 * v32;
    if ((uint64_t)(*(void *)type - v41) >= 0)
    {
      uint64_t v53 = v41 - *(void *)type;
      goto LABEL_57;
    }
LABEL_121:
    __break(1u);
    goto LABEL_122;
  }
  if (v40) {
    uint64_t v53 = v47;
  }
  else {
    uint64_t v53 = 0;
  }
  uint64_t v43 = 3 * v32;
LABEL_57:
  *(void *)(v0 + 288) = v53 + 1;
  sub_1001C1310();
  *(_WORD *)(v46 + 42) = 2048;
  *(void *)(v0 + 296) = v37;
  sub_1001C1310();
  *(_WORD *)(v46 + 52) = 2048;
  *(void *)(v0 + 304) = v43;
  sub_1001C1310();
  _os_log_impl((void *)&_mh_execute_header, v44, (os_log_type_t)v213, "%s configuration: maxPrefetchedAttestations: %ld, clientCacheSize: %ld, maxPrefetchRequests: %ld, maxPrefetchBatches: %ld, prewarmAttestationsAvailability: %ld", (uint8_t *)v46, 0x3Eu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  if (!v40)
  {
LABEL_58:
    sub_100003918(&qword_10020C070);
    sub_1001C0870();
    uint64_t v67 = swift_allocObject();
    *(_OWORD *)(v67 + 16) = xmmword_1001CD7E0;
    os_log_t log = (os_log_t)v67;
    if (qword_100207998 == -1) {
      goto LABEL_59;
    }
    goto LABEL_119;
  }
LABEL_40:
  TC2ServerDrivenConfiguration.prewarmAttestationsValidityInSeconds.getter();
  if (v50)
  {
    uint64_t v54 = *(void *)(v0 + 600);
    uint64_t v55 = *(void *)(v0 + 592);
    uint64_t v56 = *(void *)(v0 + 584);
    sub_10000D934(v49, v49[3]);
    sub_1001BFAB0();
    sub_1001BF8F0();
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v54, v56);
  }
  uint64_t v57 = *(void *)(v0 + 568);
  uint64_t v58 = *(void *)(v0 + 544);
  uint64_t v59 = *(void *)(v0 + 536);
  uint64_t v60 = *(void *)(v0 + 328);
  sub_1001BF2B0();
  sub_1001BF260();
  uint64_t v61 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
  *(void *)(v0 + 776) = v61;
  *(void *)(v0 + 784) = (v58 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v61(v57, v59);
  uint64_t v62 = *(void *)(v60 + 128);
  uint64_t v63 = *(void *)(v60 + 88);
  v229 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v62 + 72)
                                                                             + **(int **)(v62 + 72));
  uint64_t v64 = (void *)swift_task_alloc();
  *(void *)(v0 + 792) = v64;
  void *v64 = v0;
  v64[1] = sub_1001A6F9C;
  uint64_t v65 = *(void *)(v0 + 664);
  uint64_t v66 = *(void *)(v0 + 576);
  return v229(v65, v43, v66, v63, v62);
}

uint64_t sub_1001A6F9C(char a1)
{
  *(unsigned char *)(*(void *)v1 + 913) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1001A709C, 0, 0);
}

uint64_t sub_1001A709C()
{
  uint64_t v180 = v0;
  if (*(unsigned char *)(v0 + 913) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    uint64_t v1 = sub_1001C0330();
    os_log_type_t v2 = sub_1001C11F0();
    BOOL v3 = os_log_type_enabled(v1, v2);
    unint64_t v4 = *(void *)(v0 + 696);
    if (v3)
    {
      uint64_t v5 = *(void *)(v0 + 688);
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v179 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 256) = sub_1000DF238(v5, v4, &v179);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s not prefetching, attestations exist for workload", v6, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    char v34 = *(void (**)(uint64_t, uint64_t))(v0 + 776);
    unint64_t v35 = *(void *)(v0 + 720);
    uint64_t v36 = *(void *)(v0 + 712);
    uint64_t v177 = *(void *)(v0 + 664);
    uint64_t v37 = *(void *)(v0 + 656);
    uint64_t v38 = *(void *)(v0 + 648);
    uint64_t v39 = *(void *)(v0 + 576);
    uint64_t v40 = *(void *)(v0 + 536);
    sub_1001BF810();
    sub_1001B4F10(&qword_10020D938, (void (*)(uint64_t))&type metadata accessor for TrustedCloudComputeError);
    swift_allocError();
    sub_1001BF800();
    swift_willThrow();
    sub_10000792C(v36, v35);
    v34(v39, v40);
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v177, v38);
    goto LABEL_67;
  }
  (*(void (**)(void, void))(v0 + 776))(*(void *)(v0 + 576), *(void *)(v0 + 536));
  sub_100003918(&qword_10020C070);
  sub_1001C0870();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1001CD7E0;
  os_log_t log = (os_log_t)v7;
  if (qword_100207998 != -1) {
    swift_once();
  }
  uint64_t v8 = *(void *)(v0 + 504);
  uint64_t v9 = *(void *)(v0 + 480);
  uint64_t v10 = *(void *)(v0 + 488);
  uint64_t v12 = *(void *)(v0 + 320);
  uint64_t v11 = *(void *)(v0 + 328);
  uint64_t v13 = sub_10000D978(v9, (uint64_t)qword_10021FF50);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  *(void *)(v0 + 800) = v14;
  *(void *)(v0 + 808) = (v10 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v14(v8, v13, v9);
  *(void *)(v0 + 816) = *(void *)(*(void *)v12 + 224);
  uint64_t v15 = *(void *)(v11 + 152);
  *(void *)(v0 + 824) = v15;
  uint64_t v16 = *(void (**)(void))(v15 + 88);
  uint64_t v17 = *(void *)(v11 + 112);
  *(void *)(v0 + 832) = v17;
  uint64_t v164 = v17;
  uint64_t v163 = v15;
  v16();
  sub_1001C0840();
  if (qword_1002079A0 != -1) {
    swift_once();
  }
  uint64_t v18 = *(void *)(v0 + 504);
  uint64_t v19 = *(void *)(v0 + 480);
  uint64_t v20 = sub_10000D978(v19, (uint64_t)qword_10021FF68);
  v14(v18, v20, v19);
  sub_1001BF930();
  sub_1001C0840();
  if (qword_1002079A8 != -1) {
    swift_once();
  }
  uint64_t v21 = *(void *)(v0 + 504);
  uint64_t v22 = *(void *)(v0 + 480);
  *(void *)os_log_type_t type = *(void *)(v0 + 320);
  uint64_t v23 = sub_10000D978(v22, (uint64_t)qword_10021FF80);
  uint64_t v176 = v14;
  v14(v21, v23, v22);
  swift_bridgeObjectRetain();
  sub_1001C0840();
  sub_1001C07E0();
  sub_1001C0840();
  sub_1001C0810();
  sub_1001C0840();
  *(void *)(v0 + 104) = log;
  sub_1001B4F10(&qword_10020C078, (void (*)(uint64_t))&type metadata accessor for HTTPFields);
  sub_1001C1190();
  sub_100003918(&qword_10020C080);
  sub_1001B4CD0();
  sub_1001C1160();
  uint64_t v24 = **(void **)type;
  if (*(unsigned char *)(*(void *)type + *(void *)(**(void **)type + 248)) != 1)
  {
    if (qword_1002079C0 != -1) {
      swift_once();
    }
    uint64_t v41 = *(void *)(v0 + 496);
    uint64_t v42 = *(void *)(v0 + 480);
    uint64_t v43 = sub_10000D978(v42, (uint64_t)qword_10021FFC8);
    v14(v41, v43, v42);
    id v44 = [self mainBundle];
    id v45 = [v44 bundleIdentifier];

    if (v45)
    {
      sub_1001C0BF0();
    }
    uint64_t v33 = v163;
    sub_1001C03D0();
    if (qword_1002079B8 != -1) {
      swift_once();
    }
    uint64_t v52 = *(void *)(v0 + 504);
    uint64_t v53 = *(void *)(v0 + 480);
    uint64_t v54 = sub_10000D978(v53, (uint64_t)qword_10021FFB0);
    v14(v52, v54, v53);
    sub_1001C03D0();
    goto LABEL_29;
  }
  uint64_t v25 = *(void *)(v0 + 320);
  if (!*(void *)(v25 + *(void *)(v24 + 256) + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    uint64_t v46 = sub_1001C0330();
    os_log_type_t v47 = sub_1001C11F0();
    BOOL v48 = os_log_type_enabled(v46, v47);
    unint64_t v49 = *(void *)(v0 + 696);
    if (v48)
    {
      uint64_t v50 = *(void *)(v0 + 688);
      uint64_t v51 = (uint8_t *)swift_slowAlloc();
      uint64_t v179 = swift_slowAlloc();
      *(_DWORD *)uint64_t v51 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 232) = sub_1000DF238(v50, v49, &v179);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "%s not prefetching, missing bundleIdentifier", v51, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

LABEL_66:
      unint64_t v154 = *(void *)(v0 + 720);
      uint64_t v155 = *(void *)(v0 + 712);
      uint64_t v156 = *(void *)(v0 + 664);
      uint64_t v157 = *(void *)(v0 + 656);
      uint64_t v158 = *(void *)(v0 + 648);
      uint64_t v159 = *(void *)(v0 + 528);
      uint64_t v160 = *(void *)(v0 + 520);
      uint64_t v161 = *(void *)(v0 + 512);
      sub_1001BF810();
      sub_1001B4F10(&qword_10020D938, (void (*)(uint64_t))&type metadata accessor for TrustedCloudComputeError);
      swift_allocError();
      sub_1001BF800();
      swift_willThrow();
      sub_10000792C(v155, v154);
      (*(void (**)(uint64_t, uint64_t))(v160 + 8))(v159, v161);
      (*(void (**)(uint64_t, uint64_t))(v157 + 8))(v156, v158);
LABEL_67:
      sub_1001B4730(*(void *)(v0 + 320), *(void *)(v0 + 688), *(void *)(v0 + 696), "%s finished batch of prefetch requests");
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v162 = *(uint64_t (**)(void))(v0 + 8);
      return v162();
    }
LABEL_65:

    swift_bridgeObjectRelease_n();
    goto LABEL_66;
  }
  if (!*(void *)(v25 + *(void *)(v24 + 264) + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    uint64_t v46 = sub_1001C0330();
    os_log_type_t v149 = sub_1001C11F0();
    BOOL v150 = os_log_type_enabled(v46, v149);
    unint64_t v151 = *(void *)(v0 + 696);
    if (v150)
    {
      uint64_t v152 = *(void *)(v0 + 688);
      unint64_t v153 = (uint8_t *)swift_slowAlloc();
      uint64_t v179 = swift_slowAlloc();
      *(_DWORD *)unint64_t v153 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 240) = sub_1000DF238(v152, v151, &v179);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v46, v149, "%s not prefetching, missing featureIdentifier", v153, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      goto LABEL_66;
    }
    goto LABEL_65;
  }
  uint64_t v26 = qword_1002079C0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v26 != -1) {
    swift_once();
  }
  uint64_t v27 = *(void *)(v0 + 504);
  uint64_t v28 = *(void *)(v0 + 480);
  uint64_t v29 = sub_10000D978(v28, (uint64_t)qword_10021FFC8);
  v14(v27, v29, v28);
  sub_1001C03D0();
  if (qword_1002079B8 != -1) {
    swift_once();
  }
  uint64_t v30 = *(void *)(v0 + 504);
  uint64_t v31 = *(void *)(v0 + 480);
  uint64_t v32 = sub_10000D978(v31, (uint64_t)qword_10021FFB0);
  v14(v30, v32, v31);
  sub_1001C03D0();
  uint64_t v33 = v163;
LABEL_29:
  (*(void (**)(uint64_t, uint64_t))(v33 + 80))(v164, v33);
  if (v55)
  {
    if (qword_1002079D0 != -1) {
      swift_once();
    }
    uint64_t v56 = *(void *)(v0 + 504);
    uint64_t v57 = *(void *)(v0 + 480);
    uint64_t v58 = sub_10000D978(v57, (uint64_t)qword_10021FFF8);
    v14(v56, v58, v57);
    sub_1001C03D0();
  }
  uint64_t v59 = *(void *)(v0 + 472);
  uint64_t v60 = *(void *)(v0 + 448);
  uint64_t v61 = *(void *)(v0 + 456);
  uint64_t v62 = (void *)(*(void *)(v0 + 320) + *(void *)(v0 + 744));
  sub_10000D934(v62, v62[3]);
  sub_100003918(&qword_100207DB8);
  sub_1001BF970();
  sub_1000B9CCC();
  sub_1001BF8F0();
  uint64_t v63 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
  v63(v59, v60);
  if (*(void *)(v0 + 96))
  {
    if (qword_1002079E0 != -1) {
      swift_once();
    }
    uint64_t v64 = *(void *)(v0 + 504);
    uint64_t v65 = *(void *)(v0 + 480);
    uint64_t v66 = sub_10000D978(v65, (uint64_t)qword_100220028);
    v176(v64, v66, v65);
    sub_1001C03D0();
  }
  unint64_t v174 = (uint64_t *)(v0 + 16);
  uint64_t v67 = *(void *)(v0 + 464);
  uint64_t v68 = *(void *)(v0 + 448);
  uint64_t v69 = (void *)(*(void *)(v0 + 320) + *(void *)(v0 + 744));
  sub_10000D934(v69, v69[3]);
  sub_1001BF990();
  sub_1001BF8F0();
  v63(v67, v68);
  if (*(void *)(v0 + 80))
  {
    if (qword_1002079E8 != -1) {
      swift_once();
    }
    uint64_t v70 = *(void *)(v0 + 504);
    uint64_t v71 = *(void *)(v0 + 480);
    uint64_t v72 = sub_10000D978(v71, (uint64_t)qword_100220040);
    v176(v70, v72, v71);
    sub_1001C03D0();
    if (qword_1002079F0 != -1) {
      swift_once();
    }
    uint64_t v73 = *(void *)(v0 + 504);
    uint64_t v74 = *(void *)(v0 + 480);
    uint64_t v75 = sub_10000D978(v74, (uint64_t)qword_100220058);
    v176(v73, v75, v74);
    sub_1001C03D0();
  }
  uint64_t v76 = *(void *)(v0 + 560);
  uint64_t v77 = *(void *)(v0 + 552);
  uint64_t v78 = *(void *)(v0 + 544);
  uint64_t v79 = *(void *)(v0 + 536);
  sub_1001BF2B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 16))(v77, v76, v79);
  swift_bridgeObjectRetain_n();
  uint64_t v80 = sub_1001C0330();
  os_log_type_t v81 = sub_1001C1200();
  BOOL v82 = os_log_type_enabled(v80, v81);
  unint64_t v83 = *(void *)(v0 + 696);
  if (v82)
  {
    uint64_t v84 = *(void *)(v0 + 688);
    uint64_t v168 = *(void *)(v0 + 552);
    uint64_t v85 = *(void *)(v0 + 544);
    uint64_t v86 = *(void *)(v0 + 536);
    uint64_t v87 = swift_slowAlloc();
    uint64_t v179 = swift_slowAlloc();
    *(_DWORD *)uint64_t v87 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 216) = sub_1000DF238(v84, v83, &v179);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v87 + 12) = 2080;
    sub_1001B4F10(&qword_10020C558, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v88 = sub_1001C1780();
    *(void *)(v0 + 224) = sub_1000DF238(v88, v89, &v179);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    uint64_t v90 = *(void (**)(uint64_t, uint64_t))(v85 + 8);
    v90(v168, v86);
    _os_log_impl((void *)&_mh_execute_header, v80, v81, "%s fetchTime: %s", (uint8_t *)v87, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v91 = *(void *)(v0 + 552);
    uint64_t v92 = *(void *)(v0 + 544);
    uint64_t v93 = *(void *)(v0 + 536);

    swift_bridgeObjectRelease_n();
    uint64_t v90 = *(void (**)(uint64_t, uint64_t))(v92 + 8);
    v90(v91, v93);
  }
  *(void *)(v0 + 840) = v90;
  int v94 = enum case for TC2Environment.production(_:);
  *(_DWORD *)(v0 + 908) = enum case for TC2Environment.production(_:);
  if (*(unsigned char *)(v0 + 912)) {
    uint64_t v95 = 0;
  }
  else {
    uint64_t v95 = *(void *)(v0 + 768);
  }
  *(void *)(v0 + 856) = _swiftEmptyArrayStorage;
  *(void *)(v0 + 848) = v95;
  uint64_t v96 = *(void *)(v0 + 832);
  uint64_t v165 = *(void *)(v0 + 824);
  uint64_t v97 = *(void *)(v0 + 392);
  uint64_t v98 = *(void *)(v0 + 320);
  uint64_t v167 = v98 + *(void *)(v0 + 816);
  BOOL v99 = (void *)(v98 + *(void *)(v0 + 744));
  uint64_t v100 = *(void *)(v0 + 384);
  uint64_t v169 = *(void *)(v0 + 376);
  *(void *)(v0 + 56) = sub_1001C1780();
  *(void *)(v0 + 64) = v101;
  v185._uint64_t countAndFlagsBits = 35;
  v185._object = (void *)0xE100000000000000;
  sub_1001C0D00(v185);
  uint64_t v178 = v95;
  *(void *)(v0 + 136) = v95;
  v186._uint64_t countAndFlagsBits = sub_1001C1780();
  sub_1001C0D00(v186);
  swift_bridgeObjectRelease();
  v187._uint64_t countAndFlagsBits = 58;
  v187._object = (void *)0xE100000000000000;
  sub_1001C0D00(v187);
  unint64_t v102 = *(void *)(v0 + 64);
  os_log_t loga = *(os_log_t *)(v0 + 56);
  *(void *)(v0 + 864) = loga;
  *(void *)(v0 + 872) = v102;
  sub_1001BF300();
  uint64_t v103 = (void (*)(char *, uint64_t, uint64_t))v99[3];
  uint64_t v104 = v99[4];
  sub_10000D934(v99, (uint64_t)v103);
  *(void *)(v0 + 40) = v96;
  *(void *)(v0 + 48) = v165;
  uint64_t v105 = sub_10000395C(v174);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v96 - 8) + 16))(v105, v167, v96);
  TC2Configuration.environment(systemInfo:)((uint64_t)v174, v103, v104, v97);
  sub_100003E90((uint64_t)v174);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v100 + 88))(v97, v169) == v94)
  {
    uint64_t v106 = *(void *)(v0 + 432);
    uint64_t v107 = *(void *)(v0 + 440);
    uint64_t v109 = *(void *)(v0 + 416);
    uint64_t v108 = *(void *)(v0 + 424);
    uint64_t v111 = *(void *)(v0 + 400);
    uint64_t v110 = *(void *)(v0 + 408);
    sub_1001BF300();
    uint64_t v112 = *(void (**)(uint64_t, uint64_t, uint64_t))(v110 + 16);
    v112(v108, v107, v111);
    v112(v109, v106, v111);
    swift_bridgeObjectRetain_n();
    uint64_t v113 = sub_1001C0330();
    os_log_type_t v114 = sub_1001C1200();
    if (os_log_type_enabled(v113, v114))
    {
      uint64_t v166 = *(void *)(v0 + 424);
      uint64_t v115 = *(void *)(v0 + 408);
      uint64_t v170 = *(void *)(v0 + 416);
      uint64_t v116 = *(void *)(v0 + 400);
      uint64_t v117 = swift_slowAlloc();
      uint64_t v179 = swift_slowAlloc();
      *(_DWORD *)uint64_t v117 = 136315650;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 192) = sub_1000DF238((uint64_t)loga, v102, &v179);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v117 + 12) = 2080;
      uint64_t v118 = sub_1001C1780();
      *(void *)(v0 + 200) = sub_1000DF238(v118, v119, &v179);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      uint64_t v120 = *(void (**)(uint64_t, uint64_t))(v115 + 8);
      v120(v166, v116);
      *(_WORD *)(v117 + 22) = 2080;
      uint64_t v121 = sub_1001C1780();
      *(void *)(v0 + 208) = sub_1000DF238(v121, v122, &v179);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      v120(v170, v116);
      _os_log_impl((void *)&_mh_execute_header, v113, v114, "%s Request: %s RequestIDForReporting: %s", (uint8_t *)v117, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v126 = *(void *)(v0 + 416);
      uint64_t v127 = *(void *)(v0 + 424);
      uint64_t v128 = *(void *)(v0 + 400);
      uint64_t v129 = *(void *)(v0 + 408);

      swift_bridgeObjectRelease_n();
      uint64_t v130 = *(void (**)(uint64_t, uint64_t))(v129 + 8);
      v130(v127, v128);
      v130(v126, v128);
    }
  }
  else
  {
    uint64_t v124 = *(void *)(v0 + 384);
    uint64_t v123 = *(void *)(v0 + 392);
    uint64_t v125 = *(void *)(v0 + 376);
    (*(void (**)(void, void, void))(*(void *)(v0 + 408) + 16))(*(void *)(v0 + 432), *(void *)(v0 + 440), *(void *)(v0 + 400));
    (*(void (**)(uint64_t, uint64_t))(v124 + 8))(v123, v125);
  }
  if (qword_100207990 != -1) {
    swift_once();
  }
  uint64_t v131 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 800);
  uint64_t v175 = *(void *)(v0 + 736);
  unint64_t v132 = *(void *)(v0 + 728);
  uint64_t v133 = *(void *)(v0 + 672);
  uint64_t v134 = *(void *)(v0 + 504);
  uint64_t v135 = *(void *)(v0 + 480);
  uint64_t v136 = *(void *)(v0 + 320);
  uint64_t v137 = sub_10000D978(v135, (uint64_t)qword_10021FF38);
  v131(v134, v137, v135);
  sub_1001BF2D0();
  sub_1001C03D0();
  uint64_t v138 = (void *)swift_task_alloc();
  *(void *)(v0 + 880) = v138;
  *uint64_t v138 = v0;
  v138[1] = sub_1001A8A6C;
  uint64_t v139 = v175;
  if (!v132) {
    uint64_t v139 = 0;
  }
  unint64_t v140 = 0xE000000000000000;
  if (v132) {
    unint64_t v140 = v132;
  }
  uint64_t v141 = *(void *)(v0 + 752);
  uint64_t v142 = *(void *)(v0 + 664);
  uint64_t v143 = *(void *)(v0 + 560);
  uint64_t v144 = *(void *)(v0 + 528);
  uint64_t v146 = *(void *)(v0 + 432);
  uint64_t v145 = *(void *)(v0 + 440);
  uint64_t v147 = *(void *)(v0 + 360);
  unint64_t v183 = v140;
  uint64_t v184 = v141;
  uint64_t v182 = v139;
  return sub_1001AA0E0(v147, v136 + v133, v145, v146, v178, v143, v144, v142);
}

uint64_t sub_1001A8A6C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 888) = a1;
  *(void *)(v3 + 896) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v4 = sub_1001A96F0;
  }
  else
  {
    unint64_t v4 = sub_1001A8BA0;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1001A8BA0()
{
  unint64_t v1 = *(void *)(v0 + 368);
  uint64_t v3 = *(void *)(v0 + 344);
  uint64_t v2 = *(void *)(v0 + 352);
  uint64_t v4 = *(void *)(v0 + 336);
  uint64_t v5 = *(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32);
  v5(v1, *(void *)(v0 + 360), v4);
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v7 = *(void *)(v0 + 856);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    unint64_t v7 = sub_1000E4560(0, *(void *)(v7 + 16) + 1, 1, *(void *)(v0 + 856));
  }
  unint64_t v9 = *(void *)(v7 + 16);
  unint64_t v8 = *(void *)(v7 + 24);
  if (v9 >= v8 >> 1) {
    unint64_t v7 = sub_1000E4560(v8 > 1, v9 + 1, 1, v7);
  }
  uint64_t v10 = *(void *)(v0 + 888);
  uint64_t v12 = *(void *)(v0 + 344);
  uint64_t v11 = *(void *)(v0 + 352);
  uint64_t v13 = *(void *)(v0 + 336);
  *(void *)(v7 + 16) = v9 + 1;
  v5(v7+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * v9, v11, v13);
  uint64_t v14 = *(void *)(sub_1001BFDB0() + 16);
  swift_bridgeObjectRelease();
  uint64_t v15 = v14 - v10;
  if (__OFSUB__(v14, v10))
  {
    __break(1u);
  }
  else
  {
    uint64_t v109 = v7;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1001C0330();
    os_log_type_t v17 = sub_1001C1200();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v93 = *(void *)(v0 + 888);
      unint64_t v18 = *(void *)(v0 + 872);
      uint64_t v19 = *(void *)(v0 + 864);
      uint64_t v102 = *(void *)(v0 + 432);
      uint64_t v104 = *(void *)(v0 + 440);
      uint64_t v20 = *(void *)(v0 + 408);
      uint64_t v97 = *(void *)(v0 + 368);
      *(void *)os_log_type_t type = *(void *)(v0 + 400);
      uint64_t v94 = *(void *)(v0 + 344);
      uint64_t v95 = *(void *)(v0 + 336);
      uint64_t v21 = swift_slowAlloc();
      uint64_t v111 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136315650;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 168) = sub_1000DF238(v19, v18, &v111);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v21 + 12) = 2048;
      *(void *)(v0 + 176) = v93;
      sub_1001C1310();
      *(_WORD *)(v21 + 22) = 2048;
      *(void *)(v0 + 184) = v15;
      sub_1001C1310();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "%s attestations saved: %ld duplicates: %ld", (uint8_t *)v21, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v97, v95);
      uint64_t v22 = *(void (**)(uint64_t, void))(v20 + 8);
      v22(v102, *(void *)type);
      v22(v104, *(void *)type);
    }
    else
    {
      uint64_t v24 = *(void *)(v0 + 432);
      uint64_t v23 = *(void *)(v0 + 440);
      uint64_t v25 = *(void *)(v0 + 400);
      uint64_t v26 = *(void *)(v0 + 408);
      uint64_t v27 = *(void *)(v0 + 368);
      uint64_t v28 = *(void *)(v0 + 336);
      uint64_t v29 = *(void *)(v0 + 344);

      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
      uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
      v30(v24, v25);
      v30(v23, v25);
    }
    uint64_t v31 = *(void *)(v0 + 848);
    if (*(unsigned char *)(v0 + 912)) {
      uint64_t v32 = *(void *)(v0 + 760) - 1;
    }
    else {
      uint64_t v32 = *(void *)(v0 + 768);
    }
    if (v31 == v32)
    {
      uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v0 + 840);
      uint64_t v108 = *(void *)(v0 + 664);
      uint64_t v34 = *(void *)(v0 + 656);
      uint64_t v105 = *(void *)(v0 + 648);
      uint64_t v35 = *(void *)(v0 + 560);
      uint64_t v36 = *(void *)(v0 + 536);
      uint64_t v37 = *(void *)(v0 + 528);
      uint64_t v38 = *(void *)(v0 + 520);
      uint64_t v39 = *(void *)(v0 + 512);
      sub_10000792C(*(void *)(v0 + 712), *(void *)(v0 + 720));
      swift_bridgeObjectRelease();
      v33(v35, v36);
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v108, v105);
      sub_1001B4730(*(void *)(v0 + 320), *(void *)(v0 + 688), *(void *)(v0 + 696), "%s finished batch of prefetch requests");
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v40 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v40(v109);
    }
    uint64_t v42 = v31 + 1;
    if (v31 != -1)
    {
      *(void *)(v0 + 856) = v109;
      *(void *)(v0 + 848) = v42;
      int v106 = *(_DWORD *)(v0 + 908);
      uint64_t v43 = *(void *)(v0 + 832);
      uint64_t v98 = *(void *)(v0 + 824);
      uint64_t v44 = *(void *)(v0 + 392);
      uint64_t v45 = *(void *)(v0 + 320);
      *(void *)uint64_t typea = v45 + *(void *)(v0 + 816);
      uint64_t v46 = (void *)(v45 + *(void *)(v0 + 744));
      uint64_t v47 = *(void *)(v0 + 384);
      uint64_t v103 = *(void *)(v0 + 376);
      *(void *)(v0 + 56) = sub_1001C1780();
      *(void *)(v0 + 64) = v48;
      v112._uint64_t countAndFlagsBits = 35;
      v112._object = (void *)0xE100000000000000;
      sub_1001C0D00(v112);
      uint64_t v109 = v42;
      *(void *)(v0 + 136) = v42;
      v113._uint64_t countAndFlagsBits = sub_1001C1780();
      sub_1001C0D00(v113);
      swift_bridgeObjectRelease();
      v114._uint64_t countAndFlagsBits = 58;
      v114._object = (void *)0xE100000000000000;
      sub_1001C0D00(v114);
      uint64_t v50 = *(void *)(v0 + 56);
      unint64_t v49 = *(void *)(v0 + 64);
      *(void *)(v0 + 864) = v50;
      *(void *)(v0 + 872) = v49;
      sub_1001BF300();
      uint64_t v52 = (void (*)(char *, uint64_t, uint64_t))v46[3];
      uint64_t v51 = v46[4];
      sub_10000D934(v46, (uint64_t)v52);
      *(void *)(v0 + 40) = v43;
      *(void *)(v0 + 48) = v98;
      uint64_t v53 = sub_10000395C((uint64_t *)(v0 + 16));
      (*(void (**)(uint64_t *, os_log_type_t *, uint64_t))(*(void *)(v43 - 8) + 16))(v53, *(os_log_type_t **)typea, v43);
      TC2Configuration.environment(systemInfo:)(v0 + 16, v52, v51, v44);
      sub_100003E90(v0 + 16);
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v47 + 88))(v44, v103) == v106)
      {
        uint64_t v107 = v50;
        uint64_t v54 = *(void *)(v0 + 432);
        uint64_t v55 = *(void *)(v0 + 440);
        uint64_t v57 = *(void *)(v0 + 416);
        uint64_t v56 = *(void *)(v0 + 424);
        uint64_t v58 = *(void *)(v0 + 400);
        uint64_t v59 = *(void *)(v0 + 408);
        sub_1001BF300();
        uint64_t v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16);
        v60(v56, v55, v58);
        v60(v57, v54, v58);
        swift_bridgeObjectRetain_n();
        uint64_t v61 = sub_1001C0330();
        os_log_type_t v62 = sub_1001C1200();
        if (os_log_type_enabled(v61, v62))
        {
          os_log_type_t typeb = v62;
          uint64_t v63 = *(void *)(v0 + 424);
          uint64_t v96 = *(void *)(v0 + 416);
          uint64_t v65 = *(void *)(v0 + 400);
          uint64_t v64 = *(void *)(v0 + 408);
          uint64_t v66 = swift_slowAlloc();
          uint64_t v111 = swift_slowAlloc();
          *(_DWORD *)uint64_t v66 = 136315650;
          swift_bridgeObjectRetain();
          *(void *)(v0 + 192) = sub_1000DF238(v107, v49, &v111);
          sub_1001C1310();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v66 + 12) = 2080;
          uint64_t v67 = sub_1001C1780();
          *(void *)(v0 + 200) = sub_1000DF238(v67, v68, &v111);
          sub_1001C1310();
          swift_bridgeObjectRelease();
          uint64_t v69 = *(void (**)(uint64_t, uint64_t))(v64 + 8);
          v69(v63, v65);
          *(_WORD *)(v66 + 22) = 2080;
          uint64_t v70 = sub_1001C1780();
          *(void *)(v0 + 208) = sub_1000DF238(v70, v71, &v111);
          sub_1001C1310();
          swift_bridgeObjectRelease();
          v69(v96, v65);
          _os_log_impl((void *)&_mh_execute_header, v61, typeb, "%s Request: %s RequestIDForReporting: %s", (uint8_t *)v66, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          uint64_t v75 = *(void *)(v0 + 416);
          uint64_t v76 = *(void *)(v0 + 424);
          uint64_t v77 = *(void *)(v0 + 400);
          uint64_t v78 = *(void *)(v0 + 408);

          swift_bridgeObjectRelease_n();
          uint64_t v79 = *(void (**)(uint64_t, uint64_t))(v78 + 8);
          v79(v76, v77);
          v79(v75, v77);
        }
      }
      else
      {
        uint64_t v73 = *(void *)(v0 + 384);
        uint64_t v72 = *(void *)(v0 + 392);
        uint64_t v74 = *(void *)(v0 + 376);
        (*(void (**)(void, void, void))(*(void *)(v0 + 408) + 16))(*(void *)(v0 + 432), *(void *)(v0 + 440), *(void *)(v0 + 400));
        (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v72, v74);
      }
      if (qword_100207990 == -1) {
        goto LABEL_23;
      }
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_28:
  swift_once();
LABEL_23:
  uint64_t v80 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 800);
  uint64_t v81 = *(void *)(v0 + 672);
  uint64_t v82 = *(void *)(v0 + 504);
  uint64_t v83 = *(void *)(v0 + 480);
  uint64_t v84 = *(void *)(v0 + 320);
  uint64_t v85 = sub_10000D978(v83, (uint64_t)qword_10021FF38);
  v80(v82, v85, v83);
  sub_1001BF2D0();
  sub_1001C03D0();
  uint64_t v86 = (void *)swift_task_alloc();
  *(void *)(v0 + 880) = v86;
  *uint64_t v86 = v0;
  v86[1] = sub_1001A8A6C;
  uint64_t v87 = *(void *)(v0 + 664);
  uint64_t v88 = *(void *)(v0 + 560);
  uint64_t v89 = *(void *)(v0 + 528);
  uint64_t v91 = *(void *)(v0 + 432);
  uint64_t v90 = *(void *)(v0 + 440);
  uint64_t v92 = *(void *)(v0 + 360);
  return sub_1001AA0E0(v92, v84 + v81, v90, v91, v109, v88, v89, v87);
}

uint64_t sub_1001A96F0()
{
  uint64_t v27 = v0;
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  unint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C11F0();
  if (os_log_type_enabled(v1, v2))
  {
    unint64_t v3 = v0[109];
    uint64_t v4 = v0[108];
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    swift_bridgeObjectRetain();
    v0[19] = sub_1000DF238(v4, v3, &v26);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v5 + 12) = 2112;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[20] = v7;
    sub_1001C1310();
    *uint64_t v6 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s failed to fetch batch error: %@", (uint8_t *)v5, 0x16u);
    sub_100003918(&qword_100207DA8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v23 = (void (*)(uint64_t, uint64_t))v0[105];
  unint64_t v8 = v0[90];
  uint64_t v9 = v0[89];
  uint64_t v25 = v0[83];
  uint64_t v10 = v0[82];
  uint64_t v24 = v0[81];
  uint64_t v19 = v0[67];
  uint64_t v20 = v0[70];
  uint64_t v11 = v0[65];
  uint64_t v21 = v0[64];
  uint64_t v22 = v0[66];
  uint64_t v13 = v0[54];
  uint64_t v12 = v0[55];
  uint64_t v15 = v0[50];
  uint64_t v14 = v0[51];
  swift_willThrow();
  sub_10000792C(v9, v8);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v16(v13, v15);
  v16(v12, v15);
  v23(v20, v19);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v22, v21);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v25, v24);
  sub_1001B4730(v0[40], v0[86], v0[87], "%s finished batch of prefetch requests");
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

BOOL sub_1001A9B74(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 8) == 1) {
    return (*(unsigned char *)(a2 + 8) & 1) != 0;
  }
  if (*(unsigned char *)(a2 + 8)) {
    return 0;
  }
  return *(void *)a1 == *(void *)a2;
}

char *sub_1001A9BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, uint64_t a11, unsigned __int8 a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  os_log_type_t v17 = v16;
  uint64_t v44 = a7;
  uint64_t v45 = a8;
  uint64_t v42 = a5;
  uint64_t v43 = a6;
  uint64_t v41 = a4;
  int v53 = a12;
  uint64_t v51 = a16;
  uint64_t v52 = a11;
  uint64_t v49 = a14;
  uint64_t v50 = a15;
  uint64_t v48 = a13;
  int v47 = a10;
  uint64_t v46 = a9;
  uint64_t v21 = *(void **)v16;
  uint64_t v22 = sub_1001BF8E0();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v24);
  uint64_t v26 = (char *)&v41 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1001BEDD0();
  __chkstk_darwin(v27 - 8, v28);
  sub_1001BEE10();
  swift_allocObject();
  uint64_t v29 = sub_1001BEE00();
  sub_1001BEDB0();
  sub_1001BEDE0();
  *((void *)v17 + 2) = v29;
  (*(void (**)(char *, void, uint64_t))(v23 + 104))(v26, enum case for TC2LogCategory.prefetchRequest(_:), v22);
  sub_1001BFDD0();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v22);
  sub_1001BF300();
  (*(void (**)(char *, uint64_t))(*(void *)(v21[10] - 8) + 32))(&v17[*(void *)(*(void *)v17 + 176)], a1);
  (*(void (**)(char *, uint64_t))(*(void *)(v21[11] - 8) + 32))(&v17[*(void *)(*(void *)v17 + 184)], a2);
  (*(void (**)(char *, uint64_t))(*(void *)(v21[12] - 8) + 32))(&v17[*(void *)(*(void *)v17 + 192)], a3);
  (*(void (**)(char *, uint64_t))(*(void *)(v21[13] - 8) + 32))(&v17[*(void *)(*(void *)v17 + 200)], v41);
  sub_10000E720(v42, (uint64_t)&v17[*(void *)(*(void *)v17 + 208)]);
  uint64_t v30 = v44;
  *(void *)&v17[*(void *)(*(void *)v17 + 216)] = v43;
  (*(void (**)(char *, uint64_t))(*(void *)(v21[14] - 8) + 32))(&v17[*(void *)(*(void *)v17 + 224)], v30);
  uint64_t v31 = &v17[*(void *)(*(void *)v17 + 232)];
  uint64_t v32 = sub_1001BF950();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 32))(v31, v45, v32);
  uint64_t v33 = &v17[*(void *)(*(void *)v17 + 240)];
  uint64_t v34 = sub_100003918(qword_100208000);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v33, v46, v34);
  v17[*(void *)(*(void *)v17 + 248)] = v47;
  uint64_t v35 = &v17[*(void *)(*(void *)v17 + 256)];
  uint64_t v36 = v49;
  *(void *)uint64_t v35 = v48;
  *((void *)v35 + 1) = v36;
  uint64_t v37 = &v17[*(void *)(*(void *)v17 + 264)];
  uint64_t v38 = v51;
  *(void *)uint64_t v37 = v50;
  *((void *)v37 + 1) = v38;
  uint64_t v39 = &v17[*(void *)(*(void *)v17 + 272)];
  *(void *)uint64_t v39 = v52;
  v39[8] = v53 & 1;
  return v17;
}

uint64_t sub_1001AA0E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v9 + 144) = v18;
  *(void *)(v9 + 152) = v8;
  *(_OWORD *)(v9 + 128) = v17;
  *(void *)(v9 + 112) = a7;
  *(void *)(v9 + 120) = a8;
  *(void *)(v9 + 96) = a5;
  *(void *)(v9 + 104) = a6;
  *(void *)(v9 + 80) = a3;
  *(void *)(v9 + 88) = a4;
  *(void *)(v9 + 72) = a1;
  *(void *)(v9 + 160) = *v8;
  uint64_t v10 = sub_1001C0420();
  *(void *)(v9 + 168) = v10;
  *(void *)(v9 + 176) = *(void *)(v10 - 8);
  *(void *)(v9 + 184) = swift_task_alloc();
  uint64_t v11 = sub_100003918(&qword_10020C028);
  *(void *)(v9 + 192) = v11;
  *(void *)(v9 + 200) = *(void *)(v11 - 8);
  *(void *)(v9 + 208) = swift_task_alloc();
  uint64_t v12 = sub_1001BF8D0();
  *(void *)(v9 + 216) = v12;
  *(void *)(v9 + 224) = *(void *)(v12 - 8);
  *(void *)(v9 + 232) = swift_task_alloc();
  uint64_t v13 = sub_1001BF310();
  *(void *)(v9 + 240) = v13;
  *(void *)(v9 + 248) = *(void *)(v13 - 8);
  *(void *)(v9 + 256) = swift_task_alloc();
  uint64_t v14 = sub_1001BFDC0();
  *(void *)(v9 + 264) = v14;
  *(void *)(v9 + 272) = *(void *)(v14 - 8);
  *(void *)(v9 + 280) = swift_task_alloc();
  return _swift_task_switch(sub_1001AA35C, 0, 0);
}

void sub_1001AA35C()
{
  *(void *)(v0 + 56) = 0;
  (*(void (**)(void, void, void))(*(void *)(v0 + 248) + 16))(*(void *)(v0 + 256), *(void *)(v0 + 80), *(void *)(v0 + 240));
  sub_1001BFD30();
  sub_1001B4F10(qword_100207DC0, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v42 = sub_1001C1780();
  unint64_t v43 = v1;
  v49._uint64_t countAndFlagsBits = 58;
  v49._object = (void *)0xE100000000000000;
  sub_1001C0D00(v49);
  uint64_t v2 = v42;
  unint64_t v3 = v43;
  *(void *)(v0 + 288) = v42;
  *(void *)(v0 + 296) = v3;
  uint64_t v48 = v0 + 56;
  swift_bridgeObjectRetain_n();
  uint64_t v4 = sub_1001C0330();
  os_log_type_t v5 = sub_1001C1200();
  unint64_t v40 = v3;
  uint64_t v38 = v2;
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 64) = sub_1000DF238(v2, v3, &v42);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s executing prefetch request", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v39 = *(void *)(v0 + 280);
  uint64_t v25 = *(void *)(v0 + 232);
  uint64_t v8 = *(void *)(v0 + 200);
  uint64_t v7 = *(void *)(v0 + 208);
  uint64_t v26 = *(void *)(v0 + 192);
  uint64_t v27 = *(void *)(v0 + 184);
  uint64_t v9 = *(void *)(v0 + 160);
  uint64_t v28 = *(void *)(v0 + 176);
  uint64_t v29 = *(void *)(v0 + 168);
  uint64_t v10 = *(void *)(v0 + 152);
  uint64_t v35 = *(void *)(v0 + 144);
  long long v33 = *(_OWORD *)(v0 + 128);
  uint64_t v37 = *(void *)(v0 + 104);
  uint64_t v34 = *(void *)(v0 + 96);
  uint64_t v11 = (void *)(v10 + *(void *)(*(void *)v10 + 208));
  uint64_t v12 = (void (*)(char *, uint64_t, uint64_t))v11[3];
  uint64_t v36 = v11[4];
  long long v31 = *(_OWORD *)(v0 + 112);
  long long v32 = *(_OWORD *)(v0 + 80);
  sub_10000D934(v11, (uint64_t)v12);
  uint64_t v13 = v10 + *(void *)(*(void *)v10 + 224);
  uint64_t v14 = v9;
  uint64_t v30 = v9;
  uint64_t v15 = *(void *)(v9 + 112);
  *(void *)(v0 + 40) = v15;
  *(void *)(v0 + 48) = *(void *)(v14 + 152);
  uint64_t v16 = sub_10000395C((uint64_t *)(v0 + 16));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v16, v13, v15);
  TC2Configuration.environment(systemInfo:)(v0 + 16, v12, v36, v25);
  sub_100003E90(v0 + 16);
  sub_10000D934(v11, v11[3]);
  sub_1001BFA10();
  sub_1001BF8F0();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v26);
  char v17 = *(unsigned char *)(v0 + 352);
  char v18 = sub_1001BF870();
  *(void *)(v0 + 304) = sub_1000D6310(v17, v18 & 1, 1, *(void *)(v10 + *(void *)(*(void *)v10 + 256)), *(void *)(v10 + *(void *)(*(void *)v10 + 256) + 8));
  sub_1001BF8B0();
  (*(void (**)(uint64_t, void, uint64_t))(v28 + 104))(v27, enum case for NWEndpoint.url(_:), v29);
  sub_1001C0410();
  *(void *)(v0 + 312) = sub_1001C03F0();
  sub_1000A0DDC();
  *(void *)(v0 + 320) = sub_1001C1240();
  uint64_t v19 = swift_task_alloc();
  *(void *)(v0 + 328) = v19;
  *(void *)(v19 + 16) = v10;
  *(void *)(v19 + 24) = v38;
  *(void *)(v19 + 32) = v40;
  *(_OWORD *)(v19 + 40) = v33;
  *(void *)(v19 + 56) = v35;
  *(void *)(v19 + 64) = v25;
  *(_OWORD *)(v19 + 72) = v31;
  uint64_t v20 = v48;
  *(void *)(v19 + 88) = v34;
  *(void *)(v19 + 96) = v20;
  *(void *)(v19 + 104) = v39;
  *(_OWORD *)(v19 + 112) = v32;
  *(void *)(v19 + 128) = v37;
  uint64_t v21 = *(void *)(v30 + 120);
  uint64_t v22 = *(int **)(v21 + 64);
  uint64_t v48 = v21 + 64;
  uint64_t v23 = *(void *)(v30 + 80);
  uint64_t v41 = (char *)v22 + *v22;
  uint64_t v24 = (void *)swift_task_alloc();
  *(void *)(v0 + 336) = v24;
  *uint64_t v24 = v0;
  v24[1] = sub_1001AA938;
  uint64_t v46 = v23;
  uint64_t v47 = v21;
  uint64_t v45 = (char *)&type metadata for () + 8;
  __asm { BRAA            X8, X16 }
}

uint64_t sub_1001AA938()
{
  uint64_t v2 = *(void **)(*(void *)v1 + 320);
  uint64_t v3 = *(void *)(*(void *)v1 + 184);
  uint64_t v4 = *(void *)(*(void *)v1 + 176);
  uint64_t v5 = *(void *)(*(void *)v1 + 168);
  *(void *)(*(void *)v1 + 344) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);

  swift_release();
  swift_release();
  swift_task_dealloc();
  if (v0) {
    uint64_t v6 = sub_1001AAC60;
  }
  else {
    uint64_t v6 = sub_1001AAB24;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_1001AAB24()
{
  uint64_t v1 = v0[36];
  unint64_t v2 = v0[37];
  uint64_t v4 = v0[34];
  uint64_t v3 = v0[35];
  uint64_t v5 = v0[33];
  uint64_t v6 = v0[19];
  uint64_t v7 = v0[9];
  (*(void (**)(void, void))(v0[28] + 8))(v0[29], v0[27]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v7, v3, v5);
  uint64_t v8 = v0[7];
  sub_1001B4730(v6, v1, v2, "%s finished prefetch request");
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(uint64_t))v0[1];
  return v9(v8);
}

uint64_t sub_1001AAC60()
{
  uint64_t v1 = v0[36];
  unint64_t v2 = v0[37];
  uint64_t v4 = v0[34];
  uint64_t v3 = v0[35];
  uint64_t v5 = v0[33];
  uint64_t v6 = v0[19];
  (*(void (**)(void, void))(v0[28] + 8))(v0[29], v0[27]);
  sub_1001B4730(v6, v1, v2, "%s finished prefetch request");
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

void sub_1001AAD70(uint64_t a1, uint64_t a2, unint64_t a3)
{
}

uint64_t sub_1001AAD7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 296) = v31;
  *(_OWORD *)(v8 + 280) = v30;
  *(_OWORD *)(v8 + 264) = v29;
  *(_OWORD *)(v8 + 248) = v28;
  *(_OWORD *)(v8 + 232) = v27;
  *(_OWORD *)(v8 + 216) = v26;
  *(void *)(v8 + 200) = a7;
  *(void *)(v8 + 208) = a8;
  *(void *)(v8 + 184) = a5;
  *(void *)(v8 + 192) = a6;
  *(void *)(v8 + 168) = a2;
  *(void *)(v8 + 176) = a3;
  uint64_t v9 = *a5;
  *(void *)(v8 + 304) = *a5;
  *(void *)(v8 + 312) = type metadata accessor for ThimbledEvent();
  *(void *)(v8 + 320) = swift_task_alloc();
  uint64_t v10 = sub_100003918(qword_100208000);
  *(void *)(v8 + 328) = v10;
  *(void *)(v8 + 336) = *(void *)(v10 - 8);
  *(void *)(v8 + 344) = swift_task_alloc();
  uint64_t v11 = sub_100003918(&qword_100208A00);
  *(void *)(v8 + 352) = v11;
  *(void *)(v8 + 360) = *(void *)(v11 - 8);
  *(void *)(v8 + 368) = swift_task_alloc();
  uint64_t v12 = sub_1001BF950();
  *(void *)(v8 + 376) = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  *(void *)(v8 + 384) = v13;
  *(void *)(v8 + 392) = *(void *)(v13 + 64);
  *(void *)(v8 + 400) = swift_task_alloc();
  *(void *)(v8 + 408) = *(void *)(v9 + 120);
  *(void *)(v8 + 416) = *(void *)(v9 + 80);
  *(void *)(v8 + 424) = swift_getAssociatedTypeWitness();
  *(void *)(v8 + 432) = swift_getAssociatedConformanceWitness();
  uint64_t v14 = type metadata accessor for OnResponseHeadSequence();
  *(void *)(v8 + 440) = v14;
  *(void *)(v8 + 448) = *(void *)(v14 - 8);
  *(void *)(v8 + 456) = swift_task_alloc();
  uint64_t v15 = type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse(255);
  *(void *)(v8 + 464) = v15;
  uint64_t WitnessTable = swift_getWitnessTable();
  *(void *)(v8 + 472) = WitnessTable;
  unint64_t v17 = sub_1001B4E68();
  *(void *)(v8 + 480) = v17;
  unint64_t v18 = sub_1001B4EBC();
  *(void *)(v8 + 488) = v18;
  uint64_t v19 = sub_1001B4F10(&qword_10020A878, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse);
  *(void *)(v8 + 496) = v19;
  *(void *)(v8 + 16) = v14;
  *(void *)(v8 + 24) = &type metadata for UInt32;
  *(void *)(v8 + 32) = v15;
  *(void *)(v8 + 40) = WitnessTable;
  *(void *)(v8 + 48) = v17;
  *(void *)(v8 + 56) = v18;
  *(void *)(v8 + 64) = v19;
  uint64_t v20 = type metadata accessor for LengthPrefixDeframer();
  *(void *)(v8 + 504) = v20;
  *(void *)(v8 + 512) = *(void *)(v20 - 8);
  *(void *)(v8 + 520) = swift_task_alloc();
  uint64_t v21 = sub_1001C03B0();
  *(void *)(v8 + 528) = v21;
  *(void *)(v8 + 536) = *(void *)(v21 - 8);
  *(void *)(v8 + 544) = swift_task_alloc();
  *(void *)(v8 + 552) = swift_task_alloc();
  uint64_t v22 = sub_100003918(&qword_10020C068);
  *(void *)(v8 + 560) = v22;
  *(void *)(v8 + 568) = *(void *)(v22 - 8);
  *(void *)(v8 + 576) = swift_task_alloc();
  sub_1001C0440();
  *(void *)(v8 + 584) = swift_task_alloc();
  uint64_t v23 = sub_1001C0460();
  *(void *)(v8 + 592) = v23;
  *(void *)(v8 + 600) = *(void *)(v23 - 8);
  *(void *)(v8 + 608) = swift_task_alloc();
  *(void *)(v8 + 616) = swift_task_alloc();
  *(void *)(v8 + 624) = swift_task_alloc();
  *(void *)(v8 + 632) = type metadata accessor for Proto_Ropes_HttpService_PrefetchRequest(0);
  *(void *)(v8 + 640) = swift_task_alloc();
  return _swift_task_switch(sub_1001AB334, 0, 0);
}

uint64_t sub_1001AB334()
{
  uint64_t v72 = v0;
  v0[81] = qword_10020F458;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C1200();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[26];
    unint64_t v4 = v0[27];
    uint64_t v6 = v0[24];
    unint64_t v5 = v0[25];
    uint64_t v7 = swift_slowAlloc();
    v71[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    swift_bridgeObjectRetain();
    v0[19] = sub_1000DF238(v6, v5, v71);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[20] = sub_1000DF238(v3, v4, v71);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s sending request with parameters: %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v8 = v0[28];
  *(void *)(swift_task_alloc() + 16) = v8;
  sub_1001B4F10(&qword_10020A848, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_PrefetchRequest);
  sub_1001C0060();
  swift_task_dealloc();
  uint64_t v9 = sub_1001C0000();
  v0[82] = v9;
  v0[83] = v10;
  unint64_t v63 = v10;
  uint64_t v64 = v9;
  uint64_t v58 = v0[78];
  uint64_t v69 = v0[77];
  uint64_t v11 = v0[75];
  uint64_t v12 = v0[72];
  uint64_t v13 = v0[71];
  uint64_t v66 = v0[70];
  uint64_t v67 = v0[74];
  uint64_t v14 = v0[67];
  os_log_t log = (os_log_t)v0[69];
  uint64_t v56 = v0[66];
  uint64_t v54 = v0[30];
  uint64_t v15 = v0[23];
  sub_1001C0430();
  sub_1001BF880();
  sub_10000D934((void *)(v15 + *(void *)(*(void *)v15 + 208)), *(void *)(v15 + *(void *)(*(void *)v15 + 208) + 24));
  sub_1001BF9D0();
  sub_1001BF8F0();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v66);
  uint64_t v16 = *(void (**)(os_log_t, uint64_t, uint64_t))(v14 + 16);
  v16(log, v54, v56);
  sub_1001C0450();
  uint64_t v17 = v67;
  unint64_t v68 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
  v68(v69, v58, v17);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  unint64_t v18 = sub_1001C0330();
  os_log_type_t v19 = sub_1001C1200();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v21 = v0[77];
  uint64_t v65 = v16;
  if (v20)
  {
    uint64_t v22 = v0[76];
    uint64_t v23 = v0[75];
    os_log_type_t type = v19;
    uint64_t v24 = v0[74];
    unint64_t v25 = v0[25];
    unint64_t v57 = v0[27];
    uint64_t v59 = v0[26];
    uint64_t v26 = v0[24];
    uint64_t v27 = swift_slowAlloc();
    v71[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 136315650;
    swift_bridgeObjectRetain();
    v0[16] = sub_1000DF238(v26, v25, v71);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v27 + 12) = 2080;
    v68(v22, v21, v24);
    uint64_t v28 = sub_1001C0C50();
    v0[17] = sub_1000DF238(v28, v29, v71);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    long long v30 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    v30(v21, v24);
    *(_WORD *)(v27 + 22) = 2080;
    swift_bridgeObjectRetain();
    v0[18] = sub_1000DF238(v59, v57, v71);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v18, type, "%s sending request: %s with parameters: %s", (uint8_t *)v27, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v16 = v65;
    swift_slowDealloc();
  }
  else
  {
    uint64_t v31 = v0[75];
    uint64_t v32 = v0[74];

    swift_bridgeObjectRelease_n();
    long long v30 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
    v30(v21, v32);
    swift_bridgeObjectRelease_n();
  }
  v0[84] = v30;
  v16((os_log_t)v0[68], v0[30], v0[66]);
  swift_bridgeObjectRetain_n();
  long long v33 = sub_1001C0330();
  os_log_type_t v34 = sub_1001C1200();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v60 = v0[69];
    *(void *)uint64_t typea = v0[68];
    uint64_t v35 = v0[67];
    uint64_t v36 = v0[66];
    uint64_t v38 = v0[24];
    unint64_t v37 = v0[25];
    uint64_t v39 = swift_slowAlloc();
    v71[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v39 = 136315394;
    swift_bridgeObjectRetain();
    v0[14] = sub_1000DF238(v38, v37, v71);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v39 + 12) = 2080;
    v65(v60, *(void *)typea, v36);
    uint64_t v40 = sub_1001C0C40();
    v0[15] = sub_1000DF238(v40, v41, v71);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    (*(void (**)(os_log_type_t *, uint64_t))(v35 + 8))(*(os_log_type_t **)typea, v36);
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "%s headers: %s", (uint8_t *)v39, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v42 = v0[68];
    uint64_t v43 = v0[67];
    uint64_t v44 = v0[66];

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v44);
  }
  uint64_t v45 = v0[78];
  uint64_t v46 = v0[76];
  uint64_t v47 = v0[74];
  sub_1001C0570();
  v68(v46, v45, v47);
  sub_100007B14(v64, v63);
  uint64_t v48 = sub_1001C0560();
  v0[85] = v48;
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v50 = *(int **)(AssociatedConformanceWitness + 8);
  uint64_t v51 = swift_checkMetadataState();
  uint64_t v70 = (uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v50 + *v50);
  uint64_t v52 = (void *)swift_task_alloc();
  v0[86] = v52;
  *uint64_t v52 = v0;
  v52[1] = sub_1001ABE28;
  return v70(v64, v63, v48, 1, v51, AssociatedConformanceWitness);
}

uint64_t sub_1001ABE28()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 696) = v0;
  swift_task_dealloc();
  unint64_t v3 = *(void *)(v2 + 664);
  uint64_t v4 = *(void *)(v2 + 656);
  swift_release();
  sub_10000792C(v4, v3);
  if (v0) {
    unint64_t v5 = sub_1001AC9BC;
  }
  else {
    unint64_t v5 = sub_1001ABF90;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001ABF90()
{
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C11D0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v4 = *(void *)(v0 + 192);
    unint64_t v3 = *(void *)(v0 + 200);
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)unint64_t v5 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 104) = sub_1000DF238(v4, v3, &v37);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s waiting for response", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v28 = *(void *)(v0 + 520);
  uint64_t v29 = *(void *)(v0 + 448);
  uint64_t v27 = *(void *)(v0 + 440);
  uint64_t v25 = *(void *)(v0 + 456);
  uint64_t v26 = *(void *)(v0 + 424);
  uint64_t v21 = *(void *)(v0 + 416);
  uint64_t v6 = *(void *)(v0 + 400);
  uint64_t v23 = *(void *)(v0 + 408);
  uint64_t v8 = *(void *)(v0 + 384);
  uint64_t v7 = *(void *)(v0 + 392);
  uint64_t v9 = *(void *)(v0 + 376);
  uint64_t v10 = *(void *)(v0 + 304);
  uint64_t v34 = *(void *)(v0 + 272);
  uint64_t v35 = *(void *)(v0 + 296);
  uint64_t v33 = *(void *)(v0 + 264);
  uint64_t v24 = *(void *)(v0 + 256);
  uint64_t v30 = *(void *)(v0 + 248);
  uint64_t v32 = *(void *)(v0 + 224);
  uint64_t v11 = *(void *)(v0 + 192);
  uint64_t v22 = *(void *)(v0 + 200);
  uint64_t v12 = *(void *)(v0 + 184);
  long long v31 = *(_OWORD *)(v0 + 280);
  (*(void (**)(uint64_t))(v8 + 16))(v6);
  unint64_t v13 = (*(unsigned __int8 *)(v8 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v14 = (v7 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v21;
  *(void *)(v15 + 24) = *(void *)(v10 + 88);
  *(_OWORD *)(v15 + 32) = *(_OWORD *)(v10 + 96);
  *(void *)(v15 + 48) = *(void *)(v10 + 112);
  *(void *)(v15 + 56) = v23;
  *(void *)(v15 + 64) = *(void *)(v10 + 128);
  *(_OWORD *)(v15 + 72) = *(_OWORD *)(v10 + 136);
  *(void *)(v15 + 88) = *(void *)(v10 + 152);
  *(void *)(v15 + 96) = v12;
  *(void *)(v15 + 104) = v11;
  *(void *)(v15 + 112) = v22;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v8 + 32))(v15 + v13, v6, v9);
  *(void *)(v15 + v14) = v24;
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = v12;
  v16[3] = v11;
  v16[4] = v22;
  sub_100106980((uint64_t)&unk_10020F518, v15, (uint64_t)&unk_10020F528, (uint64_t)v16, v26, v25);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_release();
  swift_release();
  sub_100007810((uint64_t)&type metadata for UInt32, v27, v28);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v25, v27);
  *(void *)(v0 + 88) = 0;
  *(void *)(v0 + 96) = _swiftEmptyArrayStorage;
  uint64_t v17 = sub_1001BFD90();
  uint64_t v18 = swift_task_alloc();
  *(void *)(v0 + 704) = v18;
  *(void *)(v18 + 16) = v28;
  *(void *)(v18 + 24) = v12;
  *(void *)(v18 + 32) = v11;
  *(void *)(v18 + 40) = v22;
  *(void *)(v18 + 48) = v0 + 88;
  *(void *)(v18 + 56) = v33;
  *(void *)(v18 + 64) = v0 + 96;
  *(void *)(v18 + 72) = v34;
  *(void *)(v18 + 80) = v32;
  *(void *)(v18 + 88) = v30;
  *(_OWORD *)(v18 + 96) = v31;
  *(void *)(v18 + 112) = v24;
  *(void *)(v18 + 120) = v35;
  os_log_type_t v19 = (void *)swift_task_alloc();
  *(void *)(v0 + 712) = v19;
  *os_log_type_t v19 = v0;
  v19[1] = sub_1001AC44C;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v19, v17, (char *)&type metadata for () + 8, 0, 0, &unk_10020F538, v18, v17);
}

uint64_t sub_1001AC44C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1001AC564, 0, 0);
}

uint64_t sub_1001AC564()
{
  uint64_t v25 = v0[82];
  unint64_t v26 = v0[83];
  uint64_t v1 = v0[80];
  uint64_t v2 = v0[78];
  if (v0[11])
  {
    uint64_t v20 = v0[78];
    uint64_t v3 = v0[75];
    uint64_t v21 = v0[74];
    uint64_t v22 = v0[64];
    uint64_t v23 = v0[63];
    uint64_t v24 = v0[65];
    uint64_t v4 = v0[45];
    uint64_t v18 = v0[46];
    uint64_t v5 = v0[43];
    uint64_t v19 = v0[44];
    uint64_t v7 = v0[41];
    uint64_t v6 = v0[42];
    uint64_t v8 = v0[40];
    uint64_t v9 = v0[23];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v9 + *(void *)(*(void *)v9 + 240), v7);
    char v10 = *(unsigned char *)(v9 + *(void *)(*(void *)v9 + 248));
    *(void *)uint64_t v8 = v0[12];
    *(unsigned char *)(v8 + 8) = v10;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1001C0FE0();
    sub_10000792C(v25, v26);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v20, v21);
    sub_1001B59E4(v1, type metadata accessor for Proto_Ropes_HttpService_PrefetchRequest);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v23);
  }
  else
  {
    uint64_t v12 = v0[75];
    uint64_t v13 = v0[74];
    uint64_t v14 = v0[65];
    uint64_t v16 = v0[63];
    uint64_t v15 = v0[64];
    sub_1001BF810();
    sub_1001B4F10(&qword_10020D938, (void (*)(uint64_t))&type metadata accessor for TrustedCloudComputeError);
    swift_allocError();
    sub_1001BF800();
    swift_willThrow();
    sub_10000792C(v25, v26);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v2, v13);
    sub_1001B59E4(v1, type metadata accessor for Proto_Ropes_HttpService_PrefetchRequest);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_1001AC9BC()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[84];
  uint64_t v2 = v0[80];
  uint64_t v3 = v0[78];
  uint64_t v4 = v0[74];
  sub_10000792C(v0[82], v0[83]);
  v1(v3, v4);
  sub_1001B59E4(v2, type metadata accessor for Proto_Ropes_HttpService_PrefetchRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1001ACB40(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_100003918(&qword_10020A638);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Proto_Ropes_HttpService_PrefetchRequest(0);
  uint64_t v14 = a1 + *(int *)(v13 + 20);
  sub_10003282C(v14, (uint64_t)v7, &qword_10020A638);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    *(void *)uint64_t v12 = _swiftEmptyArrayStorage;
    char v12[8] = 0;
    _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_100010360((uint64_t)v7, &qword_10020A638);
  }
  else
  {
    sub_1001B5AAC((uint64_t)v7, (uint64_t)v12, type metadata accessor for Proto_Ropes_Common_Capabilities);
  }
  char v12[8] = 1;
  sub_100010360(v14, &qword_10020A638);
  sub_1001B5AAC((uint64_t)v12, v14, type metadata accessor for Proto_Ropes_Common_Capabilities);
  uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v14, 0, 1, v8);
  if ((a2 & 0x8000000000000000) != 0 || HIDWORD(a2))
  {
    uint64_t result = sub_1001C1570();
    __break(1u);
  }
  else
  {
    uint64_t v16 = a1 + *(int *)(v13 + 24);
    *(_DWORD *)uint64_t v16 = a2;
    *(unsigned char *)(v16 + 4) = 0;
  }
  return result;
}

uint64_t sub_1001ACDF4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[9] = a5;
  v6[10] = a6;
  v6[7] = a3;
  v6[8] = a4;
  v6[5] = a1;
  v6[6] = a2;
  v6[11] = *a2;
  uint64_t v7 = sub_1001C04B0();
  v6[12] = v7;
  v6[13] = *(void *)(v7 - 8);
  v6[14] = swift_task_alloc();
  v6[15] = swift_task_alloc();
  v6[16] = sub_1001C03B0();
  v6[17] = swift_task_alloc();
  uint64_t v8 = sub_1001C04D0();
  v6[18] = v8;
  v6[19] = *(void *)(v8 - 8);
  v6[20] = swift_task_alloc();
  v6[21] = swift_task_alloc();
  v6[22] = swift_task_alloc();
  return _swift_task_switch(sub_1001ACF9C, 0, 0);
}

uint64_t sub_1001ACF9C()
{
  uint64_t v51 = v0;
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[18];
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[19] + 16);
  v4(v0[22], v1, v3);
  v4(v2, v1, v3);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_1001C0330();
  os_log_type_t v6 = sub_1001C11D0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = v0[22];
    os_log_type_t typea = v6;
    uint64_t v8 = v0[20];
    uint64_t v49 = v0[19];
    uint64_t v9 = v0[18];
    uint64_t v45 = v0[21];
    os_log_t log = v5;
    uint64_t v44 = v4;
    uint64_t v11 = v0[7];
    unint64_t v10 = v0[8];
    uint64_t v12 = swift_slowAlloc();
    v50[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315650;
    swift_bridgeObjectRetain();
    v0[2] = sub_1000DF238(v11, v10, v50);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 2080;
    v44(v8, v7, v9);
    uint64_t v13 = sub_1001C0C40();
    v0[3] = sub_1000DF238(v13, v14, v50);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
    v15(v7, v9);
    *(_WORD *)(v12 + 22) = 2080;
    sub_1001C0470();
    uint64_t v16 = sub_1001C0C40();
    v0[4] = sub_1000DF238(v16, v17, v50);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    v15(v45, v9);
    _os_log_impl((void *)&_mh_execute_header, log, typea, "%s response head received: %s; headers: %s",
      (uint8_t *)v12,
      0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v19 = v0[21];
    uint64_t v18 = v0[22];
    uint64_t v21 = v0[18];
    uint64_t v20 = v0[19];

    swift_bridgeObjectRelease_n();
    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v22(v18, v21);
    v22(v19, v21);
  }
  uint64_t v24 = v0[14];
  uint64_t v23 = v0[15];
  uint64_t v25 = v0[12];
  uint64_t v26 = v0[13];
  sub_1001C04C0();
  sub_1001C0490();
  char v27 = sub_1001C0480();
  uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
  v28(v24, v25);
  v28(v23, v25);
  if (v27)
  {
    uint64_t v29 = v0[11];
    uint64_t v30 = *(void *)(v29 + 128);
    uint64_t v31 = *(void *)(v29 + 88);
    os_log_type_t type = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 + 48) + **(int **)(v30 + 48));
    uint64_t v32 = (void *)swift_task_alloc();
    v0[23] = v32;
    *uint64_t v32 = v0;
    v32[1] = sub_1001AD534;
    uint64_t v34 = v0[9];
    uint64_t v33 = v0[10];
    return type(v34, v33, v31, v30);
  }
  else
  {
    uint64_t v36 = v0[15];
    uint64_t v37 = v0[12];
    sub_1001C04C0();
    uint64_t v38 = sub_1001C04A0();
    v28(v36, v37);
    sub_10018C668();
    uint64_t v39 = swift_allocError();
    *uint64_t v40 = v38;
    sub_100003918(&qword_100208CC0);
    uint64_t v41 = swift_allocObject();
    *(_OWORD *)(v41 + 16) = xmmword_1001CC760;
    *(void *)(v41 + 32) = v39;
    sub_10018C6BC();
    swift_allocError();
    *uint64_t v42 = v41;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v43 = (uint64_t (*)(void))v0[1];
    return v43();
  }
}

uint64_t sub_1001AD534()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1001AD6E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 432) = v32;
  *(void *)(v8 + 440) = v33;
  *(_OWORD *)(v8 + 400) = v30;
  *(_OWORD *)(v8 + 416) = v31;
  *(_OWORD *)(v8 + 384) = v29;
  *(void *)(v8 + 368) = a7;
  *(void *)(v8 + 376) = a8;
  *(void *)(v8 + 352) = a5;
  *(void *)(v8 + 360) = a6;
  *(void *)(v8 + 336) = a3;
  *(void *)(v8 + 344) = a4;
  *(void *)(v8 + 328) = a2;
  uint64_t v9 = *a4;
  *(void *)(v8 + 448) = *a4;
  sub_100003918(&qword_100209380);
  *(void *)(v8 + 456) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for RateLimitConfiguration(0);
  *(void *)(v8 + 464) = v10;
  *(void *)(v8 + 472) = *(void *)(v10 - 8);
  *(void *)(v8 + 480) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration(0);
  *(void *)(v8 + 488) = v11;
  *(void *)(v8 + 496) = *(void *)(v11 - 8);
  *(void *)(v8 + 504) = swift_task_alloc();
  *(void *)(v8 + 512) = swift_task_alloc();
  *(void *)(v8 + 520) = swift_task_alloc();
  type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0);
  *(void *)(v8 + 528) = swift_task_alloc();
  *(void *)(v8 + 536) = swift_task_alloc();
  uint64_t v12 = sub_1001BF2C0();
  *(void *)(v8 + 544) = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  *(void *)(v8 + 552) = v13;
  *(void *)(v8 + 560) = *(void *)(v13 + 64);
  *(void *)(v8 + 568) = swift_task_alloc();
  uint64_t v14 = sub_1001BF310();
  *(void *)(v8 + 576) = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  *(void *)(v8 + 584) = v15;
  *(void *)(v8 + 592) = *(void *)(v15 + 64);
  *(void *)(v8 + 600) = swift_task_alloc();
  *(void *)(v8 + 608) = swift_task_alloc();
  uint64_t v16 = sub_1001BF950();
  *(void *)(v8 + 616) = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  *(void *)(v8 + 624) = v17;
  *(void *)(v8 + 632) = *(void *)(v17 + 64);
  *(void *)(v8 + 640) = swift_task_alloc();
  sub_100003918(&qword_10020C3B0);
  *(void *)(v8 + 648) = swift_task_alloc();
  *(void *)(v8 + 656) = swift_task_alloc();
  sub_100003918(&qword_10020EB08);
  *(void *)(v8 + 664) = swift_task_alloc();
  *(void *)(v8 + 672) = swift_task_alloc();
  uint64_t v18 = sub_1001BFD90();
  *(void *)(v8 + 680) = v18;
  *(void *)(v8 + 688) = *(void *)(v18 - 8);
  *(void *)(v8 + 696) = swift_task_alloc();
  *(void *)(v8 + 704) = swift_task_alloc();
  *(void *)(v8 + 712) = swift_task_alloc();
  *(void *)(v8 + 720) = swift_task_alloc();
  uint64_t v19 = *(void *)(type metadata accessor for Proto_Ropes_Common_Attestation(0) - 8);
  *(void *)(v8 + 728) = v19;
  *(void *)(v8 + 736) = *(void *)(v19 + 64);
  *(void *)(v8 + 744) = swift_task_alloc();
  *(void *)(v8 + 752) = swift_task_alloc();
  sub_100003918(&qword_10020A660);
  *(void *)(v8 + 760) = swift_task_alloc();
  sub_100003918(&qword_10020EB10);
  *(void *)(v8 + 768) = swift_task_alloc();
  *(void *)(v8 + 776) = *(void *)(v9 + 120);
  *(void *)(v8 + 784) = *(void *)(v9 + 80);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v20 = type metadata accessor for OnResponseHeadSequence();
  *(void *)(v8 + 792) = v20;
  uint64_t v21 = type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse(255);
  *(void *)(v8 + 800) = v21;
  uint64_t WitnessTable = swift_getWitnessTable();
  *(void *)(v8 + 808) = WitnessTable;
  unint64_t v23 = sub_1001B4E68();
  *(void *)(v8 + 816) = v23;
  unint64_t v24 = sub_1001B4EBC();
  *(void *)(v8 + 824) = v24;
  uint64_t v25 = sub_1001B4F10(&qword_10020A878, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse);
  *(void *)(v8 + 832) = v25;
  *(void *)(v8 + 16) = v20;
  *(void *)(v8 + 24) = &type metadata for UInt32;
  *(void *)(v8 + 32) = v21;
  *(void *)(v8 + 40) = WitnessTable;
  *(void *)(v8 + 48) = v23;
  *(void *)(v8 + 56) = v24;
  *(void *)(v8 + 64) = v25;
  uint64_t v26 = type metadata accessor for LengthPrefixDeframer.AsyncIterator();
  *(void *)(v8 + 840) = v26;
  *(void *)(v8 + 848) = *(void *)(v26 - 8);
  *(void *)(v8 + 856) = swift_task_alloc();
  return _swift_task_switch(sub_1001ADD88, 0, 0);
}

uint64_t sub_1001ADD88()
{
  long long v1 = *(_OWORD *)(v0 + 816);
  *(_OWORD *)(v0 + 88) = *(_OWORD *)(v0 + 800);
  uint64_t v2 = *(void *)(v0 + 856);
  uint64_t v3 = *(void *)(v0 + 832);
  *(void *)(v0 + 72) = *(void *)(v0 + 792);
  uint64_t v4 = *(uint64_t **)(v0 + 344);
  *(void *)(v0 + 80) = &type metadata for UInt32;
  *(_OWORD *)(v0 + 104) = v1;
  *(void *)(v0 + 120) = v3;
  uint64_t v5 = type metadata accessor for LengthPrefixDeframer();
  sub_100003FD8(v5, v6, v2);
  *(void *)(v0 + 864) = qword_10020F458;
  uint64_t v7 = *v4;
  *(void *)(v0 + 872) = *(void *)(*v4 + 208);
  *(void *)(v0 + 880) = *(void *)(v7 + 192);
  *(void *)(v0 + 888) = 0;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 896) = v8;
  uint64_t WitnessTable = swift_getWitnessTable();
  *uint64_t v8 = v0;
  v8[1] = sub_1001ADEEC;
  uint64_t v10 = *(void *)(v0 + 840);
  uint64_t v11 = *(void *)(v0 + 768);
  return _sScIsE4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKF(v11, 0, 0, v10, WitnessTable, v0 + 320);
}

uint64_t sub_1001ADEEC()
{
  swift_task_dealloc();
  if (v0) {
    long long v1 = sub_1001B07C4;
  }
  else {
    long long v1 = sub_1001ADFFC;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_1001ADFFC()
{
  uint64_t v135 = v0;
  uint64_t v1 = *(void *)(v0 + 768);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v0 + 800) - 8) + 48))(v1, 1) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 848) + 8))(*(void *)(v0 + 856), *(void *)(v0 + 840));
    swift_bridgeObjectRetain_n();
    uint64_t v2 = sub_1001C0330();
    os_log_type_t v3 = sub_1001C11D0();
    BOOL v4 = os_log_type_enabled(v2, v3);
    unint64_t v5 = *(void *)(v0 + 360);
    if (v4)
    {
      uint64_t v6 = *(void *)(v0 + 352);
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      v134[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 288) = sub_1000DF238(v6, v5, v134);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s response complete", v7, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 960) = v14;
    uint64_t v15 = sub_100003918(&qword_10020EB28);
    *uint64_t v14 = v0;
    v14[1] = sub_1001B0248;
    uint64_t v16 = *(void *)(v0 + 664);
    goto LABEL_10;
  }
  uint64_t v8 = *(void *)(v0 + 760);
  sub_10003282C(v1, v8, &qword_10020A660);
  sub_1001B59E4(v1, type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse);
  uint64_t v9 = type metadata accessor for Proto_Ropes_HttpService_PrefetchResponse.OneOf_Type(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9) == 1) {
    goto LABEL_5;
  }
  uint64_t v19 = *(void *)(v0 + 760);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1001B5AAC(v19, *(void *)(v0 + 752), type metadata accessor for Proto_Ropes_Common_Attestation);
    swift_bridgeObjectRetain_n();
    long long v30 = sub_1001C0330();
    os_log_type_t v31 = sub_1001C11E0();
    BOOL v32 = os_log_type_enabled(v30, v31);
    unint64_t v33 = *(void *)(v0 + 360);
    if (v32)
    {
      uint64_t v34 = *(void *)(v0 + 352);
      uint64_t v35 = swift_slowAlloc();
      v134[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v35 + 4) = sub_1000DF238(v34, v33, v134);
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "%s attestation received", (uint8_t *)v35, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v16 = swift_bridgeObjectRelease_n();
    }
    os_log_type_t v62 = *(void **)(v0 + 368);
    if (__OFADD__(*v62, 1))
    {
      __break(1u);
    }
    else
    {
      uint64_t v63 = *(void *)(v0 + 888);
      ++*v62;
      if (v63 == 10)
      {
        uint64_t v64 = (void *)swift_task_alloc();
        *(void *)(v0 + 904) = v64;
        uint64_t v15 = sub_100003918(&qword_10020EB28);
        void *v64 = v0;
        v64[1] = sub_1001AF0FC;
        uint64_t v16 = *(void *)(v0 + 672);
LABEL_10:
        uint64_t v17 = 0;
        uint64_t v18 = 0;
        return TaskGroup.next(isolation:)(v16, v17, v18, v15);
      }
      uint64_t v65 = *(void *)(v0 + 888);
      uint64_t v66 = *(void *)(v0 + 400);
      uint64_t v67 = *(void *)(sub_1001BFDB0() + 16);
      uint64_t v16 = swift_bridgeObjectRelease();
      if (v67 >= v66) {
        goto LABEL_48;
      }
      uint64_t v127 = v65 + 1;
      if (!__OFADD__(v65, 1))
      {
        uint64_t v121 = *(void *)(v0 + 784);
        uint64_t v106 = *(void *)(v0 + 752);
        uint64_t v68 = *(void *)(v0 + 744);
        uint64_t v112 = *(void *)(v0 + 736);
        uint64_t v114 = v68;
        uint64_t v109 = *(void *)(v0 + 728);
        uint64_t v69 = *(void *)(v0 + 656);
        uint64_t v123 = *(void *)(v0 + 776);
        uint64_t v124 = v69;
        uint64_t v126 = *(void *)(v0 + 648);
        uint64_t v70 = *(void *)(v0 + 640);
        uint64_t v71 = *(void *)(v0 + 624);
        uint64_t v72 = *(void *)(v0 + 616);
        uint64_t v115 = v72;
        uint64_t v116 = v70;
        uint64_t v73 = *(void *)(v0 + 608);
        uint64_t v74 = *(void *)(v0 + 600);
        uint64_t v117 = v73;
        uint64_t v118 = v74;
        uint64_t v110 = *(void *)(v0 + 592);
        uint64_t v111 = *(void *)(v0 + 632);
        uint64_t v75 = *(void *)(v0 + 584);
        uint64_t v129 = *(void *)(v0 + 576);
        uint64_t v133 = *(void *)(v0 + 568);
        uint64_t v128 = *(void *)(v0 + 552);
        uint64_t v130 = *(void *)(v0 + 544);
        uint64_t v76 = *(void *)(v0 + 448);
        uint64_t v108 = *(void *)(v0 + 440);
        uint64_t v125 = *(void *)(v0 + 432);
        uint64_t v107 = *(void *)(v0 + 424);
        uint64_t v104 = *(void *)(v0 + 408);
        uint64_t v105 = *(void *)(v0 + 416);
        uint64_t v119 = *(void *)(v0 + 344);
        uint64_t v122 = sub_1001C0FC0();
        uint64_t v120 = *(void *)(v122 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v120 + 56))(v69, 1, 1, v122);
        sub_1001B5A44(v106, v68, type metadata accessor for Proto_Ropes_Common_Attestation);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 16))(v70, v104, v72);
        uint64_t v77 = *(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 16);
        v77(v73, v105, v129);
        v77(v74, v107, v129);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v128 + 16))(v133, v108, v130);
        unint64_t v78 = (*(unsigned __int8 *)(v109 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80);
        unint64_t v79 = (v112 + *(unsigned __int8 *)(v71 + 80) + v78) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
        uint64_t v80 = *(unsigned __int8 *)(v75 + 80);
        unint64_t v81 = (v111 + v80 + v79) & ~v80;
        unint64_t v82 = (v110 + v80 + v81) & ~v80;
        unint64_t v113 = (v110 + v82 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v83 = (*(unsigned __int8 *)(v128 + 80) + v113 + 8) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80);
        uint64_t v84 = swift_allocObject();
        *(void *)(v84 + 16) = 0;
        *(void *)(v84 + 24) = 0;
        *(void *)(v84 + 32) = v121;
        *(void *)(v84 + 40) = *(void *)(v76 + 88);
        *(_OWORD *)(v84 + 48) = *(_OWORD *)(v76 + 96);
        *(void *)(v84 + 64) = *(void *)(v76 + 112);
        *(void *)(v84 + 72) = v123;
        *(_OWORD *)(v84 + 80) = *(_OWORD *)(v76 + 128);
        *(void *)(v84 + 96) = *(void *)(v76 + 144);
        *(void *)(v84 + 104) = *(void *)(v76 + 152);
        *(void *)(v84 + 112) = v119;
        sub_1001B5AAC(v114, v84 + v78, type metadata accessor for Proto_Ropes_Common_Attestation);
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v71 + 32))(v84 + v79, v116, v115);
        uint64_t v85 = *(void (**)(unint64_t, uint64_t, uint64_t))(v75 + 32);
        v85(v84 + v81, v117, v129);
        v85(v84 + v82, v118, v129);
        *(void *)(v84 + v113) = v125;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v128 + 32))(v84 + v83, v133, v130);
        sub_10003282C(v124, v126, &qword_10020C3B0);
        LODWORD(v82) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v120 + 48))(v126, 1, v122);
        swift_retain();
        uint64_t v86 = *(void *)(v0 + 648);
        if (v82 == 1)
        {
          sub_100010360(*(void *)(v0 + 648), &qword_10020C3B0);
        }
        else
        {
          sub_1001C0FB0();
          (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v86, v122);
        }
        if (*(void *)(v84 + 16))
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          uint64_t v96 = sub_1001C0EA0();
          uint64_t v98 = v97;
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v96 = 0;
          uint64_t v98 = 0;
        }
        uint64_t v99 = **(void **)(v0 + 328);
        uint64_t v100 = swift_allocObject();
        *(void *)(v100 + 16) = &unk_10020F548;
        *(void *)(v100 + 24) = v84;
        uint64_t v101 = v98 | v96;
        if (v98 | v96)
        {
          uint64_t v101 = v0 + 232;
          *(void *)(v0 + 232) = 0;
          *(void *)(v0 + 240) = 0;
          *(void *)(v0 + 248) = v96;
          *(void *)(v0 + 256) = v98;
        }
        uint64_t v65 = v127;
        uint64_t v102 = *(void *)(v0 + 656);
        *(void *)(v0 + 264) = 1;
        *(void *)(v0 + 272) = v101;
        *(void *)(v0 + 280) = v99;
        swift_task_create();
        swift_release();
        sub_100010360(v102, &qword_10020C3B0);
LABEL_48:
        sub_1001B59E4(*(void *)(v0 + 752), type metadata accessor for Proto_Ropes_Common_Attestation);
        *(void *)(v0 + 888) = v65;
LABEL_5:
        uint64_t v10 = (void *)swift_task_alloc();
        *(void *)(v0 + 896) = v10;
        uint64_t WitnessTable = swift_getWitnessTable();
        *uint64_t v10 = v0;
        v10[1] = sub_1001ADEEC;
        uint64_t v12 = *(void *)(v0 + 840);
        uint64_t v13 = *(void *)(v0 + 768);
        return _sScIsE4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKF(v13, 0, 0, v12, WitnessTable, v0 + 320);
      }
    }
    __break(1u);
    return TaskGroup.next(isolation:)(v16, v17, v18, v15);
  }
  uint64_t v20 = *(void *)(v0 + 536);
  uint64_t v21 = *(void *)(v0 + 528);
  sub_1001B5AAC(v19, v20, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  sub_1001B5A44(v20, v21, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  swift_bridgeObjectRetain_n();
  uint64_t v22 = sub_1001C0330();
  os_log_type_t v23 = sub_1001C1200();
  BOOL v24 = os_log_type_enabled(v22, v23);
  uint64_t v25 = *(void *)(v0 + 528);
  unint64_t v26 = *(void *)(v0 + 360);
  if (v24)
  {
    uint64_t v27 = *(void *)(v0 + 352);
    uint64_t v28 = swift_slowAlloc();
    v134[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v28 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v28 + 4) = sub_1000DF238(v27, v26, v134);
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v28 + 12) = 2048;
    uint64_t v29 = *(void *)(*(void *)v25 + 16);
    sub_1001B59E4(v25, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
    *(void *)(v28 + 14) = v29;
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "%s received rate limit configuration count %ld", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1001B59E4(*(void *)(v0 + 528), type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);

    swift_bridgeObjectRelease_n();
  }
  uint64_t v36 = **(void **)(v0 + 536);
  *(void *)(v0 + 912) = v36;
  uint64_t v37 = *(void *)(v36 + 16);
  *(void *)(v0 + 920) = v37;
  if (v37)
  {
    uint64_t v38 = v0 + 128;
    uint64_t v39 = *(void *)(v0 + 496);
    *(_DWORD *)(v0 + 968) = *(_DWORD *)(v39 + 80);
    *(void *)(v0 + 928) = *(void *)(v39 + 72);
    swift_bridgeObjectRetain();
    uint64_t v40 = 0;
    while (1)
    {
      *(void *)(v0 + 944) = v40;
      uint64_t v42 = *(void *)(v0 + 568);
      uint64_t v43 = *(void *)(v0 + 520);
      uint64_t v44 = *(void **)(v0 + 512);
      uint64_t v46 = *(void *)(v0 + 464);
      uint64_t v45 = *(void *)(v0 + 472);
      uint64_t v47 = *(void **)(v0 + 456);
      uint64_t v48 = *(void *)(v0 + 344) + *(void *)(v0 + 872);
      sub_1001B5A44(*(void *)(v0 + 912)+ ((*(unsigned __int8 *)(v0 + 968) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 968))+ *(void *)(v0 + 928) * v40, v43, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
      _s20privatecloudcomputed8LRUCacheC10addToCache3now5valueSb10Foundation4DateV_xtFfA__0();
      sub_1001B5A44(v43, (uint64_t)v44, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
      sub_100032890(v48, v38);
      sub_10002E48C(v42, v44, v38, v47);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v45 + 48))(v47, 1, v46) != 1) {
        break;
      }
      uint64_t v49 = *(void *)(v0 + 520);
      uint64_t v50 = *(void *)(v0 + 504);
      sub_100010360(*(void *)(v0 + 456), &qword_100209380);
      sub_1001B5A44(v49, v50, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
      swift_bridgeObjectRetain_n();
      uint64_t v51 = sub_1001C0330();
      os_log_type_t v52 = sub_1001C11F0();
      BOOL v53 = os_log_type_enabled(v51, v52);
      uint64_t v54 = *(void *)(v0 + 520);
      if (v53)
      {
        uint64_t v56 = *(void *)(v0 + 504);
        uint64_t v55 = *(void *)(v0 + 512);
        uint64_t v58 = *(void *)(v0 + 352);
        unint64_t v57 = *(void *)(v0 + 360);
        uint64_t v59 = swift_slowAlloc();
        v134[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v59 = 136315394;
        swift_bridgeObjectRetain();
        *(void *)(v59 + 4) = sub_1000DF238(v58, v57, v134);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v59 + 12) = 2080;
        sub_1001B5A44(v56, v55, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
        uint64_t v38 = v0 + 128;
        uint64_t v60 = sub_1001C0C40();
        *(void *)(v59 + 14) = sub_1000DF238(v60, v61, v134);
        swift_bridgeObjectRelease();
        sub_1001B59E4(v56, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
        _os_log_impl((void *)&_mh_execute_header, v51, v52, "%s unable to process rate limit configuration %s", (uint8_t *)v59, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        uint64_t v41 = *(void *)(v0 + 504);
        swift_bridgeObjectRelease_n();
        sub_1001B59E4(v41, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
      }

      sub_1001B59E4(v54, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
      uint64_t v40 = *(void *)(v0 + 944) + 1;
      if (v40 == *(void *)(v0 + 920))
      {
        swift_bridgeObjectRelease();
        goto LABEL_38;
      }
    }
    uint64_t v87 = *(void *)(v0 + 448);
    sub_1001B5AAC(*(void *)(v0 + 456), *(void *)(v0 + 480), type metadata accessor for RateLimitConfiguration);
    uint64_t v88 = *(void *)(v87 + 136);
    uint64_t v89 = *(void *)(v87 + 96);
    uint64_t v131 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v88 + 8) + **(int **)(v88 + 8));
    uint64_t v90 = (void *)swift_task_alloc();
    *(void *)(v0 + 952) = v90;
    void *v90 = v0;
    v90[1] = sub_1001AFBE8;
    uint64_t v91 = *(void *)(v0 + 480);
    return v131(v91, v89, v88);
  }
  else
  {
LABEL_38:
    uint64_t v92 = *(void *)(v0 + 448);
    uint64_t v93 = *(void *)(v92 + 136);
    uint64_t v94 = *(void *)(v92 + 96);
    unint64_t v132 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v93 + 24) + **(int **)(v93 + 24));
    uint64_t v95 = (void *)swift_task_alloc();
    *(void *)(v0 + 936) = v95;
    void *v95 = v0;
    v95[1] = sub_1001AF9F4;
    return v132(v94, v93);
  }
}

uint64_t sub_1001AF0FC()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1001AF1F8, 0, 0);
}

uint64_t sub_1001AF1F8()
{
  uint64_t v1 = *(void *)(v0 + 688);
  uint64_t v2 = *(void *)(v0 + 680);
  uint64_t v3 = *(void *)(v0 + 672);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2);
  if (v4 == 1) {
    goto LABEL_30;
  }
  uint64_t v10 = *(void (**)(unint64_t, uint64_t, uint64_t))(v1 + 32);
  v10(*(void *)(v0 + 720), v3, v2);
  uint64_t v4 = sub_1001BFD70();
  if (v4)
  {
    uint64_t v11 = *(void **)(v0 + 376);
    if (!__OFADD__(*v11, 1))
    {
      ++*v11;
      goto LABEL_5;
    }
    __break(1u);
LABEL_30:
    __break(1u);
    return _sScIsE4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKF(v4, v5, v6, v7, WitnessTable, v9);
  }
LABEL_5:
  uint64_t v92 = v10;
  uint64_t v12 = sub_1001BFD40();
  if (v13)
  {
    uint64_t v14 = v12;
    uint64_t v15 = v13;
    uint64_t v16 = *(char ***)(v0 + 384);
    uint64_t v17 = *v16;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    void *v16 = v17;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v63 = *(char ***)(v0 + 384);
      uint64_t v17 = sub_1000E3F44(0, *((void *)v17 + 2) + 1, 1, v17);
      uint64_t *v63 = v17;
    }
    unint64_t v20 = *((void *)v17 + 2);
    unint64_t v19 = *((void *)v17 + 3);
    if (v20 >= v19 >> 1)
    {
      uint64_t v64 = *(char ***)(v0 + 384);
      uint64_t v17 = sub_1000E3F44((char *)(v19 > 1), v20 + 1, 1, v17);
      void *v64 = v17;
    }
    *((void *)v17 + 2) = v20 + 1;
    uint64_t v21 = &v17[16 * v20];
    *((void *)v21 + 4) = v14;
    *((void *)v21 + 5) = v15;
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 688) + 16))(*(void *)(v0 + 712), *(void *)(v0 + 720), *(void *)(v0 + 680));
  uint64_t v22 = (void (*)(uint64_t, void))sub_1001BFDA0();
  BOOL v24 = v23;
  unint64_t v25 = *v23;
  char v26 = swift_isUniquelyReferenced_nonNull_native();
  *BOOL v24 = v25;
  if ((v26 & 1) == 0)
  {
    unint64_t v25 = sub_1000E4594(0, *(void *)(v25 + 16) + 1, 1, v25);
    *BOOL v24 = v25;
  }
  unint64_t v28 = *(void *)(v25 + 16);
  unint64_t v27 = *(void *)(v25 + 24);
  if (v28 >= v27 >> 1)
  {
    unint64_t v25 = sub_1000E4594(v27 > 1, v28 + 1, 1, v25);
    *BOOL v24 = v25;
  }
  uint64_t v29 = *(void *)(v0 + 720);
  uint64_t v30 = *(void *)(v0 + 712);
  uint64_t v31 = *(void *)(v0 + 688);
  uint64_t v32 = *(void *)(v0 + 680);
  *(void *)(v25 + 16) = v28 + 1;
  v92(v25+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(void *)(v31 + 72) * v28, v30, v32);
  v22(v0 + 200, 0);
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v32);
  uint64_t v33 = *(void *)(v0 + 400);
  uint64_t v34 = *(void *)(sub_1001BFDB0() + 16);
  swift_bridgeObjectRelease();
  if (v34 >= v33)
  {
    uint64_t v54 = 9;
  }
  else
  {
    uint64_t v83 = *(void *)(v0 + 784);
    uint64_t v85 = *(void *)(v0 + 776);
    uint64_t v68 = *(void *)(v0 + 752);
    uint64_t v35 = *(void *)(v0 + 744);
    uint64_t v74 = *(void *)(v0 + 736);
    uint64_t v76 = v35;
    uint64_t v71 = *(void *)(v0 + 728);
    uint64_t v36 = *(void *)(v0 + 656);
    uint64_t v86 = v36;
    uint64_t v88 = *(void *)(v0 + 648);
    uint64_t v37 = *(void *)(v0 + 640);
    uint64_t v38 = *(void *)(v0 + 624);
    uint64_t v39 = *(void *)(v0 + 616);
    uint64_t v77 = v39;
    uint64_t v78 = v37;
    uint64_t v40 = *(void *)(v0 + 608);
    uint64_t v41 = *(void *)(v0 + 600);
    uint64_t v79 = v40;
    uint64_t v80 = v41;
    uint64_t v72 = *(void *)(v0 + 592);
    uint64_t v73 = *(void *)(v0 + 632);
    uint64_t v42 = *(void *)(v0 + 584);
    uint64_t v90 = *(void *)(v0 + 576);
    uint64_t v93 = *(void *)(v0 + 568);
    uint64_t v89 = *(void *)(v0 + 552);
    uint64_t v91 = *(void *)(v0 + 544);
    uint64_t v43 = *(void *)(v0 + 448);
    uint64_t v70 = *(void *)(v0 + 440);
    uint64_t v87 = *(void *)(v0 + 432);
    uint64_t v69 = *(void *)(v0 + 424);
    uint64_t v66 = *(void *)(v0 + 408);
    uint64_t v67 = *(void *)(v0 + 416);
    uint64_t v81 = *(void *)(v0 + 344);
    uint64_t v84 = sub_1001C0FC0();
    uint64_t v82 = *(void *)(v84 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v82 + 56))(v36, 1, 1, v84);
    sub_1001B5A44(v68, v35, type metadata accessor for Proto_Ropes_Common_Attestation);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v37, v66, v39);
    uint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16);
    v44(v40, v67, v90);
    v44(v41, v69, v90);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 16))(v93, v70, v91);
    unint64_t v45 = (*(unsigned __int8 *)(v71 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
    unint64_t v46 = (v74 + *(unsigned __int8 *)(v38 + 80) + v45) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
    uint64_t v47 = *(unsigned __int8 *)(v42 + 80);
    unint64_t v48 = (v73 + v47 + v46) & ~v47;
    unint64_t v49 = (v72 + v47 + v48) & ~v47;
    unint64_t v75 = (v72 + v49 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v50 = (*(unsigned __int8 *)(v89 + 80) + v75 + 8) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80);
    uint64_t v51 = swift_allocObject();
    *(void *)(v51 + 16) = 0;
    *(void *)(v51 + 24) = 0;
    *(void *)(v51 + 32) = v83;
    *(void *)(v51 + 40) = *(void *)(v43 + 88);
    *(_OWORD *)(v51 + 48) = *(_OWORD *)(v43 + 96);
    *(void *)(v51 + 64) = *(void *)(v43 + 112);
    *(void *)(v51 + 72) = v85;
    *(_OWORD *)(v51 + 80) = *(_OWORD *)(v43 + 128);
    *(void *)(v51 + 96) = *(void *)(v43 + 144);
    *(void *)(v51 + 104) = *(void *)(v43 + 152);
    *(void *)(v51 + 112) = v81;
    sub_1001B5AAC(v76, v51 + v45, type metadata accessor for Proto_Ropes_Common_Attestation);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v38 + 32))(v51 + v46, v78, v77);
    os_log_type_t v52 = *(void (**)(unint64_t, uint64_t, uint64_t))(v42 + 32);
    v52(v51 + v48, v79, v90);
    v52(v51 + v49, v80, v90);
    *(void *)(v51 + v75) = v87;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v89 + 32))(v51 + v50, v93, v91);
    sub_10003282C(v86, v88, &qword_10020C3B0);
    LODWORD(v49) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v88, 1, v84);
    swift_retain();
    uint64_t v53 = *(void *)(v0 + 648);
    if (v49 == 1)
    {
      sub_100010360(*(void *)(v0 + 648), &qword_10020C3B0);
    }
    else
    {
      sub_1001C0FB0();
      (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v53, v84);
    }
    if (*(void *)(v51 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v55 = sub_1001C0EA0();
      uint64_t v57 = v56;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v55 = 0;
      uint64_t v57 = 0;
    }
    uint64_t v58 = **(void **)(v0 + 328);
    uint64_t v59 = swift_allocObject();
    *(void *)(v59 + 16) = &unk_10020F548;
    *(void *)(v59 + 24) = v51;
    uint64_t v60 = v57 | v55;
    if (v57 | v55)
    {
      uint64_t v60 = v0 + 232;
      *(void *)(v0 + 232) = 0;
      *(void *)(v0 + 240) = 0;
      *(void *)(v0 + 248) = v55;
      *(void *)(v0 + 256) = v57;
    }
    uint64_t v61 = *(void *)(v0 + 656);
    *(void *)(v0 + 264) = 1;
    *(void *)(v0 + 272) = v60;
    *(void *)(v0 + 280) = v58;
    swift_task_create();
    swift_release();
    sub_100010360(v61, &qword_10020C3B0);
    uint64_t v54 = 10;
  }
  sub_1001B59E4(*(void *)(v0 + 752), type metadata accessor for Proto_Ropes_Common_Attestation);
  *(void *)(v0 + 888) = v54;
  os_log_type_t v62 = (void *)swift_task_alloc();
  *(void *)(v0 + 896) = v62;
  uint64_t WitnessTable = swift_getWitnessTable();
  *os_log_type_t v62 = v0;
  v62[1] = sub_1001ADEEC;
  uint64_t v7 = *(void *)(v0 + 840);
  uint64_t v4 = *(void *)(v0 + 768);
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  uint64_t v9 = v0 + 320;
  return _sScIsE4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKF(v4, v5, v6, v7, WitnessTable, v9);
}

uint64_t sub_1001AF9F4()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1001AFAF0, 0, 0);
}

uint64_t sub_1001AFAF0()
{
  sub_1001B59E4(v0[67], type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[112] = (uint64_t)v1;
  uint64_t WitnessTable = swift_getWitnessTable();
  *uint64_t v1 = v0;
  v1[1] = sub_1001ADEEC;
  uint64_t v3 = v0[105];
  uint64_t v4 = v0[96];
  return _sScIsE4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKF(v4, 0, 0, v3, WitnessTable, v0 + 40);
}

uint64_t sub_1001AFBE8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1001AFCE4, 0, 0);
}

uint64_t sub_1001AFCE4()
{
  uint64_t v40 = v0;
  uint64_t v1 = *(void *)(v0 + 520);
  sub_1001B59E4(*(void *)(v0 + 480), type metadata accessor for RateLimitConfiguration);
  sub_1001B59E4(v1, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
  uint64_t v2 = *(void *)(v0 + 944) + 1;
  if (v2 == *(void *)(v0 + 920))
  {
LABEL_2:
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v0 + 448);
    uint64_t v4 = *(void *)(v3 + 136);
    uint64_t v5 = *(void *)(v3 + 96);
    uint64_t v37 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v4 + 24) + **(int **)(v4 + 24));
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 936) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1001AF9F4;
    return v37(v5, v4);
  }
  else
  {
    uint64_t v8 = v0 + 128;
    while (1)
    {
      *(void *)(v0 + 944) = v2;
      uint64_t v16 = *(void *)(v0 + 568);
      uint64_t v17 = *(void *)(v0 + 520);
      uint64_t v18 = *(void **)(v0 + 512);
      uint64_t v20 = *(void *)(v0 + 464);
      uint64_t v19 = *(void *)(v0 + 472);
      uint64_t v21 = *(void **)(v0 + 456);
      uint64_t v22 = *(void *)(v0 + 344) + *(void *)(v0 + 872);
      sub_1001B5A44(*(void *)(v0 + 912)+ ((*(unsigned __int8 *)(v0 + 968) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 968))+ *(void *)(v0 + 928) * v2, v17, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
      _s20privatecloudcomputed8LRUCacheC10addToCache3now5valueSb10Foundation4DateV_xtFfA__0();
      sub_1001B5A44(v17, (uint64_t)v18, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
      sub_100032890(v22, v8);
      sub_10002E48C(v16, v18, v8, v21);
      int v23 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48))(v21, 1, v20);
      uint64_t v24 = *(void *)(v0 + 456);
      if (v23 != 1) {
        break;
      }
      uint64_t v25 = *(void *)(v0 + 520);
      uint64_t v26 = *(void *)(v0 + 504);
      sub_100010360(v24, &qword_100209380);
      sub_1001B5A44(v25, v26, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
      swift_bridgeObjectRetain_n();
      unint64_t v27 = sub_1001C0330();
      os_log_type_t v28 = sub_1001C11F0();
      BOOL v29 = os_log_type_enabled(v27, v28);
      uint64_t v30 = *(void *)(v0 + 520);
      if (v29)
      {
        uint64_t v10 = *(void *)(v0 + 504);
        uint64_t v9 = *(void *)(v0 + 512);
        uint64_t v12 = *(void *)(v0 + 352);
        unint64_t v11 = *(void *)(v0 + 360);
        uint64_t v13 = swift_slowAlloc();
        uint64_t v39 = swift_slowAlloc();
        *(_DWORD *)uint64_t v13 = 136315394;
        swift_bridgeObjectRetain();
        *(void *)(v13 + 4) = sub_1000DF238(v12, v11, &v39);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v13 + 12) = 2080;
        sub_1001B5A44(v10, v9, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
        uint64_t v8 = v0 + 128;
        uint64_t v14 = sub_1001C0C40();
        *(void *)(v13 + 14) = sub_1000DF238(v14, v15, &v39);
        swift_bridgeObjectRelease();
        sub_1001B59E4(v10, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
        _os_log_impl((void *)&_mh_execute_header, v27, v28, "%s unable to process rate limit configuration %s", (uint8_t *)v13, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        uint64_t v31 = *(void *)(v0 + 504);
        swift_bridgeObjectRelease_n();
        sub_1001B59E4(v31, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
      }

      sub_1001B59E4(v30, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
      uint64_t v2 = *(void *)(v0 + 944) + 1;
      if (v2 == *(void *)(v0 + 920)) {
        goto LABEL_2;
      }
    }
    uint64_t v32 = *(void *)(v0 + 448);
    sub_1001B5AAC(v24, *(void *)(v0 + 480), type metadata accessor for RateLimitConfiguration);
    uint64_t v33 = *(void *)(v32 + 136);
    uint64_t v34 = *(void *)(v32 + 96);
    uint64_t v38 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 + 8) + **(int **)(v33 + 8));
    uint64_t v35 = (void *)swift_task_alloc();
    *(void *)(v0 + 952) = v35;
    *uint64_t v35 = v0;
    v35[1] = sub_1001AFBE8;
    uint64_t v36 = *(void *)(v0 + 480);
    return v38(v36, v34, v33);
  }
}

uint64_t sub_1001B0248()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1001B0344, 0, 0);
}

uint64_t sub_1001B0344()
{
  uint64_t v1 = v0[86];
  uint64_t v2 = v0[85];
  uint64_t v3 = v0[83];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2) != 1)
  {
    uint64_t v6 = *(void (**)(unint64_t, uint64_t, uint64_t))(v1 + 32);
    v6(v0[88], v3, v2);
    uint64_t v7 = sub_1001BFD70();
    if (v7)
    {
      unint64_t v11 = (void *)v0[47];
      if (__OFADD__(*v11, 1))
      {
        __break(1u);
        return TaskGroup.next(isolation:)(v7, v8, v9, v10);
      }
      ++*v11;
    }
    uint64_t v12 = sub_1001BFD40();
    if (v13)
    {
      uint64_t v14 = v12;
      uint64_t v15 = v13;
      uint64_t v16 = (char **)v0[48];
      uint64_t v17 = *v16;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      void *v16 = v17;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v35 = (char **)v0[48];
        uint64_t v17 = sub_1000E3F44(0, *((void *)v17 + 2) + 1, 1, v17);
        *uint64_t v35 = v17;
      }
      unint64_t v20 = *((void *)v17 + 2);
      unint64_t v19 = *((void *)v17 + 3);
      if (v20 >= v19 >> 1)
      {
        uint64_t v36 = (char **)v0[48];
        uint64_t v17 = sub_1000E3F44((char *)(v19 > 1), v20 + 1, 1, v17);
        *uint64_t v36 = v17;
      }
      *((void *)v17 + 2) = v20 + 1;
      uint64_t v21 = &v17[16 * v20];
      *((void *)v21 + 4) = v14;
      *((void *)v21 + 5) = v15;
    }
    (*(void (**)(void, void, void))(v0[86] + 16))(v0[87], v0[88], v0[85]);
    uint64_t v22 = (void (*)(void))sub_1001BFDA0();
    uint64_t v24 = v23;
    unint64_t v25 = *v23;
    char v26 = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v24 = v25;
    if ((v26 & 1) == 0)
    {
      unint64_t v25 = sub_1000E4594(0, *(void *)(v25 + 16) + 1, 1, v25);
      *uint64_t v24 = v25;
    }
    unint64_t v28 = *(void *)(v25 + 16);
    unint64_t v27 = *(void *)(v25 + 24);
    BOOL v29 = v6;
    if (v28 >= v27 >> 1)
    {
      unint64_t v25 = sub_1000E4594(v27 > 1, v28 + 1, 1, v25);
      *uint64_t v24 = v25;
    }
    uint64_t v30 = v0[88];
    uint64_t v31 = v0[87];
    uint64_t v32 = v0[86];
    uint64_t v33 = v0[85];
    *(void *)(v25 + 16) = v28 + 1;
    v29(v25+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(void *)(v32 + 72) * v28, v31, v33);
    v22();
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v33);
    uint64_t v34 = (void *)swift_task_alloc();
    v0[120] = v34;
    uint64_t v10 = sub_100003918(&qword_10020EB28);
    *uint64_t v34 = v0;
    v34[1] = sub_1001B0248;
    uint64_t v7 = v0[83];
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    return TaskGroup.next(isolation:)(v7, v8, v9, v10);
  }
  sub_100010360(v3, &qword_10020EB08);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1001B07C4()
{
  uint64_t v12 = v0;
  (*(void (**)(void, void))(v0[106] + 8))(v0[107], v0[105]);
  uint64_t v1 = v0[40];
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v2 = sub_1001C0330();
  os_log_type_t v3 = sub_1001C11F0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v5 = v0[44];
    unint64_t v4 = v0[45];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    swift_bridgeObjectRetain();
    v0[38] = sub_1000DF238(v5, v4, &v11);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 12) = 2080;
    v0[37] = v1;
    swift_errorRetain();
    sub_100003918(&qword_100208C98);
    uint64_t v7 = sub_1001C0C40();
    v0[39] = sub_1000DF238(v7, v8, &v11);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s response failed: %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();

    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1001B0B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[8] = v10;
  v8[9] = v11;
  _OWORD v8[6] = a7;
  v8[7] = a8;
  v8[4] = a5;
  v8[5] = a6;
  _OWORD v8[2] = a1;
  v8[3] = a4;
  return _swift_task_switch(sub_1001B0BAC, 0, 0);
}

uint64_t sub_1001B0BAC()
{
  char v1 = *(unsigned char *)(v0[3] + *(void *)(*(void *)v0[3] + 248));
  uint64_t v2 = (void *)swift_task_alloc();
  v0[10] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1001874AC;
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[9];
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[4];
  uint64_t v8 = v0[5];
  uint64_t v9 = v0[2];
  return sub_1001B0C6C(v9, v7, v8, v1, v5, v6, v3, v4);
}

uint64_t sub_1001B0C6C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v9 + 496) = a8;
  *(void *)(v9 + 504) = v8;
  *(void *)(v9 + 480) = a6;
  *(void *)(v9 + 488) = a7;
  *(unsigned char *)(v9 + 996) = a4;
  *(void *)(v9 + 464) = a3;
  *(void *)(v9 + 472) = a5;
  *(void *)(v9 + 448) = a1;
  *(void *)(v9 + 456) = a2;
  *(void *)(v9 + 512) = *v8;
  *(void *)(v9 + 520) = type metadata accessor for ThimbledEvent();
  *(void *)(v9 + 528) = swift_task_alloc();
  uint64_t v10 = sub_100003918(&qword_100208A00);
  *(void *)(v9 + 536) = v10;
  *(void *)(v9 + 544) = *(void *)(v10 - 8);
  *(void *)(v9 + 552) = swift_task_alloc();
  uint64_t v11 = sub_1001BF340();
  *(void *)(v9 + 560) = v11;
  *(void *)(v9 + 568) = *(void *)(v11 - 8);
  *(void *)(v9 + 576) = swift_task_alloc();
  uint64_t v12 = sub_1001BF8D0();
  *(void *)(v9 + 584) = v12;
  *(void *)(v9 + 592) = *(void *)(v12 - 8);
  *(void *)(v9 + 600) = swift_task_alloc();
  uint64_t v13 = sub_1001BF450();
  *(void *)(v9 + 608) = v13;
  *(void *)(v9 + 616) = *(void *)(v13 - 8);
  *(void *)(v9 + 624) = swift_task_alloc();
  *(void *)(v9 + 632) = swift_task_alloc();
  *(void *)(v9 + 640) = type metadata accessor for ValidatedAttestation();
  *(void *)(v9 + 648) = swift_task_alloc();
  *(void *)(v9 + 656) = swift_task_alloc();
  uint64_t v14 = sub_1001BF2C0();
  *(void *)(v9 + 664) = v14;
  *(void *)(v9 + 672) = *(void *)(v14 - 8);
  *(void *)(v9 + 680) = swift_task_alloc();
  *(void *)(v9 + 688) = swift_task_alloc();
  uint64_t v15 = sub_1001BFD80();
  *(void *)(v9 + 696) = v15;
  *(void *)(v9 + 704) = *(void *)(v15 - 8);
  *(void *)(v9 + 712) = swift_task_alloc();
  uint64_t v16 = sub_1001BF950();
  *(void *)(v9 + 720) = v16;
  *(void *)(v9 + 728) = *(void *)(v16 - 8);
  *(void *)(v9 + 736) = swift_task_alloc();
  *(void *)(v9 + 744) = type metadata accessor for Proto_Ropes_Common_Attestation(0);
  *(void *)(v9 + 752) = swift_task_alloc();
  *(void *)(v9 + 760) = swift_task_alloc();
  *(void *)(v9 + 768) = swift_task_alloc();
  *(void *)(v9 + 776) = swift_task_alloc();
  *(void *)(v9 + 784) = swift_task_alloc();
  *(void *)(v9 + 792) = swift_task_alloc();
  *(void *)(v9 + 800) = swift_task_alloc();
  *(void *)(v9 + 808) = swift_task_alloc();
  *(void *)(v9 + 816) = swift_task_alloc();
  return _swift_task_switch(sub_1001B10B4, 0, 0);
}

uint64_t sub_1001B10B4()
{
  char v1 = (uint64_t *)v0[102];
  uint64_t v2 = v0[92];
  uint64_t v3 = v0[91];
  uint64_t v16 = v0[90];
  uint64_t v4 = v0[63];
  uint64_t v5 = v0[64];
  uint64_t v6 = v0[58];
  uint64_t v7 = v0[57];
  sub_1001BF310();
  sub_1001B4F10(qword_100207DC0, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v17 = sub_1001C1780();
  uint64_t v18 = v8;
  v20._uint64_t countAndFlagsBits = 58;
  v20._object = (void *)0xE100000000000000;
  sub_1001C0D00(v20);
  v0[103] = v17;
  v0[104] = v18;
  v0[105] = *(void *)(*(void *)v4 + 200);
  sub_1001B5A44(v7, (uint64_t)v1, type metadata accessor for Proto_Ropes_Common_Attestation);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[106] = (uint64_t)v9;
  v0[107] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v9(v2, v6, v16);
  sub_1000BA1C8(v1, v2, v0 + 14);
  uint64_t v10 = *(void *)(v5 + 144);
  v0[108] = v10;
  uint64_t v11 = *(int **)(v10 + 16);
  uint64_t v12 = *(void *)(v5 + 104);
  v0[109] = v12;
  uint64_t v15 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))((char *)v11 + *v11);
  uint64_t v13 = (void *)swift_task_alloc();
  v0[110] = (uint64_t)v13;
  *uint64_t v13 = v0;
  v13[1] = sub_1001B12D8;
  return v15(v0 + 14, v12, v10);
}

uint64_t sub_1001B12D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[111] = a1;
  v4[112] = a2;
  v4[113] = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v5 = sub_1001B3408;
  }
  else
  {
    sub_1001609D0((uint64_t)(v4 + 14));
    uint64_t v5 = sub_1001B13FC;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001B13FC()
{
  uint64_t v22 = v0;
  uint64_t v1 = *(void *)(v0 + 896);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 512);
    *(void *)(v0 + 912) = *(void *)(**(void **)(v0 + 504) + 184);
    uint64_t v3 = *(void *)(v2 + 128);
    *(void *)(v0 + 920) = v3;
    uint64_t v4 = *(int **)(v3 + 56);
    uint64_t v5 = *(void *)(v2 + 88);
    *(void *)(v0 + 928) = v5;
    Swift::String v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v4 + *v4);
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 936) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1001B1928;
    uint64_t v7 = *(void *)(v0 + 888);
    return v20(v7, v1, v5, v3);
  }
  else
  {
    sub_1001B5A44(*(void *)(v0 + 456), *(void *)(v0 + 800), type metadata accessor for Proto_Ropes_Common_Attestation);
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1001C0330();
    os_log_type_t v10 = sub_1001C11F0();
    BOOL v11 = os_log_type_enabled(v9, v10);
    unint64_t v12 = *(void *)(v0 + 832);
    if (v11)
    {
      uint64_t v13 = *(void *)(v0 + 824);
      uint64_t v14 = *(void *)(v0 + 800);
      uint64_t v15 = swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 280) = sub_1000DF238(v13, v12, &v21);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v15 + 12) = 2080;
      uint64_t v16 = *(void *)(v14 + 16);
      unint64_t v17 = *(void *)(v14 + 24);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 288) = sub_1000DF238(v16, v17, &v21);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      sub_1001B59E4(v14, type metadata accessor for Proto_Ropes_Common_Attestation);
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "%s unique identifier for attestation %s missing", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v18 = *(void *)(v0 + 800);

      swift_bridgeObjectRelease_n();
      sub_1001B59E4(v18, type metadata accessor for Proto_Ropes_Common_Attestation);
    }
    (*(void (**)(void, void, void))(*(void *)(v0 + 704) + 104))(*(void *)(v0 + 712), enum case for Prefetch.Response.Node.ValidationResult.noUniqueIdentifier(_:), *(void *)(v0 + 696));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001BFD50();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
    return v19();
  }
}

uint64_t sub_1001B1928(char a1)
{
  *(unsigned char *)(*(void *)v1 + 997) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1001B1A28, 0, 0);
}

uint64_t sub_1001B1A28()
{
  uint64_t v38 = v0;
  if (*(unsigned char *)(v0 + 997) == 1)
  {
    sub_1001B5A44(*(void *)(v0 + 456), *(void *)(v0 + 808), type metadata accessor for Proto_Ropes_Common_Attestation);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v1 = sub_1001C0330();
    os_log_type_t v2 = sub_1001C1200();
    BOOL v3 = os_log_type_enabled(v1, v2);
    unint64_t v4 = *(void *)(v0 + 896);
    if (v3)
    {
      uint64_t v32 = *(void *)(v0 + 888);
      unint64_t v5 = *(void *)(v0 + 832);
      uint64_t v6 = *(void *)(v0 + 824);
      os_log_type_t type = v2;
      uint64_t v7 = *(void *)(v0 + 808);
      uint64_t v8 = swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136315650;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 424) = sub_1000DF238(v6, v5, &v37);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v8 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 432) = sub_1000DF238(v32, v4, &v37);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v8 + 22) = 2080;
      uint64_t v9 = *(void *)(v7 + 16);
      unint64_t v10 = *(void *)(v7 + 24);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 440) = sub_1000DF238(v9, v10, &v37);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      sub_1001B59E4(v7, type metadata accessor for Proto_Ropes_Common_Attestation);
      _os_log_impl((void *)&_mh_execute_header, v1, type, "%s node exists in store for attestation %s %s", (uint8_t *)v8, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v22 = *(void *)(v0 + 808);

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      sub_1001B59E4(v22, type metadata accessor for Proto_Ropes_Common_Attestation);
    }
    uint64_t v23 = *(void *)(v0 + 896);
    char v24 = *(unsigned char *)(v0 + 996);
    uint64_t v34 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, BOOL, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(v0 + 920) + 64) + **(int **)(*(void *)(v0 + 920) + 64));
    unint64_t v25 = (void *)swift_task_alloc();
    *(void *)(v0 + 944) = v25;
    *unint64_t v25 = v0;
    v25[1] = sub_1001B1F34;
    uint64_t v26 = *(void *)(v0 + 928);
    uint64_t v27 = *(void *)(v0 + 920);
    uint64_t v28 = *(void *)(v0 + 888);
    uint64_t v29 = *(void *)(v0 + 488);
    uint64_t v30 = *(void *)(v0 + 496);
    uint64_t v31 = *(void *)(v0 + 464);
    return v34(v31, v28, v23, (v24 & 1) == 0, v29, v30, v26, v27);
  }
  else
  {
    BOOL v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 848);
    *(void *)os_log_type_t typea = *(void *)(v0 + 864);
    unint64_t v12 = *(uint64_t **)(v0 + 816);
    uint64_t v13 = *(void *)(v0 + 736);
    uint64_t v14 = *(void *)(v0 + 720);
    uint64_t v16 = *(void *)(v0 + 456);
    uint64_t v15 = *(void *)(v0 + 464);
    swift_bridgeObjectRelease();
    sub_1001BF2B0();
    sub_1001B5A44(v16, (uint64_t)v12, type metadata accessor for Proto_Ropes_Common_Attestation);
    v11(v13, v15, v14);
    sub_1000BA1C8(v12, v13, (uint64_t *)(v0 + 16));
    uint64_t v33 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)typea + 8)
                                                                     + **(int **)(*(void *)typea + 8));
    unint64_t v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 952) = v17;
    *unint64_t v17 = v0;
    v17[1] = sub_1001B2290;
    uint64_t v18 = *(void *)(v0 + 872);
    uint64_t v19 = *(void *)(v0 + 864);
    uint64_t v20 = *(void *)(v0 + 656);
    return v33(v20, v0 + 16, v18, v19);
  }
}

uint64_t sub_1001B1F34(char a1)
{
  *(unsigned char *)(*(void *)v1 + 998) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1001B2034, 0, 0);
}

uint64_t sub_1001B2034()
{
  if (*(unsigned char *)(v0 + 998)) {
    uint64_t v1 = (unsigned int *)&enum case for Prefetch.Response.Node.ValidationResult.nodeAlreadyExistsInBatch(_:);
  }
  else {
    uint64_t v1 = (unsigned int *)&enum case for Prefetch.Response.Node.ValidationResult.validationNotNeeded(_:);
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 704) + 104))(*(void *)(v0 + 712), *v1, *(void *)(v0 + 696));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001BFD50();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1001B2290()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 960) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1001B3878;
  }
  else
  {
    sub_1001609D0(v2 + 16);
    uint64_t v3 = sub_1001B23AC;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001B23AC()
{
  uint64_t v54 = v0;
  uint64_t v1 = *(void *)(v0 + 640);
  uint64_t v2 = (void *)(*(void *)(v0 + 656) + *(int *)(v1 + 28));
  *(void *)(v0 + 968) = *v2;
  uint64_t v3 = v2[1];
  *(void *)(v0 + 976) = v3;
  if (!v3)
  {
    sub_1001B5A44(*(void *)(v0 + 456), *(void *)(v0 + 768), type metadata accessor for Proto_Ropes_Common_Attestation);
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1001C0330();
    uint64_t v21 = sub_1001C11F0();
    BOOL v22 = os_log_type_enabled(v20, (os_log_type_t)v21);
    unint64_t v23 = *(void *)(v0 + 832);
    if (v22)
    {
      uint64_t v24 = *(void *)(v0 + 824);
      uint64_t v25 = *(void *)(v0 + 768);
      uint64_t v26 = swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 352) = sub_1000DF238(v24, v23, &v53);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v26 + 12) = 2080;
      uint64_t v27 = *(void *)(v25 + 16);
      unint64_t v28 = *(void *)(v25 + 24);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 360) = sub_1000DF238(v27, v28, &v53);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      sub_1001B59E4(v25, type metadata accessor for Proto_Ropes_Common_Attestation);
      _os_log_impl((void *)&_mh_execute_header, v20, (os_log_type_t)v21, "%s attestation validation did not return a unique id for attestation: %s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v38 = *(void *)(v0 + 768);

      swift_bridgeObjectRelease_n();
      sub_1001B59E4(v38, type metadata accessor for Proto_Ropes_Common_Attestation);
    }
    uint64_t v39 = *(void *)(v0 + 712);
    uint64_t v40 = *(void *)(v0 + 704);
    uint64_t v41 = *(void *)(v0 + 696);
    uint64_t v52 = *(void *)(v0 + 688);
    uint64_t v42 = *(void *)(v0 + 672);
    uint64_t v48 = *(void *)(v0 + 656);
    uint64_t v50 = *(void *)(v0 + 664);
    uint64_t v43 = (unsigned int *)&enum case for Prefetch.Response.Node.ValidationResult.noUniqueIdentifier(_:);
    goto LABEL_14;
  }
  *(_DWORD *)(v0 + 992) = *(_DWORD *)(v1 + 24);
  swift_bridgeObjectRetain();
  sub_1001BF270();
  if (v4 > 172800.0)
  {
    uint64_t v5 = *(void *)(v0 + 792);
    uint64_t v6 = *(void *)(v0 + 656);
    uint64_t v7 = *(void *)(v0 + 648);
    uint64_t v8 = *(void *)(v0 + 456);
    swift_bridgeObjectRelease();
    sub_1001B5A44(v8, v5, type metadata accessor for Proto_Ropes_Common_Attestation);
    sub_1001B5A44(v6, v7, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1001C0330();
    os_log_type_t v10 = sub_1001C11F0();
    BOOL v11 = os_log_type_enabled(v9, v10);
    unint64_t v12 = *(void *)(v0 + 832);
    if (v11)
    {
      uint64_t v13 = *(void *)(v0 + 824);
      os_log_type_t v51 = v10;
      uint64_t v14 = *(void *)(v0 + 792);
      uint64_t v47 = *(void *)(v0 + 648);
      uint64_t v15 = swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315650;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 400) = sub_1000DF238(v13, v12, &v53);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v15 + 12) = 2080;
      uint64_t v16 = *(void *)(v14 + 16);
      unint64_t v17 = *(void *)(v14 + 24);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 408) = sub_1000DF238(v16, v17, &v53);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      sub_1001B59E4(v14, type metadata accessor for Proto_Ropes_Common_Attestation);
      *(_WORD *)(v15 + 22) = 2080;
      sub_1001B4F10(&qword_10020C558, (void (*)(uint64_t))&type metadata accessor for Date);
      uint64_t v18 = sub_1001C1780();
      *(void *)(v0 + 416) = sub_1000DF238(v18, v19, &v53);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      sub_1001B59E4(v47, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
      _os_log_impl((void *)&_mh_execute_header, v9, v51, "%s attestation validation returned too long expiration for attestation: %s; expiry: %s",
        (uint8_t *)v15,
        0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v44 = *(void *)(v0 + 792);
      uint64_t v45 = *(void *)(v0 + 648);

      swift_bridgeObjectRelease_n();
      sub_1001B59E4(v44, type metadata accessor for Proto_Ropes_Common_Attestation);
      sub_1001B59E4(v45, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
    }
    uint64_t v39 = *(void *)(v0 + 712);
    uint64_t v40 = *(void *)(v0 + 704);
    uint64_t v41 = *(void *)(v0 + 696);
    uint64_t v52 = *(void *)(v0 + 688);
    uint64_t v42 = *(void *)(v0 + 672);
    uint64_t v48 = *(void *)(v0 + 656);
    uint64_t v50 = *(void *)(v0 + 664);
    uint64_t v43 = (unsigned int *)&enum case for Prefetch.Response.Node.ValidationResult.validatedExpiryTooLarge(_:);
LABEL_14:
    (*(void (**)(uint64_t, void, uint64_t))(v40 + 104))(v39, *v43, v41);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001BFD50();
    sub_1001B59E4(v48, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v52, v50);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v46 = *(uint64_t (**)(void))(v0 + 8);
    return v46();
  }
  char v29 = *(unsigned char *)(v0 + 996);
  unint64_t v49 = (uint64_t (*)(uint64_t, uint64_t, BOOL, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(v0 + 920) + 8)
                                                                                           + **(int **)(*(void *)(v0 + 920) + 8));
  uint64_t v30 = (void *)swift_task_alloc();
  *(void *)(v0 + 984) = v30;
  *uint64_t v30 = v0;
  v30[1] = sub_1001B2CB8;
  uint64_t v31 = *(void *)(v0 + 928);
  uint64_t v32 = *(void *)(v0 + 920);
  uint64_t v33 = *(void *)(v0 + 488);
  uint64_t v34 = *(void *)(v0 + 496);
  uint64_t v35 = *(void *)(v0 + 464);
  uint64_t v36 = *(void *)(v0 + 656);
  return v49(v36, v35, (v29 & 1) == 0, v33, v34, v31, v32);
}

uint64_t sub_1001B2CB8(char a1)
{
  *(unsigned char *)(*(void *)v1 + 999) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1001B2DB8, 0, 0);
}

uint64_t sub_1001B2DB8()
{
  uint64_t v33 = v0;
  uint64_t v1 = *(void *)(v0 + 456);
  if (*(unsigned char *)(v0 + 999) == 1)
  {
    sub_1001B5A44(v1, *(void *)(v0 + 784), type metadata accessor for Proto_Ropes_Common_Attestation);
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1001C0330();
    os_log_type_t v3 = sub_1001C1200();
    BOOL v4 = os_log_type_enabled(v2, v3);
    unint64_t v5 = *(void *)(v0 + 832);
    if (v4)
    {
      uint64_t v6 = *(void *)(v0 + 824);
      uint64_t v7 = *(void *)(v0 + 784);
      uint64_t v8 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 384) = sub_1000DF238(v6, v5, &v32);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v8 + 12) = 2080;
      uint64_t v9 = *(void *)(v7 + 16);
      unint64_t v10 = *(void *)(v7 + 24);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 392) = sub_1000DF238(v9, v10, &v32);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      sub_1001B59E4(v7, type metadata accessor for Proto_Ropes_Common_Attestation);
      BOOL v11 = "%s successfully saved attestation for node: %s";
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v2, v3, v11, (uint8_t *)v8, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      goto LABEL_10;
    }
    uint64_t v18 = *(void *)(v0 + 784);
  }
  else
  {
    sub_1001B5A44(v1, *(void *)(v0 + 776), type metadata accessor for Proto_Ropes_Common_Attestation);
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1001C0330();
    os_log_type_t v3 = sub_1001C1200();
    BOOL v12 = os_log_type_enabled(v2, v3);
    unint64_t v13 = *(void *)(v0 + 832);
    if (v12)
    {
      uint64_t v14 = *(void *)(v0 + 824);
      uint64_t v15 = *(void *)(v0 + 776);
      uint64_t v8 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 368) = sub_1000DF238(v14, v13, &v32);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v8 + 12) = 2080;
      uint64_t v16 = *(void *)(v15 + 16);
      unint64_t v17 = *(void *)(v15 + 24);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 376) = sub_1000DF238(v16, v17, &v32);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      sub_1001B59E4(v15, type metadata accessor for Proto_Ropes_Common_Attestation);
      BOOL v11 = "%s failed to save attestation for node: %s";
      goto LABEL_6;
    }
    uint64_t v18 = *(void *)(v0 + 776);
  }

  swift_bridgeObjectRelease_n();
  sub_1001B59E4(v18, type metadata accessor for Proto_Ropes_Common_Attestation);
LABEL_10:
  unint64_t v19 = *(uint64_t **)(v0 + 712);
  uint64_t v20 = *(void *)(v0 + 704);
  uint64_t v30 = *(void *)(v0 + 696);
  uint64_t v31 = *(void *)(v0 + 688);
  uint64_t v21 = *(void *)(v0 + 672);
  uint64_t v22 = *(void *)(v0 + 664);
  uint64_t v23 = *(void *)(v0 + 656);
  uint64_t v29 = v23 + *(int *)(v0 + 992);
  uint64_t v24 = (char *)v19 + *(int *)(sub_100003918(&qword_10020EB50) + 48);
  uint64_t v26 = *(void *)(v23 + 96);
  unint64_t v25 = *(void *)(v23 + 104);
  *unint64_t v19 = v26;
  v19[1] = v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v24, v29, v22);
  (*(void (**)(uint64_t *, void, uint64_t))(v20 + 104))(v19, enum case for Prefetch.Response.Node.ValidationResult.valid(_:), v30);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100007B14(v26, v25);
  sub_1001BFD50();
  sub_1001B59E4(v23, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v31, v22);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
  return v27();
}

uint64_t sub_1001B3408()
{
  unint64_t v19 = v0;
  uint64_t v1 = v0[95];
  uint64_t v2 = v0[57];
  sub_1001609D0((uint64_t)(v0 + 14));
  sub_1001B5A44(v2, v1, type metadata accessor for Proto_Ropes_Common_Attestation);
  swift_bridgeObjectRetain();
  os_log_type_t v3 = sub_1001C0330();
  os_log_type_t v4 = sub_1001C11F0();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = v0[104];
    uint64_t v6 = v0[103];
    uint64_t v7 = v0[95];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315394;
    swift_bridgeObjectRetain();
    v0[37] = sub_1000DF238(v6, v5, &v18);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    uint64_t v9 = *(void *)(v7 + 16);
    unint64_t v10 = *(void *)(v7 + 24);
    swift_bridgeObjectRetain();
    v0[34] = sub_1000DF238(v9, v10, &v18);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    sub_1001B59E4(v7, type metadata accessor for Proto_Ropes_Common_Attestation);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s unable to check the unique id of the attestation and hence skipping validation: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v11 = v0[95];

    swift_bridgeObjectRelease_n();
    sub_1001B59E4(v11, type metadata accessor for Proto_Ropes_Common_Attestation);
  }
  BOOL v12 = (uint64_t *)v0[89];
  uint64_t v13 = v0[88];
  uint64_t v17 = v0[87];
  v0[39] = v0[113];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  sub_100003918(&qword_100208C98);
  *BOOL v12 = sub_1001C0C40();
  v12[1] = v14;
  (*(void (**)(uint64_t *, void, uint64_t))(v13 + 104))(v12, enum case for Prefetch.Response.Node.ValidationResult.invalid(_:), v17);
  sub_1001BFD50();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_1001B3878()
{
  uint64_t v119 = v0;
  uint64_t v1 = v0[94];
  uint64_t v2 = v0[57];
  sub_1001609D0((uint64_t)(v0 + 2));
  sub_1001B5A44(v2, v1, type metadata accessor for Proto_Ropes_Common_Attestation);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  os_log_type_t v3 = sub_1001C0330();
  os_log_type_t v4 = sub_1001C11F0();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = v0[104];
    uint64_t v6 = v0[103];
    uint64_t v7 = v0[94];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v115 = (void *)swift_slowAlloc();
    v118[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315650;
    swift_bridgeObjectRetain();
    v0[41] = sub_1000DF238(v6, v5, v118);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    uint64_t v9 = *(void *)(v7 + 16);
    unint64_t v10 = *(void *)(v7 + 24);
    swift_bridgeObjectRetain();
    v0[42] = sub_1000DF238(v9, v10, v118);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    sub_1001B59E4(v7, type metadata accessor for Proto_Ropes_Common_Attestation);
    *(_WORD *)(v8 + 22) = 2112;
    swift_errorRetain();
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    v0[43] = v11;
    sub_1001C1310();
    *uint64_t v115 = v11;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s attestation validation failed for node: %s with error: %@", (uint8_t *)v8, 0x20u);
    sub_100003918(&qword_100207DA8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v12 = v0[94];

    swift_bridgeObjectRelease_n();
    sub_1001B59E4(v12, type metadata accessor for Proto_Ropes_Common_Attestation);
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v13 = v0[85];
  uint64_t v14 = v0[84];
  uint64_t v110 = v0[83];
  uint64_t v15 = (uint64_t *)v0[79];
  uint64_t v16 = v0[78];
  uint64_t v17 = v0[77];
  uint64_t v18 = v0[76];
  unint64_t v19 = (uint64_t *)(v0[63] + *(void *)(*(void *)v0[63] + 256));
  uint64_t v20 = v19[1];
  uint64_t v105 = *v19;
  swift_bridgeObjectRetain();
  unint64_t v21 = sub_10005523C((uint64_t)_swiftEmptyArrayStorage);
  uint64_t *v15 = sub_1001BF2D0();
  v15[1] = v22;
  unsigned int v113 = enum case for EventValue.string(_:);
  uint64_t v112 = *(void (**)(uint64_t *))(v17 + 104);
  v112(v15);
  uint64_t v116 = v15;
  uint64_t v111 = *(void (**)(uint64_t, uint64_t *, uint64_t))(v17 + 32);
  v111(v16, v15, v18);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v118[0] = v21;
  sub_1000EB0EC(v16, 8, isUniquelyReferenced_nonNull_native);
  uint64_t v24 = v118[0];
  swift_bridgeObjectRelease();
  sub_1001BF2B0();
  sub_1001BF280();
  double v26 = v25;
  uint64_t v109 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8);
  uint64_t result = v109(v13, v110);
  if ((~*(void *)&v26 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (v26 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v26 >= 9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v106 = v20;
  unint64_t v28 = (uint64_t *)v0[79];
  uint64_t v29 = v0[78];
  uint64_t v30 = v0[76];
  uint64_t v95 = v0[75];
  uint64_t v99 = v0[74];
  uint64_t v101 = v0[73];
  uint64_t v31 = v0[63];
  uint64_t v32 = v0[64];
  *unint64_t v28 = (uint64_t)v26;
  unsigned int v92 = enum case for EventValue.int(_:);
  v112(v28);
  uint64_t v107 = v29;
  v111(v29, v28, v30);
  char v33 = swift_isUniquelyReferenced_nonNull_native();
  v118[0] = v24;
  sub_1000EB0EC(v29, 0, v33);
  uint64_t v97 = v118[0];
  swift_bridgeObjectRelease();
  uint64_t v34 = (void *)(v31 + *(void *)(*(void *)v31 + 208));
  uint64_t v35 = (void (*)(char *, uint64_t, uint64_t))v34[3];
  uint64_t v36 = v34[4];
  sub_10000D934(v34, (uint64_t)v35);
  uint64_t v37 = v31 + *(void *)(*(void *)v31 + 224);
  uint64_t v38 = *(void *)(v32 + 112);
  v0[29] = v38;
  uint64_t v94 = *(void *)(v32 + 152);
  v0[30] = v94;
  uint64_t v39 = sub_10000395C(v0 + 26);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v39, v37, v38);
  TC2Configuration.environment(systemInfo:)((uint64_t)(v0 + 26), v35, v36, v95);
  sub_100003E90((uint64_t)(v0 + 26));
  uint64_t v40 = sub_1001BF8A0();
  uint64_t v42 = v41;
  (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v95, v101);
  *unint64_t v28 = v40;
  v116[1] = v42;
  ((void (*)(uint64_t *, void, uint64_t))v112)(v28, v113, v30);
  v111(v107, v28, v30);
  char v43 = swift_isUniquelyReferenced_nonNull_native();
  v118[0] = v97;
  sub_1000EB0EC(v107, 1, v43);
  uint64_t v44 = v118[0];
  swift_bridgeObjectRelease();
  *unint64_t v28 = (*(uint64_t (**)(uint64_t))(v94 + 88))(v38);
  v116[1] = v45;
  ((void (*)(uint64_t *, void, uint64_t))v112)(v28, v113, v30);
  v111(v107, v28, v30);
  char v46 = swift_isUniquelyReferenced_nonNull_native();
  v118[0] = v44;
  sub_1000EB0EC(v107, 2, v46);
  uint64_t v47 = v118[0];
  swift_bridgeObjectRelease();
  uint64_t v48 = (uint64_t *)(v31 + *(void *)(*(void *)v31 + 264));
  uint64_t v49 = v48[1];
  if (v49)
  {
    uint64_t v50 = (uint64_t *)v0[79];
    uint64_t v51 = v0[78];
    uint64_t v52 = v0[76];
    *uint64_t v50 = *v48;
    v116[1] = v49;
    uint64_t v53 = v112;
    ((void (*)(uint64_t *, void, uint64_t))v112)(v50, v113, v52);
    v111(v51, v50, v52);
    swift_bridgeObjectRetain();
    char v54 = swift_isUniquelyReferenced_nonNull_native();
    v118[0] = v47;
    sub_1000EB0EC(v51, 3, v54);
    uint64_t v47 = v118[0];
    swift_bridgeObjectRelease();
    uint64_t v55 = v106;
    if (!v106) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v55 = v106;
  uint64_t v53 = v112;
  if (v106)
  {
LABEL_9:
    uint64_t v56 = (uint64_t *)v0[79];
    uint64_t v57 = v0[78];
    uint64_t v58 = v0[76];
    *uint64_t v56 = v105;
    v116[1] = v55;
    ((void (*)(uint64_t *, void, uint64_t))v53)(v56, v113, v58);
    v111(v57, v56, v58);
    swift_bridgeObjectRetain();
    char v59 = swift_isUniquelyReferenced_nonNull_native();
    v118[0] = v47;
    sub_1000EB0EC(v57, 5, v59);
    uint64_t v47 = v118[0];
    swift_bridgeObjectRelease();
  }
LABEL_10:
  uint64_t v98 = v0[85];
  uint64_t v102 = v0[83];
  uint64_t v60 = (unint64_t *)v0[79];
  uint64_t v61 = v0[78];
  uint64_t v62 = v0[76];
  uint64_t v63 = v0[72];
  uint64_t v64 = v0[71];
  uint64_t v65 = v0[70];
  uint64_t v108 = v0[57];
  sub_1001BF330();
  uint64_t v66 = sub_1001BF320();
  uint64_t v68 = v67;
  (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v63, v65);
  unint64_t *v60 = v66;
  v116[1] = v68;
  ((void (*)(unint64_t *, void, uint64_t))v112)(v60, v113, v62);
  v111(v61, (uint64_t *)v60, v62);
  char v69 = swift_isUniquelyReferenced_nonNull_native();
  v118[0] = v47;
  sub_1000EB0EC(v61, 7, v69);
  uint64_t v70 = v118[0];
  swift_bridgeObjectRelease();
  sub_1001BF440();
  v111(v61, (uint64_t *)v60, v62);
  char v71 = swift_isUniquelyReferenced_nonNull_native();
  v118[0] = v70;
  sub_1000EB0EC(v61, 9, v71);
  uint64_t v72 = v118[0];
  swift_bridgeObjectRelease();
  uint64_t v73 = *(void *)(v108 + 24);
  unint64_t *v60 = *(void *)(v108 + 16);
  v116[1] = v73;
  ((void (*)(unint64_t *, void, uint64_t))v112)(v60, v113, v62);
  v111(v61, (uint64_t *)v60, v62);
  swift_bridgeObjectRetain();
  char v74 = swift_isUniquelyReferenced_nonNull_native();
  v118[0] = v72;
  sub_1000EB0EC(v61, 11, v74);
  uint64_t v75 = v118[0];
  swift_bridgeObjectRelease();
  swift_getErrorValue();
  Error.telemetryString.getter(v0[32], v0[33], v60);
  v111(v61, (uint64_t *)v60, v62);
  char v76 = swift_isUniquelyReferenced_nonNull_native();
  v118[0] = v75;
  sub_1000EB0EC(v61, 10, v76);
  uint64_t v77 = v118[0];
  swift_bridgeObjectRelease();
  sub_1001BF2B0();
  sub_1001BF210();
  double v79 = v78;
  uint64_t result = v109(v98, v102);
  double v80 = v79 * 1000.0;
  if ((~COERCE__INT64(v79 * 1000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v80 <= -9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v80 >= 9.22337204e18)
  {
LABEL_23:
    __break(1u);
    return result;
  }
  uint64_t v96 = v0[120];
  uint64_t v100 = (uint64_t *)v0[89];
  uint64_t v103 = v0[88];
  uint64_t v104 = v0[87];
  uint64_t v114 = v0[83];
  uint64_t v117 = v0[86];
  uint64_t v81 = (uint64_t *)v0[79];
  uint64_t v82 = v0[78];
  uint64_t v83 = v0[76];
  uint64_t v84 = v0[68];
  uint64_t v93 = v0[67];
  uint64_t v85 = (void *)v0[66];
  uint64_t v91 = v0[69];
  *uint64_t v81 = (uint64_t)v80;
  ((void (*)(uint64_t *, void, uint64_t))v112)(v81, v92, v83);
  v111(v82, v81, v83);
  char v86 = swift_isUniquelyReferenced_nonNull_native();
  v118[0] = v77;
  sub_1000EB0EC(v82, 12, v86);
  uint64_t v87 = v118[0];
  swift_bridgeObjectRelease();
  v85[3] = &type metadata for TC2AttestationnVerificationErrorMetric;
  v85[4] = sub_100160F8C();
  uint64_t v88 = (void *)swift_allocObject();
  *uint64_t v85 = v88;
  v88[2] = 0xD000000000000015;
  v88[3] = 0x80000001001C6770;
  v88[4] = v87;
  v88[5] = v105;
  v88[6] = v106;
  swift_storeEnumTagMultiPayload();
  sub_100003918(qword_100208000);
  sub_1001C0FE0();
  (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v91, v93);
  v0[40] = v96;
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100003918(&qword_100208C98);
  uint64_t *v100 = sub_1001C0C40();
  v100[1] = v89;
  (*(void (**)(uint64_t *, void, uint64_t))(v103 + 104))(v100, enum case for Prefetch.Response.Node.ValidationResult.invalid(_:), v104);
  sub_1001BFD50();
  swift_errorRelease();
  v109(v117, v114);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v90 = (uint64_t (*)(void))v0[1];
  return v90();
}

void sub_1001B4724(uint64_t a1, uint64_t a2, unint64_t a3)
{
}

void sub_1001B4730(uint64_t a1, uint64_t a2, unint64_t a3, const char *a4)
{
  swift_bridgeObjectRetain_n();
  osos_log_t log = sub_1001C0330();
  os_log_type_t v7 = sub_1001C1200();
  if (os_log_type_enabled(oslog, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    swift_bridgeObjectRetain();
    sub_1000DF238(a2, a3, &v10);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, oslog, v7, a4, v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1001B48C8()
{
  uint64_t v1 = *(void **)v0;
  swift_release();
  uint64_t v2 = v0 + qword_10020F458;
  uint64_t v3 = sub_1001C0340();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  (*(void (**)(uint64_t))(*(void *)(v1[10] - 8) + 8))(v0 + *(void *)(*(void *)v0 + 176));
  (*(void (**)(uint64_t))(*(void *)(v1[11] - 8) + 8))(v0 + *(void *)(*(void *)v0 + 184));
  (*(void (**)(uint64_t))(*(void *)(v1[12] - 8) + 8))(v0 + *(void *)(*(void *)v0 + 192));
  (*(void (**)(uint64_t))(*(void *)(v1[13] - 8) + 8))(v0 + *(void *)(*(void *)v0 + 200));
  sub_100003E90(v0 + *(void *)(*(void *)v0 + 208));
  swift_release();
  (*(void (**)(uint64_t))(*(void *)(v1[14] - 8) + 8))(v0 + *(void *)(*(void *)v0 + 224));
  uint64_t v4 = v0 + *(void *)(*(void *)v0 + 232);
  uint64_t v5 = sub_1001BF950();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v0 + *(void *)(*(void *)v0 + 240);
  uint64_t v7 = sub_100003918(qword_100208000);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v0 + *(void *)(*(void *)v0 + 280);
  uint64_t v9 = sub_1001BF310();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  return v0;
}

uint64_t sub_1001B4C50()
{
  sub_1001B48C8();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TC2BatchedPrefetch()
{
  return swift_getGenericMetadata();
}

ValueMetadata *type metadata accessor for TC2FetchType()
{
  return &type metadata for TC2FetchType;
}

unint64_t sub_1001B4CD0()
{
  unint64_t result = qword_10020C088;
  if (!qword_10020C088)
  {
    sub_1000166C8(&qword_10020C080);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020C088);
  }
  return result;
}

uint64_t sub_1001B4D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = (uint64_t *)v4[2];
  uint64_t v11 = v4[3];
  uint64_t v12 = v4[4];
  uint64_t v13 = v4[5];
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v14;
  *uint64_t v14 = v5;
  v14[1] = sub_1000074CC;
  return sub_1001AAD7C(a1, a2, a3, a4, v10, v11, v12, v13);
}

unint64_t sub_1001B4E68()
{
  unint64_t result = qword_10020F500;
  if (!qword_10020F500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020F500);
  }
  return result;
}

unint64_t sub_1001B4EBC()
{
  unint64_t result = qword_10020F508;
  if (!qword_10020F508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10020F508);
  }
  return result;
}

uint64_t sub_1001B4F10(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001B4F58()
{
  uint64_t v1 = sub_1001BF950();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 120) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1001B5038(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1001BF950() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (void *)v1[12];
  uint64_t v7 = v1[13];
  uint64_t v8 = v1[14];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = *(void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_1000A12C8;
  return sub_1001ACDF4(a1, v6, v7, v8, v9, v10);
}

uint64_t sub_1001B5160()
{
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001B51A0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000A12C8;
  return sub_100183AC0(a1, v4, v5, v6);
}

uint64_t sub_1001B5250(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = (uint64_t *)v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v9 = v2[6];
  uint64_t v10 = v2[7];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v11;
  void *v11 = v3;
  v11[1] = sub_1000A12C8;
  return sub_1001AD6E4(a1, a2, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1001B536C()
{
  uint64_t v1 = type metadata accessor for Proto_Ropes_Common_Attestation(0);
  uint64_t v23 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v22 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v29 = sub_1001BF950();
  uint64_t v27 = *(void *)(v29 - 8);
  uint64_t v2 = *(unsigned __int8 *)(v27 + 80);
  uint64_t v21 = *(void *)(v27 + 64);
  uint64_t v28 = sub_1001BF310();
  uint64_t v3 = *(void *)(v28 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v20 = *(void *)(v3 + 64);
  uint64_t v5 = sub_1001BF2C0();
  uint64_t v25 = *(void *)(v5 - 8);
  uint64_t v26 = v5;
  uint64_t v6 = *(unsigned __int8 *)(v25 + 80);
  uint64_t v19 = *(void *)(v25 + 64);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v24 = (v23 + 120) & ~v23;
  sub_10000792C(*(void *)(v0 + v24), *(void *)(v0 + v24 + 8));
  swift_bridgeObjectRelease();
  uint64_t v7 = v0 + v24 + *(int *)(v1 + 24);
  uint64_t v8 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v0 + v24 + *(int *)(v1 + 32);
  uint64_t v10 = sub_1001BFDF0();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v23 | v2 | v4 | v6 | 7;
  uint64_t v13 = (v24 + v22 + v2) & ~v2;
  uint64_t v14 = (v13 + v21 + v4) & ~v4;
  uint64_t v15 = (v20 + v4 + v14) & ~v4;
  unint64_t v16 = (v6 + ((v20 + v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v0 + v13, v29);
  uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v17(v0 + v14, v28);
  v17(v0 + v15, v28);
  (*(void (**)(unint64_t, uint64_t))(v25 + 8))(v0 + v16, v26);
  return _swift_deallocObject(v0, v16 + v19, v12);
}

uint64_t sub_1001B5720(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Proto_Ropes_Common_Attestation(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(sub_1001BF950() - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(sub_1001BF310() - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  unint64_t v12 = (v8 + v9 + v11) & ~v11;
  uint64_t v13 = *(void *)(v10 + 64);
  unint64_t v14 = (v13 + v11 + v12) & ~v11;
  unint64_t v15 = (v13 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v16 = *(unsigned __int8 *)(*(void *)(sub_1001BF2C0() - 8) + 80);
  uint64_t v17 = v16 + v15 + 8;
  uint64_t v18 = *(void *)(v1 + 112);
  uint64_t v19 = v1 + v5;
  uint64_t v20 = v1 + v8;
  uint64_t v21 = v1 + v12;
  uint64_t v22 = v1 + v14;
  uint64_t v23 = *(void *)(v1 + v15);
  uint64_t v24 = v1 + (v17 & ~v16);
  uint64_t v25 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v25;
  *uint64_t v25 = v2;
  v25[8] = v23;
  v25[9] = v24;
  v25[6] = v21;
  v25[7] = v22;
  v25[4] = v19;
  v25[5] = v20;
  void v25[2] = a1;
  v25[3] = v18;
  v25[1] = sub_1000074CC;
  return _swift_task_switch(sub_1001B0BAC, 0, 0);
}

uint64_t sub_1001B5964()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B599C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001B59E4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1001B5A44(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001B5AAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001B5B14()
{
  uint64_t v1 = v0;
  swift_retain_n();
  uint64_t v2 = sub_1001C0330();
  os_log_type_t v3 = sub_1001C11E0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_logPrefix);
    unint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_logPrefix + 8);
    swift_bridgeObjectRetain();
    sub_1000DF238(v5, v6, &v8);
    sub_1001C1310();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s start", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  return sub_1001C0620();
}

uint64_t sub_1001B5CA8()
{
  uint64_t v1 = sub_100003918(&qword_100208640);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100003918(&qword_10020F728);
  uint64_t v8 = __chkstk_darwin(v6 - 8, v7);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v8, v11);
  unint64_t v14 = (char *)&v40 - v13;
  if (*(unsigned __int8 *)(v0 + 128) != 255) {
    return result;
  }
  swift_beginAccess();
  uint64_t v15 = *(void *)(v0 + 112);
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v41 = v0;
  uint64_t v42 = v15 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(v15 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  uint64_t v44 = v2 + 16;
  uint64_t v45 = v2;
  uint64_t v46 = v15;
  uint64_t v47 = (void (**)(char *, char *, uint64_t))(v2 + 32);
  uint64_t v20 = (void (**)(char *, uint64_t))(v2 + 8);
  int64_t v43 = (unint64_t)(v17 + 63) >> 6;
  int64_t v40 = v43 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v48 = 0;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_7:
  unint64_t v22 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  unint64_t v23 = v22 | (v48 << 6);
  while (2)
  {
    uint64_t v24 = v46;
    uint64_t v25 = *(void *)(v46 + 48);
    uint64_t v26 = sub_1001BF310();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v10, v25 + *(void *)(*(void *)(v26 - 8) + 72) * v23, v26);
    uint64_t v27 = *(void *)(v24 + 56);
    uint64_t v28 = v45;
    uint64_t v29 = v27 + *(void *)(v45 + 72) * v23;
    uint64_t v30 = sub_100003918(&qword_10020F730);
    (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(&v10[*(int *)(v30 + 48)], v29, v1);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v10, 0, 1, v30);
    while (1)
    {
      sub_10002C318((uint64_t)v10, (uint64_t)v14, &qword_10020F728);
      uint64_t v35 = sub_100003918(&qword_10020F730);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v14, 1, v35) == 1)
      {
        swift_release();
        unint64_t v36 = sub_1000546D8((uint64_t)_swiftEmptyArrayStorage);
        uint64_t v37 = v41;
        *(void *)(v41 + 112) = v36;
        swift_bridgeObjectRelease();
        uint64_t v38 = *(void *)(v37 + 120);
        *(void *)(v37 + 120) = 0;
        unsigned __int8 v39 = *(unsigned char *)(v37 + 128);
        *(unsigned char *)(v37 + 128) = 0;
        return sub_1001BB9CC(v38, v39);
      }
      (*v47)(v5, &v14[*(int *)(v35 + 48)], v1);
      sub_1001C0EC0();
      (*v20)(v5, v1);
      uint64_t v21 = sub_1001BF310();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v21 - 8) + 8))(v14, v21);
      if (v19) {
        goto LABEL_7;
      }
LABEL_9:
      int64_t v31 = v48 + 1;
      if (__OFADD__(v48, 1))
      {
        __break(1u);
        goto LABEL_31;
      }
      if (v31 < v43)
      {
        unint64_t v32 = *(void *)(v42 + 8 * v31);
        if (v32) {
          goto LABEL_12;
        }
        int64_t v33 = v48 + 2;
        ++v48;
        if (v31 + 1 < v43)
        {
          unint64_t v32 = *(void *)(v42 + 8 * v33);
          if (v32) {
            goto LABEL_15;
          }
          int64_t v48 = v31 + 1;
          if (v31 + 2 < v43)
          {
            unint64_t v32 = *(void *)(v42 + 8 * (v31 + 2));
            if (v32)
            {
              v31 += 2;
              goto LABEL_12;
            }
            int64_t v33 = v31 + 3;
            int64_t v48 = v31 + 2;
            if (v31 + 3 < v43) {
              break;
            }
          }
        }
      }
LABEL_26:
      uint64_t v34 = sub_100003918(&qword_10020F730);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v10, 1, 1, v34);
      unint64_t v19 = 0;
    }
    unint64_t v32 = *(void *)(v42 + 8 * v33);
    if (v32)
    {
LABEL_15:
      int64_t v31 = v33;
LABEL_12:
      unint64_t v19 = (v32 - 1) & v32;
      unint64_t v23 = __clz(__rbit64(v32)) + (v31 << 6);
      int64_t v48 = v31;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v31 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v31 >= v43)
    {
      int64_t v48 = v40;
      goto LABEL_26;
    }
    unint64_t v32 = *(void *)(v42 + 8 * v31);
    ++v33;
    if (v32) {
      goto LABEL_12;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1001B618C(uint64_t a1)
{
  uint64_t v3 = sub_100003918(&qword_100208640);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100003918(&qword_10020F728);
  uint64_t v10 = __chkstk_darwin(v8 - 8, v9);
  unint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v10, v13);
  uint64_t v16 = (char *)&v42 - v15;
  if (*(unsigned __int8 *)(v1 + 128) != 255) {
    return result;
  }
  swift_beginAccess();
  uint64_t v17 = *(void *)(v1 + 112);
  uint64_t v18 = *(void *)(v17 + 64);
  uint64_t v43 = v1;
  uint64_t v44 = v17 + 64;
  uint64_t v19 = 1 << *(unsigned char *)(v17 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v18;
  uint64_t v46 = v4 + 16;
  uint64_t v47 = v4;
  uint64_t v49 = v17;
  uint64_t v50 = (void (**)(char *, char *, uint64_t))(v4 + 32);
  unint64_t v22 = (void (**)(char *, uint64_t))(v4 + 8);
  int64_t v45 = (unint64_t)(v19 + 63) >> 6;
  int64_t v42 = v45 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v51 = 0;
  uint64_t v48 = a1;
  if (!v21) {
    goto LABEL_9;
  }
LABEL_7:
  unint64_t v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  unint64_t v25 = v24 | (v51 << 6);
  while (2)
  {
    uint64_t v26 = v49;
    uint64_t v27 = *(void *)(v49 + 48);
    uint64_t v28 = sub_1001BF310();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(v12, v27 + *(void *)(*(void *)(v28 - 8) + 72) * v25, v28);
    uint64_t v29 = *(void *)(v26 + 56);
    uint64_t v30 = v47;
    uint64_t v31 = v29 + *(void *)(v47 + 72) * v25;
    uint64_t v32 = sub_100003918(&qword_10020F730);
    (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(&v12[*(int *)(v32 + 48)], v31, v3);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v12, 0, 1, v32);
    a1 = v48;
    while (1)
    {
      sub_10002C318((uint64_t)v12, (uint64_t)v16, &qword_10020F728);
      uint64_t v37 = sub_100003918(&qword_10020F730);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 48))(v16, 1, v37) == 1)
      {
        swift_release();
        unint64_t v38 = sub_1000546D8((uint64_t)_swiftEmptyArrayStorage);
        uint64_t v39 = v43;
        *(void *)(v43 + 112) = v38;
        swift_bridgeObjectRelease();
        uint64_t v40 = *(void *)(v39 + 120);
        *(void *)(v39 + 120) = a1;
        unsigned __int8 v41 = *(unsigned char *)(v39 + 128);
        *(unsigned char *)(v39 + 128) = 1;
        swift_errorRetain();
        return sub_1001BB9CC(v40, v41);
      }
      (*v50)(v7, &v16[*(int *)(v37 + 48)], v3);
      uint64_t v52 = a1;
      swift_errorRetain();
      sub_1001C0EB0();
      (*v22)(v7, v3);
      uint64_t v23 = sub_1001BF310();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v23 - 8) + 8))(v16, v23);
      if (v21) {
        goto LABEL_7;
      }
LABEL_9:
      int64_t v33 = v51 + 1;
      if (__OFADD__(v51, 1))
      {
        __break(1u);
        goto LABEL_31;
      }
      if (v33 < v45)
      {
        unint64_t v34 = *(void *)(v44 + 8 * v33);
        if (v34) {
          goto LABEL_12;
        }
        int64_t v35 = v51 + 2;
        ++v51;
        if (v33 + 1 < v45)
        {
          unint64_t v34 = *(void *)(v44 + 8 * v35);
          if (v34) {
            goto LABEL_15;
          }
          int64_t v51 = v33 + 1;
          if (v33 + 2 < v45)
          {
            unint64_t v34 = *(void *)(v44 + 8 * (v33 + 2));
            if (v34)
            {
              v33 += 2;
              goto LABEL_12;
            }
            int64_t v35 = v33 + 3;
            int64_t v51 = v33 + 2;
            if (v33 + 3 < v45) {
              break;
            }
          }
        }
      }
LABEL_26:
      uint64_t v36 = sub_100003918(&qword_10020F730);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v12, 1, 1, v36);
      unint64_t v21 = 0;
    }
    unint64_t v34 = *(void *)(v44 + 8 * v35);
    if (v34)
    {
LABEL_15:
      int64_t v33 = v35;
LABEL_12:
      unint64_t v21 = (v34 - 1) & v34;
      unint64_t v25 = __clz(__rbit64(v34)) + (v33 << 6);
      int64_t v51 = v33;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v33 = v35 + 1;
    if (__OFADD__(v35, 1)) {
      break;
    }
    if (v33 >= v45)
    {
      int64_t v51 = v42;
      goto LABEL_26;
    }
    unint64_t v34 = *(void *)(v44 + 8 * v33);
    ++v35;
    if (v34) {
      goto LABEL_12;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1001B66A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return _swift_task_switch(sub_1001B66C4, a4, 0);
}

uint64_t sub_1001B66C4()
{
  sub_1001B618C(*(void *)(v0 + 24));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001B6724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for NWConnectionWrapper.State(0);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v14 = (_DWORD *)(v5 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_stateLock);
  uint64_t v15 = sub_100003918(&qword_10020F660);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v13, 1, 2, v15);
  *unint64_t v14 = 0;
  uint64_t v16 = (char *)v14 + *(int *)(sub_100003918(&qword_10020F658) + 28);
  uint64_t v17 = sub_100003918(&qword_10020F6E8);
  bzero(v16, *(void *)(*(void *)(v17 - 8) + 64));
  sub_1001BB6E0((uint64_t)v13, (uint64_t)v16);
  *(void *)(v5 + 16) = a1;
  uint64_t v18 = v5 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_logger;
  uint64_t v19 = sub_1001C0340();
  uint64_t v39 = *(void *)(v19 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v18, a3, v19);
  uint64_t v20 = sub_1001BF310();
  sub_1001BB984(qword_100207DC0, (void (*)(uint64_t))&type metadata accessor for UUID);
  swift_retain();
  uint64_t v38 = v20;
  uint64_t v41 = sub_1001C1780();
  uint64_t v42 = v21;
  v43._uint64_t countAndFlagsBits = 46;
  v43._object = (void *)0xE100000000000000;
  sub_1001C0D00(v43);
  uint64_t v40 = sub_1001C04E0();
  v44._uint64_t countAndFlagsBits = sub_1001C1780();
  sub_1001C0D00(v44);
  swift_bridgeObjectRelease();
  v45._uint64_t countAndFlagsBits = 58;
  v45._object = (void *)0xE100000000000000;
  sub_1001C0D00(v45);
  uint64_t v22 = v42;
  uint64_t v23 = (uint64_t *)(v5 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_logPrefix);
  *uint64_t v23 = v41;
  v23[1] = v22;
  swift_retain_n();
  unint64_t v24 = sub_1001C0330();
  os_log_type_t v25 = sub_1001C11E0();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v37 = a3;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v35 = v19;
    uint64_t v27 = (uint8_t *)v26;
    uint64_t v41 = swift_slowAlloc();
    uint64_t v36 = a1;
    *(_DWORD *)uint64_t v27 = 136315138;
    v34[1] = v27 + 4;
    uint64_t v28 = a2;
    uint64_t v29 = a4;
    uint64_t v31 = *v23;
    unint64_t v30 = v23[1];
    swift_bridgeObjectRetain();
    uint64_t v32 = v31;
    a4 = v29;
    a2 = v28;
    uint64_t v40 = sub_1000DF238(v32, v30, &v41);
    a3 = v37;
    sub_1001C1310();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "%s wrap", v27, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v19 = v35;
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  *(void *)(v5 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_readyEvent) = a2;
  swift_retain();
  swift_retain_n();
  sub_1001C0590();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t))(*(void *)(v38 - 8) + 8))(a4);
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(a3, v19);
  return v5;
}

void sub_1001B6B88(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020C3B0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v197 = (char **)((char *)&v193 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v210 = (void *)sub_1001C0790();
  uint64_t v206 = *(v210 - 1);
  __chkstk_darwin(v210, v5);
  uint64_t v199 = (char *)&v193 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v200 = sub_100003918(&qword_10020F6F0);
  __chkstk_darwin(v200, v7);
  uint64_t v207 = (uint64_t)&v193 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100003918(&qword_10020F6F8);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v203 = (char *)&v193 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100003918(&qword_10020F700);
  uint64_t v14 = __chkstk_darwin(v12 - 8, v13);
  BOOL v201 = (char *)&v193 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14, v16);
  uint64_t v204 = (uint64_t)&v193 - v18;
  __chkstk_darwin(v17, v19);
  uint64_t v205 = (uint64_t)&v193 - v20;
  uint64_t v21 = type metadata accessor for NWConnectionWrapper.State(0);
  uint64_t v23 = __chkstk_darwin(v21 - 8, v22);
  uint64_t v195 = (char *)&v193 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v23, v25);
  uint64_t v198 = (uint64_t)&v193 - v27;
  __chkstk_darwin(v26, v28);
  os_log_t v208 = (os_log_t)((char *)&v193 - v29);
  uint64_t v30 = sub_1001C07C0();
  uint64_t v213 = *(void *)(v30 - 8);
  uint64_t v32 = __chkstk_darwin(v30, v31);
  uint64_t v193 = (char *)&v193 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __chkstk_darwin(v32, v34);
  unint64_t v202 = (void (*)(uint64_t, char *, uint64_t))((char *)&v193 - v36);
  uint64_t v38 = __chkstk_darwin(v35, v37);
  uint64_t v209 = (char *)&v193 - v39;
  uint64_t v41 = __chkstk_darwin(v38, v40);
  uint64_t v211 = (char *)&v193 - v42;
  uint64_t v44 = __chkstk_darwin(v41, v43);
  uint64_t v46 = (char *)&v193 - v45;
  __chkstk_darwin(v44, v47);
  uint64_t v49 = (char *)&v193 - v48;
  uint64_t v50 = sub_1001C0610();
  uint64_t v51 = *(void *)(v50 - 8);
  uint64_t v53 = __chkstk_darwin(v50, v52);
  uint64_t v194 = (char *)&v193 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __chkstk_darwin(v53, v55);
  uint64_t v196 = (char *)&v193 - v57;
  __chkstk_darwin(v56, v58);
  uint64_t v60 = (char *)&v193 - v59;
  uint64_t v61 = *(void (**)(char *, uint64_t, uint64_t))(v51 + 16);
  v61((char *)&v193 - v59, a1, v50);
  int v62 = (*(uint64_t (**)(char *, uint64_t))(v51 + 88))(v60, v50);
  if (v62 == enum case for NWConnection.State.waiting(_:))
  {
    (*(void (**)(char *, uint64_t))(v51 + 96))(v60, v50);
    uint64_t v63 = v213;
    (*(void (**)(char *, char *, uint64_t))(v213 + 32))(v49, v60, v30);
    uint64_t v64 = v212;
    uint64_t v65 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
    v65(v46, v49, v30);
    swift_retain_n();
    uint64_t v66 = sub_1001C0330();
    os_log_type_t v67 = sub_1001C11F0();
    BOOL v68 = os_log_type_enabled(v66, v67);
    uint64_t v209 = v49;
    unint64_t v202 = (void (*)(uint64_t, char *, uint64_t))v65;
    if (v68)
    {
      uint64_t v69 = swift_slowAlloc();
      uint64_t v197 = (void *)swift_slowAlloc();
      uint64_t v198 = swift_slowAlloc();
      v215[0] = v198;
      *(_DWORD *)uint64_t v69 = 136315394;
      uint64_t v70 = v30;
      uint64_t v71 = v64 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_logPrefix;
      uint64_t v72 = v64;
      uint64_t v74 = *(void *)(v64 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_logPrefix);
      unint64_t v73 = *(void *)(v71 + 8);
      swift_bridgeObjectRetain();
      uint64_t v214 = sub_1000DF238(v74, v73, v215);
      sub_1001C1310();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v69 + 12) = 2112;
      sub_1001BB984((unint64_t *)&qword_100209358, (void (*)(uint64_t))&type metadata accessor for NWError);
      swift_allocError();
      v202(v75, v46, v30);
      uint64_t v76 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v214 = v76;
      uint64_t v64 = v72;
      sub_1001C1310();
      *uint64_t v197 = v76;
      uint64_t v30 = v70;
      uint64_t v77 = *(void (**)(char *, uint64_t))(v213 + 8);
      v77(v46, v70);
      _os_log_impl((void *)&_mh_execute_header, v66, v67, "%s state changed to waiting error=%@", (uint8_t *)v69, 0x16u);
      sub_100003918(&qword_100207DA8);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v65 = (void (*)(char *, char *, uint64_t))v202;
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();

      uint64_t v77 = *(void (**)(char *, uint64_t))(v213 + 8);
      v77(v46, v30);
    }
    os_log_t v97 = v208;
    uint64_t v98 = v30;
    v65(v211, v209, v30);
    uint64_t v99 = (os_unfair_lock_s *)(v64 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_stateLock);
    os_unfair_lock_lock((os_unfair_lock_t)(v64 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_stateLock));
    uint64_t v100 = (uint64_t)v99 + *(int *)(sub_100003918(&qword_10020F658) + 28);
    sub_1001BB748(v100, (uint64_t)v97);
    uint64_t v101 = sub_100003918(&qword_10020F660);
    uint64_t v102 = *(void *)(v101 - 8);
    int v103 = (*(uint64_t (**)(os_log_t, uint64_t, uint64_t))(v102 + 48))(v97, 2, v101);
    if (v103)
    {
      if (v103 != 1)
      {
        int v112 = 0;
        uint64_t v104 = v98;
LABEL_17:
        os_unfair_lock_unlock(v99);
        uint64_t v213 = (uint64_t)v77;
        v77(v211, v104);
        unsigned int v113 = v210;
        if (v112)
        {
          uint64_t v114 = *(NSObject **)(v64 + 16);
          uint64_t v115 = (uint64_t)v203;
          sub_1001C04F0();
          uint64_t v116 = sub_1001C07B0();
          uint64_t v117 = *(void *)(v116 - 8);
          int v118 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v117 + 48))(v115, 1, v116);
          uint64_t v211 = (char *)v114;
          if (v118 == 1)
          {
            sub_100010360(v115, &qword_10020F6F8);
            uint64_t v120 = v205;
            uint64_t v119 = v206;
            uint64_t v121 = *(void (**)(uint64_t, uint64_t, uint64_t, void *))(v206 + 56);
            v121(v205, 1, 1, v113);
          }
          else
          {
            uint64_t v120 = v205;
            sub_1001C07A0();
            (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v115, v116);
            uint64_t v119 = v206;
            uint64_t v121 = *(void (**)(uint64_t, uint64_t, uint64_t, void *))(v206 + 56);
            v121(v120, 0, 1, v113);
          }
          uint64_t v127 = v200;
          uint64_t v126 = (uint64_t)v201;
          uint64_t v128 = v204;
          (*(void (**)(uint64_t, void, void *))(v119 + 104))(v204, enum case for NWPath.Status.unsatisfied(_:), v113);
          v121(v128, 0, 1, v113);
          uint64_t v129 = *(int *)(v127 + 48);
          uint64_t v130 = v119;
          uint64_t v131 = v207;
          uint64_t v132 = v207 + v129;
          sub_10003282C(v120, v207, &qword_10020F700);
          uint64_t v133 = v131;
          sub_10003282C(v128, v132, &qword_10020F700);
          uint64_t v134 = *(unsigned int (**)(uint64_t, uint64_t, void *))(v130 + 48);
          if (v134(v131, 1, v113) == 1)
          {
            sub_100010360(v128, &qword_10020F700);
            uint64_t v133 = v207;
            sub_100010360(v120, &qword_10020F700);
            if (v134(v132, 1, v113) == 1)
            {
              sub_100010360(v133, &qword_10020F700);
LABEL_37:
              sub_1001B8728();
              sub_1001C0590();
              goto LABEL_38;
            }
            goto LABEL_31;
          }
          sub_10003282C(v131, v126, &qword_10020F700);
          if (v134(v132, 1, v113) == 1)
          {
            sub_100010360(v204, &qword_10020F700);
            sub_100010360(v205, &qword_10020F700);
            (*(void (**)(uint64_t, void *))(v206 + 8))(v126, v113);
LABEL_31:
            sub_100010360(v133, &qword_10020F6F0);
            goto LABEL_38;
          }
          uint64_t v142 = v126;
          uint64_t v143 = v206;
          uint64_t v144 = v199;
          (*(void (**)(char *, uint64_t, void *))(v206 + 32))(v199, v132, v113);
          sub_1001BB984(&qword_10020F720, (void (*)(uint64_t))&type metadata accessor for NWPath.Status);
          char v145 = sub_1001C0BD0();
          uint64_t v146 = *(void (**)(char *, void *))(v143 + 8);
          v146(v144, v113);
          sub_100010360(v204, &qword_10020F700);
          sub_100010360(v205, &qword_10020F700);
          v146((char *)v142, v113);
          sub_100010360(v131, &qword_10020F700);
          if (v145) {
            goto LABEL_37;
          }
        }
LABEL_38:
        ((void (*)(char *, uint64_t))v213)(v209, v104);
        return;
      }
      sub_1001BB928(v100);
      v202(v100, v211, v98);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v102 + 56))(v100, 0, 2, v101);
      uint64_t v104 = v98;
    }
    else
    {
      uint64_t v104 = v98;
      v77((char *)v97, v98);
    }
    int v112 = 1;
    goto LABEL_17;
  }
  uint64_t v79 = v212;
  uint64_t v78 = v213;
  if (v62 == enum case for NWConnection.State.failed(_:))
  {
    (*(void (**)(char *, uint64_t))(v51 + 96))(v60, v50);
    uint64_t v80 = v78;
    uint64_t v81 = v209;
    uint64_t v82 = v30;
    (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v209, v60, v30);
    uint64_t v83 = *(void (**)(char *, char *, uint64_t))(v78 + 16);
    uint64_t v84 = (char *)v202;
    v83((char *)v202, v81, v30);
    swift_retain();
    uint64_t v85 = sub_1001C0330();
    os_log_type_t v86 = sub_1001C11F0();
    int v87 = v86;
    if (os_log_type_enabled(v85, v86))
    {
      uint64_t v88 = swift_slowAlloc();
      LODWORD(v207) = v87;
      uint64_t v89 = v88;
      uint64_t v210 = (void *)swift_slowAlloc();
      uint64_t v211 = (char *)swift_slowAlloc();
      v215[0] = (uint64_t)v211;
      *(_DWORD *)uint64_t v89 = 136315394;
      uint64_t v90 = v84;
      os_log_t v208 = v85;
      uint64_t v91 = *(void *)(v79 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_logPrefix);
      unint64_t v92 = *(void *)(v79 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_logPrefix + 8);
      swift_bridgeObjectRetain();
      uint64_t v214 = sub_1000DF238(v91, v92, v215);
      sub_1001C1310();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v89 + 12) = 2112;
      sub_1001BB984((unint64_t *)&qword_100209358, (void (*)(uint64_t))&type metadata accessor for NWError);
      swift_allocError();
      v83(v93, v90, v82);
      uint64_t v94 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v214 = v94;
      sub_1001C1310();
      *uint64_t v210 = v94;
      uint64_t v95 = *(void (**)(char *, uint64_t))(v80 + 8);
      v95(v90, v82);
      os_log_t v96 = v208;
      _os_log_impl((void *)&_mh_execute_header, v208, (os_log_type_t)v207, "%s state changed to failed error=%@", (uint8_t *)v89, 0x16u);
      sub_100003918(&qword_100207DA8);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v95(v209, v82);
    }
    else
    {
      swift_release();
      uint64_t v122 = *(void (**)(char *, uint64_t))(v80 + 8);
      v122(v84, v82);

      v122(v81, v82);
    }
    return;
  }
  if (v62 == enum case for NWConnection.State.setup(_:))
  {
    swift_retain_n();
    uint64_t v105 = sub_1001C0330();
    os_log_type_t v106 = sub_1001C11E0();
    if (os_log_type_enabled(v105, v106))
    {
      uint64_t v107 = (uint8_t *)swift_slowAlloc();
      v215[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v107 = 136315138;
      uint64_t v108 = v79 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_logPrefix;
      uint64_t v109 = *(void *)(v79 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_logPrefix);
      unint64_t v110 = *(void *)(v108 + 8);
      swift_bridgeObjectRetain();
      uint64_t v214 = sub_1000DF238(v109, v110, v215);
      sub_1001C1310();
      swift_release_n();
      swift_bridgeObjectRelease();
      uint64_t v111 = "%s state changed to setup";
LABEL_24:
      _os_log_impl((void *)&_mh_execute_header, v105, v106, v111, v107, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }
    goto LABEL_32;
  }
  if (v62 == enum case for NWConnection.State.preparing(_:))
  {
    swift_retain_n();
    uint64_t v105 = sub_1001C0330();
    os_log_type_t v106 = sub_1001C11E0();
    if (os_log_type_enabled(v105, v106))
    {
      uint64_t v107 = (uint8_t *)swift_slowAlloc();
      v215[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v107 = 136315138;
      uint64_t v123 = v79 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_logPrefix;
      uint64_t v124 = *(void *)(v79 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_logPrefix);
      unint64_t v125 = *(void *)(v123 + 8);
      swift_bridgeObjectRetain();
      uint64_t v214 = sub_1000DF238(v124, v125, v215);
      sub_1001C1310();
      swift_release_n();
      swift_bridgeObjectRelease();
      uint64_t v111 = "%s state changed to preparing";
      goto LABEL_24;
    }
LABEL_32:
    swift_release_n();

    return;
  }
  if (v62 == enum case for NWConnection.State.ready(_:))
  {
    uint64_t v135 = v212;
    swift_retain_n();
    uint64_t v136 = sub_1001C0330();
    os_log_type_t v137 = sub_1001C11E0();
    if (os_log_type_enabled(v136, v137))
    {
      uint64_t v138 = swift_slowAlloc();
      v215[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v138 = 136315138;
      uint64_t v211 = (char *)(v138 + 4);
      uint64_t v140 = *(void *)(v79 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_logPrefix);
      unint64_t v139 = *(void *)(v79 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_logPrefix + 8);
      swift_bridgeObjectRetain();
      uint64_t v141 = v140;
      uint64_t v135 = v79;
      uint64_t v214 = sub_1000DF238(v141, v139, v215);
      sub_1001C1310();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v136, v137, "%s state changed to ready", (uint8_t *)v138, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
    }

    unint64_t v154 = (os_unfair_lock_s *)(v135 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_stateLock);
    os_unfair_lock_lock((os_unfair_lock_t)(v135 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_stateLock));
    uint64_t v155 = (uint64_t)v154 + *(int *)(sub_100003918(&qword_10020F658) + 28);
    uint64_t v156 = v198;
    sub_1001BB748(v155, v198);
    uint64_t v157 = sub_100003918(&qword_10020F660);
    uint64_t v158 = *(void *)(v157 - 8);
    int v159 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v158 + 48))(v156, 2, v157);
    if (v159)
    {
      if (v159 != 1)
      {
LABEL_51:
        os_unfair_lock_unlock(v154);
        uint64_t v173 = *(void *)(v135 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_readyEvent);
        if (!v173) {
          return;
        }
        uint64_t v174 = sub_1001C0FC0();
        uint64_t v175 = (uint64_t)v197;
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v174 - 8) + 56))(v197, 1, 1, v174);
        uint64_t v176 = (void *)swift_allocObject();
        v176[2] = 0;
        v176[3] = 0;
        v176[4] = v173;
        swift_retain();
        uint64_t v177 = &unk_10020F718;
        goto LABEL_67;
      }
      sub_1001BB928(v155);
    }
    else
    {
      sub_1001BB928(v155);
      (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v156, v30);
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v158 + 56))(v155, 2, 2, v157);
    goto LABEL_51;
  }
  uint64_t v211 = (char *)(v212 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_logger);
  if (v62 != enum case for NWConnection.State.cancelled(_:))
  {
    uint64_t v160 = v196;
    v61(v196, a1, v50);
    swift_retain_n();
    uint64_t v161 = sub_1001C0330();
    os_log_type_t v162 = sub_1001C11F0();
    int v163 = v162;
    if (os_log_type_enabled(v161, v162))
    {
      uint64_t v164 = swift_slowAlloc();
      uint64_t v211 = (char *)v161;
      uint64_t v165 = v164;
      uint64_t v213 = swift_slowAlloc();
      v215[0] = v213;
      *(_DWORD *)uint64_t v165 = 136315394;
      uint64_t v209 = (char *)(v165 + 4);
      LODWORD(v210) = v163;
      uint64_t v166 = v160;
      uint64_t v167 = *(void *)(v79 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_logPrefix);
      unint64_t v168 = *(void *)(v79 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_logPrefix + 8);
      swift_bridgeObjectRetain();
      uint64_t v214 = sub_1000DF238(v167, v168, v215);
      sub_1001C1310();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v165 + 12) = 2082;
      v61(v194, (uint64_t)v166, v50);
      uint64_t v169 = sub_1001C0C40();
      uint64_t v214 = sub_1000DF238(v169, v170, v215);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      unint64_t v171 = *(void (**)(char *, uint64_t))(v51 + 8);
      v171(v166, v50);
      os_log_t v172 = (os_log_t)v211;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v211, (os_log_type_t)v210, "%s state change to unexpected state=%{public}s", (uint8_t *)v165, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();

      unint64_t v171 = *(void (**)(char *, uint64_t))(v51 + 8);
      v171(v160, v50);
    }
    v171(v60, v50);
    return;
  }
  uint64_t v147 = v212;
  swift_retain_n();
  uint64_t v148 = sub_1001C0330();
  os_log_type_t v149 = sub_1001C11E0();
  if (os_log_type_enabled(v148, v149))
  {
    uint64_t v150 = swift_slowAlloc();
    v215[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v150 = 136315138;
    uint64_t v211 = (char *)(v150 + 4);
    uint64_t v152 = *(void *)(v79 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_logPrefix);
    unint64_t v151 = *(void *)(v79 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_logPrefix + 8);
    swift_bridgeObjectRetain();
    uint64_t v153 = v152;
    uint64_t v147 = v79;
    uint64_t v214 = sub_1000DF238(v153, v151, v215);
    sub_1001C1310();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v148, v149, "%s state changed to cancelled", (uint8_t *)v150, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  uint64_t v178 = (uint64_t)v195;
  uint64_t v179 = (os_unfair_lock_s *)(v147 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_stateLock);
  os_unfair_lock_lock((os_unfair_lock_t)(v147 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_stateLock));
  uint64_t v180 = sub_100003918(&qword_10020F658);
  sub_1001BB748((uint64_t)v179 + *(int *)(v180 + 28), v178);
  uint64_t v181 = sub_100003918(&qword_10020F660);
  int v182 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v181 - 8) + 48))(v178, 2, v181);
  if (v182)
  {
    if (v182 != 1)
    {
      os_unfair_lock_unlock(v179);
      goto LABEL_65;
    }
    sub_1001C0EE0();
    sub_1001BB984(&qword_100208790, (void (*)(uint64_t))&type metadata accessor for CancellationError);
    uint64_t v183 = swift_allocError();
    sub_1001C0B70();
  }
  else
  {
    uint64_t v184 = *(void (**)(char *, uint64_t, uint64_t))(v78 + 32);
    Swift::String v185 = v193;
    v184(v193, v178, v30);
    sub_1001BB984((unint64_t *)&qword_100209358, (void (*)(uint64_t))&type metadata accessor for NWError);
    uint64_t v183 = swift_allocError();
    v184(v186, (uint64_t)v185, v30);
  }
  os_unfair_lock_unlock(v179);
  if (!v183)
  {
LABEL_65:
    uint64_t v191 = *(void *)(v147 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_readyEvent);
    if (!v191) {
      return;
    }
    uint64_t v192 = sub_1001C0FC0();
    uint64_t v175 = (uint64_t)v197;
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v192 - 8) + 56))(v197, 1, 1, v192);
    uint64_t v176 = (void *)swift_allocObject();
    v176[2] = 0;
    v176[3] = 0;
    v176[4] = v191;
    swift_retain();
    uint64_t v177 = &unk_10020E5A0;
LABEL_67:
    sub_1001A1CC0(v175, (uint64_t)v177, (uint64_t)v176);
    swift_release();
    return;
  }
  uint64_t v187 = *(void *)(v147 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_readyEvent);
  if (v187)
  {
    uint64_t v188 = sub_1001C0FC0();
    uint64_t v189 = (uint64_t)v197;
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v188 - 8) + 56))(v197, 1, 1, v188);
    uint64_t v190 = (void *)swift_allocObject();
    v190[2] = 0;
    v190[3] = 0;
    v190[4] = v187;
    v190[5] = v183;
    swift_errorRetain();
    swift_errorRetain();
    swift_retain();
    sub_1001A1CC0(v189, (uint64_t)&unk_10020E5E8, (uint64_t)v190);
    swift_release();
    swift_errorRelease();
  }
  swift_errorRelease();
}

void sub_1001B8728()
{
  uint64_t v1 = v0;
  swift_retain_n();
  uint64_t v2 = sub_1001C0330();
  os_log_type_t v3 = sub_1001C1200();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_logPrefix);
    unint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_logPrefix + 8);
    swift_bridgeObjectRetain();
    sub_1000DF238(v5, v6, &v7);
    sub_1001C1310();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s cancel", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  sub_1001C0630();
}

uint64_t sub_1001B88B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 116) = a6;
  *(void *)(v6 + 64) = a4;
  *(void *)(v6 + 72) = a5;
  *(void *)(v6 + 48) = a2;
  *(void *)(v6 + 56) = a3;
  return _swift_task_switch(sub_1001B88DC, 0, 0);
}

uint64_t sub_1001B88DC()
{
  uint64_t v32 = v0;
  unint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 56);
  *(void *)(v0 + 80) = OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_logger;
  swift_retain();
  sub_10000D9E0(v2, v1);
  swift_retain();
  swift_retain();
  sub_10000D9E0(v2, v1);
  swift_retain();
  os_log_type_t v3 = sub_1001C0330();
  os_log_type_t v4 = sub_1001C11E0();
  BOOL v5 = os_log_type_enabled(v3, v4);
  unint64_t v6 = *(void *)(v0 + 64);
  if (v5)
  {
    os_log_type_t v29 = v4;
    uint64_t v7 = *(void *)(v0 + 48);
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315906;
    uint64_t v10 = *(void *)(v7 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_logPrefix);
    unint64_t v9 = *(void *)(v7 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_logPrefix + 8);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 24) = sub_1000DF238(v10, v9, &v31);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v8 + 12) = 2048;
    uint64_t v11 = -1;
    if (v6 >> 60 != 15)
    {
      unint64_t v12 = *(void *)(v0 + 64);
      switch(v12 >> 62)
      {
        case 1uLL:
          uint64_t v14 = *(void *)(v0 + 56);
          sub_100007918(v14, *(void *)(v0 + 64));
          LODWORD(v11) = HIDWORD(v14) - v14;
          if (__OFSUB__(HIDWORD(v14), v14))
          {
            __break(1u);
            JUMPOUT(0x1001B8D10);
          }
          uint64_t v11 = (int)v11;
          break;
        case 2uLL:
          uint64_t v15 = *(void *)(v0 + 56);
          uint64_t v17 = *(void *)(v15 + 16);
          uint64_t v16 = *(void *)(v15 + 24);
          sub_100007918(v15, *(void *)(v0 + 64));
          uint64_t v11 = v16 - v17;
          if (__OFSUB__(v16, v17))
          {
            __break(1u);
            goto LABEL_11;
          }
          break;
        case 3uLL:
LABEL_11:
          sub_100007918(*(void *)(v0 + 56), v12);
          uint64_t v11 = 0;
          break;
        default:
          sub_100007918(*(void *)(v0 + 56), *(void *)(v0 + 64));
          uint64_t v11 = BYTE6(v12);
          break;
      }
    }
    int v18 = *(unsigned __int8 *)(v0 + 116);
    unint64_t v19 = *(void *)(v0 + 64);
    uint64_t v20 = *(void *)(v0 + 56);
    *(void *)(v0 + 32) = v11;
    sub_1001C1310();
    sub_100007918(v20, v19);
    *(_WORD *)(v8 + 22) = 2080;
    uint64_t v21 = sub_1001C0520();
    *(void *)(v0 + 40) = sub_1000DF238(v21, v22, &v31);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v8 + 32) = 1024;
    *(_DWORD *)(v0 + 112) = v18;
    sub_1001C1310();
    _os_log_impl((void *)&_mh_execute_header, v3, v29, "%s send content.count=%ld context=%s isComplete=%{BOOL}d", (uint8_t *)v8, 0x26u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 56);
    sub_100007918(v13, *(void *)(v0 + 64));

    swift_release_n();
    sub_100007918(v13, v6);
    swift_release_n();
  }
  char v23 = *(unsigned char *)(v0 + 116);
  uint64_t v25 = *(void *)(v0 + 64);
  uint64_t v24 = *(void *)(v0 + 72);
  long long v30 = *(_OWORD *)(v0 + 48);
  uint64_t v26 = swift_task_alloc();
  *(void *)(v0 + 88) = v26;
  *(_OWORD *)(v26 + 16) = v30;
  *(void *)(v26 + 32) = v25;
  *(void *)(v26 + 40) = v24;
  *(unsigned char *)(v26 + 48) = v23;
  uint64_t v27 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v27;
  *uint64_t v27 = v0;
  v27[1] = sub_1001B8D20;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v27, 0, 0, 0xD000000000000029, 0x80000001001C7450, sub_1001BBB24, v26, (char *)&type metadata for () + 8);
}

uint64_t sub_1001B8D20()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100109BE4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1001B8E3C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001B8E3C()
{
  uint64_t v10 = v0;
  swift_retain_n();
  uint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C11E0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[6];
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_logPrefix);
    unint64_t v6 = *(void *)(v3 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_logPrefix + 8);
    swift_bridgeObjectRetain();
    v0[2] = sub_1000DF238(v5, v6, &v9);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s send finished", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1001B8FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v21 = a6;
  v20[3] = a4;
  v20[4] = a5;
  v20[2] = a3;
  uint64_t v8 = sub_100003918(&qword_100208640);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8, v11);
  uint64_t v12 = sub_1001C0580();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (uint64_t (**)(uint64_t))((char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20[1] = *(void *)(a2 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v17 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v18 + v17, (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  char *v16 = sub_1001BBC04;
  v16[1] = (uint64_t (*)(uint64_t))v18;
  (*(void (**)(uint64_t (**)(uint64_t), void, uint64_t))(v13 + 104))(v16, enum case for NWConnection.SendCompletion.contentProcessed(_:), v12);
  swift_retain();
  sub_1001C0600();
  return (*(uint64_t (**)(uint64_t (**)(uint64_t), uint64_t))(v13 + 8))(v16, v12);
}

uint64_t sub_1001B9228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v62 = a2;
  uint64_t v5 = type metadata accessor for NWConnectionWrapper.State(0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v59 = &v51[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_100003918(&qword_10020F748);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = &v51[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_1001C07C0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v15 = __chkstk_darwin(v12, v14);
  unint64_t v17 = &v51[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = __chkstk_darwin(v15, v18);
  uint64_t v60 = &v51[-v20];
  uint64_t v22 = __chkstk_darwin(v19, v21);
  uint64_t v24 = &v51[-v23];
  __chkstk_darwin(v22, v25);
  uint64_t v27 = &v51[-v26];
  sub_10003282C(a1, (uint64_t)v11, &qword_10020F748);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_100010360((uint64_t)v11, &qword_10020F748);
    sub_100003918(&qword_100208640);
    return sub_1001C0EC0();
  }
  else
  {
    uint64_t v57 = v17;
    uint64_t v55 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v13 + 32);
    v55(v27, v11, v12);
    uint64_t v29 = v62;
    long long v30 = v27;
    uint64_t v31 = *(void (**)(unsigned char *))(v13 + 16);
    uint64_t v61 = v30;
    v31(v24);
    swift_retain_n();
    uint64_t v32 = sub_1001C0330();
    os_log_type_t v33 = sub_1001C11F0();
    int v34 = v33;
    BOOL v35 = os_log_type_enabled(v32, v33);
    uint64_t v58 = a3;
    uint64_t v56 = v13 + 32;
    if (v35)
    {
      uint64_t v36 = swift_slowAlloc();
      uint64_t v53 = (void *)swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      uint64_t v64 = v54;
      *(_DWORD *)uint64_t v36 = 136315394;
      int v52 = v34;
      uint64_t v37 = v29 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_logPrefix;
      uint64_t v39 = *(void *)(v29 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_logPrefix);
      unint64_t v38 = *(void *)(v37 + 8);
      swift_bridgeObjectRetain();
      uint64_t v63 = sub_1000DF238(v39, v38, &v64);
      sub_1001C1310();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 12) = 2112;
      sub_1001BB984((unint64_t *)&qword_100209358, (void (*)(uint64_t))&type metadata accessor for NWError);
      swift_allocError();
      ((void (*)(uint64_t, unsigned char *, uint64_t))v31)(v40, v24, v12);
      uint64_t v41 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v63 = v41;
      uint64_t v29 = v62;
      sub_1001C1310();
      *uint64_t v53 = v41;
      uint64_t v42 = *(void (**)(unsigned char *, uint64_t))(v13 + 8);
      v42(v24, v12);
      _os_log_impl((void *)&_mh_execute_header, v32, (os_log_type_t)v52, "%s send failed error=%@", (uint8_t *)v36, 0x16u);
      sub_100003918(&qword_100207DA8);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();

      uint64_t v42 = *(void (**)(unsigned char *, uint64_t))(v13 + 8);
      v42(v24, v12);
    }
    uint64_t v43 = (uint64_t)v59;
    uint64_t v44 = v60;
    uint64_t v45 = v57;
    ((void (*)(unsigned char *, unsigned char *, uint64_t))v31)(v57, v61, v12);
    uint64_t v46 = (os_unfair_lock_s *)(v29 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_stateLock);
    os_unfair_lock_lock((os_unfair_lock_t)(v29 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_stateLock));
    uint64_t v47 = sub_100003918(&qword_10020F658);
    sub_1001BB748((uint64_t)v46 + *(int *)(v47 + 28), v43);
    uint64_t v48 = sub_100003918(&qword_10020F660);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 48))(v43, 2, v48)) {
      ((void (*)(unsigned char *, unsigned char *, uint64_t))v31)(v44, v45, v12);
    }
    else {
      v55(v44, (unsigned char *)v43, v12);
    }
    os_unfair_lock_unlock(v46);
    v42(v45, v12);
    sub_1001BB984((unint64_t *)&qword_100209358, (void (*)(uint64_t))&type metadata accessor for NWError);
    uint64_t v49 = swift_allocError();
    ((void (*)(uint64_t, unsigned char *, uint64_t))v31)(v50, v44, v12);
    uint64_t v64 = v49;
    sub_100003918(&qword_100208640);
    sub_1001C0EB0();
    v42(v44, v12);
    return ((uint64_t (*)(unsigned char *, uint64_t))v42)(v61, v12);
  }
}

void sub_1001B9894(uint64_t a1)
{
}

uint64_t sub_1001B98A0(uint64_t a1, uint64_t a2)
{
  v2[7] = a1;
  v2[8] = a2;
  type metadata accessor for NWConnectionWrapper.State(0);
  v2[9] = swift_task_alloc();
  uint64_t v3 = sub_1001C07C0();
  v2[10] = v3;
  v2[11] = *(void *)(v3 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  v2[15] = sub_100003918(&qword_10020F740);
  v2[16] = swift_task_alloc();
  sub_100003918(&qword_10020F748);
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  return _swift_task_switch(sub_1001B9A60, 0, 0);
}

uint64_t sub_1001B9A60()
{
  uint64_t v13 = v0;
  v0[21] = OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_logger;
  swift_retain_n();
  uint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C11E0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[8];
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_logPrefix);
    unint64_t v6 = *(void *)(v3 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_logPrefix + 8);
    swift_bridgeObjectRetain();
    v0[6] = sub_1000DF238(v5, v6, &v12);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s receive", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v7 = (void *)swift_task_alloc();
  v0[22] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1001B9CC0;
  uint64_t v9 = v0[15];
  uint64_t v8 = v0[16];
  uint64_t v10 = v0[8];
  return withCheckedContinuation<A>(isolation:function:_:)(v8, 0, 0, 0x29287478656ELL, 0xE600000000000000, sub_1001BB9E4, v10, v9);
}

uint64_t sub_1001B9CC0()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1001B9DE8, 0, 0);
}

uint64_t sub_1001B9DE8()
{
  uint64_t v65 = v0;
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v5 = *(void *)v3;
  unint64_t v4 = *(void *)(v3 + 8);
  uint64_t v63 = *(void *)(v3 + 16);
  int v59 = *(unsigned __int8 *)(v3 + 24);
  sub_10002C318(v3 + *(int *)(*(void *)(v0 + 120) + 80), v1, &qword_10020F748);
  unint64_t v6 = v4;
  sub_10003282C(v1, v2, &qword_10020F748);
  swift_retain();
  sub_10000D9E0(v5, v4);
  swift_retain();
  sub_10000D9E0(v5, v4);
  uint64_t v7 = sub_1001C0330();
  os_log_type_t v8 = sub_1001C11E0();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = *(void *)(v0 + 64);
  unint64_t v61 = v4;
  uint64_t v62 = v5;
  if (v9)
  {
    os_log_type_t v58 = v8;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v56 = (void *)swift_slowAlloc();
    uint64_t v64 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315906;
    uint64_t v13 = *(void *)(v10 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_logPrefix);
    unint64_t v12 = *(void *)(v10 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_logPrefix + 8);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 16) = sub_1000DF238(v13, v12, &v64);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    uint64_t v14 = -1;
    *(_WORD *)(v11 + 12) = 2048;
    if (v6 >> 60 != 15)
    {
      switch(v6 >> 62)
      {
        case 1uLL:
          sub_100007918(v5, v6);
          if (__OFSUB__(HIDWORD(v5), v5)) {
            __break(1u);
          }
          uint64_t v14 = HIDWORD(v5) - (int)v5;
          break;
        case 2uLL:
          uint64_t v51 = *(void *)(v5 + 16);
          uint64_t v50 = *(void *)(v5 + 24);
          sub_100007918(v5, v6);
          uint64_t v14 = v50 - v51;
          if (__OFSUB__(v50, v51))
          {
            __break(1u);
            goto LABEL_24;
          }
          break;
        case 3uLL:
LABEL_24:
          sub_100007918(v5, v6);
          uint64_t v14 = 0;
          break;
        default:
          sub_100007918(v5, v6);
          uint64_t v14 = BYTE6(v6);
          break;
      }
    }
    uint64_t v54 = v7;
    uint64_t v15 = *(void *)(v0 + 144);
    uint64_t v16 = *(void *)(v0 + 152);
    uint64_t v17 = *(void *)(v0 + 80);
    uint64_t v18 = *(void *)(v0 + 88);
    *(void *)(v0 + 24) = v14;
    sub_1001C1310();
    sub_100007918(v5, v6);
    *(_WORD *)(v11 + 22) = 1024;
    *(_DWORD *)(v0 + 184) = v59;
    sub_1001C1310();
    *(_WORD *)(v11 + 28) = 2112;
    sub_10003282C(v16, v15, &qword_10020F748);
    int v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17);
    uint64_t v20 = *(void *)(v0 + 144);
    if (v19 == 1)
    {
      sub_100010360(*(void *)(v0 + 144), &qword_10020F748);
      *(void *)(v0 + 32) = 0;
      sub_1001C1310();
      uint64_t v21 = 0;
    }
    else
    {
      uint64_t v23 = *(void *)(v0 + 80);
      uint64_t v24 = *(void *)(v0 + 88);
      sub_1001BB984((unint64_t *)&qword_100209358, (void (*)(uint64_t))&type metadata accessor for NWError);
      swift_allocError();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v25, v20, v23);
      uint64_t v21 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 40) = v21;
      sub_1001C1310();
    }
    uint64_t v26 = *(void *)(v0 + 152);
    *uint64_t v56 = v21;
    sub_100010360(v26, &qword_10020F748);
    _os_log_impl((void *)&_mh_execute_header, v54, v58, "%s receive finished data.count=%ld isComplete=%{BOOL}d error=%@", (uint8_t *)v11, 0x26u);
    sub_100003918(&qword_100207DA8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v6 = v61;
  }
  else
  {
    uint64_t v22 = *(void *)(v0 + 152);
    sub_100007918(v5, v4);

    swift_release_n();
    sub_100007918(v5, v4);
    sub_100010360(v22, &qword_10020F748);
  }
  uint64_t v27 = *(void *)(v0 + 136);
  uint64_t v28 = *(void *)(v0 + 80);
  uint64_t v29 = *(void *)(v0 + 88);
  sub_10003282C(*(void *)(v0 + 160), v27, &qword_10020F748);
  int v30 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28);
  uint64_t v57 = *(void *)(v0 + 160);
  uint64_t v31 = *(void *)(v0 + 136);
  uint64_t v32 = *(void *)(v0 + 96);
  uint64_t v55 = *(void *)(v0 + 112);
  if (v30 == 1)
  {
    uint64_t v33 = *(void *)(v0 + 56);
    sub_100010360(v31, &qword_10020F748);
    sub_100010360(v57, &qword_10020F748);
    *(void *)uint64_t v33 = v5;
    *(void *)(v33 + 8) = v6;
    *(void *)(v33 + 16) = v63;
    *(unsigned char *)(v33 + 24) = v59;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    int v34 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v35 = *(void *)(v0 + 80);
    uint64_t v36 = *(void **)(v0 + 88);
    uint64_t v37 = *(void *)(v0 + 64);
    uint64_t v52 = *(void *)(v0 + 72);
    uint64_t v53 = (void (*)(uint64_t, uint64_t, uint64_t))v36[4];
    uint64_t v60 = *(void *)(v0 + 104);
    uint64_t v38 = *(void *)(v0 + 112);
    v53(v38, v31, v35);
    uint64_t v39 = v32;
    uint64_t v40 = (void (*)(uint64_t, uint64_t, uint64_t))v36[2];
    v40(v39, v38, v35);
    uint64_t v41 = (os_unfair_lock_s *)(v37 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_stateLock);
    os_unfair_lock_lock(v41);
    uint64_t v42 = sub_100003918(&qword_10020F658);
    sub_1001BB748((uint64_t)v41 + *(int *)(v42 + 28), v52);
    uint64_t v43 = sub_100003918(&qword_10020F660);
    int v44 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 48))(v52, 2, v43);
    uint64_t v45 = v53;
    if (v44)
    {
      uint64_t v45 = v40;
      uint64_t v46 = v39;
    }
    else
    {
      uint64_t v46 = v52;
    }
    v45(v60, v46, v35);
    os_unfair_lock_unlock(v41);
    uint64_t v47 = (void (*)(uint64_t, uint64_t))v36[1];
    v47(v39, v35);
    sub_1001BB984((unint64_t *)&qword_100209358, (void (*)(uint64_t))&type metadata accessor for NWError);
    swift_allocError();
    v40(v48, v60, v35);
    swift_willThrow();
    swift_release();
    sub_100007918(v62, v61);
    v47(v60, v35);
    v47(v55, v35);
    sub_100010360(v57, &qword_10020F748);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    int v34 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v34();
}

uint64_t sub_1001BA62C(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020F750);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2, v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7 + v6, (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_1001C0640();
  return swift_release();
}

uint64_t sub_1001BA778(uint64_t a1, unint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10 = sub_100003918(&qword_10020F740);
  uint64_t v12 = __chkstk_darwin(v10 - 8, v11);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v14[*(int *)(v12 + 88)];
  *(void *)uint64_t v14 = a1;
  *((void *)v14 + 1) = a2;
  *((void *)v14 + 2) = a3;
  v14[24] = a4;
  sub_10003282C(a5, v15, &qword_10020F748);
  sub_10000D9E0(a1, a2);
  swift_retain();
  sub_100003918(&qword_10020F750);
  return sub_1001C0EC0();
}

void sub_1001BA860(uint64_t a1)
{
}

void sub_1001BA86C(uint64_t a1, const char *a2)
{
  swift_retain_n();
  uint64_t v4 = sub_1001C0330();
  os_log_type_t v5 = sub_1001C1200();
  if (os_log_type_enabled(v4, v5))
  {
    unint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)unint64_t v6 = 136315138;
    uint64_t v7 = *(void *)(a1 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_logPrefix);
    unint64_t v8 = *(void *)(a1 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_logPrefix + 8);
    swift_bridgeObjectRetain();
    sub_1000DF238(v7, v8, &v9);
    sub_1001C1310();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, a2, v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  sub_1001C0500();
}

uint64_t sub_1001BA9F4()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_logger;
  uint64_t v2 = sub_1001C0340();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  sub_100010360(v0 + OBJC_IVAR____TtC20privatecloudcomputed19NWConnectionWrapper_stateLock, &qword_10020F658);
  return swift_deallocClassInstance();
}

uint64_t sub_1001BAAD8()
{
  return type metadata accessor for NWConnectionWrapper(0);
}

uint64_t type metadata accessor for NWConnectionWrapper(uint64_t a1)
{
  return sub_10001C958(a1, (uint64_t *)&unk_10020F5A8);
}

void sub_1001BAB00()
{
  sub_1001C0340();
  if (v0 <= 0x3F)
  {
    sub_1001BABF0();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_1001BABF0()
{
  if (!qword_10020F5B8)
  {
    type metadata accessor for NWConnectionWrapper.State(255);
    unint64_t v0 = sub_1001BF4C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10020F5B8);
    }
  }
}

uint64_t type metadata accessor for NWConnectionWrapper.State(uint64_t a1)
{
  return sub_10001C958(a1, (uint64_t *)&unk_10020F6D8);
}

char *sub_1001BAC68()
{
  if (&swift_runtimeSupportsNoncopyableTypes) {
    return (char *)sub_100003918(&qword_10020F658);
  }
  else {
    return (char *)&type metadata for () + 8;
  }
}

uint64_t *sub_1001BAC90(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_100003918(&qword_10020F660);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = sub_1001C07C0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t sub_1001BADFC(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020F660);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 2, v2);
  if (!result)
  {
    uint64_t v4 = sub_1001C07C0();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(a1, v4);
  }
  return result;
}

void *sub_1001BAEB0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_100003918(&qword_10020F660);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_1001C07C0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_1001BAFE0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_100003918(&qword_10020F660);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v13 = sub_1001C07C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 24))(a1, a2, v13);
      return a1;
    }
    sub_100010360((uint64_t)a1, &qword_10020F660);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_1001C07C0();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

void *sub_1001BB18C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_100003918(&qword_10020F660);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_1001C07C0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_1001BB2BC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_100003918(&qword_10020F660);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v13 = sub_1001C07C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 40))(a1, a2, v13);
      return a1;
    }
    sub_100010360((uint64_t)a1, &qword_10020F660);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_1001C07C0();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t sub_1001BB468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001BB47C);
}

uint64_t sub_1001BB47C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100003918(&qword_10020F660);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0;
  }
}

uint64_t sub_1001BB4EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001BB500);
}

uint64_t sub_1001BB500(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 2);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_100003918(&qword_10020F660);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_1001BB588(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020F660);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 2, v2);
}

uint64_t sub_1001BB5F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100003918(&qword_10020F660);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 2, v4);
}

uint64_t sub_1001BB668()
{
  uint64_t result = sub_1001C07C0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_1001BB6E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NWConnectionWrapper.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001BB748(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NWConnectionWrapper.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001BB7AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_1001BB7CC, a4, 0);
}

uint64_t sub_1001BB7CC()
{
  sub_1001B5CA8();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001BB830()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_errorRelease();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001BB878()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_1000074CC;
  *(_OWORD *)(v2 + 16) = v3;
  return _swift_task_switch(sub_1001B66C4, v3, 0);
}

uint64_t sub_1001BB928(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NWConnectionWrapper.State(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001BB984(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001BB9CC(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_1000106B0(result, a2 & 1);
  }
  return result;
}

uint64_t sub_1001BB9E4(uint64_t a1)
{
  return sub_1001BA62C(a1);
}

uint64_t sub_1001BB9EC()
{
  uint64_t v1 = sub_100003918(&qword_10020F750);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1001BBA80(uint64_t a1, unint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  sub_100003918(&qword_10020F750);
  return sub_1001BA778(a1, a2, a3, a4, a5);
}

uint64_t sub_1001BBB24(uint64_t a1)
{
  return sub_1001B8FFC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned __int8 *)(v1 + 48));
}

uint64_t sub_1001BBB34()
{
  uint64_t v1 = sub_100003918(&qword_100208640);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1001BBC04(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_100003918(&qword_100208640) - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_1001B9228(a1, v4, v5);
}

unint64_t sub_1001BBC7C(char a1)
{
  unint64_t result = 0x6D6954746E657665;
  switch(a1)
  {
    case 1:
      unint64_t result = 7761509;
      break;
    case 2:
      unint64_t result = 0x696C43656C707061;
      break;
    case 3:
      unint64_t result = 0x616546656C707061;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 5:
      unint64_t result = 0x6E7542656C707061;
      break;
    case 6:
    case 11:
    case 14:
    case 15:
      unint64_t result = 0xD000000000000013;
      break;
    case 7:
      unint64_t result = 0x636F4C656C707061;
      break;
    case 8:
      unint64_t result = 0x6552746E65696C63;
      break;
    case 9:
      unint64_t result = 0xD000000000000015;
      break;
    case 10:
      unint64_t result = 0xD000000000000019;
      break;
    case 12:
      unint64_t result = 0xD000000000000014;
      break;
    case 13:
      unint64_t result = 0xD000000000000015;
      break;
    case 16:
      unint64_t result = 0xD000000000000014;
      break;
    case 17:
      unint64_t result = 0xD000000000000012;
      break;
    case 18:
      unint64_t result = 0xD000000000000023;
      break;
    case 19:
      unint64_t result = 0xD000000000000023;
      break;
    case 20:
      unint64_t result = 0xD000000000000021;
      break;
    case 21:
      unint64_t result = 0xD000000000000010;
      break;
    case 22:
      unint64_t result = 0xD000000000000017;
      break;
    case 23:
      unint64_t result = 0xD000000000000018;
      break;
    case 24:
      unint64_t result = 0xD000000000000016;
      break;
    case 25:
      unint64_t result = 0xD000000000000014;
      break;
    case 26:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 27:
      unint64_t result = 0xD000000000000016;
      break;
    case 28:
      unint64_t result = 0xD000000000000017;
      break;
    case 29:
      unint64_t result = 0xD000000000000018;
      break;
    case 30:
      unint64_t result = 0xD000000000000015;
      break;
    case 31:
      unint64_t result = 0xD000000000000016;
      break;
    case 32:
      unint64_t result = 0x6E6573617461646BLL;
      break;
    case 33:
      unint64_t result = 0x6E6553617461646BLL;
      break;
    case 34:
      unint64_t result = 0xD000000000000012;
      break;
    case 35:
      unint64_t result = 0xD000000000000018;
      break;
    case 36:
      unint64_t result = 0xD00000000000001BLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001BC0E0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001BD1B8(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1001BBC7C);
}

Swift::Int sub_1001BC0F8(uint64_t a1, uint64_t a2)
{
  return sub_1001BD268(a1, a2, (void (*)(uint64_t))sub_1001BBC7C);
}

uint64_t sub_1001BC110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BD2EC(a1, a2, a3, (void (*)(void))sub_1001BBC7C);
}

Swift::Int sub_1001BC128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BD35C(a1, a2, a3, (void (*)(uint64_t))sub_1001BBC7C);
}

uint64_t sub_1001BC140@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1001BEB34();
  *a1 = result;
  return result;
}

unint64_t sub_1001BC170@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1001BBC7C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1001BC19C(char a1)
{
  unint64_t result = 0x6D6954746E657665;
  switch(a1)
  {
    case 1:
      unint64_t result = 7761509;
      break;
    case 2:
      unint64_t result = 0x696C43656C707061;
      break;
    case 3:
      unint64_t result = 0x616546656C707061;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 5:
      unint64_t result = 0x6E7542656C707061;
      break;
    case 6:
      unint64_t result = 0xD000000000000013;
      break;
    case 7:
      unint64_t result = 0x636F4C656C707061;
      break;
    case 8:
      unint64_t result = 0x6552746E65696C63;
      break;
    case 9:
      unint64_t result = 0xD000000000000010;
      break;
    case 10:
    case 11:
      unint64_t result = 0x6E6553617461646BLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001BC358(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001BD1B8(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1001BC19C);
}

Swift::Int sub_1001BC370(uint64_t a1, uint64_t a2)
{
  return sub_1001BD268(a1, a2, (void (*)(uint64_t))sub_1001BC19C);
}

uint64_t sub_1001BC388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BD2EC(a1, a2, a3, (void (*)(void))sub_1001BC19C);
}

Swift::Int sub_1001BC3A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BD35C(a1, a2, a3, (void (*)(uint64_t))sub_1001BC19C);
}

uint64_t sub_1001BC3B8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1001FC2D0;
  uint64_t result = sub_1001BEBD4(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

unint64_t sub_1001BC3F0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1001BC19C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1001BC41C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1001BC44C(char a1)
{
  unint64_t result = 0x6D6974746E657665;
  switch(a1)
  {
    case 1:
      unint64_t result = 7761509;
      break;
    case 2:
      unint64_t result = 0x696C63656C707061;
      break;
    case 3:
      unint64_t result = 0x616566656C707061;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 5:
      unint64_t result = 0x6E7562656C707061;
      break;
    case 6:
      unint64_t result = 0xD000000000000013;
      break;
    case 7:
      unint64_t result = 0x636F6C656C707061;
      break;
    case 8:
      unint64_t result = 0x6572746E65696C63;
      break;
    case 9:
      unint64_t result = 0xD000000000000017;
      break;
    case 10:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 11:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 12:
    case 13:
      unint64_t result = 0xD00000000000001DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001BC62C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001BD1B8(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1001BC44C);
}

Swift::Int sub_1001BC644(uint64_t a1, uint64_t a2)
{
  return sub_1001BD268(a1, a2, (void (*)(uint64_t))sub_1001BC44C);
}

uint64_t sub_1001BC65C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BD2EC(a1, a2, a3, (void (*)(void))sub_1001BC44C);
}

Swift::Int sub_1001BC674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BD35C(a1, a2, a3, (void (*)(uint64_t))sub_1001BC44C);
}

uint64_t sub_1001BC68C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1001BEB88(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_1001BC6BC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1001BC44C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1001BC6E8(char a1)
{
  unint64_t result = 0x6D6954746E657665;
  switch(a1)
  {
    case 1:
      unint64_t result = 7761509;
      break;
    case 2:
      unint64_t result = 0x696C43656C707061;
      break;
    case 3:
      unint64_t result = 0x616546656C707061;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0x6E7542656C707061;
      break;
    case 7:
      unint64_t result = 0x636F4C656C707061;
      break;
    case 8:
      unint64_t result = 0x6552746E65696C63;
      break;
    case 9:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 10:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 11:
      unint64_t result = 0xD00000000000001DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001BC89C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001BD1B8(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1001BC6E8);
}

Swift::Int sub_1001BC8B4(uint64_t a1, uint64_t a2)
{
  return sub_1001BD268(a1, a2, (void (*)(uint64_t))sub_1001BC6E8);
}

uint64_t sub_1001BC8CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BD2EC(a1, a2, a3, (void (*)(void))sub_1001BC6E8);
}

Swift::Int sub_1001BC8E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BD35C(a1, a2, a3, (void (*)(uint64_t))sub_1001BC6E8);
}

uint64_t sub_1001BC8FC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1001FC580;
  uint64_t result = sub_1001BEBD4(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

unint64_t sub_1001BC934@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1001BC6E8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1001BC960(char a1)
{
  unint64_t result = 0x6D6954746E657665;
  switch(a1)
  {
    case 1:
      unint64_t result = 7761509;
      break;
    case 2:
      unint64_t result = 0x696C43656C707061;
      break;
    case 3:
      unint64_t result = 0x616546656C707061;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 5:
      unint64_t result = 0x6E7542656C707061;
      break;
    case 6:
    case 10:
      unint64_t result = 0xD000000000000013;
      break;
    case 7:
      unint64_t result = 0x636F4C656C707061;
      break;
    case 8:
      unint64_t result = 0x6552746E65696C63;
      break;
    case 9:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001BCAEC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001BD1B8(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1001BC960);
}

Swift::Int sub_1001BCB04(uint64_t a1, uint64_t a2)
{
  return sub_1001BD268(a1, a2, (void (*)(uint64_t))sub_1001BC960);
}

uint64_t sub_1001BCB1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BD2EC(a1, a2, a3, (void (*)(void))sub_1001BC960);
}

Swift::Int sub_1001BCB34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BD35C(a1, a2, a3, (void (*)(uint64_t))sub_1001BC960);
}

uint64_t sub_1001BCB4C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1001BEC1C(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_1001BCB7C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1001BC960(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1001BCBA8(unsigned __int8 *a1, char *a2)
{
  return sub_1000DFE6C(*a1, *a2);
}

Swift::Int sub_1001BCBB4()
{
  return sub_1001C1990();
}

uint64_t sub_1001BCCC8()
{
  sub_1001C0CB0();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_1001BCDC4()
{
  return sub_1001C1990();
}

uint64_t sub_1001BCED4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1001BEC68(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_1001BCF04(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE900000000000065;
  uint64_t v3 = 0x6D6974746E657665;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE300000000000000;
      uint64_t v3 = 7761509;
      goto LABEL_3;
    case 2:
      *a1 = 0x6572746E65696C63;
      a1[1] = 0xEF64697473657571;
      break;
    case 3:
      *a1 = 0x696C63656C707061;
      a1[1] = 0xEF6F666E69746E65;
      break;
    case 4:
      *a1 = 0x636F6C656C707061;
      a1[1] = 0xEB00000000656C61;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_1001BCFDC(char a1)
{
  unint64_t result = 0x6D6974746E657665;
  switch(a1)
  {
    case 1:
      unint64_t result = 7761509;
      break;
    case 2:
      unint64_t result = 0x696C63656C707061;
      break;
    case 3:
      unint64_t result = 0x616566656C707061;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 5:
      unint64_t result = 0x6E7562656C707061;
      break;
    case 6:
      unint64_t result = 0xD000000000000013;
      break;
    case 7:
      unint64_t result = 0x636F6C656C707061;
      break;
    case 8:
      unint64_t result = 0x6572746E65696C63;
      break;
    case 9:
      unint64_t result = 0xD000000000000017;
      break;
    case 10:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 11:
    case 12:
      unint64_t result = 0xD00000000000001DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001BD1A0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001BD1B8(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1001BCFDC);
}

uint64_t sub_1001BD1B8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6 = *a2;
  uint64_t v7 = a5(*a1);
  uint64_t v9 = v8;
  if (v7 == a5(v6) && v9 == v10) {
    char v12 = 1;
  }
  else {
    char v12 = sub_1001C1840();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

Swift::Int sub_1001BD250(uint64_t a1, uint64_t a2)
{
  return sub_1001BD268(a1, a2, (void (*)(uint64_t))sub_1001BCFDC);
}

Swift::Int sub_1001BD268(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5 = *v3;
  sub_1001C1950();
  a3(v5);
  sub_1001C0CB0();
  swift_bridgeObjectRelease();
  return sub_1001C1990();
}

uint64_t sub_1001BD2D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BD2EC(a1, a2, a3, (void (*)(void))sub_1001BCFDC);
}

uint64_t sub_1001BD2EC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4(*v4);
  sub_1001C0CB0();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_1001BD344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BD35C(a1, a2, a3, (void (*)(uint64_t))sub_1001BCFDC);
}

Swift::Int sub_1001BD35C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6 = *v4;
  sub_1001C1950();
  a4(v6);
  sub_1001C0CB0();
  swift_bridgeObjectRelease();
  return sub_1001C1990();
}

uint64_t sub_1001BD3C4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1001BECB4(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_1001BD3F4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1001BCFDC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1001BD420(char a1)
{
  unint64_t result = 0x6D6954746E657665;
  switch(a1)
  {
    case 1:
      unint64_t result = 7761509;
      break;
    case 2:
      unint64_t result = 0x696C43656C707061;
      break;
    case 3:
      unint64_t result = 0x636F4C656C707061;
      break;
    case 4:
      unint64_t result = 0xD000000000000017;
      break;
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    case 6:
      unint64_t result = 0xD000000000000019;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001BD524(unsigned __int8 *a1, char *a2)
{
  return sub_1000DFC0C(*a1, *a2);
}

Swift::Int sub_1001BD530()
{
  return sub_1000E09BC();
}

uint64_t sub_1001BD53C()
{
  return sub_1000E0570();
}

Swift::Int sub_1001BD544()
{
  return sub_1000E09BC();
}

uint64_t sub_1001BD54C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1001BED00(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_1001BD57C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1001BD420(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t getEnumTagSinglePayload for TC2FirstInvokeRequestSendMetric.EventName(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TC2FirstInvokeRequestSendMetric.EventName(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    char *result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001BD704);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TC2FirstInvokeRequestSendMetric.EventName()
{
  return &type metadata for TC2FirstInvokeRequestSendMetric.EventName;
}

__n128 initializeWithTake for TC2FirstInvokeRequestSendMetric(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for TC2FirstInvokeRequestSendMetric()
{
  return &type metadata for TC2FirstInvokeRequestSendMetric;
}

unsigned char *storeEnumTagSinglePayload for TC2InvokeResponseMetric.EventName(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    char *result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001BD844);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TC2InvokeResponseMetric.EventName()
{
  return &type metadata for TC2InvokeResponseMetric.EventName;
}

ValueMetadata *type metadata accessor for TC2InvokeResponseMetric()
{
  return &type metadata for TC2InvokeResponseMetric;
}

uint64_t getEnumTagSinglePayload for TC2AttestationVerificationMetric.EventName(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF3) {
    goto LABEL_17;
  }
  if (a2 + 13 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 13) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 13;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xE;
  int v8 = v6 - 14;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TC2AttestationVerificationMetric.EventName(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    char *result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001BD9E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TC2AttestationVerificationMetric.EventName()
{
  return &type metadata for TC2AttestationVerificationMetric.EventName;
}

ValueMetadata *type metadata accessor for TC2AttestationVerificationMetric()
{
  return &type metadata for TC2AttestationVerificationMetric;
}

ValueMetadata *type metadata accessor for TC2KDataSendMetric.EventName()
{
  return &type metadata for TC2KDataSendMetric.EventName;
}

ValueMetadata *type metadata accessor for TC2KDataSendMetric()
{
  return &type metadata for TC2KDataSendMetric;
}

uint64_t _s20privatecloudcomputed18TC2KDataSendMetricV9EventNameOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s20privatecloudcomputed18TC2KDataSendMetricV9EventNameOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    char *result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001BDBB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TC2TrustedEndpointResponseMetric.EventName()
{
  return &type metadata for TC2TrustedEndpointResponseMetric.EventName;
}

ValueMetadata *type metadata accessor for TC2TrustedEndpointResponseMetric()
{
  return &type metadata for TC2TrustedEndpointResponseMetric;
}

uint64_t getEnumTagSinglePayload for TC2TrustedRequestMetric.EventName(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xDC) {
    goto LABEL_17;
  }
  if (a2 + 36 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 36) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 36;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 36;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 36;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x25;
  int v8 = v6 - 37;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TC2TrustedRequestMetric.EventName(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 36 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 36) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xDC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xDB)
  {
    unsigned int v6 = ((a2 - 220) >> 8) + 1;
    char *result = a2 + 36;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001BDD58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 36;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TC2TrustedRequestMetric.EventName()
{
  return &type metadata for TC2TrustedRequestMetric.EventName;
}

ValueMetadata *type metadata accessor for TC2TrustedRequestMetric()
{
  return &type metadata for TC2TrustedRequestMetric;
}

uint64_t getEnumTagSinglePayload for TC2AttestationnVerificationErrorMetric.EventName(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TC2AttestationnVerificationErrorMetric.EventName(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    char *result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001BDEFCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TC2AttestationnVerificationErrorMetric.EventName()
{
  return &type metadata for TC2AttestationnVerificationErrorMetric.EventName;
}

ValueMetadata *type metadata accessor for TC2AttestationnVerificationErrorMetric()
{
  return &type metadata for TC2AttestationnVerificationErrorMetric;
}

uint64_t getEnumTagSinglePayload for TC2AttestationDistributionMetric.EventName(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TC2AttestationDistributionMetric.EventName(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    char *result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001BE0A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TC2AttestationDistributionMetric.EventName()
{
  return &type metadata for TC2AttestationDistributionMetric.EventName;
}

uint64_t _s20privatecloudcomputed31TC2FirstInvokeRequestSendMetricVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s20privatecloudcomputed31TC2FirstInvokeRequestSendMetricVwcp_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s20privatecloudcomputed31TC2FirstInvokeRequestSendMetricVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s20privatecloudcomputed31TC2FirstInvokeRequestSendMetricVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s20privatecloudcomputed31TC2FirstInvokeRequestSendMetricVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1001BE29C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TC2AttestationDistributionMetric()
{
  return &type metadata for TC2AttestationDistributionMetric;
}

unint64_t sub_1001BE2F8()
{
  unint64_t result = qword_10020F760;
  if (!qword_10020F760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020F760);
  }
  return result;
}

unint64_t sub_1001BE350()
{
  unint64_t result = qword_10020F768;
  if (!qword_10020F768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020F768);
  }
  return result;
}

unint64_t sub_1001BE3A8()
{
  unint64_t result = qword_10020F770;
  if (!qword_10020F770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020F770);
  }
  return result;
}

unint64_t sub_1001BE400()
{
  unint64_t result = qword_10020F778;
  if (!qword_10020F778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020F778);
  }
  return result;
}

unint64_t sub_1001BE458()
{
  unint64_t result = qword_10020F780;
  if (!qword_10020F780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020F780);
  }
  return result;
}

unint64_t sub_1001BE4B0()
{
  unint64_t result = qword_10020F788;
  if (!qword_10020F788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020F788);
  }
  return result;
}

unint64_t sub_1001BE508()
{
  unint64_t result = qword_10020F790;
  if (!qword_10020F790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020F790);
  }
  return result;
}

unint64_t sub_1001BE560()
{
  unint64_t result = qword_10020F798;
  if (!qword_10020F798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020F798);
  }
  return result;
}

unint64_t sub_1001BE5B8()
{
  unint64_t result = qword_10020F7A0;
  if (!qword_10020F7A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020F7A0);
  }
  return result;
}

unint64_t sub_1001BE610()
{
  unint64_t result = qword_10020F7F0;
  if (!qword_10020F7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020F7F0);
  }
  return result;
}

unint64_t sub_1001BE668()
{
  unint64_t result = qword_10020F7F8;
  if (!qword_10020F7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020F7F8);
  }
  return result;
}

unint64_t sub_1001BE6C0()
{
  unint64_t result = qword_10020F800;
  if (!qword_10020F800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020F800);
  }
  return result;
}

unint64_t sub_1001BE718()
{
  unint64_t result = qword_10020F850;
  if (!qword_10020F850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020F850);
  }
  return result;
}

unint64_t sub_1001BE770()
{
  unint64_t result = qword_10020F858;
  if (!qword_10020F858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020F858);
  }
  return result;
}

unint64_t sub_1001BE7C8()
{
  unint64_t result = qword_10020F8A8;
  if (!qword_10020F8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020F8A8);
  }
  return result;
}

unint64_t sub_1001BE820()
{
  unint64_t result = qword_10020F8B0;
  if (!qword_10020F8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020F8B0);
  }
  return result;
}

unint64_t sub_1001BE878()
{
  unint64_t result = qword_10020F900;
  if (!qword_10020F900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020F900);
  }
  return result;
}

unint64_t sub_1001BE8D0()
{
  unint64_t result = qword_10020F908;
  if (!qword_10020F908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020F908);
  }
  return result;
}

unint64_t sub_1001BE928()
{
  unint64_t result = qword_10020F958;
  if (!qword_10020F958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020F958);
  }
  return result;
}

unint64_t sub_1001BE980()
{
  unint64_t result = qword_10020F960;
  if (!qword_10020F960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020F960);
  }
  return result;
}

unint64_t sub_1001BE9D8()
{
  unint64_t result = qword_10020F9B0;
  if (!qword_10020F9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020F9B0);
  }
  return result;
}

unint64_t sub_1001BEA30()
{
  unint64_t result = qword_10020F9B8;
  if (!qword_10020F9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020F9B8);
  }
  return result;
}

unint64_t sub_1001BEA88()
{
  unint64_t result = qword_10020FA08;
  if (!qword_10020FA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020FA08);
  }
  return result;
}

unint64_t sub_1001BEAE0()
{
  unint64_t result = qword_10020FA10;
  if (!qword_10020FA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020FA10);
  }
  return result;
}

uint64_t sub_1001BEB34()
{
  unint64_t v0 = sub_1001C1870();
  swift_bridgeObjectRelease();
  if (v0 >= 0x25) {
    return 37;
  }
  else {
    return v0;
  }
}

uint64_t sub_1001BEB88(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_1001FC410;
  v6._object = a2;
  unint64_t v4 = sub_1001C15E0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 0xE) {
    return 14;
  }
  else {
    return v4;
  }
}

uint64_t sub_1001BEBD4(uint64_t a1, void *a2, Swift::OpaquePointer a3)
{
  v7._uint64_t countAndFlagsBits = a1;
  v7._object = a2;
  unint64_t v5 = sub_1001C15E0(a3, v7);
  swift_bridgeObjectRelease();
  if (v5 >= 0xC) {
    return 12;
  }
  else {
    return v5;
  }
}

uint64_t sub_1001BEC1C(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_1001FC6C0;
  v6._object = a2;
  unint64_t v4 = sub_1001C15E0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 0xB) {
    return 11;
  }
  else {
    return v4;
  }
}

uint64_t sub_1001BEC68(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_1001FC7E8;
  v6._object = a2;
  unint64_t v4 = sub_1001C15E0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 5) {
    return 5;
  }
  else {
    return v4;
  }
}

uint64_t sub_1001BECB4(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_1001FC880;
  v6._object = a2;
  unint64_t v4 = sub_1001C15E0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 0xD) {
    return 13;
  }
  else {
    return v4;
  }
}

uint64_t sub_1001BED00(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_1001FC9D8;
  v6._object = a2;
  unint64_t v4 = sub_1001C15E0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 7) {
    return 7;
  }
  else {
    return v4;
  }
}

uint64_t sub_1001BED50()
{
  return URLRequest.init(url:cachePolicy:timeoutInterval:)();
}

void sub_1001BED60(Swift::String _, Swift::String forHTTPHeaderField)
{
}

uint64_t sub_1001BED70()
{
  return type metadata accessor for URLRequest();
}

uint64_t sub_1001BED80()
{
  return dispatch thunk of JSONDecoder.decode<A>(_:from:)();
}

uint64_t sub_1001BED90()
{
  return JSONDecoder.init()();
}

uint64_t sub_1001BEDA0()
{
  return type metadata accessor for JSONDecoder();
}

uint64_t sub_1001BEDB0()
{
  return static JSONEncoder.OutputFormatting.sortedKeys.getter();
}

uint64_t sub_1001BEDC0()
{
  return static JSONEncoder.OutputFormatting.prettyPrinted.getter();
}

uint64_t sub_1001BEDD0()
{
  return type metadata accessor for JSONEncoder.OutputFormatting();
}

uint64_t sub_1001BEDE0()
{
  return dispatch thunk of JSONEncoder.outputFormatting.setter();
}

uint64_t sub_1001BEDF0()
{
  return dispatch thunk of JSONEncoder.encode<A>(_:)();
}

uint64_t sub_1001BEE00()
{
  return JSONEncoder.init()();
}

uint64_t sub_1001BEE10()
{
  return type metadata accessor for JSONEncoder();
}

uint64_t sub_1001BEE20()
{
  return static CharacterSet.whitespacesAndNewlines.getter();
}

uint64_t sub_1001BEE30()
{
  return type metadata accessor for CharacterSet();
}

uint64_t sub_1001BEE40()
{
  return DataProtocol.copyBytes(to:)();
}

uint64_t sub_1001BEE50()
{
  return __DataStorage.init(bytes:length:copy:deallocator:offset:)();
}

uint64_t sub_1001BEE60()
{
  return __DataStorage._bytes.getter();
}

uint64_t sub_1001BEE70()
{
  return __DataStorage.init(length:)();
}

uint64_t sub_1001BEE80()
{
  return __DataStorage._length.getter();
}

uint64_t sub_1001BEE90()
{
  return __DataStorage._offset.getter();
}

uint64_t sub_1001BEEA0()
{
  return type metadata accessor for __DataStorage();
}

uint64_t sub_1001BEEB0()
{
  return SortDescriptor.init<A>(_:order:)();
}

uint64_t sub_1001BEEC0()
{
  return AsyncLineSequence.makeAsyncIterator()();
}

uint64_t sub_1001BEED0()
{
  return dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
}

uint64_t sub_1001BEEE0()
{
  return PropertyListDecoder.init()();
}

uint64_t sub_1001BEEF0()
{
  return type metadata accessor for PropertyListDecoder();
}

uint64_t sub_1001BEF00()
{
  return dispatch thunk of PropertyListEncoder.outputFormat.setter();
}

uint64_t sub_1001BEF10()
{
  return dispatch thunk of PropertyListEncoder.encode<A>(_:)();
}

uint64_t sub_1001BEF20()
{
  return PropertyListEncoder.init()();
}

uint64_t sub_1001BEF30()
{
  return type metadata accessor for PropertyListEncoder();
}

uint64_t sub_1001BEF40()
{
  return static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)();
}

uint64_t sub_1001BEF50()
{
  return static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)();
}

uint64_t sub_1001BEF60()
{
  return static PredicateExpressions.build_contains<A, B>(_:_:)();
}

uint64_t sub_1001BEF70()
{
  return static PredicateExpressions.build_Comparison<A, B>(lhs:rhs:op:)();
}

uint64_t sub_1001BEF80()
{
  return static PredicateExpressions.build_NilLiteral<A>()();
}

uint64_t sub_1001BEF90()
{
  return static PredicateExpressions.build_Conjunction<A, B>(lhs:rhs:)();
}

uint64_t sub_1001BEFA0()
{
  return type metadata accessor for PredicateExpressions.ComparisonOperator();
}

uint64_t sub_1001BEFB0()
{
  return static PredicateExpressions.build_Arg<A>(_:)();
}

uint64_t sub_1001BEFC0()
{
  return static PredicateExpressions.build_Arg<A>(_:)();
}

uint64_t sub_1001BEFD0()
{
  return _convertErrorToNSError(_:)();
}

uint64_t sub_1001BEFE0()
{
  return _convertNSErrorToError(_:)();
}

uint64_t sub_1001BEFF0()
{
  return type metadata accessor for URL.DirectoryHint();
}

uint64_t sub_1001BF000()
{
  return URL.absoluteString.getter();
}

uint64_t sub_1001BF010()
{
  return URL.init(fileURLWithPath:isDirectory:)();
}

void sub_1001BF020(NSURL *retstr@<X8>)
{
}

uint64_t sub_1001BF030()
{
  return URL.appendingPathComponent(_:isDirectory:)();
}

uint64_t sub_1001BF040()
{
  return URL.appendingPathComponent(_:)();
}

uint64_t sub_1001BF050()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1001BF060(Swift::Bool percentEncoded)
{
  return URL.path(percentEncoded:)(percentEncoded)._countAndFlagsBits;
}

uint64_t sub_1001BF070()
{
  return URL.path.getter();
}

uint64_t sub_1001BF080()
{
  return URL.init(string:)();
}

uint64_t sub_1001BF090()
{
  return URL.init(filePath:directoryHint:relativeTo:)();
}

uint64_t sub_1001BF0A0()
{
  return URL.appending<A>(path:directoryHint:)();
}

uint64_t sub_1001BF0B0()
{
  return type metadata accessor for URL();
}

void sub_1001BF0C0()
{
}

uint64_t sub_1001BF0D0()
{
  return Data.init(contentsOf:options:)();
}

uint64_t sub_1001BF0E0()
{
  return Data.description.getter();
}

uint64_t sub_1001BF0F0()
{
  return Data.init(base64Encoded:options:)();
}

uint64_t sub_1001BF100()
{
  return Data.init(base64Encoded:options:)();
}

uint64_t sub_1001BF110()
{
  return Data._Representation.replaceSubrange(_:with:count:)();
}

void sub_1001BF120(Swift::Int a1)
{
}

uint64_t sub_1001BF130()
{
  return Data._Representation.append(contentsOf:)();
}

uint64_t sub_1001BF140()
{
  return Data._Representation.subscript.getter();
}

uint64_t sub_1001BF150()
{
  return Data.withUnsafeBytes<A>(_:)();
}

NSData sub_1001BF160()
{
  return Data._bridgeToObjectiveC()();
}

uint64_t sub_1001BF170(NSDataBase64EncodingOptions options)
{
  return Data.base64EncodedString(options:)(options)._countAndFlagsBits;
}

uint64_t sub_1001BF180()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1001BF190()
{
  return Data.hash(into:)();
}

uint64_t sub_1001BF1A0()
{
  return Data.write(to:options:)();
}

uint64_t sub_1001BF1B0()
{
  return Data.append(_:)();
}

Swift::UInt8_optional sub_1001BF1C0()
{
  return Data.Iterator.next()();
}

uint64_t sub_1001BF1D0()
{
  return type metadata accessor for Data.Iterator();
}

uint64_t sub_1001BF1E0()
{
  return Data.Iterator.init(_:at:)();
}

uint64_t sub_1001BF1F0()
{
  return Date.init(timeIntervalSinceReferenceDate:)();
}

uint64_t sub_1001BF200()
{
  return Date.timeIntervalSinceReferenceDate.getter();
}

uint64_t sub_1001BF210()
{
  return Date.timeIntervalSince(_:)();
}

uint64_t sub_1001BF220()
{
  return Date.addingTimeInterval(_:)();
}

uint64_t sub_1001BF230()
{
  return static Date.> infix(_:_:)();
}

uint64_t sub_1001BF240()
{
  return static Date.< infix(_:_:)();
}

uint64_t sub_1001BF250()
{
  return static Date.+ infix(_:_:)();
}

uint64_t sub_1001BF260()
{
  return static Date.- infix(_:_:)();
}

uint64_t sub_1001BF270()
{
  return Date.timeIntervalSinceNow.getter();
}

uint64_t sub_1001BF280()
{
  return Date.timeIntervalSince1970.getter();
}

uint64_t sub_1001BF290()
{
  return static Date.== infix(_:_:)();
}

uint64_t _s20privatecloudcomputed8LRUCacheC10addToCache3now5valueSb10Foundation4DateV_xtFfA__0()
{
  return static Date.now.getter();
}

uint64_t sub_1001BF2B0()
{
  return Date.init()();
}

uint64_t sub_1001BF2C0()
{
  return type metadata accessor for Date();
}

uint64_t sub_1001BF2D0()
{
  return UUID.uuidString.getter();
}

uint64_t sub_1001BF2E0()
{
  return static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1001BF2F0()
{
  return UUID.init(uuid:)();
}

uint64_t sub_1001BF300()
{
  return UUID.init()();
}

uint64_t sub_1001BF310()
{
  return type metadata accessor for UUID();
}

uint64_t sub_1001BF320()
{
  return Locale.identifier.getter();
}

uint64_t sub_1001BF330()
{
  return static Locale.current.getter();
}

uint64_t sub_1001BF340()
{
  return type metadata accessor for Locale();
}

uint64_t sub_1001BF350()
{
  return type metadata accessor for Calendar.Identifier();
}

uint64_t sub_1001BF360()
{
  return Calendar.init(identifier:)();
}

uint64_t sub_1001BF370()
{
  return type metadata accessor for Calendar.MatchingPolicy();
}

uint64_t sub_1001BF380()
{
  return type metadata accessor for Calendar.SearchDirection();
}

uint64_t sub_1001BF390()
{
  return type metadata accessor for Calendar.RepeatedTimePolicy();
}

uint64_t sub_1001BF3A0()
{
  return Calendar.date(bySettingHour:minute:second:of:matchingPolicy:repeatedTimePolicy:direction:)();
}

uint64_t sub_1001BF3B0()
{
  return Calendar.timeZone.setter();
}

uint64_t sub_1001BF3C0()
{
  return type metadata accessor for Calendar();
}

uint64_t sub_1001BF3D0()
{
  return TimeZone.init(secondsFromGMT:)();
}

uint64_t sub_1001BF3E0()
{
  return type metadata accessor for TimeZone();
}

uint64_t sub_1001BF3F0()
{
  return Predicate.init(_:)();
}

uint64_t sub_1001BF400()
{
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

uint64_t sub_1001BF410()
{
  return ObservationRegistrar.access<A, B>(_:keyPath:)();
}

uint64_t _s20privatecloudcomputed32TC2AttestationStoreMigrationPlanO0bcD9Schema_v1O0b6ParamsD5EntryC22__observationRegistrar33_20CBFB716EC7F30A6F7841E732D69469LL11Observation0tL0Vvpfi_0()
{
  return ObservationRegistrar.init()();
}

uint64_t sub_1001BF430()
{
  return type metadata accessor for ObservationRegistrar();
}

uint64_t sub_1001BF440()
{
  return EventValue.init(BOOLeanLiteral:)();
}

uint64_t sub_1001BF450()
{
  return type metadata accessor for EventValue();
}

uint64_t sub_1001BF460()
{
  return TransportConfiguration.init(allowCellularAccess:allowExpensiveAccess:bundleID:)();
}

uint64_t sub_1001BF470()
{
  return type metadata accessor for TransportConfiguration();
}

uint64_t sub_1001BF490()
{
  return type metadata accessor for Reporter();
}

uint64_t sub_1001BF4B0()
{
  return type metadata accessor for CloudTelemetry();
}

uint64_t sub_1001BF4C0()
{
  return type metadata accessor for Mutex();
}

uint64_t sub_1001BF4D0()
{
  return AttestationBundle.withUnvalidatedAttestationBundle<A>(_:)();
}

uint64_t sub_1001BF4E0()
{
  return AttestationBundle.jsonString()()._countAndFlagsBits;
}

uint64_t sub_1001BF4F0()
{
  return AttestationBundle.init(data:)();
}

uint64_t sub_1001BF500()
{
  return type metadata accessor for AttestationBundle();
}

uint64_t sub_1001BF510()
{
  return type metadata accessor for CloudAttestationError();
}

uint64_t sub_1001BF520()
{
  return static Environment.override.setter();
}

uint64_t sub_1001BF530()
{
  return type metadata accessor for Environment();
}

uint64_t sub_1001BF540()
{
  return Unvalidated.AttestationBundle.udid.getter();
}

uint64_t sub_1001BF550()
{
  return NodeValidator.init(environment:)();
}

uint64_t sub_1001BF560()
{
  return type metadata accessor for NodeValidator();
}

uint64_t sub_1001BF570()
{
  return PublicKeyData.raw.getter();
}

uint64_t sub_1001BF580()
{
  return type metadata accessor for PublicKeyData();
}

uint64_t sub_1001BF590()
{
  return type metadata accessor for TransparencyLogError();
}

uint64_t sub_1001BF5A0()
{
  return Validated.AttestationBundle.routingHint.getter();
}

uint64_t sub_1001BF5B0()
{
  return Validated.AttestationBundle.keyExpiration.getter();
}

uint64_t sub_1001BF5C0()
{
  return Validated.AttestationBundle.udid.getter();
}

uint64_t sub_1001BF5D0()
{
  return type metadata accessor for Validated.AttestationBundle();
}

uint64_t sub_1001BF5E0()
{
  return dispatch thunk of Validator.defaultPolicy.getter();
}

uint64_t sub_1001BF600()
{
  return _emptyDequeStorage.unsafeMutableAddressor();
}

Swift::Int sub_1001BF610(Swift::Int to, Swift::Bool linearly)
{
  return Deque._Storage._growCapacity(to:linearly:)(to, linearly);
}

uint64_t sub_1001BF620()
{
  return type metadata accessor for TrustedCloudComputeError.UnauthorizedErrorInfo.Reason();
}

uint64_t sub_1001BF630()
{
  return TrustedCloudComputeError.UnauthorizedErrorInfo.reason.getter();
}

uint64_t sub_1001BF640()
{
  return type metadata accessor for TrustedCloudComputeError.UnauthorizedErrorInfo();
}

uint64_t sub_1001BF650()
{
  return type metadata accessor for TrustedCloudComputeError.InvalidRequestErrorInfo.Reason();
}

uint64_t sub_1001BF660()
{
  return TrustedCloudComputeError.InvalidRequestErrorInfo.reason.getter();
}

uint64_t sub_1001BF670()
{
  return type metadata accessor for TrustedCloudComputeError.InvalidRequestErrorInfo();
}

uint64_t sub_1001BF680()
{
  return TrustedCloudComputeError.ServerErrorInfo.responseMetadata.getter();
}

uint64_t sub_1001BF690()
{
  return type metadata accessor for TrustedCloudComputeError.ServerErrorInfo();
}

uint64_t sub_1001BF6A0()
{
  return TrustedCloudComputeError.NetworkErrorInfo.code.getter();
}

uint64_t sub_1001BF6B0()
{
  return TrustedCloudComputeError.NetworkErrorInfo.init(domain:code:message:)();
}

uint64_t sub_1001BF6C0()
{
  return TrustedCloudComputeError.NetworkErrorInfo.domain.getter();
}

uint64_t sub_1001BF6D0()
{
  return type metadata accessor for TrustedCloudComputeError.NetworkErrorInfo();
}

uint64_t sub_1001BF6E0()
{
  return type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo.Reason();
}

uint64_t sub_1001BF6F0()
{
  return TrustedCloudComputeError.TimeoutErrorInfo.reason.getter();
}

uint64_t sub_1001BF700()
{
  return type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo();
}

uint64_t sub_1001BF710()
{
  return type metadata accessor for TrustedCloudComputeError.InternalErrorInfo.Reason();
}

uint64_t sub_1001BF720()
{
  return TrustedCloudComputeError.InternalErrorInfo.reason.getter();
}

uint64_t sub_1001BF730()
{
  return TrustedCloudComputeError.InternalErrorInfo.init(message:reason:)();
}

uint64_t sub_1001BF740()
{
  return TrustedCloudComputeError.InternalErrorInfo.init(message:)();
}

uint64_t sub_1001BF750()
{
  return type metadata accessor for TrustedCloudComputeError.InternalErrorInfo();
}

uint64_t sub_1001BF760()
{
  return TrustedCloudComputeError.RateLimitInfo.WorkloadTag.init(key:value:)();
}

uint64_t sub_1001BF770()
{
  return type metadata accessor for TrustedCloudComputeError.RateLimitInfo.WorkloadTag();
}

uint64_t sub_1001BF780()
{
  return TrustedCloudComputeError.RateLimitInfo.retryAfterDate.getter();
}

uint64_t sub_1001BF790()
{
  return TrustedCloudComputeError.RateLimitInfo.init(bundleID:featureID:workloadType:workloadTags:count:duration:retryAfterDate:)();
}

uint64_t sub_1001BF7A0()
{
  return type metadata accessor for TrustedCloudComputeError.RateLimitInfo();
}

uint64_t sub_1001BF7B0()
{
  return TrustedCloudComputeError.errorCaseString()()._countAndFlagsBits;
}

uint64_t sub_1001BF7C0()
{
  return type metadata accessor for TrustedCloudComputeError.AvailabilityInfo.Reason();
}

uint64_t sub_1001BF7D0()
{
  return TrustedCloudComputeError.AvailabilityInfo.reason.getter();
}

uint64_t sub_1001BF7E0()
{
  return type metadata accessor for TrustedCloudComputeError.AvailabilityInfo();
}

uint64_t sub_1001BF7F0()
{
  return TrustedCloudComputeError.init(responseMetadata:)();
}

uint64_t sub_1001BF800()
{
  return TrustedCloudComputeError.init(file:line:message:)();
}

uint64_t sub_1001BF810()
{
  return type metadata accessor for TrustedCloudComputeError();
}

uint64_t sub_1001BF820()
{
  return TrustedCloudComputeRateLimit.init(bundleIdentifier:featureIdentifier:workloadType:workloadParameters:count:duration:jitter:ttlExpiration:loggedCountSoFar:)();
}

uint64_t sub_1001BF830()
{
  return TrustedCloudComputeRateLimit.WorkloadParameter.init(key:value:)();
}

uint64_t sub_1001BF840()
{
  return type metadata accessor for TrustedCloudComputeRateLimit.WorkloadParameter();
}

uint64_t sub_1001BF850()
{
  return type metadata accessor for TrustedCloudComputeRateLimit();
}

uint64_t sub_1001BF860()
{
  return privateCloudComputeOsVariantSubsystem.getter();
}

uint64_t sub_1001BF870()
{
  return TC2Environment.forceOHTTP.getter();
}

uint64_t sub_1001BF880()
{
  return TC2Environment.ropesHostname.getter();
}

uint64_t sub_1001BF890()
{
  return TC2Environment.init(name:)();
}

uint64_t sub_1001BF8A0()
{
  return TC2Environment.name.getter();
}

uint64_t sub_1001BF8B0()
{
  return TC2Environment.ropesUrl.getter();
}

uint64_t sub_1001BF8C0()
{
  return TC2Environment.configUrl.getter();
}

uint64_t sub_1001BF8D0()
{
  return type metadata accessor for TC2Environment();
}

uint64_t sub_1001BF8E0()
{
  return type metadata accessor for TC2LogCategory();
}

uint64_t sub_1001BF8F0()
{
  return dispatch thunk of TC2Configuration.subscript.getter();
}

uint64_t sub_1001BF900()
{
  return TC2EnvironmentNames.rawValue.getter();
}

uint64_t sub_1001BF910()
{
  return type metadata accessor for TC2EnvironmentNames();
}

uint64_t sub_1001BF920()
{
  return TC2RequestParameters.init(pipelineKind:pipelineArguments:)();
}

uint64_t sub_1001BF930()
{
  return TC2RequestParameters.pipelineKind.getter();
}

uint64_t sub_1001BF940()
{
  return TC2RequestParameters.pipelineArguments.getter();
}

uint64_t sub_1001BF950()
{
  return type metadata accessor for TC2RequestParameters();
}

uint64_t sub_1001BF960()
{
  return static TC2ConfigurationIndex.environment.getter();
}

uint64_t sub_1001BF970()
{
  return static TC2ConfigurationIndex.testOptions.getter();
}

uint64_t sub_1001BF980()
{
  return static TC2ConfigurationIndex.forceAEADKey.getter();
}

uint64_t sub_1001BF990()
{
  return static TC2ConfigurationIndex.overrideCellID.getter();
}

uint64_t sub_1001BF9A0()
{
  return static TC2ConfigurationIndex.testSignalHeader.getter();
}

uint64_t sub_1001BF9B0()
{
  return static TC2ConfigurationIndex.maxPrefetchBatches.getter();
}

uint64_t sub_1001BF9C0()
{
  return static TC2ConfigurationIndex.trustedRequestPath.getter();
}

uint64_t sub_1001BF9D0()
{
  return static TC2ConfigurationIndex.prefetchRequestPath.getter();
}

uint64_t sub_1001BF9E0()
{
  return static TC2ConfigurationIndex.maxTotalAttestations.getter();
}

uint64_t sub_1001BF9F0()
{
  return static TC2ConfigurationIndex.rateLimitRequestPath.getter();
}

uint64_t sub_1001BFA00()
{
  return static TC2ConfigurationIndex.maxInlineAttestations.getter();
}

uint64_t sub_1001BFA10()
{
  return static TC2ConfigurationIndex.ignoreCertificateErrors.getter();
}

uint64_t sub_1001BFA20()
{
  return static TC2ConfigurationIndex.allowedWorkloadParameters.getter();
}

uint64_t sub_1001BFA30()
{
  return static TC2ConfigurationIndex.maxPrefetchedAttestations.getter();
}

uint64_t sub_1001BFA40()
{
  return static TC2ConfigurationIndex.proposedLiveOnEnvironment.getter();
}

uint64_t sub_1001BFA50()
{
  return static TC2ConfigurationIndex.rateLimiterSessionTimeout.getter();
}

uint64_t sub_1001BFA60()
{
  return static TC2ConfigurationIndex.bootFixedLiveOnEnvironment.getter();
}

uint64_t sub_1001BFA70()
{
  return static TC2ConfigurationIndex.rateLimitRequestMinimumSpacing.getter();
}

uint64_t sub_1001BFA80()
{
  return static TC2ConfigurationIndex.rateLimiterDefaultJitterFactor.getter();
}

uint64_t sub_1001BFA90()
{
  return static TC2ConfigurationIndex.rateLimiterMaximumRateLimitTtl.getter();
}

uint64_t sub_1001BFAA0()
{
  return static TC2ConfigurationIndex.rateLimiterMaximumRateLimitDuration.getter();
}

uint64_t sub_1001BFAB0()
{
  return static TC2ConfigurationIndex.prewarmAttestationsValidityInSeconds.getter();
}

uint64_t sub_1001BFAC0()
{
  return static TC2ConfigurationIndex.rateLimiterSessionLengthForSoftening.getter();
}

uint64_t sub_1001BFAD0()
{
  return static TC2ConfigurationIndex.rateLimitUnmatchedRequestStorageTimeout.getter();
}

uint64_t sub_1001BFAE0()
{
  return TC2ConfigurationIndex.name.getter();
}

uint64_t sub_1001BFAF0()
{
  return TC2ConfigurationIndex.domain.getter();
}

uint64_t sub_1001BFB00()
{
  return type metadata accessor for TrustedRequestLogEntry();
}

uint64_t sub_1001BFB10()
{
  return TrustedRequestLogEntry.init(_:)();
}

uint64_t sub_1001BFB20()
{
  return TC2DefaultConfiguration.init()();
}

uint64_t sub_1001BFB30()
{
  return type metadata accessor for TC2DefaultConfiguration();
}

uint64_t sub_1001BFB40()
{
  return type metadata accessor for TC2RopesResponseMetadata.StatusCode();
}

uint64_t sub_1001BFB50()
{
  return TC2RopesResponseMetadata.retryAfter.getter();
}

uint64_t sub_1001BFB60()
{
  return TC2RopesResponseMetadata.ttrComponentID.getter();
}

uint64_t sub_1001BFB70()
{
  return TC2RopesResponseMetadata.ttrDescription.getter();
}

uint64_t sub_1001BFB80()
{
  return TC2RopesResponseMetadata.ttrComponentName.getter();
}

uint64_t sub_1001BFB90()
{
  return type metadata accessor for TC2RopesResponseMetadata.ReceivedErrorCode();
}

uint64_t sub_1001BFBA0()
{
  return TC2RopesResponseMetadata.receivedErrorCode.getter();
}

uint64_t sub_1001BFBB0()
{
  return TC2RopesResponseMetadata.ttrComponentVersion.getter();
}

uint64_t sub_1001BFBC0()
{
  return TC2RopesResponseMetadata.isAvailabilityConcern.getter();
}

uint64_t sub_1001BFBD0()
{
  return TC2RopesResponseMetadata.init(now:code:)();
}

uint64_t sub_1001BFBE0()
{
  return default argument 0 of TC2RopesResponseMetadata.init(now:code:)();
}

void sub_1001BFBF0(Swift::String value, Swift::String a2)
{
}

uint64_t sub_1001BFC00()
{
  return type metadata accessor for TC2RopesResponseMetadata.Code();
}

uint64_t sub_1001BFC10()
{
  return TC2RopesResponseMetadata.code.getter();
}

uint64_t sub_1001BFC20()
{
  return TC2RopesResponseMetadata.status.getter();
}

uint64_t sub_1001BFC30()
{
  return TC2RopesResponseMetadata.ttrTitle.getter();
}

uint64_t sub_1001BFC40()
{
  return type metadata accessor for TC2RopesResponseMetadata.ErrorCode();
}

uint64_t sub_1001BFC50()
{
  return type metadata accessor for TC2RopesResponseMetadata();
}

uint64_t sub_1001BFC60()
{
  return TC2TrustedRequestMetadata.init(clientRequestID:serverRequestID:environment:creationDate:bundleIdentifier:featureIdentifier:sessionIdentifier:qos:parameters:state:payloadTransportState:responseState:responseCode:ropesVersion:endpoints:)();
}

uint64_t sub_1001BFC70()
{
  return TC2TrustedRequestMetadata.creationDate.getter();
}

uint64_t sub_1001BFC80()
{
  return type metadata accessor for TC2TrustedRequestMetadata();
}

NSXPCInterface sub_1001BFC90()
{
  return interfaceForTC2DaemonProtocol()();
}

uint64_t sub_1001BFCA0()
{
  return TC2TrustedRequestFactoryMetadata.init(requests:)();
}

uint64_t sub_1001BFCB0()
{
  return type metadata accessor for TC2TrustedRequestFactoryMetadata();
}

uint64_t sub_1001BFCC0()
{
  return TC2TrustedRequestEndpointMetadata.init(nodeState:nodeIdentifier:ohttpContext:hasReceivedSummary:dataReceived:cloudOSVersion:cloudOSReleaseType:maybeValidatedCellID:ensembleID:isFromCache:)();
}

uint64_t sub_1001BFCD0()
{
  return type metadata accessor for TC2TrustedRequestEndpointMetadata();
}

uint64_t sub_1001BFCE0()
{
  return TC2TrustedRequestFactoriesMetadata.init(requests:)();
}

uint64_t sub_1001BFCF0()
{
  return type metadata accessor for TC2TrustedRequestFactoriesMetadata();
}

uint64_t sub_1001BFD00()
{
  return TC2JSON<>.json.getter();
}

uint64_t sub_1001BFD10()
{
  return TC2JSON<>.init(json:)();
}

uint64_t sub_1001BFD20()
{
  return Prefetch.Response.id.getter();
}

uint64_t sub_1001BFD30()
{
  return Prefetch.Response.init(id:nodes:)();
}

uint64_t sub_1001BFD40()
{
  return Prefetch.Response.Node.uniqueNodeIdentifier.getter();
}

uint64_t sub_1001BFD50()
{
  return Prefetch.Response.Node.init(identifier:cloudOSVersion:cloudOSReleaseType:validationResult:savedToCache:uniqueNodeIdentifier:)();
}

uint64_t sub_1001BFD60()
{
  return Prefetch.Response.Node.identifier.getter();
}

uint64_t sub_1001BFD70()
{
  return Prefetch.Response.Node.savedToCache.getter();
}

uint64_t sub_1001BFD80()
{
  return type metadata accessor for Prefetch.Response.Node.ValidationResult();
}

uint64_t sub_1001BFD90()
{
  return type metadata accessor for Prefetch.Response.Node();
}

uint64_t sub_1001BFDA0()
{
  return Prefetch.Response.nodes.modify();
}

uint64_t sub_1001BFDB0()
{
  return Prefetch.Response.nodes.getter();
}

uint64_t sub_1001BFDC0()
{
  return type metadata accessor for Prefetch.Response();
}

uint64_t sub_1001BFDD0()
{
  return tc2Logger(forCategory:)();
}

uint64_t sub_1001BFDE0()
{
  return Google_Protobuf_Timestamp.init()();
}

uint64_t sub_1001BFDF0()
{
  return type metadata accessor for Google_Protobuf_Timestamp();
}

uint64_t sub_1001BFE00()
{
  return Google_Protobuf_Duration.timeInterval.getter();
}

uint64_t sub_1001BFE10()
{
  return Google_Protobuf_Duration.init()();
}

uint64_t sub_1001BFE20()
{
  return type metadata accessor for Google_Protobuf_Duration();
}

uint64_t sub_1001BFE30()
{
  return type metadata accessor for ProtobufString();
}

uint64_t sub_1001BFE40()
{
  return UnknownStorage.traverse<A>(visitor:)();
}

uint64_t _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0()
{
  return UnknownStorage.init()();
}

uint64_t sub_1001BFE60()
{
  return type metadata accessor for UnknownStorage();
}

uint64_t sub_1001BFE70()
{
  return type metadata accessor for BinaryDecodingError();
}

uint64_t sub_1001BFE80()
{
  return type metadata accessor for BinaryEncodingError();
}

uint64_t sub_1001BFE90()
{
  return BinaryDecodingOptions.init()();
}

uint64_t sub_1001BFEA0()
{
  return type metadata accessor for BinaryDecodingOptions();
}

uint64_t sub_1001BFEB0()
{
  return _MessageImplementationBase._protobuf_generated_isEqualTo(other:)();
}

uint64_t sub_1001BFEE0()
{
  return dispatch thunk of Decoder.decodeMapField<A, B>(fieldType:value:)();
}

uint64_t sub_1001BFEF0()
{
  return dispatch thunk of Decoder.decodeMapField<A, B>(fieldType:value:)();
}

uint64_t sub_1001BFF00()
{
  return dispatch thunk of Decoder.nextFieldNumber()();
}

uint64_t sub_1001BFF10()
{
  return dispatch thunk of Decoder.handleConflictingOneOf()();
}

uint64_t sub_1001BFF20()
{
  return dispatch thunk of Decoder.decodeRepeatedEnumField<A>(value:)();
}

uint64_t sub_1001BFF30()
{
  return dispatch thunk of Decoder.decodeSingularBoolField(value:)();
}

uint64_t sub_1001BFF40()
{
  return dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)();
}

uint64_t sub_1001BFF50()
{
  return dispatch thunk of Decoder.decodeSingularBytesField(value:)();
}

uint64_t sub_1001BFF60()
{
  return dispatch thunk of Decoder.decodeSingularBytesField(value:)();
}

uint64_t sub_1001BFF70()
{
  return dispatch thunk of Decoder.decodeRepeatedStringField(value:)();
}

uint64_t sub_1001BFF80()
{
  return dispatch thunk of Decoder.decodeSingularDoubleField(value:)();
}

uint64_t sub_1001BFF90()
{
  return dispatch thunk of Decoder.decodeSingularStringField(value:)();
}

uint64_t sub_1001BFFA0()
{
  return dispatch thunk of Decoder.decodeSingularStringField(value:)();
}

uint64_t sub_1001BFFB0()
{
  return dispatch thunk of Decoder.decodeSingularUInt32Field(value:)();
}

uint64_t sub_1001BFFC0()
{
  return dispatch thunk of Decoder.decodeSingularUInt32Field(value:)();
}

uint64_t sub_1001BFFD0()
{
  return dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)();
}

uint64_t sub_1001BFFE0()
{
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t sub_1001BFFF0()
{
  return Message.isInitialized.getter();
}

uint64_t sub_1001C0000()
{
  return Message.serializedData(partial:)();
}

uint64_t sub_1001C0010()
{
  return Message.init<A>(contiguousBytes:extensions:partial:options:)();
}

uint64_t sub_1001C0020()
{
  return Message.init<A>(serializedBytes:extensions:partial:options:)();
}

uint64_t sub_1001C0040()
{
  return Message.textFormatString()()._countAndFlagsBits;
}

uint64_t sub_1001C0050()
{
  return Message.hash(into:)();
}

uint64_t sub_1001C0060()
{
  return static Message.with(_:)();
}

uint64_t sub_1001C0070()
{
  return dispatch thunk of Visitor.visitMapField<A, B>(fieldType:value:fieldNumber:)();
}

uint64_t sub_1001C0080()
{
  return dispatch thunk of Visitor.visitMapField<A, B>(fieldType:value:fieldNumber:)();
}

uint64_t sub_1001C0090()
{
  return dispatch thunk of Visitor.visitPackedEnumField<A>(value:fieldNumber:)();
}

uint64_t sub_1001C00A0()
{
  return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
}

uint64_t sub_1001C00B0()
{
  return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
}

uint64_t sub_1001C00C0()
{
  return dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:)();
}

uint64_t sub_1001C00D0()
{
  return dispatch thunk of Visitor.visitRepeatedStringField(value:fieldNumber:)();
}

uint64_t sub_1001C00E0()
{
  return dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
}

uint64_t sub_1001C00F0()
{
  return dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
}

uint64_t sub_1001C0100()
{
  return dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)();
}

uint64_t sub_1001C0110()
{
  return dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)();
}

uint64_t sub_1001C0120()
{
  return dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
}

uint64_t sub_1001C0130()
{
  return type metadata accessor for _NameMap.NameDescription();
}

uint64_t sub_1001C0140()
{
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t sub_1001C0150()
{
  return _NameMap.init()();
}

uint64_t sub_1001C0160()
{
  return type metadata accessor for _NameMap();
}

uint64_t sub_1001C0170()
{
  return static GMBypass.gmEligibilityBypass()();
}

uint64_t sub_1001C0180()
{
  return type metadata accessor for GMBypass();
}

uint64_t sub_1001C0190()
{
  return type metadata accessor for Library.Streams.PrivateCloudCompute.RequestLog();
}

uint64_t sub_1001C01A0()
{
  return static StreamResource.source()();
}

uint64_t sub_1001C01B0()
{
  return PrivateCloudComputeRequestLog.Attestation.attestationBundle.setter();
}

uint64_t sub_1001C01C0()
{
  return PrivateCloudComputeRequestLog.Attestation.node.setter();
}

uint64_t sub_1001C01D0()
{
  return PrivateCloudComputeRequestLog.Attestation.nodeState.setter();
}

uint64_t sub_1001C01E0()
{
  return PrivateCloudComputeRequestLog.Attestation.init()();
}

uint64_t sub_1001C01F0()
{
  return type metadata accessor for PrivateCloudComputeRequestLog.Attestation();
}

uint64_t sub_1001C0200()
{
  return PrivateCloudComputeRequestLog.pipelineKind.setter();
}

uint64_t sub_1001C0210()
{
  return PrivateCloudComputeRequestLog.pipelineParameters.setter();
}

uint64_t sub_1001C0220()
{
  return PrivateCloudComputeRequestLog.nodes.setter();
}

uint64_t sub_1001C0230()
{
  return PrivateCloudComputeRequestLog.requestId.setter();
}

uint64_t sub_1001C0240()
{
  return PrivateCloudComputeRequestLog.timestamp.setter();
}

uint64_t sub_1001C0250()
{
  return type metadata accessor for PrivateCloudComputeRequestLog();
}

uint64_t sub_1001C0260()
{
  return dispatch thunk of Source.sendEvent(_:)();
}

uint64_t sub_1001C0270()
{
  return static Buildable.with(_:)();
}

uint64_t sub_1001C0280()
{
  return OSSignpostID.init(log:)();
}

uint64_t sub_1001C0290()
{
  return OSSignpostID.rawValue.getter();
}

uint64_t sub_1001C02A0()
{
  return type metadata accessor for OSSignpostID();
}

uint64_t sub_1001C02B0()
{
  return OSSignposter.init(logger:)();
}

uint64_t sub_1001C02C0()
{
  return OSSignposter.logHandle.getter();
}

uint64_t sub_1001C02D0()
{
  return type metadata accessor for OSSignposter();
}

uint64_t sub_1001C02E0()
{
  return type metadata accessor for OSSignpostError();
}

uint64_t sub_1001C02F0()
{
  return OSSignpostIntervalState.signpostID.getter();
}

uint64_t sub_1001C0300()
{
  return OSSignpostIntervalState.init(id:isOpen:)();
}

uint64_t sub_1001C0310()
{
  return type metadata accessor for OSSignpostIntervalState();
}

uint64_t sub_1001C0320()
{
  return checkForErrorAndConsumeState(state:)();
}

uint64_t sub_1001C0330()
{
  return Logger.logObject.getter();
}

uint64_t sub_1001C0340()
{
  return type metadata accessor for Logger();
}

uint64_t sub_1001C0350()
{
  return TransparencyReport.enabled.getter();
}

uint64_t sub_1001C0360()
{
  return TransparencyReport.init()();
}

uint64_t sub_1001C0370()
{
  return type metadata accessor for TransparencyReport();
}

uint64_t sub_1001C0380()
{
  return POSIXErrorCode.rawValue.getter();
}

uint64_t sub_1001C0390()
{
  return errno.getter();
}

uint64_t sub_1001C03A0()
{
  return HTTPFields.init(dictionaryLiteral:)();
}

uint64_t sub_1001C03B0()
{
  return type metadata accessor for HTTPFields();
}

uint64_t sub_1001C03C0()
{
  return HTTPFields.subscript.getter();
}

uint64_t sub_1001C03D0()
{
  return HTTPFields.subscript.setter();
}

uint64_t sub_1001C03E0()
{
  return type metadata accessor for NWActivity.CompletionReason();
}

uint64_t sub_1001C03F0()
{
  return dispatch thunk of NWActivity.__allocating_init(domain:label:)();
}

uint64_t sub_1001C0400()
{
  return NWActivity.complete(reason:)();
}

uint64_t sub_1001C0410()
{
  return type metadata accessor for NWActivity();
}

uint64_t sub_1001C0420()
{
  return type metadata accessor for NWEndpoint();
}

uint64_t sub_1001C0430()
{
  return static HTTPRequest.Method.post.getter();
}

uint64_t sub_1001C0440()
{
  return type metadata accessor for HTTPRequest.Method();
}

uint64_t sub_1001C0450()
{
  return HTTPRequest.init(method:scheme:authority:path:headerFields:)();
}

uint64_t sub_1001C0460()
{
  return type metadata accessor for HTTPRequest();
}

uint64_t sub_1001C0470()
{
  return HTTPResponse.headerFields.getter();
}

uint64_t sub_1001C0480()
{
  return static HTTPResponse.Status.== infix(_:_:)();
}

uint64_t sub_1001C0490()
{
  return static HTTPResponse.Status.ok.getter();
}

uint64_t sub_1001C04A0()
{
  return HTTPResponse.Status.code.getter();
}

uint64_t sub_1001C04B0()
{
  return type metadata accessor for HTTPResponse.Status();
}

uint64_t sub_1001C04C0()
{
  return HTTPResponse.status.getter();
}

uint64_t sub_1001C04D0()
{
  return type metadata accessor for HTTPResponse();
}

uint64_t sub_1001C04E0()
{
  return NWConnection.identifier.getter();
}

uint64_t sub_1001C04F0()
{
  return NWConnection.currentPath.getter();
}

void sub_1001C0500()
{
}

uint64_t sub_1001C0510()
{
  return NWConnection.startActivity(_:)();
}

uint64_t sub_1001C0520()
{
  return NWConnection.ContentContext.identifier.getter();
}

uint64_t sub_1001C0530()
{
  return NWConnection.ContentContext.httpResponse.getter();
}

uint64_t sub_1001C0540()
{
  return static NWConnection.ContentContext.defaultMessage.getter();
}

uint64_t sub_1001C0550()
{
  return dispatch thunk of NWConnection.ContentContext.protocolMetadata(definition:)();
}

uint64_t sub_1001C0560()
{
  return NWConnection.ContentContext.__allocating_init(request:)();
}

uint64_t sub_1001C0570()
{
  return type metadata accessor for NWConnection.ContentContext();
}

uint64_t sub_1001C0580()
{
  return type metadata accessor for NWConnection.SendCompletion();
}

uint64_t sub_1001C0590()
{
  return NWConnection.stateUpdateHandler.setter();
}

uint64_t sub_1001C05A0()
{
  return NWConnection.EstablishmentReport.proxyEndpoint.getter();
}

uint64_t sub_1001C05B0()
{
  return type metadata accessor for NWConnection.EstablishmentReport();
}

uint64_t sub_1001C05C0()
{
  return NWConnection.__allocating_init(obliviousHTTPConnection:gatewayKeyConfig:contextID:mediaType:)();
}

uint64_t sub_1001C05D0()
{
  return NWConnection.__allocating_init<A>(obliviousHTTPConnection:standaloneAEADKey:contextID:)();
}

uint64_t sub_1001C05E0()
{
  return NWConnection.requestEstablishmentReport(queue:completion:)();
}

uint64_t sub_1001C05F0()
{
  return NWConnection.init(to:using:)();
}

uint64_t sub_1001C0600()
{
  return NWConnection.send(content:contentContext:isComplete:completion:)();
}

uint64_t sub_1001C0610()
{
  return type metadata accessor for NWConnection.State();
}

uint64_t sub_1001C0620()
{
  return NWConnection.start(queue:)();
}

void sub_1001C0630()
{
}

uint64_t sub_1001C0640()
{
  return NWConnection.receive(minimumIncompleteLength:maximumLength:completion:)();
}

uint64_t sub_1001C0650()
{
  return type metadata accessor for NWConnection();
}

uint64_t sub_1001C0660()
{
  return dispatch thunk of NWParameters.ProtocolStack.applicationProtocols.modify();
}

uint64_t sub_1001C0670()
{
  return dispatch thunk of NWParameters.ProtocolStack.applicationProtocols.setter();
}

uint64_t sub_1001C0680()
{
  return NWParameters.defaultProtocolStack.getter();
}

uint64_t sub_1001C0690()
{
  return NWParameters.sourceApplicationBundleID.setter();
}

uint64_t sub_1001C06A0()
{
  return NWParameters.nw.getter();
}

uint64_t sub_1001C06B0()
{
  return static NWParameters.tcp.getter();
}

uint64_t sub_1001C06C0()
{
  return type metadata accessor for NWParameters();
}

uint64_t sub_1001C06D0()
{
  return dispatch thunk of NWProtocolTLS.Options.securityProtocolOptions.getter();
}

uint64_t sub_1001C06E0()
{
  return NWProtocolTLS.Options.init()();
}

uint64_t sub_1001C06F0()
{
  return type metadata accessor for NWProtocolTLS.Options();
}

uint64_t sub_1001C0700()
{
  return static NWProtocolHTTP.definition.getter();
}

uint64_t sub_1001C0710()
{
  return NWProtocolHTTP.Options.__allocating_init()();
}

uint64_t sub_1001C0720()
{
  return type metadata accessor for NWProtocolHTTP.Options();
}

uint64_t sub_1001C0730()
{
  return NWProtocolHTTP.Metadata.trailerFields.getter();
}

uint64_t sub_1001C0740()
{
  return type metadata accessor for NWProtocolHTTP.Metadata();
}

uint64_t sub_1001C0750()
{
  return type metadata accessor for NWProtocolHTTP();
}

uint64_t sub_1001C0760()
{
  return type metadata accessor for NWProtocolOptions();
}

uint64_t sub_1001C0770()
{
  return NWProtocolHTTPEncoding.Options.__allocating_init()();
}

uint64_t sub_1001C0780()
{
  return type metadata accessor for NWProtocolHTTPEncoding.Options();
}

uint64_t sub_1001C0790()
{
  return type metadata accessor for NWPath.Status();
}

uint64_t sub_1001C07A0()
{
  return NWPath.status.getter();
}

uint64_t sub_1001C07B0()
{
  return type metadata accessor for NWPath();
}

uint64_t sub_1001C07C0()
{
  return type metadata accessor for NWError();
}

uint64_t sub_1001C07D0()
{
  return HTTPField.Name.rawName.getter();
}

uint64_t sub_1001C07E0()
{
  return static HTTPField.Name.contentType.getter();
}

uint64_t sub_1001C07F0()
{
  return static HTTPField.Name.authorization.getter();
}

uint64_t sub_1001C0800()
{
  return static HTTPField.Name.accept.getter();
}

uint64_t sub_1001C0810()
{
  return static HTTPField.Name.userAgent.getter();
}

uint64_t sub_1001C0820()
{
  return type metadata accessor for HTTPField.Name();
}

uint64_t sub_1001C0830()
{
  return HTTPField.Name.init(_:)();
}

uint64_t sub_1001C0840()
{
  return HTTPField.init(name:value:)();
}

uint64_t sub_1001C0850()
{
  return HTTPField.name.getter();
}

uint64_t sub_1001C0860()
{
  return HTTPField.value.getter();
}

uint64_t sub_1001C0870()
{
  return type metadata accessor for HTTPField();
}

uint64_t sub_1001C0880()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t sub_1001C0890()
{
  return type metadata accessor for DispatchQoS.QoSClass();
}

uint64_t sub_1001C08A0()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t sub_1001C08B0()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t sub_1001C08C0()
{
  return dispatch thunk of HashFunction.update(bufferPointer:)();
}

uint64_t sub_1001C08D0()
{
  return dispatch thunk of HashFunction.finalize()();
}

uint64_t sub_1001C08E0()
{
  return dispatch thunk of HashFunction.init()();
}

uint64_t sub_1001C08F0()
{
  return SHA256Digest.withUnsafeBytes<A>(_:)();
}

uint64_t sub_1001C0900()
{
  return type metadata accessor for SHA256Digest();
}

uint64_t sub_1001C0910()
{
  return type metadata accessor for SHA256();
}

uint64_t sub_1001C0920()
{
  return dispatch thunk of BackingData.setValue<A>(forKey:to:)();
}

uint64_t sub_1001C0930()
{
  return ModelActor.modelContext.getter();
}

uint64_t sub_1001C0950()
{
  return dispatch thunk of ModelContext.fetchCount<A>(_:)();
}

uint64_t sub_1001C0960()
{
  return dispatch thunk of ModelContext.hasChanges.getter();
}

uint64_t sub_1001C0970()
{
  return dispatch thunk of ModelContext.save()();
}

uint64_t sub_1001C0980()
{
  return dispatch thunk of ModelContext.fetch<A>(_:)();
}

uint64_t sub_1001C0990()
{
  return dispatch thunk of ModelContext.delete<A>(model:where:includeSubclasses:)();
}

uint64_t sub_1001C09A0()
{
  return dispatch thunk of ModelContext.insert<A>(_:)();
}

uint64_t sub_1001C09B0()
{
  return type metadata accessor for ModelContext();
}

uint64_t sub_1001C09C0()
{
  return ModelContext.init(_:)();
}

uint64_t sub_1001C09D0()
{
  return ModelContainer.__allocating_init(for:migrationPlan:configurations:)();
}

uint64_t sub_1001C09E0()
{
  return type metadata accessor for ModelContainer();
}

uint64_t sub_1001C09F0()
{
  return FetchDescriptor.init(predicate:sortBy:)();
}

uint64_t sub_1001C0A00()
{
  return static PersistentModel.createBackingData<A>()();
}

uint64_t sub_1001C0A20()
{
  return PersistentModel.id.getter();
}

uint64_t sub_1001C0A30()
{
  return PersistentModel.hash(into:)();
}

uint64_t sub_1001C0A40()
{
  return PersistentModel.getValue<A>(forKey:)();
}

uint64_t sub_1001C0A50()
{
  return PersistentModel.setValue<A>(forKey:to:)();
}

uint64_t sub_1001C0A60()
{
  return static ModelConfiguration.CloudKitDatabase.automatic.getter();
}

uint64_t sub_1001C0A70()
{
  return type metadata accessor for ModelConfiguration.CloudKitDatabase();
}

uint64_t sub_1001C0A80()
{
  return type metadata accessor for ModelConfiguration();
}

uint64_t sub_1001C0A90()
{
  return ModelConfiguration.init(_:schema:url:allowsSave:cloudKitDatabase:)();
}

uint64_t sub_1001C0AA0()
{
  return DefaultSerialModelExecutor.init(modelContext:)();
}

uint64_t sub_1001C0AB0()
{
  return type metadata accessor for DefaultSerialModelExecutor();
}

uint64_t sub_1001C0AC0()
{
  return Schema.__allocating_init(versionedSchema:)();
}

uint64_t sub_1001C0AD0()
{
  return Schema.encodingVersion.getter();
}

uint64_t sub_1001C0AE0()
{
  return Schema.PropertyMetadata.init(name:keypath:defaultValue:metadata:)();
}

uint64_t sub_1001C0AF0()
{
  return type metadata accessor for Schema.PropertyMetadata();
}

uint64_t sub_1001C0B00()
{
  return Schema.Index.init(_:)();
}

uint64_t sub_1001C0B20()
{
  return static Schema.Attribute.Option.unique.getter();
}

uint64_t sub_1001C0B30()
{
  return type metadata accessor for Schema.Attribute.Option();
}

uint64_t sub_1001C0B40()
{
  return type metadata accessor for Schema.Attribute();
}

uint64_t sub_1001C0B50()
{
  return Schema.Attribute.init(_:originalName:hashModifier:)();
}

uint64_t sub_1001C0B60()
{
  return type metadata accessor for Schema();
}

uint64_t sub_1001C0B70()
{
  return CancellationError.init()();
}

uint64_t sub_1001C0B80()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1001C0B90()
{
  return Dictionary.description.getter();
}

uint64_t sub_1001C0BA0()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t sub_1001C0BB0()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t sub_1001C0BC0()
{
  return dispatch thunk of static Comparable.< infix(_:_:)();
}

uint64_t sub_1001C0BD0()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

NSString sub_1001C0BE0()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_1001C0BF0()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1001C0C00()
{
  return String.data(using:allowLossyConversion:)();
}

uint64_t sub_1001C0C10()
{
  return String.init(data:encoding:)();
}

uint64_t sub_1001C0C20()
{
  return static String.Encoding.utf8.getter();
}

uint64_t sub_1001C0C30()
{
  return type metadata accessor for String.Encoding();
}

uint64_t sub_1001C0C40()
{
  return String.init<A>(describing:)();
}

uint64_t sub_1001C0C50()
{
  return String.init<A>(reflecting:)();
}

uint64_t sub_1001C0C60()
{
  return String.utf8CString.getter();
}

uint64_t sub_1001C0C70()
{
  return static String._fromSubstring(_:)();
}

void sub_1001C0C80(Swift::Int a1)
{
}

void sub_1001C0CA0(Swift::String defaultsDomain, Swift::String name)
{
}

uint64_t sub_1001C0CB0()
{
  return String.hash(into:)();
}

uint64_t sub_1001C0CC0()
{
  return String.count.getter();
}

uint64_t sub_1001C0CD0()
{
  return String.index(after:)();
}

uint64_t sub_1001C0CE0()
{
  return String.index(_:offsetBy:limitedBy:)();
}

uint64_t sub_1001C0CF0()
{
  return String.append<A>(contentsOf:)();
}

void sub_1001C0D00(Swift::String a1)
{
}

uint64_t sub_1001C0D10()
{
  return String.init(cString:)();
}

Swift::Int sub_1001C0D20()
{
  return String.UTF8View._foreignCount()();
}

uint64_t sub_1001C0D30()
{
  return String.subscript.getter();
}

uint64_t sub_1001C0D40()
{
  return String.init<A>(_:)();
}

uint64_t sub_1001C0D50()
{
  return String.subscript.getter();
}

uint64_t sub_1001C0D60()
{
  return Sequence.suffix(_:)();
}

uint64_t sub_1001C0D70()
{
  return dispatch thunk of RawRepresentable.rawValue.getter();
}

uint64_t sub_1001C0D80()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1001C0DC0()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1001C0DD0()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray sub_1001C0DE0()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_1001C0DF0()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1001C0E00()
{
  return Array.description.getter();
}

uint64_t sub_1001C0E10()
{
  return specialized Array._endMutation()();
}

uint64_t sub_1001C0E20()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_1001C0E30()
{
  return static Array._allocateUninitialized(_:)();
}

uint64_t sub_1001C0E40()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

uint64_t sub_1001C0E50()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_1001C0E60()
{
  return Array.count.getter();
}

uint64_t sub_1001C0E70()
{
  return Array.append(_:)();
}

uint64_t sub_1001C0E80()
{
  return Array.remove(at:)();
}

uint64_t sub_1001C0E90()
{
  return type metadata accessor for Array();
}

uint64_t sub_1001C0EA0()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t sub_1001C0EB0()
{
  return CheckedContinuation.resume(throwing:)();
}

uint64_t sub_1001C0EC0()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_1001C0ED0()
{
  return type metadata accessor for CheckedContinuation();
}

uint64_t sub_1001C0EE0()
{
  return type metadata accessor for CancellationError();
}

void sub_1001C0F00()
{
}

uint64_t sub_1001C0F30()
{
  return static MainActor.shared.getter();
}

uint64_t sub_1001C0F40()
{
  return type metadata accessor for MainActor();
}

uint64_t sub_1001C0F50()
{
  return static TaskPriority.background.getter();
}

uint64_t sub_1001C0F60()
{
  return static TaskPriority.userInitiated.getter();
}

uint64_t sub_1001C0F70()
{
  return static TaskPriority.low.getter();
}

uint64_t sub_1001C0F80()
{
  return static TaskPriority.high.getter();
}

uint64_t sub_1001C0F90()
{
  return static TaskPriority.utility.getter();
}

uint64_t sub_1001C0FA0()
{
  return TaskPriority.init(rawValue:)();
}

uint64_t sub_1001C0FB0()
{
  return TaskPriority.rawValue.getter();
}

uint64_t sub_1001C0FC0()
{
  return type metadata accessor for TaskPriority();
}

uint64_t sub_1001C0FD0()
{
  return static AsyncStream.makeStream(of:bufferingPolicy:)();
}

uint64_t sub_1001C0FE0()
{
  return AsyncStream.Continuation.yield(_:)();
}

void sub_1001C0FF0()
{
}

uint64_t sub_1001C1000()
{
  return type metadata accessor for AsyncStream.Continuation();
}

uint64_t sub_1001C1010()
{
  return AsyncStream.makeAsyncIterator()();
}

void sub_1001C1030()
{
}

uint64_t sub_1001C1040()
{
  return static Task<>.isCancelled.getter();
}

uint64_t sub_1001C1050()
{
  return static Task<>.currentPriority.getter();
}

void sub_1001C1080()
{
}

uint64_t sub_1001C1090()
{
  return AsyncSequence<>.lines.getter();
}

uint64_t sub_1001C10A0()
{
  return dispatch thunk of AsyncSequence.makeAsyncIterator()();
}

uint64_t sub_1001C10B0()
{
  return Double.write<A>(to:)();
}

uint64_t sub_1001C10C0()
{
  return Set.description.getter();
}

uint64_t sub_1001C10D0()
{
  return Set.init(minimumCapacity:)();
}

void sub_1001C10E0(Swift::Int a1)
{
}

NSNumber sub_1001C10F0()
{
  return Int._bridgeToObjectiveC()();
}

uint64_t sub_1001C1100()
{
  return dispatch thunk of Collection.startIndex.getter();
}

uint64_t sub_1001C1110()
{
  return dispatch thunk of Collection.count.getter();
}

uint64_t sub_1001C1120()
{
  return dispatch thunk of Collection.endIndex.getter();
}

uint64_t sub_1001C1130()
{
  return dispatch thunk of Collection.formIndex(after:)();
}

uint64_t sub_1001C1140()
{
  return Collection.firstIndex(where:)();
}

uint64_t sub_1001C1150()
{
  return dispatch thunk of Collection.subscript.read();
}

uint64_t sub_1001C1160()
{
  return dispatch thunk of RangeReplaceableCollection.append<A>(contentsOf:)();
}

void sub_1001C1170(Swift::Int a1)
{
}

uint64_t sub_1001C1180()
{
  return RangeReplaceableCollection<>.removeAll(where:)();
}

uint64_t sub_1001C1190()
{
  return dispatch thunk of RangeReplaceableCollection.init()();
}

uint64_t sub_1001C11A0()
{
  return NSFileHandle.write<A>(contentsOf:)();
}

Swift::UInt64 sub_1001C11B0()
{
  return NSFileHandle.seekToEnd()();
}

uint64_t sub_1001C11D0()
{
  return static os_log_type_t.info.getter();
}

uint64_t sub_1001C11E0()
{
  return static os_log_type_t.debug.getter();
}

uint64_t sub_1001C11F0()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_1001C1200()
{
  return static os_log_type_t.default.getter();
}

uint64_t sub_1001C1210()
{
  return static OS_dispatch_queue.Attributes.concurrent.getter();
}

uint64_t sub_1001C1220()
{
  return type metadata accessor for OS_dispatch_queue.Attributes();
}

uint64_t sub_1001C1230()
{
  return type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
}

uint64_t sub_1001C1240()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t sub_1001C1250()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t sub_1001C1260()
{
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

uint64_t sub_1001C1270()
{
  return static OS_dispatch_queue.global(qos:)();
}

uint64_t sub_1001C1280()
{
  return static os_signpost_type_t.end.getter();
}

uint64_t sub_1001C1290()
{
  return static os_signpost_type_t.begin.getter();
}

uint64_t sub_1001C12A0()
{
  return static os_signpost_type_t.event.getter();
}

uint64_t sub_1001C12B0()
{
  return type metadata accessor for OS_dispatch_queue_serial.Attributes();
}

uint64_t sub_1001C12C0()
{
  return OS_dispatch_queue_serial.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

uint64_t sub_1001C12D0()
{
  return OS_os_log.signpostsEnabled.getter();
}

uint64_t sub_1001C12E0()
{
  return Optional<A>.defaultsWrite(defaultsDomain:name:)();
}

uint64_t sub_1001C12F0()
{
  return type metadata accessor for Optional();
}

uint64_t sub_1001C1300()
{
  return Substring.distance(from:to:)();
}

uint64_t sub_1001C1310()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_1001C1320()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t sub_1001C1330()
{
  return StringProtocol.components<A>(separatedBy:)();
}

uint64_t sub_1001C1340()
{
  return StringProtocol.trimmingCharacters(in:)();
}

uint64_t sub_1001C1350()
{
  return StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
}

uint64_t sub_1001C1360()
{
  return StringProtocol.contains<A>(_:)();
}

uint64_t sub_1001C1370()
{
  return StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)();
}

uint64_t sub_1001C1380()
{
  return dispatch thunk of BinaryInteger.init<A>(truncatingIfNeeded:)();
}

uint64_t sub_1001C1390()
{
  return dispatch thunk of BinaryInteger._lowWord.getter();
}

uint64_t sub_1001C13A0()
{
  return dispatch thunk of BinaryInteger.bitWidth.getter();
}

uint64_t sub_1001C13B0()
{
  return dispatch thunk of static BinaryInteger.isSigned.getter();
}

uint64_t sub_1001C13C0()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t sub_1001C13D0()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_1001C13E0()
{
  return _HashTable.previousHole(before:)();
}

uint64_t sub_1001C13F0()
{
  return _HashTable.nextHole(atOrAfter:)();
}

uint64_t sub_1001C1400()
{
  return static _SetStorage.copy(original:)();
}

uint64_t sub_1001C1410()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

void sub_1001C1420(Swift::Int a1)
{
}

uint64_t sub_1001C1430()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t sub_1001C1440()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_1001C1450()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_1001C1460()
{
  return _StringObject.sharedUTF8.getter();
}

void sub_1001C1480(Swift::Int a1)
{
}

uint64_t sub_1001C1490()
{
  return ContiguousArray.append(_:)();
}

uint64_t sub_1001C14A0()
{
  return ContiguousArray.init()();
}

uint64_t sub_1001C14B0()
{
  return type metadata accessor for ContiguousArray();
}

uint64_t sub_1001C14C0()
{
  return type metadata accessor for ContinuousClock.Instant();
}

uint64_t sub_1001C14D0()
{
  return ContinuousClock.init()();
}

uint64_t sub_1001C14E0()
{
  return type metadata accessor for ContinuousClock();
}

uint64_t sub_1001C14F0()
{
  return dispatch thunk of InstantProtocol.advanced(by:)();
}

uint64_t sub_1001C1500()
{
  return dispatch thunk of InstantProtocol.duration(to:)();
}

uint64_t sub_1001C1510()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t sub_1001C1520()
{
  return TextOutputStream._writeASCII(_:)();
}

void sub_1001C1530()
{
}

void sub_1001C1540()
{
}

uint64_t sub_1001C1550()
{
  return dispatch thunk of static FixedWidthInteger.bitWidth.getter();
}

uint64_t sub_1001C1560()
{
  return dispatch thunk of FixedWidthInteger.init(bigEndian:)();
}

uint64_t sub_1001C1570()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_1001C1580()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_1001C1590()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t sub_1001C15A0()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t sub_1001C15B0()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t sub_1001C15C0()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t sub_1001C15D0()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

Swift::Int sub_1001C15E0(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases, string);
}

uint64_t sub_1001C1600()
{
  return KeyedDecodingContainer.nestedUnkeyedContainer(forKey:)();
}

uint64_t sub_1001C1610()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_1001C1620()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_1001C1630()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_1001C1640()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_1001C1650()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1001C1660()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1001C1670()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1001C1680()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1001C1690()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_1001C16A0()
{
  return type metadata accessor for KeyedDecodingContainer();
}

uint64_t sub_1001C16B0()
{
  return KeyedEncodingContainer.nestedUnkeyedContainer(forKey:)();
}

uint64_t sub_1001C16C0()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_1001C16D0()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_1001C16E0()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_1001C16F0()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_1001C1700()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_1001C1710()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_1001C1720()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_1001C1730()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_1001C1740()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_1001C1750()
{
  return type metadata accessor for KeyedEncodingContainer();
}

uint64_t sub_1001C1760()
{
  return _stringCompareInternal(_:_:_:_:expecting:)();
}

uint64_t sub_1001C1770()
{
  return AsyncCompactMapSequence.init(_:transform:)();
}

uint64_t sub_1001C1780()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_1001C17B0()
{
  return dispatch thunk of UnkeyedDecodingContainer.nestedContainer<A>(keyedBy:)();
}

uint64_t sub_1001C17C0()
{
  return dispatch thunk of UnkeyedDecodingContainer.count.getter();
}

uint64_t sub_1001C17D0()
{
  return dispatch thunk of UnkeyedDecodingContainer.decode<A>(_:)();
}

uint64_t sub_1001C17E0()
{
  return dispatch thunk of UnkeyedDecodingContainer.isAtEnd.getter();
}

uint64_t sub_1001C17F0()
{
  return dispatch thunk of UnkeyedEncodingContainer.nestedContainer<A>(keyedBy:)();
}

uint64_t sub_1001C1800()
{
  return dispatch thunk of UnkeyedEncodingContainer.encode<A>(_:)();
}

uint64_t sub_1001C1810()
{
  return _getErrorEmbeddedNSError<A>(_:)();
}

uint64_t sub_1001C1820()
{
  return dispatch thunk of ExpressibleByIntegerLiteral.init(integerLiteral:)();
}

uint64_t sub_1001C1830()
{
  return _diagnoseUnexpectedEnumCase<A>(type:)();
}

uint64_t sub_1001C1840()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_1001C1870()
{
  return _findStringSwitchCaseWithCache(cases:string:cache:)();
}

uint64_t sub_1001C1880()
{
  return AsyncThrowingCompactMapSequence.init(_:transform:)();
}

uint64_t sub_1001C18A0()
{
  return dispatch thunk of _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:)();
}

uint64_t sub_1001C18B0()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_1001C18C0()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_1001C18D0()
{
  return dispatch thunk of Clock.now.getter();
}

uint64_t sub_1001C18F0()
{
  return Error.localizedDescription.getter();
}

uint64_t sub_1001C1900()
{
  return Error._getEmbeddedNSError()();
}

uint64_t sub_1001C1910()
{
  return Error._code.getter();
}

uint64_t sub_1001C1920()
{
  return Error._domain.getter();
}

uint64_t sub_1001C1930()
{
  return Error._userInfo.getter();
}

uint64_t sub_1001C1940()
{
  return print<A>(_:separator:terminator:to:)();
}

uint64_t sub_1001C1950()
{
  return Hasher.init(_seed:)();
}

void sub_1001C1960(Swift::UInt a1)
{
}

void sub_1001C1970(Swift::UInt8 a1)
{
}

void sub_1001C1980(Swift::UInt64 a1)
{
}

Swift::Int sub_1001C1990()
{
  return Hasher._finalize()();
}

uint64_t sub_1001C19A0()
{
  return type metadata accessor for Result();
}

uint64_t sub_1001C19B0()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t sub_1001C19C0()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t sub_1001C19D0()
{
  return Duration.components.getter();
}

uint64_t sub_1001C19E0()
{
  return static Duration.< infix(_:_:)();
}

uint64_t sub_1001C19F0()
{
  return static Duration.seconds(_:)();
}

uint64_t sub_1001C1A20()
{
  return _typeName(_:qualified:)();
}

uint64_t CPCopyBundleIdentifierAndTeamFromAuditToken()
{
  return _CPCopyBundleIdentifierAndTeamFromAuditToken();
}

IOReturn IOPMAssertionCreateWithDescription(CFStringRef AssertionType, CFStringRef Name, CFStringRef Details, CFStringRef HumanReadableReason, CFStringRef LocalizationBundlePath, CFTimeInterval Timeout, CFStringRef TimeoutAction, IOPMAssertionID *AssertionID)
{
  return _IOPMAssertionCreateWithDescription(AssertionType, Name, Details, HumanReadableReason, LocalizationBundlePath, Timeout, TimeoutAction, AssertionID);
}

IOReturn IOPMAssertionRelease(IOPMAssertionID AssertionID)
{
  return _IOPMAssertionRelease(AssertionID);
}

uint64_t MobileGestalt_copy_buildVersion_obj()
{
  return _MobileGestalt_copy_buildVersion_obj();
}

uint64_t MobileGestalt_copy_marketingDeviceFamilyName_obj()
{
  return _MobileGestalt_copy_marketingDeviceFamilyName_obj();
}

uint64_t MobileGestalt_copy_marketingProductName_obj()
{
  return _MobileGestalt_copy_marketingProductName_obj();
}

uint64_t MobileGestalt_copy_productName_obj()
{
  return _MobileGestalt_copy_productName_obj();
}

uint64_t MobileGestalt_copy_productType_obj()
{
  return _MobileGestalt_copy_productType_obj();
}

uint64_t MobileGestalt_copy_productVersion_obj()
{
  return _MobileGestalt_copy_productVersion_obj();
}

uint64_t MobileGestalt_copy_uniqueDeviceID_obj()
{
  return _MobileGestalt_copy_uniqueDeviceID_obj();
}

uint64_t MobileGestalt_get_current_device()
{
  return _MobileGestalt_get_current_device();
}

int SecRandomCopyBytes(SecRandomRef rnd, size_t count, void *bytes)
{
  return _SecRandomCopyBytes(rnd, count, bytes);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_release(const void *aBlock)
{
}

double __exp10(double a1)
{
  return ___exp10(a1);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _set_user_dir_suffix()
{
  return __set_user_dir_suffix();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

void bzero(void *a1, size_t a2)
{
}

size_t compression_decode_buffer(uint8_t *dst_buffer, size_t dst_size, const uint8_t *src_buffer, size_t src_size, void *scratch_buffer, compression_algorithm algorithm)
{
  return _compression_decode_buffer(dst_buffer, dst_size, src_buffer, src_size, scratch_buffer, algorithm);
}

size_t confstr(int a1, char *a2, size_t a3)
{
  return _confstr(a1, a2, a3);
}

void exit(int a1)
{
}

void free(void *a1)
{
}

long double log10(long double __x)
{
  return _log10(__x);
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return _memcmp(__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return _memset(__b, __c, __len);
}

uint64_t nw_parameters_set_privacy_proxy_fail_closed()
{
  return _nw_parameters_set_privacy_proxy_fail_closed();
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return _objc_msgSendSuper2(a1, a2);
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

uint64_t os_transaction_create()
{
  return _os_transaction_create();
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t os_variant_allows_internal_security_policies()
{
  return _os_variant_allows_internal_security_policies();
}

uint64_t os_variant_has_internal_content()
{
  return _os_variant_has_internal_content();
}

void sec_protocol_options_set_verify_block(sec_protocol_options_t options, sec_protocol_verify_t verify_block, dispatch_queue_t verify_block_queue)
{
}

char *__cdecl strerror(int __errnum)
{
  return _strerror(__errnum);
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return _swift_allocateGenericClassMetadata();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_asyncLet_begin()
{
  return _swift_asyncLet_begin();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_checkMetadataState()
{
  return _swift_checkMetadataState();
}

uint64_t swift_continuation_init()
{
  return _swift_continuation_init();
}

uint64_t swift_deallocClassInstance()
{
  return _swift_deallocClassInstance();
}

uint64_t swift_defaultActor_destroy()
{
  return _swift_defaultActor_destroy();
}

uint64_t swift_defaultActor_initialize()
{
  return _swift_defaultActor_initialize();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return _swift_getAssociatedConformanceWitness();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return _swift_getAssociatedTypeWitness();
}

uint64_t swift_getDynamicType()
{
  return _swift_getDynamicType();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getMetatypeMetadata()
{
  return _swift_getMetatypeMetadata();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return _swift_getOpaqueTypeConformance2();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTupleTypeLayout2()
{
  return _swift_getTupleTypeLayout2();
}

uint64_t swift_getTupleTypeLayout3()
{
  return _swift_getTupleTypeLayout3();
}

uint64_t swift_getTupleTypeMetadata()
{
  return _swift_getTupleTypeMetadata();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return _swift_getTupleTypeMetadata2();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initClassMetadata2()
{
  return _swift_initClassMetadata2();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return _swift_initEnumMetadataMultiPayload();
}

uint64_t swift_initEnumMetadataSingleCase()
{
  return _swift_initEnumMetadataSingleCase();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return _swift_initEnumMetadataSinglePayload();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return _swift_isEscapingClosureAtFileLocation();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return _swift_isUniquelyReferenced_nonNull_bridgeObject();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_job_run()
{
  return _swift_job_run();
}

uint64_t swift_makeBoxUnique()
{
  return _swift_makeBoxUnique();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return _swift_stdlib_isStackAllocationSafe();
}

uint64_t swift_stdlib_random()
{
  return _swift_stdlib_random();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_asyncMainDrainQueue()
{
  return _swift_task_asyncMainDrainQueue();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_task_getMainExecutor()
{
  return _swift_task_getMainExecutor();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRelease_n()
{
  return _swift_unknownObjectRelease_n();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectRetain_n()
{
  return _swift_unknownObjectRetain_n();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

uint64_t swift_willThrowTypedImpl()
{
  return _swift_willThrowTypedImpl();
}

int sysctlbyname(const char *a1, void *a2, size_t *a3, void *a4, size_t a5)
{
  return _sysctlbyname(a1, a2, a3, a4, a5);
}