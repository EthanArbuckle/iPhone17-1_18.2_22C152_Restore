uint64_t sub_1000AA074@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  long long v30;
  long long v31;
  long long v32;
  long long v33;
  long long v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  long long v68;
  uint64_t v69;
  void *v70;
  _OWORD v71[11];
  uint64_t v72;

  v67 = a4;
  v66 = a2;
  v64 = a6;
  v72 = sub_1001BFB30();
  v62 = *(void *)(v72 - 8);
  __chkstk_darwin(v72, v9);
  v63 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100003918(qword_100208000);
  v60 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v12);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1001C14E0();
  __chkstk_darwin(v15 - 8, v16);
  v61 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_1001BF8E0();
  v58 = *(void *)(v59 - 8);
  __chkstk_darwin(v59, v18);
  v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for TC2CloudAttestationVerifier();
  __chkstk_darwin(v21 - 8, v22);
  v24 = (char *)&v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *a1;
  if (!*(void *)(*a1 + 16)) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  v26 = sub_10016A3C4(v66, a3, v67 & 1);
  if ((v27 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    v29 = a5 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_config;
    v55 = a5 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_config;
    v65 = *(void *)(a5 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_serverDrivenConfig);
    v30 = *(_OWORD *)(a5 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo + 144);
    v71[8] = *(_OWORD *)(a5 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo + 128);
    v71[9] = v30;
    v71[10] = *(_OWORD *)(a5 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo + 160);
    v31 = *(_OWORD *)(a5 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo + 80);
    v71[4] = *(_OWORD *)(a5 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo + 64);
    v71[5] = v31;
    v32 = *(_OWORD *)(a5 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo + 112);
    v71[6] = *(_OWORD *)(a5 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo + 96);
    v71[7] = v32;
    v33 = *(_OWORD *)(a5 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo + 16);
    v71[0] = *(_OWORD *)(a5 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo);
    v34 = *(_OWORD *)(a5 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo + 32);
    v71[3] = *(_OWORD *)(a5 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo + 48);
    v71[1] = v33;
    v71[2] = v34;
    v54 = *(void *)(a5 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_attestationStore);
    v57 = v24;
    sub_1000B9700(a5 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_attestationVerifier, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for TC2CloudAttestationVerifier);
    v53 = a5;
    v51 = *(void *)(a5 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_rateLimiter);
    v35 = v72;
    v69 = v72;
    v70 = &protocol witness table for TC2DefaultConfiguration;
    v36 = sub_10000395C((uint64_t *)&v68);
    v52 = v14;
    v56 = a3;
    v62 = *(void *)(v62 + 16);
    ((void (*)(uint64_t *, uint64_t, uint64_t))v62)(v36, v29, v35);
    type metadata accessor for TC2NSPTokenProvider();
    v37 = swift_allocObject();
    v50 = v11;
    v38 = v58;
    v39 = v59;
    (*(void (**)(char *, void, uint64_t))(v58 + 104))(v20, enum case for TC2LogCategory.daemon(_:), v59);
    swift_retain();
    sub_100016110((uint64_t)v71);
    swift_retain();
    swift_retain();
    sub_1001BFDD0();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v20, v39);
    sub_10000E720(&v68, v37 + OBJC_IVAR____TtC20privatecloudcomputed19TC2NSPTokenProvider_config);
    v40 = (uint64_t)v61;
    sub_1001C14D0();
    v41 = *(void *)(*(void *)(v53 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_prefetchActivity)
                    + qword_10021FEE8);
    v42 = (uint64_t)v52;
    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v52, v53 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_thimbledEventContinuation, v50);
    sub_100003918(&qword_10020C330);
    v43 = swift_allocObject();
    v44 = (uint64_t)v63;
    ((void (*)(char *, uint64_t, uint64_t))v62)(v63, v55, v72);
    v45 = v56;
    swift_bridgeObjectRetain();
    swift_retain();
    v49 = v41;
    LODWORD(v41) = v67 & 1;
    v46 = v66;
    v28 = sub_1000B5D08(v44, v65, v71, v54, (uint64_t)v57, v51, v37, v40, v66, v45, v67 & 1, v49, v42, v43);
    swift_bridgeObjectRetain();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v68 = *a1;
    *a1 = 0x8000000000000000;
    sub_1000EB39C(v28, v46, v45, v41, isUniquelyReferenced_nonNull_native);
    *a1 = v68;
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  v28 = *(void *)(*(void *)(v25 + 56) + 8 * v26);
  swift_retain();
LABEL_6:
  result = swift_bridgeObjectRelease();
  *v64 = v28;
  return result;
}

uint64_t sub_1000AA6F0(uint64_t a1)
{
  uint64_t v2 = sub_1001BF8E0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_allocWithZone((Class)NSXPCListener);
  NSString v8 = sub_1001C0BE0();
  id v9 = [v7 initWithMachServiceName:v8];

  [v9 setDelegate:a1];
  uint64_t v41 = a1;
  v10 = sub_1001C0330();
  os_log_type_t v11 = sub_1001C1200();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Listener start", v12, 2u);
    swift_slowDealloc();
  }

  [v9 resume];
  v13 = sub_1001C0330();
  os_log_type_t v14 = sub_1001C1200();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Listener done", v15, 2u);
    swift_slowDealloc();
  }
  id v38 = v9;

  v16 = sub_1001C0330();
  os_log_type_t v17 = sub_1001C1200();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Register prefetch task", v18, 2u);
    swift_slowDealloc();
  }

  uint64_t v19 = *(void *)(v41 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_prefetchActivity);
  uint64_t v43 = sub_100003918(&qword_10020C560);
  v44 = &off_1001FFCA0;
  *(void *)&long long v42 = v19;
  type metadata accessor for TC2ScheduledTask();
  uint64_t v20 = swift_allocObject();
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  HIDWORD(v37) = enum case for TC2LogCategory.scheduledTask(_:);
  v39 = v21;
  ((void (*)(char *))v21)(v6);
  swift_retain_n();
  sub_1001BFDD0();
  v22 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v40 = v3 + 8;
  v23 = v22;
  v22(v6, v2);
  *(void *)(v20 + 56) = 0xD000000000000032;
  *(void *)(v20 + 64) = 0x80000001001C48B0;
  sub_10000E720(&v42, v20 + 16);
  swift_release();
  sub_10010875C();
  swift_release();
  v24 = sub_1001C0330();
  os_log_type_t v25 = sub_1001C1200();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v26 = 0;
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Register fetch config bag task", v26, 2u);
    swift_slowDealloc();
  }

  uint64_t v27 = *(void *)(v41 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_updateServerDrivenConfigurationActivity);
  uint64_t v43 = sub_100003918(&qword_10020C568);
  v44 = &off_1001FFE18;
  *(void *)&long long v42 = v27;
  uint64_t v28 = swift_allocObject();
  uint64_t v29 = HIDWORD(v37);
  v39(v6, HIDWORD(v37), v2);
  swift_retain_n();
  sub_1001BFDD0();
  v30 = v23;
  v23(v6, v2);
  *(void *)(v28 + 56) = 0xD000000000000035;
  *(void *)(v28 + 64) = 0x80000001001C48F0;
  sub_10000E720(&v42, v28 + 16);
  swift_release();
  sub_10010875C();
  swift_release();
  v31 = sub_1001C0330();
  os_log_type_t v32 = sub_1001C1200();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v33 = 0;
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "Register node distribution report task", v33, 2u);
    swift_slowDealloc();
  }

  uint64_t v34 = *(void *)(v41 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_nodeDistributionReportActivity);
  uint64_t v43 = sub_100003918(&qword_10020C570);
  v44 = &off_1001FDB68;
  *(void *)&long long v42 = v34;
  uint64_t v35 = swift_allocObject();
  v39(v6, v29, v2);
  swift_retain_n();
  sub_1001BFDD0();
  v30(v6, v2);
  *(void *)(v35 + 56) = 0xD000000000000034;
  *(void *)(v35 + 64) = 0x80000001001C4930;
  sub_10000E720(&v42, v35 + 16);
  swift_release();
  sub_10010875C();

  return swift_release();
}

uint64_t sub_1000AAD38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[94] = a4;
  v4[93] = a3;
  v4[92] = a2;
  uint64_t v5 = *(void *)(type metadata accessor for TC2MetricReporter() - 8);
  v4[95] = v5;
  v4[96] = *(void *)(v5 + 64);
  v4[97] = swift_task_alloc();
  v4[98] = swift_task_alloc();
  uint64_t v6 = sub_1001BF310();
  v4[99] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v4[100] = v7;
  v4[101] = *(void *)(v7 + 64);
  v4[102] = swift_task_alloc();
  v4[103] = swift_task_alloc();
  v4[104] = swift_task_alloc();
  v4[105] = swift_task_alloc();
  sub_100003918(&qword_10020C3B0);
  v4[106] = swift_task_alloc();
  v4[107] = swift_task_alloc();
  v4[108] = swift_task_alloc();
  v4[109] = swift_task_alloc();
  v4[110] = swift_task_alloc();
  v4[111] = swift_task_alloc();
  v4[112] = swift_task_alloc();
  v4[113] = swift_task_alloc();
  v4[114] = swift_task_alloc();
  v4[115] = swift_task_alloc();
  v4[116] = swift_task_alloc();
  v4[117] = swift_task_alloc();
  v4[118] = swift_task_alloc();
  v4[119] = swift_task_alloc();
  v4[120] = swift_task_alloc();
  v4[121] = swift_task_alloc();
  v4[122] = swift_task_alloc();
  v4[123] = swift_task_alloc();
  v4[124] = swift_task_alloc();
  v4[125] = swift_task_alloc();
  uint64_t v8 = sub_1001BF950();
  v4[126] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v4[127] = v9;
  v4[128] = *(void *)(v9 + 64);
  v4[129] = swift_task_alloc();
  v4[130] = swift_task_alloc();
  v4[131] = swift_task_alloc();
  v4[132] = swift_task_alloc();
  v4[133] = swift_task_alloc();
  v4[134] = swift_task_alloc();
  uint64_t v10 = *(void *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(0) - 8);
  v4[135] = v10;
  v4[136] = *(void *)(v10 + 64);
  v4[137] = swift_task_alloc();
  v4[138] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for ThimbledEvent();
  v4[139] = v11;
  v4[140] = *(void *)(v11 - 8);
  v4[141] = swift_task_alloc();
  sub_100003918(&qword_10020C3B8);
  v4[142] = swift_task_alloc();
  uint64_t v12 = sub_100003918(&qword_10020C3C0);
  v4[143] = v12;
  v4[144] = *(void *)(v12 - 8);
  v4[145] = swift_task_alloc();
  return _swift_task_switch(sub_1000AB1B8, 0, 0);
}

uint64_t sub_1000AB1B8()
{
  sub_100003918(&qword_10020C360);
  sub_1001C1010();
  v1 = (void *)swift_task_alloc();
  v0[146] = v1;
  void *v1 = v0;
  v1[1] = sub_1000AB288;
  uint64_t v2 = v0[143];
  uint64_t v3 = v0[142];
  return AsyncStream.Iterator.next(isolation:)(v3, 0, 0, v2);
}

uint64_t sub_1000AB288()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1000AB384, 0, 0);
}

uint64_t sub_1000AB384()
{
  uint64_t v1 = *(void *)(v0 + 1136);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 1120) + 48))(v1, 1, *(void *)(v0 + 1112)) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 1152) + 8))(*(void *)(v0 + 1160), *(void *)(v0 + 1144));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    uint64_t v4 = (long long *)(v0 + 16);
    sub_1000B9698(v1, *(void *)(v0 + 1128), (uint64_t (*)(void))type metadata accessor for ThimbledEvent);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v19 = *(void *)(v0 + 968);
        uint64_t v20 = *(void *)(v0 + 960);
        uint64_t v21 = *(void *)(v0 + 776);
        uint64_t v22 = *(void *)(v0 + 760);
        uint64_t v23 = *(void *)(v0 + 752);
        sub_10000E720(*(long long **)(v0 + 1128), v0 + 136);
        sub_100032890(v0 + 136, v0 + 96);
        sub_1000B9700(v23, v21, (uint64_t (*)(void))type metadata accessor for TC2MetricReporter);
        unint64_t v24 = (*(unsigned __int8 *)(v22 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
        uint64_t v25 = swift_allocObject();
        *(void *)(v25 + 16) = 0;
        *(void *)(v25 + 24) = 0;
        sub_10000E720((long long *)(v0 + 96), v25 + 32);
        sub_1000B9698(v21, v25 + v24, (uint64_t (*)(void))type metadata accessor for TC2MetricReporter);
        uint64_t v26 = sub_1001C0FC0();
        uint64_t v27 = *(void *)(v26 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v19, 1, 1, v26);
        sub_10002C318(v19, v20, &qword_10020C3B0);
        int v28 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v20, 1, v26);
        uint64_t v29 = *(void *)(v0 + 960);
        if (v28 == 1)
        {
          sub_100010360(*(void *)(v0 + 960), &qword_10020C3B0);
        }
        else
        {
          sub_1001C0FB0();
          (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v29, v26);
        }
        if (*(void *)(v25 + 16))
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          uint64_t v133 = sub_1001C0EA0();
          uint64_t v135 = v134;
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v133 = 0;
          uint64_t v135 = 0;
        }
        uint64_t v163 = **(void **)(v0 + 736);
        uint64_t v164 = swift_allocObject();
        *(void *)(v164 + 16) = &unk_10020C488;
        *(void *)(v164 + 24) = v25;
        if (v135 | v133)
        {
          uint64_t v165 = v0 + 400;
          *(void *)(v0 + 400) = 0;
          *(void *)(v0 + 408) = 0;
          *(void *)(v0 + 416) = v133;
          *(void *)(v0 + 424) = v135;
        }
        else
        {
          uint64_t v165 = 0;
        }
        *(void *)(v0 + 616) = 1;
        *(void *)(v0 + 624) = v165;
        *(void *)(v0 + 632) = v163;
        swift_task_create();
        swift_release();
        sub_100003E90(v0 + 136);
        break;
      case 2u:
        uint64_t v30 = *(void *)(v0 + 952);
        uint64_t v31 = *(void *)(v0 + 944);
        os_log_type_t v32 = *(void **)(v0 + 744);
        uint64_t v33 = **(void **)(v0 + 1128);
        uint64_t v34 = (void *)swift_allocObject();
        v34[2] = 0;
        v34[3] = 0;
        v34[4] = v33;
        v34[5] = v32;
        uint64_t v35 = sub_1001C0FC0();
        uint64_t v36 = *(void *)(v35 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))(v30, 1, 1, v35);
        sub_10002C318(v30, v31, &qword_10020C3B0);
        LODWORD(v31) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v31, 1, v35);
        id v37 = v32;
        uint64_t v38 = *(void *)(v0 + 944);
        if (v31 == 1)
        {
          sub_100010360(*(void *)(v0 + 944), &qword_10020C3B0);
        }
        else
        {
          sub_1001C0FB0();
          (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v38, v35);
        }
        if (v34[2])
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          uint64_t v136 = sub_1001C0EA0();
          uint64_t v138 = v137;
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v136 = 0;
          uint64_t v138 = 0;
        }
        uint64_t v166 = **(void **)(v0 + 736);
        uint64_t v167 = swift_allocObject();
        *(void *)(v167 + 16) = &unk_10020C470;
        *(void *)(v167 + 24) = v34;
        if (v138 | v136)
        {
          uint64_t v168 = v0 + 208;
          *(void *)(v0 + 208) = 0;
          *(void *)(v0 + 216) = 0;
          *(void *)(v0 + 224) = v136;
          *(void *)(v0 + 232) = v138;
        }
        else
        {
          uint64_t v168 = 0;
        }
        *(void *)(v0 + 520) = 1;
        *(void *)(v0 + 528) = v168;
        *(void *)(v0 + 536) = v166;
        goto LABEL_107;
      case 3u:
        v39 = *(uint64_t **)(v0 + 1128);
        uint64_t v40 = *(void *)(v0 + 920);
        uint64_t v41 = *(void *)(v0 + 912);
        long long v42 = *(void **)(v0 + 744);
        uint64_t v43 = *v39;
        long long v229 = *(_OWORD *)(v39 + 3);
        uint64_t v45 = v39[5];
        uint64_t v44 = v39[6];
        uint64_t v46 = swift_allocObject();
        long long v47 = *(_OWORD *)(v39 + 1);
        *(void *)(v46 + 16) = 0;
        *(void *)(v46 + 24) = 0;
        *(void *)(v46 + 32) = v42;
        *(void *)(v46 + 40) = v43;
        *(_OWORD *)(v46 + 48) = v47;
        *(_OWORD *)(v46 + 64) = v229;
        *(void *)(v46 + 80) = v45;
        *(void *)(v46 + 88) = v44;
        uint64_t v48 = sub_1001C0FC0();
        uint64_t v49 = *(void *)(v48 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56))(v40, 1, 1, v48);
        sub_10002C318(v40, v41, &qword_10020C3B0);
        LODWORD(v40) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v41, 1, v48);
        id v50 = v42;
        uint64_t v51 = *(void *)(v0 + 912);
        if (v40 == 1)
        {
          sub_100010360(*(void *)(v0 + 912), &qword_10020C3B0);
        }
        else
        {
          sub_1001C0FB0();
          (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v51, v48);
        }
        if (*(void *)(v46 + 16))
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          uint64_t v139 = sub_1001C0EA0();
          uint64_t v141 = v140;
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v139 = 0;
          uint64_t v141 = 0;
        }
        uint64_t v169 = **(void **)(v0 + 736);
        uint64_t v170 = swift_allocObject();
        *(void *)(v170 + 16) = &unk_10020C440;
        *(void *)(v170 + 24) = v46;
        if (v141 | v139)
        {
          uint64_t v171 = v0 + 368;
          *(void *)(v0 + 368) = 0;
          *(void *)(v0 + 376) = 0;
          *(void *)(v0 + 384) = v139;
          *(void *)(v0 + 392) = v141;
        }
        else
        {
          uint64_t v171 = 0;
        }
        *(void *)(v0 + 592) = 1;
        *(void *)(v0 + 600) = v171;
        *(void *)(v0 + 608) = v169;
        goto LABEL_107;
      case 4u:
        uint64_t v52 = *(void *)(v0 + 1128);
        uint64_t v224 = *(void *)(v0 + 984);
        uint64_t v227 = *(void *)(v0 + 976);
        uint64_t v53 = *(void *)(v0 + 840);
        uint64_t v54 = *(void *)(v0 + 832);
        uint64_t v207 = v54;
        uint64_t v214 = *(void *)(v0 + 808);
        uint64_t v55 = *(void *)(v0 + 800);
        uint64_t v56 = *(void *)(v0 + 792);
        uint64_t v57 = *(void *)(v0 + 784);
        uint64_t v209 = *(void *)(v0 + 760);
        uint64_t v58 = *(void *)(v0 + 752);
        v217 = *(void **)(v0 + 744);
        v59 = (uint64_t *)(v52 + *(int *)(sub_100003918(&qword_10020C498) + 48));
        uint64_t v219 = v59[1];
        uint64_t v222 = *v59;
        v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 32);
        v60(v53, v52, v56);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16))(v54, v53, v56);
        sub_1000B9700(v58, v57, (uint64_t (*)(void))type metadata accessor for TC2MetricReporter);
        unint64_t v61 = (*(unsigned __int8 *)(v55 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
        unint64_t v62 = (v214 + v61 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v63 = (*(unsigned __int8 *)(v209 + 80) + v62 + 16) & ~(unint64_t)*(unsigned __int8 *)(v209 + 80);
        v64 = (void *)swift_allocObject();
        v64[2] = 0;
        v64[3] = 0;
        v64[4] = v217;
        v60((uint64_t)v64 + v61, v207, v56);
        v65 = (void *)((char *)v64 + v62);
        void *v65 = v222;
        v65[1] = v219;
        sub_1000B9698(v57, (uint64_t)v64 + v63, (uint64_t (*)(void))type metadata accessor for TC2MetricReporter);
        uint64_t v66 = sub_1001C0FC0();
        uint64_t v67 = *(void *)(v66 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56))(v224, 1, 1, v66);
        sub_10002C318(v224, v227, &qword_10020C3B0);
        LODWORD(v61) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v227, 1, v66);
        id v68 = v217;
        uint64_t v69 = *(void *)(v0 + 976);
        if (v61 == 1)
        {
          sub_100010360(*(void *)(v0 + 976), &qword_10020C3B0);
        }
        else
        {
          sub_1001C0FB0();
          (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v69, v66);
        }
        if (v64[2])
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          uint64_t v142 = sub_1001C0EA0();
          uint64_t v144 = v143;
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v142 = 0;
          uint64_t v144 = 0;
        }
        uint64_t v172 = **(void **)(v0 + 736);
        uint64_t v173 = swift_allocObject();
        *(void *)(v173 + 16) = &unk_10020C4A8;
        *(void *)(v173 + 24) = v64;
        if (v144 | v142)
        {
          uint64_t v174 = v0 + 336;
          *(void *)(v0 + 336) = 0;
          *(void *)(v0 + 344) = 0;
          *(void *)(v0 + 352) = v142;
          *(void *)(v0 + 360) = v144;
        }
        else
        {
          uint64_t v174 = 0;
        }
        uint64_t v194 = *(void *)(v0 + 840);
        uint64_t v195 = *(void *)(v0 + 800);
        uint64_t v196 = *(void *)(v0 + 792);
        *(void *)(v0 + 664) = 1;
        *(void *)(v0 + 672) = v174;
        *(void *)(v0 + 680) = v172;
        goto LABEL_98;
      case 5u:
        uint64_t v70 = *(void *)(v0 + 1056);
        uint64_t v71 = *(void *)(v0 + 1048);
        uint64_t v72 = *(void *)(v0 + 1016);
        uint64_t v73 = *(void *)(v0 + 1008);
        uint64_t v74 = *(void *)(v0 + 904);
        uint64_t v230 = *(void *)(v0 + 896);
        v75 = *(void **)(v0 + 744);
        v76 = *(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 32);
        v76(v70, *(void *)(v0 + 1128), v73);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 16))(v71, v70, v73);
        unint64_t v77 = (*(unsigned __int8 *)(v72 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
        v78 = (void *)swift_allocObject();
        v78[2] = 0;
        v78[3] = 0;
        v78[4] = v75;
        v76((uint64_t)v78 + v77, v71, v73);
        uint64_t v79 = sub_1001C0FC0();
        uint64_t v80 = *(void *)(v79 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v80 + 56))(v74, 1, 1, v79);
        sub_10002C318(v74, v230, &qword_10020C3B0);
        LODWORD(v74) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v230, 1, v79);
        id v81 = v75;
        uint64_t v82 = *(void *)(v0 + 896);
        if (v74 == 1)
        {
          sub_100010360(*(void *)(v0 + 896), &qword_10020C3B0);
        }
        else
        {
          sub_1001C0FB0();
          (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v82, v79);
        }
        if (v78[2])
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          uint64_t v145 = sub_1001C0EA0();
          uint64_t v147 = v146;
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v145 = 0;
          uint64_t v147 = 0;
        }
        uint64_t v175 = **(void **)(v0 + 736);
        uint64_t v176 = swift_allocObject();
        *(void *)(v176 + 16) = &unk_10020C428;
        *(void *)(v176 + 24) = v78;
        if (v147 | v145)
        {
          uint64_t v177 = v0 + 304;
          *(void *)(v0 + 304) = 0;
          *(void *)(v0 + 312) = 0;
          *(void *)(v0 + 320) = v145;
          *(void *)(v0 + 328) = v147;
        }
        else
        {
          uint64_t v177 = 0;
        }
        uint64_t v194 = *(void *)(v0 + 1056);
        uint64_t v195 = *(void *)(v0 + 1016);
        uint64_t v196 = *(void *)(v0 + 1008);
        *(void *)(v0 + 640) = 1;
        *(void *)(v0 + 648) = v177;
        *(void *)(v0 + 656) = v175;
LABEL_98:
        swift_task_create();
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v195 + 8))(v194, v196);
        break;
      case 6u:
        uint64_t v83 = *(void *)(v0 + 1128);
        uint64_t v206 = *(void *)(v0 + 1040);
        uint64_t v210 = *(void *)(v0 + 1032);
        uint64_t v84 = *(void *)(v0 + 1016);
        uint64_t v231 = *(void *)(v0 + 1008);
        uint64_t v223 = *(void *)(v0 + 888);
        uint64_t v225 = *(void *)(v0 + 880);
        uint64_t v85 = *(void *)(v0 + 824);
        uint64_t v86 = *(void *)(v0 + 816);
        uint64_t v211 = *(void *)(v0 + 808);
        uint64_t v87 = *(void *)(v0 + 800);
        uint64_t v88 = *(void *)(v0 + 792);
        v220 = *(void **)(v0 + 744);
        uint64_t v89 = v83 + *(int *)(sub_100003918(&qword_10020C400) + 48);
        v216 = *(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 32);
        v216(v85, v83, v88);
        v212 = *(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 32);
        v212(v206, v89, v231);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 16))(v86, v85, v88);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 16))(v210, v206, v231);
        unint64_t v90 = (*(unsigned __int8 *)(v87 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
        unint64_t v91 = (v211 + *(unsigned __int8 *)(v84 + 80) + v90) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
        v92 = (void *)swift_allocObject();
        v92[2] = 0;
        v92[3] = 0;
        v92[4] = v220;
        v216((uint64_t)v92 + v90, v86, v88);
        v212((uint64_t)v92 + v91, v210, v231);
        uint64_t v93 = sub_1001C0FC0();
        uint64_t v94 = *(void *)(v93 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v94 + 56))(v223, 1, 1, v93);
        sub_10002C318(v223, v225, &qword_10020C3B0);
        LODWORD(v91) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v94 + 48))(v225, 1, v93);
        id v95 = v220;
        uint64_t v96 = *(void *)(v0 + 880);
        if (v91 == 1)
        {
          sub_100010360(*(void *)(v0 + 880), &qword_10020C3B0);
        }
        else
        {
          sub_1001C0FB0();
          (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v96, v93);
        }
        if (v92[2])
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          uint64_t v148 = sub_1001C0EA0();
          uint64_t v150 = v149;
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v148 = 0;
          uint64_t v150 = 0;
        }
        uint64_t v178 = **(void **)(v0 + 736);
        uint64_t v179 = swift_allocObject();
        *(void *)(v179 + 16) = &unk_10020C410;
        *(void *)(v179 + 24) = v92;
        if (v150 | v148)
        {
          uint64_t v180 = v0 + 240;
          *(void *)(v0 + 240) = 0;
          *(void *)(v0 + 248) = 0;
          *(void *)(v0 + 256) = v148;
          *(void *)(v0 + 264) = v150;
        }
        else
        {
          uint64_t v180 = 0;
        }
        uint64_t v197 = *(void *)(v0 + 1040);
        uint64_t v198 = *(void *)(v0 + 1016);
        uint64_t v199 = *(void *)(v0 + 1008);
        uint64_t v200 = *(void *)(v0 + 824);
        uint64_t v201 = *(void *)(v0 + 800);
        uint64_t v202 = *(void *)(v0 + 792);
        *(void *)(v0 + 688) = 1;
        *(void *)(v0 + 696) = v180;
        *(void *)(v0 + 704) = v178;
        swift_task_create();
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v198 + 8))(v197, v199);
        (*(void (**)(uint64_t, uint64_t))(v201 + 8))(v200, v202);
        break;
      case 7u:
        v97 = *(uint64_t **)(v0 + 1128);
        uint64_t v98 = *(void *)(v0 + 872);
        uint64_t v99 = *(void *)(v0 + 864);
        v100 = *(void **)(v0 + 744);
        uint64_t v101 = *v97;
        char v102 = *((unsigned char *)v97 + 8);
        uint64_t v103 = swift_allocObject();
        *(void *)(v103 + 16) = 0;
        *(void *)(v103 + 24) = 0;
        *(void *)(v103 + 32) = v100;
        *(void *)(v103 + 40) = v101;
        *(unsigned char *)(v103 + 48) = v102;
        uint64_t v104 = sub_1001C0FC0();
        uint64_t v105 = *(void *)(v104 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v105 + 56))(v98, 1, 1, v104);
        sub_10002C318(v98, v99, &qword_10020C3B0);
        LODWORD(v99) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v105 + 48))(v99, 1, v104);
        id v106 = v100;
        uint64_t v107 = *(void *)(v0 + 864);
        if (v99 == 1)
        {
          sub_100010360(*(void *)(v0 + 864), &qword_10020C3B0);
        }
        else
        {
          sub_1001C0FB0();
          (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v107, v104);
        }
        if (*(void *)(v103 + 16))
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          uint64_t v151 = sub_1001C0EA0();
          uint64_t v153 = v152;
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v151 = 0;
          uint64_t v153 = 0;
        }
        uint64_t v181 = **(void **)(v0 + 736);
        uint64_t v182 = swift_allocObject();
        *(void *)(v182 + 16) = &unk_10020C3F0;
        *(void *)(v182 + 24) = v103;
        if (v153 | v151)
        {
          uint64_t v183 = v0 + 176;
          *(void *)(v0 + 176) = 0;
          *(void *)(v0 + 184) = 0;
          *(void *)(v0 + 192) = v151;
          *(void *)(v0 + 200) = v153;
        }
        else
        {
          uint64_t v183 = 0;
        }
        *(void *)(v0 + 496) = 1;
        *(void *)(v0 + 504) = v183;
        *(void *)(v0 + 512) = v181;
        goto LABEL_107;
      case 8u:
        v108 = *(long long **)(v0 + 1128);
        uint64_t v109 = *(void *)(v0 + 856);
        uint64_t v110 = *(void *)(v0 + 848);
        v111 = *(void **)(v0 + 744);
        *uint64_t v4 = *v108;
        long long v112 = v108[4];
        long long v114 = v108[1];
        long long v113 = v108[2];
        *(_OWORD *)(v0 + 64) = v108[3];
        *(_OWORD *)(v0 + 80) = v112;
        *(_OWORD *)(v0 + 32) = v114;
        *(_OWORD *)(v0 + 48) = v113;
        uint64_t v115 = swift_allocObject();
        long long v116 = *v4;
        *(_OWORD *)(v115 + 56) = *(_OWORD *)(v0 + 32);
        long long v117 = *(_OWORD *)(v0 + 64);
        *(_OWORD *)(v115 + 72) = *(_OWORD *)(v0 + 48);
        *(_OWORD *)(v115 + 88) = v117;
        *(_OWORD *)(v115 + 104) = *(_OWORD *)(v0 + 80);
        *(void *)(v115 + 16) = 0;
        *(void *)(v115 + 24) = 0;
        *(void *)(v115 + 32) = v111;
        *(_OWORD *)(v115 + 40) = v116;
        uint64_t v118 = sub_1001C0FC0();
        uint64_t v119 = *(void *)(v118 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v119 + 56))(v109, 1, 1, v118);
        sub_10002C318(v109, v110, &qword_10020C3B0);
        LODWORD(v109) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v119 + 48))(v110, 1, v118);
        id v120 = v111;
        uint64_t v121 = *(void *)(v0 + 848);
        if (v109 == 1)
        {
          sub_100010360(*(void *)(v0 + 848), &qword_10020C3B0);
        }
        else
        {
          sub_1001C0FB0();
          (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v121, v118);
        }
        if (*(void *)(v115 + 16))
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          uint64_t v154 = sub_1001C0EA0();
          uint64_t v156 = v155;
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v154 = 0;
          uint64_t v156 = 0;
        }
        uint64_t v184 = **(void **)(v0 + 736);
        uint64_t v185 = swift_allocObject();
        *(void *)(v185 + 16) = &unk_10020C3D0;
        *(void *)(v185 + 24) = v115;
        if (v156 | v154)
        {
          uint64_t v186 = v0 + 464;
          *(void *)(v0 + 464) = 0;
          *(void *)(v0 + 472) = 0;
          *(void *)(v0 + 480) = v154;
          *(void *)(v0 + 488) = v156;
        }
        else
        {
          uint64_t v186 = 0;
        }
        *(void *)(v0 + 544) = 1;
        *(void *)(v0 + 552) = v186;
        *(void *)(v0 + 560) = v184;
        goto LABEL_107;
      case 9u:
        uint64_t v122 = *(void *)(v0 + 936);
        uint64_t v123 = *(void *)(v0 + 928);
        v124 = *(void **)(v0 + 744);
        v125 = (void *)swift_allocObject();
        v125[2] = 0;
        v125[3] = 0;
        v125[4] = v124;
        uint64_t v126 = sub_1001C0FC0();
        uint64_t v127 = *(void *)(v126 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v127 + 56))(v122, 1, 1, v126);
        sub_10002C318(v122, v123, &qword_10020C3B0);
        LODWORD(v123) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v127 + 48))(v123, 1, v126);
        id v128 = v124;
        uint64_t v129 = *(void *)(v0 + 928);
        if (v123 == 1)
        {
          sub_100010360(*(void *)(v0 + 928), &qword_10020C3B0);
        }
        else
        {
          sub_1001C0FB0();
          (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v129, v126);
        }
        if (v125[2])
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          uint64_t v157 = sub_1001C0EA0();
          uint64_t v159 = v158;
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v157 = 0;
          uint64_t v159 = 0;
        }
        uint64_t v187 = **(void **)(v0 + 736);
        uint64_t v188 = swift_allocObject();
        *(void *)(v188 + 16) = &unk_10020C458;
        *(void *)(v188 + 24) = v125;
        if (v159 | v157)
        {
          uint64_t v189 = v0 + 432;
          *(void *)(v0 + 432) = 0;
          *(void *)(v0 + 440) = 0;
          *(void *)(v0 + 448) = v157;
          *(void *)(v0 + 456) = v159;
        }
        else
        {
          uint64_t v189 = 0;
        }
        *(void *)(v0 + 568) = 1;
        *(void *)(v0 + 576) = v189;
        *(void *)(v0 + 584) = v187;
LABEL_107:
        swift_task_create();
        swift_release();
        break;
      default:
        uint64_t v5 = *(void *)(v0 + 1128);
        uint64_t v6 = *(void *)(v0 + 1104);
        uint64_t v208 = *(void *)(v0 + 1096);
        uint64_t v218 = *(void *)(v0 + 1088);
        uint64_t v213 = *(void *)(v0 + 1080);
        uint64_t v7 = *(void *)(v0 + 1072);
        uint64_t v8 = *(void *)(v0 + 1064);
        uint64_t v9 = *(void *)(v0 + 1016);
        uint64_t v10 = *(void *)(v0 + 1008);
        uint64_t v226 = *(void *)(v0 + 1000);
        uint64_t v228 = *(void *)(v0 + 992);
        v221 = *(void **)(v0 + 744);
        uint64_t v11 = v5 + *(int *)(sub_100003918(&qword_10020C4B8) + 48);
        sub_1000B9698(v5, v6, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList);
        v215 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32);
        v215(v7, v11, v10);
        sub_1000B9700(v6, v208, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v7, v10);
        unint64_t v12 = (*(unsigned __int8 *)(v213 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v213 + 80);
        unint64_t v13 = (v218 + *(unsigned __int8 *)(v9 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
        uint64_t v14 = (void *)swift_allocObject();
        v14[2] = 0;
        v14[3] = 0;
        v14[4] = v221;
        sub_1000B9698(v208, (uint64_t)v14 + v12, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList);
        v215((uint64_t)v14 + v13, v8, v10);
        uint64_t v15 = sub_1001C0FC0();
        uint64_t v16 = *(void *)(v15 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v226, 1, 1, v15);
        sub_10002C318(v226, v228, &qword_10020C3B0);
        LODWORD(v13) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v228, 1, v15);
        id v17 = v221;
        uint64_t v18 = *(void *)(v0 + 992);
        if (v13 == 1)
        {
          sub_100010360(*(void *)(v0 + 992), &qword_10020C3B0);
        }
        else
        {
          sub_1001C0FB0();
          (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v15);
        }
        if (v14[2])
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          uint64_t v130 = sub_1001C0EA0();
          uint64_t v132 = v131;
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v130 = 0;
          uint64_t v132 = 0;
        }
        uint64_t v160 = **(void **)(v0 + 736);
        uint64_t v161 = swift_allocObject();
        *(void *)(v161 + 16) = &unk_10020C4C8;
        *(void *)(v161 + 24) = v14;
        if (v132 | v130)
        {
          uint64_t v162 = v0 + 272;
          *(void *)(v0 + 272) = 0;
          *(void *)(v0 + 280) = 0;
          *(void *)(v0 + 288) = v130;
          *(void *)(v0 + 296) = v132;
        }
        else
        {
          uint64_t v162 = 0;
        }
        uint64_t v190 = *(void *)(v0 + 1104);
        uint64_t v191 = *(void *)(v0 + 1072);
        uint64_t v192 = *(void *)(v0 + 1016);
        uint64_t v193 = *(void *)(v0 + 1008);
        *(void *)(v0 + 712) = 1;
        *(void *)(v0 + 720) = v162;
        *(void *)(v0 + 728) = v160;
        swift_task_create();
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v192 + 8))(v191, v193);
        sub_1000B9A3C(v190, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList);
        break;
    }
    v203 = (void *)swift_task_alloc();
    *(void *)(v0 + 1168) = v203;
    void *v203 = v0;
    v203[1] = sub_1000AB288;
    uint64_t v204 = *(void *)(v0 + 1144);
    uint64_t v205 = *(void *)(v0 + 1136);
    return AsyncStream.Iterator.next(isolation:)(v205, 0, 0, v204);
  }
}

uint64_t sub_1000AD16C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a3;
  return _swift_task_switch(sub_1000AD190, 0, 0);
}

uint64_t sub_1000AD190()
{
  *(void *)(v0 + 40) = os_transaction_create();
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *(void *)uint64_t v1 = v0;
  *(void *)(v1 + 8) = sub_1000AD254;
  long long v2 = *(_OWORD *)(v0 + 24);
  *(void *)(v1 + 40) = *(void *)(v0 + 16);
  *(_OWORD *)(v1 + 24) = v2;
  return _swift_task_switch(sub_1000AD3D4, 0, 0);
}

uint64_t sub_1000AD254()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1000AD350, 0, 0);
}

uint64_t sub_1000AD350()
{
  swift_unknownObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000AD3B0(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return _swift_task_switch(sub_1000AD3D4, 0, 0);
}

uint64_t sub_1000AD3D4()
{
  uint64_t v1 = (uint64_t *)v0[3];
  if (*((unsigned char *)v1 + 8) == 1)
  {
    uint64_t v2 = *(void *)(v0[5] + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_attestationStore);
    v0[6] = v2;
    if (v2)
    {
      v0[7] = OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_logger;
      swift_retain();
      uint64_t v3 = sub_1001C0330();
      os_log_type_t v4 = sub_1001C1200();
      if (os_log_type_enabled(v3, v4))
      {
        uint64_t v5 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v5 = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, v4, "creating a prefetch request as response to expired attestations", v5, 2u);
        swift_slowDealloc();
      }
      uint64_t v7 = v0[4];
      uint64_t v6 = v0[5];

      uint64_t v8 = (void *)swift_task_alloc();
      v0[8] = v8;
      v8[2] = v2;
      v8[3] = v6;
      v8[4] = v7;
      uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10020D928 + dword_10020D928);
      uint64_t v9 = (void *)swift_task_alloc();
      v0[9] = v9;
      *uint64_t v9 = v0;
      v9[1] = sub_1000AD69C;
      uint64_t v10 = v0[4];
      return v19((uint64_t)v19, v10, (uint64_t)&unk_10020C4F0, (uint64_t)v8);
    }
    goto LABEL_14;
  }
  uint64_t v12 = *v1;
  v0[11] = *v1;
  uint64_t v13 = *(void *)(v12 + 16);
  v0[12] = v13;
  if (!v13)
  {
LABEL_14:
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    return v18();
  }
  uint64_t v14 = *(void *)(v0[5] + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_attestationStore);
  v0[13] = v14;
  uint64_t v15 = swift_bridgeObjectRetain();
  if (!v14)
  {
    v0[14] = v13 - 1;
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  v0[14] = 0;
  v0[15] = *(void *)(v15 + 40);
  v0[16] = *(void *)(v15 + 32);
  type metadata accessor for TC2AttestationStore();
  sub_1000B9C84(&qword_10020C4E0, (void (*)(uint64_t))type metadata accessor for TC2AttestationStore);
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1001C0EA0();
  return _swift_task_switch(sub_1000AD818, v17, v16);
}

uint64_t sub_1000AD69C()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1000AD9D8;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1000AD7B8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000AD7B8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000AD818()
{
  sub_1000BD5F4(*(void *)(v0 + 128), *(void *)(v0 + 120));
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1000AD890, 0, 0);
}

uint64_t sub_1000AD890()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[14];
  uint64_t v3 = 16 * v2;
  for (uint64_t i = v2 + 1; v1 != i; ++i)
  {
    v0[14] = i;
    v3 += 16;
    if (v0[13])
    {
      uint64_t v5 = v0[11] + v3;
      v0[15] = *(void *)(v5 + 40);
      v0[16] = *(void *)(v5 + 32);
      type metadata accessor for TC2AttestationStore();
      sub_1000B9C84(&qword_10020C4E0, (void (*)(uint64_t))type metadata accessor for TC2AttestationStore);
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_1001C0EA0();
      return _swift_task_switch(sub_1000AD818, v7, v6);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1000AD9D8()
{
  swift_release();
  swift_task_dealloc();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C1200();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v5;
    sub_1001C1310();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "failed prefetch request as response to expired attestations. error: %@", v3, 0xCu);
    sub_100003918(&qword_100207DA8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();

    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1000ADBA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[25] = a6;
  v7[26] = a7;
  v7[23] = a4;
  v7[24] = a5;
  v7[22] = a3;
  uint64_t v8 = sub_1001BF2C0();
  v7[27] = v8;
  v7[28] = *(void *)(v8 - 8);
  v7[29] = swift_task_alloc();
  return _swift_task_switch(sub_1000ADC68, 0, 0);
}

uint64_t sub_1000ADC68()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 176) + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_dailyActiveUserReporter);
  *(void *)(v0 + 240) = v1;
  _s20privatecloudcomputed8LRUCacheC10addToCache3now5valueSb10Foundation4DateV_xtFfA__0();
  return _swift_task_switch(sub_1000ADCE4, v1, 0);
}

uint64_t sub_1000ADCE4()
{
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v2 = *(void *)(v0 + 216);
  uint64_t v3 = *(void *)(v0 + 224);
  sub_1000A7188(v1, *(void *)(v0 + 184), *(void *)(v0 + 192), *(void *)(v0 + 200), (unint64_t *)(v0 + 96));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  sub_10002C318(v0 + 96, v0 + 56, &qword_10020C508);
  if (*(void *)(v0 + 64))
  {
    long long v4 = *(_OWORD *)(v0 + 72);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 56);
    *(_OWORD *)(v0 + 32) = v4;
    *(void *)(v0 + 48) = *(void *)(v0 + 88);
    uint64_t v8 = (uint64_t (*)(uint64_t))((char *)&dword_10020C510 + dword_10020C510);
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 248) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1000ADE50;
    return v8(v0 + 16);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
}

uint64_t sub_1000ADE50()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc();
  *(_OWORD *)(v1 + 152) = *(_OWORD *)(v1 + 16);
  sub_1000B9B50(v1 + 152);
  *(void *)(v1 + 168) = *(void *)(v1 + 32);
  v1 += 168;
  sub_1000324F8(v1);
  sub_10002C318(v1 - 128, v1 - 32, &qword_100207DB8);
  sub_1000B9B50(v1 - 32);
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
  return v3();
}

uint64_t sub_1000ADFA8(uint64_t *a1)
{
  *(void *)(v2 + 48) = v1;
  uint64_t v4 = sub_1001C0340();
  *(void *)(v2 + 56) = v4;
  *(void *)(v2 + 64) = *(void *)(v4 - 8);
  *(void *)(v2 + 72) = swift_task_alloc();
  *(void *)(v2 + 80) = swift_task_alloc();
  sub_100003918(&qword_10020C520);
  *(void *)(v2 + 88) = swift_task_alloc();
  uint64_t v5 = sub_1001BF470();
  *(void *)(v2 + 96) = v5;
  *(void *)(v2 + 104) = *(void *)(v5 - 8);
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  *(void *)(v2 + 112) = v6;
  *(void *)(v2 + 120) = v7;
  *(void *)(v2 + 128) = v8;
  long long v9 = *((_OWORD *)a1 + 1);
  *(void *)(v2 + 16) = v9;
  *(_OWORD *)(v2 + 136) = v9;
  *(void *)(v2 + 152) = a1[4];
  return _swift_task_switch(sub_1000AE124, 0, 0);
}

uint64_t sub_1000AE124()
{
  uint64_t v1 = v0[17];
  if (!v0[19])
  {
    id v2 = [self mainBundle];
    id v3 = [v2 bundleIdentifier];

    if (v3)
    {
      sub_1001C0BF0();
    }
  }
  uint64_t v5 = v0[13];
  uint64_t v4 = v0[14];
  uint64_t v7 = v0[11];
  uint64_t v6 = v0[12];
  uint64_t v8 = (uint64_t *)v0[6];
  swift_bridgeObjectRetain();
  sub_1001BF460();
  sub_1001BF490();
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_1000B6EAC(v1);
  v0[20] = v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v7, v4, v6);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, v6);
  uint64_t v12 = (void *)swift_task_alloc();
  v0[21] = v12;
  void *v12 = v0;
  v12[1] = sub_1000AE2FC;
  uint64_t v13 = v0[15];
  uint64_t v14 = v0[16];
  uint64_t v15 = v0[11];
  return static Reporter.report(teamID:eventType:event:transportConfiguration:)(v9, v10, v13, v14, v11, v15);
}

uint64_t sub_1000AE2FC()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 88);
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  sub_100010360(v2, &qword_10020C520);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0) {
    id v3 = sub_1000AE8A0;
  }
  else {
    id v3 = sub_1000AE474;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000AE474()
{
  uint64_t v31 = v0;
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[8];
  uint64_t v5 = type metadata accessor for TC2MetricReporter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v1 + *(int *)(v5 + 20), v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000324CC((uint64_t)(v0 + 2));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000324CC((uint64_t)(v0 + 2));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000324CC((uint64_t)(v0 + 2));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000324CC((uint64_t)(v0 + 2));
  uint64_t v6 = sub_1001C0330();
  os_log_type_t v7 = sub_1001C1200();
  log = v6;
  if (os_log_type_enabled(v6, v7))
  {
    unint64_t v9 = v0[16];
    uint64_t v8 = v0[17];
    uint64_t v10 = v0[15];
    uint64_t v27 = v0[12];
    uint64_t v28 = v0[14];
    uint64_t v25 = v0[10];
    uint64_t v26 = v0[13];
    uint64_t v23 = v0[8];
    uint64_t v24 = v0[7];
    uint64_t v11 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315394;
    swift_bridgeObjectRetain();
    v0[4] = sub_1000DF238(v10, v9, &v30);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    sub_1000324F8((uint64_t)(v0 + 2));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000324F8((uint64_t)(v0 + 2));
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    sub_1000B6EAC(v8);
    swift_bridgeObjectRelease();
    sub_1000324F8((uint64_t)(v0 + 2));
    swift_bridgeObjectRelease();
    sub_1001BF450();
    uint64_t v12 = sub_1001C0B90();
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    v0[5] = sub_1000DF238(v12, v14, &v30);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000324F8((uint64_t)(v0 + 2));
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v7, "Logged metric %s with fields %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v24);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v27);
  }
  else
  {
    uint64_t v15 = v0[13];
    uint64_t v16 = v0[14];
    uint64_t v17 = v0[12];
    uint64_t v18 = v0[10];
    uint64_t v19 = v0[7];
    uint64_t v20 = v0[8];
    swift_bridgeObjectRelease();
    sub_1000324F8((uint64_t)(v0 + 2));
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    sub_1000324F8((uint64_t)(v0 + 2));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000324F8((uint64_t)(v0 + 2));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000324F8((uint64_t)(v0 + 2));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v17);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_1000AE8A0()
{
  uint64_t v20 = v0;
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v4 = v0[6];
  uint64_t v3 = v0[7];
  (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
  uint64_t v5 = type metadata accessor for TC2MetricReporter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4 + *(int *)(v5 + 20), v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000324CC((uint64_t)(v0 + 2));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000324CC((uint64_t)(v0 + 2));
  uint64_t v6 = sub_1001C0330();
  os_log_type_t v7 = sub_1001C11F0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v9 = v0[15];
    unint64_t v8 = v0[16];
    uint64_t v16 = v0[8];
    uint64_t v17 = v0[7];
    uint64_t v18 = v0[9];
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315138;
    swift_bridgeObjectRetain();
    v0[3] = sub_1000DF238(v9, v8, &v19);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    sub_1000324F8((uint64_t)(v0 + 2));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000324F8((uint64_t)(v0 + 2));
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to report metric %s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v17);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();
    sub_1000324F8((uint64_t)(v0 + 2));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000324F8((uint64_t)(v0 + 2));
    swift_bridgeObjectRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_1000AEBA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a3;
  *(void *)(v4 + 24) = a4;
  return _swift_task_switch(sub_1000AEBC0, 0, 0);
}

uint64_t sub_1000AEBC0()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v3 = v1[3];
  uint64_t v2 = v1[4];
  uint64_t v4 = sub_10000D934(v1, v3);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1000AEC78;
  return sub_1000F2888((uint64_t)v4, v3, v2);
}

uint64_t sub_1000AEC78()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1000AED6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a3;
  v4[3] = a4;
  uint64_t v5 = sub_1001BF2C0();
  v4[4] = v5;
  v4[5] = *(void *)(v5 - 8);
  v4[6] = swift_task_alloc();
  return _swift_task_switch(sub_1000AEE2C, 0, 0);
}

uint64_t sub_1000AEE2C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 16);
  *(void *)(v0 + 56) = v1;
  if (v1)
  {
    uint64_t v2 = *(void *)(*(void *)(v0 + 24) + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_rateLimiter);
    *(void *)(v0 + 64) = v2;
    uint64_t v3 = *(void *)(type metadata accessor for RateLimitConfiguration(0) - 8);
    *(_DWORD *)(v0 + 104) = *(_DWORD *)(v3 + 80);
    *(void *)(v0 + 72) = *(void *)(v3 + 72);
    *(void *)(v0 + 80) = 0;
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1000AEF4C;
    uint64_t v5 = v2;
  }
  else
  {
    uint64_t v6 = *(void *)(*(void *)(v0 + 24) + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_rateLimiter);
    *(void *)(v0 + 88) = v6;
    _s20privatecloudcomputed8LRUCacheC10addToCache3now5valueSb10Foundation4DateV_xtFfA__0();
    uint64_t v4 = sub_1000AF084;
    uint64_t v5 = v6;
  }
  return _swift_task_switch(v4, v5, 0);
}

uint64_t sub_1000AEF4C()
{
  sub_100094368(*(void *)(v0 + 16)+ ((*(unsigned __int8 *)(v0 + 104) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 104))+ *(void *)(v0 + 72) * *(void *)(v0 + 80));
  return _swift_task_switch(sub_1000AEFD0, 0, 0);
}

uint64_t sub_1000AEFD0()
{
  uint64_t v1 = v0[10] + 1;
  if (v1 == v0[7])
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = *(void *)(v0[3] + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_rateLimiter);
    v0[11] = v2;
    _s20privatecloudcomputed8LRUCacheC10addToCache3now5valueSb10Foundation4DateV_xtFfA__0();
    uint64_t v3 = sub_1000AF084;
    uint64_t v4 = v2;
  }
  else
  {
    v0[10] = v1;
    uint64_t v4 = v0[8];
    uint64_t v3 = sub_1000AEF4C;
  }
  return _swift_task_switch(v3, v4, 0);
}

uint64_t sub_1000AF084()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = (void *)v0[6];
  uint64_t v3 = v0[4];
  sub_1000946B0(v1);
  (*(void (**)(void *, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[12] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1000AF148;
  return sub_100092DF4();
}

uint64_t sub_1000AF148()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1000AF258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a3;
  return _swift_task_switch(sub_1000AF278, 0, 0);
}

uint64_t sub_1000AF278()
{
  uint64_t v1 = *(void *)(v0[2] + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_attestationStore);
  v0[3] = v1;
  if (v1)
  {
    type metadata accessor for TC2AttestationStore();
    sub_1000B9C84(&qword_10020C4E0, (void (*)(uint64_t))type metadata accessor for TC2AttestationStore);
    uint64_t v3 = sub_1001C0EA0();
    return _swift_task_switch(sub_1000AF374, v3, v2);
  }
  else
  {
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_1000AF374()
{
  sub_1000BC4A4();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000AF3D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[10] = v10;
  v8[11] = v11;
  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  return _swift_task_switch(sub_1000AF408, 0, 0);
}

uint64_t sub_1000AF408()
{
  uint64_t v19 = v0;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C1200();
  if (os_log_type_enabled(v1, v2))
  {
    unint64_t v3 = v0[6];
    uint64_t v4 = v0[5];
    os_log_type_t type = v2;
    uint64_t v5 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    swift_bridgeObjectRetain();
    v0[2] = sub_1000DF238(v4, v3, &v18);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v5 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1001C0B90();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    v0[3] = sub_1000DF238(v6, v8, &v18);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v1, type, "running prewarmAttestations: %s %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v0[12] = os_transaction_create();
  uint64_t v9 = (void *)swift_task_alloc();
  v0[13] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1000AF6B8;
  uint64_t v10 = v0[11];
  uint64_t v11 = v0[8];
  uint64_t v12 = v0[9];
  uint64_t v13 = v0[6];
  uint64_t v14 = v0[7];
  uint64_t v15 = v0[5];
  uint64_t v21 = v0[10];
  uint64_t v22 = v10;
  return sub_1001774BC(v15, v13, v14, 1, 0, 1, v11, v12);
}

uint64_t sub_1000AF6B8(uint64_t a1, unint64_t a2)
{
  swift_task_dealloc();
  sub_100007918(a1, a2);
  return _swift_task_switch(sub_1000AF7C8, 0, 0);
}

uint64_t sub_1000AF7C8()
{
  swift_unknownObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000AF828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a3;
  *(void *)(v4 + 24) = a4;
  return _swift_task_switch(sub_1000AF848, 0, 0);
}

uint64_t sub_1000AF848()
{
  uint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C1200();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "running prefetchAttestationsForNewWorkload", v3, 2u);
    swift_slowDealloc();
  }

  v0[4] = os_transaction_create();
  uint64_t v4 = sub_1001BF930();
  uint64_t v6 = v5;
  v0[5] = v5;
  uint64_t v7 = sub_1001BF940();
  v0[6] = v7;
  unint64_t v8 = (void *)swift_task_alloc();
  v0[7] = v8;
  *unint64_t v8 = v0;
  v8[1] = sub_1000AF9B4;
  return sub_1001774BC(v4, v6, v7, 0, 0, 1, 0, 0);
}

uint64_t sub_1000AF9B4(uint64_t a1, unint64_t a2)
{
  swift_task_dealloc();
  sub_100007918(a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1000AFB04, 0, 0);
}

uint64_t sub_1000AFB04()
{
  swift_unknownObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000AFB64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a3;
  return _swift_task_switch(sub_1000AFB88, 0, 0);
}

uint64_t sub_1000AFB88()
{
  uint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C1200();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "running discardUsedAttestationsAndPrefetchBatch", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = v0[2];

  uint64_t v5 = *(void *)(v4 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_attestationStore);
  v0[5] = v5;
  if (v5)
  {
    swift_retain();
    v0[6] = os_transaction_create();
    type metadata accessor for TC2AttestationStore();
    sub_1000B9C84(&qword_10020C4E0, (void (*)(uint64_t))type metadata accessor for TC2AttestationStore);
    uint64_t v7 = sub_1001C0EA0();
    return _swift_task_switch(sub_1000AFD94, v7, v6);
  }
  else
  {
    unint64_t v8 = sub_1001C0330();
    uint64_t v9 = sub_1001C11F0();
    if (os_log_type_enabled(v8, (os_log_type_t)v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, (os_log_type_t)v9, "failed to prefetch attestations as store is not initialized", v10, 2u);
      swift_slowDealloc();
    }

    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
}

uint64_t sub_1000AFD94()
{
  *(void *)(v0 + 56) = sub_1000BCA38(*(void *)(v0 + 24));
  return _swift_task_switch(sub_1000AFE04, 0, 0);
}

uint64_t sub_1000AFE04()
{
  uint64_t v1 = sub_1001BF930();
  uint64_t v3 = v2;
  v0[8] = v2;
  uint64_t v4 = sub_1001BF940();
  v0[9] = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[10] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1000AFEE4;
  uint64_t v6 = v0[7];
  return sub_1001774BC(v1, v3, v4, 0, v6, 0, 0, 0);
}

uint64_t sub_1000AFEE4(uint64_t a1, unint64_t a2)
{
  swift_task_dealloc();
  sub_100007918(a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1000B0034, 0, 0);
}

uint64_t sub_1000B0034()
{
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000B009C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 40) = a5;
  *(void *)(v5 + 16) = a3;
  *(void *)(v5 + 24) = a4;
  return _swift_task_switch(sub_1000B00C0, 0, 0);
}

uint64_t sub_1000B00C0()
{
  uint64_t v5 = (uint64_t (*)(uint64_t, char))((char *)&dword_10020C548 + dword_10020C548);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  void *v1 = v0;
  v1[1] = sub_1000AEC78;
  uint64_t v2 = *(void *)(v0 + 24);
  char v3 = *(unsigned char *)(v0 + 40);
  return v5(v2, v3);
}

uint64_t sub_1000B017C(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 88) = a2;
  *(void *)(v3 + 40) = a1;
  *(void *)(v3 + 48) = v2;
  return _swift_task_switch(sub_1000B01A0, v2, 0);
}

uint64_t sub_1000B01A0()
{
  uint64_t v20 = v0;
  uint64_t v1 = 0x6863746566657270;
  *(void *)(v0 + 56) = *(void *)(**(void **)(v0 + 48) + 136);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1001C0330();
  os_log_type_t v3 = sub_1001C11E0();
  if (os_log_type_enabled(v2, v3))
  {
    int v18 = *(unsigned __int8 *)(v0 + 88);
    uint64_t v4 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1001C0E00();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 24) = sub_1000DF238(v5, v7, &v19);
    uint64_t v1 = 0x6863746566657270;
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v4 + 12) = 2080;
    uint64_t v8 = 0x6D726177657270;
    if (v18 != 1) {
      uint64_t v8 = 0x74736575716572;
    }
    if (v18) {
      uint64_t v9 = v8;
    }
    else {
      uint64_t v9 = 0x6863746566657270;
    }
    if (v18) {
      unint64_t v10 = 0xE700000000000000;
    }
    else {
      unint64_t v10 = 0xE800000000000000;
    }
    *(void *)(v0 + 32) = sub_1000DF238(v9, v10, &v19);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Receiving nodes %s from %s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  int v11 = *(unsigned __int8 *)(v0 + 88);
  sub_100003918(&qword_10020C550);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1001CC760;
  if (v11)
  {
    unint64_t v13 = 0xE700000000000000;
    if (v11 == 1) {
      uint64_t v1 = 0x6D726177657270;
    }
    else {
      uint64_t v1 = 0x74736575716572;
    }
  }
  else
  {
    unint64_t v13 = 0xE800000000000000;
  }
  *(void *)(v12 + 32) = v1;
  *(void *)(v12 + 40) = v13;
  uint64_t v19 = v12;
  uint64_t v14 = swift_bridgeObjectRetain();
  sub_1000D0E84(v14);
  uint64_t v15 = v19;
  *(void *)(v0 + 64) = v19;
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v16;
  void *v16 = v0;
  v16[1] = sub_1000B04FC;
  return sub_1000360CC(v15);
}

uint64_t sub_1000B04FC()
{
  uint64_t v2 = (void *)*v1;
  v2[10] = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    uint64_t v3 = v2[6];
    return _swift_task_switch(sub_1000B0658, v3, 0);
  }
  else
  {
    uint64_t v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_1000B0658()
{
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C11F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v5;
    sub_1001C1310();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Failed writing to file: %@", v3, 0xCu);
    sub_100003918(&qword_100207DA8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();

    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1000B0810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a3;
  *(void *)(v4 + 24) = a4;
  return _swift_task_switch(sub_1000B0830, 0, 0);
}

uint64_t sub_1000B0830()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_tapToRadarController);
  *(void *)(v0 + 32) = v1;
  return _swift_task_switch(sub_1000B085C, v1, 0);
}

uint64_t sub_1000B085C()
{
  sub_1000B40D0(*(uint8_t ***)(v0 + 24));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000B08BC(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

void sub_1000B0900(uint64_t a1, const char *a2)
{
  oslog = sub_1001C0330();
  os_log_type_t v3 = sub_1001C1200();
  if (os_log_type_enabled(oslog, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v3, a2, v4, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_1000B0A0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[25] = a3;
  v4[26] = a4;
  v4[24] = a2;
  uint64_t v5 = sub_1001BFB30();
  v4[27] = v5;
  v4[28] = *(void *)(v5 - 8);
  v4[29] = swift_task_alloc();
  uint64_t v6 = sub_100003918(qword_100208000);
  v4[30] = v6;
  v4[31] = *(void *)(v6 - 8);
  v4[32] = swift_task_alloc();
  sub_1001BF950();
  v4[33] = swift_task_alloc();
  type metadata accessor for TC2CloudAttestationVerifier();
  v4[34] = swift_task_alloc();
  return _swift_task_switch(sub_1000B0B88, 0, 0);
}

uint64_t sub_1000B0B88()
{
  uint64_t v30 = *(void *)(v0 + 272);
  uint64_t v1 = *(void *)(v0 + 248);
  uint64_t v24 = *(void *)(v0 + 264);
  uint64_t v25 = *(void *)(v0 + 256);
  uint64_t v26 = *(void *)(v0 + 240);
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v28 = *(void *)(v0 + 232);
  uint64_t v29 = *(void *)(v0 + 216);
  uint64_t v3 = *(void *)(v0 + 200);
  uint64_t v23 = *(void *)(v0 + 192);
  uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_rateLimiter);
  sub_1000B9700(v3 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_attestationVerifier, v30, (uint64_t (*)(void))type metadata accessor for TC2CloudAttestationVerifier);
  uint64_t v27 = v3 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_config;
  uint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_serverDrivenConfig);
  uint64_t v6 = (_OWORD *)(v3 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo);
  long long v8 = *(_OWORD *)(v3 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo + 16);
  long long v7 = *(_OWORD *)(v3 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo + 32);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v3 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo);
  *(_OWORD *)(v0 + 32) = v8;
  *(_OWORD *)(v0 + 48) = v7;
  long long v9 = v6[6];
  long long v11 = v6[3];
  long long v10 = v6[4];
  *(_OWORD *)(v0 + 96) = v6[5];
  *(_OWORD *)(v0 + 112) = v9;
  *(_OWORD *)(v0 + 64) = v11;
  *(_OWORD *)(v0 + 80) = v10;
  long long v12 = v6[10];
  long long v14 = v6[7];
  long long v13 = v6[8];
  *(_OWORD *)(v0 + 160) = v6[9];
  *(_OWORD *)(v0 + 176) = v12;
  *(_OWORD *)(v0 + 128) = v14;
  *(_OWORD *)(v0 + 144) = v13;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100016110(v0 + 16);
  sub_1001BF930();
  sub_1001BF940();
  sub_1001BF920();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v25, v3 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_thimbledEventContinuation, v26);
  sub_100003918(&qword_10020C500);
  uint64_t v15 = (void *)swift_allocObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v28, v27, v29);
  uint64_t v16 = sub_10018B20C(v23, v4, v30, v28, v5, (_OWORD *)(v0 + 16), v24, v25, 0, 0, 1u, 0, 0, 0, 0, v15);
  uint64_t v17 = OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_logger;
  *(void *)(v0 + 280) = v16;
  *(void *)(v0 + 288) = v17;
  int v18 = sub_1001C0330();
  os_log_type_t v19 = sub_1001C1200();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "firing prefetch request as response to expired attestations", v20, 2u);
    swift_slowDealloc();
  }

  uint64_t v31 = (uint64_t (*)(void))((char *)&dword_10020EA88 + dword_10020EA88);
  uint64_t v21 = (void *)swift_task_alloc();
  *(void *)(v0 + 296) = v21;
  *uint64_t v21 = v0;
  v21[1] = sub_1000B0E6C;
  return v31();
}

uint64_t sub_1000B0E6C()
{
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1000B10A0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1000B0F8C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000B0F8C()
{
  uint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C1200();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "succeeded prefetch request as response to expired attestations", v3, 2u);
    swift_slowDealloc();
  }
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1000B10A0()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_1000B1164()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000B13FC()
{
  sub_100003918(&qword_10020C370);
  v0[2] = swift_task_alloc();
  v0[3] = sub_1001C0F40();
  v0[4] = sub_1001C0F30();
  v0[5] = sub_1001C0F30();
  uint64_t v2 = sub_1001C0EA0();
  v0[6] = v2;
  v0[7] = v1;
  return _swift_task_switch(sub_1000B14D0, v2, v1);
}

uint64_t sub_1000B14D0()
{
  uint64_t v1 = v0[2];
  sub_1000B6500();
  uint64_t v2 = sub_1001BF0B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  id v3 = objc_allocWithZone((Class)type metadata accessor for TC2Daemon());
  v0[8] = sub_1000A8EE4(v1);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[9] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1000B15E0;
  return sub_1000A8054();
}

uint64_t sub_1000B15E0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_1000B1700, v3, v2);
}

uint64_t sub_1000B1700()
{
  swift_release();
  uint64_t v2 = sub_1001C0EA0();
  return _swift_task_switch(sub_1000B1798, v2, v1);
}

void sub_1000B1798()
{
}

int main(int argc, const char **argv, const char **envp)
{
  swift_task_create();
  swift_task_getMainExecutor();
  swift_job_run();
  int result = swift_task_asyncMainDrainQueue();
  __break(1u);
  return result;
}

uint64_t sub_1000B1838()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1000B9D6C;
  return sub_1000B13FC();
}

uint64_t sub_1000B18C4()
{
  return type metadata accessor for TC2Daemon();
}

uint64_t type metadata accessor for TC2Daemon()
{
  uint64_t result = qword_10020C300;
  if (!qword_10020C300) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000B1918()
{
  sub_1001C0340();
  if (v0 <= 0x3F)
  {
    sub_1001BFB30();
    if (v1 <= 0x3F)
    {
      type metadata accessor for TC2CloudAttestationVerifier();
      if (v2 <= 0x3F)
      {
        sub_1000B1B18(319, (unint64_t *)&unk_10020C310, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for AsyncStream);
        if (v3 <= 0x3F)
        {
          sub_1000B1B18(319, (unint64_t *)&qword_100207FC8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for AsyncStream.Continuation);
          if (v4 <= 0x3F) {
            swift_updateClassMetadata2();
          }
        }
      }
    }
  }
}

void sub_1000B1B18(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for ThimbledEvent();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

char *sub_1000B1B78()
{
  if (&swift_runtimeSupportsNoncopyableTypes) {
    return (char *)sub_100003918((uint64_t *)&unk_10020C320);
  }
  else {
    return (char *)&type metadata for () + 8;
  }
}

uint64_t sub_1000B1BA0(int a1)
{
  sub_1001BEEA0();
  swift_allocObject();
  uint64_t v2 = sub_1001BEE70();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    if (sub_1001BEE60())
    {
      uint64_t result = sub_1001BEE90();
      if (__OFSUB__(0, result)) {
        goto LABEL_12;
      }
    }
    swift_allocObject();
    uint64_t v4 = sub_1001BEE50();
    swift_release();
    uint64_t v2 = v4;
  }
  uint64_t result = sub_1001BEE60();
  if (!result)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  uint64_t v5 = result;
  uint64_t result = sub_1001BEE90();
  uint64_t v6 = -result;
  if (__OFSUB__(0, result))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v7 = sub_1001BEE80();
  if (v7 >= 1024) {
    size_t v8 = 1024;
  }
  else {
    size_t v8 = v7;
  }
  bzero((void *)(v5 + v6), v8);
  uint64_t v10 = 0x40000000000;
  unint64_t v11 = v2 | 0x4000000000000000;
  uint64_t v9 = sub_1000B4D74(&v10, a1);
  sub_10000792C(v10, v11);
  return v9;
}

uint64_t sub_1000B1CF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1001BFB30();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v19[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100003918(&qword_10020C5D8);
  __chkstk_darwin(v10 - 8, v11);
  long long v13 = (char *)&v19[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001BF860();
  sub_1001C0C60();
  swift_bridgeObjectRelease();
  int v14 = os_variant_allows_internal_security_policies();
  uint64_t result = swift_release();
  if (v14)
  {
    sub_1000B21C4(v13);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v2, v5);
    sub_100032890(a1, (uint64_t)v19);
    uint64_t v16 = sub_1001BF8D0();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v13, 1, v16) == 1)
    {
      sub_1000B2844(v19, a2);
      sub_100003E90((uint64_t)v19);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      return sub_100010360((uint64_t)v13, &qword_10020C5D8);
    }
    else
    {
      sub_100003E90((uint64_t)v19);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v17 + 32))(a2, v13, v16);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1000B1F48(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1001BF8D0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(a1, enum case for TC2Environment.production(_:), v2);
  if (qword_100207980 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1001C0340();
  sub_10000D978(v7, (uint64_t)qword_10020D0B8);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, a1, v2);
  uint64_t v8 = sub_1001C0330();
  os_log_type_t v9 = sub_1001C11E0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446210;
    uint64_t v11 = sub_1001BF8A0();
    uint64_t v13 = sub_1000DF238(v11, v12, &v14);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "TC2Configuration selected environment=%{public}s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
}

uint64_t sub_1000B21C4@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_100003918(&qword_10020C5D8);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1001BF8D0();
  uint64_t v6 = *(void *)(v37 - 8);
  __chkstk_darwin(v37, v7);
  os_log_type_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100003918(&qword_10020C5E0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001BF860();
  uint64_t v15 = sub_1001C0C60();
  swift_bridgeObjectRelease();
  int v16 = os_variant_allows_internal_security_policies();
  swift_release();
  if (!v16)
  {
    __break(1u);
LABEL_21:
    swift_once();
    goto LABEL_9;
  }
  sub_100003918(&qword_100207DB8);
  sub_1001BF960();
  sub_1001BFB30();
  sub_1000B9CCC();
  sub_1001BF8F0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  unint64_t v17 = v40;
  if (v40)
  {
    uint64_t v18 = v39;
    swift_bridgeObjectRetain();
    sub_1001BF890();
    uint64_t v15 = v37;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v5, 1, v37) == 1)
    {
      sub_100010360((uint64_t)v5, &qword_10020C5D8);
      if (qword_100207980 != -1) {
        swift_once();
      }
      uint64_t v19 = sub_1001C0340();
      sub_10000D978(v19, (uint64_t)qword_10020D0B8);
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1001C0330();
      os_log_type_t v21 = sub_1001C11E0();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = (uint8_t *)swift_slowAlloc();
        uint64_t v39 = swift_slowAlloc();
        *(_DWORD *)uint64_t v22 = 136446210;
        swift_bridgeObjectRetain();
        uint64_t v38 = sub_1000DF238(v18, v17, &v39);
        uint64_t v15 = v37;
        sub_1001C1310();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v20, v21, "TC2Configuration defaults=%{public}s unrecognized, no environment configured", v22, 0xCu);
        uint64_t v23 = 1;
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
        uint64_t v23 = 1;
      }
    }
    else
    {
      uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v36(v9, v5, v15);
      if (qword_100207980 != -1) {
        swift_once();
      }
      uint64_t v28 = sub_1001C0340();
      sub_10000D978(v28, (uint64_t)qword_10020D0B8);
      swift_bridgeObjectRetain();
      uint64_t v29 = sub_1001C0330();
      os_log_type_t v30 = sub_1001C11D0();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v34 = v18;
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        uint64_t v39 = swift_slowAlloc();
        uint64_t v35 = a1;
        *(_DWORD *)uint64_t v31 = 136446210;
        swift_bridgeObjectRetain();
        uint64_t v38 = sub_1000DF238(v34, v17, &v39);
        a1 = v35;
        sub_1001C1310();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v29, v30, "TC2Configuration selected configured environment=%{public}s from defaults", v31, 0xCu);
        swift_arrayDestroy();
        uint64_t v15 = v37;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v36(a1, v9, v15);
      uint64_t v23 = 0;
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(a1, v23, 1, v15);
  }
  uint64_t v15 = v37;
  if (qword_100207980 != -1) {
    goto LABEL_21;
  }
LABEL_9:
  uint64_t v24 = sub_1001C0340();
  sub_10000D978(v24, (uint64_t)qword_10020D0B8);
  uint64_t v25 = sub_1001C0330();
  os_log_type_t v26 = sub_1001C11E0();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v27 = 0;
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "TC2Configuration defaults absent, no environment configured", v27, 2u);
    swift_slowDealloc();
  }

  uint64_t v23 = 1;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(a1, v23, 1, v15);
}

uint64_t sub_1000B2844@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v136 = a2;
  uint64_t v3 = sub_100003918(&qword_10020C5D8);
  uint64_t v5 = __chkstk_darwin(v3 - 8, v4);
  uint64_t v130 = (char *)&v118 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v7);
  os_log_type_t v9 = (void (**)(char *, char *, uint64_t))((char *)&v118 - v8);
  uint64_t v10 = sub_1001BF8D0();
  uint64_t v138 = *(void (***)(char *, char *, uint64_t))(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10, v11);
  uint64_t v133 = (char *)&v118 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12, v14);
  uint64_t v134 = (char *)&v118 - v16;
  uint64_t v18 = __chkstk_darwin(v15, v17);
  uint64_t v131 = (char *)&v118 - v19;
  uint64_t v21 = __chkstk_darwin(v18, v20);
  id v128 = (char *)&v118 - v22;
  uint64_t v24 = __chkstk_darwin(v21, v23);
  os_log_type_t v26 = (char *)&v118 - v25;
  __chkstk_darwin(v24, v27);
  uint64_t v29 = (char *)&v118 - v28;
  uint64_t v135 = sub_100003918(&qword_10020C5E0);
  uint64_t v30 = *(void *)(v135 - 8);
  uint64_t v32 = __chkstk_darwin(v135, v31);
  uint64_t v34 = (char *)&v118 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32, v35);
  uint64_t v37 = (char *)&v118 - v36;
  sub_1001BF860();
  sub_1001C0C60();
  swift_bridgeObjectRelease();
  uint64_t v38 = os_variant_allows_internal_security_policies();
  swift_release();
  if (!v38)
  {
    __break(1u);
    goto LABEL_69;
  }
  sub_1001BF860();
  sub_1001C0C60();
  swift_bridgeObjectRelease();
  int has_internal_content = os_variant_has_internal_content();
  swift_release();
  if (!has_internal_content)
  {
    os_log_type_t v9 = v138;
    uint64_t v38 = v10;
    v138[13](v29, (char *)enum case for TC2Environment.production(_:), v10);
    if (qword_100207980 == -1)
    {
LABEL_11:
      uint64_t v57 = sub_1001C0340();
      sub_10000D978(v57, (uint64_t)qword_10020D0B8);
      v9[2](v26, v29, v38);
      uint64_t v58 = sub_1001C0330();
      os_log_type_t v59 = sub_1001C11D0();
      if (os_log_type_enabled(v58, v59))
      {
        v60 = (uint8_t *)swift_slowAlloc();
        uint64_t v139 = swift_slowAlloc();
        *(_DWORD *)v60 = 136446210;
        uint64_t v61 = sub_1001BF8A0();
        uint64_t v141 = sub_1000DF238(v61, v62, &v139);
        os_log_type_t v9 = v138;
        sub_1001C1310();
        swift_bridgeObjectRelease();
        ((void (*)(char *, uint64_t))v9[1])(v26, v38);
        _os_log_impl((void *)&_mh_execute_header, v58, v59, "TC2Configuration selected environment=%{public}s", v60, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        ((void (*)(char *, uint64_t))v9[1])(v26, v38);
      }

      return ((uint64_t (*)(uint64_t, char *, uint64_t))v9[4])(v136, v29, v38);
    }
LABEL_69:
    swift_once();
    goto LABEL_11;
  }
  uint64_t v40 = a1[3];
  uint64_t v41 = a1[4];
  sub_10000D934(a1, v40);
  uint64_t v129 = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 24))(v40, v41);
  uint64_t v132 = v42;
  uint64_t v43 = sub_100003918(&qword_100207DB8);
  sub_1001BFA60();
  uint64_t v44 = sub_1001BFB30();
  unint64_t v126 = sub_1000B9CCC();
  uint64_t v127 = v44;
  sub_1001BF8F0();
  unint64_t v45 = v30 + 8;
  v125 = *(void (**)(char *, uint64_t))(v30 + 8);
  v125(v37, v135);
  unint64_t v46 = (unint64_t)v140;
  uint64_t v137 = v10;
  if (v140)
  {
    uint64_t v47 = v139;
    sub_10001A364();
    uint64_t v48 = sub_1001C1370();
    uint64_t v49 = *(void *)(v48 + 16);
    uint64_t v124 = v43;
    if (v49 != 2)
    {
      swift_bridgeObjectRelease();
      if (qword_100207980 != -1) {
        swift_once();
      }
      uint64_t v72 = sub_1001C0340();
      sub_10000D978(v72, (uint64_t)qword_10020D0B8);
      swift_bridgeObjectRetain();
      uint64_t v73 = sub_1001C0330();
      os_log_type_t v74 = sub_1001C11F0();
      if (os_log_type_enabled(v73, v74))
      {
        v75 = (uint8_t *)swift_slowAlloc();
        uint64_t v76 = swift_slowAlloc();
        unint64_t v123 = v45;
        uint64_t v139 = v76;
        *(_DWORD *)v75 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v141 = sub_1000DF238(v47, v46, &v139);
        sub_1001C1310();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v73, v74, "TC2Configuration saw invalid bootFixedLiveOnEnvironment=%s", v75, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      id v68 = v138;
      uint64_t v69 = v132;
      goto LABEL_40;
    }
    unint64_t v123 = v30 + 8;
    swift_bridgeObjectRelease();
    if (*(void *)(v48 + 16))
    {
      unint64_t v45 = *(void *)(v48 + 32);
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_1001C0C70();
      unint64_t v46 = v50;
      swift_bridgeObjectRelease();
      if (*(void *)(v48 + 16) >= 2uLL)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v122 = sub_1001C0C70();
        unint64_t v45 = v51;
        swift_bridgeObjectRelease();
        if (qword_100207980 == -1) {
          goto LABEL_8;
        }
        goto LABEL_72;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_72:
    swift_once();
LABEL_8:
    uint64_t v52 = sub_1001C0340();
    uint64_t v53 = sub_10000D978(v52, (uint64_t)qword_10020D0B8);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v121 = v53;
    uint64_t v54 = sub_1001C0330();
    os_log_type_t v55 = sub_1001C11E0();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = swift_slowAlloc();
      uint64_t v119 = swift_slowAlloc();
      uint64_t v139 = v119;
      *(_DWORD *)uint64_t v56 = 136315394;
      uint64_t v120 = v30;
      swift_bridgeObjectRetain();
      uint64_t v141 = sub_1000DF238(v120, v46, &v139);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v56 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v141 = sub_1000DF238(v122, v45, &v139);
      uint64_t v30 = v120;
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "TC2Configuration saw bootFixedLiveOnEnvironment with id=%s, environment=%{public}s", (uint8_t *)v56, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v69 = v132;
    if (v30 == v129 && v46 == v132)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v77 = sub_1001C1840();
      swift_bridgeObjectRelease();
      if ((v77 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v80 = sub_1001C0330();
        os_log_type_t v81 = sub_1001C11E0();
        if (!os_log_type_enabled(v80, v81))
        {
LABEL_39:

          id v68 = v138;
LABEL_40:
          uint64_t v70 = v125;
          goto LABEL_41;
        }
        uint64_t v82 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v82 = 0;
        uint64_t v83 = "TC2Configuration saw bootFixedLiveOnEnvironment from previous boot, ignoring";
LABEL_38:
        _os_log_impl((void *)&_mh_execute_header, v80, v81, v83, v82, 2u);
        swift_slowDealloc();
        goto LABEL_39;
      }
    }
    swift_bridgeObjectRetain();
    sub_1001BF890();
    unint64_t v78 = v45;
    uint64_t v79 = v138;
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v138[6])((char *)v9, 1, v137) != 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v84 = v79[4];
      v84(v128, (char *)v9, v137);
      swift_bridgeObjectRetain();
      uint64_t v85 = sub_1001C0330();
      os_log_type_t v86 = sub_1001C11D0();
      if (os_log_type_enabled(v85, v86))
      {
        uint64_t v87 = (uint8_t *)swift_slowAlloc();
        uint64_t v139 = swift_slowAlloc();
        *(_DWORD *)uint64_t v87 = 136446210;
        swift_bridgeObjectRetain();
        uint64_t v141 = sub_1000DF238(v122, v78, &v139);
        sub_1001C1310();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v85, v86, "TC2Configuration agrees with current boot's selection, environment=%{public}s", v87, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v84)(v136, v128, v137);
    }
    swift_bridgeObjectRelease();
    sub_100010360((uint64_t)v9, &qword_10020C5D8);
    uint64_t v80 = sub_1001C0330();
    os_log_type_t v81 = sub_1001C11F0();
    if (!os_log_type_enabled(v80, v81)) {
      goto LABEL_39;
    }
    uint64_t v82 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v82 = 0;
    uint64_t v83 = "TC2Configuration saw bootFixedLiveOnEnvironment with invalid environment, ignoring";
    goto LABEL_38;
  }
  if (qword_100207980 != -1) {
    swift_once();
  }
  uint64_t v64 = sub_1001C0340();
  sub_10000D978(v64, (uint64_t)qword_10020D0B8);
  v65 = sub_1001C0330();
  os_log_type_t v66 = sub_1001C11E0();
  BOOL v67 = os_log_type_enabled(v65, v66);
  id v68 = v138;
  uint64_t v69 = v132;
  uint64_t v70 = v125;
  if (v67)
  {
    uint64_t v71 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v71 = 0;
    _os_log_impl((void *)&_mh_execute_header, v65, v66, "TC2Configuration does not see bootFixedLiveOnEnvironment", v71, 2u);
    swift_slowDealloc();
  }

LABEL_41:
  sub_1001BFA40();
  sub_1001BF8F0();
  v70(v34, v135);
  uint64_t v88 = v140;
  if (!v140)
  {
    if (qword_100207980 != -1) {
      swift_once();
    }
    uint64_t v96 = sub_1001C0340();
    sub_10000D978(v96, (uint64_t)qword_10020D0B8);
    v97 = sub_1001C0330();
    os_log_type_t v98 = sub_1001C11E0();
    if (os_log_type_enabled(v97, v98))
    {
      uint64_t v99 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v99 = 0;
      _os_log_impl((void *)&_mh_execute_header, v97, v98, "TC2Configuration does not see proposedEnvironment", v99, 2u);
      swift_slowDealloc();
    }

    uint64_t v101 = v133;
    v100 = v134;
    goto LABEL_58;
  }
  uint64_t v89 = v139;
  swift_bridgeObjectRetain();
  uint64_t v90 = (uint64_t)v130;
  sub_1001BF890();
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v68[6])(v90, 1, v137) == 1)
  {
    unint64_t v91 = v68;
    sub_100010360(v90, &qword_10020C5D8);
    if (qword_100207980 != -1) {
      swift_once();
    }
    uint64_t v92 = sub_1001C0340();
    sub_10000D978(v92, (uint64_t)qword_10020D0B8);
    swift_bridgeObjectRetain();
    uint64_t v93 = sub_1001C0330();
    os_log_type_t v94 = sub_1001C11F0();
    if (os_log_type_enabled(v93, v94))
    {
      id v95 = (uint8_t *)swift_slowAlloc();
      uint64_t v139 = swift_slowAlloc();
      *(_DWORD *)id v95 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v141 = sub_1000DF238(v89, (unint64_t)v88, &v139);
      uint64_t v69 = v132;
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v93, v94, "TC2Configuration saw invalid proposed environment=%{public}s, ignoring", v95, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v101 = v133;
    v100 = v134;
    id v68 = v91;
LABEL_58:
    v68[13](v100, (char *)enum case for TC2Environment.carry(_:), v137);
    if (qword_100207980 != -1) {
      swift_once();
    }
    uint64_t v107 = sub_1001C0340();
    sub_10000D978(v107, (uint64_t)qword_10020D0B8);
    v68[2](v101, v100, v137);
    v108 = sub_1001C0330();
    os_log_type_t v109 = sub_1001C11D0();
    if (os_log_type_enabled(v108, v109))
    {
      uint64_t v110 = (uint8_t *)swift_slowAlloc();
      uint64_t v139 = swift_slowAlloc();
      *(_DWORD *)uint64_t v110 = 136446210;
      uint64_t v111 = sub_1001BF8A0();
      uint64_t v141 = sub_1000DF238(v111, v112, &v139);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      uint64_t v69 = v132;
      ((void (*)(char *, uint64_t))v68[1])(v101, v137);
      _os_log_impl((void *)&_mh_execute_header, v108, v109, "TC2Configuration selected environment=%{public}s", v110, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      ((void (*)(char *, uint64_t))v68[1])(v101, v137);
    }

    uint64_t v113 = v136;
    long long v114 = v134;
    uint64_t v115 = sub_1001BF8A0();
    sub_1000B3C98(v129, v69, v115, v116);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v68[4])(v113, v114, v137);
  }
  char v102 = v68[4];
  uint64_t v138 = v68 + 4;
  v102(v131, (char *)v90, v137);
  if (qword_100207980 != -1) {
    swift_once();
  }
  uint64_t v103 = sub_1001C0340();
  sub_10000D978(v103, (uint64_t)qword_10020D0B8);
  swift_bridgeObjectRetain_n();
  uint64_t v104 = sub_1001C0330();
  os_log_type_t v105 = sub_1001C11D0();
  if (os_log_type_enabled(v104, v105))
  {
    id v106 = (uint8_t *)swift_slowAlloc();
    uint64_t v139 = swift_slowAlloc();
    *(_DWORD *)id v106 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v141 = sub_1000DF238(v89, (unint64_t)v88, &v139);
    uint64_t v69 = v132;
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v104, v105, "TC2Configuration moving to proposed environment=%{public}s", v106, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v117 = v136;
  sub_1000B3C98(v129, v69, v89, v88);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v102)(v117, v131, v137);
}

uint64_t sub_1000B3C98(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = sub_100003918(&qword_10020C5E0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001BF860();
  sub_1001C0C60();
  swift_bridgeObjectRelease();
  int v13 = os_variant_allows_internal_security_policies();
  uint64_t result = swift_release();
  if (v13)
  {
    sub_100003918(&qword_100207DB8);
    sub_1001BFA60();
    v20[0] = a1;
    v20[1] = a2;
    swift_bridgeObjectRetain();
    v21._countAndFlagsBits = 44;
    v21._object = (void *)0xE100000000000000;
    sub_1001C0D00(v21);
    v22._countAndFlagsBits = a3;
    v22._object = a4;
    sub_1001C0D00(v22);
    uint64_t v15 = sub_1001BFAF0();
    uint64_t v17 = v16;
    v24._countAndFlagsBits = sub_1001BFAE0();
    uint64_t v19 = v18;
    v23._countAndFlagsBits = v15;
    v23._object = v17;
    v24._object = v19;
    sub_1001C0CA0(v23, v24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

_OWORD *sub_1000B3E48(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v5 = v4;
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  uint64_t v8 = sub_1001BF0B0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1001BF8E0();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  sub_1001BEE10();
  swift_allocObject();
  v4[14] = sub_1001BEE00();
  v4[15] = 10;
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v17, enum case for TC2LogCategory.metricReporter(_:), v13);
  sub_1001BFDD0();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  uint64_t v18 = v27;
  v4[16] = v26;
  v4[17] = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a3, v8);
  type metadata accessor for NodeDistributionAnalyzerStoreHelper(0);
  swift_allocObject();
  uint64_t v19 = sub_1000358C8((uint64_t)v12);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a3, v8);
  *(void *)((char *)v5 + *(void *)(*(void *)v5 + 144)) = v19;
  long long v20 = a4[9];
  v5[17] = a4[8];
  v5[18] = v20;
  v5[19] = a4[10];
  long long v21 = a4[5];
  v5[13] = a4[4];
  v5[14] = v21;
  long long v22 = a4[7];
  v5[15] = a4[6];
  v5[16] = v22;
  long long v23 = a4[1];
  v5[9] = *a4;
  v5[10] = v23;
  long long v24 = a4[3];
  v5[11] = a4[2];
  v5[12] = v24;
  return v5;
}

uint64_t sub_1000B40D0(uint8_t **a1)
{
  uint64_t v2 = v1;
  uint64_t v72 = a1;
  uint64_t v3 = sub_100003918(&qword_10020C370);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v73 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1001BF2C0();
  uint64_t v7 = *(void **)(v6 - 8);
  uint64_t v9 = __chkstk_darwin(v6, v8);
  uint64_t v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v9, v12);
  uint64_t v15 = (char *)&v67 - v14;
  __chkstk_darwin(v13, v16);
  uint64_t v18 = (char *)&v67 - v17;
  sub_1001BF2B0();
  uint64_t v19 = &v2[qword_10020F2B8];
  swift_beginAccess();
  uint64_t v76 = (void (*)(char *, char *, uint64_t))v7[2];
  v76(v11, v19, v6);
  sub_1001BF220();
  long long v21 = (char *)(v7 + 1);
  long long v20 = (void (*)(char *, uint64_t))v7[1];
  v20(v11, v6);
  sub_1000B9C84(&qword_10020C540, (void (*)(uint64_t))&type metadata accessor for Date);
  LOBYTE(v11) = sub_1001C0BC0();
  v20(v15, v6);
  v75 = v20;
  if (v11)
  {
    long long v22 = v76;
    uint64_t v73 = v21;
    swift_retain();
    long long v23 = sub_1001C0330();
    os_log_type_t v24 = sub_1001C1200();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v72 = (uint8_t **)swift_slowAlloc();
      id v78 = v72;
      os_log_type_t v74 = v18;
      *(_DWORD *)uint64_t v25 = 136315138;
      uint64_t v70 = v25 + 4;
      uint64_t v71 = v25;
      v22(v15, v19, v6);
      sub_1000B9C84(&qword_10020C558, (void (*)(uint64_t))&type metadata accessor for Date);
      uint64_t v26 = sub_1001C1780();
      unint64_t v28 = v27;
      uint64_t v29 = v75;
      v75(v15, v6);
      uint64_t v77 = sub_1000DF238(v26, v28, (uint64_t *)&v78);
      sub_1001C1310();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Ignoring TTR indication due to rate limit (1 per 24 hours), last report time %s.", v71, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v29(v74, v6);
    }
    else
    {

      swift_release();
      v75(v18, v6);
    }
    return 0;
  }
  swift_beginAccess();
  uint64_t v30 = (void (*)(char *, char *, uint64_t))v7[3];
  os_log_type_t v74 = v18;
  v30(v19, v18, v6);
  swift_endAccess();
  uint64_t v31 = *(void *)(*(void *)v2 + 112);
  v76(v15, v19, v6);
  uint64_t v76 = (void (*)(char *, char *, uint64_t))v2;
  sub_1001A1A84((uint64_t)v15, *(void **)&v2[v31]);
  v20(v15, v6);
  uint64_t v32 = v72;
  uint64_t v33 = *v72;
  uint64_t v34 = v72[1];
  uint64_t v35 = v72[3];
  uint64_t v71 = *v72;
  if (!v35)
  {
    swift_bridgeObjectRetain();
    uint64_t v36 = v33;
    uint64_t v70 = v34;
    uint64_t v37 = v32[5];
    if (v37) {
      goto LABEL_6;
    }
LABEL_9:
    uint64_t v38 = (uint8_t *)0xE700000000000000;
    uint64_t v69 = 0x36323633353631;
    goto LABEL_10;
  }
  uint64_t v36 = v72[2];
  uint64_t v70 = v35;
  uint64_t v37 = v72[5];
  if (!v37) {
    goto LABEL_9;
  }
LABEL_6:
  uint64_t v69 = (uint64_t)v32[4];
  uint64_t v38 = v37;
LABEL_10:
  uint64_t v67 = v6;
  uint64_t v39 = v32[7];
  if (v39)
  {
    uint64_t v68 = (uint64_t)v32[6];
    uint64_t v40 = v39;
  }
  else
  {
    uint64_t v68 = 0xD000000000000015;
    uint64_t v40 = (uint8_t *)0x80000001001C47E0;
  }
  uint64_t v41 = (uint64_t)v36;
  uint64_t v42 = v32[9];
  if (v42)
  {
    uint64_t v43 = (uint64_t)v32[8];
    uint64_t v44 = v42;
  }
  else
  {
    uint64_t v44 = (uint8_t *)0xE300000000000000;
    uint64_t v43 = 7105601;
  }
  id v78 = 0;
  unint64_t v79 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001C1420(150);
  v80._countAndFlagsBits = 0xD000000000000019;
  v80._object = (void *)0x80000001001C4800;
  sub_1001C0D00(v80);
  v81._countAndFlagsBits = (uint64_t)v71;
  v81._object = v34;
  sub_1001C0D00(v81);
  v82._countAndFlagsBits = 0x656E6F706D6F4326;
  v82._object = (void *)0xED00003D4449746ELL;
  sub_1001C0D00(v82);
  v83._countAndFlagsBits = v69;
  v83._object = v38;
  sub_1001C0D00(v83);
  swift_bridgeObjectRelease();
  v84._countAndFlagsBits = 0x656E6F706D6F4326;
  v84._object = (void *)0xEF3D656D614E746ELL;
  sub_1001C0D00(v84);
  v85._countAndFlagsBits = v68;
  v85._object = v40;
  sub_1001C0D00(v85);
  swift_bridgeObjectRelease();
  v86._object = (void *)0x80000001001C4820;
  v86._countAndFlagsBits = 0xD000000000000012;
  sub_1001C0D00(v86);
  v87._countAndFlagsBits = v43;
  v87._object = v44;
  sub_1001C0D00(v87);
  swift_bridgeObjectRelease();
  v88._countAndFlagsBits = 0xD000000000000028;
  v88._object = (void *)0x80000001001C4840;
  sub_1001C0D00(v88);
  v89._countAndFlagsBits = v41;
  v89._object = v70;
  sub_1001C0D00(v89);
  swift_bridgeObjectRelease();
  v90._countAndFlagsBits = 0xD00000000000001DLL;
  v90._object = (void *)0x80000001001C4870;
  sub_1001C0D00(v90);
  uint64_t v46 = (uint64_t)v78;
  unint64_t v45 = v79;
  swift_bridgeObjectRetain_n();
  uint64_t v47 = sub_1001C0330();
  os_log_type_t v48 = sub_1001C1200();
  if (os_log_type_enabled(v47, v48))
  {
    uint64_t v49 = (uint8_t *)swift_slowAlloc();
    id v78 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v49 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v77 = sub_1000DF238(v46, v45, (uint64_t *)&v78);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "TTR: %s", v49, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  unint64_t v50 = v73;
  unint64_t v51 = v74;
  uint64_t result = (uint64_t)[self defaultWorkspace];
  if (!result)
  {
    __break(1u);
    return result;
  }
  uint64_t v53 = (void *)result;
  sub_1001BF080();
  swift_bridgeObjectRelease();
  uint64_t v54 = sub_1001BF0B0();
  uint64_t v55 = *(void *)(v54 - 8);
  uint64_t v57 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v50, 1, v54) != 1)
  {
    sub_1001BF020(v56);
    uint64_t v57 = v58;
    (*(void (**)(char *, uint64_t))(v55 + 8))(v50, v54);
  }
  id v78 = 0;
  id v59 = objc_msgSend(v53, "openURL:configuration:error:", v57, 0, &v78, v67);

  id v60 = v78;
  if (v59)
  {

    v75(v51, v67);
    return 1;
  }
  uint64_t v61 = v60;
  sub_1001BEFE0();

  swift_willThrow();
  swift_errorRetain();
  swift_errorRetain();
  unint64_t v62 = sub_1001C0330();
  uint64_t v63 = sub_1001C11F0();
  if (os_log_type_enabled(v62, (os_log_type_t)v63))
  {
    uint64_t v64 = (uint8_t *)swift_slowAlloc();
    v65 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v64 = 138412290;
    swift_errorRetain();
    os_log_type_t v66 = (void *)_swift_stdlib_bridgeErrorToNSError();
    id v78 = v66;
    sub_1001C1310();
    void *v65 = v66;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v62, (os_log_type_t)v63, "Failed to TTR, error: %@", v64, 0xCu);
    sub_100003918(&qword_100207DA8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  v75(v51, v67);
  return 0;
}

uint64_t sub_1000B4BB0(int *a1)
{
  uint64_t v4 = (uint64_t (*)(void))((char *)a1 + *a1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1000B4C7C;
  return v4();
}

uint64_t sub_1000B4C7C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1000B4D74(uint64_t *a1, int a2)
{
  uint64_t v4 = *a1;
  unint64_t v3 = a1[1];
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)a1 = xmmword_1001CB200;
      uint64_t v10 = v4 >> 32;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_14;
      }
      if (v10 < (int)v4) {
        goto LABEL_18;
      }
      if (sub_1001BEE60() && __OFSUB__((int)v4, sub_1001BEE90())) {
        goto LABEL_19;
      }
      sub_1001BEEA0();
      swift_allocObject();
      uint64_t v12 = sub_1001BEE50();
      swift_release();
      uint64_t v9 = v12;
LABEL_14:
      if (v10 < (int)v4)
      {
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
      }
      uint64_t result = sub_1000B505C((int)v4, v4 >> 32, v9, a2);
      *a1 = v4;
      a1[1] = v9 | 0x4000000000000000;
      return result;
    case 2uLL:
      uint64_t v14 = *a1;
      unint64_t v15 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      sub_1001BF0C0();
      uint64_t v11 = v15;
      uint64_t result = sub_1000B505C(*(void *)(v14 + 16), *(void *)(v14 + 24), v15, a2);
      *a1 = v14;
      a1[1] = v11 | 0x8000000000000000;
      return result;
    case 3uLL:
      memset(v13, 0, 15);
      uint64_t result = sub_1000BC0BC(v13, a2, &v14);
      if (!v2) {
        return v14;
      }
      return result;
    default:
      *(void *)uint64_t v13 = *a1;
      *(_WORD *)&v13[8] = v3;
      v13[10] = BYTE2(v3);
      v13[11] = BYTE3(v3);
      v13[12] = BYTE4(v3);
      v13[13] = BYTE5(v3);
      v13[14] = BYTE6(v3);
      uint64_t result = sub_1000BC0BC(v13, a2, &v14);
      if (!v2) {
        uint64_t result = v14;
      }
      unint64_t v8 = *(unsigned int *)&v13[8] | ((unint64_t)v13[12] << 32) | ((unint64_t)v13[13] << 40) | ((unint64_t)v13[14] << 48);
      *a1 = *(void *)v13;
      a1[1] = v8;
      return result;
  }
}

uint64_t sub_1000B505C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result = sub_1001BEE60();
  if (!result) {
    goto LABEL_9;
  }
  uint64_t v9 = result;
  uint64_t result = sub_1001BEE90();
  uint64_t v10 = a1 - result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_8;
  }
  if (__OFSUB__(a2, a1))
  {
LABEL_8:
    __break(1u);
LABEL_9:
    __break(1u);
    return result;
  }
  sub_1001BEE80();
  uint64_t result = sub_1000BC0BC((char *)(v9 + v10), a4, &v11);
  if (!v4) {
    return v11;
  }
  return result;
}

uint64_t sub_1000B5108(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v61 = a2;
  uint64_t v5 = sub_100003918(&qword_10020C350);
  uint64_t v56 = *(void *)(v5 - 8);
  uint64_t v57 = v5;
  __chkstk_darwin(v5, v6);
  uint64_t v55 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_1001BEFF0();
  uint64_t v8 = *(void *)(v54 - 8);
  __chkstk_darwin(v54, v9);
  uint64_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1001BF0B0();
  uint64_t v60 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12, v13);
  uint64_t v52 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14, v16);
  unint64_t v59 = (unint64_t)&v52 - v18;
  __chkstk_darwin(v17, v19);
  long long v21 = (char *)&v52 - v20;
  uint64_t v22 = sub_1001BF8E0();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v24);
  uint64_t v26 = (char *)&v52 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1001BFB30();
  v64[3] = v27;
  v64[4] = (uint64_t)&protocol witness table for TC2DefaultConfiguration;
  uint64_t v53 = sub_10000395C(v64);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32))(v53, a1, v27);
  swift_defaultActor_initialize();
  sub_1001BEF30();
  swift_allocObject();
  *(void *)(a3 + 112) = sub_1001BEF20();
  sub_1001BEEF0();
  swift_allocObject();
  *(void *)(a3 + 120) = sub_1001BEEE0();
  (*(void (**)(char *, void, uint64_t))(v23 + 104))(v26, enum case for TC2LogCategory.rateLimiter(_:), v22);
  sub_1001BFDD0();
  uint64_t v28 = v22;
  uint64_t v29 = v12;
  (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v28);
  sub_100032890((uint64_t)v64, a3 + OBJC_IVAR____TtC20privatecloudcomputed11RateLimiter_config);
  *(void *)&v62[0] = 0xD000000000000017;
  *((void *)&v62[0] + 1) = 0x80000001001C4420;
  uint64_t v30 = v54;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v11, enum case for URL.DirectoryHint.inferFromPath(_:), v54);
  sub_10001A364();
  sub_1001BF0A0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v30);
  swift_bridgeObjectRelease();
  uint64_t v31 = a3 + OBJC_IVAR____TtC20privatecloudcomputed11RateLimiter_file;
  uint64_t v32 = v60;
  uint64_t v33 = *(void (**)(uint64_t, char *, uint64_t))(v60 + 16);
  v33(a3 + OBJC_IVAR____TtC20privatecloudcomputed11RateLimiter_file, v21, v29);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56))(v31, 0, 1, v29);
  uint64_t v34 = v55;
  sub_1001BFAD0();
  uint64_t v35 = v21;
  sub_1001BF8F0();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v34, v57);
  *(void *)(a3 + OBJC_IVAR____TtC20privatecloudcomputed11RateLimiter_rateLimitUnmatchedRequestStorageTimeout) = *(void *)&v62[0];
  uint64_t v36 = sub_1001BF0D0();
  uint64_t v58 = v21;
  uint64_t v37 = v36;
  unint64_t v39 = v38;
  sub_100007B14(v36, v38);
  sub_1000B9C30();
  swift_retain();
  sub_1001BEED0();
  sub_10000792C(v37, v39);
  swift_release();
  uint64_t v40 = (_OWORD *)(a3 + OBJC_IVAR____TtC20privatecloudcomputed11RateLimiter_model);
  long long v41 = v62[1];
  *uint64_t v40 = v62[0];
  v40[1] = v41;
  uint64_t v42 = v52;
  v33((uint64_t)v52, v35, v29);
  uint64_t v43 = sub_1001C0330();
  os_log_type_t v44 = sub_1001C11E0();
  if (os_log_type_enabled(v43, v44))
  {
    unint64_t v45 = v42;
    uint64_t v46 = (uint8_t *)swift_slowAlloc();
    *(void *)&v62[0] = swift_slowAlloc();
    uint64_t v57 = a3;
    *(_DWORD *)uint64_t v46 = 136315138;
    unint64_t v59 = v39;
    sub_1000B9C84((unint64_t *)&qword_10020BF20, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v47 = sub_1001C1780();
    uint64_t v63 = sub_1000DF238(v47, v48, (uint64_t *)v62);
    a3 = v57;
    sub_1001C1310();
    swift_bridgeObjectRelease();
    uint64_t v49 = *(void (**)(char *, uint64_t))(v60 + 8);
    v49(v45, v29);
    _os_log_impl((void *)&_mh_execute_header, v43, v44, "initialized ratelimiter, file=%s", v46, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    sub_10000792C(v37, v59);

    v49(v61, v29);
    unint64_t v50 = v58;
  }
  else
  {
    sub_10000792C(v37, v39);

    uint64_t v49 = *(void (**)(char *, uint64_t))(v60 + 8);
    v49(v42, v29);
    v49(v61, v29);
    unint64_t v50 = v35;
  }
  v49(v50, v29);
  sub_100003E90((uint64_t)v64);
  return a3;
}

uint64_t sub_1000B5D08(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v46 = a6;
  uint64_t v47 = a7;
  uint64_t v52 = a12;
  uint64_t v53 = a13;
  int v51 = a11;
  uint64_t v49 = a10;
  uint64_t v50 = a8;
  uint64_t v48 = a9;
  uint64_t v20 = sub_1001BF8E0();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20, v22);
  uint64_t v24 = (char *)&v45 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1001BFB30();
  uint64_t v55 = v25;
  uint64_t v56 = &protocol witness table for TC2DefaultConfiguration;
  uint64_t v26 = sub_10000395C((uint64_t *)&v54);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32))(v26, a1, v25);
  (*(void (**)(char *, void, uint64_t))(v21 + 104))(v24, enum case for TC2LogCategory.daemon(_:), v20);
  sub_1001BFDD0();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v20);
  uint64_t v27 = a14 + *(void *)(*(void *)a14 + 304);
  unint64_t v28 = sub_100055D38((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v29 = *(void *)sub_1001BF600();
  *(_DWORD *)uint64_t v27 = 0;
  *(void *)(v27 + 8) = v28;
  *(void *)(v27 + 16) = v29;
  uint64_t v30 = a14 + qword_100220090;
  swift_retain();
  sub_10000E720(&v54, v30);
  *(void *)(a14 + qword_100220098) = a2;
  uint64_t v31 = (_OWORD *)(a14 + *(void *)(*(void *)a14 + 216));
  long long v32 = a3[1];
  _OWORD *v31 = *a3;
  v31[1] = v32;
  long long v33 = a3[5];
  v31[4] = a3[4];
  v31[5] = v33;
  long long v34 = a3[3];
  v31[2] = a3[2];
  v31[3] = v34;
  long long v35 = a3[10];
  long long v36 = a3[8];
  v31[9] = a3[9];
  v31[10] = v35;
  long long v37 = a3[7];
  v31[6] = a3[6];
  v31[7] = v37;
  v31[8] = v36;
  *(void *)(a14 + *(void *)(*(void *)a14 + 232)) = a4;
  sub_1000B9698(a5, a14 + *(void *)(*(void *)a14 + 240), (uint64_t (*)(void))type metadata accessor for TC2CloudAttestationVerifier);
  *(void *)(a14 + *(void *)(*(void *)a14 + 248)) = v46;
  *(void *)(a14 + *(void *)(*(void *)a14 + 256)) = v47;
  uint64_t v38 = a14 + *(void *)(*(void *)a14 + 264);
  uint64_t v39 = sub_1001C14E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 32))(v38, v50, v39);
  uint64_t v40 = (void *)(a14 + *(void *)(*(void *)a14 + 272));
  uint64_t v41 = v49;
  *uint64_t v40 = v48;
  v40[1] = v41;
  *(unsigned char *)(a14 + *(void *)(*(void *)a14 + 280)) = v51;
  *(void *)(a14 + *(void *)(*(void *)a14 + 288)) = v52;
  uint64_t v42 = a14 + *(void *)(*(void *)a14 + 296);
  uint64_t v43 = sub_100003918(qword_100208000);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 32))(v42, v53, v43);
  return a14;
}

uint64_t sub_1000B60EC(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100003918((uint64_t *)&unk_10020C5B0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v39 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1001BF3E0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v37 = v9;
  uint64_t v38 = v10;
  __chkstk_darwin(v9, v11);
  long long v36 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1001BF350();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1001BF3C0();
  uint64_t v34 = *(void *)(v18 - 8);
  uint64_t v35 = v18;
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1001BF2C0();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v24);
  uint64_t v26 = (char *)&v34 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  long long v27 = *(_OWORD *)(a1 + 160);
  *(_OWORD *)(v3 + qword_10021F8F0) = v27;
  long long v40 = v27;
  *(void *)(v3 + *(void *)(*(void *)v3 + 144)) = a2;
  sub_1000B9C04((uint64_t)&v40);
  id v28 = a2;
  NSString v29 = sub_1001C0BE0();
  [v28 integerForKey:v29];

  uint64_t v30 = v37;
  sub_1001BF1F0();
  (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v3 + qword_1002082A0, v26, v22);
  uint64_t v31 = v38;
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v17, enum case for Calendar.Identifier.gregorian(_:), v13);
  sub_1001BF360();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  long long v32 = v39;
  sub_1001BF3D0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48))(v32, 1, v30);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v36, v32, v30);
    sub_1001BF3B0();
    (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v3 + qword_10021F8F8, v21, v35);
    return v3;
  }
  return result;
}

uint64_t sub_1000B6500()
{
  uint64_t v0 = sub_1001BF8E0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1001C0340();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for TC2LogCategory.sandbox(_:), v0);
  sub_1001BFDD0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  sub_1001C0C60();
  int v10 = _set_user_dir_suffix();
  swift_release();
  if (v10)
  {
    sub_1000B1BA0(65537);
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    if (v12) {
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
  }
  uint64_t result = sub_1001C1580();
  __break(1u);
  return result;
}

uint64_t sub_1000B6770(void *a1)
{
  uint64_t v3 = sub_1001BF2C0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1001BF8E0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v12, enum case for TC2LogCategory.daemon(_:), v8);
  sub_1001BFDD0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  *(void *)(v1 + *(void *)(*(void *)v1 + 112)) = a1;
  id v13 = a1;
  NSString v14 = sub_1001C0BE0();
  [v13 integerForKey:v14];

  sub_1001BF1F0();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v1 + qword_10020F2B8, v7, v3);
  return v1;
}

uint64_t sub_1000B69A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _OWORD *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v54 = a3;
  uint64_t v55 = a5;
  uint64_t v51 = a1;
  uint64_t v52 = a2;
  uint64_t v59 = a9;
  uint64_t v60 = a8;
  uint64_t v14 = sub_1001BF2C0();
  uint64_t v57 = *(void *)(v14 - 8);
  uint64_t v58 = v14;
  __chkstk_darwin(v14, v15);
  uint64_t v56 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100003918(&qword_10020C370);
  __chkstk_darwin(v17 - 8, v18);
  uint64_t v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1001BF8E0();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21, v23);
  uint64_t v25 = (char *)&v50 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1001BFB30();
  v61[3] = v26;
  v61[4] = (uint64_t)&protocol witness table for TC2DefaultConfiguration;
  long long v27 = sub_10000395C(v61);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v27, a4, v26);
  (*(void (**)(char *, void, uint64_t))(v22 + 104))(v25, enum case for TC2LogCategory.prefetchRequest(_:), v21);
  sub_1001BFDD0();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v21);
  uint64_t v28 = v52;
  *(void *)(a10 + qword_10021FEF0) = v51;
  *(void *)(a10 + qword_10021FEF8) = v28;
  uint64_t v53 = type metadata accessor for TC2CloudAttestationVerifier;
  sub_1000B9700(a3, a10 + qword_10021FF00, (uint64_t (*)(void))type metadata accessor for TC2CloudAttestationVerifier);
  sub_100032890((uint64_t)v61, a10 + 16);
  uint64_t v29 = a10 + qword_10021FF08;
  uint64_t v30 = sub_100003918(qword_100208000);
  uint64_t v31 = *(void *)(v30 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v29, v60, v30);
  *(void *)(a10 + qword_10021FF10) = a6;
  long long v32 = (_OWORD *)(a10 + *(void *)(*(void *)a10 + 160));
  long long v33 = a7[1];
  *long long v32 = *a7;
  v32[1] = v33;
  long long v34 = a7[5];
  v32[4] = a7[4];
  v32[5] = v34;
  long long v35 = a7[3];
  v32[2] = a7[2];
  v32[3] = v35;
  long long v36 = a7[10];
  long long v37 = a7[8];
  v32[9] = a7[9];
  v32[10] = v36;
  long long v38 = a7[7];
  v32[6] = a7[6];
  v32[7] = v38;
  v32[8] = v37;
  swift_retain();
  swift_retain();
  sub_100016110((uint64_t)a7);
  swift_retain();
  uint64_t v39 = TC2ServerDrivenConfiguration.maxPrefetchWorkloadCount.getter();
  if (v40) {
    uint64_t v41 = 20;
  }
  else {
    uint64_t v41 = v39;
  }
  uint64_t v42 = TC2ServerDrivenConfiguration.maxPrefetchWorkloadAgeSeconds.getter();
  if (v43) {
    double v44 = 2592000.0;
  }
  else {
    double v44 = (double)v42;
  }
  uint64_t v45 = sub_1001BF0B0();
  uint64_t v46 = *(void *)(v45 - 8);
  uint64_t v47 = v55;
  (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v20, v55, v45);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v20, 0, 1, v45);
  sub_100003918((uint64_t *)&unk_10020C5A0);
  swift_allocObject();
  *(void *)(a10 + qword_10021FEE8) = sub_1000A7BF4(v41, (uint64_t)v20, v44);
  uint64_t v48 = (uint64_t)v56;
  _s20privatecloudcomputed8LRUCacheC10addToCache3now5valueSb10Foundation4DateV_xtFfA__0();
  sub_1001945F0(v48);
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v60, v30);
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v47, v45);
  sub_100003E90((uint64_t)v61);
  sub_1000B9A3C(v54, (uint64_t (*)(void))v53);
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v48, v58);
  *(void *)(a10 + *(void *)(*(void *)a10 + 168)) = v59;
  return a10;
}

unint64_t sub_1000B6EAC(uint64_t a1)
{
  uint64_t v2 = sub_1001BF450();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v5 = __chkstk_darwin(v2, v4);
  v65 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v7);
  os_log_type_t v66 = (char *)&v54 - v8;
  uint64_t v9 = sub_100003918(&qword_10020C528);
  uint64_t v11 = __chkstk_darwin(v9 - 8, v10);
  id v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v14);
  uint64_t v16 = (unsigned __int8 *)&v54 - v15;
  unint64_t v17 = sub_100055F2C((uint64_t)&_swiftEmptyArrayStorage);
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v55 = a1 + 64;
  uint64_t v19 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v18;
  uint64_t v63 = v3;
  uint64_t v64 = (void (**)(char *, char *, uint64_t))(v3 + 16);
  unint64_t v62 = (void (**)(char *, unsigned __int8 *, uint64_t))(v3 + 32);
  int64_t v56 = (unint64_t)(v19 + 63) >> 6;
  uint64_t v57 = v3 + 40;
  uint64_t v58 = a1;
  uint64_t v59 = (void (**)(char *, uint64_t))(v3 + 8);
  int64_t v54 = v56 - 1;
  swift_bridgeObjectRetain();
  uint64_t v60 = v13;
  int64_t v61 = 0;
  while (1)
  {
    if (v21)
    {
      unint64_t v22 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      unint64_t v23 = v22 | (v61 << 6);
LABEL_8:
      uint64_t v24 = *(void *)(v58 + 56);
      unsigned char *v13 = *(unsigned char *)(*(void *)(v58 + 48) + v23);
      uint64_t v25 = v63;
      uint64_t v26 = v24 + *(void *)(v63 + 72) * v23;
      uint64_t v27 = sub_100003918(&qword_10020C530);
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v25 + 16))(&v13[*(int *)(v27 + 48)], v26, v2);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v13, 0, 1, v27);
      goto LABEL_27;
    }
    int64_t v28 = v61 + 1;
    if (__OFADD__(v61, 1)) {
      goto LABEL_47;
    }
    if (v28 < v56)
    {
      unint64_t v29 = *(void *)(v55 + 8 * v28);
      if (v29) {
        goto LABEL_12;
      }
      int64_t v30 = v61 + 2;
      ++v61;
      if (v28 + 1 < v56)
      {
        unint64_t v29 = *(void *)(v55 + 8 * v30);
        if (v29) {
          goto LABEL_15;
        }
        int64_t v61 = v28 + 1;
        if (v28 + 2 < v56)
        {
          unint64_t v29 = *(void *)(v55 + 8 * (v28 + 2));
          if (v29)
          {
            v28 += 2;
            goto LABEL_12;
          }
          int64_t v30 = v28 + 3;
          int64_t v61 = v28 + 2;
          if (v28 + 3 < v56)
          {
            unint64_t v29 = *(void *)(v55 + 8 * v30);
            if (v29)
            {
LABEL_15:
              int64_t v28 = v30;
LABEL_12:
              unint64_t v21 = (v29 - 1) & v29;
              unint64_t v23 = __clz(__rbit64(v29)) + (v28 << 6);
              int64_t v61 = v28;
              goto LABEL_8;
            }
            while (1)
            {
              int64_t v28 = v30 + 1;
              if (__OFADD__(v30, 1)) {
                goto LABEL_48;
              }
              if (v28 >= v56) {
                break;
              }
              unint64_t v29 = *(void *)(v55 + 8 * v28);
              ++v30;
              if (v29) {
                goto LABEL_12;
              }
            }
            int64_t v61 = v54;
          }
        }
      }
    }
    uint64_t v31 = sub_100003918(&qword_10020C530);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v13, 1, 1, v31);
    unint64_t v21 = 0;
LABEL_27:
    sub_10002C318((uint64_t)v13, (uint64_t)v16, &qword_10020C528);
    uint64_t v32 = sub_100003918(&qword_10020C530);
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v16, 1, v32) == 1)break; {
    long long v33 = &v16[*(int *)(v32 + 48)];
    }
    long long v34 = v16;
    uint64_t v35 = *v16;
    long long v36 = *v62;
    (*v62)(v66, v33, v2);
    uint64_t v37 = 0xE900000000000065;
    uint64_t v38 = 0x6D6974746E657665;
    switch(v35)
    {
      case 1:
        uint64_t v37 = 0xE300000000000000;
        uint64_t v38 = 7761509;
        break;
      case 2:
        uint64_t v37 = 0xEF64697473657571;
        uint64_t v38 = 0x6572746E65696C63;
        break;
      case 3:
        uint64_t v37 = 0xEF6F666E69746E65;
        uint64_t v38 = 0x696C63656C707061;
        break;
      case 4:
        uint64_t v37 = 0xEB00000000656C61;
        uint64_t v38 = 0x636F6C656C707061;
        break;
      default:
        break;
    }
    (*v64)(v65, v66, v2);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v67 = (void *)v17;
    unint64_t v41 = sub_100169E3C(v38, v37);
    uint64_t v42 = *(void *)(v17 + 16);
    BOOL v43 = (v40 & 1) == 0;
    uint64_t v44 = v42 + v43;
    if (__OFADD__(v42, v43))
    {
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      sub_1001C18C0();
      __break(1u);
      JUMPOUT(0x1000B7540);
    }
    char v45 = v40;
    if (*(void *)(v17 + 24) >= v44)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v48 = v67;
        if (v40) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_1000EDD4C();
        uint64_t v48 = v67;
        if (v45) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_1000E9B38(v44, isUniquelyReferenced_nonNull_native);
      unint64_t v46 = sub_100169E3C(v38, v37);
      if ((v45 & 1) != (v47 & 1)) {
        goto LABEL_49;
      }
      unint64_t v41 = v46;
      uint64_t v48 = v67;
      if (v45)
      {
LABEL_4:
        (*(void (**)(unint64_t, char *, uint64_t))(v63 + 40))(v48[7] + *(void *)(v63 + 72) * v41, v65, v2);
        goto LABEL_5;
      }
    }
    v48[(v41 >> 6) + 8] |= 1 << v41;
    uint64_t v49 = (uint64_t *)(v48[6] + 16 * v41);
    *uint64_t v49 = v38;
    v49[1] = v37;
    v36((char *)(v48[7] + *(void *)(v63 + 72) * v41), (unsigned __int8 *)v65, v2);
    uint64_t v50 = v48[2];
    BOOL v51 = __OFADD__(v50, 1);
    uint64_t v52 = v50 + 1;
    if (v51) {
      goto LABEL_46;
    }
    v48[2] = v52;
    swift_bridgeObjectRetain();
LABEL_5:
    unint64_t v17 = (unint64_t)v67;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*v59)(v66, v2);
    id v13 = v60;
    uint64_t v16 = v34;
  }
  swift_release();
  return v17;
}

id sub_1000B7554(uint64_t a1, _OWORD *a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v50 = a4;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v9 = sub_100003918(&qword_10020C348);
  __chkstk_darwin(v9 - 8, v10);
  int64_t v56 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1001C14E0();
  uint64_t v54 = *(void *)(v12 - 8);
  uint64_t v55 = v12;
  __chkstk_darwin(v12, v13);
  uint64_t v53 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_100003918(&qword_10020C350);
  uint64_t v51 = *(void *)(v52 - 8);
  __chkstk_darwin(v52, v15);
  unint64_t v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1001BF8E0();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18, v20);
  unint64_t v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1001BFB30();
  v60[3] = v23;
  v60[4] = (uint64_t)&protocol witness table for TC2DefaultConfiguration;
  uint64_t v49 = sub_10000395C(v60);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(v49, a1, v23);
  v59[3] = type metadata accessor for TC2Daemon();
  v59[4] = &off_1001FEF68;
  v59[0] = a3;
  (*(void (**)(char *, void, uint64_t))(v19 + 104))(v22, enum case for TC2LogCategory.daemon(_:), v18);
  uint64_t v24 = a5;
  sub_1001BFDD0();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
  sub_100032890((uint64_t)v59, (uint64_t)v24 + *(void *)((swift_isaMask & *v24) + 0x68));
  uint64_t v25 = v50;
  *(void *)((char *)v24 + *(void *)((swift_isaMask & *v24) + 0x70)) = v50;
  sub_100032890((uint64_t)v60, (uint64_t)v24 + *(void *)((swift_isaMask & *v24) + 0x78));
  uint64_t v26 = (_OWORD *)((char *)v24 + *(void *)((swift_isaMask & *v24) + 0x80));
  long long v28 = a2[1];
  long long v27 = a2[2];
  _OWORD *v26 = *a2;
  long long v29 = a2[7];
  long long v30 = a2[8];
  long long v31 = a2[10];
  v26[9] = a2[9];
  v26[10] = v31;
  v26[7] = v29;
  v26[8] = v30;
  long long v32 = a2[3];
  long long v33 = a2[4];
  long long v34 = a2[6];
  v26[5] = a2[5];
  v26[6] = v34;
  v26[3] = v32;
  v26[4] = v33;
  v26[1] = v28;
  v26[2] = v27;
  sub_100016110((uint64_t)a2);
  id v35 = v25;
  sub_1001BFA70();
  sub_1001BF8F0();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v17, v52);
  uint64_t v36 = sub_1001C19F0();
  uint64_t v38 = v37;
  uint64_t v39 = v53;
  sub_1001C14D0();
  sub_100003918(&qword_10020C358);
  uint64_t v40 = swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t v41 = v40 + *(void *)(*(void *)v40 + 112);
  uint64_t v42 = sub_1001C14C0();
  BOOL v43 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56);
  v43(v41, 1, 1, v42);
  (*(void (**)(uint64_t, char *, uint64_t))(v54 + 32))(v40 + *(void *)(*(void *)v40 + 104), v39, v55);
  uint64_t v44 = (uint64_t)v56;
  v43((uint64_t)v56, 1, 1, v42);
  swift_beginAccess();
  sub_1000B8564(v44, v41);
  swift_endAccess();
  char v45 = (uint64_t *)(v40 + *(void *)(*(void *)v40 + 120));
  *char v45 = v36;
  v45[1] = v38;
  *(void *)((char *)v24 + *(void *)((swift_isaMask & *v24) + 0x88)) = v40;

  v58.receiver = v24;
  v58.super_class = ObjectType;
  id v46 = objc_msgSendSuper2(&v58, "init");
  sub_100003E90((uint64_t)v59);
  sub_100003E90((uint64_t)v60);
  return v46;
}

uint64_t sub_1000B7B20(void *a1)
{
  uint64_t v54 = sub_1001C0340();
  uint64_t v53 = *(void *)(v54 - 8);
  __chkstk_darwin(v54, v3);
  uint64_t v51 = v4;
  uint64_t v52 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1001BFB30();
  uint64_t v47 = *(void *)(v48 - 8);
  __chkstk_darwin(v48, v5);
  uint64_t v49 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = v1;
  uint64_t v55 = &v1[OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_logger];
  uint64_t v7 = sub_1001C0330();
  os_log_type_t v8 = sub_1001C1200();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Thimble trying to connect: checking entitlements", v9, 2u);
    swift_slowDealloc();
  }

  uint64_t v10 = 0;
  id v61 = (id)0xD000000000000026;
  uint64_t v60 = "ecloudcompute.admin";
  uint64_t v59 = "ecloudcompute.requests";
  objc_super v58 = "ecloudcompute.prefetchRequest";
  uint64_t v57 = "ecloudcompute.knownRateLimits";
  int64_t v56 = "ndleIdentifierOverride";
  do
  {
    ++v10;
    NSString v11 = sub_1001C0BE0();
    swift_bridgeObjectRelease();
    id v12 = [a1 valueForEntitlement:v11];

    if (v12)
    {
      sub_1001C13C0();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v63 = 0u;
      long long aBlock = 0u;
    }
    sub_10002C318((uint64_t)&aBlock, (uint64_t)&v67, &qword_10020C338);
    if (*((void *)&v68 + 1))
    {
      if (swift_dynamicCast() & 1) != 0 && (v66)
      {
        Class isa = sub_1001BFC90().super.isa;
        [a1 setExportedInterface:isa];

        uint64_t v14 = v50;
        uint64_t v15 = &v50[OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_config];
        long long v16 = *(_OWORD *)&v50[OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo + 144];
        long long v75 = *(_OWORD *)&v50[OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo + 128];
        long long v76 = v16;
        long long v77 = *(_OWORD *)&v50[OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo + 160];
        long long v17 = *(_OWORD *)&v50[OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo + 80];
        long long v71 = *(_OWORD *)&v50[OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo + 64];
        long long v72 = v17;
        long long v18 = *(_OWORD *)&v50[OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo + 112];
        long long v73 = *(_OWORD *)&v50[OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo + 96];
        long long v74 = v18;
        long long v19 = *(_OWORD *)&v50[OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo + 16];
        long long v67 = *(_OWORD *)&v50[OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo];
        long long v68 = v19;
        long long v20 = *(_OWORD *)&v50[OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo + 48];
        long long v69 = *(_OWORD *)&v50[OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_systemInfo + 32];
        long long v70 = v20;
        id v21 = objc_allocWithZone((Class)sub_100003918(&qword_10020C340));
        uint64_t v22 = (uint64_t)v49;
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v49, v15, v48);
        sub_100016110((uint64_t)&v67);
        id v23 = v14;
        id v24 = a1;
        id v25 = sub_1000B7554(v22, &v67, (uint64_t)v23, v24, v21);

        sub_1000161E0((uint64_t)&v67);
        id v61 = v25;
        [v24 setExportedObject:v25];
        uint64_t v26 = v24;
        [v24 resume];
        long long v27 = sub_1001C0330();
        os_log_type_t v28 = sub_1001C1200();
        if (os_log_type_enabled(v27, v28))
        {
          long long v29 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)long long v29 = 0;
          _os_log_impl((void *)&_mh_execute_header, v27, v28, "Resumed", v29, 2u);
          swift_slowDealloc();
        }

        uint64_t v30 = v53;
        uint64_t v60 = *(char **)(v53 + 16);
        long long v31 = v52;
        uint64_t v32 = v54;
        ((void (*)(char *, char *, uint64_t))v60)(v52, v55, v54);
        uint64_t v33 = *(unsigned __int8 *)(v30 + 80);
        uint64_t v34 = (v33 + 16) & ~v33;
        uint64_t v59 = (char *)(v33 | 7);
        uint64_t v35 = swift_allocObject();
        uint64_t v36 = *(void (**)(uint64_t, char *, uint64_t))(v30 + 32);
        v36(v35 + v34, v31, v32);
        uint64_t v64 = sub_1000B843C;
        uint64_t v65 = v35;
        *(void *)&long long aBlock = _NSConcreteStackBlock;
        *((void *)&aBlock + 1) = 1107296256;
        *(void *)&long long v63 = sub_1000B08BC;
        *((void *)&v63 + 1) = &unk_1001FF008;
        uint64_t v37 = _Block_copy(&aBlock);
        swift_release();
        [v26 setInvalidationHandler:v37];
        _Block_release(v37);
        ((void (*)(char *, char *, uint64_t))v60)(v31, v55, v32);
        uint64_t v38 = swift_allocObject();
        v36(v38 + v34, v31, v32);
        uint64_t v64 = sub_1000B84F4;
        uint64_t v65 = v38;
        *(void *)&long long aBlock = _NSConcreteStackBlock;
        *((void *)&aBlock + 1) = 1107296256;
        *(void *)&long long v63 = sub_1000B08BC;
        *((void *)&v63 + 1) = &unk_1001FF058;
        uint64_t v39 = _Block_copy(&aBlock);
        swift_release();
        [v26 setInterruptionHandler:v39];

        _Block_release(v39);
        return 1;
      }
    }
    else
    {
      sub_100010360((uint64_t)&v67, &qword_10020C338);
    }
  }
  while (v10 != 6);
  uint64_t v41 = sub_1001C0330();
  os_log_type_t v42 = sub_1001C1200();
  if (os_log_type_enabled(v41, v42))
  {
    BOOL v43 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v67 = swift_slowAlloc();
    *(_DWORD *)BOOL v43 = 136315138;
    uint64_t v44 = sub_1001C0E00();
    *(void *)&long long aBlock = sub_1000DF238(v44, v45, (uint64_t *)&v67);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "Rejecting connection because it doesn't have any of the required entitlements: %s", v43, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  return 0;
}

void sub_1000B843C()
{
}

uint64_t sub_1000B8448(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000B8458()
{
  return swift_release();
}

uint64_t sub_1000B8464()
{
  uint64_t v1 = sub_1001C0340();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return _swift_deallocObject(v0, v5, v6);
}

void sub_1000B84F4()
{
}

void sub_1000B8500(const char *a1)
{
  uint64_t v3 = *(void *)(sub_1001C0340() - 8);
  sub_1000B0900(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

uint64_t sub_1000B8564(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100003918(&qword_10020C348);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000B85CC()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000B8604()
{
  return sub_1000AA6F0(*(void *)(v0 + 16));
}

unint64_t sub_1000B860C()
{
  unint64_t result = qword_10020C398;
  if (!qword_10020C398)
  {
    sub_1000166C8(&qword_10020C390);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10020C398);
  }
  return result;
}

uint64_t sub_1000B8668(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  os_log_type_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *os_log_type_t v8 = v3;
  v8[1] = sub_1000074CC;
  return sub_1000AAD38(a1, a2, v7, v6);
}

uint64_t sub_1000B871C()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 120, 7);
}

uint64_t sub_1000B8784()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[2] = v2;
  v3[3] = v0 + 40;
  v3[1] = sub_1000A12C8;
  return _swift_task_switch(sub_1000B0830, 0, 0);
}

uint64_t sub_1000B8834()
{
  uint64_t v2 = *(int **)(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1000A12C8;
  uint64_t v4 = (uint64_t (*)(int *))((char *)&dword_10020C3D8 + dword_10020C3D8);
  return v4(v2);
}

uint64_t sub_1000B88E0()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 49, 7);
}

uint64_t sub_1000B8928()
{
  char v2 = *(unsigned char *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_1000A12C8;
  *(unsigned char *)(v3 + 40) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  return _swift_task_switch(sub_1000B00C0, 0, 0);
}

uint64_t sub_1000B89DC()
{
  uint64_t v1 = sub_1001BF310();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_1001BF950();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return _swift_deallocObject(v0, v10, v11);
}

uint64_t sub_1000B8B3C()
{
  uint64_t v2 = *(void *)(sub_1001BF310() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(sub_1001BF950() - 8) + 80);
  unint64_t v6 = v3 + v4 + v5;
  uint64_t v7 = *(void *)(v0 + 32);
  uint64_t v8 = v0 + v3;
  uint64_t v9 = v0 + (v6 & ~v5);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v10;
  void *v10 = v1;
  v10[3] = v8;
  v10[4] = v9;
  v10[1] = sub_1000A12C8;
  v10[2] = v7;
  return _swift_task_switch(sub_1000AFB88, 0, 0);
}

uint64_t sub_1000B8C88()
{
  uint64_t v1 = sub_1001BF950();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000B8D5C()
{
  uint64_t v2 = *(void *)(sub_1001BF950() - 8);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[2] = v3;
  v5[3] = v4;
  v5[1] = sub_1000A12C8;
  return _swift_task_switch(sub_1000AF848, 0, 0);
}

uint64_t sub_1000B8E44()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_1000B8EA4()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  long long v9 = *(_OWORD *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v5 = *(void *)(v0 + 88);
  uint64_t v6 = swift_task_alloc();
  long long v7 = *(_OWORD *)(v0 + 48);
  *(void *)(v1 + 16) = v6;
  *(void *)uint64_t v6 = v1;
  *(void *)(v6 + 8) = sub_1000A12C8;
  *(void *)(v6 + 80) = v4;
  *(void *)(v6 + 88) = v5;
  *(_OWORD *)(v6 + 48) = v7;
  *(_OWORD *)(v6 + 64) = v9;
  *(void *)(v6 + 32) = v2;
  *(void *)(v6 + 40) = v3;
  return _swift_task_switch(sub_1000AF408, 0, 0);
}

uint64_t sub_1000B8F7C()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000B8FBC()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1000A12C8;
  v3[2] = v2;
  return _swift_task_switch(sub_1000AF278, 0, 0);
}

uint64_t sub_1000B9064()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000B90AC()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  void *v6 = v1;
  v6[1] = sub_1000A12C8;
  return sub_1000AED6C(v2, v3, v5, v4);
}

uint64_t sub_1000B9158()
{
  uint64_t v1 = (int *)(type metadata accessor for TC2MetricReporter() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 72) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_unknownObjectRelease();
  sub_100003E90(v0 + 32);
  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + v1[7];
  uint64_t v7 = sub_1001C0340();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1000B925C()
{
  uint64_t v2 = *(void *)(type metadata accessor for TC2MetricReporter() - 8);
  uint64_t v3 = v0 + 32;
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[2] = v3;
  v5[3] = v4;
  v5[1] = sub_1000A12C8;
  return _swift_task_switch(sub_1000AEBC0, 0, 0);
}

uint64_t sub_1000B9344()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000B937C()
{
  uint64_t v1 = sub_1001BF310();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = (int *)(type metadata accessor for TC2MetricReporter() - 8);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)v6 + 80);
  uint64_t v8 = (v5 + v7 + 16) & ~v7;
  uint64_t v9 = v8 + *(void *)(*(void *)v6 + 64);
  uint64_t v10 = v3 | v7 | 7;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = v0 + v8 + v6[7];
  uint64_t v12 = sub_1001C0340();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  return _swift_deallocObject(v0, v9, v10);
}

uint64_t sub_1000B9524()
{
  uint64_t v2 = *(void *)(sub_1001BF310() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(type metadata accessor for TC2MetricReporter() - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v0[2];
  uint64_t v8 = v0[3];
  uint64_t v9 = v0[4];
  uint64_t v10 = (uint64_t)v0 + v3;
  uint64_t v11 = (char *)v0 + v4;
  uint64_t v12 = *(void *)((char *)v0 + v4);
  uint64_t v13 = *((void *)v11 + 1);
  uint64_t v14 = (uint64_t)v0 + v6;
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v15;
  void *v15 = v1;
  v15[1] = sub_1000A12C8;
  return sub_1000ADBA0(v7, v8, v9, v10, v12, v13, v14);
}

uint64_t sub_1000B9698(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000B9700(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000B9768()
{
  uint64_t v1 = (int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  uint64_t v5 = sub_1001BF950();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v3 + v4 + v7) & ~v7;
  uint64_t v9 = v8 + *(void *)(v6 + 64);
  uint64_t v10 = v2 | v7 | 7;
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v11 = v0 + v3 + v1[8];
  uint64_t v12 = sub_1001BFE60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v8, v5);
  return _swift_deallocObject(v0, v9, v10);
}

uint64_t sub_1000B98F0()
{
  uint64_t v2 = *(void *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(0) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(sub_1001BF950() - 8) + 80);
  unint64_t v6 = v3 + v4 + v5;
  uint64_t v7 = *(void *)(v0 + 32);
  uint64_t v8 = v0 + v3;
  uint64_t v9 = v0 + (v6 & ~v5);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v10;
  void *v10 = v1;
  v10[3] = v8;
  v10[4] = v9;
  v10[1] = sub_1000A12C8;
  v10[2] = v7;
  return _swift_task_switch(sub_1000AD190, 0, 0);
}

uint64_t sub_1000B9A3C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000B9A9C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000074CC;
  return sub_1000B0A0C(a1, v4, v5, v6);
}

uint64_t sub_1000B9B50(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000B9B7C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 192, 7);
}

uint64_t sub_1000B9C04(uint64_t a1)
{
  return a1;
}

unint64_t sub_1000B9C30()
{
  unint64_t result = qword_10020C5C0;
  if (!qword_10020C5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020C5C0);
  }
  return result;
}

uint64_t sub_1000B9C84(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000B9CCC()
{
  unint64_t result = qword_10020C5E8;
  if (!qword_10020C5E8)
  {
    sub_1000166C8(&qword_100207DB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020C5E8);
  }
  return result;
}

void sub_1000B9D70()
{
  swift_bridgeObjectRetain();
  sub_1001C0CB0();
  swift_bridgeObjectRelease();
  unint64_t v1 = v0[3];
  if (v1 >> 60 == 15)
  {
    sub_1001C1970(0);
  }
  else
  {
    uint64_t v2 = v0[2];
    sub_1001C1970(1u);
    sub_100007B14(v2, v1);
    sub_1001BF190();
    sub_100007918(v2, v1);
  }
  swift_bridgeObjectRetain();
  sub_1001C0CB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1001C0CB0();
  swift_bridgeObjectRelease();
  if (!v0[9])
  {
    sub_1001C1970(0);
    if (v0[11]) {
      goto LABEL_6;
    }
LABEL_10:
    sub_1001C1970(0);
    return;
  }
  sub_1001C1970(1u);
  swift_bridgeObjectRetain();
  sub_1001C0CB0();
  swift_bridgeObjectRelease();
  if (!v0[11]) {
    goto LABEL_10;
  }
LABEL_6:
  sub_1001C1970(1u);
  swift_bridgeObjectRetain();
  sub_1001C0CB0();
  swift_bridgeObjectRelease();
}

Swift::Int sub_1000B9EF4()
{
  return sub_1001C1990();
}

Swift::Int sub_1000B9F38()
{
  return sub_1001C1990();
}

uint64_t sub_1000B9F74(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[3];
  v9[2] = a1[2];
  v9[3] = v2;
  long long v3 = a1[5];
  v9[4] = a1[4];
  v9[5] = v3;
  long long v4 = a1[1];
  v9[0] = *a1;
  v9[1] = v4;
  long long v5 = a2[3];
  v10[2] = a2[2];
  v10[3] = v5;
  long long v6 = a2[5];
  v10[4] = a2[4];
  v10[5] = v6;
  long long v7 = a2[1];
  v10[0] = *a2;
  v10[1] = v7;
  return sub_1000B9FD0(v9, v10) & 1;
}

uint64_t sub_1000B9FD0(void *a1, void *a2)
{
  if (*a1 != *a2 || a1[1] != a2[1])
  {
    char v5 = sub_1001C1840();
    uint64_t result = 0;
    if ((v5 & 1) == 0) {
      return result;
    }
  }
  uint64_t v7 = a1[2];
  unint64_t v8 = a1[3];
  uint64_t v9 = a2[2];
  unint64_t v10 = a2[3];
  if (v8 >> 60 == 15)
  {
    if (v10 >> 60 == 15) {
      goto LABEL_14;
    }
LABEL_10:
    sub_10000D9E0(a1[2], a1[3]);
    sub_10000D9E0(v9, v10);
    sub_100007918(v7, v8);
    sub_100007918(v9, v10);
    return 0;
  }
  if (v10 >> 60 == 15) {
    goto LABEL_10;
  }
  sub_10000D9E0(a1[2], a1[3]);
  sub_10000D9E0(v9, v10);
  char v11 = sub_10004C464(v7, v8, v9, v10);
  sub_100007918(v9, v10);
  sub_100007918(v7, v8);
  if ((v11 & 1) == 0) {
    return 0;
  }
LABEL_14:
  if (a1[4] != a2[4] || a1[5] != a2[5])
  {
    char v12 = sub_1001C1840();
    uint64_t result = 0;
    if ((v12 & 1) == 0) {
      return result;
    }
  }
  if (a1[6] != a2[6] || a1[7] != a2[7])
  {
    char v13 = sub_1001C1840();
    uint64_t result = 0;
    if ((v13 & 1) == 0) {
      return result;
    }
  }
  uint64_t v14 = a1[9];
  uint64_t v15 = a2[9];
  if (!v14)
  {
    if (!v15) {
      goto LABEL_27;
    }
    return 0;
  }
  if (!v15) {
    return 0;
  }
  if (a1[8] == a2[8] && v14 == v15 || (char v16 = sub_1001C1840(), result = 0, (v16 & 1) != 0))
  {
LABEL_27:
    uint64_t v17 = a1[11];
    uint64_t v18 = a2[11];
    if (v17)
    {
      if (v18 && (a1[10] == a2[10] && v17 == v18 || (sub_1001C1840() & 1) != 0)) {
        return 1;
      }
    }
    else if (!v18)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1000BA1C8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_1001BF950();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a2, v6);
  uint64_t v7 = a1[3];
  uint64_t v24 = a1[2];
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  unint64_t v10 = (int *)type metadata accessor for Proto_Ropes_Common_Attestation(0);
  char v11 = (uint64_t *)((char *)a1 + v10[9]);
  if (v11[1])
  {
    unint64_t v22 = v11[1];
    uint64_t v23 = *v11;
  }
  else
  {
    unint64_t v22 = 0xE000000000000000;
    uint64_t v23 = 0;
  }
  char v12 = (uint64_t *)((char *)a1 + v10[10]);
  if (v12[1])
  {
    unint64_t v20 = v12[1];
    uint64_t v21 = *v12;
  }
  else
  {
    unint64_t v20 = 0xE000000000000000;
    uint64_t v21 = 0;
  }
  char v13 = (uint64_t *)((char *)a1 + v10[11]);
  if (v13[1])
  {
    unint64_t v18 = v13[1];
    uint64_t v19 = *v13;
  }
  else
  {
    unint64_t v18 = 0xE000000000000000;
    uint64_t v19 = 0;
  }
  uint64_t v14 = (uint64_t *)((char *)a1 + v10[12]);
  if (v14[1])
  {
    uint64_t v17 = *v14;
    unint64_t v15 = v14[1];
  }
  else
  {
    uint64_t v17 = 0;
    unint64_t v15 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  sub_100007B14(v8, v9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1000BA36C((uint64_t)a1);
  *a3 = v24;
  a3[1] = v7;
  a3[2] = v8;
  a3[3] = v9;
  a3[4] = v23;
  a3[5] = v22;
  a3[6] = v21;
  a3[7] = v20;
  a3[8] = v19;
  a3[9] = v18;
  a3[10] = v17;
  a3[11] = v15;
  return result;
}

uint64_t sub_1000BA36C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Proto_Ropes_Common_Attestation(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for Attestation(uint64_t a1)
{
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >> 60 != 15) {
    sub_10000792C(*(void *)(a1 + 16), v2);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Attestation(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v4;
  char v5 = a2 + 2;
  unint64_t v6 = a2[3];
  swift_bridgeObjectRetain();
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *v5;
  }
  else
  {
    uint64_t v7 = *(void *)v5;
    sub_100007B14(v7, v6);
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v6;
  }
  uint64_t v8 = a2[5];
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = v8;
  uint64_t v9 = a2[7];
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = v9;
  uint64_t v10 = a2[9];
  *(void *)(a1 + 64) = a2[8];
  *(void *)(a1 + 72) = v10;
  uint64_t v11 = a2[10];
  uint64_t v12 = a2[11];
  *(void *)(a1 + 80) = v11;
  *(void *)(a1 + 88) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for Attestation(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2 + 2;
  unint64_t v5 = a2[3];
  if (a1[3] >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      sub_100007B14(*v4, a2[3]);
      uint64_t v8 = a1[2];
      unint64_t v9 = a1[3];
      a1[2] = v7;
      a1[3] = v5;
      sub_10000792C(v8, v9);
      goto LABEL_8;
    }
    sub_10002CC88((uint64_t)(a1 + 2));
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 1) = *(_OWORD *)v4;
    goto LABEL_8;
  }
  uint64_t v6 = *v4;
  sub_100007B14(*v4, a2[3]);
  a1[2] = v6;
  a1[3] = v5;
LABEL_8:
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for Attestation(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

void *assignWithTake for Attestation(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  long long v5 = a2 + 2;
  unint64_t v6 = a1[3];
  if (v6 >> 60 != 15)
  {
    unint64_t v7 = a2[3];
    if (v7 >> 60 != 15)
    {
      uint64_t v8 = a1[2];
      a1[2] = *v5;
      a1[3] = v7;
      sub_10000792C(v8, v6);
      goto LABEL_6;
    }
    sub_10002CC88((uint64_t)(a1 + 2));
  }
  *((_OWORD *)a1 + 1) = *(_OWORD *)v5;
LABEL_6:
  uint64_t v9 = a2[5];
  a1[4] = a2[4];
  a1[5] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[7];
  a1[6] = a2[6];
  a1[7] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[9];
  a1[8] = a2[8];
  a1[9] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = a2[11];
  a1[10] = a2[10];
  a1[11] = v12;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Attestation(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Attestation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Attestation()
{
  return &type metadata for Attestation;
}

unint64_t sub_1000BA7D4()
{
  unint64_t result = qword_10020C5F0;
  if (!qword_10020C5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020C5F0);
  }
  return result;
}

uint64_t sub_1000BA828(uint64_t a1)
{
  *(void *)(v2 + 248) = a1;
  *(void *)(v2 + 256) = v1;
  return _swift_task_switch(sub_1000BA848, 0, 0);
}

uint64_t sub_1000BA848()
{
  uint64_t v39 = v0;
  uint64_t v1 = (void *)(v0[32] + OBJC_IVAR____TtC20privatecloudcomputed19TC2NSPTokenProvider_config);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_10000D934(v1, v2);
  uint64_t v4 = TC2Configuration.lttIssuer.getter(v2, v3);
  unint64_t v6 = v5;
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  sub_10000D934(v1, v7);
  uint64_t v9 = TC2Configuration.ottIssuer.getter(v7, v8);
  unint64_t v11 = v10;
  v0[33] = OBJC_IVAR____TtC20privatecloudcomputed19TC2NSPTokenProvider_logger;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v12 = sub_1001C0330();
  os_log_type_t v13 = sub_1001C1200();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v37 = v9;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136315394;
    swift_bridgeObjectRetain();
    v0[18] = sub_1000DF238(v4, v6, &v38);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[18] = sub_1000DF238(v37, v11, &v38);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "fetching with lttIssuer=%s, ottIssuer=%s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  id v15 = objc_allocWithZone((Class)NSPPrivateAccessTokenChallenge);
  NSString v16 = sub_1001C0BE0();
  swift_bridgeObjectRelease();
  id v17 = [v15 initRSABlindSignatureChallengeWithIssuerName:v16 redemptionNonce:0 originNames:0];
  v0[34] = v17;

  id v18 = objc_allocWithZone((Class)NSPPrivateAccessTokenChallenge);
  NSString v19 = sub_1001C0BE0();
  swift_bridgeObjectRelease();
  id v20 = [v18 initRSABlindSignatureChallengeWithIssuerName:v19 redemptionNonce:0 originNames:0];
  v0[35] = v20;

  id v21 = [v17 challengeData];
  if (!v21)
  {
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v22 = v21;
  uint64_t v23 = sub_1001BF180();
  unint64_t v25 = v24;

  id v21 = [v20 challengeData];
  if (!v21)
  {
LABEL_10:
    __break(1u);
    return _swift_continuation_await(v21);
  }
  uint64_t v26 = v21;
  uint64_t v27 = sub_1001BF180();
  unint64_t v29 = v28;

  id v30 = objc_allocWithZone((Class)NSPPrivateAccessTokenFetcher);
  Class isa = sub_1001BF160().super.isa;
  Class v32 = sub_1001BF160().super.isa;
  id v33 = [v30 initForKnownIssuerWithLongLivedTokenChallenge:isa oneTimeTokenChallenge:v32];
  v0[36] = v33;
  sub_10000792C(v27, v29);
  sub_10000792C(v23, v25);

  [v33 setSystemClient:1];
  v0[37] = sub_1000376D4(0, (unint64_t *)&qword_10020C380);
  uint64_t v34 = sub_1001C1240();
  v0[38] = v34;
  v0[2] = v0;
  v0[7] = v0 + 18;
  v0[3] = sub_1000BAD0C;
  uint64_t v35 = swift_continuation_init();
  v0[24] = _NSConcreteStackBlock;
  v0[25] = 0x40000000;
  v0[26] = sub_1000BBDEC;
  v0[27] = &unk_1001FF4B8;
  v0[28] = v35;
  [v33 fetchLinkedTokenPairWithQueue:v34 completionHandler:v0 + 24];
  id v21 = v0 + 2;
  return _swift_continuation_await(v21);
}

uint64_t sub_1000BAD0C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 312) = v1;
  if (v1) {
    uint64_t v2 = sub_1000BB1F0;
  }
  else {
    uint64_t v2 = sub_1000BAE1C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000BAE1C()
{
  uint64_t v31 = v0;
  uint64_t v2 = (uint64_t *)(v0 + 144);
  uint64_t v1 = *(void *)(v0 + 144);
  unint64_t v3 = *(void *)(v0 + 152);
  uint64_t v4 = *(void *)(v0 + 160);
  unint64_t v5 = *(void *)(v0 + 168);
  uint64_t v6 = *(void *)(v0 + 176);
  unint64_t v7 = *(void *)(v0 + 184);

  sub_100007B14(v1, v3);
  sub_100007B14(v4, v5);
  sub_100007B14(v6, v7);
  sub_100007B14(v1, v3);
  sub_100007B14(v4, v5);
  sub_100007B14(v6, v7);
  uint64_t v8 = sub_1001C0330();
  os_log_type_t type = sub_1001C1200();
  BOOL v9 = os_log_type_enabled(v8, type);
  unint64_t v29 = *(void **)(v0 + 280);
  unint64_t v10 = *(void **)(v0 + 272);
  if (v9)
  {
    uint64_t v26 = *(void **)(v0 + 288);
    log = v8;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315650;
    sub_100007B14(v1, v3);
    uint64_t v27 = v0;
    uint64_t v12 = sub_1001BF0E0();
    unint64_t v25 = v10;
    unint64_t v14 = v13;
    sub_10000792C(v1, v3);
    *uint64_t v2 = sub_1000DF238(v12, v14, &v30);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    sub_10000792C(v1, v3);
    sub_10000792C(v1, v3);
    *(_WORD *)(v11 + 12) = 2080;
    sub_100007B14(v4, v5);
    uint64_t v15 = sub_1001BF0E0();
    unint64_t v17 = v16;
    sub_10000792C(v4, v5);
    *uint64_t v2 = sub_1000DF238(v15, v17, &v30);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    sub_10000792C(v4, v5);
    sub_10000792C(v4, v5);
    *(_WORD *)(v11 + 22) = 2080;
    sub_100007B14(v6, v7);
    uint64_t v18 = sub_1001BF0E0();
    unint64_t v20 = v19;
    sub_10000792C(v6, v7);
    *uint64_t v2 = sub_1000DF238(v18, v20, &v30);
    sub_1001C1310();
    uint64_t v0 = v27;
    swift_bridgeObjectRelease();
    sub_10000792C(v6, v7);
    sub_10000792C(v6, v7);
    _os_log_impl((void *)&_mh_execute_header, log, type, "fetched llt=%s, ott=%s; salt=%s", (uint8_t *)v11, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    sub_10000792C(v1, v3);
    sub_10000792C(v1, v3);
    sub_10000792C(v4, v5);
    sub_10000792C(v4, v5);
    sub_10000792C(v6, v7);
    sub_10000792C(v6, v7);
  }
  id v21 = *(uint64_t **)(v0 + 248);
  *id v21 = v1;
  v21[1] = v3;
  v21[2] = v4;
  v21[3] = v5;
  v21[4] = v6;
  v21[5] = v7;
  unint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_1000BB1F0()
{
  uint64_t v1 = (void *)v0[38];
  uint64_t v2 = v0[39];
  swift_willThrow();

  v0[29] = v2;
  swift_errorRetain();
  sub_100003918(&qword_100208C98);
  sub_1000376D4(0, &qword_10020C6B8);
  if (swift_dynamicCast())
  {
    unint64_t v3 = (void *)v0[30];
    v0[40] = v3;
    id v4 = [v3 domain];
    uint64_t v5 = sub_1001C0BF0();
    uint64_t v7 = v6;

    if (v5 == 0xD000000000000017 && v7 == 0x80000001001C4A80)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v8 = sub_1001C1840();
      swift_bridgeObjectRelease();
      if ((v8 & 1) == 0)
      {
LABEL_9:

        goto LABEL_10;
      }
    }
    if ([v3 code] == (id)1007)
    {
      swift_errorRelease();
      id v9 = v3;
      unint64_t v10 = sub_1001C0330();
      os_log_type_t v11 = sub_1001C11F0();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = (uint8_t *)swift_slowAlloc();
        unint64_t v13 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v12 = 138412290;
        v0[18] = v9;
        id v14 = v9;
        sub_1001C1310();
        void *v13 = v9;

        _os_log_impl((void *)&_mh_execute_header, v10, v11, "retrying failed fetch after error=%@", v12, 0xCu);
        sub_100003918(&qword_100207DA8);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      unint64_t v25 = (void *)v0[36];

      uint64_t v26 = sub_1001C1240();
      v0[41] = v26;
      v0[10] = v0;
      v0[15] = v0 + 18;
      v0[11] = sub_1000BB6E4;
      uint64_t v27 = swift_continuation_init();
      v0[24] = _NSConcreteStackBlock;
      v0[25] = 0x40000000;
      v0[26] = sub_1000BBDEC;
      v0[27] = &unk_1001FF4D0;
      v0[28] = v27;
      [v25 fetchLinkedTokenPairWithQueue:v26 completionHandler:v0 + 24];
      return _swift_continuation_await(v0 + 10);
    }
    goto LABEL_9;
  }
LABEL_10:
  swift_errorRelease();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v15 = sub_1001C0330();
  os_log_type_t v16 = sub_1001C11F0();
  if (os_log_type_enabled(v15, v16))
  {
    unint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v17 = 138412290;
    swift_errorRetain();
    uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
    v0[18] = v19;
    sub_1001C1310();
    void *v18 = v19;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "fetch failed with error=%@", v17, 0xCu);
    sub_100003918(&qword_100207DA8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  unint64_t v20 = (void *)v0[35];
  id v21 = (void *)v0[36];
  unint64_t v22 = (void *)v0[34];
  swift_willThrow();

  uint64_t v23 = (uint64_t (*)(void))v0[1];
  return v23();
}

uint64_t sub_1000BB6E4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  *(void *)(*(void *)v0 + 336) = v1;
  if (v1) {
    uint64_t v2 = sub_1000BBBF0;
  }
  else {
    uint64_t v2 = sub_1000BB7F4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000BB7F4()
{
  uint64_t v36 = v0;
  uint64_t v1 = *(void **)(v0 + 328);

  unint64_t v3 = (uint64_t *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 144);
  unint64_t v4 = *(void *)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 160);
  unint64_t v6 = *(void *)(v0 + 168);
  uint64_t v7 = *(void *)(v0 + 176);
  unint64_t v8 = *(void *)(v0 + 184);

  swift_errorRelease();
  sub_100007B14(v2, v4);
  sub_100007B14(v5, v6);
  sub_100007B14(v7, v8);
  sub_100007B14(v2, v4);
  sub_100007B14(v5, v6);
  sub_100007B14(v7, v8);
  id v9 = sub_1001C0330();
  os_log_type_t type = sub_1001C1200();
  BOOL v10 = os_log_type_enabled(v9, type);
  id v33 = *(void **)(v0 + 280);
  uint64_t v34 = *(void **)(v0 + 272);
  if (v10)
  {
    uint64_t v30 = *(void **)(v0 + 288);
    log = v9;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315650;
    sub_100007B14(v2, v4);
    uint64_t v31 = v0;
    unint64_t v28 = v8;
    uint64_t v12 = v7;
    unint64_t v13 = v6;
    uint64_t v14 = v5;
    uint64_t v15 = sub_1001BF0E0();
    unint64_t v17 = v16;
    sub_10000792C(v2, v4);
    uint64_t v18 = v15;
    uint64_t v5 = v14;
    unint64_t v6 = v13;
    uint64_t v7 = v12;
    unint64_t v8 = v28;
    *unint64_t v3 = sub_1000DF238(v18, v17, &v35);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    sub_10000792C(v2, v4);
    sub_10000792C(v2, v4);
    *(_WORD *)(v11 + 12) = 2080;
    sub_100007B14(v5, v6);
    uint64_t v19 = sub_1001BF0E0();
    unint64_t v21 = v20;
    sub_10000792C(v5, v6);
    *unint64_t v3 = sub_1000DF238(v19, v21, &v35);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    sub_10000792C(v5, v6);
    sub_10000792C(v5, v6);
    *(_WORD *)(v11 + 22) = 2080;
    sub_100007B14(v7, v28);
    uint64_t v22 = sub_1001BF0E0();
    unint64_t v24 = v23;
    sub_10000792C(v7, v28);
    *unint64_t v3 = sub_1000DF238(v22, v24, &v35);
    sub_1001C1310();
    uint64_t v0 = v31;
    swift_bridgeObjectRelease();
    sub_10000792C(v7, v28);
    sub_10000792C(v7, v28);
    _os_log_impl((void *)&_mh_execute_header, log, type, "fetched llt=%s, ott=%s; salt=%s", (uint8_t *)v11, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    sub_10000792C(v2, v4);
    sub_10000792C(v2, v4);
    sub_10000792C(v5, v6);
    sub_10000792C(v5, v6);
    sub_10000792C(v7, v8);
    sub_10000792C(v7, v8);
  }
  unint64_t v25 = *(uint64_t **)(v0 + 248);
  *unint64_t v25 = v2;
  v25[1] = v4;
  v25[2] = v5;
  v25[3] = v6;
  v25[4] = v7;
  v25[5] = v8;
  uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
  return v26();
}

uint64_t sub_1000BBBF0()
{
  uint64_t v1 = *(void **)(v0 + 328);
  swift_willThrow();

  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_1001C0330();
  os_log_type_t v3 = sub_1001C11F0();
  if (os_log_type_enabled(v2, v3))
  {
    unint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 144) = v6;
    sub_1001C1310();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "retry fetch failed with error=%@", v4, 0xCu);
    sub_100003918(&qword_100207DA8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  unint64_t v8 = *(void **)(v0 + 280);
  uint64_t v7 = *(void **)(v0 + 288);
  id v9 = *(void **)(v0 + 272);
  id v10 = *(id *)(v0 + 320);
  swift_willThrow();

  swift_errorRelease();
  swift_errorRelease();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_1000BBDEC(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  uint64_t v5 = *(void *)(a1 + 32);
  if (a5)
  {
    sub_100003918(&qword_100208C98);
    uint64_t v7 = swift_allocError();
    *unint64_t v8 = a5;
    id v9 = a5;
    return _swift_continuation_throwingResumeWithError(v5, v7);
  }
  else
  {
    id v12 = a2;
    id v13 = a3;
    id v14 = a4;
    uint64_t v15 = sub_1001BF180();
    uint64_t v17 = v16;

    uint64_t v18 = sub_1001BF180();
    uint64_t v20 = v19;

    uint64_t v21 = sub_1001BF180();
    uint64_t v23 = v22;

    unint64_t v24 = *(uint64_t **)(*(void *)(v5 + 64) + 40);
    uint64_t *v24 = v15;
    v24[1] = v17;
    v24[2] = v18;
    v24[3] = v20;
    v24[4] = v21;
    v24[5] = v23;
    return _swift_continuation_throwingResume(v5);
  }
}

uint64_t sub_1000BBF20()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC20privatecloudcomputed19TC2NSPTokenProvider_logger;
  uint64_t v2 = sub_1001C0340();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100003E90(v0 + OBJC_IVAR____TtC20privatecloudcomputed19TC2NSPTokenProvider_config);
  return swift_deallocClassInstance();
}

uint64_t sub_1000BBFD0()
{
  return type metadata accessor for TC2NSPTokenProvider();
}

uint64_t type metadata accessor for TC2NSPTokenProvider()
{
  uint64_t result = qword_10020C620;
  if (!qword_10020C620) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000BC024()
{
  uint64_t result = sub_1001C0340();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1000BC0BC@<X0>(char *a1@<X0>, int a2@<W2>, void *a3@<X8>)
{
  uint64_t result = confstr(a2, a1, 0x400uLL);
  if (result >= 1 && a1)
  {
    uint64_t result = sub_1001C0D10();
    *a3 = result;
    a3[1] = v6;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
  }
  return result;
}

void *sub_1000BC120(unint64_t a1)
{
  if (a1 >> 62)
  {
LABEL_12:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1001C1590();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      uint64_t v3 = 4;
      do
      {
        uint64_t v4 = v3 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v5 = sub_1001C1440();
          uint64_t v6 = v3 - 3;
          if (__OFADD__(v4, 1)) {
            goto LABEL_11;
          }
        }
        else
        {
          uint64_t v5 = *(void *)(a1 + 8 * v3);
          swift_retain();
          uint64_t v6 = v3 - 3;
          if (__OFADD__(v4, 1))
          {
LABEL_11:
            __break(1u);
            goto LABEL_12;
          }
        }
        swift_getKeyPath();
        sub_1000BDF30(&qword_10020C738, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
        sub_1001BF410();
        swift_release();
        swift_getKeyPath();
        sub_1000BDF30(&qword_100207A20, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
        sub_1000D448C(&qword_10020CA50, &qword_10020C6F0);
        sub_1001C0A40();
        swift_release();
        swift_release();
        sub_1000D0E84(v5);
        ++v3;
      }
      while (v6 != v2);
    }
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1000BC354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2[1];
  if (v4 != v2[2]) {
    goto LABEL_4;
  }
  if (sub_1000A3AD8(a1))
  {
    uint64_t v4 = v2[1];
LABEL_4:
    v2[1] = v4 + 1;
    uint64_t v5 = sub_1001BFC80();
    uint64_t v12 = *(void *)(v5 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v12 + 16))(a2, *v2+ ((*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * v4, v5);
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
    uint64_t v7 = a2;
    uint64_t v8 = 0;
    uint64_t v9 = v5;
    goto LABEL_6;
  }
  uint64_t v10 = sub_1001BFC80();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  uint64_t v9 = v10;
  uint64_t v7 = a2;
  uint64_t v8 = 1;
LABEL_6:
  return v6(v7, v8, 1, v9);
}

uint64_t sub_1000BC4A4()
{
  uint64_t v25 = *v0;
  uint64_t v1 = sub_100003918(&qword_10020CC18);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100003918(&qword_10020CC28);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1001BF2C0();
  uint64_t v24 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v11);
  id v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100207970 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1001C0340();
  v23[2] = sub_10000D978(v14, (uint64_t)qword_10020C6C0);
  uint64_t v15 = sub_1001C0330();
  os_log_type_t v16 = sub_1001C1200();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "deleteEntriesWithExpiredAttestationBundles", v17, 2u);
    swift_slowDealloc();
  }

  uint64_t v18 = sub_1001BF2B0();
  __chkstk_darwin(v18, v19);
  v23[-2] = v13;
  uint64_t v26 = type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry(0);
  sub_1001BF3F0();
  sub_1000BDF30(&qword_10020CA30, v20, (void (*)(uint64_t))type metadata accessor for TC2AttestationStore);
  sub_1001C0930();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v9, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  sub_1000BDF30(&qword_100207A30, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  sub_1001C0990();
  swift_release();
  sub_100010360((uint64_t)v4, &qword_10020CC18);
  uint64_t v21 = v24;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v13, v10);
}

uint64_t sub_1000BCA38(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = sub_100003918(&qword_10020CA38);
  uint64_t v7 = __chkstk_darwin(v5 - 8, v6);
  long long v74 = (char *)v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v9);
  Swift::String v80 = (char *)v66 - v10;
  uint64_t v11 = sub_100003918(&qword_10020CA40);
  Swift::String v81 = *(void (***)(char *, uint64_t))(v11 - 8);
  uint64_t v82 = v11;
  __chkstk_darwin(v11, v12);
  unint64_t v79 = (char *)v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_100003918(&qword_10020CA48);
  uint64_t v84 = *(void *)(v86 - 8);
  __chkstk_darwin(v86, v14);
  Swift::String v85 = (char *)v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1001BF310();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v21 = (char *)v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v22);
  uint64_t v24 = (char *)v66 - v23;
  if (qword_100207970 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_1001C0340();
  uint64_t v26 = sub_10000D978(v25, (uint64_t)qword_10020C6C0);
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v71 = v17 + 16;
  long long v70 = v27;
  v27(v24, a1, v16);
  uint64_t v83 = v26;
  unint64_t v28 = sub_1001C0330();
  os_log_type_t v29 = sub_1001C1200();
  BOOL v30 = os_log_type_enabled(v28, v29);
  long long v77 = v2;
  uint64_t v73 = v16;
  uint64_t v69 = v17;
  long long v72 = v21;
  uint64_t v76 = a1;
  if (v30)
  {
    uint64_t v31 = v4;
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    v88[0] = swift_slowAlloc();
    uint64_t v75 = v31;
    *(_DWORD *)uint64_t v32 = 136315138;
    sub_1000BDF30(qword_100207DC0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v33 = sub_1001C1780();
    uint64_t v90 = sub_1000DF238(v33, v34, v88);
    uint64_t v35 = v75;
    sub_1001C1310();
    swift_bridgeObjectRelease();
    long long v68 = *(void (**)(char *, uint64_t))(v17 + 8);
    v68(v24, v16);
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "deleteAttestationsUsedForTrustedRequest: %s", v32, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v4 = v35;
    a1 = v76;
    swift_slowDealloc();
  }
  else
  {
    long long v68 = *(void (**)(char *, uint64_t))(v17 + 8);
    v68(v24, v16);
  }

  id v78 = v66;
  __chkstk_darwin(v36, v37);
  v66[-2] = a1;
  uint64_t v90 = type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry(0);
  uint64_t v38 = v85;
  sub_1001BF3F0();
  uint64_t v89 = 0;
  v66[1] = sub_1000BDF30(&qword_10020CA30, v39, (void (*)(uint64_t))type metadata accessor for TC2AttestationStore);
  sub_1001C0930();
  uint64_t v40 = v84;
  uint64_t v41 = (char *)(v84 + 16);
  os_log_type_t v42 = v80;
  uint64_t v43 = v86;
  long long v67 = *(void (**)(char *, char *, uint64_t))(v84 + 16);
  v67(v80, v38, v86);
  uint64_t v44 = v4;
  uint64_t v46 = (char *)(v40 + 56);
  unint64_t v45 = *(void (***)(char *, uint64_t))(v40 + 56);
  ((void (*)(char *, void, uint64_t, uint64_t))v45)(v42, 0, 1, v43);
  uint64_t v47 = sub_1000BDF30(&qword_100207A20, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  uint64_t v48 = v79;
  sub_1001C09F0();
  unint64_t v49 = sub_1001C0980();
  v81[1](v48, v82);
  uint64_t result = swift_release();
  unint64_t v79 = v46;
  Swift::String v80 = v41;
  Swift::String v81 = v45;
  uint64_t v82 = v47;
  uint64_t v75 = v44;
  if (!(v49 >> 62))
  {
    if (*(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_10;
    }
LABEL_18:
    swift_bridgeObjectRelease();
LABEL_7:
    (*(void (**)(char *, uint64_t))(v84 + 8))(v85, v86);
    swift_beginAccess();
    return v89;
  }
  swift_bridgeObjectRetain();
  uint64_t v65 = sub_1001C1590();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v65) {
    goto LABEL_18;
  }
LABEL_10:
  if ((v49 & 0xC000000000000001) != 0)
  {
    uint64_t v51 = sub_1001C1440();
    goto LABEL_13;
  }
  if (*(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v51 = *(void *)(v49 + 32);
    swift_retain();
LABEL_13:
    swift_bridgeObjectRelease();
    v88[0] = v51;
    swift_getKeyPath();
    sub_1000BDF30(&qword_10020C738, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
    sub_1001BF410();
    swift_release();
    swift_getKeyPath();
    v66[0] = v51;
    sub_1001C0A40();
    swift_release();
    uint64_t v52 = v88[0];
    uint64_t v89 = v88[0];
    uint64_t v53 = v72;
    uint64_t v54 = v73;
    v70(v72, v76, v73);
    uint64_t v55 = sub_1001C0330();
    os_log_type_t v56 = sub_1001C1200();
    if (os_log_type_enabled(v55, v56))
    {
      uint64_t v57 = swift_slowAlloc();
      uint64_t v58 = swift_slowAlloc();
      uint64_t v87 = v52;
      v88[0] = v58;
      *(_DWORD *)uint64_t v57 = 134218242;
      sub_1001C1310();
      *(_WORD *)(v57 + 12) = 2080;
      uint64_t v76 = v57 + 14;
      sub_1000BDF30(qword_100207DC0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v59 = sub_1001C1780();
      uint64_t v87 = sub_1000DF238(v59, v60, v88);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      v68(v53, v54);
      _os_log_impl((void *)&_mh_execute_header, v55, v56, "deleting batch: %lu used by request: %s", (uint8_t *)v57, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      v68(v53, v54);
    }

    id v61 = v81;
    unint64_t v62 = v67;
    sub_1001C0930();
    uint64_t v63 = (uint64_t)v74;
    uint64_t v64 = v86;
    v62(v74, v85, v86);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v61)(v63, 0, 1, v64);
    sub_1001C0990();
    swift_release();
    swift_release();
    sub_100010360(v63, &qword_10020CA38);
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000BD5F4(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  v25[3] = *v2;
  uint64_t v6 = sub_100003918(&qword_10020CC18);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100003918(&qword_10020CC28);
  uint64_t v27 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100207970 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1001C0340();
  uint64_t v15 = sub_10000D978(v14, (uint64_t)qword_10020C6C0);
  swift_bridgeObjectRetain_n();
  v25[2] = v15;
  uint64_t v16 = sub_1001C0330();
  os_log_type_t v17 = sub_1001C1200();
  BOOL v18 = os_log_type_enabled(v16, v17);
  uint64_t v26 = v13;
  if (v18)
  {
    v25[1] = v3;
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_1000DF238(a1, a2, &v29);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "deleteEntryForNode: %s", v19, 0xCu);
    swift_arrayDestroy();
    uint64_t v13 = v26;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v20 = swift_bridgeObjectRelease_n();
  }
  __chkstk_darwin(v20, v21);
  v25[-2] = a1;
  v25[-1] = a2;
  uint64_t v29 = type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry(0);
  sub_1001BF3F0();
  sub_1000BDF30(&qword_10020CA30, v22, (void (*)(uint64_t))type metadata accessor for TC2AttestationStore);
  sub_1001C0930();
  uint64_t v23 = v27;
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v9, v13, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v9, 0, 1, v10);
  sub_1000BDF30(&qword_100207A30, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  sub_1001C0990();
  swift_release();
  sub_100010360((uint64_t)v9, &qword_10020CC18);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v10);
  return 1;
}

uint64_t sub_1000BDC4C()
{
  uint64_t v0 = sub_1001BF8E0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1001C0340();
  sub_100044F74(v5, qword_10020C6C0);
  sub_10000D978(v5, (uint64_t)qword_10020C6C0);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for TC2LogCategory.attestationStore(_:), v0);
  sub_1001BFDD0();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t static TC2AttestationStoreMigrationPlan.schemas.getter()
{
  sub_100003918(&qword_10020C6D8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1001CC760;
  unint64_t v1 = sub_1000BDDC4();
  *(void *)(v0 + 32) = &type metadata for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1;
  *(void *)(v0 + 40) = v1;
  return v0;
}

unint64_t sub_1000BDDC4()
{
  unint64_t result = qword_10020C6E0;
  if (!qword_10020C6E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020C6E0);
  }
  return result;
}

uint64_t static TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.models.getter()
{
  sub_100003918(&qword_10020C6E8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1001CD7F0;
  uint64_t v1 = type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry(0);
  uint64_t v2 = sub_1000BDF30(&qword_100207A20, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = v2;
  uint64_t v3 = type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry(0);
  uint64_t v4 = sub_1000BDF30(&qword_100207A30, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  *(void *)(v0 + 48) = v3;
  *(void *)(v0 + 56) = v4;
  return v0;
}

uint64_t type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry(uint64_t a1)
{
  return sub_10001C958(a1, qword_10020C780);
}

uint64_t type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry(uint64_t a1)
{
  return sub_10001C958(a1, qword_10020C880);
}

uint64_t sub_1000BDF30(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.versionIdentifier.getter()
{
  return Schema.Version.init(_:_:_:)(1, 0, 0);
}

uint64_t sub_1000BDF88()
{
  swift_getKeyPath();
  sub_1000BDF30(&qword_10020C738, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  sub_1001BF410();
  swift_release();
  swift_getKeyPath();
  sub_1000BDF30(&qword_100207A20, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  sub_1001C0A40();
  swift_release();
  return v0;
}

uint64_t sub_1000BE094@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_1000BDF30(&qword_10020C738, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  sub_1001BF410();
  swift_release();
  swift_getKeyPath();
  sub_1000BDF30(&qword_100207A20, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  sub_1001C0A40();
  uint64_t result = swift_release();
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_1000BE1A8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000BE298()
{
  swift_getKeyPath();
  sub_1000BDF30(&qword_10020C738, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  sub_1001BF410();
  swift_release();
  swift_getKeyPath();
  sub_1000BDF30(&qword_100207A20, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  sub_1001C0A40();
  swift_release();
  return v0;
}

uint64_t sub_1000BE3A4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_1000BDF30(&qword_10020C738, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  sub_1001BF410();
  swift_release();
  swift_getKeyPath();
  sub_1000BDF30(&qword_100207A20, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  sub_1001C0A40();
  uint64_t result = swift_release();
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_1000BE4B8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000BE5A8()
{
  swift_getKeyPath();
  sub_1000BDF30(&qword_10020C738, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  sub_1001BF410();
  swift_release();
  swift_getKeyPath();
  sub_1000BDF30(&qword_100207A20, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  sub_1001C0A40();
  swift_release();
  return v0;
}

uint64_t sub_1000BE6B4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_1000BDF30(&qword_10020C738, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  sub_1001BF410();
  swift_release();
  swift_getKeyPath();
  sub_1000BDF30(&qword_100207A20, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  sub_1001C0A40();
  uint64_t result = swift_release();
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_1000BE7C8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000BE8B8()
{
  swift_getKeyPath();
  sub_1000BDF30(&qword_10020C738, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  sub_1001BF410();
  swift_release();
  swift_getKeyPath();
  sub_1000BDF30(&qword_100207A20, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  sub_1001C0A40();
  swift_release();
  return v1;
}

uint64_t sub_1000BE9C4@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  sub_1000BDF30(&qword_10020C738, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  sub_1001BF410();
  swift_release();
  swift_getKeyPath();
  sub_1000BDF30(&qword_100207A20, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  sub_1001C0A40();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1000BEAD8()
{
  return swift_release();
}

uint64_t sub_1000BEBAC()
{
  return swift_release();
}

uint64_t sub_1000BEC58()
{
  return swift_release();
}

uint64_t sub_1000BED9C()
{
  return swift_release();
}

uint64_t sub_1000BEEE0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_1001BF2C0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  uint64_t v14 = *a2;
  uint64_t v9 = v14;
  swift_getKeyPath();
  uint64_t v12 = v9;
  uint64_t v13 = v8;
  sub_1000BDF30(&qword_10020C738, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  sub_1001BF400();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1000BF06C()
{
  swift_getKeyPath();
  sub_1000BDF30(&qword_10020C738, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  sub_1001BF410();
  swift_release();
  swift_getKeyPath();
  sub_1000BDF30(&qword_100207A20, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  sub_1000D448C(&qword_10020CA50, &qword_10020C6F0);
  sub_1001C0A40();
  swift_release();
  return v0;
}

uint64_t sub_1000BF1A8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_1000BDF30(&qword_10020C738, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  sub_1001BF410();
  swift_release();
  swift_getKeyPath();
  sub_1000BDF30(&qword_100207A20, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  sub_1000D448C(&qword_10020CA50, &qword_10020C6F0);
  sub_1001C0A40();
  uint64_t result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t sub_1000BF2EC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000BF3D0()
{
  return swift_release();
}

uint64_t sub_1000BF4AC()
{
  swift_getKeyPath();
  sub_1000BDF30(&qword_10020C738, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  sub_1001BF410();
  swift_release();
  swift_getKeyPath();
  sub_1000BDF30(&qword_100207A20, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  sub_1001C0A40();
  swift_release();
  return v0;
}

uint64_t sub_1000BF5B8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_1000BDF30(&qword_10020C738, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  sub_1001BF410();
  swift_release();
  swift_getKeyPath();
  sub_1000BDF30(&qword_100207A20, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  sub_1001C0A40();
  uint64_t result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t sub_1000BF6CC()
{
  return swift_release();
}

uint64_t sub_1000BF79C()
{
  return swift_release();
}

uint64_t sub_1000BF848()
{
  return swift_release();
}

uint64_t sub_1000BF990()
{
  return swift_release();
}

uint64_t sub_1000BFAD8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_100003918(qword_100208CD0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10003282C(a1, (uint64_t)v7, qword_100208CD0);
  uint64_t v13 = *a2;
  uint64_t v8 = v13;
  swift_getKeyPath();
  uint64_t v11 = v8;
  uint64_t v12 = v7;
  sub_1000BDF30(&qword_10020C738, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  sub_1001BF400();
  swift_release();
  return sub_100010360((uint64_t)v7, qword_100208CD0);
}

uint64_t sub_1000BFC1C()
{
  return swift_release();
}

void *sub_1000BFD00(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, int a7, char *a8, uint64_t a9, uint64_t a10, void *a11)
{
  uint64_t v12 = v11;
  uint64_t v38 = a8;
  int v36 = a7;
  uint64_t v31 = a5;
  uint64_t v32 = a6;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  uint64_t v28 = a1;
  uint64_t v40 = a10;
  uint64_t v41 = a11;
  uint64_t v39 = a9;
  uint64_t v14 = *v11;
  uint64_t v37 = sub_1001BF2C0();
  uint64_t v42 = *(void *)(v37 - 8);
  __chkstk_darwin(v37, v15);
  uint64_t v33 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[6] = sub_100003918(&qword_100207A18);
  uint64_t v17 = sub_1000BDF30(&qword_100207A20, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  v45[0] = v14;
  v45[1] = v14;
  v45[2] = v17;
  uint64_t v46 = v17;
  v12[7] = swift_getOpaqueTypeConformance2();
  sub_10000395C(v12 + 3);
  sub_1001C0A00();
  sub_100032890((uint64_t)(v12 + 3), (uint64_t)v45);
  sub_10000D934(v45, v46);
  swift_getKeyPath();
  uint64_t v43 = _swiftEmptyArrayStorage;
  uint64_t v35 = sub_100003918(&qword_10020C6F0);
  uint64_t v34 = sub_1000D448C(&qword_10020C6F8, &qword_10020C6F0);
  sub_1001C0920();
  swift_release();
  sub_100003E90((uint64_t)v45);
  *((unsigned char *)v12 + 16) = 1;
  _s20privatecloudcomputed32TC2AttestationStoreMigrationPlanO0bcD9Schema_v1O0b6ParamsD5EntryC22__observationRegistrar33_20CBFB716EC7F30A6F7841E732D6946911Observation0tL0Vvpfi_0();
  sub_100032890((uint64_t)(v12 + 3), (uint64_t)v45);
  sub_10000D934(v45, v46);
  swift_getKeyPath();
  uint64_t v43 = v28;
  uint64_t v44 = a2;
  sub_1001C0920();
  swift_bridgeObjectRelease();
  swift_release();
  sub_100003E90((uint64_t)v45);
  sub_100032890((uint64_t)(v12 + 3), (uint64_t)v45);
  sub_10000D934(v45, v46);
  swift_getKeyPath();
  uint64_t v43 = v29;
  uint64_t v44 = v30;
  sub_1001C0920();
  swift_bridgeObjectRelease();
  swift_release();
  sub_100003E90((uint64_t)v45);
  sub_100032890((uint64_t)(v12 + 3), (uint64_t)v45);
  sub_10000D934(v45, v46);
  swift_getKeyPath();
  uint64_t v43 = v31;
  uint64_t v44 = v32;
  sub_1001C0920();
  swift_bridgeObjectRelease();
  swift_release();
  sub_100003E90((uint64_t)v45);
  sub_100032890((uint64_t)(v12 + 3), (uint64_t)v45);
  sub_10000D934(v45, v46);
  swift_getKeyPath();
  LOBYTE(v43) = v36;
  sub_1001C0920();
  swift_release();
  sub_100003E90((uint64_t)v45);
  uint64_t v18 = v42;
  uint64_t v19 = v33;
  uint64_t v21 = v37;
  uint64_t v20 = v38;
  (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v33, v38, v37);
  sub_100032890((uint64_t)(v12 + 3), (uint64_t)v45);
  sub_10000D934(v45, v46);
  swift_getKeyPath();
  sub_1000BDF30(qword_1002084E8, 255, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1001C0920();
  swift_release();
  uint64_t v22 = v18 + 8;
  uint64_t v23 = *(void (**)(char *, uint64_t))(v18 + 8);
  uint64_t v42 = v22;
  v23(v19, v21);
  sub_100003E90((uint64_t)v45);
  sub_100003918(&qword_10020C550);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1001CC760;
  uint64_t v25 = v40;
  *(void *)(v24 + 32) = v39;
  *(void *)(v24 + 40) = v25;
  sub_100032890((uint64_t)(v12 + 3), (uint64_t)v45);
  sub_10000D934(v45, v46);
  swift_getKeyPath();
  uint64_t v43 = (void *)v24;
  sub_1001C0920();
  swift_bridgeObjectRelease();
  swift_release();
  sub_100003E90((uint64_t)v45);
  sub_100032890((uint64_t)(v12 + 3), (uint64_t)v45);
  sub_10000D934(v45, v46);
  swift_getKeyPath();
  uint64_t v43 = v41;
  sub_1001C0920();
  swift_release();
  sub_100003E90((uint64_t)v45);
  v23(v20, v21);
  return v12;
}

uint64_t TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry.persistentBackingData.setter(uint64_t a1)
{
  return sub_1000C254C(a1, (void (*)(uint64_t, uint64_t))sub_10000E720);
}

void (*TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry.persistentBackingData.modify(void *a1))(uint64_t *a1, char a2)
{
  char v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[16] = v1;
  swift_beginAccess();
  sub_100032890(v1 + 24, (uint64_t)v3);
  return sub_1000C03C0;
}

void sub_1000C03C0(uint64_t *a1, char a2)
{
}

uint64_t TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry.__allocating_init(backingData:)(uint64_t a1)
{
  return sub_1000C26B8(a1, (void (*)(uint64_t))TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry.init(backingData:));
}

void *TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry.init(backingData:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  v2[6] = sub_100003918(&qword_100207A18);
  *(void *)&long long v6 = v4;
  *((void *)&v6 + 1) = v4;
  uint64_t v7 = sub_1000BDF30(&qword_100207A20, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  uint64_t v8 = v7;
  v2[7] = swift_getOpaqueTypeConformance2();
  sub_10000395C(v2 + 3);
  sub_1001C0A00();
  sub_100032890((uint64_t)(v2 + 3), (uint64_t)&v6);
  sub_10000D934(&v6, v8);
  swift_getKeyPath();
  sub_100003918(&qword_10020C6F0);
  sub_1000D448C(&qword_10020C6F8, &qword_10020C6F0);
  sub_1001C0920();
  swift_release();
  sub_100003E90((uint64_t)&v6);
  *((unsigned char *)v2 + 16) = 1;
  _s20privatecloudcomputed32TC2AttestationStoreMigrationPlanO0bcD9Schema_v1O0b6ParamsD5EntryC22__observationRegistrar33_20CBFB716EC7F30A6F7841E732D6946911Observation0tL0Vvpfi_0();
  *((unsigned char *)v2 + 16) = 0;
  sub_100032890(a1, (uint64_t)&v6);
  swift_beginAccess();
  sub_100003E90((uint64_t)(v2 + 3));
  sub_10000E720(&v6, (uint64_t)(v2 + 3));
  swift_endAccess();
  sub_100003E90(a1);
  return v2;
}

uint64_t TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry.deinit()
{
  return sub_1000C2878(&OBJC_IVAR____TtCOO20privatecloudcomputed32TC2AttestationStoreMigrationPlan28TC2AttestationStoreSchema_v119TC2ParamsStoreEntry___observationRegistrar);
}

uint64_t TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry.__deallocating_deinit()
{
  return sub_1000C28F0(&OBJC_IVAR____TtCOO20privatecloudcomputed32TC2AttestationStoreMigrationPlan28TC2AttestationStoreSchema_v119TC2ParamsStoreEntry___observationRegistrar);
}

Swift::Int TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry.hashValue.getter()
{
  return sub_1000C29CC(&qword_10020C708, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
}

uint64_t sub_1000C0660()
{
  return sub_1001C0A30();
}

uint64_t sub_1000C06DC()
{
  return sub_1001C0A20();
}

uint64_t sub_1000C0754(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  uint64_t v5 = sub_1000BDF30(&qword_100207A20, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  return static PersistentModel.== infix(_:_:)(v3, v4, v2, v5);
}

uint64_t sub_1000C07D8()
{
  swift_getKeyPath();
  sub_1000BDF30(&qword_10020C748, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  sub_1001BF410();
  swift_release();
  swift_getKeyPath();
  sub_1000BDF30(&qword_100207A30, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  sub_1001C0A40();
  swift_release();
  return v0;
}

uint64_t sub_1000C08E4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_1000BDF30(&qword_10020C748, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  sub_1001BF410();
  swift_release();
  swift_getKeyPath();
  sub_1000BDF30(&qword_100207A30, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  sub_1001C0A40();
  uint64_t result = swift_release();
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_1000C09F8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000C0AE8()
{
  swift_getKeyPath();
  sub_1000BDF30(&qword_10020C748, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  sub_1001BF410();
  swift_release();
  swift_getKeyPath();
  sub_1000BDF30(&qword_100207A30, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  sub_1001C0A40();
  swift_release();
  return v0;
}

uint64_t sub_1000C0BF4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_1000BDF30(&qword_10020C748, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  sub_1001BF410();
  swift_release();
  swift_getKeyPath();
  sub_1000BDF30(&qword_100207A30, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  sub_1001C0A40();
  uint64_t result = swift_release();
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_1000C0D08()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000C0DF8()
{
  return sub_1000C12F0();
}

uint64_t sub_1000C0E04()
{
  return swift_release();
}

uint64_t sub_1000C0F48()
{
  return swift_release();
}

uint64_t sub_1000C108C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_1001BF2C0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  uint64_t v14 = *a2;
  uint64_t v9 = v14;
  swift_getKeyPath();
  uint64_t v12 = v9;
  uint64_t v13 = v8;
  sub_1000BDF30(&qword_10020C748, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  sub_1001BF400();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1000C1218(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  return swift_release();
}

uint64_t sub_1000C12E4()
{
  return sub_1000C12F0();
}

uint64_t sub_1000C12F0()
{
  swift_getKeyPath();
  sub_1000BDF30(&qword_10020C748, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  sub_1001BF410();
  swift_release();
  swift_getKeyPath();
  sub_1000BDF30(&qword_100207A30, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  sub_1000D461C();
  sub_1001C0A40();
  swift_release();
  return v0;
}

double sub_1000C13F8@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1000C1404(a1, a2);
}

double sub_1000C1404@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  *(void *)&long long v4 = *a1;
  swift_getKeyPath();
  sub_1000BDF30(&qword_10020C748, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  sub_1001BF410();
  swift_release();
  swift_getKeyPath();
  sub_1000BDF30(&qword_100207A30, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  sub_1000D461C();
  sub_1001C0A40();
  swift_release();
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t sub_1000C1518(uint64_t *a1)
{
  return sub_1000C1538(a1);
}

uint64_t sub_1000C1538(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = a1[1];
  swift_getKeyPath();
  sub_100007B14(v1, v2);
  sub_1000BDF30(&qword_10020C748, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  sub_1001BF400();
  sub_10000792C(v1, v2);
  return swift_release();
}

uint64_t sub_1000C161C()
{
  return swift_release();
}

uint64_t sub_1000C16D4()
{
  swift_getKeyPath();
  sub_1000BDF30(&qword_10020C748, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  sub_1001BF410();
  swift_release();
  swift_getKeyPath();
  sub_1000BDF30(&qword_100207A30, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  sub_1001C0A40();
  swift_release();
  return v0;
}

uint64_t sub_1000C17E0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_1000BDF30(&qword_10020C748, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  sub_1001BF410();
  swift_release();
  swift_getKeyPath();
  sub_1000BDF30(&qword_100207A30, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  sub_1001C0A40();
  uint64_t result = swift_release();
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_1000C18F4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000C19E4()
{
  swift_getKeyPath();
  sub_1000BDF30(&qword_10020C748, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  sub_1001BF410();
  swift_release();
  swift_getKeyPath();
  sub_1000BDF30(&qword_100207A30, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  sub_1001C0A40();
  swift_release();
  return v0;
}

uint64_t sub_1000C1AF0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_1000BDF30(&qword_10020C748, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  sub_1001BF410();
  swift_release();
  swift_getKeyPath();
  sub_1000BDF30(&qword_100207A30, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  sub_1001C0A40();
  uint64_t result = swift_release();
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_1000C1C04()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000C1CF4()
{
  swift_getKeyPath();
  sub_1000BDF30(&qword_10020C748, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  sub_1001BF410();
  swift_release();
  swift_getKeyPath();
  sub_1000BDF30(&qword_100207A30, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  sub_1001C0A40();
  swift_release();
  return v0;
}

uint64_t sub_1000C1E00@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_1000BDF30(&qword_10020C748, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  sub_1001BF410();
  swift_release();
  swift_getKeyPath();
  sub_1000BDF30(&qword_100207A30, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  sub_1001C0A40();
  uint64_t result = swift_release();
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_1000C1F14()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000C2004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, void (*a6)(uint64_t))
{
  return swift_release();
}

uint64_t sub_1000C20A8()
{
  swift_getKeyPath();
  sub_1000BDF30(&qword_10020C748, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  sub_1001BF410();
  swift_release();
  swift_getKeyPath();
  sub_1000BDF30(&qword_100207A30, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  sub_1000D448C((unint64_t *)&qword_10020CCC8, &qword_100207DB8);
  sub_1001C0A40();
  swift_release();
  return v0;
}

double sub_1000C21E4@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  *(void *)&long long v4 = *a1;
  swift_getKeyPath();
  sub_1000BDF30(&qword_10020C748, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  sub_1001BF410();
  swift_release();
  swift_getKeyPath();
  sub_1000BDF30(&qword_100207A30, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  sub_1000D448C((unint64_t *)&qword_10020CCC8, &qword_100207DB8);
  sub_1001C0A40();
  swift_release();
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t sub_1000C2328()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000C2418()
{
  return swift_release();
}

uint64_t _s20privatecloudcomputed32TC2AttestationStoreMigrationPlanO0bcD9Schema_v1O0b6ParamsD5EntryC21persistentBackingData05SwiftM00lM0_pAG5ModelAiJPRts_XPvg_0@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  return sub_100032890(v1 + 24, a1);
}

uint64_t sub_1000C254C(uint64_t a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v5 = v2 + 24;
  swift_beginAccess();
  sub_100003E90(v5);
  a2(a1, v5);
  return swift_endAccess();
}

void sub_1000C25B8(uint64_t *a1, char a2, void (*a3)(uint64_t, uint64_t))
{
  long long v4 = (void *)*a1;
  uint64_t v5 = *a1 + 40;
  if (a2)
  {
    uint64_t v6 = v4[16] + 24;
    sub_100032890(*a1, v5);
    swift_beginAccess();
    sub_100003E90(v6);
    a3(v5, v6);
    swift_endAccess();
    sub_100003E90((uint64_t)v4);
  }
  else
  {
    uint64_t v7 = v4[16] + 24;
    swift_beginAccess();
    sub_100003E90(v7);
    a3((uint64_t)v4, v7);
    swift_endAccess();
  }
  free(v4);
}

uint64_t TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry.__allocating_init(backingData:)(uint64_t a1)
{
  return sub_1000C26B8(a1, (void (*)(uint64_t))TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry.init(backingData:));
}

uint64_t sub_1000C26B8(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = swift_allocObject();
  a2(a1);
  return v4;
}

void *TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry.init(backingData:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  v2[6] = sub_100003918(&qword_100207A28);
  *(void *)&long long v6 = v4;
  *((void *)&v6 + 1) = v4;
  uint64_t v7 = sub_1000BDF30(&qword_100207A30, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  uint64_t v8 = v7;
  v2[7] = swift_getOpaqueTypeConformance2();
  sub_10000395C(v2 + 3);
  sub_1001C0A00();
  *((unsigned char *)v2 + 16) = 1;
  _s20privatecloudcomputed32TC2AttestationStoreMigrationPlanO0bcD9Schema_v1O0b6ParamsD5EntryC22__observationRegistrar33_20CBFB716EC7F30A6F7841E732D6946911Observation0tL0Vvpfi_0();
  *((unsigned char *)v2 + 16) = 0;
  sub_100032890(a1, (uint64_t)&v6);
  swift_beginAccess();
  sub_100003E90((uint64_t)(v2 + 3));
  sub_10000E720(&v6, (uint64_t)(v2 + 3));
  swift_endAccess();
  sub_100003E90(a1);
  return v2;
}

uint64_t TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry.deinit()
{
  return sub_1000C2878(&OBJC_IVAR____TtCOO20privatecloudcomputed32TC2AttestationStoreMigrationPlan28TC2AttestationStoreSchema_v116TCNodeStoreEntry___observationRegistrar);
}

uint64_t sub_1000C2878(void *a1)
{
  sub_100003E90(v1 + 24);
  uint64_t v3 = v1 + *a1;
  uint64_t v4 = sub_1001BF430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v1;
}

uint64_t TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry.__deallocating_deinit()
{
  return sub_1000C28F0(&OBJC_IVAR____TtCOO20privatecloudcomputed32TC2AttestationStoreMigrationPlan28TC2AttestationStoreSchema_v116TCNodeStoreEntry___observationRegistrar);
}

uint64_t sub_1000C28F0(void *a1)
{
  sub_100003E90(v1 + 24);
  uint64_t v3 = v1 + *a1;
  uint64_t v4 = sub_1001BF430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

Swift::Int TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry.hashValue.getter()
{
  return sub_1000C29CC(&qword_10020C718, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
}

Swift::Int sub_1000C29CC(unint64_t *a1, void (*a2)(uint64_t))
{
  return sub_1001C1990();
}

Swift::Int sub_1000C2A74()
{
  return sub_1001C1990();
}

uint64_t sub_1000C2AD8()
{
  return sub_1001C0A30();
}

Swift::Int sub_1000C2B50()
{
  return sub_1001C1990();
}

uint64_t sub_1000C2BB0()
{
  return sub_1001C0A20();
}

uint64_t sub_1000C2C28(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  uint64_t v5 = sub_1000BDF30(&qword_100207A30, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  return static PersistentModel.== infix(_:_:)(v3, v4, v2, v5);
}

uint64_t sub_1000C2CAC(unint64_t *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v92 = (void *)a4;
  int v91 = a3;
  uint64_t v85 = a2;
  uint64_t v87 = *v5;
  uint64_t v8 = sub_1001BF2C0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v11 = __chkstk_darwin(v8, v10);
  uint64_t v13 = (char *)v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v14);
  uint64_t v16 = (char *)v78 - v15;
  uint64_t v93 = (int *)type metadata accessor for ValidatedAttestation();
  __chkstk_darwin(v93, v17);
  uint64_t v19 = (void *)((char *)v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_100207970 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_1001C0340();
  uint64_t v21 = sub_10000D978(v20, (uint64_t)qword_10020C6C0);
  sub_10002C0E4((uint64_t)a1, (uint64_t)v19);
  uint64_t v83 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v84 = (void *)(v9 + 16);
  v83(v16, a5, v8);
  uint64_t v22 = sub_1001C0330();
  os_log_type_t v23 = sub_1001C1200();
  LODWORD(v90) = v23;
  BOOL v24 = os_log_type_enabled(v22, v23);
  uint64_t v81 = a5;
  uint64_t v82 = 0;
  uint64_t v86 = v13;
  if (v24)
  {
    uint64_t v25 = swift_slowAlloc();
    Swift::String v80 = (void *)swift_slowAlloc();
    v95[0] = v80;
    *(_DWORD *)uint64_t v25 = 136315906;
    uint64_t v88 = v21;
    unint64_t v89 = v8;
    uint64_t v27 = *v19;
    unint64_t v26 = v19[1];
    swift_bridgeObjectRetain();
    uint64_t v94 = sub_1000DF238(v27, v26, (uint64_t *)v95);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    sub_1000D42EC((uint64_t)v19);
    *(_WORD *)(v25 + 12) = 2048;
    uint64_t v94 = (uint64_t)v92;
    sub_1001C1310();
    *(_WORD *)(v25 + 22) = 1024;
    LODWORD(v94) = v91 & 1;
    sub_1001C1310();
    *(_WORD *)(v25 + 28) = 2080;
    sub_1000BDF30(&qword_10020C558, 255, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v28 = sub_1001C1780();
    uint64_t v94 = sub_1000DF238(v28, v29, (uint64_t *)v95);
    uint64_t v21 = v88;
    uint64_t v8 = v89;
    sub_1001C1310();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v8);
    _os_log_impl((void *)&_mh_execute_header, v22, (os_log_type_t)v90, "saveValidatedAttestation: %s batch: %lu prefetched: %{BOOL}d fetchTime: %s", (uint8_t *)v25, 0x26u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1000D42EC((uint64_t)v19);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v8);
  }

  uint64_t v30 = (uint64_t *)((char *)a1 + v93[7]);
  uint64_t v31 = (int *)v30[1];
  if (!v31)
  {
    uint64_t v35 = sub_1001C0330();
    os_log_type_t v36 = sub_1001C11F0();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v37 = 0;
      uint64_t v38 = "missing validatedAttestation.uniqueNodeIdentifier";
      goto LABEL_15;
    }
LABEL_16:

    return 0;
  }
  uint64_t v32 = (char *)a1 + v93[8];
  unint64_t v33 = *((void *)v32 + 1);
  if (!v33)
  {
    uint64_t v35 = sub_1001C0330();
    os_log_type_t v36 = sub_1001C11F0();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v37 = 0;
      uint64_t v38 = "missing validatedAttestation.validatedCellID";
      goto LABEL_15;
    }
    goto LABEL_16;
  }
  unint64_t v34 = a1[3];
  if (v34 >> 60 == 15)
  {
    uint64_t v35 = sub_1001C0330();
    os_log_type_t v36 = sub_1001C11F0();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v37 = 0;
      uint64_t v38 = "missing validatedAttestation.attestation.attestationBundle";
LABEL_15:
      _os_log_impl((void *)&_mh_execute_header, v35, v36, v38, v37, 2u);
      swift_slowDealloc();
      goto LABEL_16;
    }
    goto LABEL_16;
  }
  uint64_t v90 = *v30;
  Swift::String v80 = *(void **)v32;
  unint64_t v40 = *a1;
  uint64_t v88 = v21;
  unint64_t v89 = v40;
  uint64_t v41 = (char *)a1[2];
  v78[0] = a1[1];
  v83(v86, (uint64_t)a1 + v93[6], v8);
  uint64_t v42 = a1[12];
  unint64_t v43 = a1[13];
  unint64_t v44 = a1[5];
  uint64_t v93 = (int *)a1[4];
  unint64_t v45 = a1[7];
  uint64_t v84 = (void *)a1[6];
  uint64_t v46 = a1[10];
  uint64_t v47 = a1[11];
  uint64_t v79 = v46;
  uint64_t v83 = (void (*)(char *, uint64_t, uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry(0);
  v78[1] = swift_allocObject();
  swift_bridgeObjectRetain();
  sub_10000D9E0((uint64_t)v41, v34);
  swift_bridgeObjectRetain();
  sub_10000D9E0((uint64_t)v41, v34);
  unint64_t v48 = v78[0];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100007B14(v42, v43);
  swift_bridgeObjectRetain();
  long long v77 = v93;
  uint64_t v93 = v31;
  unint64_t v49 = sub_1000D2550(v90, (unint64_t)v31, v89, v48, (uint64_t)v41, v34, v86, v42, v43, (uint64_t)v77, v44, (uint64_t)v84, v45, (uint64_t)v80, v33, v79, v47);
  sub_10000792C(v42, v43);
  uint64_t v86 = v41;
  unint64_t v89 = v34;
  sub_100007918((uint64_t)v41, v34);
  uint64_t v51 = sub_1000BDF30(&qword_10020CA30, v50, (void (*)(uint64_t))type metadata accessor for TC2AttestationStore);
  sub_1001C0930();
  sub_1000BDF30(&qword_100207A30, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  uint64_t v84 = v49;
  sub_1001C09A0();
  swift_release();
  uint64_t v52 = v85;
  uint64_t v53 = v92;
  uint64_t v54 = (void *)sub_1000C39C0(v85, (uint64_t)v92);
  if (v54)
  {
    uint64_t v55 = v54;
    uint64_t v83 = (void (*)(char *, uint64_t, uint64_t))v51;
    uint64_t v56 = (uint64_t)v54
        + OBJC_IVAR____TtCOO20privatecloudcomputed32TC2AttestationStoreMigrationPlan28TC2AttestationStoreSchema_v119TC2ParamsStoreEntry___observationRegistrar;
    v95[0] = v54;
    swift_getKeyPath();
    sub_1000BDF30(&qword_10020C738, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
    sub_1001BF410();
    swift_release();
    swift_getKeyPath();
    sub_1000BDF30(&qword_100207A20, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
    sub_1000D448C(&qword_10020CA50, &qword_10020C6F0);
    sub_1001C0A40();
    swift_release();
    uint64_t v57 = v93;
    char v58 = sub_1000C4188(v90, (uint64_t)v93, v95[0]);
    swift_bridgeObjectRelease();
    if (v58)
    {
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v59 = v82;
    }
    else
    {
      v95[0] = v55;
      swift_getKeyPath();
      uint64_t v92 = (void *)v56;
      sub_1001BF410();
      swift_release();
      swift_getKeyPath();
      sub_1001C0A40();
      swift_release();
      uint64_t v65 = (char *)v95[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v65 = sub_1000E3F44(0, *((void *)v65 + 2) + 1, 1, v65);
      }
      uint64_t v66 = v90;
      unint64_t v68 = *((void *)v65 + 2);
      unint64_t v67 = *((void *)v65 + 3);
      uint64_t v59 = v82;
      if (v68 >= v67 >> 1)
      {
        uint64_t v76 = sub_1000E3F44((char *)(v67 > 1), v68 + 1, 1, v65);
        uint64_t v66 = v90;
        uint64_t v65 = v76;
      }
      *((void *)v65 + 2) = v68 + 1;
      uint64_t v69 = &v65[16 * v68];
      *((void *)v69 + 4) = v66;
      *((void *)v69 + 5) = v57;
      v95[0] = v55;
      uint64_t KeyPath = swift_getKeyPath();
      __chkstk_darwin(KeyPath, v71);
      sub_1001BF400();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v60 = v90;
    id v61 = v93;
    swift_bridgeObjectRetain_n();
    unint64_t v62 = sub_1001C0330();
    os_log_type_t v63 = sub_1001C1200();
    if (os_log_type_enabled(v62, v63))
    {
      uint64_t v83 = (void (*)(char *, uint64_t, uint64_t))v51;
      uint64_t v64 = (uint8_t *)swift_slowAlloc();
      v95[0] = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v64 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v94 = sub_1000DF238(v60, (unint64_t)v93, (uint64_t *)v95);
      id v61 = v93;
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v62, v63, "Linking %s to ...", v64, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v59 = v82;
    sub_1000C4250(v52, v60, (uint64_t)v61, v91 & 1, v53, v81);
    swift_bridgeObjectRelease();
  }
  sub_1001C0930();
  sub_1001C0970();
  if (v59)
  {
    swift_release();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v35 = sub_1001C0330();
    os_log_type_t v72 = sub_1001C11F0();
    if (os_log_type_enabled(v35, v72))
    {
      uint64_t v73 = (uint8_t *)swift_slowAlloc();
      long long v74 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v73 = 138412290;
      swift_errorRetain();
      uint64_t v75 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v95[0] = v75;
      sub_1001C1310();
      *long long v74 = v75;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v35, v72, "failed to insert entry: %@", v73, 0xCu);
      sub_100003918(&qword_100207DA8);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_release();
      swift_errorRelease();
      sub_100007918((uint64_t)v86, v89);
      return 0;
    }
    sub_100007918((uint64_t)v86, v89);
    swift_release();
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    goto LABEL_16;
  }
  sub_100007918((uint64_t)v86, v89);
  swift_release();
  swift_release();
  return 1;
}

uint64_t sub_1000C39C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  uint64_t v43 = a2;
  uint64_t v44 = v4;
  uint64_t v5 = sub_100003918(&qword_10020CA38);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v46 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100003918(&qword_10020CA40);
  uint64_t v47 = *(void *)(v8 - 8);
  uint64_t v48 = v8;
  __chkstk_darwin(v8, v9);
  unint64_t v45 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_100003918(&qword_10020CA48);
  uint64_t v11 = *(void *)(v49 - 8);
  __chkstk_darwin(v49, v12);
  uint64_t v50 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100023B38(v52);
  uint64_t v14 = v52[0];
  unint64_t v15 = v52[1];
  uint64_t v16 = v52[2];
  unint64_t v17 = v52[3];
  unint64_t v18 = v52[5];
  uint64_t v42 = (uint64_t *)v52[4];
  if (qword_100207970 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1001C0340();
  uint64_t v20 = sub_10000D978(v19, (uint64_t)qword_10020C6C0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v41 = v20;
  uint64_t v21 = sub_1001C0330();
  os_log_type_t v22 = sub_1001C1200();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v40 = v14;
    uint64_t v24 = v23;
    uint64_t v37 = swift_slowAlloc();
    v52[0] = v37;
    *(_DWORD *)uint64_t v24 = 136315650;
    uint64_t v38 = v3;
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_1000DF238(v40, v15, v52);
    uint64_t v39 = v11;
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v24 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_1000DF238(v16, v17, v52);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v24 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v25 = (uint64_t)v42;
    uint64_t v51 = sub_1000DF238((uint64_t)v42, v18, v52);
    uint64_t v11 = v39;
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "fetchParamsEntry: %s %s %s", (uint8_t *)v24, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v14 = v40;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    uint64_t v26 = swift_bridgeObjectRelease_n();
    uint64_t v25 = (uint64_t)v42;
  }
  uint64_t v42 = &v36;
  __chkstk_darwin(v26, v27);
  *(&v36 - 8) = v14;
  *(&v36 - 7) = v15;
  *(&v36 - 6) = v16;
  *(&v36 - 5) = v17;
  *(&v36 - 4) = v25;
  *(&v36 - 3) = v18;
  *(&v36 - 2) = v43;
  v52[0] = type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry(0);
  uint64_t v28 = v50;
  sub_1001BF3F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000BDF30(&qword_10020CA30, v29, (void (*)(uint64_t))type metadata accessor for TC2AttestationStore);
  sub_1001C0930();
  uint64_t v30 = v46;
  uint64_t v31 = v49;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v46, v28, v49);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v30, 0, 1, v31);
  sub_1000BDF30(&qword_100207A20, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  uint64_t v32 = v45;
  sub_1001C09F0();
  unint64_t v33 = sub_1001C0980();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v32, v48);
  uint64_t result = swift_release();
  if (v33 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1001C1590();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v35) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v35 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v35)
    {
LABEL_11:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v50, v49);
      return v35;
    }
  }
  if ((v33 & 0xC000000000000001) != 0)
  {
    uint64_t v35 = sub_1001C1440();
    goto LABEL_11;
  }
  if (*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v35 = *(void *)(v33 + 32);
    swift_retain();
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000C4188(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_1001C1840();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_1001C1840() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000C4250(uint64_t a1, uint64_t a2, uint64_t a3, int a4, void *a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v40 = a5;
  uint64_t v41 = a2;
  int v38 = a4;
  uint64_t v42 = a3;
  uint64_t v9 = *v6;
  uint64_t v10 = sub_1001BF2C0();
  uint64_t v35 = *(void *)(v10 - 8);
  uint64_t v36 = v10;
  __chkstk_darwin(v10, v11);
  uint64_t v39 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100023B38(v44);
  uint64_t v14 = (void *)v44[0];
  uint64_t v13 = v44[1];
  uint64_t v15 = v44[3];
  uint64_t v37 = (void *)v44[2];
  unint64_t v17 = (void *)v44[4];
  uint64_t v16 = v44[5];
  if (qword_100207970 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1001C0340();
  sub_10000D978(v18, (uint64_t)qword_10020C6C0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v19 = sub_1001C0330();
  os_log_type_t v20 = sub_1001C1200();
  BOOL v21 = os_log_type_enabled(v19, v20);
  unint64_t v34 = v14;
  if (v21)
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v32 = v9;
    uint64_t v23 = v22;
    uint64_t v30 = swift_slowAlloc();
    v44[0] = v30;
    *(_DWORD *)uint64_t v23 = 136315650;
    unint64_t v33 = v7;
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_1000DF238((uint64_t)v14, v13, v44);
    uint64_t v31 = a6;
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v23 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v24 = v37;
    uint64_t v43 = sub_1000DF238((uint64_t)v37, v15, v44);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v23 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_1000DF238((uint64_t)v17, v16, v44);
    a6 = v31;
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "createNewParamsEntry: %s %s %s", (uint8_t *)v23, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    uint64_t v24 = v37;
  }
  uint64_t v25 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v39, a6, v36);
  type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry(0);
  swift_allocObject();
  uint64_t v26 = swift_bridgeObjectRetain();
  sub_1000BFD00(v34, v13, v24, v15, v17, v16, v38 & 1, v25, v41, v26, v40);
  sub_1000BDF30(&qword_10020CA30, v27, (void (*)(uint64_t))type metadata accessor for TC2AttestationStore);
  sub_1001C0930();
  sub_1000BDF30(&qword_100207A20, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  sub_1001C09A0();
  swift_release();
  return swift_release();
}

unint64_t sub_1000C46DC()
{
  uint64_t v1 = *v0;
  uint64_t v109 = type metadata accessor for ValidatedAttestation();
  uint64_t v100 = *(void *)(v109 - 8);
  __chkstk_darwin(v109, v2);
  uint64_t v104 = (uint64_t)&v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100003918(&qword_10020CCE8);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  os_log_type_t v105 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v8);
  uint64_t v107 = (uint64_t)&v79 - v9;
  uint64_t v10 = sub_100003918(&qword_10020CC18);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v96 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_100003918(&qword_10020CC20);
  id v106 = *(unsigned int (***)(uint64_t, uint64_t, uint64_t))(v92 - 8);
  __chkstk_darwin(v92, v13);
  uint64_t v93 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_100003918(&qword_10020CC28);
  unint64_t v108 = *(void *)(v98 - 8);
  __chkstk_darwin(v98, v15);
  v97 = (char *)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100003918(&qword_10020CA38);
  __chkstk_darwin(v17 - 8, v18);
  os_log_type_t v20 = (char *)&v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100003918(&qword_10020CA40);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21, v23);
  uint64_t v25 = (char *)&v79 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v26 = sub_100054BC0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v28 = sub_1000BDF30(&qword_10020CA30, v27, (void (*)(uint64_t))type metadata accessor for TC2AttestationStore);
  uint64_t v94 = v1;
  id v95 = v0;
  sub_1001C0930();
  uint64_t v29 = sub_100003918(&qword_10020CA48);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v20, 1, 1, v29);
  type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry(0);
  uint64_t v30 = sub_1000BDF30(&qword_100207A20, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  sub_1001C09F0();
  uint64_t v31 = sub_1001C0980();
  uint64_t v101 = 0;
  unint64_t v38 = v31;
  uint64_t v39 = v106;
  uint64_t v91 = v30;
  uint64_t v90 = v28;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v21);
  swift_release();
  unint64_t v83 = v38;
  if (v38 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_1001C1590();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v41 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v42 = (uint64_t)v105;
  uint64_t v43 = v96;
  uint64_t v44 = v97;
  uint64_t v45 = v98;
  if (!v41)
  {
LABEL_44:
    swift_bridgeObjectRelease();
    return v26;
  }
  unint64_t v46 = 0;
  unint64_t v89 = v83 & 0xC000000000000001;
  uint64_t v81 = v83 & 0xFFFFFFFFFFFFFF8;
  unint64_t v80 = v83 + 32;
  uint64_t v88 = (void (**)(char *, char *, uint64_t))(v108 + 16);
  uint64_t v87 = (void (**)(char *, void, uint64_t, uint64_t))(v108 + 56);
  uint64_t v86 = (void (**)(char *, uint64_t))(v39 + 1);
  id v106 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v100 + 48);
  uint64_t v103 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v100 + 56);
  uint64_t v84 = (void (**)(char *, uint64_t))(v108 + 8);
  *(void *)&long long v40 = 138412290;
  long long v79 = v40;
  uint64_t v85 = v41;
  while (v89)
  {
    uint64_t v102 = sub_1001C1440();
    BOOL v47 = __OFADD__(v46, 1);
    unint64_t v48 = v46 + 1;
    if (v47) {
      goto LABEL_46;
    }
LABEL_14:
    unint64_t v99 = v48;
    unint64_t v110 = v102;
    swift_getKeyPath();
    sub_1000BDF30(&qword_10020C738, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
    sub_1001BF410();
    swift_release();
    swift_getKeyPath();
    sub_1000D448C(&qword_10020CA50, &qword_10020C6F0);
    sub_1001C0A40();
    uint64_t v49 = swift_release();
    unint64_t v50 = v110;
    __chkstk_darwin(v49, v51);
    *((void *)&v79 - 2) = v50;
    uint64_t v112 = type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry(0);
    sub_1001BF3F0();
    swift_bridgeObjectRelease();
    sub_1001C0930();
    (*v88)(v43, v44, v45);
    (*v87)(v43, 0, 1, v45);
    sub_1000BDF30(&qword_100207A30, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
    uint64_t v52 = v93;
    sub_1001C09F0();
    uint64_t v53 = v101;
    uint64_t v54 = sub_1001C0980();
    if (v53)
    {
      (*v86)(v52, v92);
      swift_release();
      if (qword_100207970 != -1) {
        swift_once();
      }
      uint64_t v55 = sub_1001C0340();
      sub_10000D978(v55, (uint64_t)qword_10020C6C0);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v56 = sub_1001C0330();
      os_log_type_t v57 = sub_1001C11F0();
      BOOL v58 = os_log_type_enabled(v56, v57);
      uint64_t v43 = v96;
      if (v58)
      {
        uint64_t v59 = swift_slowAlloc();
        uint64_t v60 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v59 = v79;
        swift_errorRetain();
        uint64_t v61 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v59 + 4) = v61;
        void *v60 = v61;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v56, v57, "failed to query attestations error: %@", (uint8_t *)v59, 0xCu);
        sub_100003918(&qword_100207DA8);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_release();
      }
      else
      {

        swift_release();
        swift_errorRelease();
        swift_errorRelease();
      }
      swift_errorRelease();
      uint64_t v101 = 0;
      goto LABEL_38;
    }
    unint64_t v62 = v54;
    (*v86)(v52, v92);
    swift_release();
    if (v62 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v63 = sub_1001C1590();
      swift_bridgeObjectRelease();
      uint64_t v101 = 0;
      if (v63)
      {
LABEL_21:
        if (v63 < 1) {
          goto LABEL_48;
        }
        uint64_t v82 = &v79;
        uint64_t v64 = 0;
        unint64_t v108 = v62 & 0xC000000000000001;
        do
        {
          if (v108)
          {
            uint64_t v68 = sub_1001C1440();
          }
          else
          {
            uint64_t v68 = *(void *)(v62 + 8 * v64 + 32);
            swift_retain();
          }
          unint64_t v110 = v68;
          swift_getKeyPath();
          sub_1000BDF30(&qword_10020C748, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
          sub_1001BF410();
          swift_release();
          swift_getKeyPath();
          sub_1001C0A40();
          swift_release();
          uint64_t v70 = v110;
          uint64_t v69 = v111;
          uint64_t v71 = swift_retain();
          uint64_t v72 = v107;
          sub_1001A01E8(v71, v107);
          if ((*v106)(v72, 1, v109) == 1)
          {
            sub_100010360(v72, &qword_10020CCE8);
            swift_bridgeObjectRetain();
            unint64_t v73 = sub_100169E3C(v70, v69);
            char v75 = v74;
            swift_bridgeObjectRelease();
            if (v75)
            {
              int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              unint64_t v110 = v26;
              if (!isUniquelyReferenced_nonNull_native)
              {
                sub_1000EC8EC();
                unint64_t v26 = v110;
              }
              swift_bridgeObjectRelease();
              sub_1000D479C(*(void *)(v26 + 56) + *(void *)(v100 + 72) * v73, v42);
              sub_10018E700(v73, v26);
              swift_bridgeObjectRelease();
              uint64_t v77 = 0;
            }
            else
            {
              uint64_t v77 = 1;
            }
            (*v103)(v42, v77, 1, v109);
            swift_bridgeObjectRelease();
            sub_100010360(v42, &qword_10020CCE8);
            swift_release();
          }
          else
          {
            uint64_t v65 = v104;
            sub_1000D479C(v72, v104);
            char v66 = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v110 = v26;
            uint64_t v67 = v65;
            uint64_t v42 = (uint64_t)v105;
            sub_1000EABAC(v67, v70, v69, v66);
            unint64_t v26 = v110;
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          ++v64;
        }
        while (v63 != v64);
      }
    }
    else
    {
      uint64_t v63 = *(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v101 = 0;
      if (v63) {
        goto LABEL_21;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v43 = v96;
LABEL_38:
    uint64_t v44 = v97;
    uint64_t v45 = v98;
    (*v84)(v97, v98);
    unint64_t v46 = v99;
    if (v99 == v85) {
      goto LABEL_44;
    }
  }
  if (v46 >= *(void *)(v81 + 16)) {
    goto LABEL_47;
  }
  uint64_t v102 = *(void *)(v80 + 8 * v46);
  swift_retain();
  BOOL v47 = __OFADD__(v46, 1);
  unint64_t v48 = v46 + 1;
  if (!v47) {
    goto LABEL_14;
  }
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
  swift_once();
  uint64_t v32 = sub_1001C0340();
  sub_10000D978(v32, (uint64_t)qword_10020C6C0);
  swift_errorRetain();
  swift_errorRetain();
  unint64_t v33 = sub_1001C0330();
  os_log_type_t v34 = sub_1001C11F0();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v35 = 138412290;
    swift_errorRetain();
    uint64_t v37 = _swift_stdlib_bridgeErrorToNSError();
    unint64_t v110 = v37;
    sub_1001C1310();
    *uint64_t v36 = v37;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "failed to query attestations error: %@", v35, 0xCu);
    sub_100003918(&qword_100207DA8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  unint64_t v26 = sub_100054BC0((uint64_t)_swiftEmptyArrayStorage);
  swift_errorRelease();
  return v26;
}

uint64_t sub_1000C55F8@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_100003918(&qword_10020CC40);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100003918(&qword_10020CC48);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v22 = v9;
  uint64_t v23 = v10;
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100003918(&qword_10020CCF0);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a1;
  sub_100003918(&qword_10020C6F0);
  sub_1001BEFB0();
  sub_100016710(&qword_10020CC58, &qword_10020CC40);
  sub_1001BEFC0();
  swift_getKeyPath();
  sub_1001BEF50();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  a2[3] = sub_100003918(&qword_10020CCF8);
  a2[4] = sub_1000D4800();
  sub_10000395C(a2);
  sub_100016710(&qword_10020CD10, &qword_10020CCF0);
  sub_100016710(&qword_10020CC60, &qword_10020CC48);
  sub_100016710(&qword_10020CD18, &qword_10020C6F0);
  uint64_t v19 = v22;
  sub_1001BEF60();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
}

unint64_t sub_1000C596C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v184 = a3;
  uint64_t v176 = *v3;
  uint64_t v6 = sub_100003918(qword_100208CD0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v147 = (char *)v129 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v186 = type metadata accessor for ValidatedAttestation();
  uint64_t v181 = *(void *)(v186 - 8);
  __chkstk_darwin(v186, v9);
  uint64_t v180 = (uint64_t)v129 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100003918(&qword_10020CCE8);
  uint64_t v13 = __chkstk_darwin(v11 - 8, v12);
  uint64_t v174 = (uint64_t)v129 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13, v15);
  uint64_t v179 = (uint64_t)v129 - v17;
  __chkstk_darwin(v16, v18);
  uint64_t v182 = (uint64_t)v129 - v19;
  uint64_t v20 = sub_100003918(&qword_10020CC18);
  __chkstk_darwin(v20 - 8, v21);
  uint64_t v168 = (char *)v129 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v166 = sub_100003918(&qword_10020CC20);
  uint64_t v178 = *(void **)(v166 - 8);
  __chkstk_darwin(v166, v23);
  uint64_t v167 = (char *)v129 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100003918(&qword_10020CC28);
  uint64_t v177 = *(char **)(v25 - 8);
  __chkstk_darwin(v25, v26);
  uint64_t v165 = (char *)v129 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_100003918(&qword_10020CA38);
  __chkstk_darwin(v28 - 8, v29);
  uint64_t v185 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)v129 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v137 = sub_100003918(&qword_10020CA40);
  uint64_t v136 = *(void *)(v137 - 8);
  __chkstk_darwin(v137, v31);
  unint64_t v33 = (char *)v129 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v34 = sub_100003918(&qword_10020CD70);
  Class isa = v34[-1].isa;
  __chkstk_darwin(v34, v36);
  unint64_t v38 = (char *)v129 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = sub_100003918(&qword_10020CA48);
  uint64_t v155 = *(void *)(v156 - 8);
  __chkstk_darwin(v156, v39);
  uint64_t v154 = (char *)v129 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = sub_1001BF2C0();
  uint64_t v138 = *(void *)(v139 - 8);
  __chkstk_darwin(v139, v41);
  uint64_t v173 = (char *)v129 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1001BF310();
  uint64_t v44 = *(char **)(v43 - 8);
  uint64_t v46 = __chkstk_darwin(v43, v45);
  uint64_t v145 = (char *)v129 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46, v48);
  unint64_t v50 = (unint64_t)v129 - v49;
  if (qword_100207970 != -1) {
    goto LABEL_59;
  }
  while (1)
  {
    uint64_t v149 = v38;
    uint64_t v150 = v33;
    uint64_t v151 = (uint64_t)isa;
    uint64_t v152 = v34;
    uint64_t v51 = sub_1001C0340();
    uint64_t v52 = sub_10000D978(v51, (uint64_t)qword_10020C6C0);
    uint64_t v53 = (void (*)(char *, uint64_t, uint64_t))*((void *)v44 + 2);
    uint64_t v144 = v44 + 16;
    uint64_t v143 = v53;
    v53((char *)v50, a2, v43);
    uint64_t v171 = v52;
    uint64_t v54 = sub_1001C0330();
    os_log_type_t v55 = sub_1001C1200();
    BOOL v56 = os_log_type_enabled(v54, v55);
    uint64_t v148 = a2;
    uint64_t v158 = (char *)v25;
    uint64_t v146 = v43;
    uint64_t v175 = v44;
    if (v56)
    {
      os_log_type_t v57 = (uint8_t *)swift_slowAlloc();
      uint64_t v58 = swift_slowAlloc();
      uint64_t v183 = a1;
      v193[0] = v58;
      *(_DWORD *)os_log_type_t v57 = 136315138;
      sub_1000BDF30(qword_100207DC0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v59 = sub_1001C1780();
      uint64_t v188 = sub_1000DF238(v59, v60, v193);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      uint64_t v142 = (void (*)(unint64_t, uint64_t))*((void *)v44 + 1);
      v142(v50, v43);
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "getAttestationsForRequest id: %s", v57, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v142 = (void (*)(unint64_t, uint64_t))*((void *)v44 + 1);
      v142(v50, v43);
    }

    sub_1001BF2B0();
    uint64_t v61 = sub_100023B38(v193);
    uint64_t v135 = v129;
    uint64_t v62 = v193[1];
    uint64_t v63 = v193[3];
    uint64_t v64 = v193[5];
    __chkstk_darwin(v61, v65);
    v129[-6] = v66;
    v129[-5] = v62;
    v129[-4] = v67;
    v129[-3] = v63;
    v129[-2] = v68;
    v129[-1] = v64;
    uint64_t v192 = type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry(0);
    uint64_t v69 = v154;
    sub_1001BF3F0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v191 = sub_100054BC0((uint64_t)_swiftEmptyArrayStorage);
    swift_getKeyPath();
    sub_1000BDF30(&qword_10020C540, 255, (void (*)(uint64_t))&type metadata accessor for Date);
    unint64_t v38 = v149;
    sub_1001BEEB0();
    uint64_t v70 = v155;
    uint64_t v71 = v185;
    uint64_t v72 = v156;
    (*(void (**)(unsigned int (**)(uint64_t, uint64_t, uint64_t), char *, uint64_t))(v155 + 16))(v185, v69, v156);
    (*(void (**)(unsigned int (**)(uint64_t, uint64_t, uint64_t), void, uint64_t, uint64_t))(v70 + 56))(v71, 0, 1, v72);
    sub_100003918(&qword_10020CD78);
    a2 = v151;
    unint64_t v73 = (*(unsigned __int8 *)(v151 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v151 + 80);
    uint64_t v74 = swift_allocObject();
    *(_OWORD *)(v74 + 16) = xmmword_1001CC760;
    (*(void (**)(unint64_t, char *, NSObject *))(a2 + 16))(v74 + v73, v38, v152);
    uint64_t v75 = sub_1000BDF30(&qword_100207A20, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
    sub_1001C09F0();
    uint64_t v77 = sub_1000BDF30(&qword_10020CA30, v76, (void (*)(uint64_t))type metadata accessor for TC2AttestationStore);
    Class isa = v176;
    os_log_type_t v34 = sub_1001C0930();
    unint64_t v78 = sub_1001C0980();
    uint64_t v183 = 0;
    uint64_t v170 = v77;
    uint64_t v169 = v75;
    swift_release();
    uint64_t v43 = v78;
    if (v78 >> 62)
    {
      swift_bridgeObjectRetain();
      a1 = sub_1001C1590();
      swift_bridgeObjectRelease();
    }
    else
    {
      a1 = *(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    unint64_t v33 = v158;
    uint64_t v44 = v165;
    uint64_t v25 = v169;
    if (!a1) {
      break;
    }
    unint64_t v164 = v78 & 0xC000000000000001;
    swift_beginAccess();
    unint64_t v50 = 0;
    uint64_t v141 = v43 & 0xFFFFFFFFFFFFFF8;
    uint64_t v140 = v43 + 32;
    uint64_t v163 = (void (**)(char *, char *, char *))(v177 + 16);
    uint64_t v162 = (void (**)(char *, void, uint64_t, char *))(v177 + 56);
    uint64_t v159 = (void (**)(char *, uint64_t))(v178 + 1);
    uint64_t v185 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v181 + 48);
    uint64_t v134 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v175 + 56);
    uint64_t v133 = v175 + 8;
    uint64_t v131 = &v188;
    uint64_t v160 = (void (**)(char *, char *))(v177 + 8);
    uint64_t v80 = v184;
    if (v184 <= 1) {
      uint64_t v80 = 1;
    }
    uint64_t v184 = v80 - 1;
    uint64_t v132 = (char *)&type metadata for () + 8;
    *(void *)&long long v79 = 136315650;
    long long v130 = v79;
    v129[1] = (char *)&type metadata for Any + 8;
    *(void *)&long long v79 = 138412290;
    long long v153 = v79;
    uint64_t v161 = v43;
    uint64_t v172 = a1;
    while (1)
    {
      if (v164)
      {
        a2 = sub_1001C1440();
        BOOL v81 = __OFADD__(v50++, 1);
        if (v81) {
          break;
        }
        goto LABEL_17;
      }
      if (v50 >= *(void *)(v141 + 16)) {
        goto LABEL_58;
      }
      a2 = *(void *)(v140 + 8 * v50);
      swift_retain();
      BOOL v81 = __OFADD__(v50++, 1);
      if (v81) {
        break;
      }
LABEL_17:
      uint64_t v177 = (char *)v50;
      uint64_t v82 = a2
          + OBJC_IVAR____TtCOO20privatecloudcomputed32TC2AttestationStoreMigrationPlan28TC2AttestationStoreSchema_v119TC2ParamsStoreEntry___observationRegistrar;
      uint64_t v188 = a2;
      swift_getKeyPath();
      uint64_t v83 = sub_1000BDF30(&qword_10020C738, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
      uint64_t v175 = (char *)v82;
      sub_1001BF410();
      swift_release();
      swift_getKeyPath();
      sub_1000D448C(&qword_10020CA50, &qword_10020C6F0);
      uint64_t v181 = a2;
      sub_1001C0A40();
      uint64_t v84 = swift_release();
      uint64_t v178 = v129;
      uint64_t v85 = v188;
      __chkstk_darwin(v84, v86);
      uint64_t v87 = v173;
      v129[-2] = v85;
      v129[-1] = v87;
      uint64_t v190 = type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry(0);
      sub_1001BF3F0();
      swift_bridgeObjectRelease();
      sub_1001C0930();
      uint64_t v88 = v168;
      (*v163)(v168, v44, v33);
      (*v162)(v88, 0, 1, v33);
      sub_1000BDF30(&qword_100207A30, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
      unint64_t v38 = v167;
      sub_1001C09F0();
      uint64_t v89 = v183;
      uint64_t v90 = sub_1001C0980();
      if (v89)
      {
        (*v159)(v38, v166);
        Class isa = v176;
        uint64_t v43 = v161;
LABEL_45:
        a1 = v172;
        uint64_t v183 = 0;
        swift_release();
        swift_errorRetain();
        swift_errorRetain();
        os_log_type_t v34 = sub_1001C0330();
        os_log_type_t v124 = sub_1001C11F0();
        unint64_t v38 = (char *)v124;
        if (os_log_type_enabled(v34, v124))
        {
          uint64_t v125 = swift_slowAlloc();
          a2 = (uint64_t)v33;
          unint64_t v126 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v125 = v153;
          swift_errorRetain();
          uint64_t v127 = _swift_stdlib_bridgeErrorToNSError();
          *(void *)(v125 + 4) = v127;
          *unint64_t v126 = v127;
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v34, (os_log_type_t)v38, "failed to query nodes, error: %@", (uint8_t *)v125, 0xCu);
          sub_100003918(&qword_100207DA8);
          swift_arrayDestroy();
          unint64_t v33 = (char *)a2;
          uint64_t v44 = v165;
          swift_slowDealloc();
          Class isa = v176;
          swift_slowDealloc();
          swift_release();
        }
        else
        {
          swift_release();

          swift_errorRelease();
          swift_errorRelease();
        }
        uint64_t v25 = v169;
        swift_errorRelease();
        (*v160)(v44, v33);
        goto LABEL_49;
      }
      unint64_t v91 = v90;
      uint64_t v157 = v83;
      uint64_t v183 = 0;
      (*v159)(v38, v166);
      swift_release();
      if (v91 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v92 = sub_1001C1590();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v92 = *(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      a2 = v181;
      os_log_type_t v34 = v175;
      a1 = v172;
      if (v92)
      {
        if ((v91 & 0xC000000000000001) != 0)
        {
          for (uint64_t i = 0; i != v92; ++i)
          {
            uint64_t v188 = sub_1001C1440();
            swift_getKeyPath();
            sub_1000BDF30(&qword_10020C748, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
            sub_1001BF410();
            swift_release();
            swift_getKeyPath();
            sub_1001C0A40();
            swift_release();
            uint64_t v94 = v188;
            uint64_t v95 = v189;
            uint64_t v96 = swift_retain();
            uint64_t v97 = v182;
            sub_1001A01E8(v96, v182);
            swift_beginAccess();
            if ((*v185)(v97, 1, v186) == 1)
            {
              unint64_t v38 = (char *)&qword_10020CCE8;
              sub_100010360(v97, &qword_10020CCE8);
              uint64_t v98 = v179;
              sub_10018DAF8(v94, v95, v179);
              swift_bridgeObjectRelease();
              sub_100010360(v98, &qword_10020CCE8);
            }
            else
            {
              uint64_t v99 = v180;
              sub_1000D479C(v97, v180);
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v187 = v191;
              unint64_t v191 = 0x8000000000000000;
              sub_1000EABAC(v99, v94, v95, isUniquelyReferenced_nonNull_native);
              unint64_t v191 = v187;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_endAccess();
            swift_unknownObjectRelease();
            if (v184 == i) {
              break;
            }
          }
        }
        else
        {
          for (uint64_t j = 0; j != v92; ++j)
          {
            uint64_t v188 = *(void *)(v91 + 8 * j + 32);
            swift_getKeyPath();
            sub_1000BDF30(&qword_10020C748, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
            swift_retain();
            sub_1001BF410();
            swift_release();
            swift_getKeyPath();
            sub_1001C0A40();
            swift_release();
            uint64_t v103 = v188;
            uint64_t v102 = v189;
            uint64_t v104 = swift_retain();
            uint64_t v105 = v174;
            sub_1001A01E8(v104, v174);
            swift_beginAccess();
            if ((*v185)(v105, 1, v186) == 1)
            {
              unint64_t v38 = (char *)&qword_10020CCE8;
              sub_100010360(v105, &qword_10020CCE8);
              uint64_t v106 = v179;
              sub_10018DAF8(v103, v102, v179);
              swift_bridgeObjectRelease();
              sub_100010360(v106, &qword_10020CCE8);
            }
            else
            {
              uint64_t v107 = v180;
              sub_1000D479C(v105, v180);
              char v108 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v187 = v191;
              unint64_t v191 = 0x8000000000000000;
              sub_1000EABAC(v107, v103, v102, v108);
              unint64_t v191 = v187;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_endAccess();
            swift_release();
            if (v184 == j) {
              break;
            }
          }
        }
        swift_bridgeObjectRelease();
        unint64_t v33 = v158;
        uint64_t v44 = v165;
        a1 = v172;
        a2 = v181;
        os_log_type_t v34 = v175;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v109 = v183;
      if (*(void *)(v191 + 16))
      {
        uint64_t v110 = (uint64_t)v147;
        uint64_t v111 = v148;
        uint64_t v112 = v146;
        uint64_t v113 = v143;
        v143(v147, v148, v146);
        (*v134)(v110, 0, 1, v112);
        uint64_t v188 = a2;
        uint64_t KeyPath = swift_getKeyPath();
        __chkstk_darwin(KeyPath, v115);
        v129[-2] = a2;
        v129[-1] = v110;
        sub_1001BF400();
        uint64_t v183 = v109;
        swift_release();
        sub_100010360(v110, qword_100208CD0);
        long long v116 = v145;
        v113(v145, v111, v112);
        swift_retain_n();
        uint64_t v117 = sub_1001C0330();
        os_log_type_t v118 = sub_1001C1200();
        if (os_log_type_enabled(v117, v118))
        {
          uint64_t v119 = swift_slowAlloc();
          uint64_t v188 = swift_slowAlloc();
          *(_DWORD *)uint64_t v119 = v130;
          sub_1000BDF30(qword_100207DC0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v120 = sub_1001C1780();
          uint64_t v187 = sub_1000DF238(v120, v121, &v188);
          sub_1001C1310();
          swift_bridgeObjectRelease();
          v142((unint64_t)v116, v112);
          *(_WORD *)(v119 + 12) = 2048;
          uint64_t v187 = a2;
          swift_getKeyPath();
          sub_1001BF410();
          swift_release();
          swift_getKeyPath();
          sub_1001C0A40();
          swift_release();
          swift_release();
          sub_1001C1310();
          swift_release();
          *(_WORD *)(v119 + 22) = 2048;
          uint64_t v187 = *(void *)(v191 + 16);
          sub_1001C1310();
          _os_log_impl((void *)&_mh_execute_header, v117, v118, "getAttestationsForRequest %s returned batch: %lu nodes count: %ld", (uint8_t *)v119, 0x20u);
          swift_arrayDestroy();
          uint64_t v44 = v165;
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v43 = v161;
        }
        else
        {
          swift_release();
          v142((unint64_t)v116, v112);

          swift_release();
          uint64_t v43 = v161;
          uint64_t v44 = v165;
        }
        Class isa = v176;
        sub_1001C0930();
        char v122 = sub_1001C0960();
        swift_release();
        if ((v122 & 1) == 0)
        {
          unint64_t v33 = v158;
LABEL_56:
          swift_release();
          (*v160)(v44, v33);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v136 + 8))(v150, v137);
          (*(void (**)(char *, NSObject *))(v151 + 8))(v149, v152);
          (*(void (**)(char *, uint64_t))(v155 + 8))(v154, v156);
          (*(void (**)(char *, uint64_t))(v138 + 8))(v173, v139);
          goto LABEL_53;
        }
        sub_1001C0930();
        uint64_t v123 = v183;
        sub_1001C0970();
        unint64_t v33 = v158;
        if (!v123)
        {
          swift_release();
          goto LABEL_56;
        }
        goto LABEL_45;
      }
      (*v160)(v44, v33);
      swift_release();
      Class isa = v176;
      uint64_t v25 = v169;
      uint64_t v43 = v161;
LABEL_49:
      unint64_t v50 = (unint64_t)v177;
      if (v177 == (char *)a1) {
        goto LABEL_52;
      }
    }
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    swift_once();
  }
LABEL_52:
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v136 + 8))(v150, v137);
  (*(void (**)(char *, NSObject *))(v151 + 8))(v149, v152);
  (*(void (**)(char *, uint64_t))(v155 + 8))(v154, v156);
  (*(void (**)(char *, uint64_t))(v138 + 8))(v173, v139);
LABEL_53:
  swift_beginAccess();
  return v191;
}

uint64_t sub_1000C77AC@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, void (*a3)(void, void)@<X2>, void *a4@<X3>, void *a5@<X4>, void *a6@<X5>, void *a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v95 = a7;
  uint64_t v94 = a6;
  uint64_t v93 = a5;
  uint64_t v92 = a4;
  char v108 = a3;
  uint64_t v89 = a2;
  uint64_t v107 = a8;
  uint64_t v9 = sub_100003918(&qword_10020CA58);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v103 = v9;
  uint64_t v104 = v10;
  __chkstk_darwin(v9, v11);
  uint64_t v100 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100003918(&qword_10020CA60);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v101 = v13;
  uint64_t v102 = v14;
  __chkstk_darwin(v13, v15);
  uint64_t v98 = (char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100003918(&qword_10020CA68);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v105 = v17;
  uint64_t v106 = v18;
  __chkstk_darwin(v17, v19);
  uint64_t v99 = (char *)&v81 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100003918(&qword_10020CA88);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v116 = v21;
  uint64_t v117 = v22;
  __chkstk_darwin(v21, v23);
  uint64_t v25 = (char *)&v81 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100003918(&qword_10020CA90);
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26, v28);
  uint64_t v30 = (char *)&v81 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v81 = v30;
  uint64_t v112 = sub_100003918(&qword_10020CA98);
  uint64_t v119 = *(void *)(v112 - 8);
  __chkstk_darwin(v112, v31);
  unint64_t v33 = (char *)&v81 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_100003918(&qword_10020CAA0);
  uint64_t v118 = *(void *)(v88 - 8);
  uint64_t v35 = __chkstk_darwin(v88, v34);
  uint64_t v87 = (char *)&v81 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35, v37);
  uint64_t v86 = (char *)&v81 - v38;
  uint64_t v90 = sub_100003918(&qword_10020CAA8);
  uint64_t v91 = *(void *)(v90 - 8);
  __chkstk_darwin(v90, v39);
  uint64_t v109 = (char *)&v81 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_100003918(&qword_10020CAB0);
  uint64_t v97 = *(void *)(v96 - 8);
  __chkstk_darwin(v96, v41);
  uint64_t v110 = (char *)&v81 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = *a1;
  uint64_t v111 = sub_100016710(&qword_10020CAC0, &qword_10020CA90);
  sub_1001BEFC0();
  swift_getKeyPath();
  sub_1001BEF50();
  swift_release();
  uint64_t v43 = *(void (**)(char *, uint64_t))(v27 + 8);
  uint64_t v113 = v27 + 8;
  long long v114 = v43;
  v43(v30, v26);
  uint64_t v120 = v89;
  unint64_t v121 = v108;
  sub_1001BEFB0();
  uint64_t v89 = &protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>;
  uint64_t v44 = sub_100016710(&qword_10020CAC8, &qword_10020CA98);
  uint64_t v45 = sub_100016710(&qword_10020CAD0, &qword_10020CA88);
  uint64_t v46 = v25;
  uint64_t v47 = v112;
  uint64_t v48 = v116;
  uint64_t v85 = v44;
  uint64_t v84 = v45;
  sub_1001BEF40();
  uint64_t v49 = v117 + 8;
  unint64_t v50 = *(void (**)(char *, uint64_t))(v117 + 8);
  v50(v46, v48);
  uint64_t v83 = v50;
  uint64_t v117 = v49;
  uint64_t v51 = *(void (**)(void, void))(v119 + 8);
  v119 += 8;
  char v108 = v51;
  v51(v33, v47);
  uint64_t v52 = v81;
  uint64_t v82 = v26;
  sub_1001BEFC0();
  swift_getKeyPath();
  sub_1001BEF50();
  swift_release();
  uint64_t v53 = v52;
  v114(v52, v26);
  uint64_t v120 = v92;
  unint64_t v121 = v93;
  uint64_t v54 = v46;
  sub_1001BEFB0();
  os_log_type_t v55 = v87;
  uint64_t v56 = v112;
  uint64_t v57 = v116;
  sub_1001BEF40();
  uint64_t v58 = v54;
  v50(v54, v57);
  v108(v33, v56);
  uint64_t v93 = &protocol conformance descriptor for PredicateExpressions.Equal<A, B>;
  sub_100016710(&qword_10020CAD8, &qword_10020CAA0);
  uint64_t v59 = v86;
  unint64_t v60 = v55;
  uint64_t v61 = v88;
  sub_1001BEF90();
  uint64_t v62 = *(void (**)(char *, uint64_t))(v118 + 8);
  v118 += 8;
  v62(v60, v61);
  v62(v59, v61);
  uint64_t v63 = v82;
  sub_1001BEFC0();
  swift_getKeyPath();
  sub_1001BEF50();
  swift_release();
  v114(v53, v63);
  uint64_t v120 = v94;
  unint64_t v121 = v95;
  sub_1001BEFB0();
  uint64_t v64 = v112;
  uint64_t v65 = v116;
  sub_1001BEF40();
  v83(v58, v65);
  v108(v33, v64);
  sub_100016710(&qword_10020CAE0, &qword_10020CAA8);
  uint64_t v66 = v109;
  uint64_t v67 = v90;
  sub_1001BEF90();
  v62(v59, v61);
  (*(void (**)(char *, uint64_t))(v91 + 8))(v66, v67);
  sub_1001BEFC0();
  swift_getKeyPath();
  uint64_t v68 = v98;
  sub_1001BEF50();
  swift_release();
  v114(v53, v63);
  sub_1001BF310();
  uint64_t v69 = v100;
  sub_1001BEF80();
  sub_100016710(&qword_10020CB08, &qword_10020CA60);
  sub_100016710(&qword_10020CB10, &qword_10020CA58);
  sub_1000D3D10(&qword_10020CB18, &qword_10020CB20);
  uint64_t v70 = v99;
  uint64_t v71 = v68;
  uint64_t v72 = v69;
  uint64_t v73 = v101;
  uint64_t v74 = v103;
  sub_1001BEF40();
  (*(void (**)(char *, uint64_t))(v104 + 8))(v72, v74);
  (*(void (**)(char *, uint64_t))(v102 + 8))(v71, v73);
  uint64_t v75 = sub_100003918(&qword_10020CD80);
  uint64_t v76 = v107;
  v107[3] = v75;
  v76[4] = sub_1000D4BB0(&qword_10020CD88, &qword_10020CD80, (void (*)(void))sub_1000D38B8, (void (*)(void))sub_1000D3C34);
  sub_10000395C(v76);
  sub_100016710(&qword_10020CAF8, &qword_10020CAB0);
  sub_100016710(&qword_10020CBA8, &qword_10020CA68);
  uint64_t v77 = v110;
  uint64_t v78 = v96;
  uint64_t v79 = v105;
  sub_1001BEF90();
  (*(void (**)(char *, uint64_t))(v106 + 8))(v70, v79);
  return (*(uint64_t (**)(char *, uint64_t))(v97 + 8))(v77, v78);
}

uint64_t sub_1000C8458@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v1 = sub_1001BEFA0();
  uint64_t v27 = *(void *)(v1 - 8);
  uint64_t v28 = v1;
  __chkstk_darwin(v1, v2);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100003918(&qword_10020CC40);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100003918(&qword_10020CC30);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v30 = v10;
  uint64_t v31 = v11;
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100003918(&qword_10020CA70);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001BF2C0();
  sub_1001BEFB0();
  sub_100016710(&qword_10020CC58, &qword_10020CC40);
  sub_1001BEFC0();
  swift_getKeyPath();
  sub_1001BEF50();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t v21 = v27;
  uint64_t v20 = v28;
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v4, enum case for PredicateExpressions.ComparisonOperator.greaterThan(_:), v28);
  uint64_t v22 = sub_100003918(&qword_10020CCD8);
  uint64_t v23 = v29;
  v29[3] = v22;
  v23[4] = sub_1000D46F8();
  sub_10000395C(v23);
  sub_100016710(&qword_10020CAF0, &qword_10020CA70);
  sub_100016710(&qword_10020CC68, &qword_10020CC30);
  sub_1000BDF30(&qword_10020C540, 255, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v24 = v30;
  sub_1001BEF70();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v20);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v24);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
}

uint64_t sub_1000C8890(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  uint64_t v37 = a2;
  uint64_t v38 = v3;
  uint64_t v4 = sub_100003918(&qword_10020CA38);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v39 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100003918(&qword_10020CA48);
  uint64_t v41 = *(void *)(v7 - 8);
  uint64_t v42 = v7;
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100023B38(v44);
  uint64_t v11 = v44[0];
  unint64_t v12 = v44[1];
  uint64_t v13 = v44[2];
  unint64_t v14 = v44[3];
  uint64_t v15 = v44[4];
  unint64_t v16 = v44[5];
  if (qword_100207970 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1001C0340();
  uint64_t v18 = sub_10000D978(v17, (uint64_t)qword_10020C6C0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v36 = v18;
  uint64_t v19 = sub_1001C0330();
  os_log_type_t v20 = sub_1001C1200();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v40 = v10;
  if (v21)
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v35 = v11;
    uint64_t v23 = v22;
    uint64_t v34 = swift_slowAlloc();
    v44[0] = v34;
    *(_DWORD *)uint64_t v23 = 136315906;
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_1000DF238(v35, v12, v44);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v23 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_1000DF238(v13, v14, v44);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v23 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_1000DF238(v15, v16, v44);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v23 + 32) = 2048;
    uint64_t v24 = v15;
    uint64_t v25 = v13;
    uint64_t v26 = v37;
    uint64_t v43 = v37;
    uint64_t v10 = v40;
    sub_1001C1310();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "deleteEntries: pipelineKind: %s, model: %s, adapter: %s, batchId: %lu", (uint8_t *)v23, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v11 = v35;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    uint64_t v27 = swift_bridgeObjectRelease_n();
    uint64_t v24 = v15;
    uint64_t v25 = v13;
    uint64_t v26 = v37;
  }
  __chkstk_darwin(v27, v28);
  *(&v34 - 8) = v11;
  *(&v34 - 7) = v12;
  *(&v34 - 6) = v25;
  *(&v34 - 5) = v14;
  *(&v34 - 4) = v24;
  *(&v34 - 3) = v16;
  *(&v34 - 2) = v26;
  v44[0] = type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry(0);
  sub_1001BF3F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000BDF30(&qword_10020CA30, v29, (void (*)(uint64_t))type metadata accessor for TC2AttestationStore);
  sub_1001C0930();
  uint64_t v31 = v41;
  uint64_t v30 = v42;
  uint64_t v32 = (uint64_t)v39;
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v39, v10, v42);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v31 + 56))(v32, 0, 1, v30);
  sub_1000BDF30(&qword_100207A20, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  sub_1001C0990();
  swift_release();
  sub_100010360(v32, &qword_10020CA38);
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v10, v42);
}

uint64_t sub_1000C8F50()
{
  uint64_t v0 = sub_100003918(&qword_10020CA38);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100003918(&qword_10020CC18);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100207970 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1001C0340();
  sub_10000D978(v8, (uint64_t)qword_10020C6C0);
  uint64_t v9 = sub_1001C0330();
  os_log_type_t v10 = sub_1001C1200();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "deleteAllAttestationStoreEntries", v11, 2u);
    swift_slowDealloc();
  }

  sub_1000BDF30(&qword_10020CA30, v12, (void (*)(uint64_t))type metadata accessor for TC2AttestationStore);
  sub_1001C0930();
  type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry(0);
  uint64_t v13 = sub_100003918(&qword_10020CC28);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v7, 1, 1, v13);
  sub_1000BDF30(&qword_100207A30, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  sub_1001C0990();
  sub_100010360((uint64_t)v7, &qword_10020CC18);
  swift_release();
  sub_1001C0930();
  type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry(0);
  uint64_t v14 = sub_100003918(&qword_10020CA48);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v3, 1, 1, v14);
  sub_1000BDF30(&qword_100207A20, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  sub_1001C0990();
  sub_100010360((uint64_t)v3, &qword_10020CA38);
  return swift_release();
}

uint64_t sub_1000C9418@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  uint64_t v4 = sub_100003918(&qword_10020CA88);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v23 = v4;
  uint64_t v24 = v5;
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100003918(&qword_10020CC40);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100003918(&qword_10020CC48);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100016710(&qword_10020CC58, &qword_10020CC40);
  sub_1001BEFC0();
  swift_getKeyPath();
  sub_1001BEF50();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  uint64_t v25 = v21;
  uint64_t v26 = v22;
  sub_1001BEFB0();
  a3[3] = sub_100003918(&qword_10020CC50);
  a3[4] = sub_1000D40CC();
  sub_10000395C(a3);
  sub_100016710(&qword_10020CC60, &qword_10020CC48);
  sub_100016710(&qword_10020CAD0, &qword_10020CA88);
  uint64_t v19 = v23;
  sub_1001BEF40();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
}

BOOL sub_1000C975C(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v38 = *v2;
  uint64_t v6 = sub_100003918(&qword_10020CC18);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_100003918(&qword_10020CC20);
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42, v10);
  uint64_t v41 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100003918(&qword_10020CC28);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_1001BF2C0();
  uint64_t v43 = *(void *)(v39 - 8);
  __chkstk_darwin(v39, v17);
  uint64_t v44 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100207970 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1001C0340();
  uint64_t v20 = sub_10000D978(v19, (uint64_t)qword_10020C6C0);
  swift_bridgeObjectRetain_n();
  uint64_t v36 = v20;
  uint64_t v21 = sub_1001C0330();
  os_log_type_t v22 = sub_1001C1200();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v37 = v16;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v35 = v12;
    uint64_t v24 = (uint8_t *)v23;
    uint64_t v46 = swift_slowAlloc();
    uint64_t v34 = v3;
    *(_DWORD *)uint64_t v24 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_1000DF238(a1, a2, &v46);
    uint64_t v16 = v37;
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "nodeExists: checking if %s node exists", v24, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v12 = v35;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v25 = v44;
  uint64_t v26 = sub_1001BF2B0();
  uint64_t v37 = (char *)&v34;
  __chkstk_darwin(v26, v27);
  *(&v34 - 4) = (void *)a1;
  *(&v34 - 3) = (void *)a2;
  *(&v34 - 2) = v25;
  uint64_t v46 = type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry(0);
  sub_1001BF3F0();
  sub_1000BDF30(&qword_10020CA30, v28, (void (*)(uint64_t))type metadata accessor for TC2AttestationStore);
  sub_1001C0930();
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v9, v16, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
  sub_1000BDF30(&qword_100207A30, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  uint64_t v29 = v41;
  sub_1001C09F0();
  uint64_t v30 = sub_1001C0950();
  uint64_t v31 = (void (**)(char *, uint64_t))(v40 + 8);
  uint64_t v32 = v30;
  swift_release();
  (*v31)(v29, v42);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v39);
  return v32 > 0;
}

uint64_t sub_1000C9E90@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v70 = a4;
  os_log_type_t v55 = a3;
  unint64_t v60 = a2;
  uint64_t v76 = a5;
  uint64_t v69 = sub_1001BEFA0();
  uint64_t v67 = *(void *)(v69 - 8);
  __chkstk_darwin(v69, v6);
  uint64_t v66 = (char *)v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100003918(&qword_10020CA70);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v72 = v8;
  uint64_t v73 = v9;
  __chkstk_darwin(v8, v10);
  uint64_t v62 = (char *)v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_100003918(&qword_10020CC30);
  uint64_t v71 = *(void *)(v68 - 8);
  __chkstk_darwin(v68, v12);
  uint64_t v61 = (char *)v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100003918(&qword_10020CC38);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v74 = v14;
  uint64_t v75 = v15;
  __chkstk_darwin(v14, v16);
  uint64_t v63 = (char *)v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_100003918(&qword_10020CA88);
  uint64_t v58 = *(void *)(v57 - 8);
  __chkstk_darwin(v57, v18);
  uint64_t v20 = (char *)v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100003918(&qword_10020CC40);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21, v23);
  uint64_t v25 = (char *)v54 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_100003918(&qword_10020CC48);
  uint64_t v26 = *(void *)(v56 - 8);
  __chkstk_darwin(v56, v27);
  uint64_t v29 = (char *)v54 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100003918(&qword_10020CC50);
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v64 = v30;
  uint64_t v65 = v31;
  __chkstk_darwin(v30, v32);
  uint64_t v59 = (char *)v54 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54[2] = *a1;
  sub_100016710(&qword_10020CC58, &qword_10020CC40);
  sub_1001BEFC0();
  swift_getKeyPath();
  sub_1001BEF50();
  swift_release();
  uint64_t v34 = v22 + 8;
  uint64_t v35 = *(void (**)(char *, uint64_t))(v22 + 8);
  v54[1] = v34;
  v35(v25, v21);
  uint64_t v77 = v60;
  uint64_t v78 = v55;
  sub_1001BEFB0();
  unint64_t v60 = &protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>;
  sub_100016710(&qword_10020CC60, &qword_10020CC48);
  os_log_type_t v55 = &protocol conformance descriptor for PredicateExpressions.Value<A>;
  sub_100016710(&qword_10020CAD0, &qword_10020CA88);
  uint64_t v36 = v56;
  uint64_t v37 = v57;
  sub_1001BEF40();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v20, v37);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v29, v36);
  sub_1001BEFC0();
  swift_getKeyPath();
  uint64_t v38 = v61;
  sub_1001BEF50();
  swift_release();
  v35(v25, v21);
  sub_1001BF2C0();
  uint64_t v39 = v62;
  sub_1001BEFB0();
  uint64_t v41 = v66;
  uint64_t v40 = v67;
  uint64_t v42 = v69;
  (*(void (**)(char *, void, uint64_t))(v67 + 104))(v66, enum case for PredicateExpressions.ComparisonOperator.greaterThanOrEqual(_:), v69);
  sub_100016710(&qword_10020CC68, &qword_10020CC30);
  sub_100016710(&qword_10020CAF0, &qword_10020CA70);
  sub_1000BDF30(&qword_10020C540, 255, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v43 = v63;
  uint64_t v44 = v38;
  uint64_t v45 = v39;
  uint64_t v46 = v68;
  uint64_t v47 = v72;
  sub_1001BEF70();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v42);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v45, v47);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v44, v46);
  uint64_t v48 = sub_100003918(&qword_10020CC70);
  uint64_t v49 = v76;
  v76[3] = v48;
  v49[4] = sub_1000D4BB0(&qword_10020CC78, &qword_10020CC70, (void (*)(void))sub_1000D40CC, (void (*)(void))sub_1000D4188);
  sub_10000395C(v49);
  sub_100016710(&qword_10020CCA8, &qword_10020CC50);
  sub_100016710(&qword_10020CCB0, &qword_10020CC38);
  unint64_t v50 = v59;
  uint64_t v51 = v64;
  uint64_t v52 = v74;
  sub_1001BEF90();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v43, v52);
  return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v50, v51);
}

uint64_t sub_1000CA738(uint64_t a1, uint64_t a2, unint64_t a3, char a4, void *a5, uint64_t a6)
{
  if (qword_100207970 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1001C0340();
  sub_10000D978(v12, (uint64_t)qword_10020C6C0);
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_1001C0330();
  os_log_type_t v14 = sub_1001C1200();
  uint64_t v31 = a6;
  char v30 = a4;
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    v33[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315138;
    swift_bridgeObjectRetain();
    sub_1000DF238(a2, a3, v33);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "trackNodeForParameters: checking if %s node tracks params", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  char v16 = sub_1000CAEA4(a1, a2, a3, (uint64_t)a5);
  if ((v16 & 1) == 0)
  {
    uint64_t v17 = sub_1000C39C0(a1, (uint64_t)a5);
    if (v17)
    {
      uint64_t v18 = v17;
      uint64_t v32 = a2;
      v33[0] = v17;
      swift_getKeyPath();
      sub_1000BDF30(&qword_10020C738, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
      swift_bridgeObjectRetain();
      sub_1001BF410();
      swift_release();
      swift_getKeyPath();
      sub_1000BDF30(&qword_100207A20, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
      sub_1000D448C(&qword_10020CA50, &qword_10020C6F0);
      sub_1001C0A40();
      swift_release();
      uint64_t v19 = (char *)v33[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v19 = sub_1000E3F44(0, *((void *)v19 + 2) + 1, 1, v19);
      }
      unint64_t v21 = *((void *)v19 + 2);
      unint64_t v20 = *((void *)v19 + 3);
      if (v21 >= v20 >> 1) {
        uint64_t v19 = sub_1000E3F44((char *)(v20 > 1), v21 + 1, 1, v19);
      }
      *((void *)v19 + 2) = v21 + 1;
      uint64_t v22 = &v19[16 * v21];
      *((void *)v22 + 4) = v32;
      *((void *)v22 + 5) = a3;
      v33[0] = v18;
      uint64_t KeyPath = swift_getKeyPath();
      __chkstk_darwin(KeyPath, v24);
      sub_1001BF400();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      uint64_t v26 = sub_1001C0330();
      os_log_type_t v27 = sub_1001C1200();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = (uint8_t *)swift_slowAlloc();
        v33[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v28 = 136315138;
        swift_bridgeObjectRetain();
        sub_1000DF238(a2, a3, v33);
        sub_1001C1310();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "Linking %s to ...", v28, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_1000C4250(a1, a2, a3, v30 & 1, a5, v31);
    }
    sub_1000BDF30(&qword_10020CA30, v25, (void (*)(uint64_t))type metadata accessor for TC2AttestationStore);
    sub_1001C0930();
    sub_1001C0970();
    swift_release();
  }
  return v16 & 1;
}

uint64_t sub_1000CAEA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v45 = a2;
  uint64_t v46 = a3;
  uint64_t v50 = *v4;
  uint64_t v51 = v4;
  uint64_t v6 = sub_100003918(&qword_10020CA38);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100003918(&qword_10020CA40);
  uint64_t v53 = *(void *)(v10 - 8);
  uint64_t v54 = v10;
  __chkstk_darwin(v10, v11);
  uint64_t v52 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100003918(&qword_10020CA48);
  uint64_t v55 = *(void *)(v13 - 8);
  uint64_t v56 = v13;
  __chkstk_darwin(v13, v14);
  char v16 = (char *)v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100023B38(v58);
  uint64_t v17 = v58[0];
  unint64_t v18 = v58[1];
  unint64_t v19 = v58[3];
  unint64_t v20 = v58[5];
  uint64_t v48 = v58[4];
  uint64_t v49 = (void *)v58[2];
  if (qword_100207970 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_1001C0340();
  uint64_t v22 = sub_10000D978(v21, (uint64_t)qword_10020C6C0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v47 = v22;
  uint64_t v23 = sub_1001C0330();
  os_log_type_t v24 = sub_1001C1200();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v42 = a4;
    uint64_t v26 = v25;
    v41[0] = swift_slowAlloc();
    v58[0] = v41[0];
    *(_DWORD *)uint64_t v26 = 136315650;
    uint64_t v43 = v9;
    swift_bridgeObjectRetain();
    v41[1] = v17;
    uint64_t v57 = (void *)sub_1000DF238(v17, v18, v58);
    uint64_t v44 = v16;
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v26 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v27 = (uint64_t)v49;
    uint64_t v57 = (void *)sub_1000DF238((uint64_t)v49, v19, v58);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v26 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v28 = v48;
    uint64_t v57 = (void *)sub_1000DF238(v48, v20, v58);
    char v16 = v44;
    uint64_t v9 = v43;
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "nodeExistsInBatch: %s %s %s", (uint8_t *)v26, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a4 = v42;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    uint64_t v29 = swift_bridgeObjectRelease_n();
    uint64_t v28 = v48;
    uint64_t v27 = (uint64_t)v49;
  }
  uint64_t v49 = v41;
  __chkstk_darwin(v29, v30);
  v41[-8] = v31;
  v41[-7] = v18;
  v41[-6] = v27;
  v41[-5] = v19;
  v41[-4] = v28;
  v41[-3] = v20;
  v41[-2] = a4;
  v58[0] = type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry(0);
  sub_1001BF3F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000BDF30(&qword_10020CA30, v32, (void (*)(uint64_t))type metadata accessor for TC2AttestationStore);
  sub_1001C0930();
  uint64_t v34 = v55;
  uint64_t v33 = v56;
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v9, v16, v56);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v9, 0, 1, v33);
  sub_1000BDF30(&qword_100207A20, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  uint64_t v35 = v52;
  sub_1001C09F0();
  unint64_t v36 = sub_1001C0980();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v35, v54);
  uint64_t result = swift_release();
  if (!(v36 >> 62))
  {
    if (*(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_8;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v16, v56);
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v40 = sub_1001C1590();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v40) {
    goto LABEL_15;
  }
LABEL_8:
  if ((v36 & 0xC000000000000001) != 0)
  {
    uint64_t v38 = (void *)sub_1001C1440();
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t v57 = v38;
    swift_getKeyPath();
    sub_1000BDF30(&qword_10020C738, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
    sub_1001BF410();
    swift_release();
    swift_getKeyPath();
    sub_1000D448C(&qword_10020CA50, &qword_10020C6F0);
    sub_1001C0A40();
    swift_release();
    char v39 = sub_1000C4188(v45, v46, v57);
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v16, v56);
    return (v39 & 1) != 0;
  }
  if (*(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v38 = *(void **)(v36 + 32);
    swift_retain();
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000CB798@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void (*a3)(void, void)@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, void *a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v98 = a8;
  uint64_t v92 = a7;
  uint64_t v91 = a6;
  uint64_t v89 = a5;
  uint64_t v88 = a4;
  uint64_t v105 = a2;
  uint64_t v106 = a3;
  uint64_t v104 = a9;
  uint64_t v10 = sub_100003918(&qword_10020CBC0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v100 = v10;
  uint64_t v101 = v11;
  __chkstk_darwin(v10, v12);
  uint64_t v96 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_100003918(&qword_10020CBC8);
  uint64_t v99 = *(void *)(v97 - 8);
  __chkstk_darwin(v97, v14);
  uint64_t v94 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100003918(&qword_10020CBD0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v102 = v16;
  uint64_t v103 = v17;
  __chkstk_darwin(v16, v18);
  uint64_t v95 = (char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100003918(&qword_10020CA88);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v114 = v20;
  uint64_t v115 = v21;
  __chkstk_darwin(v20, v22);
  os_log_type_t v24 = (char *)&v77 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100003918(&qword_10020CA90);
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25, v27);
  uint64_t v29 = (char *)&v77 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_100003918(&qword_10020CA98);
  uint64_t v117 = *(void *)(v110 - 8);
  __chkstk_darwin(v110, v30);
  uint64_t v32 = (char *)&v77 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_100003918(&qword_10020CAA0);
  uint64_t v116 = *(void *)(v83 - 8);
  uint64_t v34 = __chkstk_darwin(v83, v33);
  uint64_t v82 = (char *)&v77 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34, v36);
  BOOL v81 = (char *)&v77 - v37;
  uint64_t v86 = sub_100003918(&qword_10020CAA8);
  uint64_t v87 = *(void *)(v86 - 8);
  __chkstk_darwin(v86, v38);
  uint64_t v107 = (char *)&v77 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_100003918(&qword_10020CAB0);
  uint64_t v93 = *(void *)(v90 - 8);
  __chkstk_darwin(v90, v40);
  char v108 = (char *)&v77 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = *a1;
  uint64_t v42 = v29;
  uint64_t v109 = sub_100016710(&qword_10020CAC0, &qword_10020CA90);
  sub_1001BEFC0();
  swift_getKeyPath();
  uint64_t v43 = v25;
  sub_1001BEF50();
  swift_release();
  uint64_t v44 = *(void (**)(char *, uint64_t))(v26 + 8);
  uint64_t v111 = v26 + 8;
  uint64_t v112 = v44;
  v44(v42, v25);
  uint64_t v118 = v105;
  uint64_t v119 = v106;
  uint64_t v45 = v24;
  sub_1001BEFB0();
  uint64_t v85 = &protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>;
  uint64_t v105 = sub_100016710(&qword_10020CAC8, &qword_10020CA98);
  uint64_t v84 = &protocol conformance descriptor for PredicateExpressions.Value<A>;
  uint64_t v46 = sub_100016710(&qword_10020CAD0, &qword_10020CA88);
  uint64_t v47 = v110;
  uint64_t v48 = v114;
  uint64_t v80 = v46;
  sub_1001BEF40();
  uint64_t v49 = v115 + 8;
  uint64_t v106 = *(void (**)(void, void))(v115 + 8);
  v106(v45, v48);
  uint64_t v115 = v49;
  uint64_t v50 = *(void (**)(char *, uint64_t))(v117 + 8);
  v117 += 8;
  v50(v32, v47);
  uint64_t v79 = v50;
  uint64_t v78 = v42;
  sub_1001BEFC0();
  swift_getKeyPath();
  sub_1001BEF50();
  swift_release();
  v112(v42, v25);
  uint64_t v118 = v88;
  uint64_t v119 = v89;
  uint64_t v51 = v45;
  sub_1001BEFB0();
  uint64_t v52 = v82;
  uint64_t v53 = v110;
  uint64_t v54 = v114;
  sub_1001BEF40();
  v106(v51, v54);
  v50(v32, v53);
  uint64_t v89 = &protocol conformance descriptor for PredicateExpressions.Equal<A, B>;
  sub_100016710(&qword_10020CAD8, &qword_10020CAA0);
  uint64_t v55 = v81;
  uint64_t v56 = v52;
  uint64_t v57 = v83;
  sub_1001BEF90();
  uint64_t v58 = *(void (**)(char *, uint64_t))(v116 + 8);
  v116 += 8;
  v58(v56, v57);
  v58(v55, v57);
  uint64_t v59 = v78;
  sub_1001BEFC0();
  swift_getKeyPath();
  sub_1001BEF50();
  swift_release();
  v112(v59, v43);
  uint64_t v118 = v91;
  uint64_t v119 = v92;
  sub_1001BEFB0();
  uint64_t v60 = v110;
  uint64_t v61 = v114;
  sub_1001BEF40();
  v106(v51, v61);
  v79(v32, v60);
  sub_100016710(&qword_10020CAE0, &qword_10020CAA8);
  uint64_t v62 = v107;
  uint64_t v63 = v86;
  sub_1001BEF90();
  v58(v55, v57);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v62, v63);
  sub_1001BEFC0();
  swift_getKeyPath();
  uint64_t v64 = v94;
  sub_1001BEF50();
  swift_release();
  v112(v59, v43);
  uint64_t v118 = v98;
  uint64_t v65 = v96;
  sub_1001BEFB0();
  sub_100016710(&qword_10020CBD8, &qword_10020CBC8);
  sub_100016710(&qword_10020CBE0, &qword_10020CBC0);
  uint64_t v66 = v95;
  uint64_t v67 = v65;
  uint64_t v68 = v97;
  uint64_t v69 = v100;
  sub_1001BEF40();
  (*(void (**)(char *, uint64_t))(v101 + 8))(v67, v69);
  (*(void (**)(char *, uint64_t))(v99 + 8))(v64, v68);
  uint64_t v70 = sub_100003918(&qword_10020CBE8);
  uint64_t v71 = v104;
  v104[3] = v70;
  v71[4] = sub_1000D4BB0(&qword_10020CBF0, &qword_10020CBE8, (void (*)(void))sub_1000D38B8, (void (*)(void))sub_1000D3F84);
  sub_10000395C(v71);
  sub_100016710(&qword_10020CAF8, &qword_10020CAB0);
  sub_100016710(&qword_10020CC10, &qword_10020CBD0);
  uint64_t v72 = v108;
  uint64_t v73 = v66;
  uint64_t v74 = v90;
  uint64_t v75 = v102;
  sub_1001BEF90();
  (*(void (**)(char *, uint64_t))(v103 + 8))(v73, v75);
  return (*(uint64_t (**)(char *, uint64_t))(v93 + 8))(v72, v74);
}

BOOL sub_1000CC400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v59 = a2;
  uint64_t v61 = *v3;
  uint64_t v62 = v3;
  uint64_t v5 = sub_100003918(&qword_10020CA38);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v64 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100003918(&qword_10020CA40);
  uint64_t v65 = *(void *)(v8 - 8);
  uint64_t v66 = v8;
  __chkstk_darwin(v8, v9);
  uint64_t v63 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_100003918(&qword_10020CA48);
  uint64_t v11 = *(void *)(v70 - 8);
  __chkstk_darwin(v70, v12);
  uint64_t v67 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1001BF2C0();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100023B38(v72);
  unint64_t v19 = v72[1];
  unint64_t v20 = v72[3];
  uint64_t v68 = v72[2];
  uint64_t v69 = (uint64_t *)v72[0];
  uint64_t v22 = v72[4];
  unint64_t v21 = v72[5];
  if (qword_100207970 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_1001C0340();
  uint64_t v24 = sub_10000D978(v23, (uint64_t)qword_10020C6C0);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v60 = a3;
  v25(v18, a3, v14);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v58 = v24;
  uint64_t v26 = sub_1001C0330();
  os_log_type_t v27 = sub_1001C1200();
  int v57 = v27;
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = swift_slowAlloc();
    uint64_t v56 = v11;
    uint64_t v29 = v28;
    uint64_t v55 = swift_slowAlloc();
    v72[0] = v55;
    *(_DWORD *)uint64_t v29 = 136316162;
    os_log_t v54 = v26;
    swift_bridgeObjectRetain();
    uint64_t v71 = sub_1000DF238((uint64_t)v69, v19, v72);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    uint64_t v52 = v14;
    *(_WORD *)(v29 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v71 = sub_1000DF238(v68, v20, v72);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v29 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v53 = v22;
    uint64_t v71 = sub_1000DF238(v22, v21, v72);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v29 + 32) = 2048;
    uint64_t v71 = v59;
    sub_1001C1310();
    *(_WORD *)(v29 + 42) = 2080;
    sub_1000BDF30(&qword_10020C558, 255, (void (*)(uint64_t))&type metadata accessor for Date);
    unint64_t v30 = v21;
    unint64_t v31 = v20;
    unint64_t v32 = v19;
    uint64_t v33 = v18;
    uint64_t v34 = v52;
    uint64_t v35 = sub_1001C1780();
    uint64_t v71 = sub_1000DF238(v35, v36, v72);
    uint64_t v37 = (uint64_t)v69;
    sub_1001C1310();
    swift_bridgeObjectRelease();
    uint64_t v38 = v33;
    unint64_t v19 = v32;
    unint64_t v20 = v31;
    unint64_t v21 = v30;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v38, v34);
    os_log_t v39 = v54;
    _os_log_impl((void *)&_mh_execute_header, v54, (os_log_type_t)v57, "attestationsExist: pipeline: %s %s %s clientCacheSize: %ld, fetchTime: %s", (uint8_t *)v29, 0x34u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v11 = v56;
    swift_slowDealloc();

    uint64_t v22 = v53;
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);

    uint64_t v37 = (uint64_t)v69;
  }
  uint64_t v69 = &v52;
  __chkstk_darwin(v40, v41);
  *(&v52 - 8) = v37;
  *(&v52 - 7) = v19;
  *(&v52 - 6) = v42;
  *(&v52 - 5) = v20;
  *(&v52 - 4) = v22;
  *(&v52 - 3) = v21;
  *(&v52 - 2) = v60;
  v72[0] = type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry(0);
  uint64_t v43 = v67;
  sub_1001BF3F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000BDF30(&qword_10020CA30, v44, (void (*)(uint64_t))type metadata accessor for TC2AttestationStore);
  sub_1001C0930();
  uint64_t v45 = v64;
  uint64_t v46 = v70;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v64, v43, v70);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v45, 0, 1, v46);
  sub_1000BDF30(&qword_100207A20, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  uint64_t v47 = v63;
  sub_1001C09F0();
  unint64_t v48 = sub_1001C0980();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v47, v66);
  swift_release();
  uint64_t v49 = sub_1000BC120(v48);
  swift_bridgeObjectRelease();
  uint64_t v50 = v49[2];
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v43, v70);
  return v50 >= v59;
}

uint64_t sub_1000CCD50@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v129 = a8;
  uint64_t v117 = a7;
  uint64_t v116 = a6;
  uint64_t v109 = a5;
  uint64_t v111 = a4;
  uint64_t v142 = a3;
  uint64_t v146 = a2;
  uint64_t v139 = a9;
  uint64_t v135 = sub_100003918(&qword_10020CA58);
  uint64_t v136 = *(void *)(v135 - 8);
  __chkstk_darwin(v135, v10);
  uint64_t v132 = (char *)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = sub_100003918(&qword_10020CA60);
  uint64_t v134 = *(void *)(v133 - 8);
  __chkstk_darwin(v133, v12);
  long long v130 = (char *)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100003918(&qword_10020CA68);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v137 = v14;
  uint64_t v138 = v15;
  __chkstk_darwin(v14, v16);
  uint64_t v131 = (char *)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_1001BEFA0();
  uint64_t v119 = *(void *)(v121 - 8);
  __chkstk_darwin(v121, v18);
  uint64_t v118 = (char *)&v99 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_100003918(&qword_10020CA70);
  uint64_t v127 = *(void *)(v123 - 8);
  __chkstk_darwin(v123, v20);
  uint64_t v114 = (char *)&v99 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_100003918(&qword_10020CA78);
  uint64_t v122 = *(void *)(v120 - 8);
  __chkstk_darwin(v120, v22);
  uint64_t v110 = (char *)&v99 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_100003918(&qword_10020CA80);
  uint64_t v126 = *(void *)(v124 - 8);
  __chkstk_darwin(v124, v24);
  uint64_t v115 = (char *)&v99 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = sub_100003918(&qword_10020CA88);
  uint64_t v155 = *(void **)(v144 - 8);
  __chkstk_darwin(v144, v26);
  uint64_t v28 = (char *)&v99 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_100003918(&qword_10020CA90);
  uint64_t v30 = *(void *)(v29 - 8);
  __chkstk_darwin(v29, v31);
  uint64_t v33 = (char *)&v99 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_100003918(&qword_10020CA98);
  uint64_t v154 = *(void *)(v34 - 8);
  __chkstk_darwin(v34, v35);
  uint64_t v37 = (char *)&v99 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_100003918(&qword_10020CAA0);
  uint64_t v151 = *(void *)(v104 - 8);
  uint64_t v39 = __chkstk_darwin(v104, v38);
  uint64_t v103 = (char *)&v99 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39, v41);
  uint64_t v102 = (char *)&v99 - v42;
  uint64_t v106 = sub_100003918(&qword_10020CAA8);
  uint64_t v107 = *(void *)(v106 - 8);
  __chkstk_darwin(v106, v43);
  uint64_t v145 = (char *)&v99 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_100003918(&qword_10020CAB0);
  uint64_t v113 = *(void *)(v112 - 8);
  __chkstk_darwin(v112, v45);
  uint64_t v147 = (char *)&v99 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_100003918(&qword_10020CAB8);
  uint64_t v128 = *(void *)(v125 - 8);
  __chkstk_darwin(v125, v47);
  char v108 = (char *)&v99 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = *a1;
  uint64_t v49 = sub_100016710(&qword_10020CAC0, &qword_10020CA90);
  sub_1001BEFC0();
  swift_getKeyPath();
  uint64_t v152 = v29;
  sub_1001BEF50();
  swift_release();
  uint64_t v50 = *(void (**)(char *, uint64_t))(v30 + 8);
  uint64_t v150 = v30 + 8;
  v50(v33, v29);
  uint64_t v143 = v50;
  uint64_t v156 = v146;
  uint64_t v157 = v142;
  sub_1001BEFB0();
  uint64_t v146 = &protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>;
  uint64_t v142 = sub_100016710(&qword_10020CAC8, &qword_10020CA98);
  uint64_t v105 = &protocol conformance descriptor for PredicateExpressions.Value<A>;
  uint64_t v141 = sub_100016710(&qword_10020CAD0, &qword_10020CA88);
  uint64_t v51 = v34;
  uint64_t v52 = v144;
  sub_1001BEF40();
  uint64_t v53 = (void (*)(char *, uint64_t))v155[1];
  ++v155;
  uint64_t v140 = v53;
  uint64_t v54 = v52;
  v53(v28, v52);
  uint64_t v55 = *(void (**)(char *, uint64_t))(v154 + 8);
  v154 += 8;
  uint64_t v56 = v37;
  v55(v37, v51);
  uint64_t v101 = v55;
  uint64_t v148 = v33;
  uint64_t v149 = v49;
  uint64_t v57 = v152;
  sub_1001BEFC0();
  swift_getKeyPath();
  sub_1001BEF50();
  swift_release();
  v50(v33, v57);
  uint64_t v156 = v111;
  uint64_t v157 = v109;
  sub_1001BEFB0();
  uint64_t v58 = v103;
  uint64_t v59 = v56;
  uint64_t v100 = v51;
  sub_1001BEF40();
  v140(v28, v54);
  v55(v56, v51);
  uint64_t v111 = &protocol conformance descriptor for PredicateExpressions.Equal<A, B>;
  sub_100016710(&qword_10020CAD8, &qword_10020CAA0);
  uint64_t v60 = v102;
  uint64_t v61 = v104;
  sub_1001BEF90();
  uint64_t v62 = *(void (**)(char *, uint64_t))(v151 + 8);
  v151 += 8;
  v62(v58, v61);
  v62(v60, v61);
  uint64_t v63 = v148;
  uint64_t v64 = v152;
  sub_1001BEFC0();
  swift_getKeyPath();
  sub_1001BEF50();
  swift_release();
  uint64_t v65 = v64;
  uint64_t v66 = v143;
  v143(v63, v65);
  uint64_t v156 = v116;
  uint64_t v157 = v117;
  sub_1001BEFB0();
  uint64_t v67 = v100;
  uint64_t v68 = v144;
  sub_1001BEF40();
  v140(v28, v68);
  v101(v59, v67);
  uint64_t v155 = &protocol conformance descriptor for PredicateExpressions.Conjunction<A, B>;
  sub_100016710(&qword_10020CAE0, &qword_10020CAA8);
  uint64_t v69 = v145;
  uint64_t v70 = v106;
  sub_1001BEF90();
  v62(v60, v61);
  (*(void (**)(char *, uint64_t))(v107 + 8))(v69, v70);
  uint64_t v71 = v148;
  uint64_t v72 = v152;
  sub_1001BEFC0();
  swift_getKeyPath();
  uint64_t v73 = v110;
  sub_1001BEF50();
  swift_release();
  v66(v71, v72);
  sub_1001BF2C0();
  uint64_t v74 = v114;
  sub_1001BEFB0();
  uint64_t v75 = v119;
  uint64_t v76 = v118;
  uint64_t v77 = v121;
  (*(void (**)(char *, void, uint64_t))(v119 + 104))(v118, enum case for PredicateExpressions.ComparisonOperator.greaterThanOrEqual(_:), v121);
  sub_100016710(&qword_10020CAE8, &qword_10020CA78);
  sub_100016710(&qword_10020CAF0, &qword_10020CA70);
  sub_1000BDF30(&qword_10020C540, 255, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v78 = v115;
  uint64_t v79 = v73;
  uint64_t v80 = v74;
  uint64_t v81 = v120;
  uint64_t v82 = v123;
  sub_1001BEF70();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v76, v77);
  (*(void (**)(char *, uint64_t))(v127 + 8))(v80, v82);
  (*(void (**)(char *, uint64_t))(v122 + 8))(v79, v81);
  sub_100016710(&qword_10020CAF8, &qword_10020CAB0);
  sub_100016710(&qword_10020CB00, &qword_10020CA80);
  uint64_t v83 = v108;
  uint64_t v84 = v147;
  uint64_t v85 = v112;
  uint64_t v86 = v124;
  sub_1001BEF90();
  (*(void (**)(char *, uint64_t))(v126 + 8))(v78, v86);
  (*(void (**)(char *, uint64_t))(v113 + 8))(v84, v85);
  uint64_t v87 = v148;
  uint64_t v88 = v152;
  sub_1001BEFC0();
  swift_getKeyPath();
  uint64_t v89 = v130;
  sub_1001BEF50();
  swift_release();
  v143(v87, v88);
  sub_1001BF310();
  uint64_t v90 = v132;
  sub_1001BEF80();
  sub_100016710(&qword_10020CB08, &qword_10020CA60);
  sub_100016710(&qword_10020CB10, &qword_10020CA58);
  sub_1000D3D10(&qword_10020CB18, &qword_10020CB20);
  uint64_t v91 = v131;
  uint64_t v92 = v133;
  uint64_t v93 = v135;
  sub_1001BEF40();
  (*(void (**)(char *, uint64_t))(v136 + 8))(v90, v93);
  (*(void (**)(char *, uint64_t))(v134 + 8))(v89, v92);
  uint64_t v94 = sub_100003918(&qword_10020CB28);
  uint64_t v95 = v139;
  v139[3] = v94;
  v95[4] = sub_1000D4BB0(&qword_10020CB30, &qword_10020CB28, (void (*)(void))sub_1000D387C, (void (*)(void))sub_1000D3C34);
  sub_10000395C(v95);
  sub_100016710(&qword_10020CBA0, &qword_10020CAB8);
  sub_100016710(&qword_10020CBA8, &qword_10020CA68);
  uint64_t v96 = v125;
  uint64_t v97 = v137;
  sub_1001BEF90();
  (*(void (**)(char *, uint64_t))(v138 + 8))(v91, v97);
  return (*(uint64_t (**)(char *, uint64_t))(v128 + 8))(v83, v96);
}

uint64_t sub_1000CDF34(uint64_t a1)
{
  unint64_t v98 = *(void *)v1;
  uint64_t v3 = sub_100003918(&qword_10020CC18);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v85 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100003918(&qword_10020CC20);
  uint64_t v7 = *(char **)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v86 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_100003918(&qword_10020CC28);
  uint64_t v88 = *(void *)(v89 - 8);
  __chkstk_darwin(v89, v10);
  uint64_t v87 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100003918(&qword_10020CA38);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v93 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100003918(&qword_10020CA40);
  unint64_t v95 = *(void *)(v15 - 8);
  uint64_t v96 = (char *)v15;
  __chkstk_darwin(v15, v16);
  uint64_t v94 = (char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v18 = sub_1001BF2C0();
  uint64_t v92 = *(void *)(v18 - 8);
  __chkstk_darwin(v18, v19);
  uint64_t v102 = (char *)&v83 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100003918(&qword_10020CA48);
  uint64_t v100 = *(void *)(v21 - 8);
  uint64_t v101 = v21;
  __chkstk_darwin(v21, v22);
  uint64_t v99 = (char *)&v83 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1001BF310();
  unint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24, v26);
  uint64_t v28 = (char *)&v83 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100207970 != -1) {
LABEL_41:
  }
    swift_once();
  uint64_t v103 = (char *)v1;
  uint64_t v29 = sub_1001C0340();
  uint64_t v30 = sub_10000D978(v29, (uint64_t)qword_10020C6C0);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v28, a1, v24);
  uint64_t v90 = v30;
  uint64_t v31 = sub_1001C0330();
  os_log_type_t v32 = sub_1001C1200();
  BOOL v33 = os_log_type_enabled(v31, v32);
  unint64_t v97 = v18;
  if (v33)
  {
    uint64_t v34 = swift_slowAlloc();
    uint64_t v91 = v7;
    uint64_t v35 = (uint8_t *)v34;
    uint64_t v36 = swift_slowAlloc();
    uint64_t v84 = (uint64_t *)a1;
    *(_DWORD *)uint64_t v35 = 136315138;
    unint64_t v104 = v6;
    uint64_t v105 = (void *)v36;
    sub_1000BDF30(qword_100207DC0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v37 = sub_1001C1780();
    uint64_t v108 = sub_1000DF238(v37, v38, (uint64_t *)&v105);
    uint64_t v6 = v104;
    sub_1001C1310();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v24);
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "getAttestationBundlesUsedByTrustedRequest: %s", v35, 0xCu);
    swift_arrayDestroy();
    a1 = (uint64_t)v84;
    swift_slowDealloc();
    uint64_t v7 = v91;
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v24);
  }

  uint64_t v91 = (char *)&v83;
  __chkstk_darwin(v39, v40);
  *(&v83 - 2) = a1;
  uint64_t v108 = type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry(0);
  uint64_t v41 = v99;
  sub_1001BF3F0();
  unint64_t v104 = sub_100054974((uint64_t)_swiftEmptyArrayStorage);
  sub_1001BF2B0();
  sub_1000BDF30(&qword_10020CA30, v42, (void (*)(uint64_t))type metadata accessor for TC2AttestationStore);
  sub_1001C0930();
  uint64_t v44 = v100;
  uint64_t v43 = v101;
  uint64_t v45 = v93;
  (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v93, v41, v101);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v45, 0, 1, v43);
  uint64_t v28 = (char *)sub_1000BDF30(&qword_100207A20, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  uint64_t v46 = v94;
  sub_1001C09F0();
  unint64_t v25 = 0;
  unint64_t v1 = sub_1001C0980();
  (*(void (**)(char *, char *))(v95 + 8))(v46, v96);
  swift_release();
  if (!(v1 >> 62))
  {
    unint64_t v18 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v18) {
      goto LABEL_7;
    }
LABEL_44:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v100 + 8))(v99, v101);
    (*(void (**)(char *, unint64_t))(v92 + 8))(v102, v97);
    return v104;
  }
LABEL_43:
  swift_bridgeObjectRetain();
  unint64_t v18 = sub_1001C1590();
  swift_bridgeObjectRelease();
  if (!v18) {
    goto LABEL_44;
  }
LABEL_7:
  if ((v1 & 0xC000000000000001) != 0)
  {
    uint64_t v47 = sub_1001C1440();
  }
  else
  {
    if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_47:
      swift_bridgeObjectRetain();
      unint64_t v25 = sub_1001C1590();
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    uint64_t v47 = *(void *)(v1 + 32);
    swift_retain();
  }
  swift_bridgeObjectRelease();
  uint64_t v105 = (void *)v47;
  swift_getKeyPath();
  sub_1000BDF30(&qword_10020C738, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
  sub_1001BF410();
  swift_release();
  swift_getKeyPath();
  sub_1000D448C(&qword_10020CA50, &qword_10020C6F0);
  uint64_t v93 = (char *)v47;
  sub_1001C0A40();
  uint64_t v48 = swift_release();
  uint64_t v84 = &v83;
  uint64_t v49 = (uint64_t)v105;
  __chkstk_darwin(v48, v50);
  uint64_t v51 = v102;
  *(&v83 - 2) = v49;
  *(&v83 - 1) = (uint64_t)v51;
  uint64_t v107 = type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry(0);
  uint64_t v52 = v87;
  sub_1001BF3F0();
  swift_bridgeObjectRelease();
  sub_1001C0930();
  uint64_t v53 = v88;
  uint64_t v54 = v85;
  uint64_t v55 = v89;
  (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v85, v52, v89);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v54, 0, 1, v55);
  uint64_t v28 = (char *)sub_1000BDF30(&qword_100207A30, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  uint64_t v56 = v86;
  sub_1001C09F0();
  uint64_t v57 = sub_1001C0980();
  if (v25)
  {
    (*((void (**)(char *, uint64_t))v7 + 1))(v56, v6);
    swift_release();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v58 = sub_1001C0330();
    os_log_type_t v59 = sub_1001C11F0();
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = (uint8_t *)swift_slowAlloc();
      uint64_t v61 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v60 = 138412290;
      swift_errorRetain();
      uint64_t v62 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v105 = (void *)v62;
      sub_1001C1310();
      *uint64_t v61 = v62;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v58, v59, "failed to query attestations error: %@", v60, 0xCu);
      sub_100003918(&qword_100207DA8);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_release();
    }
    else
    {

      swift_release();
      swift_errorRelease();
      swift_errorRelease();
    }
    swift_errorRelease();
    unint64_t v64 = v97;
    goto LABEL_37;
  }
  unint64_t v18 = v57;
  uint64_t v63 = (void (*)(char *, uint64_t))*((void *)v7 + 1);
  v7 += 8;
  v63(v56, v6);
  swift_release();
  if (v18 >> 62) {
    goto LABEL_47;
  }
  unint64_t v25 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  unint64_t v64 = v97;
  if (!v25)
  {
    swift_bridgeObjectRelease();
    swift_release();
LABEL_37:
    (*(void (**)(char *, uint64_t))(v88 + 8))(v87, v89);
    (*(void (**)(char *, uint64_t))(v100 + 8))(v99, v101);
    (*(void (**)(char *, unint64_t))(v92 + 8))(v102, v64);
    return v104;
  }
  unint64_t v95 = v18;
  uint64_t v96 = v28;
  unint64_t v98 = v18 & 0xC000000000000001;
  uint64_t v24 = 4;
  uint64_t v94 = (char *)v25;
  while (1)
  {
    unint64_t v1 = v24 - 4;
    if (v98)
    {
      a1 = sub_1001C1440();
      uint64_t v66 = v24 - 3;
      if (__OFADD__(v1, 1)) {
        goto LABEL_39;
      }
    }
    else
    {
      a1 = *(void *)(v18 + 8 * v24);
      swift_retain();
      uint64_t v66 = v24 - 3;
      if (__OFADD__(v1, 1))
      {
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        goto LABEL_41;
      }
    }
    uint64_t v103 = (char *)v66;
    unint64_t v18 = a1
        + OBJC_IVAR____TtCOO20privatecloudcomputed32TC2AttestationStoreMigrationPlan28TC2AttestationStoreSchema_v116TCNodeStoreEntry___observationRegistrar;
    uint64_t v105 = (void *)a1;
    swift_getKeyPath();
    sub_1000BDF30(&qword_10020C748, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
    sub_1001BF410();
    swift_release();
    swift_getKeyPath();
    sub_1001C0A40();
    swift_release();
    uint64_t v67 = (uint64_t)v105;
    uint64_t v28 = v106;
    uint64_t v105 = (void *)a1;
    swift_getKeyPath();
    sub_1001BF410();
    swift_release();
    swift_getKeyPath();
    sub_1000D461C();
    sub_1001C0A40();
    swift_release();
    uint64_t v6 = (uint64_t)v105;
    uint64_t v7 = v106;
    unint64_t v1 = v104;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v105 = (void *)v1;
    unint64_t v25 = sub_100169E3C(v67, (uint64_t)v28);
    uint64_t v70 = *(void *)(v1 + 16);
    BOOL v71 = (v69 & 1) == 0;
    uint64_t v72 = v70 + v71;
    if (__OFADD__(v70, v71)) {
      goto LABEL_40;
    }
    char v73 = v69;
    if (*(void *)(v1 + 24) < v72) {
      break;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v1 = (unint64_t)&v105;
      sub_1000EC568();
    }
LABEL_30:
    uint64_t v76 = v105;
    unint64_t v104 = (unint64_t)v105;
    if (v73)
    {
      uint64_t v65 = v105[7] + 16 * v25;
      sub_10000792C(*(void *)v65, *(void *)(v65 + 8));
      *(void *)uint64_t v65 = v6;
      *(void *)(v65 + 8) = v7;
    }
    else
    {
      v105[(v25 >> 6) + 8] |= 1 << v25;
      uint64_t v77 = (uint64_t *)(v76[6] + 16 * v25);
      *uint64_t v77 = v67;
      v77[1] = (uint64_t)v28;
      uint64_t v78 = (uint64_t *)(v76[7] + 16 * v25);
      uint64_t *v78 = v6;
      v78[1] = (uint64_t)v7;
      uint64_t v79 = v76[2];
      BOOL v80 = __OFADD__(v79, 1);
      uint64_t v81 = v79 + 1;
      if (v80)
      {
        __break(1u);
        goto LABEL_43;
      }
      v76[2] = v81;
      swift_bridgeObjectRetain();
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ++v24;
    unint64_t v25 = (unint64_t)v94;
    unint64_t v18 = v95;
    if (v103 == v94)
    {
      swift_bridgeObjectRelease();
      swift_release();
      unint64_t v64 = v97;
      goto LABEL_37;
    }
  }
  sub_1000E5334(v72, isUniquelyReferenced_nonNull_native);
  unint64_t v1 = (unint64_t)v105;
  unint64_t v74 = sub_100169E3C(v67, (uint64_t)v28);
  if ((v73 & 1) == (v75 & 1))
  {
    unint64_t v25 = v74;
    goto LABEL_30;
  }
  uint64_t result = sub_1001C18C0();
  __break(1u);
  return result;
}

uint64_t sub_1000CF05C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v29 = a2;
  uint64_t v28 = sub_100003918(qword_100208CD0);
  __chkstk_darwin(v28, v2);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100003918(&qword_10020CD48);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v30 = v5;
  uint64_t v31 = v6;
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100003918(&qword_10020CA90);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100003918(&qword_10020CA60);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100016710(&qword_10020CAC0, &qword_10020CA90);
  sub_1001BEFC0();
  swift_getKeyPath();
  sub_1001BEF50();
  swift_release();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  uint64_t v20 = sub_1001BF310();
  uint64_t v21 = *(void *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v4, v27, v20);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v4, 0, 1, v20);
  sub_1001BEFB0();
  sub_100010360((uint64_t)v4, qword_100208CD0);
  uint64_t v22 = sub_100003918(&qword_10020CD50);
  uint64_t v23 = v29;
  v29[3] = v22;
  v23[4] = sub_1000D4A18();
  sub_10000395C(v23);
  sub_100016710(&qword_10020CB08, &qword_10020CA60);
  sub_100016710(&qword_10020CD68, &qword_10020CD48);
  sub_1000D3D10(&qword_10020CB18, &qword_10020CB20);
  uint64_t v24 = v30;
  sub_1001BEF40();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v24);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
}

uint64_t sub_1000CF4A8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v68 = a3;
  unint64_t v74 = a4;
  uint64_t v67 = sub_1001BEFA0();
  uint64_t v65 = *(void *)(v67 - 8);
  __chkstk_darwin(v67, v6);
  unint64_t v64 = (char *)v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100003918(&qword_10020CA70);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v70 = v8;
  uint64_t v71 = v9;
  __chkstk_darwin(v8, v10);
  uint64_t v60 = (char *)v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_100003918(&qword_10020CC30);
  uint64_t v69 = *(void *)(v66 - 8);
  __chkstk_darwin(v66, v12);
  os_log_type_t v59 = (char *)v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100003918(&qword_10020CC38);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v72 = v14;
  uint64_t v73 = v15;
  __chkstk_darwin(v14, v16);
  uint64_t v61 = (char *)v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100003918(&qword_10020CC40);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18, v20);
  uint64_t v22 = (char *)v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100003918(&qword_10020CC48);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v56 = v23;
  uint64_t v57 = v24;
  __chkstk_darwin(v23, v25);
  uint64_t v27 = (char *)v53 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_100003918(&qword_10020CCF0);
  uint64_t v55 = *(void *)(v54 - 8);
  __chkstk_darwin(v54, v28);
  uint64_t v30 = (char *)v53 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_100003918(&qword_10020CCF8);
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v62 = v31;
  uint64_t v63 = v32;
  __chkstk_darwin(v31, v33);
  uint64_t v58 = (char *)v53 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53[2] = *a1;
  uint64_t v75 = a2;
  sub_100003918(&qword_10020C6F0);
  sub_1001BEFB0();
  sub_100016710(&qword_10020CC58, &qword_10020CC40);
  sub_1001BEFC0();
  swift_getKeyPath();
  sub_1001BEF50();
  swift_release();
  uint64_t v35 = *(void (**)(char *, uint64_t))(v19 + 8);
  v53[1] = v19 + 8;
  v35(v22, v18);
  v53[4] = &protocol conformance descriptor for PredicateExpressions.Value<A>;
  sub_100016710(&qword_10020CD10, &qword_10020CCF0);
  v53[3] = &protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>;
  sub_100016710(&qword_10020CC60, &qword_10020CC48);
  sub_100016710(&qword_10020CD18, &qword_10020C6F0);
  uint64_t v36 = v54;
  uint64_t v37 = v56;
  sub_1001BEF60();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v27, v37);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v30, v36);
  sub_1001BEFC0();
  swift_getKeyPath();
  unint64_t v38 = v59;
  sub_1001BEF50();
  swift_release();
  v35(v22, v18);
  sub_1001BF2C0();
  uint64_t v39 = v60;
  sub_1001BEFB0();
  uint64_t v41 = v64;
  uint64_t v40 = v65;
  uint64_t v42 = v67;
  (*(void (**)(char *, void, uint64_t))(v65 + 104))(v64, enum case for PredicateExpressions.ComparisonOperator.greaterThanOrEqual(_:), v67);
  sub_100016710(&qword_10020CC68, &qword_10020CC30);
  sub_100016710(&qword_10020CAF0, &qword_10020CA70);
  sub_1000BDF30(&qword_10020C540, 255, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v43 = v61;
  uint64_t v44 = v38;
  uint64_t v45 = v66;
  uint64_t v46 = v70;
  sub_1001BEF70();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v42);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v39, v46);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v44, v45);
  uint64_t v47 = sub_100003918(&qword_10020CD30);
  uint64_t v48 = v74;
  v74[3] = v47;
  v48[4] = sub_1000D4BB0(&qword_10020CD38, &qword_10020CD30, (void (*)(void))sub_1000D4800, (void (*)(void))sub_1000D4188);
  sub_10000395C(v48);
  sub_100016710(&qword_10020CD40, &qword_10020CCF8);
  sub_100016710(&qword_10020CCB0, &qword_10020CC38);
  uint64_t v49 = v58;
  uint64_t v50 = v62;
  uint64_t v51 = v72;
  sub_1001BEF90();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v43, v51);
  return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v49, v50);
}

uint64_t sub_1000CFD6C()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1000CFDAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = sub_1000BDF30(&qword_10020CA30, a2, (void (*)(uint64_t))type metadata accessor for TC2AttestationStore);
  return ModelActor.unownedExecutor.getter(v3, v4);
}

uint64_t sub_1000CFE3C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 + 32) = a4;
  *(void *)(v6 + 40) = a5;
  *(unsigned char *)(v6 + 56) = a3;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 48) = *v5;
  sub_1000BDF30(&qword_10020C4E0, a2, (void (*)(uint64_t))type metadata accessor for TC2AttestationStore);
  uint64_t v8 = sub_1001C0EA0();
  return _swift_task_switch(sub_1000CFEFC, v8, v7);
}

uint64_t sub_1000CFEFC()
{
  char v1 = sub_1000C2CAC(*(unint64_t **)(v0 + 16), *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 56), *(void *)(v0 + 32), *(void *)(v0 + 40));
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v3 = v1 & 1;
  return v2(v3);
}

uint64_t sub_1000CFF6C(uint64_t a1, uint64_t a2)
{
  v3[2] = a1;
  v3[3] = a2;
  v3[4] = *v2;
  sub_1000BDF30(&qword_10020C4E0, a2, (void (*)(uint64_t))type metadata accessor for TC2AttestationStore);
  uint64_t v5 = sub_1001C0EA0();
  return _swift_task_switch(sub_1000D0024, v5, v4);
}

uint64_t sub_1000D0024()
{
  sub_1000C8890(v0[2], v0[3]);
  char v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1000D0088(uint64_t a1, uint64_t a2)
{
  v3[2] = a1;
  v3[3] = a2;
  v3[4] = *v2;
  sub_1000BDF30(&qword_10020C4E0, a2, (void (*)(uint64_t))type metadata accessor for TC2AttestationStore);
  uint64_t v5 = sub_1001C0EA0();
  return _swift_task_switch(sub_1000D0140, v5, v4);
}

uint64_t sub_1000D0140()
{
  BOOL v1 = sub_1000C975C(v0[2], v0[3]);
  uint64_t v2 = (uint64_t (*)(BOOL))v0[1];
  BOOL v3 = v1;
  return v2(v3);
}

uint64_t sub_1000D01A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  *(unsigned char *)(v7 + 64) = a4;
  *(void *)(v7 + 32) = a3;
  *(void *)(v7 + 40) = a5;
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  uint64_t v8 = *v6;
  *(void *)(v7 + 48) = a6;
  *(void *)(v7 + 56) = v8;
  sub_1000BDF30(&qword_10020C4E0, a2, (void (*)(uint64_t))type metadata accessor for TC2AttestationStore);
  uint64_t v10 = sub_1001C0EA0();
  return _swift_task_switch(sub_1000D0268, v10, v9);
}

uint64_t sub_1000D0268()
{
  char v1 = sub_1000CA738(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 64), *(void **)(v0 + 40), *(void *)(v0 + 48));
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v3 = v1 & 1;
  return v2(v3);
}

uint64_t sub_1000D02D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = *v3;
  v4[4] = a3;
  v4[5] = v5;
  sub_1000BDF30(&qword_10020C4E0, a2, (void (*)(uint64_t))type metadata accessor for TC2AttestationStore);
  uint64_t v7 = sub_1001C0EA0();
  return _swift_task_switch(sub_1000D0390, v7, v6);
}

uint64_t sub_1000D0390()
{
  BOOL v1 = sub_1000CC400(v0[2], v0[3], v0[4]);
  uint64_t v2 = (uint64_t (*)(BOOL))v0[1];
  BOOL v3 = v1;
  return v2(v3);
}

uint64_t sub_1000D03F8()
{
  return swift_retain();
}

uint64_t sub_1000D0400()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1000D0428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000D0470(a1, a2, a3, (void (*)(uint64_t))TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry.init(backingData:));
}

uint64_t sub_1000D0440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000D04C0(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_10000E720);
}

uint64_t sub_1000D0458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000D0470(a1, a2, a3, (void (*)(uint64_t))TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry.init(backingData:));
}

uint64_t sub_1000D0470(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6 = swift_allocObject();
  a4(a1);
  return v6;
}

uint64_t sub_1000D04C0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v7 = v4 + 24;
  swift_beginAccess();
  sub_100003E90(v7);
  a4(a1, v7);
  return swift_endAccess();
}

uint64_t sub_1000D052C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  BOOL v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  BOOL v3 = sub_1000E3B4C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[32 * v8 + 32];
  if (a1 + 32 < v9 + 32 * v2 && v9 < a1 + 32 + 32 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    void *v1 = v3;
    return result;
  }
  uint64_t v11 = *((void *)v3 + 2);
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    *((void *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1001C15D0();
  __break(1u);
  return result;
}

uint64_t sub_1000D0680(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  unint64_t v3 = sub_1000E42BC(isUniquelyReferenced_nonNull_native, v22, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = *(void *)(sub_1001BFC80() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  unint64_t v16 = v13 + v15;
  unint64_t v17 = v14 + v15;
  if (v14 < v16 && v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t *v1 = v3;
    return result;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    *(void *)(v3 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1001C15D0();
  __break(1u);
  return result;
}

uint64_t sub_1000D0824(uint64_t a1)
{
  uint64_t v73 = sub_1001BFC80();
  uint64_t v3 = *(void *)(v73 - 8);
  __chkstk_darwin(v73, v4);
  uint64_t v6 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100003918(&qword_10020CD20);
  uint64_t v9 = __chkstk_darwin(v7 - 8, v8);
  uint64_t v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v9, v12);
  uint64_t v69 = (uint64_t *)((char *)&v64 - v14);
  uint64_t v16 = __chkstk_darwin(v13, v15);
  uint64_t v72 = (uint64_t)&v64 - v17;
  uint64_t v18 = *(void *)(a1 + 24);
  unint64_t v19 = *v1;
  int64_t v20 = *(void *)(*v1 + 16);
  int64_t v21 = v20 + v18;
  if (__OFADD__(v20, v18))
  {
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t *v1 = v19;
  uint64_t v70 = v11;
  uint64_t v74 = v18;
  if (!isUniquelyReferenced_nonNull_native || (int64_t v23 = *(void *)(v19 + 24) >> 1, v23 < v21))
  {
    if (v20 <= v21) {
      int64_t v24 = v20 + v18;
    }
    else {
      int64_t v24 = v20;
    }
    unint64_t v19 = sub_1000E42BC(isUniquelyReferenced_nonNull_native, v24, 1, v19);
    unint64_t *v1 = v19;
    int64_t v23 = *(void *)(v19 + 24) >> 1;
  }
  uint64_t v25 = *(void *)(v19 + 16);
  uint64_t v26 = v23 - v25;
  uint64_t v75 = v3;
  uint64_t v27 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v16 = (uint64_t)sub_1000D120C((void *)(a1 + 16), a1 + ((v27 + 40) & ~v27), (uint64_t)&v79);
  uint64_t v3 = v80;
  if (v26 >= v80) {
    uint64_t v28 = v80;
  }
  else {
    uint64_t v28 = v26;
  }
  if (v28 < 0) {
    goto LABEL_42;
  }
  if (v28) {
    uint64_t v29 = v26;
  }
  else {
    uint64_t v29 = 0;
  }
  if (v29 >= v80) {
    uint64_t v30 = v80;
  }
  else {
    uint64_t v30 = v29;
  }
  if (v30 < 0) {
    goto LABEL_43;
  }
  uint64_t v66 = (v27 + 32) & ~v27;
  uint64_t v71 = *(void *)(v75 + 72);
  unint64_t v31 = v19 + v66 + v71 * v25;
  sub_1000D12CC(0, v30, v79, v80, 0, v28, v31);
  uint64_t v67 = v6;
  uint64_t v68 = v1;
  if (v26 <= v3
    || (sub_1000D4978((uint64_t)&v81, (uint64_t)v82), uint64_t result = sub_1000D4978((uint64_t)v82, (uint64_t)&v83), (v85 & 1) != 0))
  {
    uint64_t v33 = sub_1000D1420((uint64_t *)(a1 + 16), v28, a1);
    uint64_t v35 = v34;
    int64_t v37 = v36;
    goto LABEL_35;
  }
  uint64_t v38 = v26 - v28;
  if (v26 - v28 >= v84) {
    uint64_t v39 = v84;
  }
  else {
    uint64_t v39 = v26 - v28;
  }
  uint64_t v40 = v28 + v39;
  if (__OFADD__(v28, v39))
  {
    __break(1u);
    goto LABEL_63;
  }
  if (v40 < v28)
  {
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (v39 < 0)
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  if (!v39) {
    uint64_t v38 = 0;
  }
  if (v38 >= v84) {
    uint64_t v41 = v84;
  }
  else {
    uint64_t v41 = v38;
  }
  if ((v41 & 0x8000000000000000) == 0)
  {
    sub_1000D12CC(0, v41, v83, v84, v28, v28 + v39, v31);
    uint64_t v33 = sub_1000D1420((uint64_t *)(a1 + 16), v40, a1);
    uint64_t v35 = v42;
    int64_t v37 = v43;
    uint64_t v28 = v40;
LABEL_35:
    swift_retain();
    uint64_t v16 = swift_release();
    uint64_t v76 = v33;
    uint64_t v77 = v35;
    int64_t v78 = v37;
    uint64_t v3 = v75;
    if (v28 >= v74)
    {
      if (v28 > 0)
      {
        uint64_t v44 = *(void *)(v19 + 16);
        BOOL v45 = __OFADD__(v44, v28);
        uint64_t v46 = v44 + v28;
        if (v45)
        {
          __break(1u);
          goto LABEL_48;
        }
        *(void *)(v19 + 16) = v46;
      }
      if (v28 != v26) {
        return swift_release();
      }
LABEL_45:
      int64_t v37 = *(void *)(v19 + 16);
      uint64_t v47 = v72;
      sub_1000BC354(v16, v72);
      uint64_t v48 = v47;
      uint64_t v33 = v69;
      sub_10003282C(v48, (uint64_t)v69, &qword_10020CD20);
      uint64_t v49 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
      uint64_t v74 = v3 + 48;
      uint64_t v65 = v49;
      int v50 = v49((uint64_t)v33, 1, v73);
      BOOL v1 = v68;
      if (v50 == 1)
      {
LABEL_46:
        sub_100010360(v72, &qword_10020CD20);
        swift_release();
        return sub_100010360((uint64_t)v33, &qword_10020CD20);
      }
LABEL_48:
      uint64_t v51 = (uint64_t *)(v3 + 32);
      unint64_t v64 = (void (**)(char *, uint64_t))(v3 + 8);
      uint64_t v52 = v67;
      do
      {
        sub_100010360((uint64_t)v33, &qword_10020CD20);
        unint64_t v53 = *v1;
        unint64_t v54 = *(void *)(v53 + 24);
        int64_t v55 = v54 >> 1;
        if ((uint64_t)(v54 >> 1) < v37 + 1)
        {
          unint64_t v53 = sub_1000E42BC(v54 > 1, v37 + 1, 1, v53);
          *uint64_t v68 = v53;
          int64_t v55 = *(void *)(v53 + 24) >> 1;
        }
        uint64_t v56 = (uint64_t)v70;
        sub_10003282C(v72, (uint64_t)v70, &qword_10020CD20);
        if (v65(v56, 1, v73) == 1)
        {
          uint64_t v57 = (uint64_t)v70;
LABEL_61:
          sub_100010360(v57, &qword_10020CD20);
          int64_t v58 = v37;
        }
        else
        {
          uint64_t v75 = *v51;
          if (v37 <= v55) {
            int64_t v58 = v55;
          }
          else {
            int64_t v58 = v37;
          }
          uint64_t v57 = (uint64_t)v70;
          unint64_t v59 = v53 + v66 + v71 * v37;
          uint64_t v60 = v73;
          while (1)
          {
            ((void (*)(char *, uint64_t, uint64_t))v75)(v52, v57, v60);
            if (v58 == v37) {
              break;
            }
            uint64_t v61 = v72;
            sub_100010360(v72, &qword_10020CD20);
            uint64_t v62 = ((uint64_t (*)(unint64_t, char *, uint64_t))v75)(v59, v52, v60);
            ++v37;
            sub_1000BC354(v62, v61);
            uint64_t v60 = v73;
            sub_10003282C(v61, v57, &qword_10020CD20);
            int v63 = v65(v57, 1, v60);
            v59 += v71;
            if (v63 == 1) {
              goto LABEL_61;
            }
          }
          (*v64)(v52, v60);
          int64_t v37 = v58;
        }
        BOOL v1 = v68;
        *(void *)(*v68 + 16) = v58;
        uint64_t v33 = v69;
        sub_10003282C(v72, (uint64_t)v69, &qword_10020CD20);
      }
      while (v65((uint64_t)v33, 1, v73) != 1);
      goto LABEL_46;
    }
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
LABEL_65:
  __break(1u);
  return result;
}

uint64_t sub_1000D0E84(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1000E3F44(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[16 * v8 + 32];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t *v1 = v3;
    return result;
  }
  uint64_t v11 = *((void *)v3 + 2);
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    *((void *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1001C15D0();
  __break(1u);
  return result;
}

uint64_t sub_1000D0FD8(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v23 = v4 + v2;
  }
  else {
    int64_t v23 = v4;
  }
  unint64_t v3 = sub_1000E45C8(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = (*(void *)(v3 + 24) >> 1) - v9;
  uint64_t v11 = *(void *)(sub_1001C0AF0() - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = v3 + v13 + v12 * v9;
  unint64_t v15 = a1 + v13;
  uint64_t v16 = v12 * v8;
  unint64_t v17 = v14 + v16;
  unint64_t v18 = v15 + v16;
  if (v15 < v17 && v14 < v18) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v20 = *(void *)(v3 + 16);
  BOOL v21 = __OFADD__(v20, v8);
  uint64_t v22 = v20 + v8;
  if (!v21)
  {
    *(void *)(v3 + 16) = v22;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1001C15D0();
  __break(1u);
  return result;
}

uint64_t sub_1000D1188(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_1000D11B4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1000D11DC@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

void *sub_1000D120C@<X0>(void *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = result[2];
  uint64_t v5 = *result - v4;
  if (__OFSUB__(*result, v4))
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = result[1];
    uint64_t v8 = sub_1001BFC80();
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t result = (void *)(v8 - 8);
    uint64_t v9 = v10;
    if (v5 >= v7)
    {
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      uint64_t v13 = v7;
LABEL_6:
      *(void *)a3 = a2 + *(void *)(v9 + 72) * v4;
      *(void *)(a3 + 8) = v13;
      *(void *)(a3 + 16) = v11;
      *(void *)(a3 + 24) = v12;
      *(unsigned char *)(a3 + 32) = v5 >= v7;
      return result;
    }
    uint64_t v12 = v7 - v5;
    if (!__OFSUB__(v7, v5))
    {
      uint64_t v13 = v5;
      uint64_t v11 = a2;
      goto LABEL_6;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000D12CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  unint64_t v7 = a7;
  if (a7) {
    unint64_t v7 = a7 + *(void *)(*(void *)(sub_1001BFC80() - 8) + 72) * a5;
  }
  uint64_t v13 = a2;
  if (__OFADD__(a1, a2 - a1))
  {
    __break(1u);
    goto LABEL_18;
  }
  if (a2 < a1)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (a3)
  {
    uint64_t v14 = a2 - a1;
    if (v13 != a1)
    {
      if (a6 - a5 < v14)
      {
LABEL_20:
        __break(1u);
LABEL_21:
        uint64_t result = sub_1001C15D0();
        __break(1u);
        return result;
      }
      if (v7)
      {
        uint64_t v15 = *(void *)(*(void *)(sub_1001BFC80() - 8) + 72);
        unint64_t v16 = a3 + v15 * a1;
        uint64_t v17 = v15 * v14;
        unint64_t v18 = v7 + v17;
        unint64_t v19 = v16 + v17;
        if (v16 < v18 && v19 > v7) {
          goto LABEL_21;
        }
        swift_arrayInitWithCopy();
      }
    }
  }
  else
  {
    uint64_t v14 = 0;
  }
  uint64_t result = a5 + v14;
  if (__OFADD__(a5, v14))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  return result;
}

uint64_t *sub_1000D1420(uint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = result[1];
  uint64_t v3 = result[2];
  uint64_t v5 = *result;
  if (v4 == a2) {
    return (uint64_t *)a3;
  }
  uint64_t v6 = v3 + v4;
  if (__OFADD__(v3, v4))
  {
    __break(1u);
  }
  else
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      BOOL v7 = __OFSUB__(v6, v5);
      if (v6 < v5) {
        return (uint64_t *)a3;
      }
      v6 -= v5;
      if (!v7) {
        return (uint64_t *)a3;
      }
      __break(1u);
    }
    if ((v6 & 0x8000000000000000) == 0 || !__OFADD__(v6, v5)) {
      return (uint64_t *)a3;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000D1490(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = a2;
  uint64_t v21 = a1;
  uint64_t v2 = sub_1001BF8D0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1001BF0B0();
  uint64_t v22 = *(void *)(v7 - 8);
  uint64_t v23 = v7;
  uint64_t v9 = __chkstk_darwin(v7, v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v12);
  uint64_t v14 = (char *)&v21 - v13;
  uint64_t v15 = enum case for TC2Environment.production(_:);
  unint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v16(v6, enum case for TC2Environment.production(_:), v2);
  uint64_t v25 = 0x5F7365726F7453;
  unint64_t v26 = 0xE700000000000000;
  v27._countAndFlagsBits = sub_1001BF8A0();
  sub_1001C0D00(v27);
  swift_bridgeObjectRelease();
  sub_1001BF030();
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v3 + 8);
  v17(v6, v2);
  v16(v6, v15, v2);
  uint64_t v25 = 0x5F7365726F7453;
  unint64_t v26 = 0xE700000000000000;
  v28._countAndFlagsBits = sub_1001BF8A0();
  sub_1001C0D00(v28);
  swift_bridgeObjectRelease();
  sub_1001BF030();
  swift_bridgeObjectRelease();
  v17(v6, v2);
  sub_1000EF924((uint64_t)v14, (uint64_t)v11);
  uint64_t v18 = v23;
  unint64_t v19 = *(void (**)(char *, uint64_t))(v22 + 8);
  v19(v11, v23);
  return ((uint64_t (*)(char *, uint64_t))v19)(v14, v18);
}

void *sub_1000D1740(uint64_t a1, char *a2)
{
  uint64_t v4 = sub_1001C0A70();
  __chkstk_darwin(v4 - 8, v5);
  unint64_t v59 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1001C0A80();
  uint64_t v62 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v8);
  unint64_t v64 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1001BF0B0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v13 = __chkstk_darwin(v10, v12);
  int64_t v58 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13, v15);
  uint64_t v18 = (char *)&v51 - v17;
  uint64_t v20 = __chkstk_darwin(v16, v19);
  uint64_t v22 = (char *)&v51 - v21;
  __chkstk_darwin(v20, v23);
  uint64_t v25 = (char *)&v51 - v24;
  v66[0] = 0x5F7365726F7453;
  v66[1] = 0xE700000000000000;
  v67._countAndFlagsBits = sub_1001BF8A0();
  sub_1001C0D00(v67);
  swift_bridgeObjectRelease();
  uint64_t v56 = a2;
  sub_1001BF030();
  unint64_t v26 = v22;
  swift_bridgeObjectRelease();
  int64_t v55 = v25;
  sub_1001BF030();
  if (qword_100207970 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_1001C0340();
  uint64_t v28 = sub_10000D978(v27, (uint64_t)qword_10020C6C0);
  uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v57(v18, v22, v10);
  uint64_t v54 = v28;
  uint64_t v29 = sub_1001C0330();
  os_log_type_t v30 = sub_1001C1200();
  BOOL v31 = os_log_type_enabled(v29, v30);
  int v63 = v22;
  uint64_t v61 = v11;
  if (v31)
  {
    uint64_t v32 = swift_slowAlloc();
    uint64_t v52 = v7;
    uint64_t v33 = (uint8_t *)v32;
    uint64_t v34 = swift_slowAlloc();
    uint64_t v53 = a1;
    v66[0] = v34;
    *(_DWORD *)uint64_t v33 = 136315138;
    uint64_t v60 = (void (*)(char *, uint64_t))(v33 + 4);
    sub_1000BDF30((unint64_t *)&qword_10020BF20, 255, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v35 = sub_1001C1780();
    uint64_t v65 = sub_1000DF238(v35, v36, v66);
    unint64_t v26 = v63;
    sub_1001C1310();
    swift_bridgeObjectRelease();
    uint64_t v60 = *(void (**)(char *, uint64_t))(v11 + 8);
    v60(v18, v10);
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "attestation store path: %s", v33, 0xCu);
    swift_arrayDestroy();
    a1 = v53;
    swift_slowDealloc();
    uint64_t v7 = v52;
    swift_slowDealloc();
  }
  else
  {
    uint64_t v60 = *(void (**)(char *, uint64_t))(v11 + 8);
    v60(v18, v10);
  }

  v57(v58, v26, v10);
  sub_1001C0A60();
  int64_t v37 = v64;
  sub_1001C0A90();
  sub_1000BDDC4();
  sub_1001C0B60();
  sub_1001C0AC0();
  sub_1001C09E0();
  sub_1000D4C64();
  uint64_t v38 = v10;
  sub_100003918(&qword_10020CDE8);
  uint64_t v39 = v62;
  unint64_t v40 = (*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_1001CC760;
  (*(void (**)(unint64_t, char *, uint64_t))(v39 + 16))(v41 + v40, v37, v7);
  swift_retain();
  uint64_t v42 = sub_1001C09D0();
  type metadata accessor for TC2AttestationStore();
  int64_t v43 = (void *)swift_allocObject();
  sub_1001C09B0();
  swift_allocObject();
  swift_retain();
  sub_1001C09C0();
  sub_1001C0AB0();
  swift_allocObject();
  uint64_t v44 = sub_1001C0AA0();
  swift_release();
  uint64_t v45 = sub_1000BDF30((unint64_t *)&unk_10020CDF0, 255, (void (*)(uint64_t))&type metadata accessor for DefaultSerialModelExecutor);
  v43[2] = v44;
  v43[3] = v45;
  v43[4] = v42;
  uint64_t v46 = v60;
  v60(v56, v38);
  uint64_t v47 = sub_1001BF8D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(a1, v47);
  uint64_t v48 = v63;
  uint64_t v49 = v55;
  (*(void (**)(char *, uint64_t))(v39 + 8))(v64, v7);
  v46(v48, v38);
  v46(v49, v38);
  return v43;
}

uint64_t _s20privatecloudcomputed32TC2AttestationStoreMigrationPlanO0bcD9Schema_v1O0b6ParamsD5EntryC14schemaMetadataSay9SwiftData0G0C08PropertyL0VGvgZ_0()
{
  uint64_t v18 = sub_1001C0AF0();
  uint64_t v0 = *(void *)(v18 - 8);
  uint64_t v1 = v0;
  __chkstk_darwin(v18, v2);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100003918(&qword_10020CD90);
  uint64_t v5 = *(void *)(v0 + 72);
  unint64_t v6 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1001CD800;
  unint64_t v17 = v6;
  swift_getKeyPath();
  long long v22 = 0u;
  long long v23 = 0u;
  uint64_t v21 = 0;
  long long v19 = 0u;
  long long v20 = 0u;
  sub_1001C0AE0();
  swift_getKeyPath();
  long long v22 = 0u;
  long long v23 = 0u;
  uint64_t v21 = 0;
  long long v19 = 0u;
  long long v20 = 0u;
  sub_1001C0AE0();
  swift_getKeyPath();
  long long v22 = 0u;
  long long v23 = 0u;
  uint64_t v21 = 0;
  long long v19 = 0u;
  long long v20 = 0u;
  sub_1001C0AE0();
  swift_getKeyPath();
  long long v22 = 0u;
  long long v23 = 0u;
  uint64_t v21 = 0;
  long long v19 = 0u;
  long long v20 = 0u;
  sub_1001C0AE0();
  swift_getKeyPath();
  long long v22 = 0u;
  long long v23 = 0u;
  uint64_t v21 = 0;
  long long v19 = 0u;
  long long v20 = 0u;
  sub_1001C0AE0();
  swift_getKeyPath();
  *((void *)&v23 + 1) = sub_100003918(&qword_10020CDC0);
  *(void *)&long long v22 = _swiftEmptyArrayStorage;
  uint64_t v21 = 0;
  long long v19 = 0u;
  long long v20 = 0u;
  sub_1001C0AE0();
  swift_getKeyPath();
  long long v22 = 0u;
  long long v23 = 0u;
  uint64_t v21 = 0;
  long long v19 = 0u;
  long long v20 = 0u;
  sub_1001C0AE0();
  swift_getKeyPath();
  long long v22 = 0u;
  long long v23 = 0u;
  uint64_t v21 = 0;
  long long v19 = 0u;
  long long v20 = 0u;
  sub_1001C0AE0();
  swift_getKeyPath();
  long long v22 = 0u;
  long long v23 = 0u;
  sub_100003918(&qword_10020CDC8);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1001CC760;
  sub_100003918((uint64_t *)&unk_10020CE00);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1001D2520;
  *(void *)(v9 + 32) = swift_getKeyPath();
  *(void *)(v9 + 40) = swift_getKeyPath();
  *(void *)(v9 + 48) = swift_getKeyPath();
  uint64_t v10 = v4;
  *(void *)(v9 + 56) = swift_getKeyPath();
  *(void *)&long long v19 = v9;
  sub_1001C0E10();
  *(void *)(v8 + 32) = v19;
  uint64_t v11 = sub_100003918(&qword_10020CDD0);
  swift_allocObject();
  uint64_t v12 = sub_1001C0B00();
  *((void *)&v20 + 1) = v11;
  uint64_t v21 = sub_100016710(&qword_10020CDD8, &qword_10020CDD0);
  *(void *)&long long v19 = v12;
  sub_1001C0AE0();
  uint64_t v13 = sub_1000E45C8(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
  unint64_t v15 = *(void *)(v13 + 16);
  unint64_t v14 = *(void *)(v13 + 24);
  if (v15 >= v14 >> 1) {
    uint64_t v13 = sub_1000E45C8(v14 > 1, v15 + 1, 1, v13);
  }
  *(void *)(v13 + 16) = v15 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(v13 + v17 + v15 * v5, v10, v18);
  *(void *)&long long v19 = v7;
  sub_1000D0FD8(v13);
  return v19;
}

void *sub_1000D2550(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, char *a7, uint64_t a8, unint64_t a9, uint64_t a10, unint64_t a11, uint64_t a12, unint64_t a13, uint64_t a14, unint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v18 = v17;
  uint64_t v41 = a8;
  uint64_t v53 = a7;
  unint64_t v39 = a6;
  uint64_t v38 = a5;
  unint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v50 = a16;
  uint64_t v51 = a17;
  uint64_t v48 = a14;
  unint64_t v49 = a15;
  unint64_t v45 = a13;
  uint64_t v44 = a12;
  unint64_t v43 = a11;
  uint64_t v42 = a10;
  unint64_t v40 = a9;
  uint64_t v21 = *v17;
  uint64_t v52 = sub_1001BF2C0();
  uint64_t v54 = *(void *)(v52 - 8);
  __chkstk_darwin(v52, v22);
  uint64_t v24 = (char *)&v35 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[6] = sub_100003918(&qword_100207A28);
  uint64_t v47 = (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry;
  uint64_t v25 = sub_1000BDF30(&qword_100207A30, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
  v60[0] = v21;
  v60[1] = v21;
  v60[2] = v25;
  uint64_t v61 = v25;
  v18[7] = swift_getOpaqueTypeConformance2();
  sub_10000395C(v18 + 3);
  sub_1001C0A00();
  *((unsigned char *)v18 + 16) = 1;
  uint64_t v46 = (char *)v18
      + OBJC_IVAR____TtCOO20privatecloudcomputed32TC2AttestationStoreMigrationPlan28TC2AttestationStoreSchema_v116TCNodeStoreEntry___observationRegistrar;
  _s20privatecloudcomputed32TC2AttestationStoreMigrationPlanO0bcD9Schema_v1O0b6ParamsD5EntryC22__observationRegistrar33_20CBFB716EC7F30A6F7841E732D6946911Observation0tL0Vvpfi_0();
  sub_100032890((uint64_t)(v18 + 3), (uint64_t)v60);
  sub_10000D934(v60, v61);
  swift_getKeyPath();
  uint64_t v58 = a1;
  unint64_t v59 = a2;
  sub_1001C0920();
  swift_bridgeObjectRelease();
  swift_release();
  sub_100003E90((uint64_t)v60);
  sub_100032890((uint64_t)(v18 + 3), (uint64_t)v60);
  sub_10000D934(v60, v61);
  swift_getKeyPath();
  uint64_t v58 = v36;
  unint64_t v59 = v37;
  sub_1001C0920();
  swift_bridgeObjectRelease();
  swift_release();
  sub_100003E90((uint64_t)v60);
  sub_100032890((uint64_t)(v18 + 3), (uint64_t)v60);
  sub_10000D934(v60, v61);
  swift_getKeyPath();
  uint64_t v26 = v38;
  unint64_t v27 = v39;
  uint64_t v58 = v38;
  unint64_t v59 = v39;
  sub_100007B14(v38, v39);
  sub_1000D43A4();
  sub_1001C0920();
  swift_release();
  sub_10000792C(v26, v27);
  sub_100003E90((uint64_t)v60);
  uint64_t v28 = v54;
  uint64_t v29 = v52;
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v24, v53, v52);
  sub_100032890((uint64_t)(v18 + 3), (uint64_t)v60);
  sub_10000D934(v60, v61);
  swift_getKeyPath();
  sub_1000BDF30(qword_1002084E8, 255, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1001C0920();
  swift_release();
  uint64_t v30 = v28 + 8;
  BOOL v31 = *(void (**)(char *, uint64_t))(v28 + 8);
  uint64_t v54 = v30;
  v31(v24, v29);
  sub_100003E90((uint64_t)v60);
  sub_100032890((uint64_t)(v18 + 3), (uint64_t)v60);
  sub_10000D934(v60, v61);
  swift_getKeyPath();
  uint64_t v32 = v41;
  unint64_t v33 = v40;
  uint64_t v58 = v41;
  unint64_t v59 = v40;
  sub_100007B14(v41, v40);
  sub_1001C0920();
  swift_release();
  sub_10000792C(v32, v33);
  sub_100003E90((uint64_t)v60);
  sub_100032890((uint64_t)(v18 + 3), (uint64_t)v60);
  sub_10000D934(v60, v61);
  swift_getKeyPath();
  uint64_t v58 = v42;
  unint64_t v59 = v43;
  sub_1001C0920();
  swift_bridgeObjectRelease();
  swift_release();
  sub_100003E90((uint64_t)v60);
  sub_100032890((uint64_t)(v18 + 3), (uint64_t)v60);
  sub_10000D934(v60, v61);
  swift_getKeyPath();
  uint64_t v58 = v44;
  unint64_t v59 = v45;
  sub_1001C0920();
  swift_bridgeObjectRelease();
  swift_release();
  sub_100003E90((uint64_t)v60);
  sub_100032890((uint64_t)(v18 + 3), (uint64_t)v60);
  sub_10000D934(v60, v61);
  swift_getKeyPath();
  uint64_t v58 = v48;
  unint64_t v59 = v49;
  sub_1001C0920();
  swift_bridgeObjectRelease();
  swift_release();
  sub_100003E90((uint64_t)v60);
  v60[0] = v18;
  swift_getKeyPath();
  int64_t v55 = v18;
  uint64_t v56 = v50;
  uint64_t v57 = v51;
  sub_1000BDF30(&qword_10020C748, 255, v47);
  sub_1001BF400();
  swift_release();
  swift_bridgeObjectRelease();
  v31(v53, v52);
  return v18;
}

uint64_t _s20privatecloudcomputed32TC2AttestationStoreMigrationPlanO0bcD9Schema_v1O06TCNodeD5EntryC14schemaMetadataSay9SwiftData0G0C08PropertyL0VGvgZ_0()
{
  uint64_t v20 = sub_1001C0AF0();
  uint64_t v0 = *(void *)(v20 - 8);
  uint64_t v1 = v0;
  __chkstk_darwin(v20, v2);
  long long v19 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100003918(&qword_10020CD90);
  uint64_t v4 = *(void *)(v0 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1001D2530;
  swift_getKeyPath();
  long long v24 = 0u;
  long long v25 = 0u;
  sub_100003918(&qword_10020CD98);
  sub_1001C0B30();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001CC760;
  sub_1001C0B20();
  uint64_t v7 = sub_1001C0B40();
  swift_allocObject();
  uint64_t v8 = sub_1001C0B50();
  *((void *)&v22 + 1) = v7;
  uint64_t v23 = sub_1000BDF30(&qword_10020CDA0, 255, (void (*)(uint64_t))&type metadata accessor for Schema.Attribute);
  *(void *)&long long v21 = v8;
  sub_1001C0AE0();
  swift_getKeyPath();
  long long v24 = 0u;
  long long v25 = 0u;
  uint64_t v23 = 0;
  long long v21 = 0u;
  long long v22 = 0u;
  sub_1001C0AE0();
  swift_getKeyPath();
  long long v24 = 0u;
  long long v25 = 0u;
  uint64_t v23 = 0;
  long long v21 = 0u;
  long long v22 = 0u;
  sub_1001C0AE0();
  swift_getKeyPath();
  long long v24 = 0u;
  long long v25 = 0u;
  uint64_t v23 = 0;
  long long v21 = 0u;
  long long v22 = 0u;
  sub_1001C0AE0();
  swift_getKeyPath();
  long long v24 = 0u;
  long long v25 = 0u;
  uint64_t v23 = 0;
  long long v21 = 0u;
  long long v22 = 0u;
  sub_1001C0AE0();
  swift_getKeyPath();
  long long v24 = 0u;
  long long v25 = 0u;
  uint64_t v23 = 0;
  long long v21 = 0u;
  long long v22 = 0u;
  sub_1001C0AE0();
  swift_getKeyPath();
  long long v24 = 0u;
  long long v25 = 0u;
  uint64_t v23 = 0;
  long long v21 = 0u;
  long long v22 = 0u;
  sub_1001C0AE0();
  swift_getKeyPath();
  long long v24 = 0u;
  long long v25 = 0u;
  uint64_t v23 = 0;
  long long v21 = 0u;
  long long v22 = 0u;
  sub_1001C0AE0();
  swift_getKeyPath();
  long long v24 = 0u;
  long long v25 = 0u;
  uint64_t v23 = 0;
  long long v21 = 0u;
  long long v22 = 0u;
  sub_1001C0AE0();
  swift_getKeyPath();
  long long v24 = 0u;
  long long v25 = 0u;
  sub_100003918(&qword_10020CDA8);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1001CD7F0;
  sub_100003918((uint64_t *)&unk_10020CE00);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1001D2540;
  *(void *)(v10 + 32) = swift_getKeyPath();
  *(void *)&long long v21 = v10;
  sub_1001C0E10();
  *(void *)(v9 + 32) = v21;
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1001D2550;
  *(void *)(v11 + 32) = swift_getKeyPath();
  *(void *)(v11 + 40) = swift_getKeyPath();
  *(void *)&long long v21 = v11;
  sub_1001C0E10();
  *(void *)(v9 + 40) = v21;
  uint64_t v12 = sub_100003918(&qword_10020CDB0);
  swift_allocObject();
  uint64_t v13 = sub_1001C0B00();
  *((void *)&v22 + 1) = v12;
  unint64_t v14 = v19;
  uint64_t v23 = sub_100016710(&qword_10020CDB8, &qword_10020CDB0);
  *(void *)&long long v21 = v13;
  sub_1001C0AE0();
  uint64_t v15 = sub_1000E45C8(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
  unint64_t v17 = *(void *)(v15 + 16);
  unint64_t v16 = *(void *)(v15 + 24);
  if (v17 >= v16 >> 1) {
    uint64_t v15 = sub_1000E45C8(v16 > 1, v17 + 1, 1, v15);
  }
  *(void *)(v15 + 16) = v17 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(v15 + v5 + v17 * v4, v14, v20);
  *(void *)&long long v21 = v6;
  sub_1000D0FD8(v15);
  return v21;
}

uint64_t sub_1000D3350()
{
  return sub_1000BDF30(&qword_10020C720, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
}

uint64_t sub_1000D339C()
{
  return sub_1000BDF30(&qword_10020C728, 255, (void (*)(uint64_t))&type metadata accessor for PersistentIdentifier);
}

uint64_t sub_1000D33E8()
{
  return sub_1000BDF30(&qword_10020C730, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
}

uint64_t sub_1000D3434()
{
  return sub_1000BDF30(&qword_10020C738, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
}

uint64_t sub_1000D3480()
{
  return sub_1000BDF30(&qword_10020C708, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
}

uint64_t sub_1000D34CC()
{
  return sub_1000BDF30(&qword_10020C740, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
}

uint64_t sub_1000D3518()
{
  return sub_1000BDF30(&qword_10020C748, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
}

uint64_t sub_1000D3564()
{
  return sub_1000BDF30(&qword_10020C718, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
}

uint64_t sub_1000D35B0()
{
  return sub_1000BDF30(&qword_10020C750, 255, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
}

ValueMetadata *type metadata accessor for TC2AttestationStoreMigrationPlan()
{
  return &type metadata for TC2AttestationStoreMigrationPlan;
}

ValueMetadata *type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1()
{
  return &type metadata for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1;
}

uint64_t sub_1000D361C()
{
  return type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry(0);
}

uint64_t sub_1000D3624()
{
  uint64_t result = sub_1001BF430();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1000D36E8()
{
  return type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry(0);
}

uint64_t sub_1000D36F0()
{
  uint64_t result = sub_1001BF430();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for TC2AttestationStore()
{
  return self;
}

ValueMetadata *type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry._SwiftDataNoType()
{
  return &type metadata for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry._SwiftDataNoType;
}

ValueMetadata *type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry._SwiftDataNoType()
{
  return &type metadata for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry._SwiftDataNoType;
}

uint64_t sub_1000D37F8(uint64_t a1, uint64_t a2)
{
  return sub_1000BDF30(&qword_10020C4E0, a2, (void (*)(uint64_t))type metadata accessor for TC2AttestationStore);
}

uint64_t sub_1000D3840@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000CCD50(a1, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32), *(void *)(v2 + 40), *(void **)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), a2);
}

uint64_t sub_1000D387C()
{
  return sub_1000D4BB0(&qword_10020CB38, &qword_10020CAB8, (void (*)(void))sub_1000D38B8, (void (*)(void))sub_1000D3AB8);
}

uint64_t sub_1000D38B8()
{
  return sub_1000D4BB0(&qword_10020CB40, &qword_10020CAB0, (void (*)(void))sub_1000D38F4, (void (*)(void))sub_1000D3968);
}

unint64_t sub_1000D38F4()
{
  unint64_t result = qword_10020CB48;
  if (!qword_10020CB48)
  {
    sub_1000166C8(&qword_10020CAA8);
    sub_1000D3968();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020CB48);
  }
  return result;
}

unint64_t sub_1000D3968()
{
  unint64_t result = qword_10020CB50;
  if (!qword_10020CB50)
  {
    sub_1000166C8(&qword_10020CAA0);
    sub_1000D3A24(&qword_10020CB58, &qword_10020CA98, &qword_10020CB60, &qword_10020CA90);
    sub_1000D4040(&qword_10020CB68, &qword_10020CA88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020CB50);
  }
  return result;
}

uint64_t sub_1000D3A24(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000166C8(a2);
    sub_100016710(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000D3AB8()
{
  unint64_t result = qword_10020CB70;
  if (!qword_10020CB70)
  {
    sub_1000166C8(&qword_10020CA80);
    sub_1000D3A24(&qword_10020CB78, &qword_10020CA78, &qword_10020CB60, &qword_10020CA90);
    sub_1000D3B54();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020CB70);
  }
  return result;
}

unint64_t sub_1000D3B54()
{
  unint64_t result = qword_10020CB80;
  if (!qword_10020CB80)
  {
    sub_1000166C8(&qword_10020CA70);
    sub_1000BDF30(&qword_1002084D8, 255, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1000BDF30(qword_1002084E8, 255, (void (*)(uint64_t))&type metadata accessor for Date);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020CB80);
  }
  return result;
}

unint64_t sub_1000D3C34()
{
  unint64_t result = qword_10020CB88;
  if (!qword_10020CB88)
  {
    sub_1000166C8(&qword_10020CA68);
    sub_1000D3A24(&qword_10020CB90, &qword_10020CA60, &qword_10020CB60, &qword_10020CA90);
    sub_100016710(&qword_10020CB98, &qword_10020CA58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020CB88);
  }
  return result;
}

uint64_t sub_1000D3CF4()
{
  return sub_1000BFC1C();
}

uint64_t sub_1000D3D10(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000166C8(qword_100208CD0);
    sub_1000BDF30(a2, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000D3DA8()
{
  return sub_1000C1218(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_1001D2B20, &qword_100207A20, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
}

uint64_t sub_1000D3DFC()
{
  return sub_1000C2004(v0[2], v0[3], v0[4], (uint64_t)&unk_1001D2AF8, &qword_100207A20, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
}

uint64_t sub_1000D3E54()
{
  return sub_1000C2004(v0[2], v0[3], v0[4], (uint64_t)&unk_1001D2AD0, &qword_100207A20, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
}

uint64_t sub_1000D3EAC()
{
  return sub_1000C2004(v0[2], v0[3], v0[4], (uint64_t)&unk_1001D2AA8, &qword_100207A20, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TC2ParamsStoreEntry);
}

uint64_t sub_1000D3F04()
{
  return sub_1000BF3D0();
}

uint64_t sub_1000D3F30()
{
  return sub_1000BF79C();
}

uint64_t sub_1000D3F4C()
{
  return sub_1000BEBAC();
}

uint64_t sub_1000D3F6C(uint64_t a1)
{
  return sub_1000D42D0(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_1000C8F4C);
}

unint64_t sub_1000D3F84()
{
  unint64_t result = qword_10020CBF8;
  if (!qword_10020CBF8)
  {
    sub_1000166C8(&qword_10020CBD0);
    sub_1000D3A24(&qword_10020CC00, &qword_10020CBC8, &qword_10020CB60, &qword_10020CA90);
    sub_1000D4040(&qword_10020CC08, &qword_10020CBC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020CBF8);
  }
  return result;
}

uint64_t sub_1000D4040(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000166C8(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000D40B0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000C9E90(a1, *(void **)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), a2);
}

unint64_t sub_1000D40CC()
{
  unint64_t result = qword_10020CC80;
  if (!qword_10020CC80)
  {
    sub_1000166C8(&qword_10020CC50);
    sub_1000D3A24(&qword_10020CC88, &qword_10020CC48, &qword_10020CC90, &qword_10020CC40);
    sub_1000D4040(&qword_10020CB68, &qword_10020CA88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020CC80);
  }
  return result;
}

unint64_t sub_1000D4188()
{
  unint64_t result = qword_10020CC98;
  if (!qword_10020CC98)
  {
    sub_1000166C8(&qword_10020CC38);
    sub_1000D3A24(&qword_10020CCA0, &qword_10020CC30, &qword_10020CC90, &qword_10020CC40);
    sub_1000D3B54();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020CC98);
  }
  return result;
}

uint64_t sub_1000D4224()
{
  return sub_1000C1218(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_1001D2BE8, &qword_100207A30, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
}

uint64_t sub_1000D4278()
{
  return sub_1000C2004(v0[2], v0[3], v0[4], (uint64_t)&unk_1001D2BC0, &qword_100207A30, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
}

uint64_t sub_1000D42D0(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8]);
}

uint64_t sub_1000D42EC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ValidatedAttestation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_1000D4350@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1000C1404(a1, a2);
}

uint64_t sub_1000D4370(uint64_t *a1)
{
  return sub_1000C1538(a1);
}

unint64_t sub_1000D43A4()
{
  unint64_t result = qword_10020CCB8;
  if (!qword_10020CCB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020CCB8);
  }
  return result;
}

double sub_1000D43F8@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1000C1404(a1, a2);
}

uint64_t sub_1000D4418(uint64_t *a1)
{
  return sub_1000C1538(a1);
}

uint64_t sub_1000D446C()
{
  return sub_1000C2418();
}

uint64_t sub_1000D448C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000166C8(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000D44EC()
{
  return sub_1000C2004(v0[2], v0[3], v0[4], (uint64_t)&unk_1001D2CD8, &qword_100207A30, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
}

uint64_t sub_1000D4544()
{
  return sub_1000C2004(v0[2], v0[3], v0[4], (uint64_t)&unk_1001D2CB0, &qword_100207A30, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
}

uint64_t sub_1000D459C()
{
  return sub_1000C2004(v0[2], v0[3], v0[4], (uint64_t)&unk_1001D2C88, &qword_100207A30, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
}

uint64_t sub_1000D45F4()
{
  return sub_1000C161C();
}

unint64_t sub_1000D461C()
{
  unint64_t result = qword_10020CCD0;
  if (!qword_10020CCD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020CCD0);
  }
  return result;
}

uint64_t sub_1000D4670()
{
  return sub_1000C161C();
}

uint64_t sub_1000D4698()
{
  return sub_1000C2004(v0[2], v0[3], v0[4], (uint64_t)&unk_1001D2C10, &qword_100207A30, (void (*)(uint64_t))type metadata accessor for TC2AttestationStoreMigrationPlan.TC2AttestationStoreSchema_v1.TCNodeStoreEntry);
}

uint64_t sub_1000D46F0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000C8458(a1);
}

unint64_t sub_1000D46F8()
{
  unint64_t result = qword_10020CCE0;
  if (!qword_10020CCE0)
  {
    sub_1000166C8(&qword_10020CCD8);
    sub_1000D3B54();
    sub_1000D3A24(&qword_10020CCA0, &qword_10020CC30, &qword_10020CC90, &qword_10020CC40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020CCE0);
  }
  return result;
}

uint64_t sub_1000D4794@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000C55F8(*(void *)(v1 + 16), a1);
}

uint64_t sub_1000D479C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ValidatedAttestation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000D4800()
{
  unint64_t result = qword_10020CD00;
  if (!qword_10020CD00)
  {
    sub_1000166C8(&qword_10020CCF8);
    sub_1000D489C();
    sub_1000D3A24(&qword_10020CC88, &qword_10020CC48, &qword_10020CC90, &qword_10020CC40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020CD00);
  }
  return result;
}

unint64_t sub_1000D489C()
{
  unint64_t result = qword_10020CD08;
  if (!qword_10020CD08)
  {
    sub_1000166C8(&qword_10020CCF0);
    sub_1000D448C(&qword_10020CA50, &qword_10020C6F0);
    sub_1000D448C(&qword_10020C6F8, &qword_10020C6F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020CD08);
  }
  return result;
}

uint64_t sub_1000D4978(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100003918(&qword_10020CD28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000D49E0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000CF05C(*(void *)(v1 + 16), a1);
}

uint64_t sub_1000D49FC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000CF4A8(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

unint64_t sub_1000D4A18()
{
  unint64_t result = qword_10020CD58;
  if (!qword_10020CD58)
  {
    sub_1000166C8(&qword_10020CD50);
    sub_1000D3A24(&qword_10020CB90, &qword_10020CA60, &qword_10020CB60, &qword_10020CA90);
    sub_1000D4AB4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020CD58);
  }
  return result;
}

unint64_t sub_1000D4AB4()
{
  unint64_t result = qword_10020CD60;
  if (!qword_10020CD60)
  {
    sub_1000166C8(&qword_10020CD48);
    sub_1000D3D10(&qword_10020CBB8, &qword_100208880);
    sub_1000D3D10(&qword_10020CBB0, &qword_1002088A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020CD60);
  }
  return result;
}

uint64_t sub_1000D4BA0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000C77AC(a1, *(void **)(v2 + 16), *(void (**)(void, void))(v2 + 24), *(void **)(v2 + 32), *(void **)(v2 + 40), *(void **)(v2 + 48), *(void **)(v2 + 56), a2);
}

uint64_t sub_1000D4BB0(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000166C8(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000D4C38()
{
  return sub_1001C0AD0();
}

uint64_t sub_1000D4C5C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000C9418(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_1000D4C64()
{
  unint64_t result = qword_10020CDE0;
  if (!qword_10020CDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020CDE0);
  }
  return result;
}

uint64_t sub_1000D4CBC()
{
  return sub_1000D3F04();
}

uint64_t sub_1000D4CD8()
{
  return sub_1000D3CF4();
}

uint64_t sub_1000D4CF0()
{
  return sub_1000D446C();
}

uint64_t sub_1000D4D08@<X0>(char *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v128 = a3;
  uint64_t v129 = a4;
  long long v130 = a1;
  uint64_t v5 = type metadata accessor for TrustedRequestConfiguration();
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v123 = (char *)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100003918(&qword_100209360);
  uint64_t v10 = __chkstk_darwin(v8 - 8, v9);
  uint64_t v126 = (uint64_t)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v12);
  uint64_t v121 = (uint64_t)&v103 - v13;
  uint64_t v127 = sub_1001BFE20();
  unint64_t v124 = *(void *)(v127 - 8);
  uint64_t v15 = __chkstk_darwin(v127, v14);
  uint64_t v122 = (char *)&v103 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v17);
  long long v19 = (char *)&v103 - v18;
  uint64_t v20 = sub_100003918(&qword_100209368);
  uint64_t v22 = __chkstk_darwin(v20 - 8, v21);
  long long v24 = (char *)&v103 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22, v25);
  unint64_t v27 = (char *)&v103 - v26;
  uint64_t v28 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate(0);
  uint64_t v125 = *(void *)(v28 - 8);
  uint64_t v30 = __chkstk_darwin(v28, v29);
  uint64_t v32 = (char *)&v103 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30, v33);
  uint64_t v35 = (char *)&v103 - v34;
  uint64_t v36 = sub_1001BF2C0();
  uint64_t v37 = *(void *)(v36 - 8);
  __chkstk_darwin(v36, v38);
  unint64_t v40 = (char *)&v103 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for RateLimitTimingDetails(0);
  uint64_t v43 = __chkstk_darwin(v41, v42);
  if (a2[7])
  {
    sub_1000D5B24(v128, (uint64_t (*)(void))type metadata accessor for TrustedRequestConfiguration);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v130, v36);
    sub_1000D5B24((uint64_t)a2, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
    uint64_t v45 = type metadata accessor for RateLimitConfiguration(0);
    uint64_t v46 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56);
    uint64_t v47 = v45;
    uint64_t v48 = v129;
    return v46(v48, 1, 1, v47);
  }
  else
  {
    uint64_t v103 = v35;
    uint64_t v111 = v27;
    uint64_t v112 = v28;
    uint64_t v113 = v24;
    unint64_t v104 = v32;
    uint64_t v105 = v19;
    uint64_t v117 = v43;
    uint64_t v118 = (char **)((char *)&v103 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0));
    uint64_t v119 = v40;
    uint64_t v120 = v36;
    unint64_t v50 = v124;
    unint64_t v51 = a2[1];
    uint64_t v52 = (uint64_t)a2;
    uint64_t v53 = HIBYTE(v51) & 0xF;
    if ((v51 & 0x2000000000000000) == 0) {
      uint64_t v53 = *a2 & 0xFFFFFFFFFFFFLL;
    }
    if (v53)
    {
      uint64_t v109 = *a2;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v109 = 0;
      unint64_t v51 = 0;
    }
    uint64_t v55 = a2[2];
    unint64_t v54 = a2[3];
    uint64_t v56 = HIBYTE(v54) & 0xF;
    if ((v54 & 0x2000000000000000) == 0) {
      uint64_t v56 = v55 & 0xFFFFFFFFFFFFLL;
    }
    if (v56)
    {
      uint64_t v108 = a2[3];
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v55 = 0;
      uint64_t v108 = 0;
    }
    uint64_t v57 = v119;
    unint64_t v58 = *(void *)(v52 + 40);
    uint64_t v59 = HIBYTE(v58) & 0xF;
    if ((v58 & 0x2000000000000000) == 0) {
      uint64_t v59 = *(void *)(v52 + 32) & 0xFFFFFFFFFFFFLL;
    }
    if (v59)
    {
      uint64_t v107 = *(void *)(v52 + 32);
      unint64_t v106 = v58;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v107 = 0;
      unint64_t v106 = 0;
    }
    uint64_t v60 = swift_bridgeObjectRetain();
    uint64_t v114 = sub_1000D5788(v60);
    swift_bridgeObjectRelease();
    uint64_t v116 = v37;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v57, v130, v120);
    uint64_t v61 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration(0);
    uint64_t v62 = v52 + *(int *)(v61 + 44);
    uint64_t v63 = (uint64_t)v111;
    sub_10003282C(v62, (uint64_t)v111, &qword_100209368);
    unint64_t v64 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v125 + 48);
    uint64_t v65 = v112;
    int v66 = v64(v63, 1, v112);
    uint64_t v110 = v61;
    if (v66 == 1)
    {
      Swift::String v67 = v103;
      *(_DWORD *)uint64_t v103 = 0;
      _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56))(&v67[*(int *)(v65 + 24)], 1, 1, v127);
      sub_100010360(v63, &qword_100209368);
      uint64_t v68 = v67;
    }
    else
    {
      uint64_t v69 = v63;
      uint64_t v70 = (unsigned int *)v103;
      sub_1000D5B84(v69, (uint64_t)v103, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate);
      uint64_t v68 = (char *)v70;
    }
    uint64_t v71 = v104;
    uint64_t v72 = *(unsigned int *)v68;
    sub_1000D5B24((uint64_t)v68, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate);
    uint64_t v73 = v62;
    uint64_t v74 = (uint64_t)v113;
    sub_10003282C(v73, (uint64_t)v113, &qword_100209368);
    int v75 = v64(v74, 1, v65);
    unint64_t v124 = v51;
    uint64_t v125 = v72;
    uint64_t v115 = v55;
    if (v75 == 1)
    {
      *(_DWORD *)uint64_t v71 = 0;
      _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
      uint64_t v76 = v127;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56))(&v71[*(int *)(v65 + 24)], 1, 1, v127);
      sub_100010360(v74, &qword_100209368);
    }
    else
    {
      sub_1000D5B84(v74, (uint64_t)v71, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate);
      uint64_t v76 = v127;
    }
    uint64_t v77 = v128;
    uint64_t v78 = (uint64_t)v123;
    uint64_t v79 = v105;
    uint64_t v80 = v121;
    sub_10003282C((uint64_t)&v71[*(int *)(v65 + 24)], v121, &qword_100209360);
    uint64_t v81 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48);
    if (v81(v80, 1, v76) == 1)
    {
      sub_1001BFE10();
      sub_100010360(v80, &qword_100209360);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v50 + 32))(v79, v80, v76);
    }
    sub_1000D5B24((uint64_t)v71, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration.Rate);
    sub_1001BFE00();
    double v83 = v82;
    uint64_t v84 = *(void (**)(char *, uint64_t))(v50 + 8);
    v84(v79, v76);
    uint64_t v85 = v126;
    sub_10003282C(v52 + *(int *)(v110 + 48), v126, &qword_100209360);
    if (v81(v85, 1, v76) == 1)
    {
      uint64_t v86 = v122;
      sub_1001BFE10();
      sub_100010360(v85, &qword_100209360);
    }
    else
    {
      uint64_t v86 = v122;
      (*(void (**)(char *, uint64_t, uint64_t))(v50 + 32))(v122, v85, v76);
    }
    uint64_t v87 = v129;
    sub_1001BFE00();
    v84(v86, v76);
    double v88 = *(double *)(v52 + 72);
    sub_1000D5BEC(v77, v78, (uint64_t (*)(void))type metadata accessor for TrustedRequestConfiguration);
    if (v83 < 0.0) {
      double v89 = 0.0;
    }
    else {
      double v89 = v83;
    }
    if (*(double *)(v78 + 40) >= v89) {
      double v90 = v89;
    }
    else {
      double v90 = *(double *)(v78 + 40);
    }
    uint64_t v91 = v117;
    uint64_t v92 = (uint64_t)v118;
    *uint64_t v118 = v125;
    *(double *)(v92 + 8) = v90;
    uint64_t v93 = v119;
    sub_1001BF250();
    if (v88 == 0.0) {
      double v88 = *(double *)(v78 + 56);
    }
    double v94 = 1.0;
    if (v88 <= 1.0) {
      double v94 = v88;
    }
    if (v88 < 0.0) {
      double v95 = 0.0;
    }
    else {
      double v95 = v94;
    }
    sub_1000D5B24(v78, (uint64_t (*)(void))type metadata accessor for TrustedRequestConfiguration);
    uint64_t v96 = *(void (**)(char *, uint64_t))(v116 + 8);
    unint64_t v97 = v93;
    uint64_t v98 = v120;
    v96(v97, v120);
    *(double *)(v92 + *(int *)(v91 + 28)) = v90 * v95;
    sub_1000D5B24(v77, (uint64_t (*)(void))type metadata accessor for TrustedRequestConfiguration);
    v96(v130, v98);
    unint64_t v99 = v124;
    *uint64_t v87 = v109;
    v87[1] = v99;
    uint64_t v100 = v108;
    v87[2] = v115;
    v87[3] = v100;
    unint64_t v101 = v106;
    v87[4] = v107;
    v87[5] = v101;
    v87[6] = v114;
    uint64_t v102 = type metadata accessor for RateLimitConfiguration(0);
    sub_1000D5B84(v92, (uint64_t)v87 + *(int *)(v102 + 20), type metadata accessor for RateLimitTimingDetails);
    sub_1000D5B24(v52, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
    return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v102 - 8) + 56))(v87, 0, 1, v102);
  }
}

uint64_t sub_1000D5788(uint64_t a1)
{
  uint64_t v43 = sub_100003918(&qword_100209370);
  uint64_t v3 = __chkstk_darwin(v43, v2);
  uint64_t v5 = (uint64_t *)((char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v3, v6);
  uint64_t v42 = (char *)&v38 - v7;
  unint64_t v49 = _swiftEmptyArrayStorage;
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v39 = a1 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v41 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v44 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  unint64_t v40 = v5;
  while (1)
  {
    if (v11)
    {
      unint64_t v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v15 = v14 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v16 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v16 >= v41) {
      goto LABEL_29;
    }
    unint64_t v17 = *(void *)(v39 + 8 * v16);
    ++v13;
    if (!v17)
    {
      int64_t v13 = v16 + 1;
      if (v16 + 1 >= v41) {
        goto LABEL_29;
      }
      unint64_t v17 = *(void *)(v39 + 8 * v13);
      if (!v17)
      {
        int64_t v13 = v16 + 2;
        if (v16 + 2 >= v41) {
          goto LABEL_29;
        }
        unint64_t v17 = *(void *)(v39 + 8 * v13);
        if (!v17)
        {
          int64_t v13 = v16 + 3;
          if (v16 + 3 >= v41) {
            goto LABEL_29;
          }
          unint64_t v17 = *(void *)(v39 + 8 * v13);
          if (!v17)
          {
            int64_t v18 = v16 + 4;
            if (v18 >= v41)
            {
LABEL_29:
              swift_release();
              return (uint64_t)v49;
            }
            unint64_t v17 = *(void *)(v39 + 8 * v18);
            int64_t v13 = v18;
            if (!v17) {
              break;
            }
          }
        }
      }
    }
LABEL_21:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
LABEL_22:
    uint64_t v19 = *(void *)(v44 + 56);
    uint64_t v20 = (uint64_t *)(*(void *)(v44 + 48) + 16 * v15);
    uint64_t v22 = *v20;
    uint64_t v21 = v20[1];
    uint64_t v23 = v19 + *(void *)(*(void *)(type metadata accessor for Proto_Ropes_RateLimit_Values(0) - 8) + 72) * v15;
    uint64_t v25 = v42;
    uint64_t v24 = v43;
    sub_1000D5BEC(v23, (uint64_t)&v42[*(int *)(v43 + 48)], type metadata accessor for Proto_Ropes_RateLimit_Values);
    *uint64_t v25 = v22;
    v25[1] = v21;
    sub_10003295C((uint64_t)v25, (uint64_t)v5);
    uint64_t v26 = *(void *)((char *)v5 + *(int *)(v24 + 48));
    int64_t v27 = *(void *)(v26 + 16);
    if (v27)
    {
      unint64_t v46 = v11;
      int64_t v47 = v13;
      uint64_t v28 = *v5;
      uint64_t v29 = v5[1];
      uint64_t v48 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10018F248(0, v27, 0);
      uint64_t v30 = v28;
      uint64_t v31 = v48;
      uint64_t v45 = v26;
      uint64_t v32 = (uint64_t *)(v26 + 40);
      do
      {
        uint64_t v34 = *(v32 - 1);
        uint64_t v33 = *v32;
        uint64_t v48 = v31;
        unint64_t v36 = v31[2];
        unint64_t v35 = v31[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v36 >= v35 >> 1)
        {
          sub_10018F248(v35 > 1, v36 + 1, 1);
          uint64_t v31 = v48;
        }
        v32 += 2;
        v31[2] = v36 + 1;
        uint64_t v37 = &v31[4 * v36];
        v37[4] = v30;
        v37[5] = v29;
        v37[6] = v34;
        v37[7] = v33;
        --v27;
      }
      while (v27);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v5 = v40;
      unint64_t v11 = v46;
      int64_t v13 = v47;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v31 = _swiftEmptyArrayStorage;
    }
    sub_100010360((uint64_t)v5, &qword_100209370);
    uint64_t result = sub_1000D052C((uint64_t)v31);
  }
  while (1)
  {
    int64_t v13 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v13 >= v41) {
      goto LABEL_29;
    }
    unint64_t v17 = *(void *)(v39 + 8 * v13);
    ++v18;
    if (v17) {
      goto LABEL_21;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1000D5B24(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000D5B84(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000D5BEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000D5C54(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v7 = sub_1001BF8E0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  unint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1001C0340();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  int64_t v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v11, enum case for TC2LogCategory.network(_:), v7);
  sub_1001BFDD0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  swift_unknownObjectRetain_n();
  unint64_t v17 = sub_1001C0330();
  os_log_type_t v18 = sub_1001C11F0();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v26 = a4;
    uint64_t v27 = a1;
    uint64_t v28 = v20;
    uint64_t v25 = v12;
    *(_DWORD *)uint64_t v19 = 136315138;
    v24[1] = v19 + 4;
    swift_unknownObjectRetain();
    sub_100003918(&qword_10020CE70);
    uint64_t v21 = sub_1001C0C40();
    uint64_t v27 = sub_1000DF238(v21, v22, &v28);
    uint64_t v12 = v25;
    sub_1001C1310();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "not verifying certificate %s", v19, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_unknownObjectRelease_n();
  }

  a3(1);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
}

uint64_t sub_1000D5F58(uint64_t a1, uint64_t a2, uint64_t a3, void *aBlock)
{
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t (*)(char), uint64_t))(a1 + 32);
  uint64_t v7 = _Block_copy(aBlock);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v6(a2, a3, sub_1000D6618, v8);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_1000D6024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = a3;
    uint64_t v5 = a2;
    uint64_t v6 = a1;
    if (!(*v4 >> 62))
    {
      if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1001C1590();
  swift_bridgeObjectRelease();
  if (v22 < v5) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v8 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v7 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1001C1590();
    swift_bridgeObjectRelease();
    uint64_t v10 = v23 + v7;
    if (!__OFADD__(v23, v7)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (*v4 >> 62) {
    goto LABEL_32;
  }
  uint64_t v9 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v10 = v9 + v7;
  if (__OFADD__(v9, v7)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v11 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v4 = v11;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v11 & 0x8000000000000000) != 0
    || (v11 & 0x4000000000000000) != 0
    || (uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8, v10 > *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v11 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v11 = sub_1001C1450();
      swift_bridgeObjectRelease();
      *uint64_t v4 = v11;
      uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    sub_1001C1590();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  uint64_t v14 = (void *)(v13 + 32 + 8 * v6);
  sub_1001C0760();
  swift_arrayDestroy();
  if (v7)
  {
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_1001C1590();
      swift_bridgeObjectRelease();
      uint64_t v16 = v24 - v5;
      if (!__OFSUB__(v24, v5))
      {
LABEL_17:
        if (v16 < 0)
        {
LABEL_42:
          uint64_t result = sub_1001C15D0();
          __break(1u);
          return result;
        }
        unint64_t v17 = (char *)(v14 + 1);
        os_log_type_t v18 = (char *)(v13 + 32 + 8 * v5);
        if (v14 + 1 != (void *)v18 || v17 >= &v18[8 * v16]) {
          memmove(v17, v18, 8 * v16);
        }
        if (!(v11 >> 62))
        {
          uint64_t v19 = *(void *)(v13 + 16);
          uint64_t v20 = v19 + v7;
          if (!__OFADD__(v19, v7))
          {
LABEL_23:
            *(void *)(v13 + 16) = v20;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v25 = sub_1001C1590();
        swift_bridgeObjectRelease();
        uint64_t v20 = v25 + v7;
        if (!__OFADD__(v25, v7)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v15 = *(void *)(v13 + 16);
      uint64_t v16 = v15 - v5;
      if (!__OFSUB__(v15, v5)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:
  *uint64_t v14 = v3;
  return sub_1001C0E10();
}

uint64_t sub_1000D6310(char a1, char a2, char a3, uint64_t a4, uint64_t a5)
{
  sub_1001C06C0();
  uint64_t v9 = sub_1001C06B0();
  sub_1001C06F0();
  swift_allocObject();
  uint64_t v10 = sub_1001C06E0();
  sub_1001C0720();
  uint64_t v11 = sub_1001C0710();
  if (a2)
  {
    sub_1001C06A0();
    nw_parameters_set_privacy_proxy_fail_closed();
    swift_unknownObjectRelease();
  }
  if (a5)
  {
    swift_bridgeObjectRetain();
    sub_1001C0690();
  }
  if (a1)
  {
    uint64_t v12 = sub_1001C06D0();
    v21[4] = sub_1000D5C54;
    v21[5] = 0;
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 1107296256;
    v21[2] = sub_1000D5F58;
    v21[3] = &unk_1001FF5C8;
    uint64_t v13 = _Block_copy(v21);
    sub_1000A0DDC();
    uint64_t v14 = sub_1001C1240();
    sec_protocol_options_set_verify_block(v12, v13, v14);

    _Block_release(v13);
    swift_unknownObjectRelease();
  }
  sub_1001C0680();
  sub_100003918((uint64_t *)&unk_10020CE00);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1001D2550;
  *(void *)(v15 + 32) = v11;
  *(void *)(v15 + 40) = v10;
  v21[0] = v15;
  sub_1001C0E10();
  swift_retain();
  swift_retain();
  sub_1001C0670();
  swift_release();
  if ((a3 & 1) == 0) {
    goto LABEL_10;
  }
  sub_1001C0780();
  uint64_t v16 = sub_1001C0770();
  sub_1001C0680();
  swift_retain();
  unint64_t v17 = (void (*)(void *, void))sub_1001C0660();
  if (!(*v18 >> 62)
    || (swift_bridgeObjectRetain(),
        uint64_t v20 = sub_1001C1590(),
        uint64_t result = swift_bridgeObjectRelease(),
        (v20 & 0x8000000000000000) == 0))
  {
    sub_1000D6024(0, 0, v16);
    v17(v21, 0);
    swift_release();
    swift_release();
LABEL_10:
    swift_release();
    swift_release();
    return v9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000D65C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000D65D8()
{
  return swift_release();
}

uint64_t sub_1000D65E0()
{
  _Block_release(*(const void **)(v0 + 16));
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000D6618(char a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 16))(*(void *)(v1 + 16), a1 & 1);
}

uint64_t sub_1000D6630(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = sub_1000E42F0(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t v12 = *(void *)(sub_100003918(qword_10020CE78) - 8);
  unint64_t v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v14 = *(void *)(v12 + 72);
  uint64_t v15 = v14 * a1;
  unint64_t v16 = v13 + v14 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v4 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_31;
  }
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v21 = *(void *)(v4 + 16);
    BOOL v22 = __OFADD__(v21, v8);
    uint64_t v23 = v21 - v7;
    if (!v22)
    {
      *(void *)(v4 + 16) = v23;
LABEL_25:
      *uint64_t v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  uint64_t result = sub_1001C15D0();
  __break(1u);
  return result;
}

uint64_t sub_1000D681C()
{
  uint64_t v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    uint64_t v0 = sub_1001C12F0();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return v0;
}

uint64_t sub_1000D6930()
{
  (*(void (**)(uint64_t, void))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 104), *(void *)(*(void *)v0 + 80));
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 112);
  swift_getAssociatedTypeWitness();
  uint64_t v2 = sub_1001C12F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_1000D6A40()
{
  sub_1000D6930();
  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for OverflowValve()
{
  return sub_10000E738();
}

double SystemInfoProtocol.uniqueDeviceIDPercentile.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001C0910();
  uint64_t v25 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1001C0900();
  uint64_t v26 = *(void *)(v8 - 8);
  uint64_t v27 = v8;
  __chkstk_darwin(v8, v9);
  int64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1001C0C30();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  unint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  sub_1001C0C20();
  uint64_t v17 = sub_1001C0C00();
  unint64_t v19 = v18;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  if (v19 >> 60 == 15)
  {
    sub_1001C1580();
    __break(1u);
    JUMPOUT(0x1000D6F48);
  }
  sub_1000D6F58();
  sub_1001C08E0();
  switch(v19 >> 62)
  {
    case 1uLL:
      if (v17 >> 32 < (int)v17) {
        __break(1u);
      }
      sub_100007B14(v17, v19);
      sub_1000D733C((int)v17, v17 >> 32);
      goto LABEL_9;
    case 2uLL:
      uint64_t v20 = *(void *)(v17 + 16);
      uint64_t v21 = *(void *)(v17 + 24);
      sub_10000D9E0(v17, v19);
      swift_retain();
      swift_retain();
      sub_1000D733C(v20, v21);
      swift_release();
      swift_release();
LABEL_9:
      sub_100007918(v17, v19);
      goto LABEL_10;
    case 3uLL:
      memset(v28, 0, 14);
      goto LABEL_6;
    default:
      v28[0] = v17;
      LOWORD(v28[1]) = v19;
      BYTE2(v28[1]) = BYTE2(v19);
      BYTE3(v28[1]) = BYTE3(v19);
      BYTE4(v28[1]) = BYTE4(v19);
      BYTE5(v28[1]) = BYTE5(v19);
LABEL_6:
      sub_1001C08C0();
      sub_100007918(v17, v19);
LABEL_10:
      sub_1001C08D0();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v4);
      sub_1001C08F0();
      sub_100007918(v17, v19);
      uint64_t v22 = v28[0];
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v27);
      return COERCE_DOUBLE(v22 & 0xFFFFFFFFFFFFFLL | 0x3FF0000000000000) + -1.0;
  }
}

unint64_t sub_1000D6F58()
{
  unint64_t result = qword_100208248;
  if (!qword_100208248)
  {
    sub_1001C0910();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100208248);
  }
  return result;
}

uint64_t SystemInfo.bootSessionID.getter()
{
  return sub_1000D7434(0xD000000000000014, (void *)0x80000001001C4EE0);
}

uint64_t SystemInfo.marketingProductName.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SystemInfo.marketingDeviceFamilyName.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SystemInfo.productName.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SystemInfo.productVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SystemInfo.productType.getter()
{
  uint64_t v1 = *(void *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SystemInfo.productType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 112) = a1;
  *(void *)(v2 + 120) = a2;
  return result;
}

uint64_t (*TC2ServerDrivenConfiguration.JsonModel.maxPrefetchWorkloadAgeSeconds.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t SystemInfo.buildVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SystemInfo.buildVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = a2;
  return result;
}

uint64_t (*SystemInfo.buildVersion.modify())()
{
  return Proto_Ropes_Common_CompressionAlgorithm.rawValue.getter;
}

uint64_t SystemInfo.automatedDeviceGroup.getter()
{
  id v0 = [self automatedDeviceGroup];
  if (!v0) {
    return 0;
  }
  uint64_t v1 = v0;
  uint64_t v2 = sub_1001C0BF0();

  return v2;
}

uint64_t SystemInfo.osInfo.getter()
{
  uint64_t v1 = *(void *)(v0 + 144);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SystemInfo.osInfoWithDeviceModel.getter()
{
  uint64_t v1 = *(void *)(v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

void *sub_1000D726C(int a1, size_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    uint64_t result = (void *)sub_1001C1570();
    __break(1u);
  }
  else
  {
    if (!a2) {
      return _swiftEmptyArrayStorage;
    }
    uint64_t v4 = sub_1001C0E40();
    *(void *)(v4 + 16) = a2;
    memset((void *)(v4 + 32), a1, a2);
    return (void *)v4;
  }
  return result;
}

void *sub_1000D7328@<X0>(void *result@<X0>, void *a2@<X8>)
{
  if (result) {
    *a2 = *result;
  }
  else {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000D733C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1001BEE60();
  if (!result || (uint64_t result = sub_1001BEE90(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_1001BEE80();
      sub_1001C0910();
      sub_1000D6F58();
      return sub_1001C08C0();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000D73EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
LABEL_9:
    __break(1u);
    return static String._fromUTF8Repairing(_:)(a1, a2);
  }
  uint64_t v3 = a1;
  int v4 = *(unsigned __int8 *)(a1 + 32);
  a1 += 32;
  if (v4)
  {
    a2 = 0;
    uint64_t v5 = v2 - 1;
    uint64_t v6 = v3 + 33;
    while (v5 != a2)
    {
      if (!*(unsigned __int8 *)(v6 + a2++)) {
        return static String._fromUTF8Repairing(_:)(a1, a2);
      }
    }
    __break(1u);
    goto LABEL_9;
  }
  a2 = 0;
  return static String._fromUTF8Repairing(_:)(a1, a2);
}

uint64_t sub_1000D7434(uint64_t a1, void *a2)
{
  size_t v17 = 0;
  uint64_t v4 = sub_1001C0C60();
  int v5 = sysctlbyname((const char *)(v4 + 32), 0, &v17, 0, 0);
  swift_release();
  if (v5)
  {
    int v12 = sub_1001C0390();
    if (strerror(v12)) {
      goto LABEL_13;
    }
    __break(1u);
LABEL_9:
    int v13 = sub_1001C0390();
    if (!strerror(v13)) {
      __break(1u);
    }
    while (1)
    {
LABEL_13:
      uint64_t v14 = sub_1001C0D10();
      unint64_t v16 = v15;
      sub_1001C1420(30);
      swift_bridgeObjectRelease();
      v21._countAndFlagsBits = sub_1001C1780();
      sub_1001C0D00(v21);
      swift_bridgeObjectRelease();
      v22._countAndFlagsBits = 8250;
      v22._object = (void *)0xE200000000000000;
      sub_1001C0D00(v22);
      v23._countAndFlagsBits = v14;
      v23._object = v16;
      sub_1001C0D00(v23);
LABEL_12:
      sub_1001C1580();
      __break(1u);
    }
  }
  if ((uint64_t)v17 < 1)
  {
    sub_1001C1420(42);
    swift_bridgeObjectRelease();
    v18._countAndFlagsBits = a1;
    v18._object = a2;
    sub_1001C0D00(v18);
    v19._countAndFlagsBits = 0x656E727574657220;
    v19._object = (void *)0xEF3D657A69732064;
    sub_1001C0D00(v19);
    v20._countAndFlagsBits = sub_1001C1780();
    sub_1001C0D00(v20);
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v6 = sub_1000D726C(0, v17);
  uint64_t v7 = (const char *)(sub_1001C0C60() + 32);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = sub_1000E3A50(0, v6[2], 0, v6);
  }
  int v8 = sysctlbyname(v7, v6 + 4, &v17, 0, 0);
  swift_release();
  if (v8) {
    goto LABEL_9;
  }
  uint64_t v10 = sub_1000D73EC((uint64_t)v6, v9);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t destroy for SystemInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SystemInfo(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  uint64_t v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  uint64_t v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  uint64_t v11 = a2[17];
  a1[16] = a2[16];
  a1[17] = v11;
  uint64_t v12 = a2[19];
  a1[18] = a2[18];
  a1[19] = v12;
  uint64_t v13 = a2[21];
  a1[20] = a2[20];
  a1[21] = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SystemInfo(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  a1[19] = a2[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  a1[21] = a2[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for SystemInfo(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(__n128 *)(a1 + 112) = result;
  *(_OWORD *)(a1 + 128) = v8;
  return result;
}

void *assignWithTake for SystemInfo(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = a2[19];
  a1[18] = a2[18];
  a1[19] = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = a2[21];
  a1[20] = a2[20];
  a1[21] = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SystemInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 176)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SystemInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 176) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 176) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SystemInfo()
{
  return &type metadata for SystemInfo;
}

void sub_1000D7C90(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = [a1 bundleIdentifier];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v68 = sub_1001C0BF0();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v68 = 0;
    uint64_t v7 = 0;
  }
  swift_bridgeObjectRetain();
  id v8 = [a1 infoDictionary];
  if (!v8)
  {
    long long v71 = 0u;
    long long v72 = 0u;
    goto LABEL_16;
  }
  uint64_t v9 = v8;
  uint64_t v10 = sub_1001C0B80();

  if (!*(void *)(v10 + 16) || (unint64_t v11 = sub_100169E3C(0x656C646E75424643, 0xEF6E6F6973726556), (v12 & 1) == 0))
  {
    long long v71 = 0u;
    long long v72 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  sub_1000D8308(*(void *)(v10 + 56) + 32 * v11, (uint64_t)&v71);
  swift_bridgeObjectRelease();
  if (!*((void *)&v72 + 1))
  {
LABEL_16:
    sub_1000D82A8((uint64_t)&v71);
    uint64_t v14 = 0;
    unint64_t v15 = 0;
    goto LABEL_17;
  }
  int v13 = swift_dynamicCast();
  if (v13) {
    uint64_t v14 = v69;
  }
  else {
    uint64_t v14 = 0;
  }
  if (v13) {
    unint64_t v15 = v70;
  }
  else {
    unint64_t v15 = 0;
  }
LABEL_17:
  swift_bridgeObjectRetain();
  id v16 = (id)MobileGestalt_copy_uniqueDeviceID_obj();
  if (!v16)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_37;
  }
  size_t v17 = v16;
  uint64_t v18 = sub_1001C0BF0();
  uint64_t v20 = v19;

  id v21 = (id)MobileGestalt_copy_marketingProductName_obj();
  if (!v21)
  {
LABEL_37:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_38;
  }
  Swift::String v22 = v21;
  uint64_t v23 = sub_1001C0BF0();
  uint64_t v25 = v24;

  id v26 = (id)MobileGestalt_copy_marketingDeviceFamilyName_obj();
  if (!v26)
  {
LABEL_38:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v27 = v26;
  uint64_t v62 = v25;
  uint64_t v67 = sub_1001C0BF0();
  uint64_t v29 = v28;

  int v66 = v29;
  swift_bridgeObjectRetain();
  id v30 = (id)MobileGestalt_copy_productName_obj();
  if (!v30)
  {
LABEL_39:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_40;
  }
  uint64_t v31 = v30;
  uint64_t v61 = sub_1001C0BF0();
  uint64_t v33 = v32;

  swift_bridgeObjectRetain();
  id v34 = (id)MobileGestalt_copy_productVersion_obj();
  if (!v34)
  {
LABEL_40:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_41;
  }
  unint64_t v35 = v34;
  uint64_t v58 = v23;
  uint64_t v59 = v20;
  uint64_t v60 = v18;
  uint64_t v36 = sub_1001C0BF0();
  uint64_t v38 = v37;

  swift_bridgeObjectRetain();
  id v39 = (id)MobileGestalt_copy_productType_obj();
  if (!v39)
  {
LABEL_41:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_42;
  }
  unint64_t v40 = v39;
  uint64_t v65 = v36;
  uint64_t v41 = v14;
  uint64_t v57 = sub_1001C0BF0();
  uint64_t v43 = v42;

  uint64_t v56 = v43;
  swift_bridgeObjectRetain();
  id v44 = (id)MobileGestalt_copy_buildVersion_obj();
  if (!v44)
  {
LABEL_42:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __break(1u);
    return;
  }
  uint64_t v45 = v44;
  uint64_t v46 = sub_1001C0BF0();
  uint64_t v48 = v47;

  if (v7) {
    uint64_t v49 = v68;
  }
  else {
    uint64_t v49 = 0x6E776F6E6B6E75;
  }
  uint64_t v53 = v7;
  if (!v7) {
    uint64_t v7 = (void *)0xE700000000000000;
  }
  if (v15) {
    uint64_t v50 = v41;
  }
  else {
    uint64_t v50 = 0x6E776F6E6B6E75;
  }
  if (v15) {
    unint64_t v51 = v15;
  }
  else {
    unint64_t v51 = 0xE700000000000000;
  }
  uint64_t v63 = (void *)v51;
  uint64_t v64 = v50;
  *(void *)&long long v71 = 0;
  *((void *)&v71 + 1) = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_1001C1420(23);
  swift_bridgeObjectRelease();
  *(void *)&long long v71 = 60;
  *((void *)&v71 + 1) = 0xE100000000000000;
  v73._countAndFlagsBits = v67;
  v73._object = v66;
  sub_1001C0D00(v73);
  swift_bridgeObjectRelease();
  v74._countAndFlagsBits = 3940414;
  v74._object = (void *)0xE300000000000000;
  sub_1001C0D00(v74);
  swift_bridgeObjectRetain();
  v75._countAndFlagsBits = v61;
  v75._object = v33;
  sub_1001C0D00(v75);
  swift_bridgeObjectRelease();
  v76._countAndFlagsBits = 59;
  v76._object = (void *)0xE100000000000000;
  sub_1001C0D00(v76);
  swift_bridgeObjectRetain();
  v77._countAndFlagsBits = v65;
  v77._object = v38;
  sub_1001C0D00(v77);
  swift_bridgeObjectRelease();
  v78._countAndFlagsBits = 59;
  v78._object = (void *)0xE100000000000000;
  sub_1001C0D00(v78);
  swift_bridgeObjectRetain();
  v79._countAndFlagsBits = v46;
  v79._object = v48;
  sub_1001C0D00(v79);
  swift_bridgeObjectRelease();
  v80._countAndFlagsBits = 3940414;
  v80._object = (void *)0xE300000000000000;
  sub_1001C0D00(v80);
  v81._countAndFlagsBits = v49;
  v81._object = v7;
  sub_1001C0D00(v81);
  v82._countAndFlagsBits = 47;
  v82._object = (void *)0xE100000000000000;
  sub_1001C0D00(v82);
  v83._object = v63;
  v83._countAndFlagsBits = v64;
  sub_1001C0D00(v83);
  v84._countAndFlagsBits = 62;
  v84._object = (void *)0xE100000000000000;
  sub_1001C0D00(v84);
  uint64_t v54 = *((void *)&v71 + 1);
  uint64_t v55 = v71;
  *(void *)&long long v71 = 0;
  *((void *)&v71 + 1) = 0xE000000000000000;
  sub_1001C1420(23);
  swift_bridgeObjectRelease();
  *(void *)&long long v71 = 60;
  *((void *)&v71 + 1) = 0xE100000000000000;
  v85._countAndFlagsBits = v57;
  v85._object = v56;
  sub_1001C0D00(v85);
  swift_bridgeObjectRelease();
  v86._countAndFlagsBits = 3940414;
  v86._object = (void *)0xE300000000000000;
  sub_1001C0D00(v86);
  v87._countAndFlagsBits = v61;
  v87._object = v33;
  sub_1001C0D00(v87);
  swift_bridgeObjectRelease();
  v88._countAndFlagsBits = 59;
  v88._object = (void *)0xE100000000000000;
  sub_1001C0D00(v88);
  v89._countAndFlagsBits = v65;
  v89._object = v38;
  sub_1001C0D00(v89);
  swift_bridgeObjectRelease();
  v90._countAndFlagsBits = 59;
  v90._object = (void *)0xE100000000000000;
  sub_1001C0D00(v90);
  v91._countAndFlagsBits = v46;
  v91._object = v48;
  sub_1001C0D00(v91);
  swift_bridgeObjectRelease();
  v92._countAndFlagsBits = 3940414;
  v92._object = (void *)0xE300000000000000;
  sub_1001C0D00(v92);
  v93._countAndFlagsBits = v49;
  v93._object = v7;
  sub_1001C0D00(v93);
  swift_bridgeObjectRelease();
  v94._countAndFlagsBits = 47;
  v94._object = (void *)0xE100000000000000;
  sub_1001C0D00(v94);
  v95._countAndFlagsBits = v64;
  v95._object = v63;
  sub_1001C0D00(v95);
  swift_bridgeObjectRelease();
  v96._countAndFlagsBits = 62;
  v96._object = (void *)0xE100000000000000;
  sub_1001C0D00(v96);
  long long v52 = v71;
  *(void *)a2 = v68;
  *(void *)(a2 + 8) = v53;
  *(void *)(a2 + 16) = v41;
  *(void *)(a2 + 24) = v15;
  *(void *)(a2 + 32) = v60;
  *(void *)(a2 + 40) = v59;
  *(void *)(a2 + 48) = v58;
  *(void *)(a2 + 56) = v62;
  *(void *)(a2 + 64) = v67;
  *(void *)(a2 + 72) = v66;
  *(void *)(a2 + 80) = v61;
  *(void *)(a2 + 88) = v33;
  *(void *)(a2 + 96) = v65;
  *(void *)(a2 + 104) = v38;
  *(void *)(a2 + 112) = v57;
  *(void *)(a2 + 120) = v56;
  *(void *)(a2 + 128) = v46;
  *(void *)(a2 + 136) = v48;
  *(void *)(a2 + 144) = v55;
  *(void *)(a2 + 152) = v54;
  *(_OWORD *)(a2 + 160) = v52;
}

uint64_t sub_1000D82A8(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020C338);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000D8308(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t TC2Configuration.lttIssuer.getter(uint64_t a1, uint64_t a2)
{
  return sub_1000D8394(a1, a2, (void (*)(void *))&static TC2ConfigurationIndex.lttIssuer.getter);
}

uint64_t TC2Configuration.ottIssuer.getter(uint64_t a1, uint64_t a2)
{
  return sub_1000D8394(a1, a2, (void (*)(void *))&static TC2ConfigurationIndex.ottIssuer.getter);
}

uint64_t sub_1000D8394(uint64_t a1, uint64_t a2, void (*a3)(void *))
{
  uint64_t v4 = sub_100003918(&qword_10020C068);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  id v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(&type metadata for String);
  sub_1001BF8F0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  uint64_t v9 = sub_1000D85F4(v11[0], v11[1]);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1000D84D4()
{
  uint64_t v0 = sub_1001BF8E0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1001C0340();
  sub_100044F74(v5, qword_10020CF00);
  sub_10000D978(v5, (uint64_t)qword_10020CF00);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for TC2LogCategory.configuration(_:), v0);
  sub_1001BFDD0();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t sub_1000D85F4(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = a1;
  uint64_t v22 = a1;
  swift_bridgeObjectRetain();
  sub_1001BF860();
  sub_1001C0C60();
  swift_bridgeObjectRelease();
  int v4 = os_variant_allows_internal_security_policies();
  swift_release();
  if (v4)
  {
    sub_1001C0180();
    if (sub_1001C0170())
    {
      uint64_t v20 = 59;
      unint64_t v21 = 0xE100000000000000;
      sub_10001A364();
      uint64_t v18 = v3;
      unint64_t v19 = a2;
      if (sub_1001C1360())
      {
        swift_bridgeObjectRetain();
        v5._countAndFlagsBits = 44;
      }
      else
      {
        swift_bridgeObjectRetain();
        v5._countAndFlagsBits = 59;
      }
      v5._object = (void *)0xE100000000000000;
      sub_1001C0D00(v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v24._object = (void *)0x80000001001C4F90;
      v24._countAndFlagsBits = 0xD000000000000016;
      sub_1001C0D00(v24);
      swift_bridgeObjectRelease();
      uint64_t v11 = v18;
      unint64_t v10 = v19;
      uint64_t v22 = v18;
      unint64_t v23 = v19;
      uint64_t v12 = qword_100207978;
      swift_bridgeObjectRetain();
      if (v12 != -1) {
        swift_once();
      }
      uint64_t v13 = sub_1001C0340();
      sub_10000D978(v13, (uint64_t)qword_10020CF00);
      swift_bridgeObjectRetain();
      uint64_t v14 = sub_1001C0330();
      os_log_type_t v15 = sub_1001C1200();
      if (os_log_type_enabled(v14, v15))
      {
        id v16 = (uint8_t *)swift_slowAlloc();
        uint64_t v18 = swift_slowAlloc();
        *(_DWORD *)id v16 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v20 = sub_1000DF238(v11, v10, &v18);
        sub_1001C1310();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v14, v15, "appended bypass: %s", v16, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      swift_beginAccess();
      return v22;
    }
    else
    {
      if (qword_100207978 != -1) {
        swift_once();
      }
      uint64_t v6 = sub_1001C0340();
      sub_10000D978(v6, (uint64_t)qword_10020CF00);
      uint64_t v7 = sub_1001C0330();
      os_log_type_t v8 = sub_1001C1200();
      if (os_log_type_enabled(v7, v8))
      {
        uint64_t v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v9 = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, v8, "not appending csf bypass because no eligibility bypass", v9, 2u);
        swift_slowDealloc();
      }
    }
  }
  return v3;
}

unsigned char *storeEnumTagSinglePayload for ServerQoS(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000D8A48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerQoS()
{
  return &type metadata for ServerQoS;
}

void *sub_1000D8A80(uint64_t a1, uint64_t *a2, int *a3)
{
  unsigned int v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v41 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v41 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(void *)(a1 + 32) = a2[4];
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    *(void *)(a1 + 56) = a2[7];
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    uint64_t v8 = a2[9];
    uint64_t v9 = a2[10];
    *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
    uint64_t v10 = a3[14];
    uint64_t v11 = a1 + v10;
    uint64_t v12 = (uint64_t)a2 + v10;
    *(void *)(a1 + 72) = v8;
    *(void *)(a1 + 80) = v9;
    uint64_t v13 = sub_1001BF0B0();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    uint64_t v15 = a3[15];
    uint64_t v16 = a3[16];
    size_t v17 = (void *)((char *)v4 + v15);
    uint64_t v18 = (uint64_t *)((char *)a2 + v15);
    uint64_t v57 = v18[1];
    *size_t v17 = *v18;
    v17[1] = v57;
    unint64_t v19 = (void *)((char *)v4 + v16);
    uint64_t v20 = (uint64_t *)((char *)a2 + v16);
    uint64_t v58 = v20[1];
    *unint64_t v19 = *v20;
    v19[1] = v58;
    uint64_t v21 = a3[18];
    *(void *)((char *)v4 + a3[17]) = *(uint64_t *)((char *)a2 + a3[17]);
    uint64_t v22 = (void *)((char *)v4 + v21);
    unint64_t v23 = (uint64_t *)((char *)a2 + v21);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = a3[19];
    uint64_t v26 = a3[20];
    uint64_t v27 = (void *)((char *)v4 + v25);
    uint64_t v28 = (uint64_t *)((char *)a2 + v25);
    uint64_t v29 = v28[1];
    *uint64_t v27 = *v28;
    v27[1] = v29;
    id v30 = (void *)((char *)v4 + v26);
    uint64_t v31 = (uint64_t *)((char *)a2 + v26);
    uint64_t v32 = v31[1];
    *id v30 = *v31;
    v30[1] = v32;
    uint64_t v33 = a3[21];
    uint64_t v34 = a3[22];
    unint64_t v35 = (void *)((char *)v4 + v33);
    uint64_t v36 = (uint64_t *)((char *)a2 + v33);
    uint64_t v37 = v36[1];
    *unint64_t v35 = *v36;
    v35[1] = v37;
    __dst = (char *)v4 + v34;
    uint64_t v56 = (char *)a2 + v34;
    uint64_t v38 = sub_1001BF310();
    uint64_t v39 = *(void *)(v38 - 8);
    uint64_t v55 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v55(v56, 1, v38))
    {
      uint64_t v40 = sub_100003918(qword_100208CD0);
      memcpy(__dst, v56, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(__dst, v56, v38);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(__dst, 0, 1, v38);
    }
    uint64_t v42 = a3[23];
    uint64_t v43 = a3[24];
    id v44 = (void *)((char *)v4 + v42);
    uint64_t v45 = (uint64_t *)((char *)a2 + v42);
    uint64_t v46 = v45[1];
    *id v44 = *v45;
    v44[1] = v46;
    int64_t v47 = (char *)v4 + v43;
    uint64_t v48 = (uint64_t)a2 + v43;
    v47[4] = *(unsigned char *)(v48 + 4);
    *(_DWORD *)int64_t v47 = *(_DWORD *)v48;
    uint64_t v49 = a3[25];
    uint64_t v50 = (void *)((char *)v4 + v49);
    unint64_t v51 = (uint64_t *)((char *)a2 + v49);
    uint64_t v52 = *v51;
    unint64_t v53 = v51[1];
    swift_bridgeObjectRetain();
    sub_100007B14(v52, v53);
    *uint64_t v50 = v52;
    v50[1] = v53;
    *((unsigned char *)v4 + a3[26]) = *((unsigned char *)a2 + a3[26]);
  }
  return v4;
}

uint64_t sub_1000D8DBC(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[14];
  uint64_t v5 = sub_1001BF0B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + a2[22];
  uint64_t v7 = sub_1001BF310();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = (uint64_t *)(a1 + a2[25]);
  uint64_t v10 = *v9;
  unint64_t v11 = v9[1];
  return sub_10000792C(v10, v11);
}

uint64_t sub_1000D8F54(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v7 = *(void *)(a2 + 72);
  uint64_t v8 = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v9 = a3[14];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(void *)(a1 + 72) = v7;
  *(void *)(a1 + 80) = v8;
  uint64_t v12 = sub_1001BF0B0();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  uint64_t v14 = a3[15];
  uint64_t v15 = a3[16];
  uint64_t v16 = (void *)(a1 + v14);
  size_t v17 = (void *)(a2 + v14);
  uint64_t v55 = v17[1];
  void *v16 = *v17;
  v16[1] = v55;
  uint64_t v18 = (void *)(a1 + v15);
  unint64_t v19 = (void *)(a2 + v15);
  uint64_t v56 = v19[1];
  void *v18 = *v19;
  v18[1] = v56;
  uint64_t v20 = a3[18];
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = a3[19];
  uint64_t v25 = a3[20];
  uint64_t v26 = (void *)(a1 + v24);
  uint64_t v27 = (void *)(a2 + v24);
  uint64_t v28 = v27[1];
  void *v26 = *v27;
  v26[1] = v28;
  uint64_t v29 = (void *)(a1 + v25);
  id v30 = (void *)(a2 + v25);
  uint64_t v31 = v30[1];
  *uint64_t v29 = *v30;
  v29[1] = v31;
  uint64_t v32 = a3[21];
  uint64_t v33 = a3[22];
  uint64_t v34 = (void *)(a1 + v32);
  unint64_t v35 = (void *)(a2 + v32);
  uint64_t v36 = v35[1];
  *uint64_t v34 = *v35;
  v34[1] = v36;
  __dst = (void *)(a1 + v33);
  uint64_t v54 = (const void *)(a2 + v33);
  uint64_t v37 = sub_1001BF310();
  uint64_t v38 = *(void *)(v37 - 8);
  unint64_t v53 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v38 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v53(v54, 1, v37))
  {
    uint64_t v39 = sub_100003918(qword_100208CD0);
    memcpy(__dst, v54, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v38 + 16))(__dst, v54, v37);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v38 + 56))(__dst, 0, 1, v37);
  }
  uint64_t v40 = a3[23];
  uint64_t v41 = a3[24];
  uint64_t v42 = (void *)(a1 + v40);
  uint64_t v43 = (void *)(a2 + v40);
  uint64_t v44 = v43[1];
  *uint64_t v42 = *v43;
  v42[1] = v44;
  uint64_t v45 = a1 + v41;
  uint64_t v46 = a2 + v41;
  *(unsigned char *)(v45 + 4) = *(unsigned char *)(v46 + 4);
  *(_DWORD *)uint64_t v45 = *(_DWORD *)v46;
  uint64_t v47 = a3[25];
  uint64_t v48 = (uint64_t *)(a1 + v47);
  uint64_t v49 = (uint64_t *)(a2 + v47);
  uint64_t v50 = *v49;
  unint64_t v51 = v49[1];
  swift_bridgeObjectRetain();
  sub_100007B14(v50, v51);
  *uint64_t v48 = v50;
  v48[1] = v51;
  *(unsigned char *)(a1 + a3[26]) = *(unsigned char *)(a2 + a3[26]);
  return a1;
}

uint64_t sub_1000D9240(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v6 = a3[14];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1001BF0B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[15];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[16];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[18];
  size_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  *size_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[19];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[20];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[21];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  void *v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[22];
  uint64_t v29 = (void *)(a1 + v28);
  id v30 = (void *)(a2 + v28);
  uint64_t v31 = sub_1001BF310();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v32 + 48);
  int v34 = v33(v29, 1, v31);
  int v35 = v33(v30, 1, v31);
  if (!v34)
  {
    if (!v35)
    {
      (*(void (**)(void *, void *, uint64_t))(v32 + 24))(v29, v30, v31);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v32 + 8))(v29, v31);
    goto LABEL_6;
  }
  if (v35)
  {
LABEL_6:
    uint64_t v36 = sub_100003918(qword_100208CD0);
    memcpy(v29, v30, *(void *)(*(void *)(v36 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v32 + 16))(v29, v30, v31);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
LABEL_7:
  uint64_t v37 = a3[23];
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = (void *)(a2 + v37);
  *uint64_t v38 = *v39;
  v38[1] = v39[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v40 = a3[24];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = (int *)(a2 + v40);
  int v43 = *v42;
  *(unsigned char *)(v41 + 4) = *((unsigned char *)v42 + 4);
  *(_DWORD *)uint64_t v41 = v43;
  uint64_t v44 = a3[25];
  uint64_t v45 = (uint64_t *)(a1 + v44);
  uint64_t v46 = (uint64_t *)(a2 + v44);
  uint64_t v47 = *v46;
  unint64_t v48 = v46[1];
  sub_100007B14(*v46, v48);
  uint64_t v49 = *v45;
  unint64_t v50 = v45[1];
  *uint64_t v45 = v47;
  v45[1] = v48;
  sub_10000792C(v49, v50);
  *(unsigned char *)(a1 + a3[26]) = *(unsigned char *)(a2 + a3[26]);
  return a1;
}

uint64_t sub_1000D9628(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  long long v6 = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v7 = a3[14];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + 72) = v6;
  uint64_t v10 = sub_1001BF0B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[16];
  *(_OWORD *)(a1 + a3[15]) = *(_OWORD *)(a2 + a3[15]);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  uint64_t v12 = a3[18];
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  uint64_t v13 = a3[20];
  *(_OWORD *)(a1 + a3[19]) = *(_OWORD *)(a2 + a3[19]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  uint64_t v14 = a3[22];
  *(_OWORD *)(a1 + a3[21]) = *(_OWORD *)(a2 + a3[21]);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  uint64_t v17 = sub_1001BF310();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_100003918(qword_100208CD0);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v20 = a3[24];
  *(_OWORD *)(a1 + a3[23]) = *(_OWORD *)(a2 + a3[23]);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  *(unsigned char *)(v21 + 4) = *(unsigned char *)(v22 + 4);
  uint64_t v23 = a3[26];
  *(_OWORD *)(a1 + a3[25]) = *(_OWORD *)(a2 + a3[25]);
  *(unsigned char *)(a1 + v23) = *(unsigned char *)(a2 + v23);
  return a1;
}

uint64_t sub_1000D9848(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v8 = a3[14];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1001BF0B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[15];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  void *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[16];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  void *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[18];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[19];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (uint64_t *)(a2 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  *uint64_t v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[20];
  uint64_t v33 = (void *)(a1 + v32);
  int v34 = (uint64_t *)(a2 + v32);
  uint64_t v36 = *v34;
  uint64_t v35 = v34[1];
  void *v33 = v36;
  v33[1] = v35;
  swift_bridgeObjectRelease();
  uint64_t v37 = a3[21];
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = (uint64_t *)(a2 + v37);
  uint64_t v41 = *v39;
  uint64_t v40 = v39[1];
  *uint64_t v38 = v41;
  v38[1] = v40;
  swift_bridgeObjectRelease();
  uint64_t v42 = a3[22];
  int v43 = (void *)(a1 + v42);
  uint64_t v44 = (void *)(a2 + v42);
  uint64_t v45 = sub_1001BF310();
  uint64_t v46 = *(void *)(v45 - 8);
  uint64_t v47 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v46 + 48);
  int v48 = v47(v43, 1, v45);
  int v49 = v47(v44, 1, v45);
  if (!v48)
  {
    if (!v49)
    {
      (*(void (**)(void *, void *, uint64_t))(v46 + 40))(v43, v44, v45);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v46 + 8))(v43, v45);
    goto LABEL_6;
  }
  if (v49)
  {
LABEL_6:
    uint64_t v50 = sub_100003918(qword_100208CD0);
    memcpy(v43, v44, *(void *)(*(void *)(v50 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v46 + 32))(v43, v44, v45);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
LABEL_7:
  uint64_t v51 = a3[23];
  uint64_t v52 = (void *)(a1 + v51);
  unint64_t v53 = (uint64_t *)(a2 + v51);
  uint64_t v55 = *v53;
  uint64_t v54 = v53[1];
  *uint64_t v52 = v55;
  v52[1] = v54;
  swift_bridgeObjectRelease();
  uint64_t v56 = a3[24];
  uint64_t v57 = a3[25];
  uint64_t v58 = a1 + v56;
  uint64_t v59 = a2 + v56;
  *(_DWORD *)uint64_t v58 = *(_DWORD *)v59;
  *(unsigned char *)(v58 + 4) = *(unsigned char *)(v59 + 4);
  uint64_t v60 = *(void *)(a1 + v57);
  unint64_t v61 = *(void *)(a1 + v57 + 8);
  *(_OWORD *)(a1 + v57) = *(_OWORD *)(a2 + v57);
  sub_10000792C(v60, v61);
  *(unsigned char *)(a1 + a3[26]) = *(unsigned char *)(a2 + a3[26]);
  return a1;
}

uint64_t sub_1000D9B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000D9B80);
}

uint64_t sub_1000D9B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 80);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1001BF0B0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 56);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100003918(qword_100208CD0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 88);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1000D9CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000D9CC4);
}

uint64_t sub_1000D9CC4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 80) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1001BF0B0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 56);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100003918(qword_100208CD0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 88);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for TrustedRequestConfiguration()
{
  uint64_t result = qword_10020CF70;
  if (!qword_10020CF70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000D9E40()
{
  sub_1001BF0B0();
  if (v0 <= 0x3F)
  {
    sub_1000D9F80();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1000D9F80()
{
  if (!qword_100208A90)
  {
    sub_1001BF310();
    unint64_t v0 = sub_1001C12F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100208A90);
    }
  }
}

uint64_t sub_1000D9FD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33,int a34,int a35,char a36)
{
  uint64_t v40 = (int *)type metadata accessor for TrustedRequestConfiguration();
  uint64_t v41 = (void *)(a9 + v40[18]);
  uint64_t v42 = (void *)(a9 + v40[19]);
  int v43 = (void *)(a9 + v40[21]);
  uint64_t v44 = a9 + v40[22];
  uint64_t v45 = sub_1001BF310();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v44, 1, 1, v45);
  uint64_t v46 = (void *)(a9 + v40[23]);
  uint64_t v47 = a9 + v40[24];
  *(_DWORD *)uint64_t v47 = 0;
  *(unsigned char *)(v47 + 4) = 1;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(double *)(a9 + 40) = a10;
  *(double *)(a9 + 48) = a11;
  *(double *)(a9 + 56) = a12;
  *(unsigned char *)(a9 + 64) = a6;
  *(void *)(a9 + 72) = a7;
  *(void *)(a9 + 80) = a8;
  *(unsigned char *)(a9 + 88) = a13;
  uint64_t v48 = a9 + v40[14];
  uint64_t v49 = sub_1001BF0B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 32))(v48, a14, v49);
  uint64_t v50 = (void *)(a9 + v40[15]);
  *uint64_t v50 = a15;
  v50[1] = a16;
  uint64_t v51 = (void *)(a9 + v40[16]);
  *uint64_t v51 = a17;
  v51[1] = a18;
  *(void *)(a9 + v40[17]) = a19;
  *uint64_t v41 = a20;
  v41[1] = a21;
  *uint64_t v42 = a22;
  v42[1] = a23;
  uint64_t v52 = (void *)(a9 + v40[20]);
  *uint64_t v52 = a24;
  v52[1] = a25;
  *uint64_t v46 = a26;
  v46[1] = a27;
  *int v43 = a28;
  v43[1] = a29;
  uint64_t result = sub_1000DB024(a30, v44);
  uint64_t v54 = (void *)(a9 + v40[25]);
  *uint64_t v54 = a31;
  v54[1] = a32;
  *(unsigned char *)(a9 + v40[26]) = a33;
  *(_DWORD *)uint64_t v47 = a35;
  *(unsigned char *)(v47 + 4) = a36 & 1;
  return result;
}

uint64_t sub_1000DA2AC()
{
  uint64_t v34 = sub_100003918(qword_100208CD0);
  __chkstk_darwin(v34, v1);
  uint64_t v33 = (uint64_t)v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = 0;
  unint64_t v38 = 0xE000000000000000;
  sub_1001C1420(623);
  v39._countAndFlagsBits = 0xD00000000000003CLL;
  v39._object = (void *)0x80000001001C4FB0;
  sub_1001C0D00(v39);
  uint64_t v35 = *v0;
  v40._countAndFlagsBits = sub_1001C1780();
  sub_1001C0D00(v40);
  swift_bridgeObjectRelease();
  v41._countAndFlagsBits = 0xD00000000000001BLL;
  v41._object = (void *)0x80000001001C4FF0;
  sub_1001C0D00(v41);
  uint64_t v35 = v0[1];
  v42._countAndFlagsBits = sub_1001C1780();
  sub_1001C0D00(v42);
  swift_bridgeObjectRelease();
  v43._countAndFlagsBits = 0xD00000000000001CLL;
  v43._object = (void *)0x80000001001C5010;
  sub_1001C0D00(v43);
  uint64_t v35 = v0[2];
  v44._countAndFlagsBits = sub_1001C1780();
  sub_1001C0D00(v44);
  swift_bridgeObjectRelease();
  v45._countAndFlagsBits = 0xD000000000000016;
  v45._object = (void *)0x80000001001C5030;
  sub_1001C0D00(v45);
  uint64_t v3 = v0[4];
  uint64_t v35 = v0[3];
  uint64_t v36 = v3;
  swift_bridgeObjectRetain();
  v32[1] = sub_100003918(&qword_100207DB8);
  v46._countAndFlagsBits = sub_1001C0C40();
  sub_1001C0D00(v46);
  swift_bridgeObjectRelease();
  v47._countAndFlagsBits = 0xD00000000000002BLL;
  v47._object = (void *)0x80000001001C5050;
  sub_1001C0D00(v47);
  sub_1001C10B0();
  v48._object = (void *)0x80000001001C5080;
  v48._countAndFlagsBits = 0xD000000000000025;
  sub_1001C0D00(v48);
  sub_1001C10B0();
  v49._object = (void *)0x80000001001C50B0;
  v49._countAndFlagsBits = 0xD000000000000025;
  sub_1001C0D00(v49);
  sub_1001C10B0();
  v50._countAndFlagsBits = 0xD00000000000001FLL;
  v50._object = (void *)0x80000001001C50E0;
  sub_1001C0D00(v50);
  if (*((unsigned char *)v0 + 64)) {
    v4._countAndFlagsBits = 1702195828;
  }
  else {
    v4._countAndFlagsBits = 0x65736C6166;
  }
  if (*((unsigned char *)v0 + 64)) {
    uint64_t v5 = (void *)0xE400000000000000;
  }
  else {
    uint64_t v5 = (void *)0xE500000000000000;
  }
  v4._object = v5;
  sub_1001C0D00(v4);
  swift_bridgeObjectRelease();
  v51._object = (void *)0x80000001001C5100;
  v51._countAndFlagsBits = 0xD000000000000012;
  sub_1001C0D00(v51);
  uint64_t v6 = v0[9];
  uint64_t v7 = (void *)v0[10];
  swift_bridgeObjectRetain();
  v52._countAndFlagsBits = v6;
  v52._object = v7;
  sub_1001C0D00(v52);
  swift_bridgeObjectRelease();
  v53._countAndFlagsBits = 0xD000000000000011;
  v53._object = (void *)0x80000001001C5120;
  sub_1001C0D00(v53);
  if (*((unsigned char *)v0 + 88)) {
    v8._countAndFlagsBits = 1702195828;
  }
  else {
    v8._countAndFlagsBits = 0x65736C6166;
  }
  if (*((unsigned char *)v0 + 88)) {
    uint64_t v9 = (void *)0xE400000000000000;
  }
  else {
    uint64_t v9 = (void *)0xE500000000000000;
  }
  v8._object = v9;
  sub_1001C0D00(v8);
  swift_bridgeObjectRelease();
  v54._object = (void *)0x80000001001C5140;
  v54._countAndFlagsBits = 0xD000000000000012;
  sub_1001C0D00(v54);
  uint64_t v10 = (int *)type metadata accessor for TrustedRequestConfiguration();
  sub_1001BF0B0();
  sub_1000DB08C((unint64_t *)&qword_10020BF20, (void (*)(uint64_t))&type metadata accessor for URL);
  v55._countAndFlagsBits = sub_1001C1780();
  sub_1001C0D00(v55);
  swift_bridgeObjectRelease();
  v56._countAndFlagsBits = 0xD00000000000001DLL;
  v56._object = (void *)0x80000001001C5160;
  sub_1001C0D00(v56);
  uint64_t v11 = (uint64_t *)((char *)v0 + v10[15]);
  uint64_t v12 = *v11;
  uint64_t v13 = (void *)v11[1];
  swift_bridgeObjectRetain();
  v57._countAndFlagsBits = v12;
  v57._object = v13;
  sub_1001C0D00(v57);
  swift_bridgeObjectRelease();
  v58._countAndFlagsBits = 0xD000000000000019;
  v58._object = (void *)0x80000001001C5180;
  sub_1001C0D00(v58);
  uint64_t v14 = (uint64_t *)((char *)v0 + v10[16]);
  uint64_t v15 = *v14;
  uint64_t v16 = (void *)v14[1];
  swift_bridgeObjectRetain();
  v59._countAndFlagsBits = v15;
  v59._object = v16;
  sub_1001C0D00(v59);
  swift_bridgeObjectRelease();
  v60._countAndFlagsBits = 0xD000000000000020;
  v60._object = (void *)0x80000001001C51A0;
  sub_1001C0D00(v60);
  swift_bridgeObjectRetain();
  v61._countAndFlagsBits = sub_1001C10C0();
  sub_1001C0D00(v61);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v62._object = (void *)0x80000001001C51D0;
  v62._countAndFlagsBits = 0xD000000000000018;
  sub_1001C0D00(v62);
  uint64_t v17 = (uint64_t *)((char *)v0 + v10[18]);
  uint64_t v18 = v17[1];
  uint64_t v35 = *v17;
  uint64_t v36 = v18;
  swift_bridgeObjectRetain();
  v63._countAndFlagsBits = sub_1001C0C40();
  sub_1001C0D00(v63);
  swift_bridgeObjectRelease();
  v64._object = (void *)0x80000001001C51F0;
  v64._countAndFlagsBits = 0xD000000000000018;
  sub_1001C0D00(v64);
  uint64_t v19 = (uint64_t *)((char *)v0 + v10[19]);
  uint64_t v20 = v19[1];
  uint64_t v35 = *v19;
  uint64_t v36 = v20;
  swift_bridgeObjectRetain();
  v65._countAndFlagsBits = sub_1001C0C40();
  sub_1001C0D00(v65);
  swift_bridgeObjectRelease();
  v66._object = (void *)0x80000001001C5210;
  v66._countAndFlagsBits = 0xD000000000000010;
  sub_1001C0D00(v66);
  uint64_t v21 = (uint64_t *)((char *)v0 + v10[20]);
  uint64_t v22 = *v21;
  uint64_t v23 = (void *)v21[1];
  swift_bridgeObjectRetain();
  v67._countAndFlagsBits = v22;
  v67._object = v23;
  sub_1001C0D00(v67);
  swift_bridgeObjectRelease();
  v68._object = (void *)0x80000001001C5230;
  v68._countAndFlagsBits = 0xD000000000000010;
  sub_1001C0D00(v68);
  uint64_t v24 = (uint64_t *)((char *)v0 + v10[21]);
  uint64_t v25 = v24[1];
  uint64_t v35 = *v24;
  uint64_t v36 = v25;
  swift_bridgeObjectRetain();
  v69._countAndFlagsBits = sub_1001C0C40();
  sub_1001C0D00(v69);
  swift_bridgeObjectRelease();
  v70._object = (void *)0x80000001001C5250;
  v70._countAndFlagsBits = 0xD000000000000010;
  sub_1001C0D00(v70);
  sub_1000DAFBC((uint64_t)v0 + v10[22], v33);
  v71._countAndFlagsBits = sub_1001C0C40();
  sub_1001C0D00(v71);
  swift_bridgeObjectRelease();
  v72._countAndFlagsBits = 0xD00000000000001ALL;
  v72._object = (void *)0x80000001001C5270;
  sub_1001C0D00(v72);
  uint64_t v26 = (uint64_t *)((char *)v0 + v10[23]);
  uint64_t v27 = v26[1];
  uint64_t v35 = *v26;
  uint64_t v36 = v27;
  swift_bridgeObjectRetain();
  v73._countAndFlagsBits = sub_1001C0C40();
  sub_1001C0D00(v73);
  swift_bridgeObjectRelease();
  v74._countAndFlagsBits = 0x6561202020200A0ALL;
  v74._object = (void *)0xEF203A79654B6461;
  sub_1001C0D00(v74);
  uint64_t v28 = (uint64_t *)((char *)v0 + v10[25]);
  uint64_t v29 = *v28;
  unint64_t v30 = v28[1];
  sub_100007B14(*v28, v30);
  v75._countAndFlagsBits = sub_1001BF0E0();
  sub_1001C0D00(v75);
  swift_bridgeObjectRelease();
  sub_10000792C(v29, v30);
  v76._object = (void *)0x80000001001C5290;
  v76._countAndFlagsBits = 0xD000000000000010;
  sub_1001C0D00(v76);
  LOBYTE(v35) = *((unsigned char *)v0 + v10[26]);
  sub_1001C1510();
  v77._countAndFlagsBits = 15882;
  v77._object = (void *)0xE200000000000000;
  sub_1001C0D00(v77);
  return v37;
}

uint64_t sub_1000DA9EC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1000DFB08(*a1, *a2);
}

Swift::Int sub_1000DA9F8()
{
  return sub_1001C1990();
}

uint64_t sub_1000DAA90()
{
  sub_1001C0CB0();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000DAB14()
{
  return sub_1001C1990();
}

uint64_t sub_1000DABA8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000DAF70(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_1000DABD8(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xE300000000000000;
  uint64_t v5 = 7827308;
  if (v2 != 1)
  {
    uint64_t v5 = 0x756F72676B636162;
    unint64_t v4 = 0xEA0000000000646ELL;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1751607656;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

unint64_t sub_1000DAC30()
{
  unint64_t result = qword_10020D000;
  if (!qword_10020D000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020D000);
  }
  return result;
}

uint64_t sub_1000DAC84(char *a1)
{
  uint64_t v2 = sub_1001C0FC0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v5 = __chkstk_darwin(v2, v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  uint64_t v10 = (char *)&v20 - v9;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))((char *)&v20 - v9, a1, v2);
  sub_1001C0F50();
  sub_1000DB08C(&qword_10020D008, (void (*)(uint64_t))&type metadata accessor for TaskPriority);
  char v11 = sub_1001C0BD0();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v3 + 8);
  v12(v7, v2);
  if (v11)
  {
    v12(a1, v2);
    uint64_t v13 = 2;
  }
  else
  {
    sub_1001C0F90();
    char v14 = sub_1001C0BD0();
    v12(v7, v2);
    if (v14 & 1) != 0 || (sub_1001C0F70(), char v15 = sub_1001C0BD0(), v12(v7, v2), (v15))
    {
      v12(a1, v2);
      uint64_t v13 = 1;
    }
    else
    {
      sub_1001C0FA0();
      char v16 = sub_1001C0BD0();
      v12(v7, v2);
      if (v16 & 1) != 0 || (sub_1001C0F80(), char v17 = sub_1001C0BD0(), v12(v7, v2), (v17))
      {
        uint64_t v18 = a1;
      }
      else
      {
        sub_1001C0F60();
        sub_1001C0BD0();
        v12(a1, v2);
        uint64_t v18 = v7;
      }
      v12(v18, v2);
      uint64_t v13 = 0;
    }
  }
  v12(v10, v2);
  return v13;
}

uint64_t sub_1000DAF70(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1001FBC70;
  v6._object = a2;
  unint64_t v4 = sub_1001C15E0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

uint64_t sub_1000DAFBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100003918(qword_100208CD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000DB024(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100003918(qword_100208CD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000DB08C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_1000DB0D4(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(void *)a1 = *(void *)a2;
        a1[8] = a2[8];
        uint64_t v7 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(0) + 24);
        uint64_t v8 = &a1[v7];
        uint64_t v9 = &a2[v7];
        uint64_t v10 = sub_1001BFE60();
        char v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
        swift_bridgeObjectRetain();
        v11(v8, v9, v10);
        uint64_t v12 = *(int *)(sub_100003918(&qword_10020C4B8) + 48);
        uint64_t v13 = &a1[v12];
        char v14 = &a2[v12];
        uint64_t v15 = sub_1001BF950();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        long long v18 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v18;
        (**(void (***)(void *, const void *))(v18 - 8))(a1, a2);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        *(void *)a1 = *(void *)a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v19 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v19;
        uint64_t v20 = *((void *)a2 + 3);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = v20;
        uint64_t v21 = *((void *)a2 + 5);
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *((void *)a1 + 5) = v21;
        *((void *)a1 + 6) = *((void *)a2 + 6);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v22 = sub_1001BF310();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
        uint64_t v23 = *(int *)(sub_100003918(&qword_10020C498) + 48);
        uint64_t v24 = &a1[v23];
        uint64_t v25 = &a2[v23];
        uint64_t v26 = *((void *)v25 + 1);
        *(void *)uint64_t v24 = *(void *)v25;
        *((void *)v24 + 1) = v26;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        uint64_t v27 = sub_1001BF950();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        uint64_t v28 = sub_1001BF310();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(a1, a2, v28);
        uint64_t v29 = *(int *)(sub_100003918(&qword_10020C400) + 48);
        unint64_t v30 = &a1[v29];
        uint64_t v31 = &a2[v29];
        uint64_t v32 = sub_1001BF950();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        *(void *)a1 = *(void *)a2;
        a1[8] = a2[8];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
        uint64_t v33 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v33;
        uint64_t v34 = *((void *)a2 + 3);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = v34;
        uint64_t v35 = *((void *)a2 + 5);
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *((void *)a1 + 5) = v35;
        uint64_t v36 = *((void *)a2 + 7);
        *((void *)a1 + 6) = *((void *)a2 + 6);
        *((void *)a1 + 7) = v36;
        uint64_t v37 = *((void *)a2 + 8);
        uint64_t v38 = *((void *)a2 + 9);
        *((void *)a1 + 8) = v37;
        *((void *)a1 + 9) = v38;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1000DB564(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      uint64_t v3 = a1
         + *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(0) + 24);
      uint64_t v4 = sub_1001BFE60();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
      int v5 = &qword_10020C4B8;
      goto LABEL_9;
    case 1:
      return sub_100003E90(a1);
    case 2:
    case 7:
      goto LABEL_14;
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_14;
    case 4:
      uint64_t v6 = sub_1001BF310();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
      sub_100003918(&qword_10020C498);
      goto LABEL_14;
    case 5:
      goto LABEL_10;
    case 6:
      uint64_t v7 = sub_1001BF310();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
      int v5 = &qword_10020C400;
LABEL_9:
      a1 += *(int *)(sub_100003918(v5) + 48);
LABEL_10:
      uint64_t v8 = sub_1001BF950();
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
      uint64_t result = v9(a1, v8);
      break;
    case 8:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_14:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

char *sub_1000DB7AC(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      uint64_t v6 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(0) + 24);
      uint64_t v7 = &a1[v6];
      uint64_t v8 = &a2[v6];
      uint64_t v9 = sub_1001BFE60();
      uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
      swift_bridgeObjectRetain();
      v10(v7, v8, v9);
      uint64_t v11 = *(int *)(sub_100003918(&qword_10020C4B8) + 48);
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      uint64_t v14 = sub_1001BF950();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      goto LABEL_12;
    case 1u:
      long long v15 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v15;
      (**(void (***)(void *, const void *))(v15 - 8))(a1, a2);
      goto LABEL_12;
    case 2u:
      *(void *)a1 = *(void *)a2;
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 3u:
      uint64_t v16 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v16;
      uint64_t v17 = *((void *)a2 + 3);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = v17;
      uint64_t v18 = *((void *)a2 + 5);
      *((void *)a1 + 4) = *((void *)a2 + 4);
      *((void *)a1 + 5) = v18;
      *((void *)a1 + 6) = *((void *)a2 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 4u:
      uint64_t v19 = sub_1001BF310();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
      uint64_t v20 = *(int *)(sub_100003918(&qword_10020C498) + 48);
      uint64_t v21 = &a1[v20];
      uint64_t v22 = &a2[v20];
      uint64_t v23 = *((void *)v22 + 1);
      *(void *)uint64_t v21 = *(void *)v22;
      *((void *)v21 + 1) = v23;
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 5u:
      uint64_t v24 = sub_1001BF950();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
      goto LABEL_12;
    case 6u:
      uint64_t v25 = sub_1001BF310();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
      uint64_t v26 = *(int *)(sub_100003918(&qword_10020C400) + 48);
      uint64_t v27 = &a1[v26];
      uint64_t v28 = &a2[v26];
      uint64_t v29 = sub_1001BF950();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
      goto LABEL_12;
    case 7u:
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 8u:
      uint64_t v30 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v30;
      uint64_t v31 = *((void *)a2 + 3);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = v31;
      uint64_t v32 = *((void *)a2 + 5);
      *((void *)a1 + 4) = *((void *)a2 + 4);
      *((void *)a1 + 5) = v32;
      uint64_t v33 = *((void *)a2 + 7);
      *((void *)a1 + 6) = *((void *)a2 + 6);
      *((void *)a1 + 7) = v33;
      uint64_t v34 = *((void *)a2 + 8);
      uint64_t v35 = *((void *)a2 + 9);
      *((void *)a1 + 8) = v34;
      *((void *)a1 + 9) = v35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_12:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_1000DBBD8(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000DC060((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(void *)a1 = *(void *)a2;
        a1[8] = a2[8];
        uint64_t v6 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(0) + 24);
        uint64_t v7 = &a1[v6];
        uint64_t v8 = &a2[v6];
        uint64_t v9 = sub_1001BFE60();
        uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
        swift_bridgeObjectRetain();
        v10(v7, v8, v9);
        uint64_t v11 = *(int *)(sub_100003918(&qword_10020C4B8) + 48);
        uint64_t v12 = &a1[v11];
        uint64_t v13 = &a2[v11];
        uint64_t v14 = sub_1001BF950();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
        goto LABEL_13;
      case 1u:
        uint64_t v15 = *((void *)a2 + 3);
        *((void *)a1 + 3) = v15;
        *((void *)a1 + 4) = *((void *)a2 + 4);
        (**(void (***)(void *, const void *))(v15 - 8))(a1, a2);
        goto LABEL_13;
      case 2u:
        *(void *)a1 = *(void *)a2;
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 3u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *((void *)a1 + 5) = *((void *)a2 + 5);
        *((void *)a1 + 6) = *((void *)a2 + 6);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 4u:
        uint64_t v16 = sub_1001BF310();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
        uint64_t v17 = *(int *)(sub_100003918(&qword_10020C498) + 48);
        uint64_t v18 = &a1[v17];
        uint64_t v19 = &a2[v17];
        *(void *)uint64_t v18 = *(void *)v19;
        *((void *)v18 + 1) = *((void *)v19 + 1);
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 5u:
        uint64_t v20 = sub_1001BF950();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
        goto LABEL_13;
      case 6u:
        uint64_t v21 = sub_1001BF310();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
        uint64_t v22 = *(int *)(sub_100003918(&qword_10020C400) + 48);
        uint64_t v23 = &a1[v22];
        uint64_t v24 = &a2[v22];
        uint64_t v25 = sub_1001BF950();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
        goto LABEL_13;
      case 7u:
        *(void *)a1 = *(void *)a2;
        a1[8] = a2[8];
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 8u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *((void *)a1 + 5) = *((void *)a2 + 5);
        *((void *)a1 + 6) = *((void *)a2 + 6);
        *((void *)a1 + 7) = *((void *)a2 + 7);
        *((void *)a1 + 8) = *((void *)a2 + 8);
        *((void *)a1 + 9) = *((void *)a2 + 9);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_13:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1000DC060(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ThimbledEvent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for ThimbledEvent()
{
  uint64_t result = qword_10020D080;
  if (!qword_10020D080) {
    return swift_getSingletonMetadata();
  }
  return result;
}

char *sub_1000DC108(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      uint64_t v6 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(0) + 24);
      uint64_t v7 = &a1[v6];
      uint64_t v8 = &a2[v6];
      uint64_t v9 = sub_1001BFE60();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      uint64_t v10 = *(int *)(sub_100003918(&qword_10020C4B8) + 48);
      uint64_t v11 = &a1[v10];
      uint64_t v12 = &a2[v10];
      uint64_t v13 = sub_1001BF950();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      goto LABEL_7;
    case 4u:
      uint64_t v14 = sub_1001BF310();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
      uint64_t v15 = sub_100003918(&qword_10020C498);
      *(_OWORD *)&a1[*(int *)(v15 + 48)] = *(_OWORD *)&a2[*(int *)(v15 + 48)];
      goto LABEL_7;
    case 5u:
      uint64_t v16 = sub_1001BF950();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(a1, a2, v16);
      goto LABEL_7;
    case 6u:
      uint64_t v17 = sub_1001BF310();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
      uint64_t v18 = *(int *)(sub_100003918(&qword_10020C400) + 48);
      uint64_t v19 = &a1[v18];
      uint64_t v20 = &a2[v18];
      uint64_t v21 = sub_1001BF950();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_1000DC3D0(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000DC060((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(void *)a1 = *(void *)a2;
        a1[8] = a2[8];
        uint64_t v6 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(0) + 24);
        uint64_t v7 = &a1[v6];
        uint64_t v8 = &a2[v6];
        uint64_t v9 = sub_1001BFE60();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
        uint64_t v10 = *(int *)(sub_100003918(&qword_10020C4B8) + 48);
        uint64_t v11 = &a1[v10];
        uint64_t v12 = &a2[v10];
        uint64_t v13 = sub_1001BF950();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
        goto LABEL_8;
      case 4u:
        uint64_t v14 = sub_1001BF310();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
        uint64_t v15 = sub_100003918(&qword_10020C498);
        *(_OWORD *)&a1[*(int *)(v15 + 48)] = *(_OWORD *)&a2[*(int *)(v15 + 48)];
        goto LABEL_8;
      case 5u:
        uint64_t v16 = sub_1001BF950();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(a1, a2, v16);
        goto LABEL_8;
      case 6u:
        uint64_t v17 = sub_1001BF310();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
        uint64_t v18 = *(int *)(sub_100003918(&qword_10020C400) + 48);
        uint64_t v19 = &a1[v18];
        uint64_t v20 = &a2[v18];
        uint64_t v21 = sub_1001BF950();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1000DC6A8()
{
  uint64_t result = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1001BF950();
    if (v2 <= 0x3F)
    {
      uint64_t v3 = *(void *)(result - 8) + 64;
      swift_getTupleTypeLayout2();
      uint64_t v8 = &v7;
      uint64_t v9 = "(";
      uint64_t v10 = (char *)&value witness table for Builtin.BridgeObject + 64;
      uint64_t v11 = &unk_1001D3060;
      uint64_t result = sub_1001BF310();
      if (v4 <= 0x3F)
      {
        swift_getTupleTypeLayout2();
        uint64_t v12 = &v6;
        uint64_t v13 = v3;
        swift_getTupleTypeLayout2();
        uint64_t v14 = &v5;
        uint64_t v15 = &unk_1001D3090;
        uint64_t v16 = &unk_1001D30A8;
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t TC2Configuration.environment(systemInfo:)@<X0>(uint64_t a1@<X0>, void (*a2)(char *, uint64_t, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  Swift::String v49 = a2;
  uint64_t v50 = a3;
  uint64_t v6 = sub_100003918(&qword_10020C5C8);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_1001BF8D0();
  uint64_t v10 = *(void *)(v55 - 8);
  uint64_t v12 = __chkstk_darwin(v55, v11);
  Swift::String v51 = (char *)v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)v47 - v15;
  uint64_t v17 = sub_1001BF530();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v20 = __chkstk_darwin(v17, v19);
  Swift::String v48 = (char *)v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v22);
  uint64_t v24 = (char *)v47 - v23;
  sub_1001BF860();
  sub_1001C0C60();
  swift_bridgeObjectRelease();
  int v25 = os_variant_allows_internal_security_policies();
  swift_release();
  if (v25) {
    TC2Configuration.internalEnvironment(systemInfo:)(a1, (uint64_t)v49, v50, a4);
  }
  else {
    TC2Configuration.customerEnvironment.getter(a4);
  }
  uint64_t v54 = v10;
  Swift::String v49 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v50 = a4;
  uint64_t v26 = a4;
  uint64_t v27 = v55;
  v49(v16, v26, v55);
  Environment.init(_:)((uint64_t)v16, (uint64_t)v24);
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v28(v9, v24, v17);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v9, 0, 1, v17);
  sub_1001BF520();
  if (qword_100207980 != -1) {
    swift_once();
  }
  uint64_t v29 = sub_1001C0340();
  uint64_t v30 = sub_10000D978(v29, (uint64_t)qword_10020D0B8);
  uint64_t v31 = v48;
  v28(v48, v24, v17);
  v47[1] = v30;
  uint64_t v32 = sub_1001C0330();
  os_log_type_t v33 = sub_1001C11E0();
  BOOL v34 = os_log_type_enabled(v32, v33);
  uint64_t v52 = v18;
  Swift::String v53 = v24;
  if (v34)
  {
    uint64_t v35 = v18;
    uint64_t v36 = (uint8_t *)swift_slowAlloc();
    uint64_t v57 = swift_slowAlloc();
    *(_DWORD *)uint64_t v36 = 136446210;
    v47[0] = v36 + 4;
    sub_1000DF8A0();
    uint64_t v37 = sub_1001C1780();
    uint64_t v56 = sub_1000DF238(v37, v38, &v57);
    uint64_t v27 = v55;
    sub_1001C1310();
    swift_bridgeObjectRelease();
    Swift::String v48 = *(char **)(v35 + 8);
    ((void (*)(char *, uint64_t))v48)(v31, v17);
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "TC2Configuration informed CloudAttestation that override environment=%{public}s", v36, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    Swift::String v48 = *(char **)(v18 + 8);
    ((void (*)(char *, uint64_t))v48)(v31, v17);
  }

  Swift::String v39 = v51;
  v49(v51, v50, v27);
  uint64_t v40 = v27;
  Swift::String v41 = sub_1001C0330();
  os_log_type_t v42 = sub_1001C1200();
  if (os_log_type_enabled(v41, v42))
  {
    Swift::String v43 = (uint8_t *)swift_slowAlloc();
    uint64_t v57 = swift_slowAlloc();
    *(_DWORD *)Swift::String v43 = 136446210;
    uint64_t v44 = sub_1001BF8A0();
    uint64_t v56 = sub_1000DF238(v44, v45, &v57);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v39, v40);
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "current environment=%{public}s", v43, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v54 + 8))(v39, v40);
  }
  return ((uint64_t (*)(char *, uint64_t))v48)(v53, v17);
}

uint64_t sub_1000DCE00()
{
  uint64_t v0 = sub_1001BF8E0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  unint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1001C0340();
  sub_100044F74(v5, qword_10020D0B8);
  sub_10000D978(v5, (uint64_t)qword_10020D0B8);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for TC2LogCategory.configuration(_:), v0);
  sub_1001BFDD0();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t TC2Configuration.internalEnvironment(systemInfo:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = *(void *)(a2 - 8);
  __chkstk_darwin(a1, a2);
  uint64_t v11 = (char *)&v21[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100003918(&qword_10020C5D8);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v21[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001BF860();
  sub_1001C0C60();
  swift_bridgeObjectRelease();
  int v16 = os_variant_allows_internal_security_policies();
  uint64_t result = swift_release();
  if (v16)
  {
    TC2Configuration.configuredEnvironment.getter(a2, v15);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v4, a2);
    sub_100032890(a1, (uint64_t)v21);
    uint64_t v18 = sub_1001BF8D0();
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18) == 1)
    {
      sub_1000DDD1C(v21, a2, a3, a4);
      sub_100003E90((uint64_t)v21);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, a2);
      return sub_1000DF8F8((uint64_t)v15);
    }
    else
    {
      sub_100003E90((uint64_t)v21);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, a2);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v19 + 32))(a4, v15, v18);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void TC2Configuration.customerEnvironment.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1001BF8D0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(a1, enum case for TC2Environment.production(_:), v2);
  if (qword_100207980 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1001C0340();
  sub_10000D978(v7, (uint64_t)qword_10020D0B8);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, a1, v2);
  uint64_t v8 = sub_1001C0330();
  os_log_type_t v9 = sub_1001C11E0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446210;
    uint64_t v11 = sub_1001BF8A0();
    uint64_t v13 = sub_1000DF238(v11, v12, &v14);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "TC2Configuration selected environment=%{public}s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
}

uint64_t Environment.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1001BF8D0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  int v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (v9 == enum case for TC2Environment.production(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    uint64_t v10 = (unsigned int *)&enum case for Environment.production(_:);
LABEL_15:
    uint64_t v11 = *v10;
    uint64_t v12 = sub_1001BF530();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(a2, v11, v12);
  }
  if (v9 == enum case for TC2Environment.carry(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    uint64_t v10 = (unsigned int *)&enum case for Environment.carry(_:);
    goto LABEL_15;
  }
  if (v9 == enum case for TC2Environment.staging(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    uint64_t v10 = (unsigned int *)&enum case for Environment.staging(_:);
    goto LABEL_15;
  }
  if (v9 == enum case for TC2Environment.qa(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    uint64_t v10 = (unsigned int *)&enum case for Environment.qa(_:);
    goto LABEL_15;
  }
  if (v9 == enum case for TC2Environment.perf(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    uint64_t v10 = (unsigned int *)&enum case for Environment.perf(_:);
    goto LABEL_15;
  }
  if (v9 == enum case for TC2Environment.dev(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    uint64_t v10 = (unsigned int *)&enum case for Environment.dev(_:);
    goto LABEL_15;
  }
  if (v9 == enum case for TC2Environment.ephemeral(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    uint64_t v10 = (unsigned int *)&enum case for Environment.ephemeral(_:);
    goto LABEL_15;
  }
  uint64_t result = sub_1001C1830();
  __break(1u);
  return result;
}

uint64_t TC2Configuration.configuredEnvironment.getter@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v3 = sub_100003918(&qword_10020C5D8);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1001BF8D0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v38 = v7;
  uint64_t v39 = v8;
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100003918(&qword_10020C5E0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  int v16 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001BF860();
  sub_1001C0C60();
  swift_bridgeObjectRelease();
  uint64_t v17 = os_variant_allows_internal_security_policies();
  swift_release();
  if (!v17)
  {
    __break(1u);
    goto LABEL_23;
  }
  sub_100003918(&qword_100207DB8);
  sub_1001BF960();
  sub_1000B9CCC();
  sub_1001BF8F0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  unint64_t v18 = v42;
  if (!v42)
  {
    uint64_t v17 = v38;
    a1 = v39;
    if (qword_100207980 == -1)
    {
LABEL_9:
      uint64_t v25 = sub_1001C0340();
      sub_10000D978(v25, (uint64_t)qword_10020D0B8);
      uint64_t v26 = sub_1001C0330();
      os_log_type_t v27 = sub_1001C11E0();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v28 = 0;
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "TC2Configuration defaults absent, no environment configured", v28, 2u);
        swift_slowDealloc();
      }

      goto LABEL_17;
    }
LABEL_23:
    swift_once();
    goto LABEL_9;
  }
  uint64_t v19 = v41;
  swift_bridgeObjectRetain();
  sub_1001BF890();
  uint64_t v17 = v38;
  a1 = v39;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v6, 1, v38) == 1)
  {
    sub_1000DF8F8((uint64_t)v6);
    if (qword_100207980 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1001C0340();
    sub_10000D978(v20, (uint64_t)qword_10020D0B8);
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1001C0330();
    os_log_type_t v22 = sub_1001C11E0();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v40 = sub_1000DF238(v19, v18, &v41);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "TC2Configuration defaults=%{public}s unrecognized, no environment configured", v23, 0xCu);
      uint64_t v24 = 1;
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

LABEL_18:
      BOOL v34 = v37;
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(a1 + 56))(v34, v24, 1, v17);
    }

    swift_bridgeObjectRelease_n();
LABEL_17:
    uint64_t v24 = 1;
    goto LABEL_18;
  }
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(a1 + 32);
  v29(v11, v6, v17);
  if (qword_100207980 != -1) {
    swift_once();
  }
  uint64_t v30 = sub_1001C0340();
  sub_10000D978(v30, (uint64_t)qword_10020D0B8);
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_1001C0330();
  os_log_type_t v32 = sub_1001C11D0();
  if (os_log_type_enabled(v31, v32))
  {
    os_log_type_t v33 = (uint8_t *)swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v33 = 136446210;
    v36[1] = v33 + 4;
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_1000DF238(v19, v18, &v41);
    uint64_t v17 = v38;
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "TC2Configuration selected configured environment=%{public}s from defaults", v33, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  BOOL v34 = v37;
  v29(v37, v11, v17);
  uint64_t v24 = 0;
  a1 = v39;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(a1 + 56))(v34, v24, 1, v17);
}

uint64_t sub_1000DDD1C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v144 = a4;
  uint64_t v145 = a2;
  uint64_t v146 = a3;
  uint64_t v5 = sub_100003918(&qword_10020C5D8);
  uint64_t v7 = __chkstk_darwin(v5 - 8, v6);
  uint64_t v139 = &v125[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7, v9);
  uint64_t v11 = &v125[-v10];
  uint64_t v143 = sub_100003918(&qword_10020C5E0);
  uint64_t v12 = *(void *)(v143 - 8);
  uint64_t v14 = __chkstk_darwin(v143, v13);
  int v16 = &v125[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14, v17);
  uint64_t v19 = &v125[-v18];
  uint64_t v147 = sub_1001BF8D0();
  uint64_t v20 = *(void *)(v147 - 8);
  uint64_t v22 = __chkstk_darwin(v147, v21);
  uint64_t v141 = &v125[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v25 = __chkstk_darwin(v22, v24);
  uint64_t v142 = &v125[-v26];
  uint64_t v28 = __chkstk_darwin(v25, v27);
  uint64_t v140 = &v125[-v29];
  uint64_t v31 = __chkstk_darwin(v28, v30);
  uint64_t v136 = &v125[-v32];
  uint64_t v34 = __chkstk_darwin(v31, v33);
  uint64_t v36 = &v125[-v35];
  __chkstk_darwin(v34, v37);
  uint64_t v39 = &v125[-v38];
  sub_1001BF860();
  sub_1001C0C60();
  swift_bridgeObjectRelease();
  int v40 = os_variant_allows_internal_security_policies();
  swift_release();
  if (!v40)
  {
    __break(1u);
    goto LABEL_67;
  }
  sub_1001BF860();
  sub_1001C0C60();
  swift_bridgeObjectRelease();
  char has_internal_content = os_variant_has_internal_content();
  swift_release();
  if ((has_internal_content & 1) == 0)
  {
    uint64_t v19 = (unsigned char *)v147;
    (*(void (**)(unsigned char *, void, uint64_t))(v20 + 104))(v39, enum case for TC2Environment.production(_:), v147);
    if (qword_100207980 == -1)
    {
LABEL_11:
      uint64_t v66 = sub_1001C0340();
      sub_10000D978(v66, (uint64_t)qword_10020D0B8);
      (*(void (**)(unsigned char *, unsigned char *, unsigned char *))(v20 + 16))(v36, v39, v19);
      Swift::String v67 = sub_1001C0330();
      os_log_type_t v68 = sub_1001C11D0();
      if (os_log_type_enabled(v67, v68))
      {
        Swift::String v69 = (uint8_t *)swift_slowAlloc();
        uint64_t v148 = swift_slowAlloc();
        *(_DWORD *)Swift::String v69 = 136446210;
        uint64_t v70 = sub_1001BF8A0();
        uint64_t v150 = sub_1000DF238(v70, v71, &v148);
        uint64_t v19 = (unsigned char *)v147;
        sub_1001C1310();
        swift_bridgeObjectRelease();
        (*(void (**)(unsigned char *, unsigned char *))(v20 + 8))(v36, v19);
        _os_log_impl((void *)&_mh_execute_header, v67, v68, "TC2Configuration selected environment=%{public}s", v69, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *))(v20 + 8))(v36, v19);
      }

      return (*(uint64_t (**)(uint64_t, unsigned char *, unsigned char *))(v20 + 32))(v144, v39, v19);
    }
LABEL_67:
    swift_once();
    goto LABEL_11;
  }
  uint64_t v42 = a1[3];
  uint64_t v43 = a1[4];
  sub_10000D934(a1, v42);
  uint64_t v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 24))(v42, v43);
  uint64_t v137 = v45;
  uint64_t v138 = v44;
  uint64_t v46 = sub_100003918(&qword_100207DB8);
  sub_1001BFA60();
  unint64_t v47 = sub_1000B9CCC();
  sub_1001BF8F0();
  unint64_t v49 = v12 + 8;
  Swift::String v48 = *(unsigned char **)(v12 + 8);
  ((void (*)(unsigned char *, uint64_t))v48)(v19, v143);
  unint64_t v50 = (unint64_t)v149;
  if (v149)
  {
    uint64_t v135 = v46;
    uint64_t v51 = v148;
    sub_10001A364();
    uint64_t v52 = sub_1001C1370();
    uint64_t v53 = *(void *)(v52 + 16);
    unint64_t v134 = v47;
    if (v53 == 2)
    {
      unint64_t v133 = v49;
      swift_bridgeObjectRelease();
      if (*(void *)(v52 + 16))
      {
        unint64_t v49 = *(void *)(v52 + 40);
        swift_bridgeObjectRetain();
        uint64_t v131 = sub_1001C0C70();
        unint64_t v50 = v54;
        swift_bridgeObjectRelease();
        if (*(void *)(v52 + 16) >= 2uLL)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v132 = sub_1001C0C70();
          unint64_t v49 = v55;
          swift_bridgeObjectRelease();
          if (qword_100207980 == -1) {
            goto LABEL_8;
          }
          goto LABEL_70;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_70:
      swift_once();
LABEL_8:
      uint64_t v129 = v16;
      uint64_t v56 = sub_1001C0340();
      uint64_t v57 = sub_10000D978(v56, (uint64_t)qword_10020D0B8);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v128 = v57;
      Swift::String v58 = sub_1001C0330();
      os_log_type_t v59 = sub_1001C11E0();
      int v60 = v59;
      BOOL v61 = os_log_type_enabled(v58, v59);
      unint64_t v130 = v49;
      if (v61)
      {
        uint64_t v62 = swift_slowAlloc();
        uint64_t v127 = swift_slowAlloc();
        uint64_t v148 = v127;
        *(_DWORD *)uint64_t v62 = 136315394;
        swift_bridgeObjectRetain();
        uint64_t v63 = v131;
        uint64_t v150 = sub_1000DF238(v131, v50, &v148);
        int v126 = v60;
        sub_1001C1310();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v62 + 12) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v150 = sub_1000DF238(v132, v49, &v148);
        sub_1001C1310();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v58, (os_log_type_t)v126, "TC2Configuration saw bootFixedLiveOnEnvironment with id=%s, environment=%{public}s", (uint8_t *)v62, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v64 = v147;
        uint64_t v65 = v137;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        uint64_t v64 = v147;
        uint64_t v65 = v137;
        uint64_t v63 = v131;
      }
      if (v63 == v138 && v50 == v65)
      {
        swift_bridgeObjectRelease();
        int v16 = v129;
      }
      else
      {
        char v84 = sub_1001C1840();
        swift_bridgeObjectRelease();
        int v16 = v129;
        if ((v84 & 1) == 0)
        {
          uint64_t v136 = v48;
          swift_bridgeObjectRelease();
          Swift::String v86 = sub_1001C0330();
          os_log_type_t v87 = sub_1001C11E0();
          if (!os_log_type_enabled(v86, v87))
          {
LABEL_39:

            Swift::String v77 = v142;
            goto LABEL_40;
          }
          Swift::String v88 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)Swift::String v88 = 0;
          Swift::String v89 = "TC2Configuration saw bootFixedLiveOnEnvironment from previous boot, ignoring";
LABEL_38:
          _os_log_impl((void *)&_mh_execute_header, v86, v87, v89, v88, 2u);
          swift_slowDealloc();
          goto LABEL_39;
        }
      }
      unint64_t v85 = v130;
      swift_bridgeObjectRetain();
      sub_1001BF890();
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v20 + 48))(v11, 1, v64) != 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v90 = v64;
        Swift::String v91 = *(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v20 + 32);
        Swift::String v92 = v136;
        v91((uint64_t)v136, v11, v90);
        swift_bridgeObjectRetain();
        Swift::String v93 = sub_1001C0330();
        os_log_type_t v94 = sub_1001C11D0();
        if (os_log_type_enabled(v93, v94))
        {
          Swift::String v95 = (uint8_t *)swift_slowAlloc();
          uint64_t v148 = swift_slowAlloc();
          *(_DWORD *)Swift::String v95 = 136446210;
          swift_bridgeObjectRetain();
          uint64_t v150 = sub_1000DF238(v132, v85, &v148);
          sub_1001C1310();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v93, v94, "TC2Configuration agrees with current boot's selection, environment=%{public}s", v95, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        return v91(v144, v92, v147);
      }
      uint64_t v136 = v48;
      swift_bridgeObjectRelease();
      sub_1000DF8F8((uint64_t)v11);
      Swift::String v86 = sub_1001C0330();
      os_log_type_t v87 = sub_1001C11F0();
      if (!os_log_type_enabled(v86, v87)) {
        goto LABEL_39;
      }
      Swift::String v88 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::String v88 = 0;
      Swift::String v89 = "TC2Configuration saw bootFixedLiveOnEnvironment with invalid environment, ignoring";
      goto LABEL_38;
    }
    uint64_t v136 = v48;
    swift_bridgeObjectRelease();
    if (qword_100207980 != -1) {
      swift_once();
    }
    uint64_t v79 = sub_1001C0340();
    sub_10000D978(v79, (uint64_t)qword_10020D0B8);
    swift_bridgeObjectRetain();
    Swift::String v80 = sub_1001C0330();
    os_log_type_t v81 = sub_1001C11F0();
    if (os_log_type_enabled(v80, v81))
    {
      Swift::String v82 = (uint8_t *)swift_slowAlloc();
      uint64_t v83 = swift_slowAlloc();
      unint64_t v133 = v49;
      uint64_t v148 = v83;
      *(_DWORD *)Swift::String v82 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v150 = sub_1000DF238(v51, v50, &v148);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v80, v81, "TC2Configuration saw invalid bootFixedLiveOnEnvironment=%s", v82, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v64 = v147;
    Swift::String v77 = v142;
  }
  else
  {
    uint64_t v136 = v48;
    if (qword_100207980 != -1) {
      swift_once();
    }
    uint64_t v73 = sub_1001C0340();
    sub_10000D978(v73, (uint64_t)qword_10020D0B8);
    Swift::String v74 = sub_1001C0330();
    os_log_type_t v75 = sub_1001C11E0();
    BOOL v76 = os_log_type_enabled(v74, v75);
    uint64_t v64 = v147;
    Swift::String v77 = v142;
    if (v76)
    {
      Swift::String v78 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::String v78 = 0;
      _os_log_impl((void *)&_mh_execute_header, v74, v75, "TC2Configuration does not see bootFixedLiveOnEnvironment", v78, 2u);
      swift_slowDealloc();
    }
  }
LABEL_40:
  sub_1001BFA40();
  sub_1001BF8F0();
  ((void (*)(unsigned char *, uint64_t))v136)(v16, v143);
  Swift::String v96 = v149;
  if (!v149)
  {
    if (qword_100207980 != -1) {
      swift_once();
    }
    uint64_t v103 = sub_1001C0340();
    sub_10000D978(v103, (uint64_t)qword_10020D0B8);
    unint64_t v104 = sub_1001C0330();
    os_log_type_t v105 = sub_1001C11E0();
    if (os_log_type_enabled(v104, v105))
    {
      unint64_t v106 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v106 = 0;
      _os_log_impl((void *)&_mh_execute_header, v104, v105, "TC2Configuration does not see proposedEnvironment", v106, 2u);
      swift_slowDealloc();
    }

    goto LABEL_56;
  }
  uint64_t v97 = v148;
  swift_bridgeObjectRetain();
  uint64_t v98 = (uint64_t)v139;
  sub_1001BF890();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v98, 1, v64) == 1)
  {
    sub_1000DF8F8(v98);
    if (qword_100207980 != -1) {
      swift_once();
    }
    uint64_t v99 = sub_1001C0340();
    sub_10000D978(v99, (uint64_t)qword_10020D0B8);
    swift_bridgeObjectRetain();
    uint64_t v100 = sub_1001C0330();
    os_log_type_t v101 = sub_1001C11F0();
    if (os_log_type_enabled(v100, v101))
    {
      uint64_t v102 = (uint8_t *)swift_slowAlloc();
      uint64_t v148 = swift_slowAlloc();
      *(_DWORD *)uint64_t v102 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v150 = sub_1000DF238(v97, (unint64_t)v96, &v148);
      uint64_t v64 = v147;
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v100, v101, "TC2Configuration saw invalid proposed environment=%{public}s, ignoring", v102, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
LABEL_56:
    uint64_t v112 = v141;
    (*(void (**)(unsigned char *, void, uint64_t))(v20 + 104))(v77, enum case for TC2Environment.carry(_:), v64);
    if (qword_100207980 != -1) {
      swift_once();
    }
    uint64_t v113 = sub_1001C0340();
    sub_10000D978(v113, (uint64_t)qword_10020D0B8);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v20 + 16))(v112, v77, v64);
    uint64_t v114 = sub_1001C0330();
    os_log_type_t v115 = sub_1001C11D0();
    if (os_log_type_enabled(v114, v115))
    {
      uint64_t v116 = v77;
      uint64_t v117 = v112;
      uint64_t v118 = (uint8_t *)swift_slowAlloc();
      uint64_t v148 = swift_slowAlloc();
      *(_DWORD *)uint64_t v118 = 136446210;
      uint64_t v119 = sub_1001BF8A0();
      uint64_t v150 = sub_1000DF238(v119, v120, &v148);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      uint64_t v121 = v117;
      Swift::String v77 = v116;
      uint64_t v64 = v147;
      (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v121, v147);
      _os_log_impl((void *)&_mh_execute_header, v114, v115, "TC2Configuration selected environment=%{public}s", v118, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v112, v64);
    }

    uint64_t v122 = v144;
    uint64_t v123 = sub_1001BF8A0();
    sub_1000DF958(v138, v137, v123, v124);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v20 + 32))(v122, v77, v64);
  }
  uint64_t v107 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v20 + 32);
  v107(v140, v98, v64);
  if (qword_100207980 != -1) {
    swift_once();
  }
  uint64_t v108 = sub_1001C0340();
  sub_10000D978(v108, (uint64_t)qword_10020D0B8);
  swift_bridgeObjectRetain_n();
  uint64_t v109 = sub_1001C0330();
  os_log_type_t v110 = sub_1001C11D0();
  if (os_log_type_enabled(v109, v110))
  {
    uint64_t v111 = (uint8_t *)swift_slowAlloc();
    uint64_t v148 = swift_slowAlloc();
    *(_DWORD *)uint64_t v111 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v150 = sub_1000DF238(v97, (unint64_t)v96, &v148);
    uint64_t v64 = v147;
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v109, v110, "TC2Configuration moving to proposed environment=%{public}s", v111, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1000DF958(v138, v137, v97, v96);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t, unsigned char *, uint64_t))v107)(v144, v140, v64);
}

uint64_t sub_1000DF14C(uint64_t result, unsigned char **a2)
{
  uint64_t v2 = *a2;
  *uint64_t v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_1000DF15C(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_1000DF198(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1000DF1C0(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_1000DF238(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_1001C1310();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_1000DF238(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1000DF30C(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1000D8308((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1000D8308((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_100003E90((uint64_t)v12);
  return v7;
}

uint64_t sub_1000DF30C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1001C1320();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1000DF4C8(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1001C1460();
  if (!v8)
  {
    sub_1001C1570();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1001C15D0();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1000DF4C8(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_1000DF560(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1000DF740(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1000DF740(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_1000DF560(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1000DF6D8(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1001C1430();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_1001C1570();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1001C0D20();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    sub_1001C15D0();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_1001C1570();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_1000DF6D8(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_100003918(&qword_10020D0D0);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1000DF740(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_100003918(&qword_10020D0D0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1001C15D0();
  __break(1u);
  return result;
}

unsigned char **sub_1000DF890(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v4 = *result;
  *unint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

unint64_t sub_1000DF8A0()
{
  unint64_t result = qword_10020C5D0;
  if (!qword_10020C5D0)
  {
    sub_1001BF530();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020C5D0);
  }
  return result;
}

uint64_t sub_1000DF8F8(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020C5D8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000DF958(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = sub_100003918(&qword_10020C5E0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001BF860();
  sub_1001C0C60();
  swift_bridgeObjectRelease();
  int v13 = os_variant_allows_internal_security_policies();
  uint64_t result = swift_release();
  if (v13)
  {
    sub_100003918(&qword_100207DB8);
    sub_1001BFA60();
    v20[0] = a1;
    v20[1] = a2;
    swift_bridgeObjectRetain();
    v21._countAndFlagsBits = 44;
    v21._object = (void *)0xE100000000000000;
    sub_1001C0D00(v21);
    v22._countAndFlagsBits = a3;
    v22._object = a4;
    sub_1001C0D00(v22);
    uint64_t v15 = sub_1001BFAF0();
    uint64_t v17 = v16;
    v24._countAndFlagsBits = sub_1001BFAE0();
    uint64_t v19 = v18;
    v23._countAndFlagsBits = v15;
    v23._object = v17;
    v24._object = v19;
    sub_1001C0CA0(v23, v24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000DFB08(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 7827308;
    }
    else {
      uint64_t v3 = 0x756F72676B636162;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE300000000000000;
    }
    else {
      unint64_t v4 = 0xEA0000000000646ELL;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 7827308;
      }
      else {
        uint64_t v6 = 0x756F72676B636162;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE300000000000000;
      }
      else {
        unint64_t v7 = 0xEA0000000000646ELL;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE400000000000000;
    uint64_t v3 = 1751607656;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE400000000000000;
  if (v3 != 1751607656)
  {
LABEL_21:
    char v8 = sub_1001C1840();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1000DFC0C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE900000000000065;
  unint64_t v3 = 0x6D6954746E657665;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6D6954746E657665;
  unint64_t v6 = 0xE900000000000065;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE300000000000000;
      unint64_t v5 = 7761509;
      break;
    case 2:
      unint64_t v5 = 0x696C43656C707061;
      unint64_t v6 = 0xEF6F666E49746E65;
      break;
    case 3:
      unint64_t v5 = 0x636F4C656C707061;
      unint64_t v6 = 0xEB00000000656C61;
      break;
    case 4:
      unint64_t v5 = 0xD000000000000017;
      unint64_t v7 = "attestationDistribution";
      goto LABEL_8;
    case 5:
      unint64_t v6 = 0x80000001001C2E80;
      unint64_t v5 = 0xD000000000000011;
      break;
    case 6:
      unint64_t v5 = 0xD000000000000019;
      unint64_t v7 = "totalNumberOfAttestations";
LABEL_8:
      unint64_t v6 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE300000000000000;
      unint64_t v3 = 7761509;
      break;
    case 2:
      unint64_t v3 = 0x696C43656C707061;
      unint64_t v2 = 0xEF6F666E49746E65;
      break;
    case 3:
      unint64_t v3 = 0x636F4C656C707061;
      unint64_t v2 = 0xEB00000000656C61;
      break;
    case 4:
      unint64_t v3 = 0xD000000000000017;
      char v8 = "attestationDistribution";
      goto LABEL_16;
    case 5:
      unint64_t v2 = 0x80000001001C2E80;
      unint64_t v3 = 0xD000000000000011;
      break;
    case 6:
      unint64_t v3 = 0xD000000000000019;
      char v8 = "totalNumberOfAttestations";
LABEL_16:
      unint64_t v2 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v5 == v3 && v6 == v2) {
    char v9 = 1;
  }
  else {
    char v9 = sub_1001C1840();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1000DFE6C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE900000000000065;
  uint64_t v3 = 0x6D6974746E657665;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6D6974746E657665;
  unint64_t v6 = 0xE900000000000065;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE300000000000000;
      uint64_t v5 = 7761509;
      break;
    case 2:
      uint64_t v5 = 0x6572746E65696C63;
      unint64_t v6 = 0xEF64697473657571;
      break;
    case 3:
      uint64_t v5 = 0x696C63656C707061;
      unint64_t v6 = 0xEF6F666E69746E65;
      break;
    case 4:
      uint64_t v5 = 0x636F6C656C707061;
      unint64_t v6 = 0xEB00000000656C61;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE300000000000000;
      if (v5 == 7761509) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v2 = 0xEF64697473657571;
      if (v5 != 0x6572746E65696C63) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v3 = 0x696C63656C707061;
      unint64_t v2 = 0xEF6F666E69746E65;
      goto LABEL_12;
    case 4:
      unint64_t v2 = 0xEB00000000656C61;
      if (v5 != 0x636F6C656C707061) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v3) {
        goto LABEL_16;
      }
LABEL_13:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1001C1840();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1000E0070(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000023;
  unint64_t v3 = 0x80000001001C2600;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000023;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0xD000000000000026;
      unint64_t v6 = "com.apple.privatecloudcompute.requests";
      goto LABEL_8;
    case 2:
      char v7 = "com.apple.privatecloudcompute.prefetchRequest";
      goto LABEL_5;
    case 3:
      char v7 = "com.apple.privatecloudcompute.knownRateLimits";
LABEL_5:
      unint64_t v3 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      unint64_t v5 = 0xD00000000000002DLL;
      break;
    case 4:
      unint64_t v5 = 0xD000000000000036;
      unint64_t v6 = "com.apple.privatecloudcompute.bundleIdentifierOverride";
      goto LABEL_8;
    case 5:
      unint64_t v5 = 0xD00000000000002FLL;
      unint64_t v6 = "com.apple.privatecloudcompute.serverEnvironment";
LABEL_8:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v8 = 0x80000001001C2600;
  switch(a2)
  {
    case 1:
      unint64_t v9 = 0xD000000000000026;
      uint64_t v10 = "com.apple.privatecloudcompute.requests";
      goto LABEL_18;
    case 2:
      uint64_t v11 = "com.apple.privatecloudcompute.prefetchRequest";
      goto LABEL_13;
    case 3:
      uint64_t v11 = "com.apple.privatecloudcompute.knownRateLimits";
LABEL_13:
      unint64_t v8 = (unint64_t)(v11 - 32) | 0x8000000000000000;
      unint64_t v2 = 0xD00000000000002DLL;
      goto LABEL_14;
    case 4:
      unint64_t v9 = 0xD000000000000036;
      uint64_t v10 = "com.apple.privatecloudcompute.bundleIdentifierOverride";
      goto LABEL_18;
    case 5:
      unint64_t v9 = 0xD00000000000002FLL;
      uint64_t v10 = "com.apple.privatecloudcompute.serverEnvironment";
LABEL_18:
      unint64_t v8 = (unint64_t)(v10 - 32) | 0x8000000000000000;
      if (v5 == v9) {
        goto LABEL_19;
      }
      goto LABEL_21;
    default:
LABEL_14:
      if (v5 != v2) {
        goto LABEL_21;
      }
LABEL_19:
      if (v3 == v8) {
        char v12 = 1;
      }
      else {
LABEL_21:
      }
        char v12 = sub_1001C1840();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v12 & 1;
  }
}

uint64_t sub_1000E0238(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000018;
  unint64_t v3 = 0x80000001001C2730;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000018;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0xD000000000000019;
      unint64_t v6 = "MaxPrefetchedAttestations";
      goto LABEL_10;
    case 2:
      unint64_t v5 = 0xD000000000000019;
      unint64_t v6 = "TotalAttestationsByRegion";
      goto LABEL_10;
    case 3:
      unint64_t v5 = 0xD000000000000014;
      unint64_t v6 = "LiveOnProdSpillover2";
      goto LABEL_10;
    case 4:
      unint64_t v5 = 0xD000000000000024;
      unint64_t v6 = "PrewarmAttestationsValidityInSeconds";
      goto LABEL_10;
    case 5:
      unint64_t v5 = 0xD000000000000012;
      unint64_t v6 = "MaxPrefetchBatches";
      goto LABEL_10;
    case 6:
      unint64_t v5 = 0xD000000000000010;
      unint64_t v6 = "BlockedBundleIds";
      goto LABEL_10;
    case 7:
      unint64_t v6 = "MaxPrefetchWorkloadCount";
      goto LABEL_10;
    case 8:
      unint64_t v5 = 0xD00000000000001DLL;
      unint64_t v6 = "MaxPrefetchWorkloadAgeSeconds";
LABEL_10:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x80000001001C2730;
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xD000000000000019;
      unint64_t v8 = "MaxPrefetchedAttestations";
      goto LABEL_20;
    case 2:
      unint64_t v2 = 0xD000000000000019;
      unint64_t v8 = "TotalAttestationsByRegion";
      goto LABEL_20;
    case 3:
      unint64_t v2 = 0xD000000000000014;
      unint64_t v8 = "LiveOnProdSpillover2";
      goto LABEL_20;
    case 4:
      unint64_t v2 = 0xD000000000000024;
      unint64_t v8 = "PrewarmAttestationsValidityInSeconds";
      goto LABEL_20;
    case 5:
      unint64_t v2 = 0xD000000000000012;
      unint64_t v8 = "MaxPrefetchBatches";
      goto LABEL_20;
    case 6:
      unint64_t v2 = 0xD000000000000010;
      unint64_t v8 = "BlockedBundleIds";
      goto LABEL_20;
    case 7:
      unint64_t v8 = "MaxPrefetchWorkloadCount";
      goto LABEL_20;
    case 8:
      unint64_t v2 = 0xD00000000000001DLL;
      unint64_t v8 = "MaxPrefetchWorkloadAgeSeconds";
LABEL_20:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_1001C1840();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1000E0454(char a1, unsigned __int8 a2)
{
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v2 = 0x6D726177657270;
    }
    else {
      uint64_t v2 = 0x74736575716572;
    }
    unint64_t v3 = 0xE700000000000000;
    int v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1) {
        uint64_t v5 = 0x6D726177657270;
      }
      else {
        uint64_t v5 = 0x74736575716572;
      }
      unint64_t v6 = 0xE700000000000000;
      if (v2 != v5) {
        goto LABEL_15;
      }
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v3 = 0xE800000000000000;
    uint64_t v2 = 0x6863746566657270;
    int v4 = a2;
    if (a2) {
      goto LABEL_6;
    }
  }
  unint64_t v6 = 0xE800000000000000;
  if (v2 != 0x6863746566657270)
  {
LABEL_15:
    char v7 = sub_1001C1840();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6) {
    goto LABEL_15;
  }
  char v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1000E0570()
{
  sub_1001C0CB0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000E06A8()
{
  sub_1001C0CB0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000E0798()
{
  sub_1001C0CB0();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000E08B4()
{
  return sub_1001C1990();
}

Swift::Int sub_1000E09BC()
{
  return sub_1001C1990();
}

uint64_t sub_1000E0B04()
{
  v1[28] = v0;
  v1[29] = *v0;
  v1[30] = *v0;
  uint64_t v2 = sub_1001BEE30();
  v1[31] = v2;
  v1[32] = *(void *)(v2 - 8);
  v1[33] = swift_task_alloc();
  uint64_t v3 = sub_100003918(&qword_10020D178);
  v1[34] = v3;
  v1[35] = *(void *)(v3 - 8);
  v1[36] = swift_task_alloc();
  uint64_t v4 = sub_100003918(&qword_10020D180);
  v1[37] = v4;
  v1[38] = *(void *)(v4 - 8);
  v1[39] = swift_task_alloc();
  return _swift_task_switch(sub_1000E0CD4, v0, 0);
}

uint64_t sub_1000E0CD4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 320) = v1;
  void *v1 = v0;
  v1[1] = sub_1000E0D7C;
  return sub_100036840();
}

uint64_t sub_1000E0D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  uint64_t v5 = (void *)*v3;
  v5[41] = a1;
  v5[42] = a2;
  v5[43] = v2;
  swift_task_dealloc();
  uint64_t v6 = v4[28];
  if (v2) {
    char v7 = sub_1000E1938;
  }
  else {
    char v7 = sub_1000E0EB4;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_1000E0EB4()
{
  uint64_t v1 = *(void *)(v0 + 328);
  unint64_t v2 = *(void *)(v0 + 336);
  *(void *)(v0 + 352) = swift_getWitnessTable();
  sub_100007B14(v1, v2);
  *(void *)(v0 + 360) = 0;
  *(void *)(v0 + 368) = &_swiftEmptyArrayStorage;
  uint64_t v3 = *(void *)(v0 + 328);
  unint64_t v4 = *(void *)(v0 + 336);
  uint64_t v6 = *(void *)(v0 + 280);
  uint64_t v5 = *(void *)(v0 + 288);
  uint64_t v7 = *(void *)(v0 + 272);
  uint64_t v8 = *(void *)(v0 + 240);
  *(unsigned char *)(v0 + 432) = 0;
  *(void *)(v0 + 376) = *(void *)(v8 + 80);
  *(void *)(v0 + 384) = *(void *)(v8 + 88);
  unint64_t v9 = sub_10005550C((uint64_t)&_swiftEmptyArrayStorage);
  *(void *)(v0 + 136) = 0;
  *(void *)(v0 + 144) = 0;
  *(void *)(v0 + 152) = v9;
  *(void *)(v0 + 160) = v3;
  *(void *)(v0 + 168) = v4;
  sub_100007B14(v3, v4);
  sub_1000EEE40();
  sub_1001C1090();
  sub_1001BEEC0();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  *(unsigned char *)(v0 + 433) = 0;
  *(void *)(v0 + 392) = &_swiftEmptyArrayStorage;
  uint64_t v10 = sub_100016710(&qword_10020D190, &qword_10020D180);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 400) = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_1000E1094;
  uint64_t v12 = *(void *)(v0 + 296);
  return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 176, v12, v10);
}

uint64_t sub_1000E1094()
{
  *(void *)(*(void *)v1 + 408) = v0;
  swift_task_dealloc();
  swift_getObjectType();
  uint64_t v3 = sub_1001C0EA0();
  if (v0) {
    unint64_t v4 = sub_1000E18B4;
  }
  else {
    unint64_t v4 = sub_1000E11F0;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_1000E11F0()
{
  uint64_t v1 = *(void *)(v0 + 224);
  *(_OWORD *)(v0 + 416) = *(_OWORD *)(v0 + 176);
  return _swift_task_switch(sub_1000E1214, v1, 0);
}

uint64_t sub_1000E1214()
{
  uint64_t v1 = *(void *)(v0 + 424);
  if (v1)
  {
    *(void *)(v0 + 192) = *(void *)(v0 + 416);
    uint64_t v3 = *(void *)(v0 + 256);
    uint64_t v2 = *(void *)(v0 + 264);
    uint64_t v4 = *(void *)(v0 + 248);
    *(void *)(v0 + 200) = v1;
    sub_1001BEE20();
    sub_10001A364();
    uint64_t v5 = (long long *)sub_1001C1340();
    uint64_t v7 = v6;
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    swift_bridgeObjectRelease();
    BOOL v8 = v5 == (long long *)0x6863746566657270 && v7 == (char *)0xE800000000000000;
    if (v8 || (sub_1001C1840() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      int v24 = 0;
LABEL_36:
      uint64_t v36 = *(void *)(v0 + 392);
      if (*(unsigned char *)(v0 + 433) == 1 && *(void *)(v36 + 16))
      {
        type metadata accessor for NodeDistributionAnalyzer.NodeDistribution();
        sub_1000E1EBC(v36);
      }
      swift_bridgeObjectRelease();
      uint64_t v37 = 0x6D726177657270;
      if (v24 != 1) {
        uint64_t v37 = 0x74736575716572;
      }
      if (v24) {
        uint64_t v38 = v37;
      }
      else {
        uint64_t v38 = 0x6863746566657270;
      }
      if (v24) {
        unint64_t v39 = 0xE700000000000000;
      }
      else {
        unint64_t v39 = 0xE800000000000000;
      }
      if (*(unsigned char *)(v0 + 432))
      {
        unint64_t v40 = 0xE700000000000000;
        if (*(unsigned char *)(v0 + 432) == 1)
        {
          if (v38 != 0x6D726177657270) {
            goto LABEL_56;
          }
        }
        else if (v38 != 0x74736575716572)
        {
          goto LABEL_56;
        }
      }
      else
      {
        unint64_t v40 = 0xE800000000000000;
        if (v38 != 0x6863746566657270) {
          goto LABEL_56;
        }
      }
      if (v39 == v40)
      {
        char v33 = 1;
LABEL_57:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_58;
      }
LABEL_56:
      char v33 = sub_1001C1840();
      goto LABEL_57;
    }
    BOOL v34 = v5 == (long long *)0x6D726177657270 && v7 == (char *)0xE700000000000000;
    if (v34 || (sub_1001C1840() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      int v24 = 1;
      goto LABEL_36;
    }
    BOOL v35 = v5 == (long long *)0x74736575716572 && v7 == (char *)0xE700000000000000;
    if (v35 || (sub_1001C1840() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      int v24 = 2;
      goto LABEL_36;
    }
    if (*(unsigned char *)(v0 + 433) != 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v19 = *(char **)(v0 + 392);
      goto LABEL_59;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *(char **)(v0 + 392);
    if (isUniquelyReferenced_nonNull_native)
    {
LABEL_64:
      unint64_t v46 = *((void *)v19 + 2);
      unint64_t v45 = *((void *)v19 + 3);
      if (v46 >= v45 >> 1) {
        uint64_t v19 = sub_1000E3F44((char *)(v45 > 1), v46 + 1, 1, v19);
      }
      *((void *)v19 + 2) = v46 + 1;
      unint64_t v47 = &v19[16 * v46];
      *((void *)v47 + 4) = v5;
      *((void *)v47 + 5) = v7;
      goto LABEL_59;
    }
LABEL_69:
    uint64_t v19 = sub_1000E3F44(0, *((void *)v19 + 2) + 1, 1, v19);
    goto LABEL_64;
  }
  uint64_t v5 = (long long *)(v0 + 96);
  int v9 = *(unsigned __int8 *)(v0 + 433);
  (*(void (**)(void, void))(*(void *)(v0 + 304) + 8))(*(void *)(v0 + 312), *(void *)(v0 + 296));
  uint64_t v10 = *(void *)(v0 + 392);
  if (v9 == 1 && *(void *)(v10 + 16))
  {
    type metadata accessor for NodeDistributionAnalyzer.NodeDistribution();
    sub_1000E1EBC(v10);
  }
  swift_bridgeObjectRelease();
  sub_1000E2950(*(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(unsigned __int8 *)(v0 + 432), (unint64_t *)(v0 + 96));
  swift_bridgeObjectRelease();
  sub_1000EEE94(v0 + 96, v0 + 56);
  uint64_t v7 = *(char **)(v0 + 368);
  if (*(void *)(v0 + 64))
  {
    uint64_t v5 = (long long *)(v0 + 16);
    long long v11 = *(_OWORD *)(v0 + 72);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 56);
    *(_OWORD *)(v0 + 32) = v11;
    *(void *)(v0 + 48) = *(void *)(v0 + 88);
    char v12 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v7 = *(char **)(v0 + 368);
    if ((v12 & 1) == 0) {
      uint64_t v7 = sub_1000E4164(0, *((void *)v7 + 2) + 1, 1, *(char **)(v0 + 368));
    }
    unint64_t v14 = *((void *)v7 + 2);
    unint64_t v13 = *((void *)v7 + 3);
    if (v14 >= v13 >> 1) {
      uint64_t v7 = sub_1000E4164((char *)(v13 > 1), v14 + 1, 1, v7);
    }
    *((void *)v7 + 2) = v14 + 1;
    uint64_t v15 = &v7[40 * v14];
    long long v16 = *v5;
    long long v17 = *(_OWORD *)(v0 + 32);
    *((void *)v15 + 8) = *(void *)(v0 + 48);
    *((_OWORD *)v15 + 2) = v16;
    *((_OWORD *)v15 + 3) = v17;
  }
  uint64_t v18 = *(void *)(v0 + 360);
  sub_10000792C(*(void *)(v0 + 328), *(void *)(v0 + 336));
  if (v18 != 2)
  {
    unint64_t v25 = *(void *)(v0 + 360) + 1;
    *(void *)(v0 + 360) = v25;
    *(void *)(v0 + 368) = v7;
    if (v25 < 3)
    {
      uint64_t v27 = *(void *)(v0 + 328);
      unint64_t v26 = *(void *)(v0 + 336);
      uint64_t v29 = *(void *)(v0 + 280);
      uint64_t v28 = *(void *)(v0 + 288);
      uint64_t v30 = *(void *)(v0 + 272);
      uint64_t v31 = *(void *)(v0 + 240);
      *(unsigned char *)(v0 + 432) = *((unsigned char *)&off_1001FBA80 + v25 + 32);
      *(void *)(v0 + 376) = *(void *)(v31 + 80);
      *(void *)(v0 + 384) = *(void *)(v31 + 88);
      unint64_t v32 = sub_10005550C((uint64_t)&_swiftEmptyArrayStorage);
      *(void *)(v0 + 136) = 0;
      *(void *)(v0 + 144) = 0;
      *(void *)(v0 + 152) = v32;
      *(void *)(v0 + 160) = v27;
      *(void *)(v0 + 168) = v26;
      sub_100007B14(v27, v26);
      sub_1000EEE40();
      sub_1001C1090();
      sub_1001BEEC0();
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
      char v33 = 0;
LABEL_58:
      *(unsigned char *)(v0 + 433) = v33 & 1;
      uint64_t v19 = (char *)&_swiftEmptyArrayStorage;
LABEL_59:
      *(void *)(v0 + 392) = v19;
      uint64_t v41 = sub_100016710(&qword_10020D190, &qword_10020D180);
      uint64_t v42 = (void *)swift_task_alloc();
      *(void *)(v0 + 400) = v42;
      *uint64_t v42 = v0;
      v42[1] = sub_1000E1094;
      uint64_t v43 = *(void *)(v0 + 296);
      return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 176, v43, v41);
    }
    __break(1u);
    goto LABEL_69;
  }
  uint64_t v21 = *(void *)(v0 + 328);
  unint64_t v20 = *(void *)(v0 + 336);
  sub_10000792C(v21, v20);
  sub_10000792C(v21, v20);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  Swift::String v22 = *(uint64_t (**)(char *))(v0 + 8);
  return v22(v7);
}

uint64_t sub_1000E18B4()
{
  *(void *)(v0 + 216) = *(void *)(v0 + 408);
  sub_100003918(&qword_100208C98);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t sub_1000E1938()
{
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C11F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 208) = v5;
    sub_1001C1310();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Failed to read from temp file: %@", v3, 0xCu);
    sub_100003918(&qword_100207DA8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void *))(v0 + 8);
  return v6(&_swiftEmptyArrayStorage);
}

_UNKNOWN **static NodeReceivingSource.allCases.getter()
{
  return &off_1001FBD40;
}

uint64_t NodeReceivingSource.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x6863746566657270;
  }
  if (a1 == 1) {
    return 0x6D726177657270;
  }
  return 0x74736575716572;
}

uint64_t sub_1000E1B8C(char *a1, unsigned __int8 *a2)
{
  return sub_1000E0454(*a1, *a2);
}

Swift::Int sub_1000E1B98()
{
  return sub_1001C1990();
}

uint64_t sub_1000E1C3C()
{
  sub_1001C0CB0();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000E1CCC()
{
  return sub_1001C1990();
}

uint64_t sub_1000E1D6C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = _s20privatecloudcomputed19NodeReceivingSourceO8rawValueACSgSS_tcfC_0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_1000E1D9C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = 0x6D726177657270;
  if (v2 != 1) {
    uint64_t v4 = 0x74736575716572;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 0x6863746566657270;
  }
  if (!v5) {
    unint64_t v3 = 0xE700000000000000;
  }
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_1000E1DFC()
{
  return sub_1001C0DC0();
}

uint64_t sub_1000E1E5C()
{
  return sub_1001C0D80();
}

void sub_1000E1EAC(void *a1@<X8>)
{
  *a1 = &off_1001FBD68;
}

uint64_t sub_1000E1EBC(uint64_t result)
{
  if (__OFADD__(*v1, 1))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    uint64_t result = sub_1001C18C0();
    __break(1u);
    return result;
  }
  int v2 = v1;
  ++*v1;
  uint64_t v3 = *(void *)(result + 16);
  uint64_t v4 = v1[1];
  BOOL v5 = __OFADD__(v4, v3);
  uint64_t v6 = v4 + v3;
  if (v5) {
    goto LABEL_27;
  }
  v1[1] = v6;
  if (v3)
  {
    uint64_t v7 = 0;
    uint64_t v8 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    do
    {
      uint64_t v10 = *(v8 - 1);
      uint64_t v9 = *v8;
      swift_bridgeObjectRetain();
      sub_1000EEF14((uint64_t)v7);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v12 = v2[2];
      v2[2] = 0x8000000000000000;
      unint64_t v14 = sub_100169E3C(v10, v9);
      uint64_t v15 = *(void *)(v12 + 16);
      BOOL v16 = (v13 & 1) == 0;
      uint64_t v17 = v15 + v16;
      if (__OFADD__(v15, v16))
      {
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
      char v18 = v13;
      if (*(void *)(v12 + 24) >= v17)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1000ED558();
        }
      }
      else
      {
        sub_1000E8C9C(v17, isUniquelyReferenced_nonNull_native);
        unint64_t v19 = sub_100169E3C(v10, v9);
        if ((v18 & 1) != (v20 & 1)) {
          goto LABEL_28;
        }
        unint64_t v14 = v19;
      }
      v2[2] = v12;
      swift_bridgeObjectRelease();
      uint64_t v21 = (void *)v2[2];
      if ((v18 & 1) == 0)
      {
        v21[(v14 >> 6) + 8] |= 1 << v14;
        Swift::String v22 = (uint64_t *)(v21[6] + 16 * v14);
        *Swift::String v22 = v10;
        v22[1] = v9;
        *(void *)(v21[7] + 8 * v14) = 0;
        uint64_t v23 = v21[2];
        uint64_t v24 = v23 + 1;
        BOOL v25 = __OFADD__(v23, 1);
        swift_bridgeObjectRetain();
        if (v25) {
          goto LABEL_25;
        }
        v21[2] = v24;
      }
      swift_bridgeObjectRetain();
      uint64_t v26 = v21[7];
      swift_bridgeObjectRelease();
      uint64_t v27 = *(void *)(v26 + 8 * v14);
      BOOL v5 = __OFADD__(v27, 1);
      uint64_t v28 = v27 + 1;
      if (v5) {
        goto LABEL_24;
      }
      v8 += 2;
      *(void *)(v26 + 8 * v14) = v28;
      swift_bridgeObjectRelease();
      uint64_t v7 = sub_1000E20F8;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1000E20F8(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1000E2100(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x756F436863746162 && a2 == 0xEA0000000000746ELL;
  if (v2 || (sub_1001C1840() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x756F436C61746F74 && a2 == 0xEA0000000000746ELL || (sub_1001C1840() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001001C5590)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1001C1840();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1000E226C(char a1)
{
  if (!a1) {
    return 0x756F436863746162;
  }
  if (a1 == 1) {
    return 0x756F436C61746F74;
  }
  return 0xD000000000000014;
}

uint64_t sub_1000E22C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v13[1] = a3;
  v13[0] = a4;
  type metadata accessor for NodeDistributionAnalyzer.NodeDistribution.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_1001C1750();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)v13 - v8;
  sub_10000D934(a1, a1[3]);
  sub_1001C19C0();
  char v16 = 0;
  uint64_t v10 = v13[2];
  sub_1001C1720();
  if (!v10)
  {
    uint64_t v11 = v13[0];
    char v15 = 1;
    sub_1001C1720();
    v13[3] = v11;
    char v14 = 2;
    sub_100003918(&qword_10020D290);
    sub_1000EF4BC(qword_10020D2A0);
    sub_1001C1740();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1000E24D4(void *a1)
{
  type metadata accessor for NodeDistributionAnalyzer.NodeDistribution.CodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v11 = sub_1001C16A0();
  uint64_t v4 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v5);
  uint64_t v7 = (char *)&v11 - v6;
  sub_10005550C((uint64_t)_swiftEmptyArrayStorage);
  sub_10000D934(a1, a1[3]);
  sub_1001C19B0();
  if (v1)
  {
    sub_100003E90((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = v4;
    char v14 = 0;
    uint64_t v9 = v11;
    uint64_t WitnessTable = sub_1001C1670();
    char v13 = 1;
    sub_1001C1670();
    sub_100003918(&qword_10020D290);
    char v12 = 2;
    sub_1000EF4BC(&qword_10020D298);
    sub_1001C1690();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v9);
    sub_100003E90((uint64_t)a1);
  }
  return WitnessTable;
}

BOOL sub_1000E276C(char *a1, char *a2)
{
  return sub_10000A9EC(*a1, *a2);
}

Swift::Int sub_1000E2780()
{
  return sub_10000AA24(*v0);
}

void sub_1000E278C(uint64_t a1)
{
  sub_10000A9FC(a1, *v1);
}

Swift::Int sub_1000E2798()
{
  sub_1001C1950();
  sub_10000A9FC((uint64_t)v2, *v0);
  return sub_1001C1990();
}

uint64_t sub_1000E27E0()
{
  return sub_1000E226C(*v0);
}

uint64_t sub_1000E27EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000E2100(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000E281C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000EEF90();
  *a1 = result;
  return result;
}

uint64_t sub_1000E2848(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_1000E289C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t sub_1000E28F0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1000E24D4(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1000E2928(void *a1)
{
  return sub_1000E22C8(a1, *v1, v1[1], v1[2]);
}

void sub_1000E2950(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, unint64_t *a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v140 = *(void *)v6;
  uint64_t v12 = v140;
  uint64_t v13 = sub_1001C0C30();
  __chkstk_darwin(v13 - 8, v14);
  char v16 = (char *)v131 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1001BF340();
  uint64_t v142 = *(uint64_t **)(v17 - 8);
  __chkstk_darwin(v17, v18);
  uint64_t v141 = (char *)v131 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1001BF2C0();
  uint64_t v144 = *(uint64_t (**)(uint64_t, int))(v20 - 8);
  uint64_t v145 = v20;
  __chkstk_darwin(v20, v21);
  uint64_t v143 = (char *)v131 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = sub_1001BF450();
  uint64_t v24 = __chkstk_darwin(v147, v23);
  uint64_t v26 = __chkstk_darwin(v24, v25);
  __chkstk_darwin(v26, v27);
  unint64_t v32 = (void *)((char *)v131 - v31);
  uint64_t v33 = v12;
  uint64_t v34 = a1;
  BOOL v35 = &v6[*(void *)(v33 + 136)];
  if (a2 < 1 || v34 < 1)
  {
    uint64_t v43 = sub_1001C0330();
    os_log_type_t v44 = sub_1001C1200();
    if (os_log_type_enabled(v43, v44))
    {
      unint64_t v45 = (uint8_t *)swift_slowAlloc();
      v151[0] = swift_slowAlloc();
      *(_DWORD *)unint64_t v45 = 136315138;
      if ((_BYTE)a4)
      {
        if (a4 == 1) {
          uint64_t v46 = 0x6D726177657270;
        }
        else {
          uint64_t v46 = 0x74736575716572;
        }
        unint64_t v47 = 0xE700000000000000;
      }
      else
      {
        uint64_t v46 = 0x6863746566657270;
        unint64_t v47 = 0xE800000000000000;
      }
      uint64_t v150 = sub_1000DF238(v46, v47, v151);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "Skip generating empty node distribution reports for %s", v45, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    unint64_t v130 = 0;
    unint64_t v129 = 0;
    uint64_t v120 = 0;
    goto LABEL_61;
  }
  uint64_t v134 = v17;
  unint64_t v133 = v30;
  int v136 = a4;
  uint64_t v149 = v29;
  uint64_t v146 = v28;
  swift_bridgeObjectRetain_n();
  uint64_t v36 = sub_1001C0330();
  os_log_type_t v37 = sub_1001C1200();
  BOOL v38 = os_log_type_enabled(v36, v37);
  uint64_t v135 = a5;
  v131[0] = v16;
  uint64_t v137 = a2;
  v131[1] = v35;
  if (v38)
  {
    uint64_t v39 = swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    v151[0] = v40;
    *(_DWORD *)uint64_t v39 = 136315650;
    uint64_t v148 = (void (*)(void))v34;
    uint64_t v139 = (void (*)(uint64_t, uint64_t *, uint64_t))v40;
    if ((_BYTE)v136)
    {
      if (v136 == 1) {
        uint64_t v41 = 0x6D726177657270;
      }
      else {
        uint64_t v41 = 0x74736575716572;
      }
      unint64_t v42 = 0xE700000000000000;
    }
    else
    {
      unint64_t v42 = 0xE800000000000000;
      uint64_t v41 = 0x6863746566657270;
    }
    uint64_t v150 = sub_1000DF238(v41, v42, v151);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    *(_WORD *)(v39 + 12) = 2048;
    swift_bridgeObjectRelease();
    unint64_t v49 = (void (*)(void, void, void))v148;
    uint64_t v150 = (uint64_t)v148;
    sub_1001C1310();
    swift_bridgeObjectRelease();
    *(_WORD *)(v39 + 22) = 2048;
    swift_bridgeObjectRelease();
    uint64_t v150 = v137;
    sub_1001C1310();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "Generating node distribution reports for %s with %ld batches and %ld total nodes", (uint8_t *)v39, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v48 = (uint64_t)v49;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v48 = v34;
  }
  uint64_t v50 = sub_1001C0E40();
  *(void *)(v50 + 16) = 10;
  *(_OWORD *)(v50 + 32) = 0u;
  uint64_t v51 = v50 + 32;
  *(_OWORD *)(v50 + 48) = 0u;
  *(_OWORD *)(v50 + 64) = 0u;
  *(_OWORD *)(v50 + 80) = 0u;
  *(_OWORD *)(v50 + 96) = 0u;
  uint64_t v52 = a3 + 64;
  uint64_t v53 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v54 = -1;
  if (v53 < 64) {
    uint64_t v54 = ~(-1 << v53);
  }
  unint64_t v55 = v54 & *(void *)(a3 + 64);
  int64_t v56 = (unint64_t)(v53 + 63) >> 6;
  double v57 = (double)v48;
  swift_bridgeObjectRetain();
  int64_t v58 = 0;
  uint64_t v59 = v147;
  if (!v55) {
    goto LABEL_22;
  }
LABEL_21:
  unint64_t v60 = __clz(__rbit64(v55));
  v55 &= v55 - 1;
  for (unint64_t i = v60 | (v58 << 6); ; unint64_t i = __clz(__rbit64(v63)) + (v58 << 6))
  {
    double v65 = (double)*(uint64_t *)(*(void *)(a3 + 56) + 8 * i) / v57 / 0.1;
    if ((~*(void *)&v65 & 0x7FF0000000000000) == 0)
    {
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
      goto LABEL_70;
    }
    if (v65 <= -9.22337204e18) {
      goto LABEL_63;
    }
    if (v65 >= 9.22337204e18) {
      goto LABEL_64;
    }
    unint64_t v66 = (uint64_t)v65;
    if ((uint64_t)v65 >= 9) {
      unint64_t v66 = 9;
    }
    if ((v66 & 0x8000000000000000) != 0) {
      goto LABEL_65;
    }
    if (v66 >= *(void *)(v50 + 16)) {
      goto LABEL_66;
    }
    uint64_t v67 = *(void *)(v51 + 8 * v66);
    BOOL v68 = __OFADD__(v67, 1);
    uint64_t v69 = v67 + 1;
    if (v68) {
      goto LABEL_67;
    }
    *(void *)(v51 + 8 * v66) = v69;
    if (v55) {
      goto LABEL_21;
    }
LABEL_22:
    int64_t v62 = v58 + 1;
    if (__OFADD__(v58, 1)) {
      goto LABEL_68;
    }
    if (v62 >= v56) {
      break;
    }
    unint64_t v63 = *(void *)(v52 + 8 * v62);
    ++v58;
    if (v63) {
      goto LABEL_35;
    }
    int64_t v58 = v62 + 1;
    if (v62 + 1 >= v56) {
      break;
    }
    unint64_t v63 = *(void *)(v52 + 8 * v58);
    if (v63) {
      goto LABEL_35;
    }
    int64_t v58 = v62 + 2;
    if (v62 + 2 >= v56) {
      break;
    }
    unint64_t v63 = *(void *)(v52 + 8 * v58);
    if (v63) {
      goto LABEL_35;
    }
    int64_t v64 = v62 + 3;
    if (v64 >= v56) {
      break;
    }
    unint64_t v63 = *(void *)(v52 + 8 * v64);
    if (!v63)
    {
      while (1)
      {
        int64_t v58 = v64 + 1;
        if (__OFADD__(v64, 1)) {
          goto LABEL_69;
        }
        if (v58 >= v56) {
          goto LABEL_46;
        }
        unint64_t v63 = *(void *)(v52 + 8 * v58);
        ++v64;
        if (v63) {
          goto LABEL_35;
        }
      }
    }
    int64_t v58 = v64;
LABEL_35:
    unint64_t v55 = (v63 - 1) & v63;
  }
LABEL_46:
  swift_release();
  unint64_t v70 = sub_100055620((uint64_t)&_swiftEmptyArrayStorage);
  uint64_t v71 = *((void *)v6 + 17);
  *unint64_t v32 = *((void *)v6 + 16);
  v32[1] = v71;
  Swift::String v72 = v32;
  uint64_t v73 = enum case for EventValue.string(_:);
  uint64_t v74 = v149;
  uint64_t v75 = v149 + 104;
  uint64_t v148 = *(void (**)(void))(v149 + 104);
  ((void (*)(uint64_t *, void, uint64_t))v148)(v72, enum case for EventValue.string(_:), v59);
  BOOL v76 = *(void (**)(uint64_t, uint64_t *, uint64_t))(v74 + 32);
  uint64_t v77 = v146;
  uint64_t v78 = v59;
  uint64_t v79 = v72;
  Swift::String v80 = v72;
  uint64_t v81 = v78;
  uint64_t v149 = v74 + 32;
  uint64_t v139 = v76;
  ((void (*)(uint64_t, uint64_t *))v76)(v146, v80);
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v151[0] = v70;
  sub_1000EAF5C(v77, 1, isUniquelyReferenced_nonNull_native, (uint64_t (*)(uint64_t))sub_10016A380, &qword_10020B740, (void (*)(void))sub_1000E8FA8);
  uint64_t v83 = v151[0];
  swift_bridgeObjectRelease();
  char v84 = v143;
  sub_1001BF2B0();
  sub_1001BF280();
  double v86 = v85;
  (*((void (**)(char *, uint64_t))v144 + 1))(v84, v145);
  if ((~*(void *)&v86 & 0x7FF0000000000000) == 0)
  {
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (v86 <= -9.22337204e18)
  {
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if (v86 >= 9.22337204e18)
  {
LABEL_72:
    __break(1u);
    return;
  }
  os_log_type_t v87 = v79;
  *uint64_t v79 = (uint64_t)v86;
  Swift::String v88 = v79;
  unsigned int v132 = enum case for EventValue.int(_:);
  uint64_t v89 = v81;
  v148(v88);
  uint64_t v145 = v75;
  uint64_t v90 = v6;
  uint64_t v91 = v146;
  uint64_t v92 = v81;
  uint64_t v93 = v73;
  unsigned int v138 = v73;
  v139(v146, v87, v92);
  os_log_type_t v94 = v87;
  char v95 = swift_isUniquelyReferenced_nonNull_native();
  v151[0] = v83;
  uint64_t v144 = sub_1000E8FA8;
  sub_1000EAF5C(v91, 0, v95, (uint64_t (*)(uint64_t))sub_10016A380, &qword_10020B740, (void (*)(void))sub_1000E8FA8);
  uint64_t v96 = v151[0];
  swift_bridgeObjectRelease();
  uint64_t v143 = v90;
  *os_log_type_t v87 = (*(uint64_t (**)(void))(*(void *)(v140 + 88) + 96))(*(void *)(v140 + 80));
  v87[1] = v97;
  ((void (*)(uint64_t *, uint64_t, uint64_t))v148)(v87, v93, v89);
  uint64_t v98 = v87;
  uint64_t v99 = v139;
  v139(v91, v98, v89);
  char v100 = swift_isUniquelyReferenced_nonNull_native();
  v151[0] = v96;
  sub_1000EAF5C(v91, 2, v100, (uint64_t (*)(uint64_t))sub_10016A380, &qword_10020B740, (void (*)(void))v144);
  uint64_t v101 = v151[0];
  swift_bridgeObjectRelease();
  uint64_t v102 = v141;
  sub_1001BF330();
  uint64_t v103 = sub_1001BF320();
  uint64_t v105 = v104;
  ((void (*)(char *, uint64_t))v142[1])(v102, v134);
  *os_log_type_t v94 = v103;
  v94[1] = v105;
  ((void (*)(uint64_t *, void, uint64_t))v148)(v94, v138, v89);
  uint64_t v142 = v94;
  v99(v91, v94, v89);
  char v106 = swift_isUniquelyReferenced_nonNull_native();
  v151[0] = v101;
  sub_1000EAF5C(v91, 3, v106, (uint64_t (*)(uint64_t))sub_10016A380, &qword_10020B740, (void (*)(void))v144);
  uint64_t v107 = v151[0];
  swift_bridgeObjectRelease();
  if ((_BYTE)v136)
  {
    uint64_t v108 = v133;
    unint64_t v109 = 0xE700000000000000;
    if (v136 == 1) {
      uint64_t v111 = 0x6D726177657270;
    }
    else {
      uint64_t v111 = 0x74736575716572;
    }
    uint64_t v110 = v147;
  }
  else
  {
    unint64_t v109 = 0xE800000000000000;
    uint64_t v110 = v147;
    uint64_t v108 = v133;
    uint64_t v111 = 0x6863746566657270;
  }
  uint64_t v112 = v138;
  uint64_t v113 = (void (*)(uint64_t *, uint64_t, uint64_t))v148;
  uint64_t v114 = v142;
  uint64_t *v108 = v111;
  v108[1] = v109;
  v113(v108, v112, v110);
  v99((uint64_t)v114, v108, v110);
  char v115 = swift_isUniquelyReferenced_nonNull_native();
  v151[0] = v107;
  sub_1000EAF5C((uint64_t)v114, 5, v115, (uint64_t (*)(uint64_t))sub_10016A380, &qword_10020B740, (void (*)(void))sub_1000E8FA8);
  uint64_t v116 = v151[0];
  swift_bridgeObjectRelease();
  sub_1000EEA58(v137);
  *uint64_t v114 = v117;
  v113(v114, v132, v110);
  uint64_t v118 = v146;
  v99(v146, v114, v110);
  char v119 = swift_isUniquelyReferenced_nonNull_native();
  v151[0] = v116;
  sub_1000EAF5C(v118, 6, v119, (uint64_t (*)(uint64_t))sub_10016A380, &qword_10020B740, (void (*)(void))sub_1000E8FA8);
  uint64_t v120 = v151[0];
  swift_bridgeObjectRelease();
  v151[0] = v50;
  sub_100003918(&qword_10020D1A8);
  sub_1000EEF24();
  uint64_t v121 = sub_1001BEDF0();
  unint64_t v123 = v122;
  swift_bridgeObjectRelease();
  sub_1001C0C20();
  uint64_t v124 = sub_1001C0C10();
  if (v125)
  {
    *uint64_t v114 = v124;
    v114[1] = v125;
    uint64_t v126 = v147;
    ((void (*)(uint64_t *, void, uint64_t))v148)(v114, v138, v147);
    uint64_t v127 = v146;
    v139(v146, v114, v126);
    char v128 = swift_isUniquelyReferenced_nonNull_native();
    v151[0] = v120;
    sub_1000EAF5C(v127, 4, v128, (uint64_t (*)(uint64_t))sub_10016A380, &qword_10020B740, (void (*)(void))sub_1000E8FA8);
    uint64_t v120 = v151[0];
    swift_bridgeObjectRelease();
  }
  sub_10000792C(v121, v123);
  unint64_t v129 = 0x80000001001C5510;
  unint64_t v130 = 0xD000000000000015;
  a5 = v135;
LABEL_61:
  *a5 = v130;
  a5[1] = v129;
  a5[3] = 0;
  a5[4] = 0;
  a5[2] = v120;
}

uint64_t *sub_1000E3928()
{
  uint64_t v1 = *v0;
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 128));
  uint64_t v2 = (uint64_t)v0 + *(void *)(*v0 + 136);
  uint64_t v3 = sub_1001C0340();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_1000E3A24()
{
  sub_1000E3928();
  return _swift_defaultActor_deallocate(v0);
}

void *sub_1000E3A50(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = a4[2];
    if (v7 <= v8) {
      int64_t v9 = a4[2];
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      sub_100003918(qword_10020D208);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * v11 - 64;
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= (void *)((char *)a4 + v8 + 32)) {
          memmove(v12, a4 + 4, v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1000EE520(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1000E3B4C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100003918(&qword_10020D1C0);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[32 * v8 + 32]) {
          memmove(v13, a4 + 32, 32 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_1000EE608(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000E3C5C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000E3CC4(a1, a2, a3, a4, &qword_10020D1D8, type metadata accessor for RateLimitConfiguration, type metadata accessor for RateLimitConfiguration);
}

uint64_t sub_1000E3C90(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000E3CC4(a1, a2, a3, a4, &qword_10020D1F0, (uint64_t (*)(void))&type metadata accessor for PrivateCloudComputeRequestLog.Attestation, (uint64_t (*)(void))&type metadata accessor for PrivateCloudComputeRequestLog.Attestation);
}

uint64_t sub_1000E3CC4(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100003918(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_1001C1570();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1000EEF98(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

char *sub_1000E3F44(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100003918(&qword_10020C550);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[16 * v8 + 32]) {
          memmove(v13, a4 + 32, 16 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_1000EE6FC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1000E4054(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100003918(&qword_100208CC0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000EE7F0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1000E4164(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100003918(&qword_10020D1A0);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[40 * v8 + 32]) {
          memmove(v12, a4 + 32, 40 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v12 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1000EEB38(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000E4288(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000E3CC4(a1, a2, a3, a4, &qword_10020D1E0, (uint64_t (*)(void))&type metadata accessor for TC2TrustedRequestFactoryMetadata, (uint64_t (*)(void))&type metadata accessor for TC2TrustedRequestFactoryMetadata);
}

uint64_t sub_1000E42BC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000E3CC4(a1, a2, a3, a4, &qword_10020D1E8, (uint64_t (*)(void))&type metadata accessor for TC2TrustedRequestMetadata, (uint64_t (*)(void))&type metadata accessor for TC2TrustedRequestMetadata);
}

uint64_t sub_1000E42F0(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100003918(&qword_10020D1D0);
  uint64_t v10 = *(void *)(sub_100003918(qword_10020CE78) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_1001C1570();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_100003918(qword_10020CE78) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1000EE8FC(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_1000E4560(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000E3CC4(a1, a2, a3, a4, &qword_10020D1B8, (uint64_t (*)(void))&type metadata accessor for Prefetch.Response, (uint64_t (*)(void))&type metadata accessor for Prefetch.Response);
}

uint64_t sub_1000E4594(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000E3CC4(a1, a2, a3, a4, &qword_10020D1C8, (uint64_t (*)(void))&type metadata accessor for Prefetch.Response.Node, (uint64_t (*)(void))&type metadata accessor for Prefetch.Response.Node);
}

uint64_t sub_1000E45C8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000E3CC4(a1, a2, a3, a4, &qword_10020CD90, (uint64_t (*)(void))&type metadata accessor for Schema.PropertyMetadata, (uint64_t (*)(void))&type metadata accessor for Schema.PropertyMetadata);
}

uint64_t sub_1000E45FC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for RateLimitTimingDetails(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8, v7);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_100003918(&qword_10020B788);
  uint64_t v11 = sub_1001C15B0();
  uint64_t v12 = v11;
  if (*(void *)(v10 + 16))
  {
    os_log_type_t v44 = v2;
    uint64_t v13 = 1 << *(unsigned char *)(v10 + 32);
    uint64_t v14 = *(void *)(v10 + 64);
    uint64_t v46 = (void *)(v10 + 64);
    if (v13 < 64) {
      uint64_t v15 = ~(-1 << v13);
    }
    else {
      uint64_t v15 = -1;
    }
    unint64_t v16 = v15 & v14;
    int64_t v45 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v17 = v11 + 64;
    uint64_t result = swift_retain();
    for (int64_t i = 0; ; int64_t i = v49)
    {
      if (v16)
      {
        uint64_t v50 = (v16 - 1) & v16;
        unint64_t v23 = __clz(__rbit64(v16)) | (i << 6);
      }
      else
      {
        int64_t v24 = i + 1;
        if (__OFADD__(i, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v24 >= v45) {
          goto LABEL_34;
        }
        unint64_t v25 = v46[v24];
        ++i;
        if (!v25)
        {
          int64_t i = v24 + 1;
          if (v24 + 1 >= v45) {
            goto LABEL_34;
          }
          unint64_t v25 = v46[i];
          if (!v25)
          {
            int64_t v26 = v24 + 2;
            if (v26 >= v45)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v44;
              if (a2)
              {
                uint64_t v42 = 1 << *(unsigned char *)(v10 + 32);
                if (v42 >= 64) {
                  bzero(v46, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v46 = -1 << v42;
                }
                *(void *)(v10 + 16) = 0;
              }
              break;
            }
            unint64_t v25 = v46[v26];
            if (!v25)
            {
              while (1)
              {
                int64_t i = v26 + 1;
                if (__OFADD__(v26, 1)) {
                  goto LABEL_41;
                }
                if (i >= v45) {
                  goto LABEL_34;
                }
                unint64_t v25 = v46[i];
                ++v26;
                if (v25) {
                  goto LABEL_21;
                }
              }
            }
            int64_t i = v26;
          }
        }
LABEL_21:
        uint64_t v50 = (v25 - 1) & v25;
        unint64_t v23 = __clz(__rbit64(v25)) + (i << 6);
      }
      uint64_t v27 = *(void *)(v10 + 48) + 56 * v23;
      uint64_t v28 = *(void *)v27;
      long long v29 = *(_OWORD *)(v27 + 8);
      long long v30 = *(_OWORD *)(v27 + 24);
      uint64_t v32 = *(void *)(v27 + 40);
      uint64_t v31 = *(void *)(v27 + 48);
      uint64_t v33 = *(void *)(v6 + 72);
      uint64_t v34 = *(void *)(v10 + 56) + v33 * v23;
      int64_t v49 = i;
      uint64_t v48 = v33;
      long long v51 = v29;
      long long v52 = v30;
      if (a2)
      {
        sub_1000EF284(v34, (uint64_t)v9, type metadata accessor for RateLimitTimingDetails);
      }
      else
      {
        sub_1000EF21C(v34, (uint64_t)v9, type metadata accessor for RateLimitTimingDetails);
        uint64_t v47 = v52;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      *(void *)uint64_t v53 = v28;
      *(_OWORD *)&v53[8] = v51;
      *(_OWORD *)&v53[24] = v52;
      *(void *)&v53[40] = v32;
      uint64_t v54 = v31;
      sub_1001C1950();
      sub_10002F294();
      uint64_t result = sub_1001C1990();
      uint64_t v35 = -1 << *(unsigned char *)(v12 + 32);
      unint64_t v36 = result & ~v35;
      unint64_t v37 = v36 >> 6;
      if (((-1 << v36) & ~*(void *)(v17 + 8 * (v36 >> 6))) != 0)
      {
        unint64_t v20 = __clz(__rbit64((-1 << v36) & ~*(void *)(v17 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
        unint64_t v16 = v50;
      }
      else
      {
        char v38 = 0;
        unint64_t v39 = (unint64_t)(63 - v35) >> 6;
        unint64_t v16 = v50;
        do
        {
          if (++v37 == v39 && (v38 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v40 = v37 == v39;
          if (v37 == v39) {
            unint64_t v37 = 0;
          }
          v38 |= v40;
          uint64_t v41 = *(void *)(v17 + 8 * v37);
        }
        while (v41 == -1);
        unint64_t v20 = __clz(__rbit64(~v41)) + (v37 << 6);
      }
      *(void *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      uint64_t v21 = *(void *)(v12 + 48) + 56 * v20;
      long long v22 = *(_OWORD *)&v53[16];
      *(_OWORD *)uint64_t v21 = *(_OWORD *)v53;
      *(_OWORD *)(v21 + 16) = v22;
      *(_OWORD *)(v21 + 32) = *(_OWORD *)&v53[32];
      *(void *)(v21 + 48) = v54;
      uint64_t result = sub_1000EF284((uint64_t)v9, *(void *)(v12 + 56) + v48 * v20, type metadata accessor for RateLimitTimingDetails);
      ++*(void *)(v12 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_1000E4AB4(uint64_t a1, int a2)
{
  uint64_t v4 = sub_1001BF7A0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v44 = v2;
  uint64_t v9 = *v2;
  sub_100003918(&qword_10020B778);
  int v53 = a2;
  uint64_t v10 = sub_1001C15B0();
  uint64_t v11 = v10;
  if (*(void *)(v9 + 16))
  {
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 64);
    uint64_t v46 = (void *)(v9 + 64);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    int64_t v45 = (unint64_t)(v12 + 63) >> 6;
    uint64_t v47 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    long long v52 = (void *)v10;
    uint64_t v48 = (uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32);
    uint64_t v49 = v10 + 64;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    uint64_t v50 = v5;
    uint64_t v51 = v9;
    double v57 = v8;
    while (1)
    {
      if (v15)
      {
        unint64_t v24 = __clz(__rbit64(v15));
        uint64_t v25 = (v15 - 1) & v15;
        unint64_t v26 = v24 | (v17 << 6);
      }
      else
      {
        int64_t v27 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(1u);
LABEL_33:
          __break(1u);
          return result;
        }
        uint64_t v28 = v46;
        if (v27 >= v45) {
          goto LABEL_24;
        }
        unint64_t v29 = v46[v27];
        ++v17;
        if (!v29)
        {
          int64_t v17 = v27 + 1;
          if (v27 + 1 >= v45) {
            goto LABEL_24;
          }
          unint64_t v29 = v46[v17];
          if (!v29)
          {
            int64_t v30 = v27 + 2;
            if (v30 >= v45)
            {
LABEL_24:
              swift_release();
              if (v53)
              {
                uint64_t v42 = 1 << *(unsigned char *)(v9 + 32);
                if (v42 >= 64) {
                  bzero(v28, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v28 = -1 << v42;
                }
                *(void *)(v9 + 16) = 0;
              }
              uint64_t result = swift_release();
              uint64_t v43 = v44;
              uint64_t v11 = (uint64_t)v52;
              goto LABEL_31;
            }
            unint64_t v29 = v46[v30];
            if (!v29)
            {
              while (1)
              {
                int64_t v17 = v30 + 1;
                if (__OFADD__(v30, 1)) {
                  goto LABEL_33;
                }
                if (v17 >= v45) {
                  goto LABEL_24;
                }
                unint64_t v29 = v46[v17];
                ++v30;
                if (v29) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v17 = v30;
          }
        }
LABEL_21:
        uint64_t v25 = (v29 - 1) & v29;
        unint64_t v26 = __clz(__rbit64(v29)) + (v17 << 6);
      }
      uint64_t v31 = *(void *)(v9 + 56);
      uint64_t v32 = *(void *)(v9 + 48) + 56 * v26;
      uint64_t v33 = *(void *)v32;
      uint64_t v34 = *(void *)(v32 + 8);
      uint64_t v35 = *(void *)(v32 + 16);
      uint64_t v36 = *(void *)(v32 + 24);
      uint64_t v37 = *(void *)(v32 + 32);
      long long v38 = *(_OWORD *)(v32 + 40);
      uint64_t v39 = *(void *)(v5 + 72);
      BOOL v40 = (char *)(v31 + v39 * v26);
      uint64_t v41 = *((void *)&v38 + 1);
      unint64_t v55 = v25;
      int64_t v56 = v17;
      uint64_t v54 = v39;
      long long v58 = v38;
      if (v53)
      {
        size_t v19 = v48;
        (*v48)((unint64_t)v57, v40, v4);
        uint64_t v18 = v4;
      }
      else
      {
        (*v47)(v57, (uint64_t)v40, v4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v18 = v4;
        size_t v19 = v48;
      }
      unint64_t v20 = v52;
      sub_1001C1950();
      swift_bridgeObjectRetain();
      sub_1001C0CB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1001C0CB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1001C0CB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_10018FB7C((uint64_t)v59, v41);
      swift_bridgeObjectRelease();
      sub_1001C1990();
      uint64_t v21 = v49;
      unint64_t v22 = sub_1001C13F0();
      *(void *)(v21 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      uint64_t v23 = v20[6] + 56 * v22;
      *(void *)uint64_t v23 = v33;
      *(void *)(v23 + 8) = v34;
      *(void *)(v23 + 16) = v35;
      *(void *)(v23 + 24) = v36;
      *(void *)(v23 + 32) = v37;
      *(_OWORD *)(v23 + 40) = v58;
      uint64_t result = (*v19)(v20[7] + v54 * v22, v57, v18);
      ++v20[2];
      uint64_t v5 = v50;
      uint64_t v9 = v51;
      uint64_t v4 = v18;
      unint64_t v15 = v55;
      int64_t v17 = v56;
    }
  }
  uint64_t result = swift_release();
  uint64_t v43 = v44;
LABEL_31:
  *uint64_t v43 = v11;
  return result;
}

uint64_t sub_1000E4F3C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v46 = sub_1001BF450();
  uint64_t v5 = *(void *)(v46 - 8);
  __chkstk_darwin(v46, v6);
  int64_t v45 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_100003918(&qword_10020B7C0);
  int v44 = a2;
  uint64_t v9 = sub_1001C15B0();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v42 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  BOOL v40 = v2;
  int64_t v41 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v43 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  unint64_t v15 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v16 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v18 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v41) {
      break;
    }
    uint64_t v23 = v42;
    unint64_t v24 = v42[v22];
    ++v18;
    if (!v24)
    {
      int64_t v18 = v22 + 1;
      if (v22 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v24 = v42[v18];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v44 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v42[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v18 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v18 >= v41) {
              goto LABEL_34;
            }
            unint64_t v24 = v42[v18];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v18 = v25;
      }
    }
LABEL_21:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    uint64_t v26 = *(void *)(v8 + 56);
    uint64_t v27 = v8;
    char v28 = *(unsigned char *)(*(void *)(v8 + 48) + v21);
    uint64_t v29 = v5;
    uint64_t v30 = *(void *)(v5 + 72);
    uint64_t v31 = v26 + v30 * v21;
    if (v44) {
      (*v15)(v45, v31, v46);
    }
    else {
      (*v43)(v45, v31, v46);
    }
    sub_1001C1950();
    sub_1001BBC7C(v28);
    sub_1001C0CB0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1001C1990();
    uint64_t v32 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v33 = result & ~v32;
    unint64_t v34 = v33 >> 6;
    if (((-1 << v33) & ~*(void *)(v16 + 8 * (v33 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v33) & ~*(void *)(v16 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v35 = 0;
      unint64_t v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v37 = v34 == v36;
        if (v34 == v36) {
          unint64_t v34 = 0;
        }
        v35 |= v37;
        uint64_t v38 = *(void *)(v16 + 8 * v34);
      }
      while (v38 == -1);
      unint64_t v19 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    *(unsigned char *)(*(void *)(v10 + 48) + v19) = v28;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v15)(*(void *)(v10 + 56) + v30 * v19, v45, v46);
    ++*(void *)(v10 + 16);
    uint64_t v5 = v29;
    uint64_t v8 = v27;
  }
  swift_release();
  uint64_t v3 = v40;
  uint64_t v23 = v42;
  if ((v44 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v39 = 1 << *(unsigned char *)(v8 + 32);
  if (v39 >= 64) {
    bzero(v23, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v39;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1000E5334(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100003918(&qword_10020B7B0);
  char v6 = a2;
  uint64_t v7 = sub_1001C15B0();
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    unint64_t v36 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v14 << 6);
      }
      else
      {
        int64_t v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35) {
          goto LABEL_33;
        }
        unint64_t v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          int64_t v14 = v23 + 1;
          if (v23 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v24 = v36[v14];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v6)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
                if (v34 >= 64) {
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v36 = -1 << v34;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v14 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v14 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v24 = v36[v14];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v14 = v25;
          }
        }
LABEL_30:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      uint64_t v30 = 16 * v22;
      uint64_t v31 = (uint64_t *)(*(void *)(v5 + 48) + v30);
      uint64_t v33 = *v31;
      uint64_t v32 = v31[1];
      long long v37 = *(_OWORD *)(*(void *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_100007B14(v37, *((unint64_t *)&v37 + 1));
      }
      sub_1001C1950();
      sub_1001C0CB0();
      uint64_t result = sub_1001C1990();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v17 == v27;
          if (v17 == v27) {
            unint64_t v17 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 16 * v18;
      unint64_t v20 = (void *)(*(void *)(v8 + 48) + v19);
      *unint64_t v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(void *)(v8 + 56) + v19) = v37;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v8;
  return result;
}

uint64_t sub_1000E5644(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100003918(&qword_1002087C0);
  char v42 = a2;
  uint64_t v6 = sub_1001C15B0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    unint64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    int64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1001C1950();
    sub_1001C0CB0();
    uint64_t result = sub_1001C1990();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    uint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *uint64_t v19 = v34;
    v19[1] = v33;
    unint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *unint64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  unint64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1000E596C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for ValidatedAttestation();
  uint64_t v43 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_100003918(&qword_10020B7A8);
  int v44 = a2;
  uint64_t v10 = sub_1001C15B0();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_41;
  }
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 64);
  char v42 = (void *)(v9 + 64);
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  int64_t v40 = v2;
  int64_t v41 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v16 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v18 = 0;
  while (1)
  {
    if (v15)
    {
      unint64_t v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v41) {
      break;
    }
    unint64_t v24 = v42;
    unint64_t v25 = v42[v23];
    ++v18;
    if (!v25)
    {
      int64_t v18 = v23 + 1;
      if (v23 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v25 = v42[v18];
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v44 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v25 = v42[v26];
        if (!v25)
        {
          while (1)
          {
            int64_t v18 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_43;
            }
            if (v18 >= v41) {
              goto LABEL_34;
            }
            unint64_t v25 = v42[v18];
            ++v26;
            if (v25) {
              goto LABEL_21;
            }
          }
        }
        int64_t v18 = v26;
      }
    }
LABEL_21:
    unint64_t v15 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    char v27 = (uint64_t *)(*(void *)(v9 + 48) + 16 * v22);
    uint64_t v29 = *v27;
    uint64_t v28 = v27[1];
    uint64_t v30 = *(void *)(v43 + 72);
    uint64_t v31 = *(void *)(v9 + 56) + v30 * v22;
    if (v44)
    {
      sub_1000EF284(v31, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
    }
    else
    {
      sub_1000EF21C(v31, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
      swift_bridgeObjectRetain();
    }
    sub_1001C1950();
    sub_1001C0CB0();
    uint64_t result = sub_1001C1990();
    uint64_t v32 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v33 = result & ~v32;
    unint64_t v34 = v33 >> 6;
    if (((-1 << v33) & ~*(void *)(v16 + 8 * (v33 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v33) & ~*(void *)(v16 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v35 = 0;
      unint64_t v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v37 = v34 == v36;
        if (v34 == v36) {
          unint64_t v34 = 0;
        }
        v35 |= v37;
        uint64_t v38 = *(void *)(v16 + 8 * v34);
      }
      while (v38 == -1);
      unint64_t v19 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    unint64_t v20 = (void *)(*(void *)(v11 + 48) + 16 * v19);
    *unint64_t v20 = v29;
    v20[1] = v28;
    uint64_t result = sub_1000EF284((uint64_t)v8, *(void *)(v11 + 56) + v30 * v19, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
    ++*(void *)(v11 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  unint64_t v24 = v42;
  if ((v44 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v39 = 1 << *(unsigned char *)(v9 + 32);
  if (v39 >= 64) {
    bzero(v24, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v39;
  }
  *(void *)(v9 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_1000E5D4C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for SessionLog.Element();
  uint64_t v51 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v56 = (uint64_t)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1001BF310();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  int v53 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v2;
  sub_100003918(&qword_1002087A8);
  int v52 = a2;
  uint64_t v13 = v12;
  uint64_t v14 = sub_1001C15B0();
  uint64_t v15 = v14;
  if (!*(void *)(v13 + 16)) {
    goto LABEL_41;
  }
  uint64_t v16 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v17 = *(void *)(v13 + 64);
  uint64_t v48 = (void *)(v13 + 64);
  if (v16 < 64) {
    uint64_t v18 = ~(-1 << v16);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v17;
  uint64_t v46 = v2;
  int64_t v47 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v49 = (void (**)(char *, unint64_t, uint64_t))(v9 + 16);
  uint64_t v54 = (void (**)(char *, unint64_t, uint64_t))(v9 + 32);
  uint64_t v55 = v8;
  uint64_t v20 = v14 + 64;
  uint64_t result = swift_retain();
  int64_t v22 = 0;
  uint64_t v50 = v13;
  int64_t v23 = v53;
  while (1)
  {
    if (v19)
    {
      unint64_t v25 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v26 = v25 | (v22 << 6);
      goto LABEL_22;
    }
    int64_t v27 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v27 >= v47) {
      break;
    }
    uint64_t v28 = v48;
    unint64_t v29 = v48[v27];
    ++v22;
    if (!v29)
    {
      int64_t v22 = v27 + 1;
      if (v27 + 1 >= v47) {
        goto LABEL_34;
      }
      unint64_t v29 = v48[v22];
      if (!v29)
      {
        int64_t v30 = v27 + 2;
        if (v30 >= v47)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v46;
          if ((v52 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v29 = v48[v30];
        if (!v29)
        {
          while (1)
          {
            int64_t v22 = v30 + 1;
            if (__OFADD__(v30, 1)) {
              goto LABEL_43;
            }
            if (v22 >= v47) {
              goto LABEL_34;
            }
            unint64_t v29 = v48[v22];
            ++v30;
            if (v29) {
              goto LABEL_21;
            }
          }
        }
        int64_t v22 = v30;
      }
    }
LABEL_21:
    unint64_t v19 = (v29 - 1) & v29;
    unint64_t v26 = __clz(__rbit64(v29)) + (v22 << 6);
    int64_t v23 = v53;
LABEL_22:
    uint64_t v31 = v9;
    uint64_t v32 = *(void *)(v9 + 72);
    unint64_t v33 = *(void *)(v13 + 48) + v32 * v26;
    if (v52)
    {
      (*v54)(v23, v33, v55);
      uint64_t v34 = *(void *)(v13 + 56);
      uint64_t v35 = *(void *)(v51 + 72);
      sub_1000EF284(v34 + v35 * v26, v56, (uint64_t (*)(void))type metadata accessor for SessionLog.Element);
    }
    else
    {
      (*v49)(v23, v33, v55);
      uint64_t v36 = *(void *)(v13 + 56);
      uint64_t v35 = *(void *)(v51 + 72);
      sub_1000EF21C(v36 + v35 * v26, v56, (uint64_t (*)(void))type metadata accessor for SessionLog.Element);
    }
    sub_1000EF15C();
    uint64_t result = sub_1001C0BA0();
    uint64_t v37 = -1 << *(unsigned char *)(v15 + 32);
    unint64_t v38 = result & ~v37;
    unint64_t v39 = v38 >> 6;
    if (((-1 << v38) & ~*(void *)(v20 + 8 * (v38 >> 6))) != 0)
    {
      unint64_t v24 = __clz(__rbit64((-1 << v38) & ~*(void *)(v20 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
      int64_t v23 = v53;
    }
    else
    {
      char v40 = 0;
      unint64_t v41 = (unint64_t)(63 - v37) >> 6;
      int64_t v23 = v53;
      do
      {
        if (++v39 == v41 && (v40 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v42 = v39 == v41;
        if (v39 == v41) {
          unint64_t v39 = 0;
        }
        v40 |= v42;
        uint64_t v43 = *(void *)(v20 + 8 * v39);
      }
      while (v43 == -1);
      unint64_t v24 = __clz(__rbit64(~v43)) + (v39 << 6);
    }
    *(void *)(v20 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    (*v54)((char *)(*(void *)(v15 + 48) + v32 * v24), (unint64_t)v23, v55);
    uint64_t result = sub_1000EF284(v56, *(void *)(v15 + 56) + v35 * v24, (uint64_t (*)(void))type metadata accessor for SessionLog.Element);
    ++*(void *)(v15 + 16);
    uint64_t v13 = v50;
    uint64_t v9 = v31;
  }
  swift_release();
  uint64_t v3 = v46;
  uint64_t v28 = v48;
  if ((v52 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v44 = 1 << *(unsigned char *)(v13 + 32);
  if (v44 >= 64) {
    bzero(v28, ((unint64_t)(v44 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v28 = -1 << v44;
  }
  *(void *)(v13 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v15;
  return result;
}

uint64_t sub_1000E6234(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v57 = sub_100003918(&qword_100208640);
  uint64_t v5 = *(void *)(v57 - 8);
  __chkstk_darwin(v57, v6);
  uint64_t v56 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1001BF310();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *v2;
  sub_100003918(&qword_10020B798);
  int v53 = a2;
  uint64_t v14 = sub_1001C15B0();
  uint64_t v15 = v14;
  if (!*(void *)(v13 + 16)) {
    goto LABEL_41;
  }
  uint64_t v55 = v8;
  uint64_t v16 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v17 = *(void *)(v13 + 64);
  int64_t v47 = (void *)(v13 + 64);
  if (v16 < 64) {
    uint64_t v18 = ~(-1 << v16);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v17;
  uint64_t v45 = v2;
  int64_t v46 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v48 = v5 + 16;
  uint64_t v49 = (void (**)(char *, unint64_t, uint64_t))(v9 + 16);
  uint64_t v20 = (void (**)(char *, unint64_t, uint64_t))(v9 + 32);
  uint64_t v52 = v5;
  uint64_t v54 = (uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32);
  uint64_t v21 = v14 + 64;
  uint64_t result = swift_retain();
  int64_t v23 = 0;
  uint64_t v50 = v13;
  uint64_t v51 = v9;
  while (1)
  {
    if (v19)
    {
      unint64_t v25 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v26 = v25 | (v23 << 6);
      goto LABEL_22;
    }
    int64_t v27 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v27 >= v46) {
      break;
    }
    uint64_t v28 = v47;
    unint64_t v29 = v47[v27];
    ++v23;
    if (!v29)
    {
      int64_t v23 = v27 + 1;
      if (v27 + 1 >= v46) {
        goto LABEL_34;
      }
      unint64_t v29 = v47[v23];
      if (!v29)
      {
        int64_t v30 = v27 + 2;
        if (v30 >= v46)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v45;
          if ((v53 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v29 = v47[v30];
        if (!v29)
        {
          while (1)
          {
            int64_t v23 = v30 + 1;
            if (__OFADD__(v30, 1)) {
              goto LABEL_43;
            }
            if (v23 >= v46) {
              goto LABEL_34;
            }
            unint64_t v29 = v47[v23];
            ++v30;
            if (v29) {
              goto LABEL_21;
            }
          }
        }
        int64_t v23 = v30;
      }
    }
LABEL_21:
    unint64_t v19 = (v29 - 1) & v29;
    unint64_t v26 = __clz(__rbit64(v29)) + (v23 << 6);
LABEL_22:
    uint64_t v31 = *(void *)(v9 + 72);
    unint64_t v32 = *(void *)(v13 + 48) + v31 * v26;
    if (v53)
    {
      (*v20)(v12, v32, v55);
      uint64_t v33 = *(void *)(v13 + 56);
      uint64_t v34 = *(void *)(v52 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v52 + 32))(v56, v33 + v34 * v26, v57);
    }
    else
    {
      (*v49)(v12, v32, v55);
      uint64_t v35 = *(void *)(v13 + 56);
      uint64_t v34 = *(void *)(v52 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v52 + 16))(v56, v35 + v34 * v26, v57);
    }
    sub_1000EF15C();
    uint64_t result = sub_1001C0BA0();
    uint64_t v36 = -1 << *(unsigned char *)(v15 + 32);
    unint64_t v37 = result & ~v36;
    unint64_t v38 = v37 >> 6;
    if (((-1 << v37) & ~*(void *)(v21 + 8 * (v37 >> 6))) != 0)
    {
      unint64_t v24 = __clz(__rbit64((-1 << v37) & ~*(void *)(v21 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v9 = v51;
    }
    else
    {
      char v39 = 0;
      unint64_t v40 = (unint64_t)(63 - v36) >> 6;
      uint64_t v9 = v51;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v41 = v38 == v40;
        if (v38 == v40) {
          unint64_t v38 = 0;
        }
        v39 |= v41;
        uint64_t v42 = *(void *)(v21 + 8 * v38);
      }
      while (v42 == -1);
      unint64_t v24 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(void *)(v21 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    (*v20)((char *)(*(void *)(v15 + 48) + v31 * v24), (unint64_t)v12, v55);
    uint64_t result = (*v54)(*(void *)(v15 + 56) + v34 * v24, v56, v57);
    ++*(void *)(v15 + 16);
    uint64_t v13 = v50;
  }
  swift_release();
  uint64_t v3 = v45;
  uint64_t v28 = v47;
  if ((v53 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v43 = 1 << *(unsigned char *)(v13 + 32);
  if (v43 >= 64) {
    bzero(v28, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v28 = -1 << v43;
  }
  *(void *)(v13 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v15;
  return result;
}

uint64_t sub_1000E6714(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v50 = sub_1001BF450();
  uint64_t v5 = *(void *)(v50 - 8);
  __chkstk_darwin(v50, v6);
  uint64_t v49 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_100003918(&qword_10020B810);
  int v48 = a2;
  uint64_t v9 = sub_1001C15B0();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_42;
  }
  unint64_t v40 = v2;
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  int64_t v46 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  int64_t v45 = (unint64_t)(v11 + 63) >> 6;
  int64_t v47 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
  uint64_t v15 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
  uint64_t v16 = v9 + 64;
  swift_retain();
  int64_t v17 = 0;
  uint64_t v43 = "on";
  uint64_t v44 = "eClientInfo";
  BOOL v41 = "invokeResponseSuccess";
  uint64_t v42 = "trustedEndpointResponseNodeId";
LABEL_9:
  if (v14)
  {
    unint64_t v23 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    unint64_t v24 = v23 | (v17 << 6);
    goto LABEL_31;
  }
  int64_t v25 = v17 + 1;
  if (__OFADD__(v17, 1)) {
    goto LABEL_43;
  }
  if (v25 >= v45)
  {
    swift_release();
    uint64_t v3 = v40;
    unint64_t v26 = v46;
    if (v48)
    {
LABEL_38:
      uint64_t v37 = 1 << *(unsigned char *)(v8 + 32);
      if (v37 >= 64) {
        bzero(v26, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        void *v26 = -1 << v37;
      }
      *(void *)(v8 + 16) = 0;
    }
  }
  else
  {
    unint64_t v26 = v46;
    unint64_t v27 = v46[v25];
    ++v17;
    if (v27) {
      goto LABEL_30;
    }
    int64_t v17 = v25 + 1;
    if (v25 + 1 >= v45) {
      goto LABEL_35;
    }
    unint64_t v27 = v46[v17];
    if (v27)
    {
LABEL_30:
      unint64_t v14 = (v27 - 1) & v27;
      unint64_t v24 = __clz(__rbit64(v27)) + (v17 << 6);
LABEL_31:
      char v33 = *(unsigned char *)(*(void *)(v8 + 48) + v24);
      uint64_t v34 = v5;
      uint64_t v35 = *(void *)(v5 + 72);
      unint64_t v36 = *(void *)(v8 + 56) + v35 * v24;
      if (v48) {
        (*v15)(v49, v36, v50);
      }
      else {
        (*v47)(v49, v36, v50);
      }
      sub_1001C1950();
      sub_1001C0CB0();
      swift_bridgeObjectRelease();
      Swift::Int v18 = sub_1001C1990();
      uint64_t v19 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v16 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v16 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_8;
      }
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v19) >> 6;
      while (++v21 != v30 || (v29 & 1) == 0)
      {
        BOOL v31 = v21 == v30;
        if (v21 == v30) {
          unint64_t v21 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v16 + 8 * v21);
        if (v32 != -1)
        {
          unint64_t v22 = __clz(__rbit64(~v32)) + (v21 << 6);
LABEL_8:
          *(void *)(v16 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
          *(unsigned char *)(*(void *)(v10 + 48) + v22) = v33;
          (*v15)((char *)(*(void *)(v10 + 56) + v35 * v22), (unint64_t)v49, v50);
          ++*(void *)(v10 + 16);
          uint64_t v5 = v34;
          goto LABEL_9;
        }
      }
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      JUMPOUT(0x1000E6C70);
    }
    int64_t v28 = v25 + 2;
    if (v28 < v45)
    {
      unint64_t v27 = v46[v28];
      if (!v27)
      {
        while (1)
        {
          int64_t v17 = v28 + 1;
          if (__OFADD__(v28, 1)) {
            goto LABEL_44;
          }
          if (v17 >= v45) {
            goto LABEL_35;
          }
          unint64_t v27 = v46[v17];
          ++v28;
          if (v27) {
            goto LABEL_30;
          }
        }
      }
      int64_t v17 = v28;
      goto LABEL_30;
    }
LABEL_35:
    swift_release();
    uint64_t v3 = v40;
    if (v48) {
      goto LABEL_38;
    }
  }
LABEL_42:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1000E6C9C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v52 = sub_1001BF450();
  uint64_t v5 = *(void *)(v52 - 8);
  __chkstk_darwin(v52, v6);
  uint64_t v51 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_100003918(&qword_10020B760);
  int v50 = a2;
  uint64_t v9 = sub_1001C15B0();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_42;
  }
  unint64_t v40 = v2;
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  int v48 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  int64_t v47 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v49 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
  uint64_t v15 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
  uint64_t v16 = v9 + 64;
  swift_retain();
  int64_t v17 = 0;
  int64_t v45 = "on";
  int64_t v46 = "lientinfo";
  uint64_t v43 = "attestationVerificationSuccess";
  uint64_t v44 = "";
  BOOL v41 = "attestationVerificationNodeId";
  uint64_t v42 = "attestationVerificationError";
LABEL_9:
  if (v14)
  {
    unint64_t v23 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    unint64_t v24 = v23 | (v17 << 6);
    goto LABEL_31;
  }
  int64_t v25 = v17 + 1;
  if (__OFADD__(v17, 1)) {
    goto LABEL_43;
  }
  if (v25 >= v47)
  {
    swift_release();
    uint64_t v3 = v40;
    unint64_t v26 = v48;
    if (v50)
    {
LABEL_38:
      uint64_t v37 = 1 << *(unsigned char *)(v8 + 32);
      if (v37 >= 64) {
        bzero(v26, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        void *v26 = -1 << v37;
      }
      *(void *)(v8 + 16) = 0;
    }
  }
  else
  {
    unint64_t v26 = v48;
    unint64_t v27 = v48[v25];
    ++v17;
    if (v27) {
      goto LABEL_30;
    }
    int64_t v17 = v25 + 1;
    if (v25 + 1 >= v47) {
      goto LABEL_35;
    }
    unint64_t v27 = v48[v17];
    if (v27)
    {
LABEL_30:
      unint64_t v14 = (v27 - 1) & v27;
      unint64_t v24 = __clz(__rbit64(v27)) + (v17 << 6);
LABEL_31:
      char v33 = *(unsigned char *)(*(void *)(v8 + 48) + v24);
      uint64_t v34 = v5;
      uint64_t v35 = *(void *)(v5 + 72);
      unint64_t v36 = *(void *)(v8 + 56) + v35 * v24;
      if (v50) {
        (*v15)(v51, v36, v52);
      }
      else {
        (*v49)(v51, v36, v52);
      }
      sub_1001C1950();
      sub_1001C0CB0();
      swift_bridgeObjectRelease();
      Swift::Int v18 = sub_1001C1990();
      uint64_t v19 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v16 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v16 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_8;
      }
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v19) >> 6;
      while (++v21 != v30 || (v29 & 1) == 0)
      {
        BOOL v31 = v21 == v30;
        if (v21 == v30) {
          unint64_t v21 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v16 + 8 * v21);
        if (v32 != -1)
        {
          unint64_t v22 = __clz(__rbit64(~v32)) + (v21 << 6);
LABEL_8:
          *(void *)(v16 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
          *(unsigned char *)(*(void *)(v10 + 48) + v22) = v33;
          (*v15)((char *)(*(void *)(v10 + 56) + v35 * v22), (unint64_t)v51, v52);
          ++*(void *)(v10 + 16);
          uint64_t v5 = v34;
          goto LABEL_9;
        }
      }
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      JUMPOUT(0x1000E7250);
    }
    int64_t v28 = v25 + 2;
    if (v28 < v47)
    {
      unint64_t v27 = v48[v28];
      if (!v27)
      {
        while (1)
        {
          int64_t v17 = v28 + 1;
          if (__OFADD__(v28, 1)) {
            goto LABEL_44;
          }
          if (v17 >= v47) {
            goto LABEL_35;
          }
          unint64_t v27 = v48[v17];
          ++v28;
          if (v27) {
            goto LABEL_30;
          }
        }
      }
      int64_t v17 = v28;
      goto LABEL_30;
    }
LABEL_35:
    swift_release();
    uint64_t v3 = v40;
    if (v50) {
      goto LABEL_38;
    }
  }
LABEL_42:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1000E7284(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v45 = sub_1001BF450();
  uint64_t v5 = *(void *)(v45 - 8);
  __chkstk_darwin(v45, v6);
  uint64_t v44 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_100003918(&qword_10020B7F0);
  int v43 = a2;
  uint64_t v9 = sub_1001C15B0();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_42;
  }
  v39[0] = v2;
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  BOOL v41 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  int64_t v40 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v42 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
  uint64_t v15 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
  uint64_t v16 = v9 + 64;
  swift_retain();
  int64_t v17 = 0;
  v39[6] = "on";
  v39[7] = "lientinfo";
  v39[4] = "isprefetchedattestation";
  v39[5] = "";
  v39[2] = "attestationVerificationError";
  v39[3] = "attestationVerificationSuccess";
  v39[1] = "attestationVerificationNodeId";
LABEL_9:
  if (v14)
  {
    unint64_t v23 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    unint64_t v24 = v23 | (v17 << 6);
    goto LABEL_31;
  }
  int64_t v25 = v17 + 1;
  if (__OFADD__(v17, 1)) {
    goto LABEL_43;
  }
  if (v25 >= v40)
  {
    swift_release();
    uint64_t v3 = (uint64_t *)v39[0];
    unint64_t v26 = v41;
    if (v43)
    {
LABEL_38:
      uint64_t v37 = 1 << *(unsigned char *)(v8 + 32);
      if (v37 >= 64) {
        bzero(v26, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        void *v26 = -1 << v37;
      }
      *(void *)(v8 + 16) = 0;
    }
  }
  else
  {
    unint64_t v26 = v41;
    unint64_t v27 = v41[v25];
    ++v17;
    if (v27) {
      goto LABEL_30;
    }
    int64_t v17 = v25 + 1;
    if (v25 + 1 >= v40) {
      goto LABEL_35;
    }
    unint64_t v27 = v41[v17];
    if (v27)
    {
LABEL_30:
      unint64_t v14 = (v27 - 1) & v27;
      unint64_t v24 = __clz(__rbit64(v27)) + (v17 << 6);
LABEL_31:
      char v33 = *(unsigned char *)(*(void *)(v8 + 48) + v24);
      uint64_t v34 = v5;
      uint64_t v35 = *(void *)(v5 + 72);
      unint64_t v36 = *(void *)(v8 + 56) + v35 * v24;
      if (v43) {
        (*v15)(v44, v36, v45);
      }
      else {
        (*v42)(v44, v36, v45);
      }
      sub_1001C1950();
      sub_1001C0CB0();
      swift_bridgeObjectRelease();
      Swift::Int v18 = sub_1001C1990();
      uint64_t v19 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v16 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v16 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_8;
      }
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v19) >> 6;
      while (++v21 != v30 || (v29 & 1) == 0)
      {
        BOOL v31 = v21 == v30;
        if (v21 == v30) {
          unint64_t v21 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v16 + 8 * v21);
        if (v32 != -1)
        {
          unint64_t v22 = __clz(__rbit64(~v32)) + (v21 << 6);
LABEL_8:
          *(void *)(v16 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
          *(unsigned char *)(*(void *)(v10 + 48) + v22) = v33;
          (*v15)((char *)(*(void *)(v10 + 56) + v35 * v22), (unint64_t)v44, v45);
          ++*(void *)(v10 + 16);
          uint64_t v5 = v34;
          goto LABEL_9;
        }
      }
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      JUMPOUT(0x1000E7868);
    }
    int64_t v28 = v25 + 2;
    if (v28 < v40)
    {
      unint64_t v27 = v41[v28];
      if (!v27)
      {
        while (1)
        {
          int64_t v17 = v28 + 1;
          if (__OFADD__(v28, 1)) {
            goto LABEL_44;
          }
          if (v17 >= v40) {
            goto LABEL_35;
          }
          unint64_t v27 = v41[v17];
          ++v28;
          if (v27) {
            goto LABEL_30;
          }
        }
      }
      int64_t v17 = v28;
      goto LABEL_30;
    }
LABEL_35:
    swift_release();
    uint64_t v3 = (uint64_t *)v39[0];
    if (v43) {
      goto LABEL_38;
    }
  }
LABEL_42:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1000E78A0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v45 = sub_1001BF450();
  uint64_t v5 = *(void *)(v45 - 8);
  __chkstk_darwin(v45, v6);
  uint64_t v44 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_100003918(&qword_10020B7E0);
  int v43 = a2;
  uint64_t v9 = sub_1001C15B0();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_42;
  }
  v39[0] = v2;
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  BOOL v41 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  int64_t v40 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v42 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
  uint64_t v15 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
  uint64_t v16 = v9 + 64;
  swift_retain();
  int64_t v17 = 0;
  v39[2] = "on";
  v39[3] = "eClientInfo";
  v39[1] = "firstresponsereceivedtimems";
LABEL_9:
  if (v14)
  {
    unint64_t v23 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    unint64_t v24 = v23 | (v17 << 6);
    goto LABEL_31;
  }
  int64_t v25 = v17 + 1;
  if (__OFADD__(v17, 1)) {
    goto LABEL_43;
  }
  if (v25 >= v40)
  {
    swift_release();
    uint64_t v3 = (uint64_t *)v39[0];
    unint64_t v26 = v41;
    if (v43)
    {
LABEL_38:
      uint64_t v37 = 1 << *(unsigned char *)(v8 + 32);
      if (v37 >= 64) {
        bzero(v26, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        void *v26 = -1 << v37;
      }
      *(void *)(v8 + 16) = 0;
    }
  }
  else
  {
    unint64_t v26 = v41;
    unint64_t v27 = v41[v25];
    ++v17;
    if (v27) {
      goto LABEL_30;
    }
    int64_t v17 = v25 + 1;
    if (v25 + 1 >= v40) {
      goto LABEL_35;
    }
    unint64_t v27 = v41[v17];
    if (v27)
    {
LABEL_30:
      unint64_t v14 = (v27 - 1) & v27;
      unint64_t v24 = __clz(__rbit64(v27)) + (v17 << 6);
LABEL_31:
      char v33 = *(unsigned char *)(*(void *)(v8 + 48) + v24);
      uint64_t v34 = v5;
      uint64_t v35 = *(void *)(v5 + 72);
      unint64_t v36 = *(void *)(v8 + 56) + v35 * v24;
      if (v43) {
        (*v15)(v44, v36, v45);
      }
      else {
        (*v42)(v44, v36, v45);
      }
      sub_1001C1950();
      sub_1001C0CB0();
      swift_bridgeObjectRelease();
      Swift::Int v18 = sub_1001C1990();
      uint64_t v19 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v16 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v16 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_8;
      }
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v19) >> 6;
      while (++v21 != v30 || (v29 & 1) == 0)
      {
        BOOL v31 = v21 == v30;
        if (v21 == v30) {
          unint64_t v21 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v16 + 8 * v21);
        if (v32 != -1)
        {
          unint64_t v22 = __clz(__rbit64(~v32)) + (v21 << 6);
LABEL_8:
          *(void *)(v16 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
          *(unsigned char *)(*(void *)(v10 + 48) + v22) = v33;
          (*v15)((char *)(*(void *)(v10 + 56) + v35 * v22), (unint64_t)v44, v45);
          ++*(void *)(v10 + 16);
          uint64_t v5 = v34;
          goto LABEL_9;
        }
      }
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      JUMPOUT(0x1000E7E20);
    }
    int64_t v28 = v25 + 2;
    if (v28 < v40)
    {
      unint64_t v27 = v41[v28];
      if (!v27)
      {
        while (1)
        {
          int64_t v17 = v28 + 1;
          if (__OFADD__(v28, 1)) {
            goto LABEL_44;
          }
          if (v17 >= v40) {
            goto LABEL_35;
          }
          unint64_t v27 = v41[v17];
          ++v28;
          if (v27) {
            goto LABEL_30;
          }
        }
      }
      int64_t v17 = v28;
      goto LABEL_30;
    }
LABEL_35:
    swift_release();
    uint64_t v3 = (uint64_t *)v39[0];
    if (v43) {
      goto LABEL_38;
    }
  }
LABEL_42:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1000E7E50(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v50 = sub_100003918(&qword_100208640);
  uint64_t v5 = *(void *)(v50 - 8);
  __chkstk_darwin(v50, v6);
  uint64_t v49 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_100003918(&qword_10020B800);
  int v48 = a2;
  uint64_t v9 = sub_1001C15B0();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v45 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  int v43 = v2;
  int64_t v44 = (unint64_t)(v11 + 63) >> 6;
  int64_t v46 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v47 = v5;
  uint64_t v15 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v16 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v18 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v21 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v44) {
      break;
    }
    unint64_t v24 = v45;
    unint64_t v25 = v45[v23];
    ++v18;
    if (!v25)
    {
      int64_t v18 = v23 + 1;
      if (v23 + 1 >= v44) {
        goto LABEL_34;
      }
      unint64_t v25 = v45[v18];
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v44)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v43;
          if ((v48 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v25 = v45[v26];
        if (!v25)
        {
          while (1)
          {
            int64_t v18 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_43;
            }
            if (v18 >= v44) {
              goto LABEL_34;
            }
            unint64_t v25 = v45[v18];
            ++v26;
            if (v25) {
              goto LABEL_21;
            }
          }
        }
        int64_t v18 = v26;
      }
    }
LABEL_21:
    unint64_t v14 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    uint64_t v27 = *(void *)(v8 + 56);
    uint64_t v28 = v8;
    char v29 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v22);
    uint64_t v30 = *v29;
    uint64_t v31 = v29[1];
    uint64_t v32 = *(void *)(v47 + 72);
    uint64_t v33 = v27 + v32 * v22;
    if (v48)
    {
      (*v15)(v49, v33, v50);
    }
    else
    {
      (*v46)(v49, v33, v50);
      swift_bridgeObjectRetain();
    }
    sub_1001C1950();
    sub_1001C0CB0();
    uint64_t result = sub_1001C1990();
    uint64_t v34 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v35 = result & ~v34;
    unint64_t v36 = v35 >> 6;
    if (((-1 << v35) & ~*(void *)(v16 + 8 * (v35 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v35) & ~*(void *)(v16 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v37 = 0;
      unint64_t v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v39 = v36 == v38;
        if (v36 == v38) {
          unint64_t v36 = 0;
        }
        v37 |= v39;
        uint64_t v40 = *(void *)(v16 + 8 * v36);
      }
      while (v40 == -1);
      unint64_t v19 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    unint64_t v20 = (void *)(*(void *)(v10 + 48) + 16 * v19);
    *unint64_t v20 = v30;
    v20[1] = v31;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v15)(*(void *)(v10 + 56) + v32 * v19, v49, v50);
    ++*(void *)(v10 + 16);
    uint64_t v8 = v28;
  }
  swift_release();
  uint64_t v3 = v43;
  unint64_t v24 = v45;
  if ((v48 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v41 = 1 << *(unsigned char *)(v8 + 32);
  if (v41 >= 64) {
    bzero(v24, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v41;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1000E823C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v45 = sub_1001BF450();
  uint64_t v5 = *(void *)(v45 - 8);
  __chkstk_darwin(v45, v6);
  int64_t v44 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_100003918(&qword_10020B7D0);
  int v43 = a2;
  uint64_t v9 = sub_1001C15B0();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  v39[0] = v2;
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v41 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  int64_t v40 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v42 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
  uint64_t v15 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
  uint64_t v16 = v9 + 64;
  swift_retain();
  int64_t v17 = 0;
  void v39[4] = "on";
  v39[5] = "eClientInfo";
  v39[2] = "trustedEndpointResponseSuccess";
  v39[3] = "attestationverificationtimems";
  v39[1] = "trustedEndpointResponseError";
LABEL_8:
  if (v14)
  {
    unint64_t v19 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    unint64_t v20 = v19 | (v17 << 6);
    goto LABEL_22;
  }
  int64_t v21 = v17 + 1;
  if (__OFADD__(v17, 1)) {
    goto LABEL_42;
  }
  if (v21 >= v40)
  {
    swift_release();
    uint64_t v3 = (uint64_t *)v39[0];
    unint64_t v22 = v41;
    if (v43)
    {
LABEL_37:
      uint64_t v37 = 1 << *(unsigned char *)(v8 + 32);
      if (v37 >= 64) {
        bzero(v22, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *unint64_t v22 = -1 << v37;
      }
      *(void *)(v8 + 16) = 0;
    }
  }
  else
  {
    unint64_t v22 = v41;
    unint64_t v23 = v41[v21];
    ++v17;
    if (v23) {
      goto LABEL_21;
    }
    int64_t v17 = v21 + 1;
    if (v21 + 1 >= v40) {
      goto LABEL_34;
    }
    unint64_t v23 = v41[v17];
    if (v23)
    {
LABEL_21:
      unint64_t v14 = (v23 - 1) & v23;
      unint64_t v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
      char v25 = *(unsigned char *)(*(void *)(v8 + 48) + v20);
      uint64_t v26 = v5;
      uint64_t v27 = *(void *)(v5 + 72);
      unint64_t v28 = *(void *)(v8 + 56) + v27 * v20;
      if (v43) {
        (*v15)(v44, v28, v45);
      }
      else {
        (*v42)(v44, v28, v45);
      }
      sub_1001C1950();
      sub_1001C0CB0();
      swift_bridgeObjectRelease();
      Swift::Int v29 = sub_1001C1990();
      uint64_t v30 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v31 = v29 & ~v30;
      unint64_t v32 = v31 >> 6;
      if (((-1 << v31) & ~*(void *)(v16 + 8 * (v31 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v31) & ~*(void *)(v16 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_7;
      }
      char v33 = 0;
      unint64_t v34 = (unint64_t)(63 - v30) >> 6;
      while (++v32 != v34 || (v33 & 1) == 0)
      {
        BOOL v35 = v32 == v34;
        if (v32 == v34) {
          unint64_t v32 = 0;
        }
        v33 |= v35;
        uint64_t v36 = *(void *)(v16 + 8 * v32);
        if (v36 != -1)
        {
          unint64_t v18 = __clz(__rbit64(~v36)) + (v32 << 6);
LABEL_7:
          *(void *)(v16 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
          *(unsigned char *)(*(void *)(v10 + 48) + v18) = v25;
          (*v15)((char *)(*(void *)(v10 + 56) + v27 * v18), (unint64_t)v44, v45);
          ++*(void *)(v10 + 16);
          uint64_t v5 = v26;
          goto LABEL_8;
        }
      }
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      JUMPOUT(0x1000E87C4);
    }
    int64_t v24 = v21 + 2;
    if (v24 < v40)
    {
      unint64_t v23 = v41[v24];
      if (!v23)
      {
        while (1)
        {
          int64_t v17 = v24 + 1;
          if (__OFADD__(v24, 1)) {
            goto LABEL_43;
          }
          if (v17 >= v40) {
            goto LABEL_34;
          }
          unint64_t v23 = v41[v17];
          ++v24;
          if (v23) {
            goto LABEL_21;
          }
        }
      }
      int64_t v17 = v24;
      goto LABEL_21;
    }
LABEL_34:
    swift_release();
    uint64_t v3 = (uint64_t *)v39[0];
    if (v43) {
      goto LABEL_37;
    }
  }
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1000E87F4(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v47 = sub_1001BF450();
  uint64_t v5 = *(void *)(v47 - 8);
  __chkstk_darwin(v47, v6);
  int64_t v46 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_100003918(&qword_10020B8E0);
  int v45 = a2;
  uint64_t v9 = sub_1001C15B0();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_42;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  int v43 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  uint64_t v41 = v2;
  int64_t v42 = (unint64_t)(v11 + 63) >> 6;
  int64_t v44 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v15 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v16 = v9 + 64;
  swift_retain();
  int64_t v17 = 0;
LABEL_9:
  if (v14)
  {
    unint64_t v23 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    unint64_t v24 = v23 | (v17 << 6);
    goto LABEL_31;
  }
  int64_t v25 = v17 + 1;
  if (__OFADD__(v17, 1)) {
    goto LABEL_43;
  }
  if (v25 >= v42)
  {
    swift_release();
    uint64_t v3 = v41;
    uint64_t v26 = v43;
    if (v45)
    {
LABEL_38:
      uint64_t v39 = 1 << *(unsigned char *)(v8 + 32);
      if (v39 >= 64) {
        bzero(v26, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        void *v26 = -1 << v39;
      }
      *(void *)(v8 + 16) = 0;
    }
  }
  else
  {
    uint64_t v26 = v43;
    unint64_t v27 = v43[v25];
    ++v17;
    if (v27) {
      goto LABEL_30;
    }
    int64_t v17 = v25 + 1;
    if (v25 + 1 >= v42) {
      goto LABEL_35;
    }
    unint64_t v27 = v43[v17];
    if (v27)
    {
LABEL_30:
      unint64_t v14 = (v27 - 1) & v27;
      unint64_t v24 = __clz(__rbit64(v27)) + (v17 << 6);
LABEL_31:
      uint64_t v33 = *(void *)(v8 + 56);
      uint64_t v34 = v8;
      char v35 = *(unsigned char *)(*(void *)(v8 + 48) + v24);
      uint64_t v36 = v5;
      uint64_t v37 = *(void *)(v5 + 72);
      uint64_t v38 = v33 + v37 * v24;
      if (v45) {
        (*v15)(v46, v38, v47);
      }
      else {
        (*v44)(v46, v38, v47);
      }
      sub_1001C1950();
      sub_1001C0CB0();
      swift_bridgeObjectRelease();
      Swift::Int v18 = sub_1001C1990();
      uint64_t v19 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v16 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v16 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_8;
      }
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v19) >> 6;
      while (++v21 != v30 || (v29 & 1) == 0)
      {
        BOOL v31 = v21 == v30;
        if (v21 == v30) {
          unint64_t v21 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v16 + 8 * v21);
        if (v32 != -1)
        {
          unint64_t v22 = __clz(__rbit64(~v32)) + (v21 << 6);
LABEL_8:
          *(void *)(v16 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
          *(unsigned char *)(*(void *)(v10 + 48) + v22) = v35;
          (*v15)((char *)(*(void *)(v10 + 56) + v37 * v22), (uint64_t)v46, v47);
          ++*(void *)(v10 + 16);
          uint64_t v5 = v36;
          uint64_t v8 = v34;
          goto LABEL_9;
        }
      }
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      JUMPOUT(0x1000E8C88);
    }
    int64_t v28 = v25 + 2;
    if (v28 < v42)
    {
      unint64_t v27 = v43[v28];
      if (!v27)
      {
        while (1)
        {
          int64_t v17 = v28 + 1;
          if (__OFADD__(v28, 1)) {
            goto LABEL_44;
          }
          if (v17 >= v42) {
            goto LABEL_35;
          }
          unint64_t v27 = v43[v17];
          ++v28;
          if (v27) {
            goto LABEL_30;
          }
        }
      }
      int64_t v17 = v28;
      goto LABEL_30;
    }
LABEL_35:
    swift_release();
    uint64_t v3 = v41;
    if (v45) {
      goto LABEL_38;
    }
  }
LABEL_42:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1000E8C9C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100003918(&qword_10020B748);
  char v37 = a2;
  uint64_t v6 = sub_1001C15B0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    char v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1001C1950();
    sub_1001C0CB0();
    uint64_t result = sub_1001C1990();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    Swift::Int v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1000E8FA8(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v47 = sub_1001BF450();
  uint64_t v5 = *(void *)(v47 - 8);
  __chkstk_darwin(v47, v6);
  int64_t v46 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_100003918(&qword_10020B740);
  int v45 = a2;
  uint64_t v9 = sub_1001C15B0();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  v41[0] = v2;
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  int v43 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  int64_t v42 = (unint64_t)(v11 + 63) >> 6;
  int64_t v44 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  unint64_t v15 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v16 = v9 + 64;
  swift_retain();
  int64_t v17 = 0;
  void v41[2] = "attestationDistribution";
  v41[3] = "invokeResponseError";
  v41[1] = "attestationSource";
LABEL_8:
  if (v14)
  {
    unint64_t v19 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    unint64_t v20 = v19 | (v17 << 6);
    goto LABEL_22;
  }
  int64_t v21 = v17 + 1;
  if (__OFADD__(v17, 1)) {
    goto LABEL_42;
  }
  if (v21 >= v42)
  {
    swift_release();
    uint64_t v3 = (uint64_t *)v41[0];
    unint64_t v22 = v43;
    if (v45)
    {
LABEL_37:
      uint64_t v39 = 1 << *(unsigned char *)(v8 + 32);
      if (v39 >= 64) {
        bzero(v22, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *unint64_t v22 = -1 << v39;
      }
      *(void *)(v8 + 16) = 0;
    }
  }
  else
  {
    unint64_t v22 = v43;
    unint64_t v23 = v43[v21];
    ++v17;
    if (v23) {
      goto LABEL_21;
    }
    int64_t v17 = v21 + 1;
    if (v21 + 1 >= v42) {
      goto LABEL_34;
    }
    unint64_t v23 = v43[v17];
    if (v23)
    {
LABEL_21:
      unint64_t v14 = (v23 - 1) & v23;
      unint64_t v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
      uint64_t v25 = *(void *)(v8 + 56);
      uint64_t v26 = v8;
      char v27 = *(unsigned char *)(*(void *)(v8 + 48) + v20);
      uint64_t v28 = v5;
      uint64_t v29 = *(void *)(v5 + 72);
      uint64_t v30 = v25 + v29 * v20;
      if (v45) {
        (*v15)(v46, v30, v47);
      }
      else {
        (*v44)(v46, v30, v47);
      }
      sub_1001C1950();
      sub_1001C0CB0();
      swift_bridgeObjectRelease();
      Swift::Int v31 = sub_1001C1990();
      uint64_t v32 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v33 = v31 & ~v32;
      unint64_t v34 = v33 >> 6;
      if (((-1 << v33) & ~*(void *)(v16 + 8 * (v33 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v33) & ~*(void *)(v16 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_7;
      }
      char v35 = 0;
      unint64_t v36 = (unint64_t)(63 - v32) >> 6;
      while (++v34 != v36 || (v35 & 1) == 0)
      {
        BOOL v37 = v34 == v36;
        if (v34 == v36) {
          unint64_t v34 = 0;
        }
        v35 |= v37;
        uint64_t v38 = *(void *)(v16 + 8 * v34);
        if (v38 != -1)
        {
          unint64_t v18 = __clz(__rbit64(~v38)) + (v34 << 6);
LABEL_7:
          *(void *)(v16 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
          *(unsigned char *)(*(void *)(v10 + 48) + v18) = v27;
          (*v15)((char *)(*(void *)(v10 + 56) + v29 * v18), (uint64_t)v46, v47);
          ++*(void *)(v10 + 16);
          uint64_t v5 = v28;
          uint64_t v8 = v26;
          goto LABEL_8;
        }
      }
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      JUMPOUT(0x1000E9488);
    }
    int64_t v24 = v21 + 2;
    if (v24 < v42)
    {
      unint64_t v23 = v43[v24];
      if (!v23)
      {
        while (1)
        {
          int64_t v17 = v24 + 1;
          if (__OFADD__(v24, 1)) {
            goto LABEL_43;
          }
          if (v17 >= v42) {
            goto LABEL_34;
          }
          unint64_t v23 = v43[v17];
          ++v24;
          if (v23) {
            goto LABEL_21;
          }
        }
      }
      int64_t v17 = v24;
      goto LABEL_21;
    }
LABEL_34:
    swift_release();
    uint64_t v3 = (uint64_t *)v41[0];
    if (v45) {
      goto LABEL_37;
    }
  }
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

unint64_t sub_1000E94A4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100003918(&qword_10020B750);
  char v32 = a2;
  uint64_t v6 = sub_1001C15B0();
  uint64_t v7 = (void *)v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v29 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    char v27 = v2;
    int64_t v28 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v30 = v6 + 64;
    unint64_t result = swift_retain();
    int64_t v12 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_30:
          __break(1u);
          return result;
        }
        if (v16 >= v28) {
          goto LABEL_23;
        }
        unint64_t v17 = v29[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v28) {
            goto LABEL_23;
          }
          unint64_t v17 = v29[v12];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v28)
            {
LABEL_23:
              swift_release();
              uint64_t v3 = v27;
              if (v32)
              {
                uint64_t v26 = 1 << *(unsigned char *)(v5 + 32);
                if (v26 > 63) {
                  bzero(v29, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v29 = -1 << v26;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v17 = v29[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v12 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_30;
                }
                if (v12 >= v28) {
                  goto LABEL_23;
                }
                unint64_t v17 = v29[v12];
                ++v18;
                if (v17) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v12 = v18;
          }
        }
LABEL_20:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(v5 + 48) + 56 * v15;
      uint64_t v21 = *(void *)v19;
      uint64_t v20 = *(void *)(v19 + 8);
      uint64_t v23 = *(void *)(v19 + 16);
      uint64_t v22 = *(void *)(v19 + 24);
      uint64_t v24 = *(void *)(v19 + 32);
      uint64_t v33 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
      long long v34 = *(_OWORD *)(v19 + 40);
      uint64_t v25 = *(void *)(v19 + 48);
      if ((v32 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1001C1950();
      swift_bridgeObjectRetain();
      sub_1001C0CB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1001C0CB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1001C0CB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_10018FB7C((uint64_t)v35, v25);
      swift_bridgeObjectRelease();
      sub_1001C1990();
      unint64_t result = sub_1001C13F0();
      *(void *)(v30 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      uint64_t v13 = v7[6] + 56 * result;
      *(void *)uint64_t v13 = v21;
      *(void *)(v13 + 8) = v20;
      *(void *)(v13 + 16) = v23;
      *(void *)(v13 + 24) = v22;
      *(void *)(v13 + 32) = v24;
      *(_OWORD *)(v13 + 40) = v34;
      *(void *)(v7[7] + 8 * result) = v33;
      ++v7[2];
    }
  }
  unint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1000E97F4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100003918(&qword_10020B8E8);
  char v38 = a2;
  uint64_t v6 = sub_1001C15B0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  char v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = *(void *)(v5 + 48) + 24 * v20;
    uint64_t v31 = *(void *)v29;
    uint64_t v30 = *(void *)(v29 + 8);
    Swift::UInt8 v32 = *(unsigned char *)(v29 + 16);
    uint64_t v33 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_1001C1950();
    swift_bridgeObjectRetain();
    sub_1001C0CB0();
    swift_bridgeObjectRelease();
    sub_1001C1970(v32);
    uint64_t result = sub_1001C1990();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = *(void *)(v7 + 48) + 24 * v17;
    *(void *)uint64_t v18 = v31;
    *(void *)(v18 + 8) = v30;
    *(unsigned char *)(v18 + 16) = v32;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v33;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1000E9B38(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v50 = sub_1001BF450();
  uint64_t v5 = *(void *)(v50 - 8);
  __chkstk_darwin(v50, v6);
  uint64_t v49 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_100003918(&qword_10020B8D0);
  int v48 = a2;
  uint64_t v9 = sub_1001C15B0();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  int v45 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  int v43 = v2;
  int64_t v44 = (unint64_t)(v11 + 63) >> 6;
  int64_t v46 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v47 = v5;
  unint64_t v15 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v16 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v18 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v21 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v44) {
      break;
    }
    int64_t v24 = v45;
    unint64_t v25 = v45[v23];
    ++v18;
    if (!v25)
    {
      int64_t v18 = v23 + 1;
      if (v23 + 1 >= v44) {
        goto LABEL_34;
      }
      unint64_t v25 = v45[v18];
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v44)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v43;
          if ((v48 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v25 = v45[v26];
        if (!v25)
        {
          while (1)
          {
            int64_t v18 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_43;
            }
            if (v18 >= v44) {
              goto LABEL_34;
            }
            unint64_t v25 = v45[v18];
            ++v26;
            if (v25) {
              goto LABEL_21;
            }
          }
        }
        int64_t v18 = v26;
      }
    }
LABEL_21:
    unint64_t v14 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    uint64_t v27 = *(void *)(v8 + 56);
    uint64_t v28 = v8;
    uint64_t v29 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v22);
    uint64_t v30 = *v29;
    uint64_t v31 = v29[1];
    uint64_t v32 = *(void *)(v47 + 72);
    uint64_t v33 = v27 + v32 * v22;
    if (v48)
    {
      (*v15)(v49, v33, v50);
    }
    else
    {
      (*v46)(v49, v33, v50);
      swift_bridgeObjectRetain();
    }
    sub_1001C1950();
    sub_1001C0CB0();
    uint64_t result = sub_1001C1990();
    uint64_t v34 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v35 = result & ~v34;
    unint64_t v36 = v35 >> 6;
    if (((-1 << v35) & ~*(void *)(v16 + 8 * (v35 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v35) & ~*(void *)(v16 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v37 = 0;
      unint64_t v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v39 = v36 == v38;
        if (v36 == v38) {
          unint64_t v36 = 0;
        }
        v37 |= v39;
        uint64_t v40 = *(void *)(v16 + 8 * v36);
      }
      while (v40 == -1);
      unint64_t v19 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    unint64_t v20 = (void *)(*(void *)(v10 + 48) + 16 * v19);
    *unint64_t v20 = v30;
    v20[1] = v31;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v15)(*(void *)(v10 + 56) + v32 * v19, v49, v50);
    ++*(void *)(v10 + 16);
    uint64_t v8 = v28;
  }
  swift_release();
  uint64_t v3 = v43;
  int64_t v24 = v45;
  if ((v48 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v41 = 1 << *(unsigned char *)(v8 + 32);
  if (v41 >= 64) {
    bzero(v24, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v41;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1000E9F20(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1001BF310();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_100003918(&qword_10020B828);
  int v46 = a2;
  uint64_t v11 = sub_1001C15B0();
  uint64_t v12 = v11;
  if (!*(void *)(v10 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v14 = *(void *)(v10 + 64);
  uint64_t v42 = (void *)(v10 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  uint64_t v40 = v2;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  int v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  unint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v11 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v10; ; uint64_t v10 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    unint64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v10 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v9, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v10 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v9, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v10 + 56) + 8 * v23);
      swift_retain();
    }
    sub_1000EF15C();
    uint64_t result = sub_1001C0BA0();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v9, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  unint64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v10 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v25 = -1 << v38;
  }
  *(void *)(v10 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_1000EA314(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100003918(&qword_10020B818);
  uint64_t v6 = sub_1001C15B0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      int64_t v38 = v13;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v36) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    int64_t v25 = v13 + 1;
    if (!v24)
    {
      int64_t v25 = v13 + 2;
      if (v13 + 2 >= v36) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v25);
      if (!v24)
      {
        uint64_t v26 = v13 + 3;
        if (v13 + 3 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v2;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v26);
        if (!v24)
        {
          while (1)
          {
            int64_t v25 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v25 >= v36) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v25);
            ++v26;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v25 = v13 + 3;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    int64_t v38 = v25;
    unint64_t v21 = __clz(__rbit64(v24)) + (v25 << 6);
LABEL_31:
    uint64_t v31 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v33 = *v31;
    uint64_t v32 = v31[1];
    uint64_t v34 = *(void *)(v5 + 56) + 120 * v21;
    uint64_t v42 = *(void *)(v34 + 32);
    uint64_t v43 = *(void *)(v34 + 24);
    long long v47 = *(_OWORD *)(v34 + 40);
    long long v48 = *(_OWORD *)(v34 + 8);
    uint64_t v39 = *(void *)(v34 + 56);
    unint64_t v40 = *(void *)v34;
    long long v45 = *(_OWORD *)(v34 + 80);
    long long v46 = *(_OWORD *)(v34 + 64);
    long long v44 = *(_OWORD *)(v34 + 96);
    uint64_t v41 = *(void *)(v34 + 112);
    if ((a2 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      sub_10002C9AC(v40);
      swift_bridgeObjectRetain();
      sub_10000D9E0(v42, v47);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1001C1950();
    sub_1001C0CB0();
    uint64_t result = sub_1001C1990();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v33;
    v18[1] = v32;
    uint64_t v19 = *(void *)(v7 + 56) + 120 * v17;
    *(void *)uint64_t v19 = v40;
    *(_OWORD *)(v19 + 8) = v48;
    *(void *)(v19 + 24) = v43;
    *(void *)(v19 + 32) = v42;
    *(_OWORD *)(v19 + 40) = v47;
    int64_t v13 = v38;
    *(void *)(v19 + 56) = v39;
    *(_OWORD *)(v19 + 64) = v46;
    *(_OWORD *)(v19 + 80) = v45;
    *(_OWORD *)(v19 + 96) = v44;
    *(void *)(v19 + 112) = v41;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v2;
  unint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1000EA71C(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_100169F4C(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    unint64_t v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t v18 = type metadata accessor for RateLimitTimingDetails(0);
      return sub_1000EF0F4(a1, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v10, type metadata accessor for RateLimitTimingDetails);
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1000EBF2C();
    goto LABEL_7;
  }
  sub_1000E45FC(v13, a3 & 1);
  unint64_t v20 = sub_100169F4C(a2);
  if ((v14 & 1) != (v21 & 1))
  {
LABEL_15:
    uint64_t result = sub_1001C18C0();
    __break(1u);
    return result;
  }
  unint64_t v10 = v20;
  unint64_t v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1000EB880(v10, (uint64_t)a2, a1, v16);
  return sub_100032A2C((uint64_t)a2);
}

uint64_t sub_1000EA878(uint64_t a1, uint64_t *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_100169FB8(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1000EC234();
      goto LABEL_7;
    }
    sub_1000E4AB4(v13, a3 & 1);
    unint64_t v24 = sub_100169FB8(a2);
    if ((v14 & 1) == (v25 & 1))
    {
      unint64_t v10 = v24;
      unint64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_1001C18C0();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7];
    uint64_t v18 = sub_1001BF7A0();
    uint64_t v19 = *(void *)(v18 - 8);
    unint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 40);
    uint64_t v21 = v18;
    uint64_t v22 = v17 + *(void *)(v19 + 72) * v10;
    return v20(v22, a1, v21);
  }
LABEL_13:
  sub_1000EB944(v10, (uint64_t)a2, a1, v16);
  return sub_10009A130((uint64_t)a2);
}

uint64_t sub_1000EA9E8(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1000EAF5C(a1, a2, a3, sub_10016A0A4, &qword_10020B7C0, (void (*)(void))sub_1000E4F3C);
}

uint64_t sub_1000EAA24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_100169E3C(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1000EC730();
LABEL_7:
    unint64_t v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = (void *)(v20[7] + 16 * v14);
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_1000E5644(v17, a5 & 1);
  unint64_t v23 = sub_100169E3C(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = sub_1001C18C0();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  unint64_t v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  char v25 = (uint64_t *)(v20[6] + 16 * v14);
  *char v25 = a3;
  v25[1] = a4;
  uint64_t v26 = (void *)(v20[7] + 16 * v14);
  void *v26 = a1;
  v26[1] = a2;
  uint64_t v27 = v20[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v20[2] = v29;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000EABAC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_100169E3C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    char v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t v20 = type metadata accessor for ValidatedAttestation();
      return sub_1000EF0F4(a1, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v12, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1000EC8EC();
    goto LABEL_7;
  }
  sub_1000E596C(v15, a4 & 1);
  unint64_t v22 = sub_100169E3C(a2, a3);
  if ((v16 & 1) != (v23 & 1))
  {
LABEL_15:
    uint64_t result = sub_1001C18C0();
    __break(1u);
    return result;
  }
  unint64_t v12 = v22;
  char v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1000EBA0C(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000EAD18(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1001BF310();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  unint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)*v3;
  unint64_t v15 = sub_100169EB4(a2);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v19 = v14;
  uint64_t v20 = v13[3];
  if (v20 < v18 || (a3 & 1) == 0)
  {
    if (v20 >= v18 && (a3 & 1) == 0)
    {
      sub_1000ECEE4();
      goto LABEL_7;
    }
    sub_1000E6234(v18, a3 & 1);
    unint64_t v29 = sub_100169EB4(a2);
    if ((v19 & 1) == (v30 & 1))
    {
      unint64_t v15 = v29;
      uint64_t v21 = *v4;
      if (v19) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a2, v8);
      return sub_1000EBBA8(v15, (uint64_t)v12, a1, v21);
    }
LABEL_15:
    uint64_t result = sub_1001C18C0();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v21 = *v4;
  if ((v19 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v22 = v21[7];
  uint64_t v23 = sub_100003918(&qword_100208640);
  uint64_t v24 = *(void *)(v23 - 8);
  char v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 40);
  uint64_t v26 = v23;
  uint64_t v27 = v22 + *(void *)(v24 + 72) * v15;
  return v25(v27, a1, v26);
}

uint64_t sub_1000EAF20(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1000EAF5C(a1, a2, a3, sub_10016A0D0, &qword_10020B810, (void (*)(void))sub_1000E6714);
}

uint64_t sub_1000EAF5C(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(uint64_t), uint64_t *a5, void (*a6)(void))
{
  uint64_t v10 = (void **)v6;
  char v14 = (void *)*v6;
  unint64_t v16 = a4(a2);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v20 = v15;
  uint64_t v21 = v14[3];
  if (v21 < v19 || (a3 & 1) == 0)
  {
    if (v21 >= v19 && (a3 & 1) == 0)
    {
      sub_1000ED708(a5);
      goto LABEL_7;
    }
    a6();
    uint64_t v30 = a4(a2);
    if ((v20 & 1) == (v31 & 1))
    {
      unint64_t v16 = v30;
      uint64_t v22 = *v10;
      if (v20) {
        goto LABEL_8;
      }
      return sub_1000EBD54(v16, a2, a1, v22);
    }
LABEL_15:
    uint64_t result = sub_1001C18C0();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v22 = *v10;
  if ((v20 & 1) == 0) {
    return sub_1000EBD54(v16, a2, a1, v22);
  }
LABEL_8:
  uint64_t v23 = v22[7];
  uint64_t v24 = sub_1001BF450();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 40);
  uint64_t v27 = v24;
  uint64_t v28 = v23 + *(void *)(v25 + 72) * v16;
  return v26(v28, a1, v27);
}

uint64_t sub_1000EB0EC(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1000EAF5C(a1, a2, a3, sub_10016A128, &qword_10020B760, (void (*)(void))sub_1000E6C9C);
}

uint64_t sub_1000EB128(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1000EAF5C(a1, a2, a3, sub_10016A0FC, &qword_10020B7F0, (void (*)(void))sub_1000E7284);
}

uint64_t sub_1000EB164(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1000EAF5C(a1, a2, a3, sub_10016A154, &qword_10020B7E0, (void (*)(void))sub_1000E78A0);
}

uint64_t sub_1000EB1A0(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1000EAF5C(a1, a2, a3, sub_10016A180, &qword_10020B7D0, (void (*)(void))sub_1000E823C);
}

uint64_t sub_1000EB1DC(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1000EAF5C(a1, a2, a3, (uint64_t (*)(uint64_t))sub_10016A248, &qword_10020B8E0, (void (*)(void))sub_1000E87F4);
}

uint64_t sub_1000EB218(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_100169E3C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1000ED290();
      goto LABEL_7;
    }
    sub_1000E7E50(v15, a4 & 1);
    unint64_t v26 = sub_100169E3C(a2, a3);
    if ((v16 & 1) == (v27 & 1))
    {
      unint64_t v12 = v26;
      BOOL v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_1001C18C0();
    __break(1u);
    return result;
  }
LABEL_7:
  BOOL v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7];
    uint64_t v20 = sub_100003918(&qword_100208640);
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 40);
    uint64_t v23 = v20;
    uint64_t v24 = v19 + *(void *)(v21 + 72) * v12;
    return v22(v24, a1, v23);
  }
LABEL_13:
  sub_1000EBCA0(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000EB39C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, char a5)
{
  uint64_t v6 = v5;
  char v8 = a4;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_10016A3C4(a2, a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1000EDB88();
LABEL_7:
    uint64_t v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_release();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1000E97F4(v17, a5 & 1);
  unint64_t v23 = sub_10016A3C4(a2, a3, v8 & 1);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = sub_1001C18C0();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  uint64_t v25 = v20[6] + 24 * v14;
  *(void *)uint64_t v25 = a2;
  *(void *)(v25 + 8) = a3;
  *(unsigned char *)(v25 + 16) = v8 & 1;
  *(void *)(v20[7] + 8 * v14) = a1;
  uint64_t v26 = v20[2];
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (v27)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v20[2] = v28;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000EB530(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_100169E3C(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1000EE2A8();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + 120 * v12;
      return sub_1000EF1B4(a1, v19);
    }
    goto LABEL_13;
  }
  sub_1000EA314(v15, a4 & 1);
  unint64_t v21 = sub_100169E3C(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_19:
    uint64_t result = sub_1001C18C0();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_13:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  unint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *unint64_t v23 = a2;
  v23[1] = a3;
  uint64_t v24 = v18[7] + 120 * v12;
  long long v25 = *(_OWORD *)a1;
  long long v26 = *(_OWORD *)(a1 + 16);
  long long v27 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v24 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v24 + 48) = v27;
  *(_OWORD *)uint64_t v24 = v25;
  *(_OWORD *)(v24 + 16) = v26;
  long long v28 = *(_OWORD *)(a1 + 64);
  long long v29 = *(_OWORD *)(a1 + 80);
  long long v30 = *(_OWORD *)(a1 + 96);
  *(void *)(v24 + 112) = *(void *)(a1 + 112);
  *(_OWORD *)(v24 + 80) = v29;
  *(_OWORD *)(v24 + 96) = v30;
  *(_OWORD *)(v24 + 64) = v28;
  uint64_t v31 = v18[2];
  BOOL v32 = __OFADD__(v31, 1);
  uint64_t v33 = v31 + 1;
  if (v32)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v18[2] = v33;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000EB6D8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1001BF310();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  unint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)*v3;
  unint64_t v15 = sub_100169EB4(a2);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v19 = v14;
  uint64_t v20 = v13[3];
  if (v20 >= v18 && (a3 & 1) != 0)
  {
LABEL_7:
    unint64_t v21 = *v4;
    if (v19)
    {
LABEL_8:
      uint64_t v22 = v21[7];
      uint64_t result = swift_release();
      *(void *)(v22 + 8 * v15) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v20 >= v18 && (a3 & 1) == 0)
  {
    sub_1000EE010();
    goto LABEL_7;
  }
  sub_1000E9F20(v18, a3 & 1);
  unint64_t v24 = sub_100169EB4(a2);
  if ((v19 & 1) != (v25 & 1))
  {
LABEL_14:
    uint64_t result = sub_1001C18C0();
    __break(1u);
    return result;
  }
  unint64_t v15 = v24;
  unint64_t v21 = *v4;
  if (v19) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a2, v8);
  return sub_1000EBE74(v15, (uint64_t)v12, a1, v21);
}

uint64_t sub_1000EB880(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v7 = a4[6] + 56 * a1;
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)a2;
  *(_OWORD *)(v7 + 16) = v8;
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(v7 + 48) = *(void *)(a2 + 48);
  uint64_t v9 = a4[7];
  uint64_t v10 = type metadata accessor for RateLimitTimingDetails(0);
  uint64_t result = sub_1000EF284(a3, v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, type metadata accessor for RateLimitTimingDetails);
  uint64_t v12 = a4[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a4[2] = v14;
  }
  return result;
}

uint64_t sub_1000EB944(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v7 = a4[6] + 56 * a1;
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)a2;
  *(_OWORD *)(v7 + 16) = v8;
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(v7 + 48) = *(void *)(a2 + 48);
  uint64_t v9 = a4[7];
  uint64_t v10 = sub_1001BF7A0();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, a3, v10);
  uint64_t v12 = a4[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a4[2] = v14;
  }
  return result;
}

uint64_t sub_1000EBA0C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  long long v8 = (void *)(a5[6] + 16 * a1);
  *long long v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = type metadata accessor for ValidatedAttestation();
  uint64_t result = sub_1000EF284(a4, v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

uint64_t sub_1000EBAB8(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1001BF310();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t v10 = a4[7];
  uint64_t v11 = type metadata accessor for SessionLog.Element();
  uint64_t result = sub_1000EF284(a3, v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, (uint64_t (*)(void))type metadata accessor for SessionLog.Element);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

uint64_t sub_1000EBBA8(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1001BF310();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t v10 = a4[7];
  uint64_t v11 = sub_100003918(&qword_100208640);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a3, v11);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

uint64_t sub_1000EBCA0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = (void *)(a5[6] + 16 * a1);
  *uint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = sub_100003918(&qword_100208640);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, a4, v10);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

uint64_t sub_1000EBD54(unint64_t a1, char a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(unsigned char *)(a4[6] + a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = sub_1001BF450();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1, a3, v8);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

unint64_t sub_1000EBE00(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  uint64_t v6 = a5[7] + 120 * result;
  long long v7 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)a4;
  *(_OWORD *)(v6 + 16) = v7;
  long long v8 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(v6 + 32) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(v6 + 48) = v8;
  *(void *)(v6 + 112) = *(void *)(a4 + 112);
  long long v9 = *(_OWORD *)(a4 + 96);
  long long v10 = *(_OWORD *)(a4 + 64);
  *(_OWORD *)(v6 + 80) = *(_OWORD *)(a4 + 80);
  *(_OWORD *)(v6 + 96) = v9;
  *(_OWORD *)(v6 + 64) = v10;
  uint64_t v11 = a5[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a5[2] = v13;
  }
  return result;
}

uint64_t sub_1000EBE74(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1001BF310();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_1000EBF2C()
{
  uint64_t v1 = type metadata accessor for RateLimitTimingDetails(0);
  uint64_t v40 = *(void *)(v1 - 8);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v39 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100003918(&qword_10020B788);
  int64_t v36 = v0;
  uint64_t v4 = *v0;
  uint64_t v5 = sub_1001C15A0();
  uint64_t v6 = *(void *)(v4 + 16);
  uint64_t v42 = v5;
  if (!v6)
  {
    uint64_t result = swift_release();
    uint64_t v35 = v42;
    uint64_t v34 = v36;
LABEL_25:
    *uint64_t v34 = v35;
    return result;
  }
  uint64_t v7 = v5;
  uint64_t v8 = (char *)(v5 + 64);
  uint64_t v9 = (char *)(v4 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  uint64_t v37 = v4 + 64;
  if (v7 != v4 || v8 >= &v9[8 * v10])
  {
    memmove(v8, v9, 8 * v10);
    uint64_t v7 = v42;
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v4 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v41 = v4;
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v4 + 64);
  int64_t v38 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v15 = (uint64_t)v39;
  while (1)
  {
    if (v14)
    {
      uint64_t v43 = (v14 - 1) & v14;
      int64_t v44 = v11;
      unint64_t v16 = __clz(__rbit64(v14)) | (v11 << 6);
      uint64_t result = v41;
      goto LABEL_9;
    }
    int64_t v30 = v11 + 1;
    uint64_t result = v41;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v30 >= v38) {
      goto LABEL_23;
    }
    unint64_t v31 = *(void *)(v37 + 8 * v30);
    int64_t v32 = v11 + 1;
    if (!v31)
    {
      int64_t v32 = v11 + 2;
      if (v11 + 2 >= v38) {
        goto LABEL_23;
      }
      unint64_t v31 = *(void *)(v37 + 8 * v32);
      if (!v31) {
        break;
      }
    }
LABEL_22:
    uint64_t v43 = (v31 - 1) & v31;
    int64_t v44 = v32;
    unint64_t v16 = __clz(__rbit64(v31)) + (v32 << 6);
LABEL_9:
    uint64_t v18 = 56 * v16;
    uint64_t v19 = *(void *)(result + 56);
    uint64_t v20 = (uint64_t *)(*(void *)(result + 48) + 56 * v16);
    uint64_t v22 = *v20;
    uint64_t v21 = v20[1];
    uint64_t v24 = v20[2];
    uint64_t v23 = v20[3];
    uint64_t v25 = v20[5];
    uint64_t v45 = v20[4];
    uint64_t v26 = v20[6];
    unint64_t v27 = *(void *)(v40 + 72) * v16;
    sub_1000EF21C(v19 + v27, v15, type metadata accessor for RateLimitTimingDetails);
    uint64_t v28 = v42;
    long long v29 = (void *)(*(void *)(v42 + 48) + v18);
    *long long v29 = v22;
    v29[1] = v21;
    v29[2] = v24;
    v29[3] = v23;
    v29[4] = v45;
    v29[5] = v25;
    v29[6] = v26;
    sub_1000EF284(v15, *(void *)(v28 + 56) + v27, type metadata accessor for RateLimitTimingDetails);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v14 = v43;
    int64_t v11 = v44;
  }
  uint64_t v33 = v11 + 3;
  if (v11 + 3 >= v38)
  {
LABEL_23:
    uint64_t result = swift_release();
    uint64_t v34 = v36;
    uint64_t v35 = v42;
    goto LABEL_25;
  }
  unint64_t v31 = *(void *)(v37 + 8 * v33);
  if (v31)
  {
    int64_t v32 = v11 + 3;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v32 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v32 >= v38) {
      goto LABEL_23;
    }
    unint64_t v31 = *(void *)(v37 + 8 * v32);
    ++v33;
    if (v31) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1000EC234()
{
  uint64_t v43 = sub_1001BF7A0();
  uint64_t v45 = *(void *)(v43 - 8);
  __chkstk_darwin(v43, v1);
  uint64_t v42 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100003918(&qword_10020B778);
  uint64_t v37 = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = sub_1001C15A0();
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v46 = v4;
  if (!v5)
  {
    uint64_t result = swift_release();
    uint64_t v36 = v46;
    uint64_t v35 = v37;
LABEL_25:
    *uint64_t v35 = v36;
    return result;
  }
  uint64_t v6 = v4;
  uint64_t v7 = (char *)(v4 + 64);
  uint64_t v8 = (char *)(v3 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  uint64_t v38 = v3 + 64;
  if (v6 != v3 || v7 >= &v8[8 * v9])
  {
    memmove(v7, v8, 8 * v9);
    uint64_t v6 = v46;
  }
  int64_t v10 = 0;
  *(void *)(v6 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v44 = v3;
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  uint64_t v41 = v45 + 16;
  int64_t v39 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v40 = v45 + 32;
  uint64_t v14 = v45;
  uint64_t v15 = v42;
  uint64_t v16 = v43;
  while (1)
  {
    if (v13)
    {
      uint64_t v47 = (v13 - 1) & v13;
      int64_t v48 = v10;
      unint64_t v17 = __clz(__rbit64(v13)) | (v10 << 6);
      uint64_t result = v44;
      goto LABEL_9;
    }
    int64_t v31 = v10 + 1;
    uint64_t result = v44;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v31 >= v39) {
      goto LABEL_23;
    }
    unint64_t v32 = *(void *)(v38 + 8 * v31);
    int64_t v33 = v10 + 1;
    if (!v32)
    {
      int64_t v33 = v10 + 2;
      if (v10 + 2 >= v39) {
        goto LABEL_23;
      }
      unint64_t v32 = *(void *)(v38 + 8 * v33);
      if (!v32) {
        break;
      }
    }
LABEL_22:
    uint64_t v47 = (v32 - 1) & v32;
    int64_t v48 = v33;
    unint64_t v17 = __clz(__rbit64(v32)) + (v33 << 6);
LABEL_9:
    uint64_t v19 = 56 * v17;
    uint64_t v20 = *(void *)(result + 48) + 56 * v17;
    uint64_t v21 = *(void *)v20;
    uint64_t v22 = *(void *)(v20 + 8);
    uint64_t v23 = *(void *)(v20 + 16);
    uint64_t v24 = *(void *)(v20 + 24);
    uint64_t v25 = *(void *)(v20 + 32);
    unint64_t v26 = *(void *)(v14 + 72) * v17;
    unint64_t v27 = *(void *)(result + 56) + v26;
    uint64_t v28 = *(void (**)(char *, unint64_t, uint64_t))(v14 + 16);
    long long v49 = *(_OWORD *)(v20 + 40);
    v28(v15, v27, v16);
    uint64_t v29 = v46;
    uint64_t v30 = *(void *)(v46 + 48) + v19;
    *(void *)uint64_t v30 = v21;
    *(void *)(v30 + 8) = v22;
    *(void *)(v30 + 16) = v23;
    *(void *)(v30 + 24) = v24;
    *(void *)(v30 + 32) = v25;
    *(_OWORD *)(v30 + 40) = v49;
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(void *)(v29 + 56) + v26, v15, v16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v13 = v47;
    int64_t v10 = v48;
  }
  uint64_t v34 = v10 + 3;
  if (v10 + 3 >= v39)
  {
LABEL_23:
    uint64_t result = swift_release();
    uint64_t v35 = v37;
    uint64_t v36 = v46;
    goto LABEL_25;
  }
  unint64_t v32 = *(void *)(v38 + 8 * v34);
  if (v32)
  {
    int64_t v33 = v10 + 3;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v33 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v33 >= v39) {
      goto LABEL_23;
    }
    unint64_t v32 = *(void *)(v38 + 8 * v33);
    ++v34;
    if (v32) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1000EC568()
{
  uint64_t v1 = v0;
  sub_100003918(&qword_10020B7B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1001C15A0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v24 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    uint64_t v20 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v20 = v19;
    v20[1] = v18;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v24;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)sub_100007B14(v24, *((unint64_t *)&v24 + 1));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000EC730()
{
  uint64_t v1 = v0;
  sub_100003918(&qword_1002087C0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1001C15A0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    int64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v23 = v19;
    v23[1] = v18;
    long long v24 = (void *)(*(void *)(v4 + 56) + v16);
    void *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000EC8EC()
{
  uint64_t v1 = type metadata accessor for ValidatedAttestation();
  uint64_t v28 = *(void *)(v1 - 8);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100003918(&qword_10020B7A8);
  int64_t v25 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1001C15A0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    *int64_t v25 = v7;
    return result;
  }
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v26 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v27 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v22 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v22 >= v27) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v26 + 8 * v22);
    ++v10;
    if (!v23)
    {
      int64_t v10 = v22 + 1;
      if (v22 + 1 >= v27) {
        goto LABEL_23;
      }
      unint64_t v23 = *(void *)(v26 + 8 * v10);
      if (!v23) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v10 << 6);
LABEL_9:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    unint64_t v20 = *(void *)(v28 + 72) * v15;
    sub_1000EF21C(*(void *)(v5 + 56) + v20, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
    uint64_t v21 = (void *)(*(void *)(v7 + 48) + v16);
    *uint64_t v21 = v18;
    v21[1] = v19;
    sub_1000EF284((uint64_t)v4, *(void *)(v7 + 56) + v20, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v27) {
    goto LABEL_23;
  }
  unint64_t v23 = *(void *)(v26 + 8 * v24);
  if (v23)
  {
    int64_t v10 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v10 >= v27) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v26 + 8 * v10);
    ++v24;
    if (v23) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

char *sub_1000ECB70()
{
  uint64_t v1 = type metadata accessor for SessionLog.Element();
  uint64_t v42 = *(void *)(v1 - 8);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v41 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_1001BF310();
  uint64_t v4 = *(void *)(v40 - 8);
  __chkstk_darwin(v40, v5);
  int64_t v39 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100003918(&qword_1002087A8);
  uint64_t v34 = v0;
  uint64_t v7 = *v0;
  uint64_t v8 = sub_1001C15A0();
  uint64_t v9 = *(void *)(v7 + 16);
  uint64_t v44 = v8;
  if (!v9)
  {
    uint64_t result = (char *)swift_release();
    uint64_t v32 = v44;
    int64_t v31 = v34;
LABEL_25:
    uint64_t *v31 = v32;
    return result;
  }
  uint64_t v10 = v8;
  uint64_t result = (char *)(v8 + 64);
  uint64_t v12 = (char *)(v7 + 64);
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v10 + 32)) + 63) >> 6;
  uint64_t v35 = v7 + 64;
  if (v10 != v7 || result >= &v12[8 * v13])
  {
    uint64_t result = (char *)memmove(result, v12, 8 * v13);
    uint64_t v10 = v44;
  }
  int64_t v14 = 0;
  *(void *)(v10 + 16) = *(void *)(v7 + 16);
  uint64_t v15 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v43 = v7;
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(v7 + 64);
  uint64_t v38 = v4 + 16;
  int64_t v36 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v37 = v4 + 32;
  uint64_t v19 = v39;
  uint64_t v18 = v40;
  uint64_t v20 = (uint64_t)v41;
  for (uint64_t i = v44;
        ;
        uint64_t result = (char *)sub_1000EF284(v20, *(void *)(i + 56) + v27, (uint64_t (*)(void))type metadata accessor for SessionLog.Element))
  {
    if (v17)
    {
      unint64_t v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v23 = v22 | (v14 << 6);
      uint64_t v24 = v43;
      goto LABEL_9;
    }
    int64_t v28 = v14 + 1;
    uint64_t v24 = v43;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v28 >= v36) {
      goto LABEL_23;
    }
    unint64_t v29 = *(void *)(v35 + 8 * v28);
    ++v14;
    if (!v29)
    {
      int64_t v14 = v28 + 1;
      if (v28 + 1 >= v36) {
        goto LABEL_23;
      }
      unint64_t v29 = *(void *)(v35 + 8 * v14);
      if (!v29) {
        break;
      }
    }
LABEL_22:
    unint64_t v17 = (v29 - 1) & v29;
    unint64_t v23 = __clz(__rbit64(v29)) + (v14 << 6);
LABEL_9:
    unint64_t v25 = *(void *)(v4 + 72) * v23;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v19, *(void *)(v24 + 48) + v25, v18);
    uint64_t v26 = *(void *)(v24 + 56);
    unint64_t v27 = *(void *)(v42 + 72) * v23;
    sub_1000EF21C(v26 + v27, v20, (uint64_t (*)(void))type metadata accessor for SessionLog.Element);
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(void *)(i + 48) + v25, v19, v18);
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v36)
  {
LABEL_23:
    uint64_t result = (char *)swift_release();
    int64_t v31 = v34;
    uint64_t v32 = v44;
    goto LABEL_25;
  }
  unint64_t v29 = *(void *)(v35 + 8 * v30);
  if (v29)
  {
    int64_t v14 = v30;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v14 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v14 >= v36) {
      goto LABEL_23;
    }
    unint64_t v29 = *(void *)(v35 + 8 * v14);
    ++v30;
    if (v29) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1000ECEE4()
{
  uint64_t v44 = sub_100003918(&qword_100208640);
  uint64_t v47 = *(void *)(v44 - 8);
  __chkstk_darwin(v44, v1);
  uint64_t v43 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_1001BF310();
  uint64_t v46 = *(void *)(v42 - 8);
  __chkstk_darwin(v42, v3);
  uint64_t v41 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100003918(&qword_10020B798);
  uint64_t v34 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1001C15A0();
  uint64_t v7 = *(void *)(v5 + 16);
  uint64_t v48 = v6;
  if (!v7)
  {
    uint64_t result = (void *)swift_release();
    uint64_t v33 = v48;
    uint64_t v32 = v34;
LABEL_25:
    *uint64_t v32 = v33;
    return result;
  }
  uint64_t v8 = v6;
  uint64_t result = (void *)(v6 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
  {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v10);
    uint64_t v8 = v48;
  }
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  uint64_t v45 = v5;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  uint64_t v35 = v5 + 64;
  int64_t v36 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v15 = v47;
  uint64_t v16 = v46;
  uint64_t v39 = v47 + 16;
  uint64_t v40 = v46 + 16;
  uint64_t v37 = v47 + 32;
  uint64_t v38 = v46 + 32;
  unint64_t v17 = v41;
  uint64_t v18 = v42;
  uint64_t v19 = v44;
  uint64_t v20 = v48;
  while (1)
  {
    if (v14)
    {
      unint64_t v21 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      int64_t v49 = v11;
      unint64_t v22 = v21 | (v11 << 6);
      uint64_t v23 = v45;
      goto LABEL_9;
    }
    int64_t v28 = v11 + 1;
    uint64_t v23 = v45;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v28 >= v36) {
      goto LABEL_23;
    }
    unint64_t v29 = *(void *)(v35 + 8 * v28);
    int64_t v30 = v11 + 1;
    if (!v29)
    {
      int64_t v30 = v28 + 1;
      if (v28 + 1 >= v36) {
        goto LABEL_23;
      }
      unint64_t v29 = *(void *)(v35 + 8 * v30);
      if (!v29) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v29 - 1) & v29;
    int64_t v49 = v30;
    unint64_t v22 = __clz(__rbit64(v29)) + (v30 << 6);
LABEL_9:
    unint64_t v24 = *(void *)(v16 + 72) * v22;
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v17, *(void *)(v23 + 48) + v24, v18);
    unint64_t v25 = *(void *)(v15 + 72) * v22;
    unint64_t v26 = *(void *)(v23 + 56) + v25;
    unint64_t v27 = v43;
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v43, v26, v19);
    (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(*(void *)(v20 + 48) + v24, v17, v18);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v15 + 32))(*(void *)(v20 + 56) + v25, v27, v19);
    int64_t v11 = v49;
  }
  int64_t v31 = v28 + 2;
  if (v31 >= v36)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v32 = v34;
    uint64_t v33 = v48;
    goto LABEL_25;
  }
  unint64_t v29 = *(void *)(v35 + 8 * v31);
  if (v29)
  {
    int64_t v30 = v31;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v30 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v30 >= v36) {
      goto LABEL_23;
    }
    unint64_t v29 = *(void *)(v35 + 8 * v30);
    ++v31;
    if (v29) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1000ED290()
{
  uint64_t v36 = sub_100003918(&qword_100208640);
  uint64_t v1 = *(void *)(v36 - 8);
  __chkstk_darwin(v36, v2);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100003918(&qword_10020B800);
  int64_t v31 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1001C15A0();
  uint64_t v7 = *(void *)(v5 + 16);
  uint64_t v37 = v6;
  if (!v7)
  {
    uint64_t result = (void *)swift_release();
    uint64_t v29 = v37;
    int64_t v28 = v31;
LABEL_25:
    *int64_t v28 = v29;
    return result;
  }
  uint64_t v8 = v6;
  uint64_t result = (void *)(v6 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
  {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v10);
    uint64_t v8 = v37;
  }
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  uint64_t v32 = v5 + 64;
  int64_t v33 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v34 = v1 + 32;
  uint64_t v35 = v1 + 16;
  uint64_t v15 = v36;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v25 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v25 >= v33) {
      goto LABEL_23;
    }
    unint64_t v26 = *(void *)(v32 + 8 * v25);
    ++v11;
    if (!v26)
    {
      int64_t v11 = v25 + 1;
      if (v25 + 1 >= v33) {
        goto LABEL_23;
      }
      unint64_t v26 = *(void *)(v32 + 8 * v11);
      if (!v26) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v26 - 1) & v26;
    unint64_t v17 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_9:
    uint64_t v18 = 16 * v17;
    uint64_t v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    unint64_t v22 = *(void *)(v1 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v4, *(void *)(v5 + 56) + v22, v15);
    uint64_t v23 = v37;
    unint64_t v24 = (void *)(*(void *)(v37 + 48) + v18);
    void *v24 = v20;
    v24[1] = v21;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v23 + 56) + v22, v4, v15);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    int64_t v28 = v31;
    uint64_t v29 = v37;
    goto LABEL_25;
  }
  unint64_t v26 = *(void *)(v32 + 8 * v27);
  if (v26)
  {
    int64_t v11 = v27;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v11 >= v33) {
      goto LABEL_23;
    }
    unint64_t v26 = *(void *)(v32 + 8 * v11);
    ++v27;
    if (v26) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1000ED558()
{
  uint64_t v1 = v0;
  sub_100003918(&qword_10020B748);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1001C15A0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    unint64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000ED708(uint64_t *a1)
{
  uint64_t v3 = sub_1001BF450();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  unint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100003918(a1);
  unint64_t v26 = v1;
  uint64_t v8 = *v1;
  uint64_t v9 = sub_1001C15A0();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v26 = v10;
    return result;
  }
  uint64_t result = (void *)(v9 + 64);
  unint64_t v12 = (unint64_t)((1 << *(unsigned char *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12) {
    uint64_t result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  }
  uint64_t v27 = v8 + 64;
  int64_t v14 = 0;
  *(void *)(v10 + 16) = *(void *)(v8 + 16);
  uint64_t v15 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(v8 + 64);
  uint64_t v30 = v4 + 16;
  int64_t v28 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v29 = v4 + 32;
  while (1)
  {
    if (v17)
    {
      unint64_t v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v19 = v18 | (v14 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v28) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v27 + 8 * v22);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v28) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v27 + 8 * v14);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v17 = (v23 - 1) & v23;
    unint64_t v19 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_12:
    char v20 = *(unsigned char *)(*(void *)(v8 + 48) + v19);
    unint64_t v21 = *(void *)(v4 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v7, *(void *)(v8 + 56) + v21, v3);
    *(unsigned char *)(*(void *)(v10 + 48) + v19) = v20;
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(void *)(v10 + 56) + v21, v7, v3);
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v28) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v27 + 8 * v24);
  if (v23)
  {
    int64_t v14 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v14 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v14 >= v28) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v27 + 8 * v14);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000ED990()
{
  uint64_t v1 = v0;
  sub_100003918(&qword_10020B750);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1001C15A0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      int64_t v9 = v27 + 1;
      if (v27 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v6 + 8 * v9);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    unint64_t v16 = v15 << 6;
    uint64_t v17 = 8 * v15;
    unint64_t v18 = v16 - v17;
    unint64_t v19 = *(void *)(v2 + 48) + v18;
    uint64_t v20 = *(void *)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
    uint64_t v22 = *(void *)(v19 + 24);
    uint64_t v23 = *(void *)(v19 + 32);
    uint64_t v24 = *(void *)(*(void *)(v2 + 56) + v17);
    unint64_t v25 = *(void *)(v4 + 48) + v18;
    long long v26 = *(_OWORD *)(v19 + 40);
    *(void *)unint64_t v25 = *(void *)v19;
    *(void *)(v25 + 8) = v20;
    *(void *)(v25 + 16) = v21;
    *(void *)(v25 + 24) = v22;
    *(void *)(v25 + 32) = v23;
    *(_OWORD *)(v25 + 40) = v26;
    *(void *)(*(void *)(v4 + 56) + v17) = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v13) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v6 + 8 * v29);
  if (v28)
  {
    int64_t v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v9);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000EDB88()
{
  uint64_t v1 = v0;
  sub_100003918(&qword_10020B8E8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1001C15A0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 24 * v15;
    uint64_t v19 = *(void *)v17;
    uint64_t v18 = *(void *)(v17 + 8);
    LOBYTE(v17) = *(unsigned char *)(v17 + 16);
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v22 = v19;
    *(void *)(v22 + 8) = v18;
    *(unsigned char *)(v22 + 16) = v17;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_retain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000EDD4C()
{
  uint64_t v36 = sub_1001BF450();
  uint64_t v1 = *(void *)(v36 - 8);
  __chkstk_darwin(v36, v2);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100003918(&qword_10020B8D0);
  int64_t v31 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1001C15A0();
  uint64_t v7 = *(void *)(v5 + 16);
  uint64_t v37 = v6;
  if (!v7)
  {
    uint64_t result = (void *)swift_release();
    uint64_t v29 = v37;
    unint64_t v28 = v31;
LABEL_25:
    *unint64_t v28 = v29;
    return result;
  }
  uint64_t v8 = v6;
  uint64_t result = (void *)(v6 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
  {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v10);
    uint64_t v8 = v37;
  }
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  uint64_t v32 = v5 + 64;
  int64_t v33 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v34 = v1 + 32;
  uint64_t v35 = v1 + 16;
  uint64_t v15 = v36;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v25 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v25 >= v33) {
      goto LABEL_23;
    }
    unint64_t v26 = *(void *)(v32 + 8 * v25);
    ++v11;
    if (!v26)
    {
      int64_t v11 = v25 + 1;
      if (v25 + 1 >= v33) {
        goto LABEL_23;
      }
      unint64_t v26 = *(void *)(v32 + 8 * v11);
      if (!v26) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v26 - 1) & v26;
    unint64_t v17 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_9:
    uint64_t v18 = 16 * v17;
    uint64_t v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    unint64_t v22 = *(void *)(v1 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v4, *(void *)(v5 + 56) + v22, v15);
    uint64_t v23 = v37;
    unint64_t v24 = (void *)(*(void *)(v37 + 48) + v18);
    void *v24 = v20;
    v24[1] = v21;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v23 + 56) + v22, v4, v15);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    unint64_t v28 = v31;
    uint64_t v29 = v37;
    goto LABEL_25;
  }
  unint64_t v26 = *(void *)(v32 + 8 * v27);
  if (v26)
  {
    int64_t v11 = v27;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v11 >= v33) {
      goto LABEL_23;
    }
    unint64_t v26 = *(void *)(v32 + 8 * v11);
    ++v27;
    if (v26) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1000EE010()
{
  uint64_t v1 = sub_1001BF310();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100003918(&qword_10020B828);
  unint64_t v24 = v0;
  uint64_t v6 = *v0;
  uint64_t v7 = sub_1001C15A0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t *v24 = v8;
    return result;
  }
  uint64_t result = (void *)(v7 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  }
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 64);
  uint64_t v25 = v6 + 64;
  int64_t v26 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v27 = v2 + 32;
  uint64_t v28 = v2 + 16;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v20 >= v26) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      int64_t v11 = v20 + 1;
      if (v20 + 1 >= v26) {
        goto LABEL_23;
      }
      unint64_t v21 = *(void *)(v25 + 8 * v11);
      if (!v21) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v5, *(void *)(v6 + 48) + v17, v1);
    uint64_t v18 = 8 * v16;
    uint64_t v19 = *(void *)(*(void *)(v6 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v8 + 48) + v17, v5, v1);
    *(void *)(*(void *)(v8 + 56) + v18) = v19;
    uint64_t result = (void *)swift_retain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v26) {
    goto LABEL_23;
  }
  unint64_t v21 = *(void *)(v25 + 8 * v22);
  if (v21)
  {
    int64_t v11 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v11 >= v26) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v11);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1000EE2A8()
{
  sub_100003918(&qword_10020B818);
  uint64_t v34 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1001C15A0();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v34 = v3;
    return result;
  }
  uint64_t result = (void *)(v2 + 64);
  uint64_t v5 = v1 + 64;
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6) {
    uint64_t result = memmove(result, (const void *)(v1 + 64), 8 * v6);
  }
  int64_t v8 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    int64_t v31 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v31 >= v12) {
      goto LABEL_26;
    }
    unint64_t v32 = *(void *)(v5 + 8 * v31);
    ++v8;
    if (!v32)
    {
      int64_t v8 = v31 + 1;
      if (v31 + 1 >= v12) {
        goto LABEL_26;
      }
      unint64_t v32 = *(void *)(v5 + 8 * v8);
      if (!v32) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v32 - 1) & v32;
    unint64_t v14 = __clz(__rbit64(v32)) + (v8 << 6);
LABEL_12:
    uint64_t v15 = 16 * v14;
    unint64_t v16 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v14);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    uint64_t v19 = 120 * v14;
    uint64_t v20 = *(void *)(v1 + 56) + v19;
    unint64_t v21 = *(void *)v20;
    uint64_t v22 = *(void *)(v20 + 24);
    uint64_t v23 = *(void *)(v20 + 32);
    uint64_t v24 = *(void *)(v20 + 56);
    uint64_t v25 = *(void *)(v20 + 112);
    int64_t v26 = (void *)(*(void *)(v3 + 48) + v15);
    long long v27 = *(_OWORD *)(v20 + 8);
    long long v35 = *(_OWORD *)(v20 + 40);
    long long v28 = *(_OWORD *)(v20 + 80);
    long long v36 = *(_OWORD *)(v20 + 64);
    long long v29 = *(_OWORD *)(v20 + 96);
    void *v26 = v18;
    v26[1] = v17;
    uint64_t v30 = *(void *)(v3 + 56) + v19;
    *(void *)uint64_t v30 = v21;
    *(_OWORD *)(v30 + 8) = v27;
    *(void *)(v30 + 24) = v22;
    *(void *)(v30 + 32) = v23;
    *(_OWORD *)(v30 + 40) = v35;
    *(void *)(v30 + 56) = v24;
    *(_OWORD *)(v30 + 64) = v36;
    *(_OWORD *)(v30 + 80) = v28;
    *(_OWORD *)(v30 + 96) = v29;
    *(void *)(v30 + 112) = v25;
    swift_bridgeObjectRetain();
    sub_10002C9AC(v21);
    swift_bridgeObjectRetain();
    sub_10000D9E0(v23, v35);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v33 = v31 + 2;
  if (v33 >= v12) {
    goto LABEL_26;
  }
  unint64_t v32 = *(void *)(v5 + 8 * v33);
  if (v32)
  {
    int64_t v8 = v33;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v8 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_26;
    }
    unint64_t v32 = *(void *)(v5 + 8 * v8);
    ++v33;
    if (v32) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

char *sub_1000EE520(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_1001C15D0();
  __break(1u);
  return result;
}

uint64_t sub_1000EE608(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1001C15D0();
  __break(1u);
  return result;
}

uint64_t sub_1000EE6FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1001C15D0();
  __break(1u);
  return result;
}

uint64_t sub_1000EE7F0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_100003918(&qword_100208C98);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1001C15D0();
  __break(1u);
  return result;
}

uint64_t sub_1000EE8FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(sub_100003918(qword_10020CE78) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_1001C15D0();
  __break(1u);
  return result;
}

void sub_1000EEA58(uint64_t a1)
{
  if (a1)
  {
    uint64_t v2 = a1;
    if (a1 < 0)
    {
      uint64_t v2 = -a1;
      if (__OFSUB__(0, a1)) {
        goto LABEL_17;
      }
    }
    double v3 = log10((double)v2);
    if ((~*(void *)&v3 & 0x7FF0000000000000) != 0)
    {
      if (v3 > -9.22337204e18)
      {
        if (v3 < 9.22337204e18)
        {
          double v4 = __exp10((double)(uint64_t)v3);
          double v5 = v4 * round((double)a1 / v4);
          if ((~*(void *)&v5 & 0x7FF0000000000000) != 0)
          {
            if (v5 > -9.22337204e18)
            {
              if (v5 < 9.22337204e18) {
                return;
              }
              goto LABEL_16;
            }
LABEL_15:
            __break(1u);
LABEL_16:
            __break(1u);
LABEL_17:
            __break(1u);
            return;
          }
LABEL_14:
          __break(1u);
          goto LABEL_15;
        }
LABEL_13:
        __break(1u);
        goto LABEL_14;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_13;
  }
}

uint64_t sub_1000EEB38(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1001C15D0();
  __break(1u);
  return result;
}

uint64_t _s20privatecloudcomputed19NodeReceivingSourceO8rawValueACSgSS_tcfC_0(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1001FBCD8;
  v6._object = a2;
  unint64_t v4 = sub_1001C15E0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

unint64_t sub_1000EEC80()
{
  unint64_t result = qword_10020D0D8;
  if (!qword_10020D0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020D0D8);
  }
  return result;
}

uint64_t sub_1000EECD4()
{
  return sub_100016710(&qword_10020D0E0, qword_10020D0E8);
}

ValueMetadata *type metadata accessor for NodeReceivingSource()
{
  return &type metadata for NodeReceivingSource;
}

uint64_t sub_1000EED28()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1001C0340();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t type metadata accessor for NodeDistributionAnalyzer()
{
  return sub_10000E738();
}

unint64_t sub_1000EEE40()
{
  unint64_t result = qword_10020D188;
  if (!qword_10020D188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020D188);
  }
  return result;
}

uint64_t sub_1000EEE94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100003918(&qword_10020D198);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for NodeDistributionAnalyzer.NodeDistribution()
{
  return sub_10000E738();
}

uint64_t sub_1000EEF14(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

unint64_t sub_1000EEF24()
{
  unint64_t result = qword_10020D1B0;
  if (!qword_10020D1B0)
  {
    sub_1000166C8(&qword_10020D1A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020D1B0);
  }
  return result;
}

uint64_t sub_1000EEF90()
{
  return 3;
}

uint64_t sub_1000EEF98(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1001C15D0();
  __break(1u);
  return result;
}

uint64_t sub_1000EF0F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

unint64_t sub_1000EF15C()
{
  unint64_t result = qword_1002087B0;
  if (!qword_1002087B0)
  {
    sub_1001BF310();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002087B0);
  }
  return result;
}

uint64_t sub_1000EF1B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100003918(&qword_10020D1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000EF21C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000EF284(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1000EF2EC()
{
  unint64_t result = qword_10020D200;
  if (!qword_10020D200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020D200);
  }
  return result;
}

uint64_t sub_1000EF340(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000EF378()
{
  return swift_bridgeObjectRelease();
}

void *sub_1000EF380(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 sub_1000EF3CC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t sub_1000EF3E0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000EF41C(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1000EF464(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for NodeDistributionAnalyzer.NodeDistribution.CodingKeys()
{
  return sub_10000E738();
}

uint64_t sub_1000EF4BC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000166C8(&qword_10020D290);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *_s20privatecloudcomputed19NodeReceivingSourceOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000EF5F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_1000EF618()
{
  return swift_getWitnessTable();
}

uint64_t sub_1000EF634()
{
  return swift_getWitnessTable();
}

uint64_t sub_1000EF650()
{
  return swift_getWitnessTable();
}

uint64_t sub_1000EF670(uint64_t a1, uint64_t a2)
{
  uint64_t v26 = a2;
  uint64_t v2 = sub_1001BEFF0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  unsigned int v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1001BF0B0();
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  uint64_t v9 = __chkstk_darwin(v7, v8);
  uint64_t v23 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v11);
  unint64_t v13 = (char *)&v23 - v12;
  uint64_t v27 = 0x656863616375726CLL;
  unint64_t v28 = 0xEF7473696C702E33;
  uint64_t v14 = enum case for URL.DirectoryHint.inferFromPath(_:);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v15(v6, enum case for URL.DirectoryHint.inferFromPath(_:), v2);
  sub_10001A364();
  sub_1001BF0A0();
  unint64_t v16 = *(void (**)(char *, uint64_t))(v3 + 8);
  v16(v6, v2);
  swift_bridgeObjectRelease();
  uint64_t v27 = 0x656863616375726CLL;
  unint64_t v28 = 0xEF7473696C702E33;
  v15(v6, v14, v2);
  uint64_t v17 = (uint64_t)v23;
  sub_1001BF0A0();
  v16(v6, v2);
  swift_bridgeObjectRelease();
  uint64_t v18 = v17;
  sub_1000EF924((uint64_t)v13, v17);
  uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
  uint64_t v20 = v18;
  uint64_t v21 = v25;
  v19(v20, v25);
  return ((uint64_t (*)(char *, uint64_t))v19)(v13, v21);
}

void sub_1000EF924(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BF0B0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = &v54[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7, v10);
  uint64_t v12 = &v54[-v11];
  uint64_t v13 = sub_1001BF8E0();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = &v54[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = sub_1001C0340();
  uint64_t v61 = *(void *)(v18 - 8);
  uint64_t v62 = v18;
  __chkstk_darwin(v18, v19);
  uint64_t v21 = &v54[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, void, uint64_t))(v14 + 104))(v17, enum case for TC2LogCategory.daemon(_:), v13);
  sub_1001BFDD0();
  (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v17, v13);
  id v60 = [self defaultManager];
  uint64_t v22 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v58 = a1;
  v22(v12, a1, v4);
  uint64_t v57 = v9;
  uint64_t v59 = a2;
  v22(v9, a2, v4);
  unint64_t v63 = v21;
  uint64_t v23 = sub_1001C0330();
  os_log_type_t v24 = sub_1001C11E0();
  int v25 = v24;
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v26 = swift_slowAlloc();
    int v55 = v25;
    uint64_t v27 = v26;
    uint64_t v56 = (void *)swift_slowAlloc();
    id v65 = v56;
    *(_DWORD *)uint64_t v27 = 136315394;
    sub_1000F2340();
    uint64_t v28 = sub_1001C1780();
    uint64_t v64 = sub_1000DF238(v28, v29, (uint64_t *)&v65);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    uint64_t v30 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
    v30(v12, v4);
    *(_WORD *)(v27 + 12) = 2080;
    int64_t v31 = v57;
    uint64_t v32 = sub_1001C1780();
    uint64_t v64 = sub_1000DF238(v32, v33, (uint64_t *)&v65);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    v30(v31, v4);
    _os_log_impl((void *)&_mh_execute_header, v23, (os_log_type_t)v55, "migrating file source=%s destination=%s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    long long v35 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
    v35(v12, v4);
    v35(v57, v4);
  }
  sub_1001BF020(v34);
  uint64_t v37 = v36;
  sub_1001BF020(v38);
  uint64_t v40 = v39;
  id v65 = 0;
  id v41 = v60;
  unsigned int v42 = [v60 moveItemAtURL:v37 toURL:v39 error:&v65];

  uint64_t v43 = v63;
  if (v42)
  {
    uint64_t v44 = *(void (**)(unsigned char *, uint64_t))(v61 + 8);
    id v45 = v65;
    v44(v43, v62);
  }
  else
  {
    id v46 = v65;
    sub_1001BEFE0();

    swift_willThrow();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v47 = sub_1001C0330();
    int v48 = sub_1001C11F0();
    if (os_log_type_enabled(v47, (os_log_type_t)v48))
    {
      int64_t v49 = (uint8_t *)swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      uint64_t v51 = v61;
      uint64_t v52 = (void *)v50;
      *(_DWORD *)int64_t v49 = 138412290;
      swift_errorRetain();
      int v53 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v65 = v53;
      sub_1001C1310();
      *uint64_t v52 = v53;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v47, (os_log_type_t)v48, "migration failed error=%@", v49, 0xCu);
      sub_100003918(&qword_100207DA8);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      (*(void (**)(unsigned char *, uint64_t))(v51 + 8))(v63, v62);
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(unsigned char *, uint64_t))(v61 + 8))(v43, v62);
    }
  }
}

uint64_t *blockingIOQueue.unsafeMutableAddressor()
{
  if (qword_100207988 != -1) {
    swift_once();
  }
  return &blockingIOQueue;
}

uint64_t sub_1000EFFEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v120 = a3;
  uint64_t v115 = a2;
  uint64_t v112 = a1;
  uint64_t v111 = sub_1001BEFF0();
  uint64_t v103 = *(void *)(v111 - 8);
  __chkstk_darwin(v111, v3);
  uint64_t v5 = (char *)&v102 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100003918(&qword_10020C370);
  uint64_t v8 = __chkstk_darwin(v6 - 8, v7);
  uint64_t v105 = (uint64_t)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8, v10);
  uint64_t v116 = (uint64_t)&v102 - v12;
  uint64_t v14 = __chkstk_darwin(v11, v13);
  uint64_t v108 = (char *)&v102 - v15;
  uint64_t v17 = __chkstk_darwin(v14, v16);
  uint64_t v106 = (uint64_t)&v102 - v18;
  uint64_t v20 = __chkstk_darwin(v17, v19);
  uint64_t v117 = (char *)&v102 - v21;
  uint64_t v23 = __chkstk_darwin(v20, v22);
  int v25 = (char *)&v102 - v24;
  __chkstk_darwin(v23, v26);
  char v119 = (char *)&v102 - v27;
  uint64_t v28 = sub_1001BF0B0();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v31 = __chkstk_darwin(v28, v30);
  uint64_t v107 = (char *)&v102 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __chkstk_darwin(v31, v33);
  uint64_t v104 = (char *)&v102 - v35;
  uint64_t v37 = __chkstk_darwin(v34, v36);
  uint64_t v121 = (uint64_t)&v102 - v38;
  uint64_t v40 = __chkstk_darwin(v37, v39);
  unsigned int v42 = (char *)&v102 - v41;
  __chkstk_darwin(v40, v43);
  id v45 = (char *)&v102 - v44;
  uint64_t v46 = sub_1001BF8E0();
  uint64_t v47 = *(void *)(v46 - 8);
  __chkstk_darwin(v46, v48);
  uint64_t v50 = (char *)&v102 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_1001C0340();
  uint64_t v109 = *(void *)(v51 - 8);
  uint64_t v110 = v51;
  __chkstk_darwin(v51, v52);
  uint64_t v54 = (char *)&v102 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v47 + 104))(v50, enum case for TC2LogCategory.daemon(_:), v46);
  uint64_t v118 = v54;
  sub_1001BFDD0();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v50, v46);
  int v55 = (char *)[self defaultManager];
  sub_10001A2FC(v120, (uint64_t)v25);
  uint64_t v113 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
  uint64_t v114 = v29 + 48;
  int v56 = v113(v25, 1, v28);
  uint64_t v120 = v29;
  if (v56 != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v42, v25, v28);
    uint64_t v123 = 0x7972617262694CLL;
    unint64_t v124 = 0xE700000000000000;
    uint64_t v65 = v103;
    uint64_t v66 = v111;
    (*(void (**)(char *, void, uint64_t))(v103 + 104))(v5, enum case for URL.DirectoryHint.isDirectory(_:), v111);
    sub_10001A364();
    sub_1001BF0A0();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v5, v66);
    swift_bridgeObjectRelease();
    uint64_t v123 = 0;
    uint64_t v67 = v55;
    id v68 = [v55 URLForDirectory:5 inDomain:1 appropriateForURL:0 create:1 error:&v123];
    id v69 = (id)v123;
    if (v68)
    {
      unint64_t v70 = v68;
      uint64_t v71 = v117;
      sub_1001BF050();
      id v72 = v69;

      (*(void (**)(char *, uint64_t))(v29 + 8))(v42, v28);
      uint64_t v61 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56);
      v61(v71, 0, 1, v28);
      uint64_t v73 = (uint64_t)v71;
      uint64_t v62 = (uint64_t)v119;
      sub_10001A3B8(v73, (uint64_t)v119);
      unint64_t v63 = v118;
      uint64_t v64 = v115;
      int v55 = v67;
      goto LABEL_6;
    }
LABEL_18:
    id v100 = (id)v123;
    uint64_t v101 = sub_1001BEFE0();

    swift_willThrow();
    uint64_t v123 = 0;
    unint64_t v124 = 0xE000000000000000;
    sub_1001C1420(44);
    v125._object = (void *)0x80000001001C55E0;
    v125._countAndFlagsBits = 0xD00000000000002ALL;
    sub_1001C0D00(v125);
    uint64_t v122 = v101;
    sub_100003918(&qword_100208C98);
    sub_1001C1510();
    uint64_t result = sub_1001C1580();
    __break(1u);
    return result;
  }
  sub_10001A29C((uint64_t)v25);
  uint64_t v123 = 0;
  id v57 = [v55 URLForDirectory:5 inDomain:1 appropriateForURL:0 create:1 error:&v123];
  id v58 = (id)v123;
  if (!v57) {
    goto LABEL_18;
  }
  uint64_t v59 = v57;
  sub_1001BF050();
  id v60 = v58;

  uint64_t v61 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56);
  uint64_t v62 = (uint64_t)v119;
  v61(v119, 1, 1, v28);
  unint64_t v63 = v118;
  uint64_t v64 = v115;
LABEL_6:
  uint64_t v111 = (uint64_t)v45;
  sub_1000F2044(v55, v121);
  uint64_t v74 = v106;
  sub_10001A2FC(v62, v106);
  uint64_t v75 = v108;
  sub_10001A2FC(v74, (uint64_t)v108);
  uint64_t v76 = 1;
  int v77 = v113(v75, 1, v28);
  uint64_t v117 = (char *)v28;
  if (v77 != 1)
  {
    uint64_t v78 = v120;
    uint64_t v79 = v104;
    (*(void (**)(char *, char *, char *))(v120 + 32))(v104, v75, v117);
    sub_1000F2044(v55, v64);
    uint64_t v80 = v78;
    uint64_t v28 = (uint64_t)v117;
    (*(void (**)(char *, char *))(v80 + 8))(v79, v117);
    uint64_t v76 = 0;
  }
  uint64_t v108 = v55;
  uint64_t v81 = v120;
  v61((char *)v64, v76, 1, v28);
  sub_10001A29C(v74);
  Swift::String v82 = v107;
  (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v107, v121, v28);
  uint64_t v83 = sub_1001C0330();
  os_log_type_t v84 = sub_1001C11E0();
  if (os_log_type_enabled(v83, v84))
  {
    double v85 = (uint8_t *)swift_slowAlloc();
    uint64_t v123 = swift_slowAlloc();
    *(_DWORD *)double v85 = 136315138;
    sub_1000F2340();
    uint64_t v86 = sub_1001C1780();
    uint64_t v122 = sub_1000DF238(v86, v87, &v123);
    uint64_t v64 = v115;
    sub_1001C1310();
    swift_bridgeObjectRelease();
    Swift::String v88 = *(void (**)(char *, uint64_t))(v81 + 8);
    v88(v82, v28);
    _os_log_impl((void *)&_mh_execute_header, v83, v84, "daemonDir=%s", v85, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v63 = v118;
  }
  else
  {

    Swift::String v88 = *(void (**)(char *, uint64_t))(v81 + 8);
    v88(v82, v28);
  }
  uint64_t v89 = v116;
  sub_10001A2FC(v64, v116);
  uint64_t v90 = sub_1001C0330();
  os_log_type_t v91 = sub_1001C11E0();
  if (os_log_type_enabled(v90, v91))
  {
    uint64_t v92 = (uint8_t *)swift_slowAlloc();
    uint64_t v123 = swift_slowAlloc();
    *(_DWORD *)uint64_t v92 = 136315138;
    uint64_t v93 = v105;
    sub_10001A2FC(v89, v105);
    os_log_type_t v94 = v117;
    if (v113((char *)v93, 1, (uint64_t)v117) == 1)
    {
      sub_10001A29C(v93);
      uint64_t v95 = 0;
      unint64_t v96 = 0xE000000000000000;
      uint64_t v97 = v120;
    }
    else
    {
      uint64_t v95 = sub_1001BF000();
      unint64_t v96 = v98;
      uint64_t v97 = v120;
      v88((char *)v93, (uint64_t)v94);
    }
    uint64_t v122 = sub_1000DF238(v95, v96, &v123);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    sub_10001A29C(v116);
    _os_log_impl((void *)&_mh_execute_header, v90, v91, "migrateFrom=%s", v92, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_10001A29C((uint64_t)v119);
    v88((char *)v111, (uint64_t)v94);
    (*(void (**)(char *, uint64_t))(v109 + 8))(v118, v110);
  }
  else
  {

    sub_10001A29C(v89);
    sub_10001A29C((uint64_t)v119);
    uint64_t v97 = v120;
    os_log_type_t v94 = v117;
    v88((char *)v111, (uint64_t)v117);
    (*(void (**)(char *, uint64_t))(v109 + 8))(v63, v110);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, char *))(v97 + 32))(v112, v121, v94);
}

uint64_t sub_1000F0C80(uint64_t a1, uint64_t a2)
{
  uint64_t v122 = a1;
  uint64_t v3 = sub_1001C0C30();
  uint64_t v117 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v112 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1001BF0B0();
  uint64_t v119 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7, v8);
  uint64_t v116 = (uint64_t)&v112 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9, v11);
  uint64_t v118 = (char *)&v112 - v13;
  uint64_t v15 = __chkstk_darwin(v12, v14);
  uint64_t v17 = (char *)&v112 - v16;
  __chkstk_darwin(v15, v18);
  uint64_t v20 = (char *)&v112 - v19;
  uint64_t v21 = sub_1001BF8E0();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21, v23);
  int v25 = (char *)&v112 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1001C0340();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v123 = v26;
  uint64_t v124 = v27;
  __chkstk_darwin(v26, v28);
  uint64_t v30 = (char *)&v112 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v22 + 104))(v25, enum case for TC2LogCategory.daemon(_:), v21);
  sub_1001BFDD0();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v21);
  id v31 = [self defaultManager];
  uint64_t v120 = a2;
  sub_1001BF020(v32);
  uint64_t v34 = v33;
  id v127 = 0;
  id v125 = v31;
  id v35 = [v31 contentsOfDirectoryAtURL:v33 includingPropertiesForKeys:0 options:0 error:&v127];

  id v36 = v127;
  if (!v35)
  {
    id v45 = v127;
    sub_1001BEFE0();

    swift_willThrow();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v46 = sub_1001C0330();
    os_log_type_t v47 = sub_1001C11F0();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc();
      uint64_t v49 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v48 = 138412290;
      swift_errorRetain();
      uint64_t v50 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v127 = v50;
      sub_1001C1310();
      *uint64_t v49 = v50;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "failed destination migration check error=%@", v48, 0xCu);
      sub_100003918(&qword_100207DA8);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v124 + 8))(v30, v123);
  }
  uint64_t v121 = v7;
  uint64_t v37 = sub_1001C0DF0();
  id v38 = v36;

  if (*(void *)(v37 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_1001C0330();
    os_log_type_t v40 = sub_1001C11E0();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      id v127 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v42 = sub_1001C0E00();
      unint64_t v44 = v43;
      swift_bridgeObjectRelease();
      uint64_t v126 = sub_1000DF238(v42, v44, (uint64_t *)&v127);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "skipping migration due to destinationContents=%s", v41, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v124 + 8))(v30, v123);
  }
  swift_bridgeObjectRelease();
  sub_1001BF020(v51);
  uint64_t v53 = v52;
  id v127 = 0;
  id v54 = [v125 contentsOfDirectoryAtURL:v52 includingPropertiesForKeys:0 options:0 error:&v127];

  id v55 = v127;
  uint64_t v115 = v30;
  if (!v54)
  {
    id v64 = v127;
    sub_1001BEFE0();

    swift_willThrow();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v65 = sub_1001C0330();
    os_log_type_t v66 = sub_1001C11F0();
    id v58 = v20;
    if (os_log_type_enabled(v65, v66))
    {
      os_log_t v113 = v65;
      uint64_t v67 = (uint8_t *)swift_slowAlloc();
      id v68 = (void *)swift_slowAlloc();
      uint64_t v114 = v58;
      *(_DWORD *)uint64_t v67 = 138412290;
      uint64_t v112 = v67 + 4;
      swift_errorRetain();
      id v69 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v127 = v69;
      sub_1001C1310();
      *id v68 = v69;
      swift_errorRelease();
      swift_errorRelease();
      os_log_t v70 = v113;
      _os_log_impl((void *)&_mh_execute_header, v113, v66, "failed source migration check error=%@", v67, 0xCu);
      sub_100003918(&qword_100207DA8);
      swift_arrayDestroy();
      swift_slowDealloc();
      id v58 = v114;
      swift_slowDealloc();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
    }
    swift_errorRelease();
    if (_swiftEmptyArrayStorage[2]) {
      goto LABEL_9;
    }
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v79 = sub_1001C0330();
    os_log_type_t v80 = sub_1001C11E0();
    if (os_log_type_enabled(v79, v80))
    {
      uint64_t v81 = (uint8_t *)swift_slowAlloc();
      id v127 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v81 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v82 = sub_1001C0E00();
      unint64_t v84 = v83;
      swift_bridgeObjectRelease();
      uint64_t v126 = sub_1000DF238(v82, v84, (uint64_t *)&v127);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v79, v80, "skipping migration due to sourceContents=%s", v81, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v124 + 8))(v115, v123);
  }
  uint64_t v56 = sub_1001C0DF0();
  id v57 = v55;

  id v58 = v20;
  if (!*(void *)(v56 + 16)) {
    goto LABEL_21;
  }
LABEL_9:
  swift_bridgeObjectRelease();
  sub_1001BF040();
  sub_1001C0C20();
  uint64_t v59 = sub_1001C0C00();
  unint64_t v61 = v60;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v117 + 8))(v6, v3);
  if (v61 >> 60 == 15)
  {
    __break(1u);
    return result;
  }
  sub_1001BF1A0();
  uint64_t v63 = v121;
  uint64_t v116 = v59;
  uint64_t v71 = v119;
  uint64_t v114 = *(char **)(v119 + 16);
  ((void (*)(char *, char *, uint64_t))v114)(v17, v58, v121);
  id v72 = sub_1001C0330();
  os_log_type_t v73 = sub_1001C11E0();
  if (os_log_type_enabled(v72, v73))
  {
    uint64_t v75 = (uint8_t *)swift_slowAlloc();
    id v127 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v75 = 136315138;
    sub_1000F2340();
    uint64_t v76 = sub_1001C1780();
    uint64_t v126 = sub_1000DF238(v76, v77, (uint64_t *)&v127);
    uint64_t v78 = v119;
    sub_1001C1310();
    swift_bridgeObjectRelease();
    uint64_t v117 = *(void *)(v78 + 8);
    ((void (*)(char *, uint64_t))v117)(v17, v121);
    _os_log_impl((void *)&_mh_execute_header, v72, v73, "wrote migrationSemaphoreFile=%s", v75, 0xCu);
    swift_arrayDestroy();
    uint64_t v63 = v121;
    swift_slowDealloc();
    swift_slowDealloc();
    sub_100007918(v116, v61);
  }
  else
  {
    sub_100007918(v116, v61);

    uint64_t v117 = *(void *)(v71 + 8);
    ((void (*)(char *, uint64_t))v117)(v17, v63);
  }
  double v85 = v118;
  uint64_t v86 = v122;
  unint64_t v87 = v114;
  uint64_t v88 = v120;
  sub_10003743C(v122, v120);
  sub_10009A260(v86, v88);
  sub_10016CC08(v86, v88);
  sub_1000EF670(v86, v88);
  sub_1000D1490(v86, v88);
  sub_1001BF020(v89);
  os_log_type_t v91 = v90;
  id v127 = 0;
  unsigned int v92 = [v125 removeItemAtURL:v90 error:&v127];

  id v93 = v127;
  if (v92)
  {
    ((void (*)(char *, uint64_t, uint64_t))v87)(v85, v86, v63);
    id v94 = v93;
    uint64_t v95 = sub_1001C0330();
    os_log_type_t v96 = sub_1001C11E0();
    if (os_log_type_enabled(v95, v96))
    {
      uint64_t v97 = (uint8_t *)swift_slowAlloc();
      id v127 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v97 = 136315138;
      uint64_t v114 = v58;
      sub_1000F2340();
      uint64_t v98 = sub_1001C1780();
      uint64_t v126 = sub_1000DF238(v98, v99, (uint64_t *)&v127);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      id v100 = v85;
      uint64_t v101 = (void (*)(char *, uint64_t))v117;
      ((void (*)(char *, uint64_t))v117)(v100, v63);
      _os_log_impl((void *)&_mh_execute_header, v95, v96, "deleted migration source=%s", v97, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v101(v114, v63);
    }
    else
    {

      uint64_t v111 = (void (*)(char *, uint64_t))v117;
      ((void (*)(char *, uint64_t))v117)(v85, v63);
      v111(v58, v63);
    }
  }
  else
  {
    id v102 = v127;
    sub_1001BEFE0();

    swift_willThrow();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v103 = sub_1001C0330();
    os_log_type_t v104 = sub_1001C11F0();
    if (os_log_type_enabled(v103, v104))
    {
      uint64_t v105 = (uint8_t *)swift_slowAlloc();
      uint64_t v106 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v105 = 138412290;
      swift_errorRetain();
      uint64_t v107 = v63;
      uint64_t v108 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v127 = v108;
      sub_1001C1310();
      *uint64_t v106 = v108;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v103, v104, "unable to delete migration source error=%@", v105, 0xCu);
      sub_100003918(&qword_100207DA8);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      uint64_t v109 = v58;
      uint64_t v110 = v107;
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
      uint64_t v109 = v58;
      uint64_t v110 = v63;
    }
    ((void (*)(char *, uint64_t))v117)(v109, v110);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v124 + 8))(v115, v123);
}

uint64_t sub_1000F1E9C()
{
  uint64_t v0 = sub_1001C1230();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1001C08B0();
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v7 = sub_1001C1220();
  __chkstk_darwin(v7 - 8, v8);
  sub_1000A0DDC();
  sub_1001C1210();
  sub_1001C08A0();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  uint64_t result = sub_1001C1260();
  blockingIOQueue = result;
  return result;
}

id sub_1000F2044@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1001BF0B0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v12 = (char *)v20 - v11;
  sub_1001BF070();
  sub_1001BF010();
  swift_bridgeObjectRelease();
  sub_1001BF030();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
  sub_1001BF020(v13);
  uint64_t v15 = v14;
  v21[0] = 0;
  LODWORD(a1) = [a1 createDirectoryAtURL:v14 withIntermediateDirectories:1 attributes:0 error:v21];

  v20[0] = (id)v21[0];
  if (a1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v12, v4);
    id v16 = v20[0];
    return v16;
  }
  else
  {
    id v18 = v20[0];
    uint64_t v19 = (void *)sub_1001BEFE0();

    swift_willThrow();
    v21[0] = 0;
    v21[1] = 0xE000000000000000;
    sub_1001C1420(43);
    v23._countAndFlagsBits = 0xD00000000000001FLL;
    v23._object = (void *)0x80000001001C5630;
    sub_1001C0D00(v23);
    sub_1000F2340();
    v24._countAndFlagsBits = sub_1001C1780();
    sub_1001C0D00(v24);
    swift_bridgeObjectRelease();
    v25._countAndFlagsBits = 0x3D726F72726520;
    v25._object = (void *)0xE700000000000000;
    sub_1001C0D00(v25);
    v20[1] = v19;
    sub_100003918(&qword_100208C98);
    sub_1001C1510();
    v26._countAndFlagsBits = 32;
    v26._object = (void *)0xE100000000000000;
    sub_1001C0D00(v26);
    id result = (id)sub_1001C1580();
    __break(1u);
  }
  return result;
}

unint64_t sub_1000F2340()
{
  unint64_t result = qword_10020BF20;
  if (!qword_10020BF20)
  {
    sub_1001BF0B0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020BF20);
  }
  return result;
}

Swift::Int sub_1000F2398()
{
  return sub_1001C1990();
}

unint64_t sub_1000F24A4(char a1)
{
  unint64_t result = 0xD000000000000023;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000026;
      break;
    case 2:
    case 3:
      unint64_t result = 0xD00000000000002DLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000036;
      break;
    case 5:
      unint64_t result = 0xD00000000000002FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PrivateCloudComputeEntitlement(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PrivateCloudComputeEntitlement(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000F26BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PrivateCloudComputeEntitlement()
{
  return &type metadata for PrivateCloudComputeEntitlement;
}

unint64_t sub_1000F26F8()
{
  unint64_t result = qword_10020D328;
  if (!qword_10020D328)
  {
    sub_1000166C8(&qword_10020D330);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020D328);
  }
  return result;
}

uint64_t sub_1000F2754(unsigned __int8 *a1, char *a2)
{
  return sub_1000E0070(*a1, *a2);
}

Swift::Int sub_1000F2760()
{
  return sub_1000F2398();
}

uint64_t sub_1000F2768()
{
  return sub_1000E06A8();
}

Swift::Int sub_1000F2770()
{
  return sub_1000E08B4();
}

uint64_t sub_1000F2778@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000F283C(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_1000F27A8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1000F24A4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1000F27D4(void *a1@<X8>)
{
  *a1 = &off_1001FBC48;
}

unint64_t sub_1000F27E8()
{
  unint64_t result = qword_10020D338;
  if (!qword_10020D338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10020D338);
  }
  return result;
}

uint64_t sub_1000F283C(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1001FBD90;
  v6._object = a2;
  unint64_t v4 = sub_1001C15E0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 6) {
    return 6;
  }
  else {
    return v4;
  }
}

uint64_t sub_1000F2888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  v4[9] = *(void *)(a2 - 8);
  v4[10] = swift_task_alloc();
  v4[11] = swift_task_alloc();
  v4[12] = swift_task_alloc();
  uint64_t v5 = sub_1001C0340();
  v4[13] = v5;
  v4[14] = *(void *)(v5 - 8);
  v4[15] = swift_task_alloc();
  v4[16] = swift_task_alloc();
  sub_100003918(&qword_10020C520);
  v4[17] = swift_task_alloc();
  uint64_t v6 = sub_1001BF470();
  v4[18] = v6;
  v4[19] = *(void *)(v6 - 8);
  v4[20] = swift_task_alloc();
  return _swift_task_switch(sub_1000F2A54, 0, 0);
}

uint64_t sub_1000F2A54()
{
  (*(void (**)(void))(v0[7] + 40))(v0[6]);
  if (!v1)
  {
    id v2 = [self mainBundle];
    id v3 = [v2 bundleIdentifier];

    if (v3)
    {
      sub_1001C0BF0();
    }
  }
  uint64_t v4 = v0[19];
  uint64_t v5 = v0[20];
  uint64_t v6 = v0[17];
  uint64_t v19 = v0[18];
  uint64_t v8 = v0[7];
  BOOL v7 = (uint64_t *)v0[8];
  uint64_t v9 = v0[6];
  sub_1001BF460();
  sub_1001BF490();
  uint64_t v10 = v7[1];
  uint64_t v20 = *v7;
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 32);
  v0[21] = v11;
  v0[22] = (v8 + 32) & 0xFFFFFFFFFFFFLL | 0x9400000000000000;
  uint64_t v12 = v11(v9, v8);
  uint64_t v14 = v13;
  v0[23] = v13;
  uint64_t v15 = sub_1000F34AC(v9, v8);
  v0[24] = v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v6, v5, v19);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v6, 0, 1, v19);
  id v16 = (void *)swift_task_alloc();
  v0[25] = v16;
  void *v16 = v0;
  v16[1] = sub_1000F2C74;
  uint64_t v17 = v0[17];
  return static Reporter.report(teamID:eventType:event:transportConfiguration:)(v20, v10, v12, v14, v15, v17);
}

uint64_t sub_1000F2C74()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 136);
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  sub_1000F3C88(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0) {
    id v3 = sub_1000F31C8;
  }
  else {
    id v3 = sub_1000F2DE4;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000F2DE4()
{
  os_log_type_t v47 = v0;
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[13];
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[12];
  os_log_t loga = (os_log_t)v0[11];
  uint64_t v6 = v0[8];
  uint64_t v7 = v0[9];
  uint64_t v8 = v0[6];
  uint64_t v9 = type metadata accessor for TC2MetricReporter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v6 + *(int *)(v9 + 20), v3);
  uint64_t v10 = *(void (**)(os_log_t, uint64_t, uint64_t))(v7 + 16);
  v10(v5, v1, v8);
  v10(loga, v1, v8);
  uint64_t v11 = sub_1001C0330();
  os_log_type_t v12 = sub_1001C1200();
  log = v11;
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))v0[21];
    uint64_t v41 = v0[18];
    uint64_t v42 = v0[20];
    uint64_t v39 = v0[16];
    uint64_t v40 = v0[19];
    uint64_t v14 = v0[12];
    uint64_t v37 = v0[14];
    uint64_t v38 = v0[13];
    uint64_t v35 = v0[11];
    os_log_type_t type = v12;
    uint64_t v15 = v0[9];
    uint64_t v16 = v0[6];
    uint64_t v17 = v0[7];
    uint64_t v18 = swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136315394;
    uint64_t v19 = v13(v16, v17);
    v0[3] = sub_1000DF238(v19, v20, &v46);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    v21(v14, v16);
    *(_WORD *)(v18 + 12) = 2080;
    sub_1000F34AC(v16, v17);
    v21(v35, v16);
    sub_1001BF450();
    uint64_t v22 = sub_1001C0B90();
    unint64_t v24 = v23;
    swift_bridgeObjectRelease();
    v0[4] = sub_1000DF238(v22, v24, &v46);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, log, type, "Logged metric %s with fields %s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v39, v38);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v42, v41);
  }
  else
  {
    uint64_t v25 = v0[19];
    uint64_t v43 = v0[20];
    uint64_t v26 = v0[18];
    uint64_t v27 = v0[16];
    uint64_t v28 = v0[13];
    uint64_t v29 = v0[14];
    uint64_t v30 = v0[12];
    uint64_t v31 = v0[6];
    uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v0[9] + 8);
    v32(v0[11], v31);

    v32(v30, v31);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v43, v26);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v33 = (uint64_t (*)(void))v0[1];
  return v33();
}

uint64_t sub_1000F31C8()
{
  uint64_t v29 = v0;
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[13];
  uint64_t v5 = v0[9];
  uint64_t v4 = v0[10];
  uint64_t v6 = v0[8];
  uint64_t v8 = v0[5];
  uint64_t v7 = v0[6];
  (*(void (**)(void, void))(v0[19] + 8))(v0[20], v0[18]);
  uint64_t v9 = type metadata accessor for TC2MetricReporter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v6 + *(int *)(v9 + 20), v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v8, v7);
  uint64_t v10 = sub_1001C0330();
  os_log_type_t v11 = sub_1001C11F0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v25 = v0[14];
    uint64_t v26 = v0[13];
    uint64_t v27 = v0[15];
    uint64_t v13 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v14 = v0[6];
    uint64_t v23 = v0[7];
    unint64_t v24 = (uint64_t (*)(uint64_t, uint64_t))v0[21];
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315138;
    uint64_t v16 = v24(v14, v23);
    v0[2] = sub_1000DF238(v16, v17, &v28);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Failed to report metric %s", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v27, v26);
  }
  else
  {
    uint64_t v19 = v0[14];
    uint64_t v18 = v0[15];
    uint64_t v20 = v0[13];
    (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[6]);
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_1000F34AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001BF450();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v88 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v9);
  unint64_t v87 = (char *)&v64 - v10;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness, v13);
  uint64_t v86 = (char *)&v64 - v14;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v81 = sub_1001C12F0();
  uint64_t v85 = *(void *)(v81 - 8);
  uint64_t v17 = __chkstk_darwin(v81, v16);
  uint64_t v19 = (char *)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v20);
  uint64_t v22 = (char *)&v64 - v21;
  unint64_t v89 = sub_100055F2C((uint64_t)&_swiftEmptyArrayStorage);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 64);
  uint64_t v77 = a1;
  uint64_t v78 = a2;
  uint64_t v24 = v23(a1, a2);
  int64_t v25 = 0;
  uint64_t v26 = *(void *)(v24 + 64);
  uint64_t v65 = v24 + 64;
  uint64_t v70 = v24;
  uint64_t v27 = 1 << *(unsigned char *)(v24 + 32);
  uint64_t v28 = -1;
  if (v27 < 64) {
    uint64_t v28 = ~(-1 << v27);
  }
  unint64_t v29 = v28 & v26;
  uint64_t v80 = TupleTypeMetadata2 - 8;
  uint64_t v68 = v12 + 16;
  unint64_t v84 = (void (**)(char *, char *, uint64_t))(v5 + 16);
  uint64_t v79 = (void (**)(char *, char *, uint64_t))(v85 + 32);
  uint64_t v76 = (void (**)(char *, char *, uint64_t))(v12 + 32);
  uint64_t v82 = (void (**)(char *, char *, uint64_t))(v5 + 32);
  uint64_t v66 = v5 + 40;
  uint64_t v83 = v5;
  os_log_type_t v73 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v69 = v12;
  id v72 = (void (**)(char *, uint64_t))(v12 + 8);
  int64_t v67 = (unint64_t)(v27 + 63) >> 6;
  int64_t v64 = v67 - 1;
  uint64_t v74 = TupleTypeMetadata2;
  uint64_t v75 = v19;
  uint64_t v71 = v22;
  while (1)
  {
    if (v29)
    {
      uint64_t v85 = (v29 - 1) & v29;
      unint64_t v31 = __clz(__rbit64(v29)) | (v25 << 6);
      goto LABEL_8;
    }
    int64_t v34 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      goto LABEL_39;
    }
    if (v34 < v67)
    {
      unint64_t v35 = *(void *)(v65 + 8 * v34);
      if (v35) {
        goto LABEL_12;
      }
      v25 += 2;
      if (v34 + 1 >= v67)
      {
        uint64_t v85 = 0;
        uint64_t v33 = 1;
        int64_t v25 = v34;
        goto LABEL_21;
      }
      unint64_t v35 = *(void *)(v65 + 8 * v25);
      if (v35)
      {
        ++v34;
        goto LABEL_12;
      }
      int64_t v36 = v34 + 2;
      if (v34 + 2 < v67) {
        break;
      }
    }
    uint64_t v85 = 0;
    uint64_t v33 = 1;
LABEL_21:
    uint64_t v37 = *(void *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v19, v33, 1, TupleTypeMetadata2);
    (*v79)(v22, v19, v81);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v22, 1, TupleTypeMetadata2) == 1)
    {
      swift_release();
      return v89;
    }
    int64_t v38 = v25;
    uint64_t v39 = &v22[*(int *)(TupleTypeMetadata2 + 48)];
    (*v76)(v86, v22, AssociatedTypeWitness);
    uint64_t v40 = *v82;
    uint64_t v41 = v87;
    (*v82)(v87, v39, v4);
    swift_getAssociatedConformanceWitness();
    uint64_t v42 = AssociatedTypeWitness;
    sub_1001C0D70();
    uint64_t v43 = v91;
    uint64_t v44 = v92;
    id v45 = v41;
    uint64_t v46 = v4;
    (*v84)(v88, v45, v4);
    unint64_t v47 = v89;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v90 = (void *)v47;
    unint64_t v50 = sub_100169E3C(v43, v44);
    uint64_t v51 = *(void *)(v47 + 16);
    BOOL v52 = (v49 & 1) == 0;
    uint64_t v53 = v51 + v52;
    if (__OFADD__(v51, v52))
    {
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    char v54 = v49;
    if (*(void *)(v47 + 24) >= v53)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1000EDD4C();
      }
    }
    else
    {
      sub_1000E9B38(v53, isUniquelyReferenced_nonNull_native);
      unint64_t v55 = sub_100169E3C(v43, v44);
      if ((v54 & 1) != (v56 & 1)) {
        goto LABEL_41;
      }
      unint64_t v50 = v55;
    }
    int64_t v25 = v38;
    id v57 = v90;
    if (v54)
    {
      unint64_t v30 = v90[7] + *(void *)(v83 + 72) * v50;
      uint64_t v4 = v46;
      (*(void (**)(unint64_t, char *, uint64_t))(v83 + 40))(v30, v88, v46);
    }
    else
    {
      v90[(v50 >> 6) + 8] |= 1 << v50;
      id v58 = (uint64_t *)(v57[6] + 16 * v50);
      *id v58 = v43;
      v58[1] = v44;
      unint64_t v59 = v57[7] + *(void *)(v83 + 72) * v50;
      uint64_t v4 = v46;
      v40((char *)v59, v88, v46);
      uint64_t v60 = v57[2];
      BOOL v61 = __OFADD__(v60, 1);
      uint64_t v62 = v60 + 1;
      if (v61) {
        goto LABEL_38;
      }
      v57[2] = v62;
      swift_bridgeObjectRetain();
    }
    unint64_t v89 = (unint64_t)v90;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*v73)(v87, v4);
    uint64_t AssociatedTypeWitness = v42;
    (*v72)(v86, v42);
    TupleTypeMetadata2 = v74;
    uint64_t v19 = v75;
    uint64_t v22 = v71;
    unint64_t v29 = v85;
  }
  unint64_t v35 = *(void *)(v65 + 8 * v36);
  if (v35)
  {
    v34 += 2;
LABEL_12:
    uint64_t v85 = (v35 - 1) & v35;
    unint64_t v31 = __clz(__rbit64(v35)) + (v34 << 6);
    int64_t v25 = v34;
LABEL_8:
    uint64_t v32 = v70;
    (*(void (**)(char *, unint64_t, uint64_t))(v69 + 16))(v19, *(void *)(v70 + 48) + *(void *)(v69 + 72) * v31, AssociatedTypeWitness);
    (*(void (**)(char *, unint64_t, uint64_t))(v83 + 16))(&v19[*(int *)(TupleTypeMetadata2 + 48)], *(void *)(v32 + 56) + *(void *)(v83 + 72) * v31, v4);
    uint64_t v33 = 0;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v34 = v36 + 1;
    if (__OFADD__(v36, 1)) {
      break;
    }
    if (v34 >= v67)
    {
      uint64_t v85 = 0;
      uint64_t v33 = 1;
      int64_t v25 = v64;
      goto LABEL_21;
    }
    unint64_t v35 = *(void *)(v65 + 8 * v34);
    ++v36;
    if (v35) {
      goto LABEL_12;
    }
  }
LABEL_40:
  __break(1u);
LABEL_41:
  uint64_t result = sub_1001C18C0();
  __break(1u);
  return result;
}

uint64_t sub_1000F3C88(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020C520);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for TC2MetricReporter()
{
  uint64_t result = qword_10020D3A0;
  if (!qword_10020D3A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_1000F3D34(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1001C0340();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_1000F3E1C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1001C0340();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *sub_1000F3E94(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1001C0340();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_1000F3F2C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001C0340();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_1000F3FC8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1001C0340();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_1000F4044(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1001C0340();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1000F40D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F40E4);
}

uint64_t sub_1000F40E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1001C0340();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1000F4194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F41A8);
}

uint64_t sub_1000F41A8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1001C0340();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1000F4250()
{
  uint64_t result = sub_1001C0340();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for TimeoutChildTaskCompletedError()
{
  return &type metadata for TimeoutChildTaskCompletedError;
}

uint64_t sub_1000F42FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_100007B14(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithCopy for OutgoingUserData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_100007B14(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  sub_10000792C(v6, v7);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for OutgoingUserData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_10000792C(v4, v5);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for OutgoingUserData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for OutgoingUserData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OutgoingUserData()
{
  return &type metadata for OutgoingUserData;
}

uint64_t sub_1000F4488@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v37 = a4;
  int v38 = a3;
  unint64_t v39 = a2;
  uint64_t v40 = a5;
  uint64_t v8 = sub_100003918(&qword_10020C180);
  uint64_t v36 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100003918(&qword_10020D438);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for OutgoingUserDataWriter.StateMachine.State(0);
  uint64_t v19 = __chkstk_darwin(v17, v18);
  uint64_t v21 = (uint64_t *)((char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v19, v22);
  uint64_t v24 = (char *)&v35 - v23;
  sub_1000F9084((uint64_t)v6, (uint64_t)&v35 - v23, type metadata accessor for OutgoingUserDataWriter.StateMachine.State);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    int64_t v34 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v34(v16, v24, v12);
    *uint64_t v21 = *(void *)sub_1001BF600();
    swift_storeEnumTagMultiPayload();
    swift_retain();
    sub_1000F914C((uint64_t)v21, (uint64_t)v6);
    v34(v40, v16, v12);
    type metadata accessor for OutgoingUserDataWriter.StateMachine.SendAction(0);
    return swift_storeEnumTagMultiPayload();
  }
  if (EnumCaseMultiPayload != 1)
  {
    *(void *)uint64_t v40 = *(void *)v24;
    type metadata accessor for OutgoingUserDataWriter.StateMachine.SendAction(0);
    return swift_storeEnumTagMultiPayload();
  }
  uint64_t v41 = *(void *)v24;
  uint64_t v26 = v41;
  uint64_t v27 = &v11[*(int *)(v8 + 48)];
  uint64_t v28 = sub_100003918(&qword_100208640);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(v11, v37, v28);
  unint64_t v30 = v39;
  *(void *)uint64_t v27 = a1;
  *((void *)v27 + 1) = v30;
  v27[16] = v38 & 1;
  uint64_t v31 = *(void *)(v26 + 24);
  Swift::Int v32 = v31 + 1;
  if (!__OFADD__(v31, 1))
  {
    sub_100007B14(a1, v30);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (*(void *)(v26 + 16) < v32 || (isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1000A3B44(v32, 0);
      uint64_t v26 = v41;
    }
    sub_1000A43C8((void *)(v26 + 16), v26 + ((*(unsigned __int8 *)(v36 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80)), (uint64_t)v11);
    sub_100010360((uint64_t)v11, &qword_10020C180);
    sub_1000F90EC((uint64_t)v6, type metadata accessor for OutgoingUserDataWriter.StateMachine.State);
    void *v6 = v26;
    swift_storeEnumTagMultiPayload();
    type metadata accessor for OutgoingUserDataWriter.StateMachine.SendAction(0);
    return swift_storeEnumTagMultiPayload();
  }
  __break(1u);
  return result;
}

uint64_t sub_1000F4844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v92 = a1;
  uint64_t v93 = a2;
  uint64_t v97 = a3;
  uint64_t v5 = sub_100003918(&qword_10020D598);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_100003918(&qword_10020C180);
  uint64_t v103 = *(void *)(v95 - 8);
  uint64_t v10 = __chkstk_darwin(v95, v9);
  id v94 = (void (**)(uint64_t, uint64_t))((char *)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = __chkstk_darwin(v10, v12);
  id v102 = (char *)&v92 - v14;
  uint64_t v16 = __chkstk_darwin(v13, v15);
  uint64_t v101 = (uint64_t)&v92 - v17;
  __chkstk_darwin(v16, v18);
  uint64_t v100 = (uint64_t)&v92 - v19;
  uint64_t v20 = sub_100003918(&qword_100208640);
  uint64_t v104 = *(void *)(v20 - 8);
  __chkstk_darwin(v20, v21);
  uint64_t v105 = (void (*)(char *, char *, uint64_t))((char *)&v92 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = sub_1001C0EE0();
  uint64_t v24 = *(void (***)(uint64_t, uint64_t))(v23 - 8);
  __chkstk_darwin(v23, v25);
  uint64_t v27 = (char *)&v92 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for OutgoingUserDataWriter.StateMachine.State(0);
  uint64_t v30 = __chkstk_darwin(v28, v29);
  Swift::Int v32 = (uint64_t *)((char *)&v92 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v30, v33);
  uint64_t v35 = (uint64_t *)((char *)&v92 - v34);
  uint64_t v98 = (void *)v4;
  sub_1000F9084(v4, (uint64_t)&v92 - v34, type metadata accessor for OutgoingUserDataWriter.StateMachine.State);
  uint64_t v96 = v28;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v37 = (void *)*v35;
    uint64_t v107 = v37;
    swift_retain();
    char v38 = sub_1001C1040();
    uint64_t v99 = v20;
    if ((v38 & 1) == 0)
    {
      swift_release();
      if ((uint64_t)v37[3] >= 1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1000F85CC();
          uint64_t v37 = v107;
        }
        sub_10002C318((uint64_t)v37+ ((*(unsigned __int8 *)(v103 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80))+ *(void *)(v103 + 72) * v37[4], (uint64_t)v8, &qword_10020C180);
        uint64_t v61 = v37[4];
        BOOL v62 = __OFADD__(v61, 1);
        uint64_t v63 = v61 + 1;
        if (!v62)
        {
          uint64_t v64 = v37[3];
          if (v63 >= v37[2]) {
            uint64_t v65 = 0;
          }
          else {
            uint64_t v65 = v63;
          }
          uint64_t v66 = v95;
          uint64_t v67 = *(int *)(v95 + 48);
          v37[4] = v65;
          if (!__OFSUB__(v64, 1))
          {
            uint64_t v68 = (char *)v94;
            uint64_t v69 = (char *)v94 + v67;
            v37[3] = v64 - 1;
            (*(void (**)(char *, void, uint64_t, uint64_t))(v103 + 56))(v8, 0, 1, v66);
            uint64_t v70 = &v8[*(int *)(v66 + 48)];
            uint64_t v105 = *(void (**)(char *, char *, uint64_t))(v104 + 32);
            uint64_t v71 = v99;
            v105(v68, v8, v99);
            uint64_t v72 = *(void *)v70;
            unint64_t v73 = *((void *)v70 + 1);
            unsigned __int8 v74 = v70[16];
            LODWORD(v103) = v74;
            *(void *)uint64_t v69 = v72;
            *((void *)v69 + 1) = v73;
            v69[16] = v74;
            sub_100007B14(v72, v73);
            uint64_t v75 = v98;
            sub_1000F90EC((uint64_t)v98, type metadata accessor for OutgoingUserDataWriter.StateMachine.State);
            void *v75 = v37;
            swift_storeEnumTagMultiPayload();
            uint64_t v76 = *(int *)(v66 + 48);
            uint64_t v77 = v97;
            uint64_t v78 = &v97[v76];
            uint64_t v79 = v101;
            uint64_t v80 = v101 + v76;
            (*(void (**)(uint64_t, char *, uint64_t))(v104 + 16))(v101, v68, v71);
            sub_10000792C(v72, v73);
            *(void *)uint64_t v80 = v72;
            *(void *)(v80 + 8) = v73;
            *(unsigned char *)(v80 + 16) = v103;
            uint64_t v81 = v105;
            v105(v77, (char *)v79, v71);
            uint64_t v82 = v102;
            uint64_t v83 = &v102[*(int *)(v95 + 48)];
            v81(v102, v68, v71);
            uint64_t v84 = *(void *)v69;
            uint64_t v85 = *((void *)v69 + 1);
            char v86 = v69[16];
            *(void *)uint64_t v83 = *(void *)v69;
            *((void *)v83 + 1) = v85;
            v83[16] = v86;
            *(void *)uint64_t v78 = v84;
            *((void *)v78 + 1) = v85;
            v78[16] = v86;
            type metadata accessor for OutgoingUserDataWriter.StateMachine.NextOutgoingAction(0);
            swift_storeEnumTagMultiPayload();
            return (*(uint64_t (**)(char *, uint64_t))(v104 + 8))(v82, v71);
          }
          goto LABEL_35;
        }
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v103 + 56))(v8, 1, 1, v95);
      swift_release();
      sub_100010360((uint64_t)v8, &qword_10020D598);
      uint64_t v89 = (uint64_t)v98;
      sub_1000F90EC((uint64_t)v98, type metadata accessor for OutgoingUserDataWriter.StateMachine.State);
      uint64_t v90 = *(int *)(sub_100003918(&qword_10020D440) + 48);
      uint64_t v91 = sub_100003918(&qword_10020D438);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 16))(v89, v92, v91);
      *(void *)(v89 + v90) = v93;
      swift_storeEnumTagMultiPayload();
      type metadata accessor for OutgoingUserDataWriter.StateMachine.NextOutgoingAction(0);
      return swift_storeEnumTagMultiPayload();
    }
    sub_1001C0B70();
    sub_10001DD30();
    uint64_t v39 = swift_allocError();
    id v94 = v24;
    uint64_t v95 = (uint64_t)v27;
    uint64_t v40 = v39;
    uint64_t v41 = v24[2];
    ((void (*)(uint64_t, uint64_t, uint64_t))v41)(v42, v95, v23);
    *Swift::Int v32 = v40;
    uint64_t v43 = v95;
    swift_storeEnumTagMultiPayload();
    sub_1000F914C((uint64_t)v32, (uint64_t)v98);
    uint64_t v44 = swift_allocError();
    uint64_t v96 = v23;
    ((void (*)(uint64_t, uint64_t, uint64_t))v41)(v45, v43, v23);
    uint64_t v46 = v37[3];
    if (v46)
    {
      uint64_t v93 = v44;
      uint64_t v106 = _swiftEmptyArrayStorage;
      sub_10018F3C4(0, v46 & ~(v46 >> 63), 0);
      if ((v46 & 0x8000000000000000) == 0)
      {
        uint64_t v47 = 0;
        uint64_t v98 = (void *)((char *)v37
                       + ((*(unsigned __int8 *)(v103 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80)));
        uint64_t v48 = (void (**)(char *, uint64_t, uint64_t))(v104 + 16);
        char v49 = (void (**)(char *, char *, uint64_t))(v104 + 32);
        while (v47 < v37[3])
        {
          uint64_t v50 = v37[4];
          if (v47 + v50 >= v37[2]) {
            uint64_t v51 = v37[2];
          }
          else {
            uint64_t v51 = 0;
          }
          uint64_t v52 = v100;
          sub_10003282C((uint64_t)v98 + (v47 + v50 - v51) * *(void *)(v103 + 72), v100, &qword_10020C180);
          uint64_t v53 = v101;
          sub_10002C318(v52, v101, &qword_10020C180);
          char v54 = v102;
          (*v48)(v102, v53, v20);
          unint64_t v55 = *v49;
          (*v49)((char *)v105, v54, v20);
          sub_100010360(v53, &qword_10020C180);
          char v56 = v106;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_10018F3C4(0, v56[2] + 1, 1);
            char v56 = v106;
          }
          unint64_t v58 = v56[2];
          unint64_t v57 = v56[3];
          if (v58 >= v57 >> 1)
          {
            sub_10018F3C4(v57 > 1, v58 + 1, 1);
            char v56 = v106;
          }
          ++v47;
          v56[2] = v58 + 1;
          unint64_t v59 = (unint64_t)v56
              + ((*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80))
              + *(void *)(v104 + 72) * v58;
          uint64_t v20 = v99;
          v55((char *)v59, (char *)v105, v99);
          if (v46 == v47)
          {
            swift_release();
            uint64_t v88 = (uint64_t *)v97;
            uint64_t v43 = v95;
            uint64_t v44 = v93;
            goto LABEL_28;
          }
        }
        __break(1u);
      }
      __break(1u);
      goto LABEL_34;
    }
    swift_release();
    char v56 = _swiftEmptyArrayStorage;
    uint64_t v88 = (uint64_t *)v97;
LABEL_28:
    v94[1](v43, v96);
    swift_release();
    *uint64_t v88 = v44;
    v88[1] = (uint64_t)v56;
LABEL_29:
    type metadata accessor for OutgoingUserDataWriter.StateMachine.NextOutgoingAction(0);
    return swift_storeEnumTagMultiPayload();
  }
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v60 = v97;
    *(void *)uint64_t v97 = *v35;
    *((void *)v60 + 1) = _swiftEmptyArrayStorage;
    goto LABEL_29;
  }
LABEL_36:
  uint64_t result = sub_1001C1580();
  __break(1u);
  return result;
}

uint64_t sub_1000F51B0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100003918(&qword_10020D438);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for OutgoingUserDataWriter.StateMachine.State(0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000F9084((uint64_t)v3, (uint64_t)v14, type metadata accessor for OutgoingUserDataWriter.StateMachine.State);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1000F90EC((uint64_t)v3, type metadata accessor for OutgoingUserDataWriter.StateMachine.State);
      *uint64_t v3 = a1;
      swift_storeEnumTagMultiPayload();
      swift_errorRetain();
      uint64_t v16 = (void *)swift_retain();
      uint64_t v17 = sub_1000F8758(v16, (void (*)(uint64_t))sub_1000F54C8, 0);
      swift_release_n();
      *a2 = v17;
      uint64_t v18 = type metadata accessor for OutgoingUserDataWriter.StateMachine.CancelWriterAction(0);
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a2, 0, 1, v18);
    }
    else
    {
      swift_errorRelease();
      uint64_t v22 = type metadata accessor for OutgoingUserDataWriter.StateMachine.CancelWriterAction(0);
      return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a2, 1, 1, v22);
    }
  }
  else
  {
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v20(v10, v14, v6);
    sub_1000F90EC((uint64_t)v3, type metadata accessor for OutgoingUserDataWriter.StateMachine.State);
    *uint64_t v3 = a1;
    swift_storeEnumTagMultiPayload();
    v20((char *)a2, v10, v6);
    uint64_t v21 = type metadata accessor for OutgoingUserDataWriter.StateMachine.CancelWriterAction(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(a2, 0, 1, v21);
    return swift_errorRetain();
  }
}

uint64_t sub_1000F54C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100003918(&qword_10020C180);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100003918(&qword_100208640);
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v7, a1, v8);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v7, v8);
}

id sub_1000F55C0()
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = type metadata accessor for OutgoingUserDataWriter.StateMachine(0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (id *)((char *)&v11.receiver - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = &v0[OBJC_IVAR____TtC20privatecloudcomputed22OutgoingUserDataWriter_stateLock];
  uint64_t v7 = v0;
  *uint64_t v5 = *(void *)sub_1001BF600();
  type metadata accessor for OutgoingUserDataWriter.StateMachine.State(0);
  swift_storeEnumTagMultiPayload();
  *(_DWORD *)uint64_t v6 = 0;
  swift_retain();
  uint64_t v8 = &v6[*(int *)(sub_100003918(&qword_10020D428) + 28)];
  uint64_t v9 = sub_100003918(&qword_10020D5C8);
  bzero(v8, *(void *)(*(void *)(v9 - 8) + 64));
  sub_1000F91F8((uint64_t)v5, (uint64_t)v8);
  *(void *)&v7[OBJC_IVAR____TtC20privatecloudcomputed22OutgoingUserDataWriter_waiterIDGenerator] = 0;

  v11.receiver = v7;
  v11.super_class = ObjectType;
  return objc_msgSendSuper2(&v11, "init");
}

uint64_t sub_1000F57A4()
{
  return type metadata accessor for OutgoingUserDataWriter(0);
}

uint64_t type metadata accessor for OutgoingUserDataWriter(uint64_t a1)
{
  return sub_10001C958(a1, (uint64_t *)&unk_10020D410);
}

void sub_1000F57CC()
{
  sub_1000F5864();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1000F5864()
{
  if (!qword_10020D420)
  {
    type metadata accessor for OutgoingUserDataWriter.StateMachine(255);
    unint64_t v0 = sub_1001BF4C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10020D420);
    }
  }
}

uint64_t type metadata accessor for OutgoingUserDataWriter.StateMachine(uint64_t a1)
{
  return sub_10001C958(a1, qword_10020D4A0);
}

char *sub_1000F58DC()
{
  if (&swift_runtimeSupportsNoncopyableTypes) {
    return (char *)sub_100003918(&qword_10020D428);
  }
  else {
    return (char *)&type metadata for () + 8;
  }
}

char *sub_1000F5904()
{
  if (&swift_runtimeSupportsNoncopyableTypes) {
    return (char *)sub_100003918(&qword_10020D430);
  }
  else {
    return (char *)&type metadata for () + 8;
  }
}

uint64_t *sub_1000F592C(uint64_t *a1, uint64_t *a2)
{
  int v4 = *(_DWORD *)(*(void *)(type metadata accessor for OutgoingUserDataWriter.StateMachine.State(0) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v7 = *a2;
      swift_errorRetain();
      *a1 = v7;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_retain();
    }
    else
    {
      uint64_t v8 = sub_100003918(&qword_10020D438);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = sub_100003918(&qword_10020D440);
      *(uint64_t *)((char *)a1 + *(int *)(v9 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v9 + 48));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for OutgoingUserDataWriter.StateMachine.State(uint64_t a1)
{
  return sub_10001C958(a1, (uint64_t *)&unk_10020D548);
}

uint64_t sub_1000F5A98(uint64_t a1)
{
  type metadata accessor for OutgoingUserDataWriter.StateMachine.State(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch(result)
  {
    case 2:
      return swift_errorRelease();
    case 1:
      return swift_release();
    case 0:
      uint64_t v3 = sub_100003918(&qword_10020D438);
      int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      return v4(a1, v3);
  }
  return result;
}

uint64_t *sub_1000F5B74(uint64_t *a1, uint64_t *a2)
{
  type metadata accessor for OutgoingUserDataWriter.StateMachine.State(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v5 = *a2;
    swift_errorRetain();
    *a1 = v5;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    swift_retain();
  }
  else
  {
    uint64_t v6 = sub_100003918(&qword_10020D438);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    uint64_t v7 = sub_100003918(&qword_10020D440);
    *(uint64_t *)((char *)a1 + *(int *)(v7 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 48));
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *sub_1000F5C70(uint64_t *a1, uint64_t *a2)
{
  if (a1 != a2)
  {
    sub_1000F90EC((uint64_t)a1, type metadata accessor for OutgoingUserDataWriter.StateMachine.State);
    type metadata accessor for OutgoingUserDataWriter.StateMachine.State(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v5 = *a2;
      swift_errorRetain();
      *a1 = v5;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_retain();
    }
    else
    {
      uint64_t v6 = sub_100003918(&qword_10020D438);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = sub_100003918(&qword_10020D440);
      *(uint64_t *)((char *)a1 + *(int *)(v7 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 48));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1000F5D90(char *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for OutgoingUserDataWriter.StateMachine.State(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  else
  {
    uint64_t v5 = sub_100003918(&qword_10020D438);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    uint64_t v6 = sub_100003918(&qword_10020D440);
    *(void *)&a1[*(int *)(v6 + 48)] = *(void *)&a2[*(int *)(v6 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1000F5E68(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_1000F90EC((uint64_t)a1, type metadata accessor for OutgoingUserDataWriter.StateMachine.State);
    uint64_t v4 = type metadata accessor for OutgoingUserDataWriter.StateMachine.State(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
    else
    {
      uint64_t v5 = sub_100003918(&qword_10020D438);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      uint64_t v6 = sub_100003918(&qword_10020D440);
      *(void *)&a1[*(int *)(v6 + 48)] = *(void *)&a2[*(int *)(v6 + 48)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1000F5F64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F5F78);
}

uint64_t sub_1000F5F78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OutgoingUserDataWriter.StateMachine.State(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1000F5FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F5FF8);
}

uint64_t sub_1000F5FF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OutgoingUserDataWriter.StateMachine.State(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_1000F6068()
{
  uint64_t result = type metadata accessor for OutgoingUserDataWriter.StateMachine.State(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1000F60F4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v8 = *a2;
      swift_errorRetain();
      *a1 = v8;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_retain();
    }
    else
    {
      uint64_t v9 = sub_100003918(&qword_10020D438);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      uint64_t v10 = sub_100003918(&qword_10020D440);
      *(uint64_t *)((char *)a1 + *(int *)(v10 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v10 + 48));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1000F6238(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch(result)
  {
    case 2:
      return swift_errorRelease();
    case 1:
      return swift_release();
    case 0:
      uint64_t v3 = sub_100003918(&qword_10020D438);
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      return v4(a1, v3);
  }
  return result;
}

uint64_t *sub_1000F6304(uint64_t *a1, uint64_t *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v5 = *a2;
    swift_errorRetain();
    *a1 = v5;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    swift_retain();
  }
  else
  {
    uint64_t v6 = sub_100003918(&qword_10020D438);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    uint64_t v7 = sub_100003918(&qword_10020D440);
    *(uint64_t *)((char *)a1 + *(int *)(v7 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 48));
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *sub_1000F63F8(uint64_t *a1, uint64_t *a2)
{
  if (a1 != a2)
  {
    sub_1000F90EC((uint64_t)a1, type metadata accessor for OutgoingUserDataWriter.StateMachine.State);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v5 = *a2;
      swift_errorRetain();
      *a1 = v5;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_retain();
    }
    else
    {
      uint64_t v6 = sub_100003918(&qword_10020D438);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = sub_100003918(&qword_10020D440);
      *(uint64_t *)((char *)a1 + *(int *)(v7 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 48));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1000F6510(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_100003918(&qword_10020D438);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = sub_100003918(&qword_10020D440);
    *(void *)&a1[*(int *)(v7 + 48)] = *(void *)&a2[*(int *)(v7 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1000F65E0(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000F90EC((uint64_t)a1, type metadata accessor for OutgoingUserDataWriter.StateMachine.State);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_100003918(&qword_10020D438);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = sub_100003918(&qword_10020D440);
      *(void *)&a1[*(int *)(v7 + 48)] = *(void *)&a2[*(int *)(v7 + 48)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void sub_1000F66D4()
{
  sub_1000F678C();
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v2 = &v1;
    uint64_t v3 = (char *)&value witness table for Builtin.NativeObject + 64;
    uint64_t v4 = "\b";
    swift_initEnumMetadataMultiPayload();
  }
}

void sub_1000F678C()
{
  if (!qword_10020D558)
  {
    sub_1000166C8(&qword_10020C180);
    sub_1000166C8(&qword_100208C98);
    unint64_t v0 = sub_1001C0ED0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10020D558);
    }
  }
}

uint64_t sub_1000F6804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return _swift_task_switch(sub_1000F682C, 0, 0);
}

uint64_t sub_1000F682C()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  long long v10 = *(_OWORD *)(v0 + 24);
  unint64_t add_explicit = atomic_fetch_add_explicit((atomic_ullong *volatile)(v2+ OBJC_IVAR____TtC20privatecloudcomputed22OutgoingUserDataWriter_waiterIDGenerator), 1uLL, memory_order_relaxed);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 56) = v4;
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v2;
  *(void *)(v4 + 32) = add_explicit;
  *(_OWORD *)(v4 + 40) = v10;
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 64) = v5;
  *(void *)(v5 + 16) = v2;
  *(void *)(v5 + 24) = add_explicit;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v6;
  void *v6 = v0;
  v6[1] = sub_1000F6964;
  uint64_t v7 = *(void *)(v0 + 40);
  uint64_t v8 = *(void *)(v0 + 16);
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v8, &unk_10020D5B8, v4, sub_1000F905C, v5, 0, 0, v7);
}

uint64_t sub_1000F6964()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_1000F6AAC, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1000F6AAC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000F6B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[4] = a2;
  v5[5] = a3;
  v5[3] = a1;
  v5[8] = sub_100003918(&qword_10020C180);
  v5[9] = swift_task_alloc();
  uint64_t v6 = sub_100003918(&qword_100208640);
  v5[10] = v6;
  v5[11] = *(void *)(v6 - 8);
  v5[12] = swift_task_alloc();
  return _swift_task_switch(sub_1000F6C18, 0, 0);
}

uint64_t sub_1000F6C18()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = swift_task_alloc();
  v0[13] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[14] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1000F6D08;
  uint64_t v6 = v0[8];
  uint64_t v5 = v0[9];
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD00000000000001BLL, 0x80000001001C56F0, sub_1000F91B0, v3, v6);
}

uint64_t sub_1000F6D08()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1000F7114;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1000F6E24;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000F6E24()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = (int *)v0[6];
  uint64_t v4 = (uint64_t *)(v0[9] + *(int *)(v0[8] + 48));
  uint64_t v5 = *v4;
  v0[16] = *v4;
  uint64_t v6 = v4[1];
  v0[17] = v6;
  uint64_t v7 = *((unsigned __int8 *)v4 + 16);
  (*(void (**)(uint64_t))(v2 + 32))(v1);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v3 + *v3);
  uint64_t v8 = (void *)swift_task_alloc();
  v0[18] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1000F6F4C;
  uint64_t v9 = v0[3];
  return v11(v9, v5, v6, v7);
}

uint64_t sub_1000F6F4C()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1000F718C;
  }
  else {
    uint64_t v2 = sub_1000F7060;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000F7060()
{
  uint64_t v2 = v0[16];
  unint64_t v1 = v0[17];
  uint64_t v4 = v0[11];
  uint64_t v3 = v0[12];
  uint64_t v5 = v0[10];
  sub_1001C0EC0();
  sub_10000792C(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1000F7114()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000F718C()
{
  uint64_t v2 = v0[16];
  unint64_t v1 = v0[17];
  uint64_t v4 = v0[11];
  uint64_t v3 = v0[12];
  uint64_t v5 = v0[10];
  v0[2] = v0[19];
  swift_errorRetain();
  sub_1001C0EB0();
  swift_willThrow();
  sub_10000792C(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1000F7268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v52 = (char *)a3;
  uint64_t v48 = sub_100003918(&qword_10020C180);
  __chkstk_darwin(v48, v5);
  char v49 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100003918(&qword_100208640);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v10 = __chkstk_darwin(v7, v9);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v13);
  uint64_t v47 = (char *)&v46 - v14;
  uint64_t v15 = sub_100003918(&qword_10020D438);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t OutgoingAction = type metadata accessor for OutgoingUserDataWriter.StateMachine.NextOutgoingAction(0);
  uint64_t v21 = __chkstk_darwin(OutgoingAction, v20);
  uint64_t v23 = (uint64_t *)((char *)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v21, v24);
  uint64_t v26 = (char *)&v46 - v25;
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  uint64_t v50 = a1;
  v27(v19, a1, v15);
  uint64_t v28 = (os_unfair_lock_s *)(a2 + OBJC_IVAR____TtC20privatecloudcomputed22OutgoingUserDataWriter_stateLock);
  os_unfair_lock_lock((os_unfair_lock_t)(a2 + OBJC_IVAR____TtC20privatecloudcomputed22OutgoingUserDataWriter_stateLock));
  sub_100003918(&qword_10020D428);
  sub_1000F4844((uint64_t)v19, (uint64_t)v52, v26);
  os_unfair_lock_unlock(v28);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  sub_1000F9084((uint64_t)v26, (uint64_t)v23, type metadata accessor for OutgoingUserDataWriter.StateMachine.NextOutgoingAction);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v31 = *v23;
      uint64_t v30 = v23[1];
      uint64_t v53 = v31;
      swift_errorRetain();
      sub_1001C0EB0();
      uint64_t v32 = *(void *)(v30 + 16);
      if (v32)
      {
        uint64_t OutgoingAction = v30;
        uint64_t v52 = v26;
        uint64_t v35 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
        uint64_t v34 = v8 + 16;
        uint64_t v33 = v35;
        unint64_t v36 = v30 + ((*(unsigned __int8 *)(v34 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 64));
        uint64_t v37 = *(void *)(v34 + 56);
        do
        {
          v33(v12, v36, v7);
          uint64_t v53 = v31;
          swift_errorRetain();
          sub_1001C0EB0();
          (*(void (**)(char *, uint64_t))(v34 - 8))(v12, v7);
          v36 += v37;
          --v32;
        }
        while (v32);
        swift_errorRelease();
        swift_bridgeObjectRelease();
        uint64_t v26 = v52;
      }
      else
      {
        swift_errorRelease();
        swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    uint64_t v39 = v47;
    uint64_t v38 = v48;
    uint64_t v40 = (char *)v23 + *(int *)(v48 + 48);
    uint64_t v41 = *(void *)v40;
    uint64_t v42 = *((void *)v40 + 1);
    char v43 = v40[16];
    (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 32))(v47, v23, v7);
    uint64_t v44 = &v49[*(int *)(v38 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v49, v39, v7);
    *(void *)uint64_t v44 = v41;
    *((void *)v44 + 1) = v42;
    v44[16] = v43;
    sub_1001C0EC0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v39, v7);
  }
  return sub_1000F90EC((uint64_t)v26, type metadata accessor for OutgoingUserDataWriter.StateMachine.NextOutgoingAction);
}

uint64_t sub_1000F76C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100003918(&qword_10020D438);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for OutgoingUserDataWriter.StateMachine.CancelAction(0);
  uint64_t v11 = __chkstk_darwin(v9 - 8, v10);
  uint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v14);
  uint64_t v16 = (void *)((char *)v22 - v15);
  uint64_t v17 = (os_unfair_lock_s *)(a1 + OBJC_IVAR____TtC20privatecloudcomputed22OutgoingUserDataWriter_stateLock);
  os_unfair_lock_lock(v17);
  uint64_t v18 = sub_100003918(&qword_10020D428);
  sub_1000F78FC((uint64_t)v17 + *(int *)(v18 + 28), a2, v16);
  os_unfair_lock_unlock(v17);
  sub_1000F9084((uint64_t)v16, (uint64_t)v13, type metadata accessor for OutgoingUserDataWriter.StateMachine.CancelAction);
  uint64_t v19 = sub_100003918(&qword_10020D5C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v13, 1, v19) != 1)
  {
    uint64_t v20 = *(void *)v13;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, &v13[*(int *)(v19 + 48)], v4);
    v22[0] = v20;
    sub_1001C0EB0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  return sub_1000F90EC((uint64_t)v16, type metadata accessor for OutgoingUserDataWriter.StateMachine.CancelAction);
}

uint64_t sub_1000F78FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v6 = sub_100003918(&qword_10020D438);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for OutgoingUserDataWriter.StateMachine.State(0);
  uint64_t v13 = __chkstk_darwin(v11, v12);
  uint64_t v15 = (uint64_t *)((char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13, v16);
  uint64_t v18 = (char *)&v27 - v17;
  sub_1000F9084(a1, (uint64_t)&v27 - v17, type metadata accessor for OutgoingUserDataWriter.StateMachine.State);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1000F90EC((uint64_t)v18, type metadata accessor for OutgoingUserDataWriter.StateMachine.State);
    uint64_t v19 = sub_100003918(&qword_10020D5C0);
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(a3, 1, 1, v19);
  }
  else
  {
    uint64_t v29 = a3;
    uint64_t v30 = v3;
    uint64_t v21 = *(void *)&v18[*(int *)(sub_100003918(&qword_10020D440) + 48)];
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v28(v10, v18, v6);
    if (v21 == v31)
    {
      sub_1001C0EE0();
      sub_10001DD30();
      uint64_t v22 = swift_allocError();
      sub_1001C0B70();
      uint64_t *v15 = v22;
      swift_storeEnumTagMultiPayload();
      sub_1000F914C((uint64_t)v15, a1);
      uint64_t v23 = sub_100003918(&qword_10020D5C0);
      uint64_t v24 = v29;
      uint64_t v25 = (char *)v29 + *(int *)(v23 + 48);
      uint64_t *v24 = swift_allocError();
      sub_1001C0B70();
      v28(v25, v10, v6);
      return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v24, 0, 1, v23);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      uint64_t v26 = sub_100003918(&qword_10020D5C0);
      return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v29, 1, 1, v26);
    }
  }
}

uint64_t sub_1000F7C54(uint64_t a1)
{
  uint64_t v3 = sub_100003918(&qword_100208640);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100003918(&qword_10020D438);
  uint64_t v33 = *(uint64_t **)(v8 - 8);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100003918(&qword_10020D590);
  uint64_t v14 = __chkstk_darwin(v12 - 8, v13);
  uint64_t v16 = (char *)v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v17);
  uint64_t v19 = (void *)((char *)v32 - v18);
  uint64_t v20 = (os_unfair_lock_s *)(v1 + OBJC_IVAR____TtC20privatecloudcomputed22OutgoingUserDataWriter_stateLock);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + OBJC_IVAR____TtC20privatecloudcomputed22OutgoingUserDataWriter_stateLock));
  sub_100003918(&qword_10020D428);
  sub_1000F51B0(a1, v19);
  os_unfair_lock_unlock(v20);
  sub_10003282C((uint64_t)v19, (uint64_t)v16, &qword_10020D590);
  uint64_t v21 = type metadata accessor for OutgoingUserDataWriter.StateMachine.CancelWriterAction(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v16, 1, v21) != 1)
  {
    uint64_t v22 = v11;
    uint64_t v23 = v33;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = *(void *)v16;
      uint64_t v25 = *(void *)(*(void *)v16 + 16);
      if (v25)
      {
        v32[1] = *(void *)v16;
        uint64_t v33 = v19;
        uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
        uint64_t v26 = v4 + 16;
        uint64_t v27 = v28;
        uint64_t v29 = v24 + ((*(unsigned __int8 *)(v26 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 64));
        uint64_t v30 = *(void *)(v26 + 56);
        do
        {
          v27(v7, v29, v3);
          uint64_t v34 = a1;
          swift_errorRetain();
          sub_1001C0EB0();
          (*(void (**)(char *, uint64_t))(v26 - 8))(v7, v3);
          v29 += v30;
          --v25;
        }
        while (v25);
        swift_bridgeObjectRelease();
        uint64_t v19 = v33;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v23[4])(v22, v16, v8);
      uint64_t v34 = a1;
      swift_errorRetain();
      sub_1001C0EB0();
      ((void (*)(char *, uint64_t))v23[1])(v22, v8);
    }
  }
  return sub_100010360((uint64_t)v19, &qword_10020D590);
}

uint64_t sub_1000F7FB4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, int a5)
{
  int v40 = a5;
  uint64_t v41 = a3;
  unint64_t v42 = a4;
  uint64_t v35 = sub_100003918(&qword_10020C180);
  __chkstk_darwin(v35, v7);
  uint64_t v37 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_100003918(&qword_10020D438);
  uint64_t v36 = *(void *)(v38 - 8);
  __chkstk_darwin(v38, v9);
  uint64_t v34 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100003918(&qword_100208640);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for OutgoingUserDataWriter.StateMachine.SendAction(0);
  uint64_t v18 = __chkstk_darwin(v16, v17);
  uint64_t v20 = (uint64_t *)((char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v18, v21);
  uint64_t v23 = (char *)&v34 - v22;
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v39 = a1;
  v24(v15, a1, v11);
  uint64_t v25 = (os_unfair_lock_s *)(a2 + OBJC_IVAR____TtC20privatecloudcomputed22OutgoingUserDataWriter_stateLock);
  os_unfair_lock_lock((os_unfair_lock_t)(a2 + OBJC_IVAR____TtC20privatecloudcomputed22OutgoingUserDataWriter_stateLock));
  sub_100003918(&qword_10020D428);
  sub_1000F4488(v41, v42, v40, (uint64_t)v15, v23);
  os_unfair_lock_unlock(v25);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  sub_1000F9084((uint64_t)v23, (uint64_t)v20, type metadata accessor for OutgoingUserDataWriter.StateMachine.SendAction);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v43 = *v20;
      sub_1001C0EB0();
    }
  }
  else
  {
    uint64_t v27 = v36;
    uint64_t v28 = v34;
    uint64_t v29 = v38;
    (*(void (**)(char *, uint64_t *, uint64_t))(v36 + 32))(v34, v20, v38);
    uint64_t v30 = &v37[*(int *)(v35 + 48)];
    v24(v37, v39, v11);
    uint64_t v31 = v41;
    unint64_t v32 = v42;
    *(void *)uint64_t v30 = v41;
    *((void *)v30 + 1) = v32;
    v30[16] = v40 & 1;
    sub_100007B14(v31, v32);
    sub_1001C0EC0();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v29);
  }
  return sub_1000F90EC((uint64_t)v23, type metadata accessor for OutgoingUserDataWriter.StateMachine.SendAction);
}

uint64_t sub_1000F8348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *v4;
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[5] = a4;
  v11[6] = v10;
  v11[3] = a2;
  v11[4] = a3;
  v11[1] = sub_1000074CC;
  uint64_t v11[2] = a1;
  return _swift_task_switch(sub_1000F682C, 0, 0);
}

uint64_t sub_1000F8418(uint64_t a1)
{
  return sub_1000F7C54(a1);
}

uint64_t type metadata accessor for OutgoingUserDataWriter.StateMachine.CancelWriterAction(uint64_t a1)
{
  return sub_10001C958(a1, qword_10020D818);
}

uint64_t sub_1000F845C()
{
  return sub_1000F84C4((uint64_t (*)(void))type metadata accessor for RequestLog.Element, &qword_10020C178, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000A4F94);
}

uint64_t sub_1000F8490()
{
  return sub_1000F84C4((uint64_t (*)(void))&type metadata accessor for TC2TrustedRequestMetadata, &qword_10020C198, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000A4FC0);
}

uint64_t sub_1000F84C4(uint64_t (*a1)(void), uint64_t *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *v3;
  uint64_t v7 = a1(0);
  uint64_t v8 = *(void *)(v6 + 16);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  sub_100003918(a2);
  uint64_t v10 = swift_allocObject();
  long long v11 = *(_OWORD *)(v6 + 24);
  *(void *)(v10 + 16) = v8;
  *(_OWORD *)(v10 + 24) = v11;
  if ((uint64_t)v11 >= 1) {
    a3(v10 + 16, v10 + ((v9 + 40) & ~v9), v6 + 16, v6 + ((v9 + 40) & ~v9));
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1000F85CC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = sub_100003918(&qword_10020C180);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  sub_100003918(&qword_10020C190);
  uint64_t v5 = swift_allocObject();
  long long v6 = *(_OWORD *)(v1 + 24);
  *(void *)(v5 + 16) = v3;
  *(_OWORD *)(v5 + 24) = v6;
  if ((uint64_t)v6 >= 1) {
    sub_1000A5184(v5 + 16, v5 + ((v4 + 40) & ~v4), (void *)(v1 + 16), v1 + ((v4 + 40) & ~v4));
  }
  uint64_t result = swift_release();
  uint64_t *v0 = v5;
  return result;
}

uint64_t sub_1000F86C0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (uint64_t *)(*v0 + 16);
  uint64_t v3 = *v2;
  sub_100003918(&qword_10020C188);
  uint64_t v4 = swift_allocObject();
  long long v5 = *(_OWORD *)(v1 + 24);
  *(void *)(v4 + 16) = v3;
  *(_OWORD *)(v4 + 24) = v5;
  if ((uint64_t)v5 >= 1) {
    sub_1000A5368(v4 + 16, v4 + 40, v2, v1 + 40);
  }
  uint64_t result = swift_release();
  uint64_t *v0 = v4;
  return result;
}

uint64_t sub_1000F8758(void *a1, void (*a2)(uint64_t), uint64_t a3)
{
  unint64_t v87 = a2;
  uint64_t v88 = a3;
  uint64_t v95 = sub_100003918(&qword_10020C180);
  uint64_t v93 = *(void *)(v95 - 8);
  __chkstk_darwin(v95, v4);
  uint64_t v86 = (uint64_t)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100003918(&qword_10020D598);
  uint64_t v8 = __chkstk_darwin(v6 - 8, v7);
  uint64_t v91 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = __chkstk_darwin(v8, v10);
  uint64_t v90 = (unsigned int (**)(char *, uint64_t, uint64_t))((char *)&v80 - v12);
  uint64_t v14 = __chkstk_darwin(v11, v13);
  uint64_t v16 = (char *)&v80 - v15;
  __chkstk_darwin(v14, v17);
  uint64_t v92 = (char *)&v80 - v18;
  uint64_t v19 = sub_100003918(&qword_100208648);
  uint64_t v21 = __chkstk_darwin(v19 - 8, v20);
  uint64_t v23 = (char *)&v80 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v24);
  id v94 = (char *)&v80 - v25;
  uint64_t v26 = sub_100003918(&qword_100208640);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t result = __chkstk_darwin(v26, v28);
  uint64_t v96 = (char *)&v80 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = a1[3];
  if (v31 <= 0)
  {
    uint64_t v35 = _swiftEmptyArrayStorage;
    unint64_t v37 = _swiftEmptyArrayStorage[3];
    uint64_t v33 = *(unsigned __int8 *)(v27 + 80);
    uint64_t v34 = (v33 + 32) & ~v33;
    uint64_t v38 = a1[3];
  }
  else
  {
    sub_100003918(&qword_10020D5A0);
    uint64_t v32 = *(void *)(v27 + 72);
    uint64_t v33 = *(unsigned __int8 *)(v27 + 80);
    uint64_t v34 = (v33 + 32) & ~v33;
    uint64_t v35 = (void *)swift_allocObject();
    uint64_t result = j__malloc_size(v35);
    if (!v32) {
      goto LABEL_65;
    }
    if (result - v34 == 0x8000000000000000 && v32 == -1)
    {
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
      return result;
    }
    unint64_t v37 = 2 * ((result - v34) / v32);
    v35[2] = v31;
    v35[3] = v37;
    uint64_t v38 = a1[3];
  }
  uint64_t v39 = a1[4];
  uint64_t v40 = v38 + v39;
  if (a1[2] < v40) {
    uint64_t v40 = a1[2];
  }
  uint64_t v98 = a1;
  uint64_t v99 = v39;
  uint64_t v100 = v40;
  if (v31 < 0)
  {
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  uint64_t v80 = v33;
  uint64_t v81 = v16;
  uint64_t v82 = v34;
  uint64_t v41 = (char *)v35 + v34;
  unint64_t v42 = v37 >> 1;
  uint64_t v97 = v27;
  if (v31)
  {
    uint64_t v89 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v93 + 56);
    uint64_t v84 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
    uint64_t v85 = (unsigned int (**)(void (**)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))(v93 + 48);
    uint64_t v43 = (uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
    uint64_t v83 = v27 + 32;
    v42 -= v31;
    swift_retain();
    uint64_t v44 = swift_retain();
    uint64_t v45 = (uint64_t)v90;
    while (1)
    {
      uint64_t v46 = v99;
      if (v99 == v100)
      {
        if ((sub_1000A3AD8(v44) & 1) == 0)
        {
          uint64_t v47 = 1;
          goto LABEL_19;
        }
        uint64_t v46 = v99;
      }
      uint64_t v99 = v46 + 1;
      sub_10003282C((uint64_t)v98+ ((*(unsigned __int8 *)(v93 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80))+ *(void *)(v93 + 72) * v46, v45, &qword_10020C180);
      uint64_t v47 = 0;
LABEL_19:
      uint64_t v48 = 1;
      uint64_t v49 = v95;
      (*v89)(v45, v47, 1, v95);
      uint64_t v50 = v45;
      uint64_t v51 = v91;
      sub_10002C318(v50, (uint64_t)v91, &qword_10020D598);
      if ((*v85)(v51, 1, v49) != 1)
      {
        uint64_t v52 = v86;
        sub_10002C318((uint64_t)v91, v86, &qword_10020C180);
        v87(v52);
        sub_100010360(v52, &qword_10020C180);
        uint64_t v48 = 0;
      }
      (*v84)(v23, v48, 1, v26);
      uint64_t result = (*v43)(v23, 1, v26);
      if (result == 1) {
        goto LABEL_68;
      }
      uint64_t v27 = v97;
      uint64_t v44 = (*(uint64_t (**)(char *, char *, uint64_t))(v97 + 32))(v41, v23, v26);
      v41 += *(void *)(v27 + 72);
      --v31;
      uint64_t v45 = (uint64_t)v90;
      if (!v31)
      {
        uint64_t v16 = v81;
        goto LABEL_25;
      }
    }
  }
  swift_retain();
  uint64_t v44 = swift_retain();
LABEL_25:
  uint64_t v90 = (unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48);
  uint64_t v91 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v93 + 56);
  uint64_t v89 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56);
  uint64_t v53 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
  char v54 = (uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 32);
  uint64_t v85 = (unsigned int (**)(void (**)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))(v80 | 7);
  while (1)
  {
    uint64_t v55 = (uint64_t)v92;
    uint64_t v56 = v99;
    if (v99 != v100) {
      goto LABEL_29;
    }
    if (sub_1000A3AD8(v44))
    {
      uint64_t v56 = v99;
LABEL_29:
      uint64_t v99 = v56 + 1;
      sub_10003282C((uint64_t)v98+ ((*(unsigned __int8 *)(v93 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80))+ *(void *)(v93 + 72) * v56, v55, &qword_10020C180);
      uint64_t v57 = 0;
      goto LABEL_31;
    }
    uint64_t v57 = 1;
LABEL_31:
    uint64_t v58 = 1;
    uint64_t v59 = v95;
    (*v91)(v55, v57, 1, v95);
    sub_10002C318(v55, (uint64_t)v16, &qword_10020D598);
    if ((*v90)(v16, 1, v59) != 1)
    {
      uint64_t v60 = v86;
      sub_10002C318((uint64_t)v16, v86, &qword_10020C180);
      v87(v60);
      sub_100010360(v60, &qword_10020C180);
      uint64_t v58 = 0;
    }
    uint64_t v61 = (uint64_t)v94;
    (*v89)((uint64_t)v94, v58, 1, v26);
    if ((*v53)(v61, 1, v26) == 1) {
      break;
    }
    BOOL v62 = *v54;
    uint64_t result = (*v54)(v96, v61, v26);
    if (v42)
    {
      uint64_t v63 = v35;
      BOOL v64 = __OFSUB__(v42--, 1);
      if (v64) {
        goto LABEL_60;
      }
    }
    else
    {
      unint64_t v65 = v35[3];
      if ((uint64_t)((v65 >> 1) + 0x4000000000000000) < 0) {
        goto LABEL_61;
      }
      int64_t v66 = v65 & 0xFFFFFFFFFFFFFFFELL;
      if (v66 <= 1) {
        uint64_t v67 = 1;
      }
      else {
        uint64_t v67 = v66;
      }
      sub_100003918(&qword_10020D5A0);
      uint64_t v68 = *(void *)(v97 + 72);
      uint64_t v69 = v82;
      uint64_t v63 = (void *)swift_allocObject();
      uint64_t result = j__malloc_size(v63);
      if (!v68) {
        goto LABEL_62;
      }
      uint64_t v70 = result - v69;
      if (result - v69 == 0x8000000000000000 && v68 == -1) {
        goto LABEL_63;
      }
      uint64_t v72 = v70 / v68;
      v63[2] = v67;
      v63[3] = 2 * (v70 / v68);
      unint64_t v73 = (char *)v63 + v69;
      uint64_t v74 = v35[3] >> 1;
      uint64_t v75 = v74 * v68;
      if (v35[2])
      {
        if (v63 < v35 || v73 >= (char *)v35 + v82 + v75)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v63 != v35)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v35[2] = 0;
      }
      uint64_t v41 = &v73[v75];
      uint64_t v76 = (v72 & 0x7FFFFFFFFFFFFFFFLL) - v74;
      uint64_t result = swift_release();
      uint64_t v16 = v81;
      BOOL v64 = __OFSUB__(v76, 1);
      unint64_t v42 = v76 - 1;
      if (v64)
      {
LABEL_60:
        __break(1u);
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
        goto LABEL_64;
      }
    }
    uint64_t v44 = v62(v41, (uint64_t)v96, v26);
    v41 += *(void *)(v97 + 72);
    uint64_t v35 = v63;
  }
  swift_release();
  swift_release();
  uint64_t result = sub_100010360(v61, &qword_100208648);
  unint64_t v77 = v35[3];
  if (v77 >= 2)
  {
    unint64_t v78 = v77 >> 1;
    BOOL v64 = __OFSUB__(v78, v42);
    unint64_t v79 = v78 - v42;
    if (v64) {
      goto LABEL_66;
    }
    v35[2] = v79;
  }
  return (uint64_t)v35;
}

uint64_t sub_1000F8F94(uint64_t a1)
{
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000074CC;
  return sub_1000F6B18(a1, v4, v5, v6, v7);
}

uint64_t sub_1000F905C()
{
  return sub_1000F76C0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t type metadata accessor for OutgoingUserDataWriter.StateMachine.CancelAction(uint64_t a1)
{
  return sub_10001C958(a1, (uint64_t *)&unk_10020D798);
}

uint64_t sub_1000F9084(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000F90EC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000F914C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OutgoingUserDataWriter.StateMachine.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000F91B0(uint64_t a1)
{
  return sub_1000F7268(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t type metadata accessor for OutgoingUserDataWriter.StateMachine.NextOutgoingAction(uint64_t a1)
{
  return sub_10001C958(a1, (uint64_t *)&unk_10020D6E8);
}

uint64_t type metadata accessor for OutgoingUserDataWriter.StateMachine.SendAction(uint64_t a1)
{
  return sub_10001C958(a1, qword_10020D640);
}

uint64_t sub_1000F91F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OutgoingUserDataWriter.StateMachine(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1000F925C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = *a2;
      swift_errorRetain();
      *a1 = v10;
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = sub_100003918(&qword_10020D438);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1000F9384(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    return swift_errorRelease();
  }
  else if (!result)
  {
    uint64_t v3 = sub_100003918(&qword_10020D438);
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *sub_1000F9428(void *a1, uint64_t *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = *a2;
    swift_errorRetain();
    *a1 = v8;
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_100003918(&qword_10020D438);
    (*(void (**)(void *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t *sub_1000F950C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000F90EC((uint64_t)a1, type metadata accessor for OutgoingUserDataWriter.StateMachine.SendAction);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = *a2;
      swift_errorRetain();
      *a1 = v8;
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_100003918(&qword_10020D438);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *sub_1000F9618(void *a1, const void *a2, uint64_t a3)
{
  return sub_1000FAD2C(a1, a2, a3, type metadata accessor for OutgoingUserDataWriter.StateMachine.SendAction);
}

void sub_1000F9630()
{
}

uint64_t *sub_1000F963C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = *a2;
      swift_errorRetain();
      uint64_t v16 = a2[1];
      *a1 = v15;
      a1[1] = v16;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = sub_100003918(&qword_100208640);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = *(int *)(sub_100003918(&qword_10020C180) + 48);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = *(uint64_t *)((char *)a2 + v9);
      unint64_t v13 = *((void *)v11 + 1);
      sub_100007B14(v12, v13);
      *(void *)uint64_t v10 = v12;
      *((void *)v10 + 1) = v13;
      unsigned char v10[16] = v11[16];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1000F97A8(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    swift_errorRelease();
    return swift_bridgeObjectRelease();
  }
  else if (!result)
  {
    uint64_t v3 = sub_100003918(&qword_100208640);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    uint64_t v4 = (uint64_t *)(a1 + *(int *)(sub_100003918(&qword_10020C180) + 48));
    uint64_t v5 = *v4;
    unint64_t v6 = v4[1];
    return sub_10000792C(v5, v6);
  }
  return result;
}

void *sub_1000F9870(void *a1, uint64_t *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v13 = *a2;
    swift_errorRetain();
    uint64_t v14 = a2[1];
    *a1 = v13;
    a1[1] = v14;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_100003918(&qword_100208640);
    (*(void (**)(void *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(sub_100003918(&qword_10020C180) + 48);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(uint64_t *)((char *)a2 + v8);
    unint64_t v12 = *((void *)v10 + 1);
    sub_100007B14(v11, v12);
    *(void *)uint64_t v9 = v11;
    *((void *)v9 + 1) = v12;
    v9[16] = v10[16];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t *sub_1000F9998(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000F90EC((uint64_t)a1, type metadata accessor for OutgoingUserDataWriter.StateMachine.NextOutgoingAction);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v13 = *a2;
      swift_errorRetain();
      *a1 = v13;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_100003918(&qword_100208640);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = *(int *)(sub_100003918(&qword_10020C180) + 48);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = *(uint64_t *)((char *)a2 + v8);
      unint64_t v12 = *((void *)v10 + 1);
      sub_100007B14(v11, v12);
      *(void *)uint64_t v9 = v11;
      *((void *)v9 + 1) = v12;
      v9[16] = v10[16];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

char *sub_1000F9AE8(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_100003918(&qword_100208640);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = *(int *)(sub_100003918(&qword_10020C180) + 48);
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    v8[16] = v9[16];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1000F9BC8(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000F90EC((uint64_t)a1, type metadata accessor for OutgoingUserDataWriter.StateMachine.NextOutgoingAction);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_100003918(&qword_100208640);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = *(int *)(sub_100003918(&qword_10020C180) + 48);
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      v8[16] = v9[16];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void sub_1000F9CCC()
{
  sub_1000F9D70();
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v1[4] = v1;
    v1[5] = &unk_1001D37C0;
    swift_initEnumMetadataMultiPayload();
  }
}

void sub_1000F9D70()
{
  if (!qword_10020D6F8)
  {
    sub_1000166C8(&qword_100208C98);
    unint64_t v0 = sub_1001C0ED0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10020D6F8);
    }
  }
}

uint64_t *sub_1000F9DE0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_100003918(&qword_10020D5C0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = *a2;
      swift_errorRetain();
      *a1 = v10;
      uint64_t v11 = *(int *)(v7 + 48);
      unint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_100003918(&qword_10020D438);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_1000F9F6C(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020D5C0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    swift_errorRelease();
    uint64_t v4 = a1 + *(int *)(v2 + 48);
    uint64_t v5 = sub_100003918(&qword_10020D438);
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  return result;
}

void *sub_1000FA038(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = sub_100003918(&qword_10020D5C0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = *a2;
    swift_errorRetain();
    *a1 = v8;
    uint64_t v9 = *(int *)(v6 + 48);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_100003918(&qword_10020D438);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

uint64_t *sub_1000FA188(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = sub_100003918(&qword_10020D5C0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v17 = *a2;
      swift_errorRetain();
      *a1 = v17;
      swift_errorRelease();
      uint64_t v18 = *(int *)(v6 + 48);
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      uint64_t v21 = sub_100003918(&qword_10020D438);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
      return a1;
    }
    sub_100010360((uint64_t)a1, &qword_10020D5C0);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = *a2;
  swift_errorRetain();
  *a1 = v11;
  uint64_t v12 = *(int *)(v6 + 48);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_100003918(&qword_10020D438);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *sub_1000FA37C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_100003918(&qword_10020D5C0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v8 = *(int *)(v6 + 48);
    int v9 = (char *)a1 + v8;
    int v10 = (char *)a2 + v8;
    uint64_t v11 = sub_100003918(&qword_10020D438);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_1000FA4C4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_100003918(&qword_10020D5C0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      swift_errorRelease();
      uint64_t v16 = *(int *)(v6 + 48);
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = sub_100003918(&qword_10020D438);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
      return a1;
    }
    sub_100010360((uint64_t)a1, &qword_10020D5C0);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  uint64_t v11 = *(int *)(v6 + 48);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_100003918(&qword_10020D438);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_1000FA6A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000FA6BC);
}

uint64_t sub_1000FA6BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100003918(&qword_10020D5C0);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1000FA72C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000FA740);
}

uint64_t sub_1000FA740(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_100003918(&qword_10020D5C0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_1000FA7C4(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020D5C0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 1, v2);
}

uint64_t sub_1000FA830(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100003918(&qword_10020D5C0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 1, v4);
}

void sub_1000FA8A4()
{
  sub_1000F678C();
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
  }
}

uint64_t *sub_1000FA938(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v7 = sub_100003918(&qword_10020D438);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1000FAA3C(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = sub_100003918(&qword_10020D438);
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
}

void *sub_1000FAAD0(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v4 = sub_100003918(&qword_10020D438);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1000FAB84(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1000F90EC((uint64_t)a1, type metadata accessor for OutgoingUserDataWriter.StateMachine.CancelWriterAction);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v4 = sub_100003918(&qword_10020D438);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1000FAC5C(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_100003918(&qword_10020D438);
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1000FAD14(void *a1, const void *a2, uint64_t a3)
{
  return sub_1000FAD2C(a1, a2, a3, type metadata accessor for OutgoingUserDataWriter.StateMachine.CancelWriterAction);
}

void *sub_1000FAD2C(void *a1, const void *a2, uint64_t a3, uint64_t (*a4)(void))
{
  if (a1 != a2)
  {
    sub_1000F90EC((uint64_t)a1, a4);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_100003918(&qword_10020D438);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void sub_1000FADF8()
{
}

void sub_1000FAE08()
{
  sub_1000F678C();
  if (v0 <= 0x3F) {
    swift_initEnumMetadataMultiPayload();
  }
}

uint64_t Error.telemetryString.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  *a3 = Error._telemetryString.getter(a1, a2);
  a3[1] = v4;
  uint64_t v5 = enum case for EventValue.string(_:);
  uint64_t v6 = sub_1001BF450();
  uint64_t v7 = *(uint64_t (**)(unint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104);
  return v7(a3, v5, v6);
}

unint64_t Error._telemetryString.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v90 = a2;
  uint64_t v76 = sub_1001C07C0();
  uint64_t v72 = *(void *)(v76 - 8);
  uint64_t v5 = __chkstk_darwin(v76, v4);
  uint64_t v70 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v7);
  uint64_t v75 = (char *)&v68 - v8;
  uint64_t v80 = sub_1001BFE70();
  uint64_t v74 = *(void *)(v80 - 8);
  uint64_t v10 = __chkstk_darwin(v80, v9);
  unint64_t v73 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v12);
  unint64_t v79 = (char *)&v68 - v13;
  uint64_t v84 = sub_1001BFE80();
  uint64_t v78 = *(void *)(v84 - 8);
  uint64_t v15 = __chkstk_darwin(v84, v14);
  unint64_t v77 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v17);
  uint64_t v83 = (char *)&v68 - v18;
  uint64_t v87 = sub_1001BF590();
  uint64_t v82 = *(void *)(v87 - 8);
  uint64_t v20 = __chkstk_darwin(v87, v19);
  uint64_t v81 = (char *)&v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v22);
  uint64_t v86 = (char *)&v68 - v23;
  uint64_t v88 = sub_1001BF510();
  uint64_t v85 = *(void *)(v88 - 8);
  uint64_t v25 = __chkstk_darwin(v88, v24);
  uint64_t v27 = (char *)&v68 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25, v28);
  uint64_t v30 = (char *)&v68 - v29;
  uint64_t v31 = sub_1001BF810();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v34 = __chkstk_darwin(v31, v33);
  uint64_t v36 = (char *)&v68 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __chkstk_darwin(v34, v37);
  uint64_t v40 = (char *)&v68 - v39;
  uint64_t v41 = *(void *)(a1 - 8);
  uint64_t v43 = __chkstk_darwin(v38, v42);
  uint64_t v69 = (char *)&v68 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43, v45);
  uint64_t v47 = (char *)&v68 - v46;
  uint64_t v89 = v41;
  uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 16);
  uint64_t v71 = v2;
  uint64_t v68 = v48;
  v48((char *)&v68 - v46, v2, a1);
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v36, v40, v31);
    unint64_t v49 = sub_1000FB7BC((uint64_t)v36);
    uint64_t v50 = v31;
    uint64_t v51 = a1;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v36, v50);
LABEL_16:
    uint64_t v62 = v89;
    goto LABEL_17;
  }
  uint64_t v51 = a1;
  if (swift_dynamicCast())
  {
    unint64_t v49 = sub_1000FEBE8(v91);
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  uint64_t v52 = v88;
  if (swift_dynamicCast())
  {
    uint64_t v53 = v85;
    (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v27, v30, v52);
    unint64_t v49 = sub_1000FDA8C((uint64_t)v27);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v27, v52);
    goto LABEL_16;
  }
  uint64_t v55 = v86;
  uint64_t v54 = v87;
  if (swift_dynamicCast())
  {
    uint64_t v57 = (uint64_t)v81;
    uint64_t v56 = v82;
    (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v81, v55, v54);
    unint64_t v58 = sub_1000FDE68(v57);
LABEL_15:
    unint64_t v49 = v58;
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v57, v54);
    goto LABEL_16;
  }
  uint64_t v59 = v83;
  uint64_t v54 = v84;
  if (swift_dynamicCast())
  {
    uint64_t v57 = (uint64_t)v77;
    uint64_t v56 = v78;
    (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v77, v59, v54);
    unint64_t v58 = sub_1000FE31C(v57);
    goto LABEL_15;
  }
  uint64_t v60 = v79;
  uint64_t v54 = v80;
  if (swift_dynamicCast())
  {
    uint64_t v57 = (uint64_t)v73;
    uint64_t v56 = v74;
    (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v73, v60, v54);
    unint64_t v58 = sub_1000FE4D8(v57);
    goto LABEL_15;
  }
  uint64_t v61 = v75;
  uint64_t v54 = v76;
  if (swift_dynamicCast())
  {
    uint64_t v56 = v72;
    uint64_t v57 = (uint64_t)v70;
    (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v70, v61, v54);
    unint64_t v58 = sub_1000FE798(v57);
    goto LABEL_15;
  }
  BOOL v64 = v69;
  v68(v69, v71, a1);
  unint64_t v65 = v47;
  if (sub_1001C1810())
  {
    uint64_t v62 = v89;
    (*(void (**)(char *, uint64_t))(v89 + 8))(v64, a1);
  }
  else
  {
    swift_allocError();
    uint64_t v62 = v89;
    (*(void (**)(uint64_t, char *, uint64_t))(v89 + 32))(v66, v64, a1);
  }
  uint64_t v67 = (void *)sub_1001BEFD0();
  swift_errorRelease();
  unint64_t v49 = sub_1000FEA94(v67);

  uint64_t v47 = v65;
LABEL_17:
  (*(void (**)(char *, uint64_t))(v62 + 8))(v47, v51);
  return v49;
}

uint64_t sub_1000FB7BC(uint64_t a1)
{
  uint64_t v181 = sub_1001BF6D0();
  uint64_t v180 = *(void *)(v181 - 8);
  __chkstk_darwin(v181, v2);
  uint64_t v179 = (char *)&v169 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100003918(&qword_10020D850);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v190 = (char *)&v169 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v193 = sub_1001BF710();
  uint64_t v191 = *(void *)(v193 - 8);
  uint64_t v8 = __chkstk_darwin(v193, v7);
  uint64_t v182 = (char *)&v169 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v10);
  uint64_t v183 = (char *)&v169 - v11;
  uint64_t v195 = sub_1001BF750();
  uint64_t v192 = *(void *)(v195 - 8);
  __chkstk_darwin(v195, v12);
  uint64_t v194 = (char *)&v169 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100003918(&qword_10020D858);
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v176 = (char *)&v169 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v178 = sub_1001BFC00();
  uint64_t v177 = *(void *)(v178 - 8);
  __chkstk_darwin(v178, v17);
  uint64_t v170 = (char *)&v169 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100003918(&qword_10020D860);
  __chkstk_darwin(v19 - 8, v20);
  uint64_t v186 = (char *)&v169 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = sub_1001BFB40();
  uint64_t v188 = *(void *)(v189 - 8);
  __chkstk_darwin(v189, v22);
  uint64_t v175 = (char *)&v169 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = sub_1001BFC40();
  uint64_t v173 = *(void *)(v174 - 8);
  __chkstk_darwin(v174, v24);
  uint64_t v172 = (char *)&v169 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100003918(&qword_10020D868);
  __chkstk_darwin(v26 - 8, v27);
  uint64_t v197 = (char *)&v169 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v199 = sub_1001BFC50();
  uint64_t v198 = *(void *)(v199 - 8);
  uint64_t v30 = __chkstk_darwin(v199, v29);
  uint64_t v171 = (char *)&v169 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v30, v32);
  uint64_t v184 = (char *)&v169 - v34;
  __chkstk_darwin(v33, v35);
  uint64_t v196 = (char *)&v169 - v36;
  uint64_t v201 = sub_1001BFB90();
  uint64_t v200 = *(void *)(v201 - 8);
  uint64_t v38 = __chkstk_darwin(v201, v37);
  uint64_t v185 = (char *)&v169 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38, v40);
  uint64_t v187 = (char *)&v169 - v41;
  uint64_t v42 = sub_1001BF690();
  uint64_t v203 = *(void *)(v42 - 8);
  uint64_t v204 = v42;
  __chkstk_darwin(v42, v43);
  uint64_t v202 = (char *)&v169 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_100003918(&qword_10020D870);
  __chkstk_darwin(v45 - 8, v46);
  uint64_t v206 = (char *)&v169 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v208 = sub_1001BF640();
  uint64_t v205 = *(void *)(v208 - 8);
  __chkstk_darwin(v208, v48);
  uint64_t v207 = (char *)&v169 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_100003918(&qword_10020D878);
  __chkstk_darwin(v50 - 8, v51);
  uint64_t v210 = (char *)&v169 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v212 = sub_1001BF670();
  uint64_t v209 = *(void *)(v212 - 8);
  __chkstk_darwin(v212, v53);
  uint64_t v211 = (char *)&v169 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_100003918(&qword_10020D880);
  __chkstk_darwin(v55 - 8, v56);
  uint64_t v214 = (char *)&v169 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)&v215 + 1) = sub_1001BF700();
  uint64_t v213 = *(void *)(*((void *)&v215 + 1) - 8);
  __chkstk_darwin(*((void *)&v215 + 1), v58);
  *(void *)&unsigned long long v215 = (char *)&v169 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_100003918(qword_10020D888);
  __chkstk_darwin(v60 - 8, v61);
  uint64_t v63 = (char *)&v169 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1001BF7E0();
  uint64_t v65 = *(void *)(v64 - 8);
  __chkstk_darwin(v64, v66);
  uint64_t v68 = (char *)&v169 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_1001BF810();
  uint64_t v70 = *(void *)(v69 - 8);
  __chkstk_darwin(v69, v71);
  unint64_t v73 = (char *)&v169 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&unsigned long long v219 = 0;
  *((void *)&v219 + 1) = 0xE000000000000000;
  sub_1001C1420(27);
  swift_bridgeObjectRelease();
  *(void *)&unsigned long long v219 = 0xD000000000000019;
  *((void *)&v219 + 1) = 0x80000001001C5790;
  uint64_t v74 = a1;
  v220._countAndFlagsBits = sub_1001BF7B0();
  sub_1001C0D00(v220);
  swift_bridgeObjectRelease();
  unint64_t v75 = *((void *)&v219 + 1);
  uint64_t v76 = v219;
  (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v73, v74, v69);
  int v77 = (*(uint64_t (**)(char *, uint64_t))(v70 + 88))(v73, v69);
  if (v77 == enum case for TrustedCloudComputeError.deniedDueToRateLimit(_:))
  {
    (*(void (**)(char *, uint64_t))(v70 + 96))(v73, v69);
    uint64_t v78 = sub_1001BF7A0();
    (*(void (**)(char *, uint64_t))(*(void *)(v78 - 8) + 8))(v73, v78);
    return v76;
  }
  if (v77 == enum case for TrustedCloudComputeError.deniedDueToAvailability(_:))
  {
    *((void *)&v215 + 1) = v75;
    (*(void (**)(char *, uint64_t))(v70 + 96))(v73, v69);
    uint64_t v80 = v73;
    uint64_t v81 = v64;
    (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v68, v80, v64);
    sub_1001BF7D0();
    uint64_t v82 = sub_1001BF7C0();
    uint64_t v83 = *(void *)(v82 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v63, 1, v82) == 1)
    {
      (*(void (**)(char *, uint64_t))(v65 + 8))(v68, v64);
    }
    else
    {
      int v91 = (*(uint64_t (**)(char *, uint64_t))(v83 + 88))(v63, v82);
      if (v91 == enum case for TrustedCloudComputeError.AvailabilityInfo.Reason.unknownWorkload(_:))
      {
        *(void *)&unsigned long long v219 = 0;
        *((void *)&v219 + 1) = 0xE000000000000000;
        sub_1001C1420(18);
        swift_bridgeObjectRelease();
        *(void *)&unsigned long long v219 = v76;
        *((void *)&v219 + 1) = *((void *)&v215 + 1);
        v92._countAndFlagsBits = 0xD000000000000010;
        v92._object = (void *)0x80000001001C5A30;
      }
      else if (v91 == enum case for TrustedCloudComputeError.AvailabilityInfo.Reason.noNodesAvailable(_:))
      {
        *(void *)&unsigned long long v219 = 0;
        *((void *)&v219 + 1) = 0xE000000000000000;
        sub_1001C1420(19);
        swift_bridgeObjectRelease();
        *(void *)&unsigned long long v219 = v76;
        *((void *)&v219 + 1) = *((void *)&v215 + 1);
        v92._object = (void *)0x80000001001C5A70;
        v92._countAndFlagsBits = 0xD000000000000011;
      }
      else
      {
        if (v91 != enum case for TrustedCloudComputeError.AvailabilityInfo.Reason.nodesBusy(_:))
        {
          unsigned int v132 = (void (**)(char *, uint64_t))(v65 + 8);
          *(void *)&unsigned long long v219 = 0;
          *((void *)&v219 + 1) = 0xE000000000000000;
          if (v91 == enum case for TrustedCloudComputeError.AvailabilityInfo.Reason.nodeAttestationChanged(_:))
          {
            sub_1001C1420(25);
            swift_bridgeObjectRelease();
            *(void *)&unsigned long long v219 = v76;
            *((void *)&v219 + 1) = *((void *)&v215 + 1);
            v227._countAndFlagsBits = 0xD000000000000017;
            v227._object = (void *)0x80000001001C5A50;
            sub_1001C0D00(v227);
            uint64_t v76 = v219;
            (*v132)(v68, v81);
          }
          else
          {
            sub_1001C1420(19);
            swift_bridgeObjectRelease();
            *(void *)&unsigned long long v219 = v76;
            *((void *)&v219 + 1) = *((void *)&v215 + 1);
            v230._object = (void *)0x80000001001C57B0;
            v230._countAndFlagsBits = 0xD000000000000011;
            sub_1001C0D00(v230);
            uint64_t v76 = v219;
            (*v132)(v68, v81);
            (*(void (**)(char *, uint64_t))(v83 + 8))(v63, v82);
          }
          return v76;
        }
        *(void *)&unsigned long long v219 = v76;
        *((void *)&v219 + 1) = *((void *)&v215 + 1);
        v92._countAndFlagsBits = 0x75427365646F6E5FLL;
        v92._object = (void *)0xEA00000000007973;
      }
      sub_1001C0D00(v92);
      uint64_t v76 = v219;
      (*(void (**)(char *, uint64_t))(v65 + 8))(v68, v64);
    }
    return v76;
  }
  if (v77 == enum case for TrustedCloudComputeError.timeoutError(_:))
  {
    unint64_t v84 = v75;
    (*(void (**)(char *, uint64_t))(v70 + 96))(v73, v69);
    uint64_t v85 = v213;
    uint64_t v87 = v215;
    uint64_t v86 = (void *)*((void *)&v215 + 1);
    (*(void (**)(uint64_t, char *, void *))(v213 + 32))(v215, v73, *((void **)&v215 + 1));
    uint64_t v88 = v214;
    sub_1001BF6F0();
    uint64_t v89 = sub_1001BF6E0();
    uint64_t v90 = *(void *)(v89 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v88, 1, v89) == 1)
    {
      (*(void (**)(uint64_t, void *))(v85 + 8))(v87, v86);
      return v76;
    }
    int v99 = (*(uint64_t (**)(char *, uint64_t))(v90 + 88))(v88, v89);
    if (v99 == enum case for TrustedCloudComputeError.TimeoutErrorInfo.Reason.setupRequestTimeout(_:))
    {
      *(void *)&unsigned long long v219 = 0;
      *((void *)&v219 + 1) = 0xE000000000000000;
      sub_1001C1420(22);
      swift_bridgeObjectRelease();
      unsigned long long v219 = __PAIR128__(v84, v76);
      v221._countAndFlagsBits = 0xD000000000000014;
      v221._object = (void *)0x80000001001C5A10;
      sub_1001C0D00(v221);
      uint64_t v76 = v219;
      uint64_t v100 = *(void (**)(uint64_t, void *))(v85 + 8);
    }
    else
    {
      uint64_t v111 = (void (**)(uint64_t, void *))(v85 + 8);
      if (v99 != enum case for TrustedCloudComputeError.TimeoutErrorInfo.Reason.decryptionKeyTimeout(_:))
      {
        *(void *)&unsigned long long v219 = 0;
        *((void *)&v219 + 1) = 0xE000000000000000;
        sub_1001C1420(19);
        swift_bridgeObjectRelease();
        unsigned long long v219 = __PAIR128__(v84, v76);
        v226._object = (void *)0x80000001001C57B0;
        v226._countAndFlagsBits = 0xD000000000000011;
        sub_1001C0D00(v226);
        uint64_t v76 = v219;
        (*v111)(v87, v86);
        (*(void (**)(char *, uint64_t))(v90 + 8))(v88, v89);
        return v76;
      }
      *(void *)&unsigned long long v219 = 0;
      *((void *)&v219 + 1) = 0xE000000000000000;
      sub_1001C1420(23);
      swift_bridgeObjectRelease();
      unsigned long long v219 = __PAIR128__(v84, v76);
      v223._countAndFlagsBits = 0xD000000000000015;
      v223._object = (void *)0x80000001001C59F0;
      sub_1001C0D00(v223);
      uint64_t v76 = v219;
      uint64_t v100 = *v111;
    }
    uint64_t v112 = v87;
LABEL_27:
    v100(v112, v86);
    return v76;
  }
  if (v77 == enum case for TrustedCloudComputeError.invalidRequestError(_:))
  {
    (*(void (**)(char *, uint64_t))(v70 + 96))(v73, v69);
    uint64_t v93 = v209;
    uint64_t v95 = v211;
    uint64_t v94 = v212;
    (*(void (**)(char *, char *, uint64_t))(v209 + 32))(v211, v73, v212);
    uint64_t v96 = v210;
    sub_1001BF660();
    uint64_t v97 = sub_1001BF650();
    uint64_t v98 = *(void *)(v97 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48))(v96, 1, v97) == 1)
    {
      (*(void (**)(char *, uint64_t))(v93 + 8))(v95, v94);
    }
    else
    {
      unint64_t v109 = v75;
      uint64_t v110 = (void (**)(char *, uint64_t))(v93 + 8);
      if ((*(unsigned int (**)(char *, uint64_t))(v98 + 88))(v96, v97) == enum case for TrustedCloudComputeError.InvalidRequestErrorInfo.Reason.invalidWorkload(_:))
      {
        *(void *)&unsigned long long v219 = 0;
        *((void *)&v219 + 1) = 0xE000000000000000;
        sub_1001C1420(18);
        swift_bridgeObjectRelease();
        unsigned long long v219 = __PAIR128__(v109, v76);
        v222._countAndFlagsBits = 0xD000000000000010;
        v222._object = (void *)0x80000001001C59D0;
        sub_1001C0D00(v222);
        uint64_t v76 = v219;
        (*v110)(v95, v94);
      }
      else
      {
        *(void *)&unsigned long long v219 = 0;
        *((void *)&v219 + 1) = 0xE000000000000000;
        sub_1001C1420(19);
        swift_bridgeObjectRelease();
        unsigned long long v219 = __PAIR128__(v109, v76);
        v225._object = (void *)0x80000001001C57B0;
        v225._countAndFlagsBits = 0xD000000000000011;
        sub_1001C0D00(v225);
        uint64_t v76 = v219;
        (*v110)(v95, v94);
        (*(void (**)(char *, uint64_t))(v98 + 8))(v96, v97);
      }
    }
    return v76;
  }
  if (v77 == enum case for TrustedCloudComputeError.unauthorizedError(_:))
  {
    unint64_t v101 = v75;
    (*(void (**)(char *, uint64_t))(v70 + 96))(v73, v69);
    uint64_t v102 = v205;
    uint64_t v103 = v207;
    uint64_t v104 = v73;
    uint64_t v105 = v208;
    (*(void (**)(char *, char *, uint64_t))(v205 + 32))(v207, v104, v208);
    uint64_t v106 = v206;
    sub_1001BF630();
    uint64_t v107 = sub_1001BF620();
    uint64_t v108 = *(void *)(v107 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v108 + 48))(v106, 1, v107) == 1)
    {
      (*(void (**)(char *, uint64_t))(v102 + 8))(v103, v105);
    }
    else
    {
      uint64_t v131 = (void (**)(char *, uint64_t))(v102 + 8);
      if ((*(unsigned int (**)(char *, uint64_t))(v108 + 88))(v106, v107) == enum case for TrustedCloudComputeError.UnauthorizedErrorInfo.Reason.softwareBlocked(_:))
      {
        *(void *)&unsigned long long v219 = 0;
        *((void *)&v219 + 1) = 0xE000000000000000;
        sub_1001C1420(18);
        swift_bridgeObjectRelease();
        unsigned long long v219 = __PAIR128__(v101, v76);
        v224._countAndFlagsBits = 0xD000000000000010;
        v224._object = (void *)0x80000001001C59B0;
        sub_1001C0D00(v224);
        uint64_t v76 = v219;
        (*v131)(v103, v105);
      }
      else
      {
        *(void *)&unsigned long long v219 = 0;
        *((void *)&v219 + 1) = 0xE000000000000000;
        sub_1001C1420(19);
        swift_bridgeObjectRelease();
        unsigned long long v219 = __PAIR128__(v101, v76);
        v229._object = (void *)0x80000001001C57B0;
        v229._countAndFlagsBits = 0xD000000000000011;
        sub_1001C0D00(v229);
        uint64_t v76 = v219;
        (*v131)(v103, v105);
        (*(void (**)(char *, uint64_t))(v108 + 8))(v106, v107);
      }
    }
    return v76;
  }
  if (v77 == enum case for TrustedCloudComputeError.serverError(_:))
  {
    *(void *)&unsigned long long v215 = v76;
    *((void *)&v215 + 1) = v75;
    (*(void (**)(char *, uint64_t))(v70 + 96))(v73, v69);
    uint64_t v114 = v202;
    uint64_t v113 = v203;
    uint64_t v115 = v204;
    (*(void (**)(char *, char *, uint64_t))(v203 + 32))(v202, v73, v204);
    uint64_t v116 = v196;
    sub_1001BF680();
    uint64_t v117 = v197;
    sub_1001BFBA0();
    uint64_t v118 = (uint64_t)v117;
    uint64_t v119 = *(void (**)(char *, uint64_t))(v198 + 8);
    uint64_t v120 = v199;
    v119(v116, v199);
    uint64_t v121 = v200;
    uint64_t v122 = v201;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v200 + 48))(v118, 1, v201) == 1)
    {
      sub_100010360(v118, &qword_10020D868);
      uint64_t v123 = v184;
      sub_1001BF680();
      uint64_t v124 = (uint64_t)v186;
      sub_1001BFC20();
      v119(v123, v120);
      uint64_t v125 = v188;
      uint64_t v126 = v189;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v188 + 48))(v124, 1, v189) == 1)
      {
        sub_100010360(v124, &qword_10020D860);
        id v127 = v171;
        sub_1001BF680();
        char v128 = v176;
        sub_1001BFC10();
        v119(v127, v120);
        uint64_t v129 = (uint64_t)v128;
        uint64_t v125 = v177;
        unint64_t v130 = v128;
        uint64_t v126 = v178;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v177 + 48))(v130, 1, v178) == 1)
        {
          sub_100010360(v129, &qword_10020D858);
          (*(void (**)(char *, uint64_t))(v113 + 8))(v114, v204);
          return v215;
        }
        uint64_t v152 = v170;
        (*(void (**)(char *, uint64_t, uint64_t))(v125 + 32))(v170, v129, v126);
        *(void *)&unsigned long long v219 = 0;
        *((void *)&v219 + 1) = 0xE000000000000000;
        sub_1001C0D00((Swift::String)v215);
        swift_bridgeObjectRelease();
        v153._countAndFlagsBits = 0x5F707474685FLL;
      }
      else
      {
        uint64_t v152 = v175;
        (*(void (**)(char *, uint64_t, uint64_t))(v125 + 32))(v175, v124, v126);
        *(void *)&unsigned long long v219 = 0;
        *((void *)&v219 + 1) = 0xE000000000000000;
        sub_1001C0D00((Swift::String)v215);
        swift_bridgeObjectRelease();
        v153._countAndFlagsBits = 0x5F637072675FLL;
      }
      v153._object = (void *)0xE600000000000000;
      sub_1001C0D00(v153);
      sub_1001C1510();
      uint64_t v76 = v219;
      (*(void (**)(char *, uint64_t))(v125 + 8))(v152, v126);
    }
    else
    {
      uint64_t v140 = v187;
      (*(void (**)(char *, uint64_t, uint64_t))(v121 + 32))(v187, v118, v122);
      uint64_t v141 = (uint64_t *)v185;
      (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v185, v140, v122);
      int v142 = (*(uint64_t (**)(uint64_t *, uint64_t))(v121 + 88))(v141, v122);
      if (v142 != enum case for TC2RopesResponseMetadata.ReceivedErrorCode.errorCode(_:))
      {
        if (v142 == enum case for TC2RopesResponseMetadata.ReceivedErrorCode.unrecognizedErrorCode(_:))
        {
          (*(void (**)(uint64_t *, uint64_t))(v121 + 96))(v141, v122);
          uint64_t v159 = *v141;
          unsigned long long v219 = v215;
          v234._countAndFlagsBits = 95;
          v234._object = (void *)0xE100000000000000;
          sub_1001C0D00(v234);
          uint64_t v217 = v159;
          v235._countAndFlagsBits = sub_1001C1780();
          sub_1001C0D00(v235);
          swift_bridgeObjectRelease();
          uint64_t v76 = v219;
          (*(void (**)(char *, uint64_t))(v121 + 8))(v140, v122);
          (*(void (**)(char *, uint64_t))(v113 + 8))(v114, v115);
        }
        else
        {
          *(void *)&unsigned long long v219 = 0;
          *((void *)&v219 + 1) = 0xE000000000000000;
          sub_1001C1420(19);
          swift_bridgeObjectRelease();
          unsigned long long v219 = v215;
          v237._object = (void *)0x80000001001C57B0;
          v237._countAndFlagsBits = 0xD000000000000011;
          sub_1001C0D00(v237);
          uint64_t v76 = v219;
          uint64_t v160 = *(void (**)(char *, uint64_t))(v121 + 8);
          v160(v140, v122);
          (*(void (**)(char *, uint64_t))(v113 + 8))(v114, v115);
          v160((char *)v141, v122);
        }
        return v76;
      }
      (*(void (**)(uint64_t *, uint64_t))(v121 + 96))(v141, v122);
      uint64_t v143 = v173;
      uint64_t v144 = v172;
      uint64_t v145 = v141;
      uint64_t v146 = v174;
      (*(void (**)(char *, uint64_t *, uint64_t))(v173 + 32))(v172, v145, v174);
      *(void *)&unsigned long long v219 = 0;
      *((void *)&v219 + 1) = 0xE000000000000000;
      sub_1001C0D00((Swift::String)v215);
      swift_bridgeObjectRelease();
      v228._countAndFlagsBits = 95;
      v228._object = (void *)0xE100000000000000;
      sub_1001C0D00(v228);
      sub_1001C1510();
      uint64_t v76 = v219;
      (*(void (**)(char *, uint64_t))(v143 + 8))(v144, v146);
      (*(void (**)(char *, uint64_t))(v121 + 8))(v140, v122);
    }
    (*(void (**)(char *, uint64_t))(v113 + 8))(v114, v204);
    return v76;
  }
  if (v77 == enum case for TrustedCloudComputeError.internalError(_:))
  {
    uint64_t v133 = v76;
    (*(void (**)(char *, uint64_t))(v70 + 96))(v73, v69);
    uint64_t v134 = v192;
    uint64_t v135 = v194;
    uint64_t v136 = v195;
    (*(void (**)(char *, char *, uint64_t))(v192 + 32))(v194, v73, v195);
    uint64_t v137 = (uint64_t)v190;
    sub_1001BF720();
    uint64_t v138 = v191;
    uint64_t v139 = v193;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v191 + 48))(v137, 1, v193) == 1)
    {
      sub_100010360(v137, &qword_10020D850);
      (*(void (**)(char *, uint64_t))(v134 + 8))(v135, v136);
      return v76;
    }
    uint64_t v154 = v183;
    (*(void (**)(char *, uint64_t, uint64_t))(v138 + 32))(v183, v137, v139);
    uint64_t v155 = v182;
    (*(void (**)(char *, char *, uint64_t))(v138 + 16))(v182, v154, v139);
    int v156 = (*(uint64_t (**)(char *, uint64_t))(v138 + 88))(v155, v139);
    if (v156 == enum case for TrustedCloudComputeError.InternalErrorInfo.Reason.xpcConnectionInterrupted(_:))
    {
      *(void *)&unsigned long long v219 = 0;
      *((void *)&v219 + 1) = 0xE000000000000000;
      sub_1001C1420(27);
      swift_bridgeObjectRelease();
      unsigned long long v219 = __PAIR128__(v75, v133);
      v157._countAndFlagsBits = 0xD000000000000019;
      uint64_t v158 = "_xpcConnectionInterrupted";
    }
    else if (v156 == enum case for TrustedCloudComputeError.InternalErrorInfo.Reason.failedToLoadKeyData(_:))
    {
      *(void *)&unsigned long long v219 = 0;
      *((void *)&v219 + 1) = 0xE000000000000000;
      sub_1001C1420(22);
      swift_bridgeObjectRelease();
      unsigned long long v219 = __PAIR128__(v75, v133);
      v157._countAndFlagsBits = 0xD000000000000014;
      uint64_t v158 = "_failedToLoadKeyData";
    }
    else if (v156 == enum case for TrustedCloudComputeError.InternalErrorInfo.Reason.failedToFetchPrivateAccessTokens(_:))
    {
      *(void *)&unsigned long long v219 = 0;
      *((void *)&v219 + 1) = 0xE000000000000000;
      sub_1001C1420(35);
      swift_bridgeObjectRelease();
      unsigned long long v219 = __PAIR128__(v75, v133);
      v157._countAndFlagsBits = 0xD000000000000021;
      uint64_t v158 = "_failedToFetchPrivateAccessTokens";
    }
    else if (v156 == enum case for TrustedCloudComputeError.InternalErrorInfo.Reason.invalidResponseUUID(_:))
    {
      *(void *)&unsigned long long v219 = 0;
      *((void *)&v219 + 1) = 0xE000000000000000;
      sub_1001C1420(22);
      swift_bridgeObjectRelease();
      unsigned long long v219 = __PAIR128__(v75, v133);
      v157._countAndFlagsBits = 0xD000000000000014;
      uint64_t v158 = "_invalidResponseUUID";
    }
    else if (v156 == enum case for TrustedCloudComputeError.InternalErrorInfo.Reason.failedToValidateAllAttestations(_:))
    {
      *(void *)&unsigned long long v219 = 0;
      *((void *)&v219 + 1) = 0xE000000000000000;
      sub_1001C1420(34);
      swift_bridgeObjectRelease();
      unsigned long long v219 = __PAIR128__(v75, v133);
      v157._countAndFlagsBits = 0xD000000000000020;
      uint64_t v158 = "_failedToValidateAllAttestations";
    }
    else
    {
      if (v156 != enum case for TrustedCloudComputeError.InternalErrorInfo.Reason.responseSummaryIndicatesFailure(_:))
      {
        unint64_t v161 = v75;
        if (v156 == enum case for TrustedCloudComputeError.InternalErrorInfo.Reason.responseSummaryIndicatesUnauthenticated(_:))
        {
          *(void *)&unsigned long long v219 = 0;
          *((void *)&v219 + 1) = 0xE000000000000000;
          sub_1001C1420(42);
          swift_bridgeObjectRelease();
          unsigned long long v219 = __PAIR128__(v75, v133);
          v162._countAndFlagsBits = 0xD000000000000028;
          uint64_t v163 = "_responseSummaryIndicatesUnauthenticated";
        }
        else if (v156 == enum case for TrustedCloudComputeError.InternalErrorInfo.Reason.responseSummaryIndicatesInternalError(_:))
        {
          *(void *)&unsigned long long v219 = 0;
          *((void *)&v219 + 1) = 0xE000000000000000;
          sub_1001C1420(40);
          swift_bridgeObjectRelease();
          unsigned long long v219 = __PAIR128__(v75, v133);
          v162._countAndFlagsBits = 0xD000000000000026;
          uint64_t v163 = "_responseSummaryIndicatesInternalError";
        }
        else if (v156 == enum case for TrustedCloudComputeError.InternalErrorInfo.Reason.responseSummaryIndicatesInvalidRequest(_:))
        {
          *(void *)&unsigned long long v219 = 0;
          *((void *)&v219 + 1) = 0xE000000000000000;
          sub_1001C1420(41);
          swift_bridgeObjectRelease();
          unsigned long long v219 = __PAIR128__(v75, v133);
          v162._countAndFlagsBits = 0xD000000000000027;
          uint64_t v163 = "_responseSummaryIndicatesInvalidRequest";
        }
        else if (v156 == enum case for TrustedCloudComputeError.InternalErrorInfo.Reason.missingAttestationBundle(_:))
        {
          *(void *)&unsigned long long v219 = 0;
          *((void *)&v219 + 1) = 0xE000000000000000;
          sub_1001C1420(27);
          swift_bridgeObjectRelease();
          unsigned long long v219 = __PAIR128__(v75, v133);
          v162._countAndFlagsBits = 0xD000000000000019;
          uint64_t v163 = "_missingAttestationBundle";
        }
        else
        {
          if (v156 != enum case for TrustedCloudComputeError.InternalErrorInfo.Reason.invalidAttestationBundle(_:))
          {
            unint64_t v164 = (void (**)(char *, uint64_t))(v191 + 8);
            uint64_t v165 = (void (**)(char *, uint64_t))(v192 + 8);
            *(void *)&unsigned long long v219 = 0;
            *((void *)&v219 + 1) = 0xE000000000000000;
            if (v156 == enum case for TrustedCloudComputeError.InternalErrorInfo.Reason.routingHintMismatch(_:))
            {
              sub_1001C1420(22);
              swift_bridgeObjectRelease();
              unsigned long long v219 = __PAIR128__(v161, v133);
              v239._countAndFlagsBits = 0xD000000000000014;
              v239._object = (void *)0x80000001001C57D0;
              sub_1001C0D00(v239);
              uint64_t v76 = v219;
              (*v164)(v183, v193);
              (*v165)(v194, v195);
            }
            else
            {
              sub_1001C1420(19);
              swift_bridgeObjectRelease();
              unsigned long long v219 = __PAIR128__(v161, v133);
              v240._object = (void *)0x80000001001C57B0;
              v240._countAndFlagsBits = 0xD000000000000011;
              sub_1001C0D00(v240);
              uint64_t v166 = v219;
              uint64_t v167 = *v164;
              uint64_t v168 = v193;
              (*v164)(v183, v193);
              (*v165)(v194, v195);
              v167(v182, v168);
              return v166;
            }
            return v76;
          }
          *(void *)&unsigned long long v219 = 0;
          *((void *)&v219 + 1) = 0xE000000000000000;
          sub_1001C1420(27);
          swift_bridgeObjectRelease();
          unsigned long long v219 = __PAIR128__(v75, v133);
          v162._countAndFlagsBits = 0xD000000000000019;
          uint64_t v163 = "_invalidAttestationBundle";
        }
        v162._object = (void *)((unint64_t)(v163 - 32) | 0x8000000000000000);
        sub_1001C0D00(v162);
        uint64_t v76 = v219;
        (*(void (**)(char *, uint64_t))(v191 + 8))(v183, v193);
        (*(void (**)(char *, uint64_t))(v192 + 8))(v194, v195);
        return v76;
      }
      *(void *)&unsigned long long v219 = 0;
      *((void *)&v219 + 1) = 0xE000000000000000;
      sub_1001C1420(34);
      swift_bridgeObjectRelease();
      unsigned long long v219 = __PAIR128__(v75, v133);
      v157._countAndFlagsBits = 0xD000000000000020;
      uint64_t v158 = "_responseSummaryIndicatesFailure";
    }
    v157._object = (void *)((unint64_t)(v158 - 32) | 0x8000000000000000);
    sub_1001C0D00(v157);
    uint64_t v76 = v219;
    (*(void (**)(char *, uint64_t))(v138 + 8))(v154, v139);
    (*(void (**)(char *, uint64_t))(v134 + 8))(v135, v136);
    return v76;
  }
  if (v77 != enum case for TrustedCloudComputeError.networkError(_:))
  {
    *(void *)&unsigned long long v219 = 0;
    *((void *)&v219 + 1) = 0xE000000000000000;
    sub_1001C1420(19);
    swift_bridgeObjectRelease();
    unsigned long long v219 = __PAIR128__(v75, v76);
    v236._object = (void *)0x80000001001C57B0;
    v236._countAndFlagsBits = 0xD000000000000011;
    sub_1001C0D00(v236);
    uint64_t v76 = v219;
    (*(void (**)(char *, uint64_t))(v70 + 8))(v73, v69);
    return v76;
  }
  (*(void (**)(char *, uint64_t))(v70 + 96))(v73, v69);
  uint64_t v147 = v180;
  uint64_t v148 = v179;
  uint64_t v86 = (void *)v181;
  (*(void (**)(char *, char *, uint64_t))(v180 + 32))(v179, v73, v181);
  unsigned long long v219 = __PAIR128__(v75, v76);
  v231._countAndFlagsBits = 95;
  v231._object = (void *)0xE100000000000000;
  sub_1001C0D00(v231);
  uint64_t v217 = sub_1001BF6C0();
  unint64_t v218 = v149;
  v232._countAndFlagsBits = sub_1001C0D40();
  sub_1001C0D00(v232);
  swift_bridgeObjectRelease();
  v233._countAndFlagsBits = 95;
  v233._object = (void *)0xE100000000000000;
  sub_1001C0D00(v233);
  uint64_t result = sub_1001BF6A0();
  if ((result & 0x8000000000000000) == 0)
  {
    uint64_t v217 = result;
    v150._countAndFlagsBits = sub_1001C1780();
    object = v150._object;
LABEL_66:
    v150._object = object;
    sub_1001C0D00(v150);
    swift_bridgeObjectRelease();
    uint64_t v76 = v219;
    uint64_t v100 = *(void (**)(uint64_t, void *))(v147 + 8);
    uint64_t v112 = (uint64_t)v148;
    goto LABEL_27;
  }
  uint64_t v217 = 78;
  unint64_t v218 = 0xE100000000000000;
  if (!__OFSUB__(0, result))
  {
    uint64_t v216 = -result;
    v238._countAndFlagsBits = sub_1001C1780();
    sub_1001C0D00(v238);
    swift_bridgeObjectRelease();
    v150._countAndFlagsBits = v217;
    object = (void *)v218;
    goto LABEL_66;
  }
  __break(1u);
  return result;
}

unint64_t sub_1000FDA8C(uint64_t a1)
{
  uint64_t v2 = sub_1001BF510();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (uint64_t *)((char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v3 + 16))(v6, a1, v2);
  int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == enum case for CloudAttestationError.unexpected(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v3 + 96))(v6, v2);
    uint64_t v9 = *v6;
    uint64_t v8 = v6[1];
    if (v9 == 0xD000000000000017 && v8 == 0x80000001001C5B90 || (sub_1001C1840() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = 0;
      unint64_t v15 = 0xE000000000000000;
      sub_1001C1420(34);
      swift_bridgeObjectRelease();
      return 0xD000000000000035;
    }
    if (v9 == 0x6C706D6920746F4ELL && v8 == 0xEF6465746E656D65)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v12 = sub_1001C1840();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0) {
        return 0xD000000000000020;
      }
    }
    uint64_t v14 = 0;
    unint64_t v15 = 0xE000000000000000;
    sub_1001C1420(28);
    swift_bridgeObjectRelease();
    return 0xD00000000000002FLL;
  }
  else if (v7 == enum case for CloudAttestationError.attestError(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v3 + 96))(v6, v2);
    swift_errorRelease();
    return 0xD000000000000021;
  }
  else if (v7 == enum case for CloudAttestationError.validateError(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v3 + 96))(v6, v2);
    swift_errorRelease();
    uint64_t v14 = 0;
    unint64_t v15 = 0xE000000000000000;
    sub_1001C1420(16);
    swift_bridgeObjectRelease();
    return 0xD000000000000023;
  }
  else if (v7 == enum case for CloudAttestationError.expired(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v3 + 96))(v6, v2);
    uint64_t v13 = sub_1001BF2C0();
    (*(void (**)(uint64_t *, uint64_t))(*(void *)(v13 - 8) + 8))(v6, v13);
    return 0xD00000000000001DLL;
  }
  else if (v7 == enum case for CloudAttestationError.invalidNonce(_:))
  {
    return 0xD000000000000022;
  }
  else
  {
    uint64_t v14 = 0;
    unint64_t v15 = 0xE000000000000000;
    sub_1001C1420(19);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v6, v2);
    return 0xD000000000000026;
  }
}

uint64_t sub_1000FDE68(uint64_t a1)
{
  unint64_t v2 = 0xD000000000000022;
  uint64_t v3 = sub_1001BF590();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  int v7 = (void *)((char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v4 + 16))(v7, a1, v3);
  int v8 = (*(uint64_t (**)(uint64_t *, uint64_t))(v4 + 88))(v7, v3);
  if (v8 == enum case for TransparencyLogError.httpError(_:))
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t *, uint64_t))(v4 + 96);
    v4 += 96;
    int v8 = v9(v7, v3);
    uint64_t v10 = *v7;
    unint64_t v20 = 0xD00000000000001FLL;
    unint64_t v21 = 0x80000001001C5E60;
    if ((v10 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v10;
LABEL_7:
      v13._countAndFlagsBits = sub_1001C1780();
      object = v13._object;
LABEL_17:
      v13._object = object;
      sub_1001C0D00(v13);
      swift_bridgeObjectRelease();
      return v20;
    }
    uint64_t v18 = 78;
    unint64_t v19 = 0xE100000000000000;
    BOOL v15 = __OFSUB__(0, v10);
    uint64_t v16 = -v10;
    if (!v15) {
      goto LABEL_16;
    }
    __break(1u);
    goto LABEL_13;
  }
  if (v8 != enum case for TransparencyLogError.unrecognized(_:))
  {
    if (v8 == enum case for TransparencyLogError.unknown(_:))
    {
      (*(void (**)(uint64_t *, uint64_t))(v4 + 96))(v7, v3);
      swift_errorRelease();
      return 0xD00000000000001CLL;
    }
LABEL_13:
    if (v8 == enum case for TransparencyLogError.clientError(_:))
    {
      (*(void (**)(uint64_t *, uint64_t))(v4 + 96))(v7, v3);
      swift_errorRelease();
      return 0xD000000000000020;
    }
    if (v8 == enum case for TransparencyLogError.internalError(_:))
    {
LABEL_19:
      unint64_t v20 = 0;
      unint64_t v21 = 0xE000000000000000;
      sub_1001C1420(16);
      swift_bridgeObjectRelease();
      return v2;
    }
    if (v8 == enum case for TransparencyLogError.mutationPending(_:))
    {
      unint64_t v20 = 0;
      unint64_t v21 = 0xE000000000000000;
      sub_1001C1420(18);
      swift_bridgeObjectRelease();
      return 0xD000000000000024;
    }
    if (v8 == enum case for TransparencyLogError.invalidRequest(_:))
    {
      unint64_t v20 = 0;
      unint64_t v21 = 0xE000000000000000;
      sub_1001C1420(17);
      swift_bridgeObjectRelease();
      return 0xD000000000000023;
    }
    if (v8 == enum case for TransparencyLogError.notFound(_:)) {
      return 0xD00000000000001DLL;
    }
    if (v8 != enum case for TransparencyLogError.invalidProof(_:))
    {
      if (v8 == enum case for TransparencyLogError.unknownStatus(_:)) {
        goto LABEL_19;
      }
      if (v8 != enum case for TransparencyLogError.insertFailed(_:))
      {
        if (v8 == enum case for TransparencyLogError.expired(_:)) {
          return 0xD00000000000001CLL;
        }
        unint64_t v20 = 0;
        unint64_t v21 = 0xE000000000000000;
        sub_1001C1420(19);
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v7, v3);
        return 0xD000000000000025;
      }
    }
    return 0xD000000000000021;
  }
  (*(void (**)(uint64_t *, uint64_t))(v4 + 96))(v7, v3);
  uint64_t v11 = *v7;
  unint64_t v20 = 0;
  unint64_t v21 = 0xE000000000000000;
  sub_1001C1420(18);
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v20 = 0xD000000000000022;
  unint64_t v21 = 0x80000001001C5D20;
  if ((v11 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = v11;
    goto LABEL_7;
  }
  uint64_t v18 = 78;
  unint64_t v19 = 0xE100000000000000;
  uint64_t v16 = -v11;
  if (!__OFSUB__(0, v11))
  {
LABEL_16:
    v17[1] = v16;
    v22._countAndFlagsBits = sub_1001C1780();
    sub_1001C0D00(v22);
    swift_bridgeObjectRelease();
    v13._countAndFlagsBits = v18;
    object = (void *)v19;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

unint64_t sub_1000FE31C(uint64_t a1)
{
  unint64_t v2 = 0xD000000000000024;
  uint64_t v3 = sub_1001BFE80();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  int v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, a1, v3);
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v7, v3);
  if (v8 == enum case for BinaryEncodingError.anyTranscodeFailure(_:))
  {
    uint64_t v10 = 0;
    unint64_t v11 = 0xE000000000000000;
    sub_1001C1420(22);
    swift_bridgeObjectRelease();
    return 0xD000000000000027;
  }
  else
  {
    uint64_t v10 = 0;
    unint64_t v11 = 0xE000000000000000;
    if (v8 == enum case for BinaryEncodingError.missingRequiredFields(_:))
    {
      sub_1001C1420(24);
      swift_bridgeObjectRelease();
      return 0xD000000000000029;
    }
    else
    {
      sub_1001C1420(19);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    }
  }
  return v2;
}

unint64_t sub_1000FE4D8(uint64_t a1)
{
  unint64_t v2 = 0xD000000000000025;
  uint64_t v3 = sub_1001BFE70();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  int v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, a1, v3);
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v7, v3);
  if (v8 == enum case for BinaryDecodingError.trailingGarbage(_:))
  {
    uint64_t v10 = 0;
    unint64_t v11 = 0xE000000000000000;
    sub_1001C1420(18);
    swift_bridgeObjectRelease();
    return 0xD000000000000023;
  }
  else if (v8 == enum case for BinaryDecodingError.truncated(_:))
  {
    return 0xD00000000000001DLL;
  }
  else if (v8 == enum case for BinaryDecodingError.invalidUTF8(_:))
  {
    return 0xD00000000000001FLL;
  }
  else if (v8 == enum case for BinaryDecodingError.malformedProtobuf(_:))
  {
    uint64_t v10 = 0;
    unint64_t v11 = 0xE000000000000000;
    sub_1001C1420(20);
    swift_bridgeObjectRelease();
  }
  else if (v8 == enum case for BinaryDecodingError.missingRequiredFields(_:))
  {
    uint64_t v10 = 0;
    unint64_t v11 = 0xE000000000000000;
    sub_1001C1420(24);
    swift_bridgeObjectRelease();
    return 0xD000000000000029;
  }
  else if (v8 == enum case for BinaryDecodingError.internalExtensionError(_:))
  {
    uint64_t v10 = 0;
    unint64_t v11 = 0xE000000000000000;
    sub_1001C1420(25);
    swift_bridgeObjectRelease();
    return 0xD00000000000002ALL;
  }
  else
  {
    uint64_t v10 = 0;
    unint64_t v11 = 0xE000000000000000;
    if (v8 == enum case for BinaryDecodingError.messageDepthLimit(_:))
    {
      sub_1001C1420(20);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1001C1420(19);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      return 0xD000000000000024;
    }
  }
  return v2;
}

uint64_t sub_1000FE798(uint64_t a1)
{
  uint64_t v2 = sub_1001C07C0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (_DWORD *)((char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(int *, uint64_t, uint64_t))(v3 + 16))(v6, a1, v2);
  int v7 = (*(uint64_t (**)(int *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 != enum case for NWError.posix(_:))
  {
    if (v7 == enum case for NWError.dns(_:))
    {
      uint64_t v9 = *(uint64_t (**)(int *, uint64_t))(v3 + 96);
      v3 += 96;
      int v7 = v9(v6, v2);
      int v10 = *v6;
      strcpy((char *)v18, "NWError_dns_");
      BYTE5(v18[1]) = 0;
      HIWORD(v18[1]) = -5120;
      if ((v10 & 0x80000000) == 0) {
        goto LABEL_11;
      }
      uint64_t v16 = 78;
      unint64_t v17 = 0xE100000000000000;
      BOOL v11 = __OFSUB__(0, v10);
      int v12 = -v10;
      if (!v11) {
        goto LABEL_14;
      }
      __break(1u);
    }
    if (v7 != enum case for NWError.tls(_:))
    {
      v18[0] = 0;
      v18[1] = 0xE000000000000000;
      sub_1001C1420(19);
      swift_bridgeObjectRelease();
      (*(void (**)(int *, uint64_t))(v3 + 8))(v6, v2);
      return 0xD000000000000018;
    }
    uint64_t result = (*(uint64_t (**)(int *, uint64_t))(v3 + 96))(v6, v2);
    int v10 = *v6;
    strcpy((char *)v18, "NWError_tls_");
    BYTE5(v18[1]) = 0;
    HIWORD(v18[1]) = -5120;
    if (v10 < 0)
    {
      uint64_t v16 = 78;
      unint64_t v17 = 0xE100000000000000;
      BOOL v11 = __OFSUB__(0, v10);
      int v12 = -v10;
      if (!v11) {
        goto LABEL_14;
      }
      __break(1u);
      goto LABEL_21;
    }
LABEL_11:
    LODWORD(v16) = v10;
    goto LABEL_12;
  }
  (*(void (**)(int *, uint64_t))(v3 + 96))(v6, v2);
  strcpy((char *)v18, "NWError_posix_");
  HIBYTE(v18[1]) = -18;
  uint64_t result = sub_1001C0380();
  if ((result & 0x80000000) != 0)
  {
    uint64_t v16 = 78;
    unint64_t v17 = 0xE100000000000000;
    int v12 = -(int)result;
    if (!__OFSUB__(0, result))
    {
LABEL_14:
      v15[3] = v12;
      v19._countAndFlagsBits = sub_1001C1780();
      sub_1001C0D00(v19);
      swift_bridgeObjectRelease();
      v13._countAndFlagsBits = v16;
      object = (void *)v17;
      goto LABEL_15;
    }
LABEL_21:
    __break(1u);
    return result;
  }
  LODWORD(v16) = result;
LABEL_12:
  v13._countAndFlagsBits = sub_1001C1780();
  object = v13._object;
LABEL_15:
  v13._object = object;
  sub_1001C0D00(v13);
  swift_bridgeObjectRelease();
  return v18[0];
}

uint64_t sub_1000FEA94(void *a1)
{
  id v2 = [a1 domain];
  sub_1001C0BF0();

  v6._countAndFlagsBits = sub_1001C0D40();
  sub_1001C0D00(v6);
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = 95;
  v7._object = (void *)0xE100000000000000;
  sub_1001C0D00(v7);
  uint64_t result = (uint64_t)[a1 code];
  if ((result & 0x8000000000000000) == 0)
  {
    v4._countAndFlagsBits = sub_1001C1780();
    object = v4._object;
LABEL_5:
    v4._object = object;
    sub_1001C0D00(v4);
    swift_bridgeObjectRelease();
    return 0x5F726F727245534ELL;
  }
  if (!__OFSUB__(0, result))
  {
    v8._countAndFlagsBits = sub_1001C1780();
    sub_1001C0D00(v8);
    swift_bridgeObjectRelease();
    v4._countAndFlagsBits = 78;
    object = (void *)0xE100000000000000;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

unint64_t sub_1000FEBE8(char a1)
{
  sub_1001C1420(22);
  swift_bridgeObjectRelease();
  v3._countAndFlagsBits = sub_100016BAC(a1);
  sub_1001C0D00(v3);
  swift_bridgeObjectRelease();
  return 0xD000000000000014;
}

void sub_1000FEC68()
{
  sub_1001C0340();
  if (v0 <= 0x3F)
  {
    type metadata accessor for TC2CloudAttestationVerifier();
    if (v1 <= 0x3F)
    {
      sub_1000101F4();
      if (v2 <= 0x3F)
      {
        swift_checkMetadataState();
        if (v3 <= 0x3F) {
          swift_initClassMetadata2();
        }
      }
    }
  }
}

uint64_t sub_1000FEDD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_1001C1950();
    sub_1001C0CB0();
    Swift::Int v6 = sub_1001C1990();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      BOOL v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1001C1840() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1001C1840() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1000FEF0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1001BF950();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_10010484C(&qword_10020C588, (void (*)(uint64_t))&type metadata accessor for TC2RequestParameters),
        uint64_t v8 = sub_1001C0BA0(),
        uint64_t v9 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v10 = v8 & ~v9,
        uint64_t v11 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0))
  {
    uint64_t v18 = ~v9;
    uint64_t v19 = a2;
    uint64_t v12 = v4 + 16;
    Swift::String v13 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v14 = *(void *)(v12 + 56);
    unint64_t v15 = (void (**)(char *, uint64_t))(v12 - 8);
    do
    {
      v13(v7, *(void *)(v19 + 48) + v14 * v10, v3);
      sub_10010484C(&qword_10020D940, (void (*)(uint64_t))&type metadata accessor for TC2RequestParameters);
      char v16 = sub_1001C0BD0();
      (*v15)(v7, v3);
      if (v16) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v18;
    }
    while (((*(void *)(v11 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  else
  {
    char v16 = 0;
  }
  return v16 & 1;
}

uint64_t sub_1000FF120()
{
  uint64_t v0 = sub_1001BF2C0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001BF260();
  char v5 = sub_1001BF240();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return v5 & 1;
}

uint64_t sub_1000FF220(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_100003918(qword_10020CE78);
  uint64_t v29 = *(void *)(v7 - 8);
  uint64_t v30 = v7;
  __chkstk_darwin(v7, v8);
  unint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1001BF950();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  unint64_t v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = a3;
  uint64_t v32 = a2;
  uint64_t result = sub_100103DD4((uint64_t (*)(unint64_t))sub_1001048E8);
  int64_t v17 = *(void *)(*a1 + 16);
  if (v17 < result)
  {
    __break(1u);
  }
  else
  {
    sub_1000D6630(result, v17);
    uint64_t v18 = *a1;
    int64_t v19 = *(void *)(*a1 + 16);
    unint64_t v20 = _swiftEmptyArrayStorage;
    if (v19)
    {
      v27[1] = v3;
      uint64_t v33 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_10018F388(0, v19, 0);
      unint64_t v21 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
      v27[0] = v18;
      uint64_t v22 = v18 + v21;
      uint64_t v23 = *(void *)(v29 + 72);
      v27[2] = v12 + 32;
      uint64_t v28 = v23;
      uint64_t v29 = v11;
      do
      {
        sub_100104908(v22, (uint64_t)v10);
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, &v10[*(int *)(v30 + 52)], v11);
        sub_100010360((uint64_t)v10, qword_10020CE78);
        unint64_t v20 = v33;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10018F388(0, v20[2] + 1, 1);
          unint64_t v20 = v33;
        }
        unint64_t v25 = v20[2];
        unint64_t v24 = v20[3];
        if (v25 >= v24 >> 1)
        {
          sub_10018F388(v24 > 1, v25 + 1, 1);
          unint64_t v20 = v33;
        }
        id v20[2] = v25 + 1;
        unint64_t v26 = (unint64_t)v20
            + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))
            + *(void *)(v12 + 72) * v25;
        uint64_t v11 = v29;
        (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v26, v15, v29);
        uint64_t v33 = v20;
        v22 += v28;
        --v19;
      }
      while (v19);
      swift_bridgeObjectRelease();
    }
    return (uint64_t)v20;
  }
  return result;
}

uint64_t sub_1000FF50C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  sub_100003918(&qword_100208C60);
  v5[7] = swift_task_alloc();
  v5[8] = swift_task_alloc();
  uint64_t v6 = sub_1001BF950();
  v5[9] = v6;
  v5[10] = *(void *)(v6 - 8);
  v5[11] = swift_task_alloc();
  v5[12] = swift_task_alloc();
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  return _swift_task_switch(sub_1000FF63C, 0, 0);
}

uint64_t sub_1000FF63C()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[8];
  sub_1000238F4(v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100010360(v0[8], &qword_100208C60);
    sub_1001BF810();
    sub_10010484C(&qword_10020D938, (void (*)(uint64_t))&type metadata accessor for TrustedCloudComputeError);
    swift_allocError();
    sub_1001BF800();
    swift_willThrow();
LABEL_7:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = (uint64_t (*)(void))v0[1];
    return v22();
  }
  uint64_t v5 = v0[13];
  uint64_t v4 = v0[14];
  uint64_t v6 = v0[9];
  uint64_t v7 = v0[10];
  uint64_t v8 = v0[6];
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 32))(v4, v0[8], v6);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v0[15] = v9;
  v0[16] = (v7 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v9(v5, v4, v6);
  unint64_t v10 = (os_unfair_lock_s *)(v8 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(v8 + 16));
  char v11 = sub_1000FEF0C(v5, *(void *)(v8 + 24));
  if ((v11 & 1) == 0)
  {
    uint64_t v12 = v0[12];
    uint64_t v14 = v0[10];
    uint64_t v13 = (char *)v0[11];
    uint64_t v15 = v0[9];
    v9((uint64_t)v13, v0[13], v15);
    sub_1001020B8(v12, v13);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v15);
  }
  uint64_t v16 = v0[13];
  uint64_t v17 = v0[9];
  uint64_t v18 = v0[10];
  os_unfair_lock_unlock(v10);
  int64_t v19 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  v0[17] = v19;
  v0[18] = (v18 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v19(v16, v17);
  if (v11)
  {
    uint64_t v20 = v0[14];
    uint64_t v21 = v0[9];
    sub_1001BF810();
    sub_10010484C(&qword_10020D938, (void (*)(uint64_t))&type metadata accessor for TrustedCloudComputeError);
    swift_allocError();
    sub_1001BF800();
    swift_willThrow();
    v19(v20, v21);
    goto LABEL_7;
  }
  unint64_t v26 = (uint64_t (*)(uint64_t))(v0[4] + *(int *)v0[4]);
  unint64_t v24 = (void *)swift_task_alloc();
  v0[19] = v24;
  void *v24 = v0;
  v24[1] = sub_1000FFA2C;
  uint64_t v25 = v0[2];
  return v26(v25);
}

uint64_t sub_1000FFA2C()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100104AA0;
  }
  else {
    uint64_t v2 = sub_100104AA4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000FFB40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  sub_100003918(&qword_100208C60);
  v5[7] = swift_task_alloc();
  v5[8] = swift_task_alloc();
  uint64_t v6 = sub_1001BF950();
  v5[9] = v6;
  v5[10] = *(void *)(v6 - 8);
  v5[11] = swift_task_alloc();
  v5[12] = swift_task_alloc();
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  return _swift_task_switch(sub_1000FFC70, 0, 0);
}

uint64_t sub_1000FFC70()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[8];
  sub_1000238F4(v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100010360(v0[8], &qword_100208C60);
    sub_1001BF810();
    sub_10010484C(&qword_10020D938, (void (*)(uint64_t))&type metadata accessor for TrustedCloudComputeError);
    swift_allocError();
    sub_1001BF800();
    swift_willThrow();
LABEL_7:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = (uint64_t (*)(void))v0[1];
    return v22();
  }
  uint64_t v5 = v0[13];
  uint64_t v4 = v0[14];
  uint64_t v6 = v0[9];
  uint64_t v7 = v0[10];
  uint64_t v8 = v0[6];
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 32))(v4, v0[8], v6);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v0[15] = v9;
  v0[16] = (v7 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v9(v5, v4, v6);
  unint64_t v10 = (os_unfair_lock_s *)(v8 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(v8 + 16));
  char v11 = sub_1000FEF0C(v5, *(void *)(v8 + 24));
  if ((v11 & 1) == 0)
  {
    uint64_t v12 = v0[12];
    uint64_t v14 = v0[10];
    uint64_t v13 = (char *)v0[11];
    uint64_t v15 = v0[9];
    v9((uint64_t)v13, v0[13], v15);
    sub_1001020B8(v12, v13);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v15);
  }
  uint64_t v16 = v0[13];
  uint64_t v17 = v0[9];
  uint64_t v18 = v0[10];
  os_unfair_lock_unlock(v10);
  int64_t v19 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  v0[17] = v19;
  v0[18] = (v18 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v19(v16, v17);
  if (v11)
  {
    uint64_t v20 = v0[14];
    uint64_t v21 = v0[9];
    sub_1001BF810();
    sub_10010484C(&qword_10020D938, (void (*)(uint64_t))&type metadata accessor for TrustedCloudComputeError);
    swift_allocError();
    sub_1001BF800();
    swift_willThrow();
    v19(v20, v21);
    goto LABEL_7;
  }
  unint64_t v26 = (uint64_t (*)(uint64_t))(v0[4] + *(int *)v0[4]);
  unint64_t v24 = (void *)swift_task_alloc();
  v0[19] = v24;
  void *v24 = v0;
  v24[1] = sub_100100060;
  uint64_t v25 = v0[2];
  return v26(v25);
}

uint64_t sub_100100060()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100100298;
  }
  else {
    uint64_t v2 = sub_100100174;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100100174()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v6 = (os_unfair_lock_s *)(*(void *)(v0 + 48) + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 120))(v3, v2, v4);
  os_unfair_lock_lock(v6);
  sub_100104128(v3, v5);
  sub_100010360(v5, &qword_100208C60);
  os_unfair_lock_unlock(v6);
  v1(v3, v4);
  v1(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_100100298()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v6 = (os_unfair_lock_s *)(*(void *)(v0 + 48) + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 120))(v3, v2, v4);
  os_unfair_lock_lock(v6);
  sub_100104128(v3, v5);
  sub_100010360(v5, &qword_100208C60);
  os_unfair_lock_unlock(v6);
  v1(v3, v4);
  v1(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1001003B8()
{
  v1[2] = v0;
  uint64_t v2 = sub_1001BF950();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  void v1[6] = swift_task_alloc();
  v1[7] = swift_task_alloc();
  uint64_t v3 = sub_1001BF2C0();
  v1[8] = v3;
  v1[9] = *(void *)(v3 - 8);
  v1[10] = swift_task_alloc();
  return _swift_task_switch(sub_1001004F0, 0, 0);
}

uint64_t sub_1001004F0()
{
  uint64_t v49 = v0;
  *(void *)(v0 + 88) = qword_10021FEE0;
  uint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C1200();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "running TC2PrefetchActivity", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = *(void *)(v0 + 16);

  uint64_t v5 = *(void *)(v4 + qword_10021FEF8);
  *(void *)(v0 + 96) = v5;
  uint64_t v6 = *(void *)(v0 + 80);
  if (v5)
  {
    uint64_t v7 = *(void *)(*(void *)(v0 + 16) + qword_10021FEE8);
    swift_retain();
    _s20privatecloudcomputed8LRUCacheC10addToCache3now5valueSb10Foundation4DateV_xtFfA__0();
    uint64_t v8 = swift_task_alloc();
    *(void *)(v8 + 16) = v7;
    *(void *)(v8 + 24) = v6;
    uint64_t v9 = v7 + qword_100208340;
    os_unfair_lock_lock((os_unfair_lock_t)(v7 + qword_100208340));
    sub_10010475C((uint64_t *)(v9 + 8), v48);
    os_unfair_lock_unlock((os_unfair_lock_t)v9);
    uint64_t v13 = *(void *)(v0 + 72);
    uint64_t v12 = *(void *)(v0 + 80);
    uint64_t v14 = *(void *)(v0 + 64);
    swift_task_dealloc();
    uint64_t v15 = v48[0];
    *(void *)(v0 + 104) = v48[0];
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    uint64_t v16 = *(void *)(v15 + 16);
    *(void *)(v0 + 112) = v16;
    if (v16)
    {
      uint64_t v18 = *(void *)(v0 + 32);
      unint64_t v17 = *(void *)(v0 + 40);
      uint64_t v19 = *(void *)(v0 + 24);
      *(void *)(v0 + 120) = *(void *)(*(void *)(v0 + 16) + *(void *)(**(void **)(v0 + 16) + 168));
      uint64_t v20 = *(void (**)(unint64_t, unint64_t, uint64_t))(v18 + 16);
      v18 += 16;
      int v21 = *(_DWORD *)(v18 + 64);
      *(_DWORD *)(v0 + 184) = v21;
      *(void *)(v0 + 128) = *(void *)(v18 + 56);
      *(void *)(v0 + 136) = v20;
      *(void *)(v0 + 144) = 0;
      unint64_t v22 = *(void *)(v0 + 48);
      unint64_t v23 = *(void *)(v0 + 56);
      v20(v23, *(void *)(v0 + 104) + ((v21 + 32) & ~(unint64_t)v21), v19);
      v20(v22, v23, v19);
      v20(v17, v23, v19);
      unint64_t v24 = sub_1001C0330();
      os_log_type_t v25 = sub_1001C1200();
      BOOL v26 = os_log_type_enabled(v24, v25);
      uint64_t v28 = *(void *)(v0 + 40);
      uint64_t v27 = *(void *)(v0 + 48);
      uint64_t v29 = *(void *)(v0 + 24);
      uint64_t v30 = *(void *)(v0 + 32);
      if (v26)
      {
        uint64_t v31 = swift_slowAlloc();
        v48[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v31 = 136315394;
        uint64_t v32 = sub_1001BF930();
        *(void *)(v31 + 4) = sub_1000DF238(v32, v33, v48);
        swift_bridgeObjectRelease();
        os_log_type_t type = v25;
        uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
        v34(v27, v29);
        *(_WORD *)(v31 + 12) = 2080;
        sub_1001BF940();
        uint64_t v35 = sub_1001C0B90();
        unint64_t v37 = v36;
        swift_bridgeObjectRelease();
        *(void *)(v31 + 14) = sub_1000DF238(v35, v37, v48);
        swift_bridgeObjectRelease();
        v34(v28, v29);
        _os_log_impl((void *)&_mh_execute_header, v24, type, "fetching attestations for pipeline: %s args: %s", (uint8_t *)v31, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
        v34(v27, v29);
        v34(v28, v29);
      }
      *(void *)(v0 + 152) = v34;
      uint64_t v40 = *(void *)(v0 + 96);
      uint64_t v41 = *(void *)(v0 + 56);
      uint64_t v42 = *(void *)(v0 + 16);
      uint64_t v43 = (void *)swift_task_alloc();
      *(void *)(v0 + 160) = v43;
      v43[2] = v40;
      v43[3] = v42;
      v43[4] = v41;
      uint64_t v47 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10020D928 + dword_10020D928);
      uint64_t v44 = (void *)swift_task_alloc();
      *(void *)(v0 + 168) = v44;
      *uint64_t v44 = v0;
      v44[1] = sub_100100A8C;
      uint64_t v45 = *(void *)(v0 + 56);
      return v47((uint64_t)v47, v45, (uint64_t)&unk_10020D930, (uint64_t)v43);
    }
    else
    {
      swift_bridgeObjectRelease();
      type metadata accessor for TC2AttestationStore();
      sub_10010484C(&qword_10020C4E0, (void (*)(uint64_t))type metadata accessor for TC2AttestationStore);
      uint64_t v39 = sub_1001C0EA0();
      return _swift_task_switch(sub_100100F98, v39, v38);
    }
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
}

uint64_t sub_100100A8C()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v2 = sub_100101090;
  }
  else
  {
    swift_task_dealloc();
    os_log_type_t v2 = sub_100100BA8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100100BA8()
{
  uint64_t v35 = v0;
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 144) + 1;
  (*(void (**)(void, void))(v0 + 152))(*(void *)(v0 + 56), *(void *)(v0 + 24));
  if (v2 == v1)
  {
    swift_bridgeObjectRelease();
    type metadata accessor for TC2AttestationStore();
    sub_10010484C(&qword_10020C4E0, (void (*)(uint64_t))type metadata accessor for TC2AttestationStore);
    uint64_t v4 = sub_1001C0EA0();
    return _swift_task_switch(sub_100100F98, v4, v3);
  }
  else
  {
    uint64_t v5 = *(void (**)(unint64_t, unint64_t, uint64_t))(v0 + 136);
    uint64_t v6 = *(void *)(v0 + 144) + 1;
    *(void *)(v0 + 144) = v6;
    unint64_t v7 = *(void *)(v0 + 48);
    unint64_t v8 = *(void *)(v0 + 56);
    unint64_t v9 = *(void *)(v0 + 40);
    uint64_t v10 = *(void *)(v0 + 24);
    v5(v8, *(void *)(v0 + 104)+ ((*(unsigned __int8 *)(v0 + 184) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 184))+ *(void *)(v0 + 128) * v6, v10);
    v5(v7, v8, v10);
    v5(v9, v8, v10);
    char v11 = sub_1001C0330();
    os_log_type_t v12 = sub_1001C1200();
    BOOL v13 = os_log_type_enabled(v11, v12);
    uint64_t v15 = *(void *)(v0 + 40);
    uint64_t v14 = *(void *)(v0 + 48);
    uint64_t v16 = *(void *)(v0 + 24);
    uint64_t v17 = *(void *)(v0 + 32);
    if (v13)
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136315394;
      uint64_t v19 = sub_1001BF930();
      *(void *)(v18 + 4) = sub_1000DF238(v19, v20, &v34);
      swift_bridgeObjectRelease();
      os_log_type_t type = v12;
      int v21 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      v21(v14, v16);
      *(_WORD *)(v18 + 12) = 2080;
      sub_1001BF940();
      uint64_t v22 = sub_1001C0B90();
      unint64_t v24 = v23;
      swift_bridgeObjectRelease();
      *(void *)(v18 + 14) = sub_1000DF238(v22, v24, &v34);
      swift_bridgeObjectRelease();
      v21(v15, v16);
      _os_log_impl((void *)&_mh_execute_header, v11, type, "fetching attestations for pipeline: %s args: %s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      int v21 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      v21(v14, v16);
      v21(v15, v16);
    }
    *(void *)(v0 + 152) = v21;
    uint64_t v25 = *(void *)(v0 + 96);
    uint64_t v26 = *(void *)(v0 + 56);
    uint64_t v27 = *(void *)(v0 + 16);
    uint64_t v28 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v28;
    v28[2] = v25;
    void v28[3] = v27;
    v28[4] = v26;
    unint64_t v33 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10020D928 + dword_10020D928);
    uint64_t v29 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v29;
    *uint64_t v29 = v0;
    v29[1] = sub_100100A8C;
    uint64_t v30 = *(void *)(v0 + 56);
    return v33((uint64_t)v33, v30, (uint64_t)&unk_10020D930, (uint64_t)v28);
  }
}

uint64_t sub_100100F98()
{
  sub_1000BC4A4();
  return _swift_task_switch(sub_100101000, 0, 0);
}

uint64_t sub_100101000()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100101090()
{
  uint64_t v40 = v0;
  swift_task_dealloc();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C11F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v3 + 4) = v5;
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "failed to send prefetch request: %@", (uint8_t *)v3, 0xCu);
    sub_100003918(&qword_100207DA8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();

    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v6 = *(void *)(v0 + 112);
  uint64_t v7 = *(void *)(v0 + 144) + 1;
  (*(void (**)(void, void))(v0 + 152))(*(void *)(v0 + 56), *(void *)(v0 + 24));
  if (v7 == v6)
  {
    swift_bridgeObjectRelease();
    type metadata accessor for TC2AttestationStore();
    sub_10010484C(&qword_10020C4E0, (void (*)(uint64_t))type metadata accessor for TC2AttestationStore);
    uint64_t v9 = sub_1001C0EA0();
    return _swift_task_switch(sub_100100F98, v9, v8);
  }
  else
  {
    uint64_t v10 = *(void (**)(unint64_t, unint64_t, uint64_t))(v0 + 136);
    uint64_t v11 = *(void *)(v0 + 144) + 1;
    *(void *)(v0 + 144) = v11;
    unint64_t v12 = *(void *)(v0 + 48);
    unint64_t v13 = *(void *)(v0 + 56);
    unint64_t v14 = *(void *)(v0 + 40);
    uint64_t v15 = *(void *)(v0 + 24);
    v10(v13, *(void *)(v0 + 104)+ ((*(unsigned __int8 *)(v0 + 184) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 184))+ *(void *)(v0 + 128) * v11, v15);
    v10(v12, v13, v15);
    v10(v14, v13, v15);
    uint64_t v16 = sub_1001C0330();
    os_log_type_t v17 = sub_1001C1200();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v20 = *(void *)(v0 + 40);
    uint64_t v19 = *(void *)(v0 + 48);
    uint64_t v21 = *(void *)(v0 + 24);
    uint64_t v22 = *(void *)(v0 + 32);
    if (v18)
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315394;
      uint64_t v24 = sub_1001BF930();
      *(void *)(v23 + 4) = sub_1000DF238(v24, v25, &v39);
      swift_bridgeObjectRelease();
      os_log_type_t type = v17;
      uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
      v26(v19, v21);
      *(_WORD *)(v23 + 12) = 2080;
      sub_1001BF940();
      uint64_t v27 = sub_1001C0B90();
      unint64_t v29 = v28;
      swift_bridgeObjectRelease();
      *(void *)(v23 + 14) = sub_1000DF238(v27, v29, &v39);
      swift_bridgeObjectRelease();
      v26(v20, v21);
      _os_log_impl((void *)&_mh_execute_header, v16, type, "fetching attestations for pipeline: %s args: %s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
      v26(v19, v21);
      v26(v20, v21);
    }
    *(void *)(v0 + 152) = v26;
    uint64_t v30 = *(void *)(v0 + 96);
    uint64_t v31 = *(void *)(v0 + 56);
    uint64_t v32 = *(void *)(v0 + 16);
    unint64_t v33 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v33;
    uint64_t v33[2] = v30;
    v33[3] = v32;
    v33[4] = v31;
    uint64_t v38 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10020D928 + dword_10020D928);
    uint64_t v34 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v34;
    *uint64_t v34 = v0;
    v34[1] = sub_100100A8C;
    uint64_t v35 = *(void *)(v0 + 56);
    return v38((uint64_t)v38, v35, (uint64_t)&unk_10020D930, (uint64_t)v33);
  }
}

uint64_t sub_1001015AC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  v4[20] = a3;
  v4[21] = a4;
  v4[19] = a2;
  uint64_t v5 = *a3;
  v4[22] = *a3;
  uint64_t v6 = sub_100003918(qword_100208000);
  v4[23] = v6;
  v4[24] = *(void *)(v6 - 8);
  v4[25] = swift_task_alloc();
  uint64_t v7 = sub_1001BF950();
  v4[26] = v7;
  v4[27] = *(void *)(v7 - 8);
  v4[28] = swift_task_alloc();
  uint64_t v8 = *(void *)(v5 + 80);
  v4[29] = v8;
  v4[30] = *(void *)(v8 - 8);
  v4[31] = swift_task_alloc();
  v4[32] = type metadata accessor for TC2CloudAttestationVerifier();
  v4[33] = swift_task_alloc();
  return _swift_task_switch(sub_100101798, 0, 0);
}

uint64_t sub_100101798()
{
  uint64_t v1 = *(void *)(v0 + 256);
  uint64_t v23 = *(void *)(v0 + 264);
  uint64_t v2 = *(void *)(v0 + 240);
  uint64_t v17 = *(void *)(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 232);
  uint64_t v4 = *(void *)(v0 + 216);
  uint64_t v18 = *(void *)(v0 + 224);
  uint64_t v19 = *(void *)(v0 + 208);
  uint64_t v21 = *(void *)(v0 + 200);
  uint64_t v20 = *(void *)(v0 + 192);
  uint64_t v5 = *(void *)(v0 + 176);
  uint64_t v22 = *(void *)(v0 + 184);
  uint64_t v6 = *(void *)(v0 + 160);
  uint64_t v16 = *(void *)(v0 + 168);
  uint64_t v7 = *(void *)(v0 + 152);
  uint64_t v8 = type metadata accessor for TC2AttestationStore();
  uint64_t v9 = type metadata accessor for RateLimiter();
  unint64_t v10 = sub_100104894();
  uint64_t v11 = *(void *)(v5 + 88);
  *(void *)(v0 + 16) = &type metadata for NWAsyncConnection;
  *(void *)(v0 + 24) = v8;
  *(void *)(v0 + 32) = v9;
  *(void *)(v0 + 40) = v1;
  *(void *)(v0 + 48) = v3;
  *(void *)(v0 + 56) = v10;
  *(void *)(v0 + 64) = &off_1001FF568;
  *(void *)(v0 + 72) = &off_1001FECD8;
  *(void *)(v0 + 80) = &off_100200CC8;
  *(void *)(v0 + 88) = v11;
  type metadata accessor for TC2BatchedPrefetch();
  *(void *)(v0 + 136) = v7;
  *(void *)(v0 + 144) = *(void *)(v6 + qword_10021FEF0);
  sub_1001049D8(v6 + qword_10021FF00, v23, (uint64_t (*)(void))type metadata accessor for TC2CloudAttestationVerifier);
  sub_100032890(v6 + 16, v0 + 96);
  uint64_t v12 = *(void *)(v6 + qword_10021FF10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v17, v6 + *(void *)(*(void *)v6 + 160), v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v18, v16, v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v21, v6 + qword_10021FF08, v22);
  swift_retain();
  swift_retain();
  uint64_t v13 = swift_retain();
  *(void *)(v0 + 272) = sub_1001A4600(v13, v0 + 136, v0 + 144, v23, (long long *)(v0 + 96), v12, v17, v18, v21, 0, 0, 1, 0, 0, 0, 0);
  unint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v0 + 280) = v14;
  *unint64_t v14 = v0;
  v14[1] = sub_100101A24;
  return sub_1001A46CC();
}

uint64_t sub_100101A24()
{
  *(void *)(*(void *)v1 + 288) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100101BDC;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_100101B44;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100101B44()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100101BDC()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t *sub_100101C74()
{
  uint64_t v1 = *v0;
  sub_100003E90((uint64_t)(v0 + 2));
  uint64_t v2 = (uint64_t)v0 + qword_10021FEE0;
  uint64_t v3 = sub_1001C0340();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  swift_release();
  swift_release();
  sub_100104A40((uint64_t)v0 + qword_10021FF00, (uint64_t (*)(void))type metadata accessor for TC2CloudAttestationVerifier);
  uint64_t v4 = (uint64_t)v0 + qword_10021FF08;
  uint64_t v5 = sub_100003918(qword_100208000);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 160));
  swift_release();
  return v0;
}

uint64_t sub_100101E08()
{
  sub_100101C74();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TC2PrefetchActivity()
{
  return sub_10000E738();
}

uint64_t sub_100101E78()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1000074CC;
  return sub_1001003B8();
}

uint64_t sub_100101F08(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  sub_1001C1950();
  swift_bridgeObjectRetain();
  sub_1001C0CB0();
  Swift::Int v8 = sub_1001C1990();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1001C1840() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1001C1840() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_100102AB8(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1001020B8(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1001BF950();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  unint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v2;
  sub_10010484C(&qword_10020C588, (void (*)(uint64_t))&type metadata accessor for TC2RequestParameters);
  swift_bridgeObjectRetain();
  uint64_t v34 = a2;
  uint64_t v12 = sub_1001C0BA0();
  uint64_t v13 = -1 << *(unsigned char *)(v11 + 32);
  unint64_t v14 = v12 & ~v13;
  uint64_t v33 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
  {
    unint64_t v29 = v2;
    uint64_t v30 = a1;
    uint64_t v31 = ~v13;
    uint64_t v28 = v7;
    uint64_t v17 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v16 = v7 + 16;
    Swift::Int v15 = v17;
    uint64_t v32 = *(void *)(v16 + 56);
    uint64_t v18 = (void (**)(char *, uint64_t))(v16 - 8);
    v27[1] = v16 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v19 = v11;
      unint64_t v20 = v32 * v14;
      uint64_t v21 = v15;
      v15(v10, *(void *)(v11 + 48) + v32 * v14, v6);
      sub_10010484C(&qword_10020D940, (void (*)(uint64_t))&type metadata accessor for TC2RequestParameters);
      char v22 = sub_1001C0BD0();
      uint64_t v23 = *v18;
      (*v18)(v10, v6);
      if (v22) {
        break;
      }
      unint64_t v14 = (v14 + 1) & v31;
      uint64_t v11 = v19;
      Swift::Int v15 = v21;
      if (((*(void *)(v33 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v29;
        a1 = v30;
        uint64_t v7 = v28;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v23(v34, v6);
    v21(v30, *(void *)(*v29 + 48) + v20, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    Swift::Int v15 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v25 = v34;
    v15(v10, v34, v6);
    uint64_t v35 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_100102C54((uint64_t)v10, v14, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v35;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1001023DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100003918(qword_10020D960);
  uint64_t v3 = sub_1001C1410();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1001C1950();
      sub_1001C0CB0();
      uint64_t result = sub_1001C1990();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      void *v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1001026BC()
{
  uint64_t v1 = v0;
  uint64_t v43 = sub_1001BF950();
  uint64_t v2 = *(void *)(v43 - 8);
  __chkstk_darwin(v43, v3);
  uint64_t v42 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_100003918(&qword_10020D948);
  uint64_t v6 = sub_1001C1410();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = *(void *)(v5 + 56);
    uint64_t v38 = (void *)(v5 + 56);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & v9;
    uint64_t v36 = v0;
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v40 = v2;
    uint64_t v12 = v6 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    uint64_t v39 = v7;
    unint64_t v15 = v42;
    uint64_t v16 = v43;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        int64_t v41 = v14;
        unint64_t v19 = v18 | (v14 << 6);
      }
      else
      {
        int64_t v20 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v20 >= v37) {
          goto LABEL_33;
        }
        unint64_t v21 = v38[v20];
        int64_t v22 = v14 + 1;
        if (!v21)
        {
          int64_t v22 = v14 + 2;
          if (v14 + 2 >= v37) {
            goto LABEL_33;
          }
          unint64_t v21 = v38[v22];
          if (!v21)
          {
            int64_t v22 = v14 + 3;
            if (v14 + 3 >= v37) {
              goto LABEL_33;
            }
            unint64_t v21 = v38[v22];
            if (!v21)
            {
              uint64_t v23 = v14 + 4;
              if (v14 + 4 >= v37)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v36;
                uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
                if (v35 > 63) {
                  bzero(v38, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v38 = -1 << v35;
                }
                *(void *)(v5 + 16) = 0;
                break;
              }
              unint64_t v21 = v38[v23];
              if (!v21)
              {
                while (1)
                {
                  int64_t v22 = v23 + 1;
                  if (__OFADD__(v23, 1)) {
                    goto LABEL_39;
                  }
                  if (v22 >= v37) {
                    goto LABEL_33;
                  }
                  unint64_t v21 = v38[v22];
                  ++v23;
                  if (v21) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v22 = v14 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v11 = (v21 - 1) & v21;
        int64_t v41 = v22;
        unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
      }
      uint64_t v24 = v5;
      uint64_t v25 = *(void *)(v5 + 48);
      uint64_t v26 = *(void *)(v40 + 72);
      BOOL v27 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 32);
      v27(v15, v25 + v26 * v19, v16);
      uint64_t v7 = v39;
      sub_10010484C(&qword_10020C588, (void (*)(uint64_t))&type metadata accessor for TC2RequestParameters);
      uint64_t result = sub_1001C0BA0();
      uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v29 = result & ~v28;
      unint64_t v30 = v29 >> 6;
      if (((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v31 = 0;
        unint64_t v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v33 = v30 == v32;
          if (v30 == v32) {
            unint64_t v30 = 0;
          }
          v31 |= v33;
          uint64_t v34 = *(void *)(v12 + 8 * v30);
        }
        while (v34 == -1);
        unint64_t v17 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(void *)(v12 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v27)(*(void *)(v7 + 48) + v17 * v26, v42, v43);
      ++*(void *)(v7 + 16);
      uint64_t v5 = v24;
      int64_t v14 = v41;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v7;
  return result;
}

Swift::Int sub_100102AB8(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1001023DC();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_100102EF4();
      goto LABEL_22;
    }
    sub_10010334C();
  }
  uint64_t v11 = *v4;
  sub_1001C1950();
  sub_1001C0CB0();
  uint64_t result = sub_1001C1990();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_1001C1840(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_1001C18B0();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        unint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_1001C1840();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  unint64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  *unint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_100102C54(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v32 = a1;
  uint64_t v6 = sub_1001BF950();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  unint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  unint64_t v29 = v3;
  uint64_t v30 = v7;
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1001026BC();
  }
  else
  {
    if (v12 > v11)
    {
      sub_1001030A8();
      goto LABEL_12;
    }
    sub_1001035FC();
  }
  uint64_t v13 = *v3;
  sub_10010484C(&qword_10020C588, (void (*)(uint64_t))&type metadata accessor for TC2RequestParameters);
  uint64_t v14 = sub_1001C0BA0();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  uint64_t v31 = v13;
  uint64_t v16 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v15;
    uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v7 + 16;
    unint64_t v18 = v20;
    uint64_t v21 = *(void *)(v19 + 56);
    do
    {
      v18(v10, *(void *)(v31 + 48) + v21 * a2, v6);
      sub_10010484C(&qword_10020D940, (void (*)(uint64_t))&type metadata accessor for TC2RequestParameters);
      char v22 = sub_1001C0BD0();
      (*(void (**)(char *, uint64_t))(v19 - 8))(v10, v6);
      if (v22) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v23 = v30;
  uint64_t v24 = *v29;
  *(void *)(v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v23 + 32))(*(void *)(v24 + 48) + *(void *)(v23 + 72) * a2, v32, v6);
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1001C18B0();
  __break(1u);
  return result;
}

void *sub_100102EF4()
{
  uint64_t v1 = v0;
  sub_100003918(qword_10020D960);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1001C1400();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1001030A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1001BF950();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100003918(&qword_10020D948);
  uint64_t v7 = *v0;
  uint64_t v8 = sub_1001C1400();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_27:
    uint64_t *v1 = v9;
    return result;
  }
  uint64_t v23 = v1;
  uint64_t result = (void *)(v8 + 56);
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 56 + 8 * v11) {
    uint64_t result = memmove(result, (const void *)(v7 + 56), 8 * v11);
  }
  uint64_t v24 = v7 + 56;
  int64_t v12 = 0;
  *(void *)(v9 + 16) = *(void *)(v7 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v7 + 56);
  int64_t v25 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v17 = v16 | (v12 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v19 >= v25) {
      goto LABEL_25;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v12;
    if (!v20)
    {
      int64_t v12 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_25;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v12);
      if (!v20)
      {
        int64_t v12 = v19 + 2;
        if (v19 + 2 >= v25) {
          goto LABEL_25;
        }
        unint64_t v20 = *(void *)(v24 + 8 * v12);
        if (!v20) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v15 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v12 << 6);
LABEL_9:
    unint64_t v18 = *(void *)(v3 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v6, *(void *)(v7 + 48) + v18, v2);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v9 + 48) + v18, v6, v2);
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v25)
  {
LABEL_25:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v23;
    goto LABEL_27;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v12 = v21;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v12 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v12 >= v25) {
      goto LABEL_25;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v12);
    ++v21;
    if (v20) {
      goto LABEL_24;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_10010334C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100003918(qword_10020D960);
  uint64_t v3 = sub_1001C1410();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    int64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_1001C1950();
    swift_bridgeObjectRetain();
    sub_1001C0CB0();
    uint64_t result = sub_1001C1990();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    void *v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1001035FC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1001BF950();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v0;
  sub_100003918(&qword_10020D948);
  uint64_t v8 = sub_1001C1410();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v9;
    return result;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 56);
  uint64_t v35 = v0;
  uint64_t v36 = v7 + 56;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  int64_t v37 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v38 = v3 + 16;
  uint64_t v14 = v8 + 56;
  uint64_t v39 = v3;
  unint64_t v15 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_24;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v21 >= v37) {
      goto LABEL_33;
    }
    unint64_t v22 = *(void *)(v36 + 8 * v21);
    ++v17;
    if (!v22)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v22 = *(void *)(v36 + 8 * v17);
      if (!v22)
      {
        int64_t v17 = v21 + 2;
        if (v21 + 2 >= v37) {
          goto LABEL_33;
        }
        unint64_t v22 = *(void *)(v36 + 8 * v17);
        if (!v22) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
LABEL_24:
    uint64_t v24 = v7;
    uint64_t v25 = *(void *)(v7 + 48);
    uint64_t v26 = *(void *)(v39 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v39 + 16))(v6, v25 + v26 * v20, v2);
    sub_10010484C(&qword_10020C588, (void (*)(uint64_t))&type metadata accessor for TC2RequestParameters);
    uint64_t result = sub_1001C0BA0();
    uint64_t v27 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v28 = result & ~v27;
    unint64_t v29 = v28 >> 6;
    if (((-1 << v28) & ~*(void *)(v14 + 8 * (v28 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v28) & ~*(void *)(v14 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v32 = v29 == v31;
        if (v29 == v31) {
          unint64_t v29 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v14 + 8 * v29);
      }
      while (v33 == -1);
      unint64_t v18 = __clz(__rbit64(~v33)) + (v29 << 6);
    }
    *(void *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t result = (*v15)(*(void *)(v9 + 48) + v18 * v26, v6, v2);
    ++*(void *)(v9 + 16);
    uint64_t v7 = v24;
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v37)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v35;
    goto LABEL_35;
  }
  unint64_t v22 = *(void *)(v36 + 8 * v23);
  if (v22)
  {
    int64_t v17 = v23;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v17 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v17 >= v37) {
      goto LABEL_33;
    }
    unint64_t v22 = *(void *)(v36 + 8 * v17);
    ++v23;
    if (v22) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1001039AC(uint64_t (*a1)(char *), uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v63 = a2;
  uint64_t v62 = a1;
  uint64_t v5 = type metadata accessor for RequestLog.Element();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = __chkstk_darwin(v5, v7);
  uint64_t v61 = (uint64_t)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8, v10);
  uint64_t v13 = __chkstk_darwin(v11, v12);
  uint64_t v15 = __chkstk_darwin(v13, v14);
  int64_t v17 = (char *)v56 - v16;
  uint64_t v19 = __chkstk_darwin(v15, v18);
  int64_t v23 = (char *)v56 - v22;
  uint64_t v60 = v2;
  uint64_t v24 = (void *)*v2;
  uint64_t v25 = *(void *)(*v2 + 24);
  if (v25)
  {
    uint64_t v58 = v21;
    uint64_t v59 = v20;
    unint64_t v26 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v56[1] = v19;
    unint64_t v57 = v26;
    uint64_t v27 = (char *)v24 + v26;
    uint64_t result = swift_retain();
    uint64_t v29 = 0;
    while (1)
    {
      if (v29 >= v25)
      {
        __break(1u);
        goto LABEL_45;
      }
      uint64_t v30 = v24[4];
      if (v29 + v30 >= v24[2]) {
        uint64_t v31 = v24[2];
      }
      else {
        uint64_t v31 = 0;
      }
      uint64_t v32 = *(void *)(v6 + 72);
      sub_1001049D8((uint64_t)&v27[(v29 + v30 - v31) * v32], (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for RequestLog.Element);
      sub_1000A2E58((uint64_t)v23, (uint64_t)v17);
      char v33 = v62(v17);
      uint64_t result = sub_100104A40((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for RequestLog.Element);
      if (v4)
      {
        swift_release();
        return v29;
      }
      if (v33) {
        break;
      }
      ++v29;
      uint64_t v25 = v24[3];
      if (v29 == v25)
      {
        swift_release();
        return *(void *)(*v60 + 24);
      }
    }
    uint64_t result = swift_release();
    uint64_t v34 = v60;
    uint64_t v35 = *v60;
    uint64_t v36 = *(void *)(*v60 + 24);
    if (v36 - 1 == v29) {
      return v29;
    }
    uint64_t v37 = v29 + 1;
    uint64_t v39 = v58;
    uint64_t v38 = v59;
    unint64_t v40 = v57;
    while (v37 < v36)
    {
      uint64_t v41 = *(void *)(v35 + 32);
      if (v37 + v41 >= *(void *)(v35 + 16)) {
        uint64_t v42 = *(void *)(v35 + 16);
      }
      else {
        uint64_t v42 = 0;
      }
      sub_1001049D8(v35 + v40 + (v37 + v41 - v42) * v32, v39, (uint64_t (*)(void))type metadata accessor for RequestLog.Element);
      sub_1000A2E58(v39, v38);
      char v43 = v62((char *)v38);
      uint64_t result = sub_100104A40(v38, (uint64_t (*)(void))type metadata accessor for RequestLog.Element);
      if ((v43 & 1) == 0)
      {
        if (v29 < 0) {
          goto LABEL_46;
        }
        uint64_t result = *v34;
        uint64_t v44 = *(void *)(*v34 + 24);
        if (v29 >= v44) {
          goto LABEL_47;
        }
        if (v37 >= v44) {
          goto LABEL_48;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0) {
          uint64_t result = sub_1000F845C();
        }
        uint64_t v45 = *(void *)(*v34 + 32);
        uint64_t v46 = *(void *)(*v34 + 16);
        if (v45 + v29 >= v46) {
          uint64_t v47 = *(void *)(*v34 + 16);
        }
        else {
          uint64_t v47 = 0;
        }
        uint64_t v48 = v45 + v29 - v47;
        if (v37 + v45 < v46) {
          uint64_t v46 = 0;
        }
        uint64_t v49 = v37 + v45 - v46;
        if (v49 != v48)
        {
          unint64_t v50 = *v34 + v40;
          uint64_t v51 = v48 * v32;
          unint64_t v52 = v50 + v48 * v32;
          uint64_t v53 = v49 * v32;
          uint64_t v54 = v50 + v49 * v32;
          sub_1000A2E58(v52, v61);
          if (v51 < v53 || v52 >= v54 + v32)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v51 != v53)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          uint64_t result = sub_1000A2E58(v61, v54);
          uint64_t v39 = v58;
          uint64_t v38 = v59;
          unint64_t v40 = v57;
        }
        ++v29;
      }
      ++v37;
      uint64_t v35 = *v34;
      uint64_t v36 = *(void *)(*v34 + 24);
      if (v37 == v36) {
        return v29;
      }
    }
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
  }
  else
  {
    return 0;
  }
  return result;
}

uint64_t sub_100103DD4(uint64_t (*a1)(unint64_t))
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100003918(qword_10020CE78) - 8;
  uint64_t v7 = __chkstk_darwin(v5, v6);
  uint64_t v37 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7, v9);
  uint64_t v36 = (uint64_t)&v33 - v11;
  __chkstk_darwin(v10, v12);
  uint64_t v38 = (uint64_t)&v33 - v14;
  unint64_t v15 = *v1;
  uint64_t v16 = *(void *)(*v1 + 16);
  if (!v16) {
    return 0;
  }
  unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v18 = *(void *)(v13 + 72);
  swift_bridgeObjectRetain();
  unint64_t v19 = 0;
  unint64_t v34 = v17;
  while (1)
  {
    char v20 = a1(v15 + v17);
    if (v2)
    {
      swift_bridgeObjectRelease();
      return v19;
    }
    if (v20) {
      break;
    }
    ++v19;
    v17 += v18;
    if (v16 == v19)
    {
      swift_bridgeObjectRelease();
      return *(void *)(v15 + 16);
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!__OFADD__(v19, 1))
  {
    unint64_t v22 = *(void *)(v15 + 16);
    if (v19 + 1 == v22) {
      return v19;
    }
    uint64_t v23 = v18 + v17;
    unint64_t v24 = v19 + 1;
    char v33 = v1;
    uint64_t v35 = v18;
    while (v24 < v22)
    {
      uint64_t v25 = v3;
      uint64_t v39 = v23;
      uint64_t v26 = v38;
      sub_100104908(v15 + v23, v38);
      char v27 = a1(v26);
      uint64_t result = sub_100010360(v26, qword_10020CE78);
      if (v27)
      {
        uint64_t v3 = v25;
        uint64_t v28 = v35;
      }
      else
      {
        uint64_t v3 = v25;
        uint64_t v28 = v35;
        if (v24 != v19)
        {
          if ((v19 & 0x8000000000000000) != 0) {
            goto LABEL_32;
          }
          unint64_t v29 = *v3;
          unint64_t v30 = *(void *)(*v3 + 16);
          if (v19 >= v30) {
            goto LABEL_33;
          }
          uint64_t result = sub_100104908(v29 + v34 + v19 * v35, v36);
          if (v24 >= v30) {
            goto LABEL_34;
          }
          sub_100104908(v29 + v39, v37);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v3 = v33;
          unint64_t *v33 = v29;
          if ((result & 1) == 0)
          {
            uint64_t result = sub_100104114(v29);
            unint64_t v29 = result;
            *uint64_t v3 = result;
          }
          if (v19 >= *(void *)(v29 + 16)) {
            goto LABEL_35;
          }
          uint64_t result = sub_100104970(v37, v29 + v34 + v19 * v28);
          if (v24 >= *(void *)(*v3 + 16)) {
            goto LABEL_36;
          }
          uint64_t result = sub_100104970(v36, *v3 + v39);
        }
        if (__OFADD__(v19++, 1)) {
          goto LABEL_31;
        }
      }
      unint64_t v32 = v24 + 1;
      if (__OFADD__(v24, 1)) {
        goto LABEL_30;
      }
      unint64_t v15 = *v3;
      unint64_t v22 = *(void *)(*v3 + 16);
      ++v24;
      uint64_t v23 = v39 + v28;
      if (v32 == v22) {
        return v19;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100104114(unint64_t a1)
{
  return sub_1000E42F0(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_100104128@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1001BF950();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_10010484C(&qword_10020C588, (void (*)(uint64_t))&type metadata accessor for TC2RequestParameters);
  swift_bridgeObjectRetain();
  uint64_t v32 = a1;
  uint64_t v11 = sub_1001C0BA0();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v14 = v10;
  uint64_t v31 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    char v27 = v2;
    uint64_t v28 = v6;
    uint64_t v29 = a2;
    uint64_t v30 = ~v12;
    unint64_t v17 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v16 = v6 + 16;
    unint64_t v15 = v17;
    uint64_t v18 = *(void *)(v16 + 56);
    while (1)
    {
      uint64_t v19 = v14;
      v15(v9, *(void *)(v14 + 48) + v18 * v13, v5);
      sub_10010484C(&qword_10020D940, (void (*)(uint64_t))&type metadata accessor for TC2RequestParameters);
      char v20 = sub_1001C0BD0();
      (*(void (**)(char *, uint64_t))(v16 - 8))(v9, v5);
      if (v20) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v14 = v19;
      if (((*(void *)(v31 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v21 = 1;
        uint64_t v6 = v28;
        a2 = v29;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v21, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v22 = v27;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = *v22;
    uint64_t v33 = *v22;
    *unint64_t v22 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1001030A8();
      uint64_t v24 = v33;
    }
    uint64_t v6 = v28;
    a2 = v29;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v28 + 32))(v29, *(void *)(v24 + 48) + v18 * v13, v5);
    sub_100104408(v13);
    *unint64_t v22 = v33;
    swift_bridgeObjectRelease();
    uint64_t v21 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v21 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v21, 1, v5);
}

uint64_t sub_100104408(int64_t a1)
{
  uint64_t v3 = sub_1001BF950();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = *v1;
  uint64_t v9 = *v1 + 56;
  uint64_t v10 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(void *)(v9 + 8 * (v11 >> 6))) != 0)
  {
    uint64_t v32 = v1;
    uint64_t v12 = ~v10;
    uint64_t v36 = result;
    swift_retain();
    uint64_t v13 = sub_1001C13E0();
    if ((*(void *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      unint64_t v34 = (v13 + 1) & v12;
      unint64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
      uint64_t v14 = v4 + 16;
      uint64_t v33 = v15;
      uint64_t v16 = *(void *)(v14 + 56);
      uint64_t v35 = v14;
      unint64_t v17 = (void (**)(char *, uint64_t))(v14 - 8);
      uint64_t v18 = v36;
      do
      {
        uint64_t v19 = v9;
        uint64_t v20 = v16;
        int64_t v21 = v16 * v11;
        v33(v7, *(void *)(v18 + 48) + v16 * v11, v3);
        sub_10010484C(&qword_10020C588, (void (*)(uint64_t))&type metadata accessor for TC2RequestParameters);
        uint64_t v22 = sub_1001C0BA0();
        (*v17)(v7, v3);
        unint64_t v23 = v22 & v12;
        if (a1 >= (uint64_t)v34)
        {
          if (v23 < v34 || a1 < (uint64_t)v23)
          {
LABEL_4:
            uint64_t v9 = v19;
            uint64_t v16 = v20;
            uint64_t v18 = v36;
            goto LABEL_5;
          }
        }
        else if (v23 < v34 && a1 < (uint64_t)v23)
        {
          goto LABEL_4;
        }
        uint64_t v18 = v36;
        int64_t v26 = v20 * a1;
        uint64_t v9 = v19;
        if (v20 * a1 < v21
          || (uint64_t v16 = v20, *(void *)(v36 + 48) + v20 * a1 >= (unint64_t)(*(void *)(v36 + 48) + v21 + v20)))
        {
          swift_arrayInitWithTakeFrontToBack();
          goto LABEL_21;
        }
        a1 = v11;
        if (v26 != v21)
        {
          swift_arrayInitWithTakeBackToFront();
LABEL_21:
          uint64_t v18 = v36;
          uint64_t v16 = v20;
          a1 = v11;
        }
LABEL_5:
        unint64_t v11 = (v11 + 1) & v12;
      }
      while (((*(void *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    *(void *)(v9 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v1 = v32;
  }
  else
  {
    *(void *)(v9 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v27 = *v1;
  uint64_t v28 = *(void *)(*v1 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v27 + 16) = v30;
    ++*(_DWORD *)(v27 + 36);
  }
  return result;
}

uint64_t sub_100104724@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_1000FF220(a1, a2, a3);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

uint64_t sub_10010475C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1000FF220(a1, *(void *)(v2 + 16), *(void *)(v2 + 24));
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_100104798(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = (uint64_t *)v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000074CC;
  return sub_1001015AC(a1, v4, v5, v6);
}

uint64_t sub_10010484C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100104894()
{
  unint64_t result = qword_10020D950;
  if (!qword_10020D950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10020D950);
  }
  return result;
}

uint64_t sub_1001048E8()
{
  return sub_1000FF120() & 1;
}

uint64_t sub_100104908(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100003918(qword_10020CE78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100104970(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100003918(qword_10020CE78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001049D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100104A40(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100104AA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(a7, a1, a6);
  uint64_t result = type metadata accessor for OnResponseHeadSequence();
  uint64_t v13 = (void *)(a7 + *(int *)(result + 36));
  void *v13 = a2;
  v13[1] = a3;
  uint64_t v14 = (void *)(a7 + *(int *)(result + 40));
  *uint64_t v14 = a4;
  v14[1] = a5;
  return result;
}

uint64_t sub_100104B54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(a1, a2);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __chkstk_darwin(AssociatedTypeWitness - 8, v12);
  uint64_t v14 = (char *)&v16 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v4, v7);
  sub_1001C10A0();
  sub_100104CD0((uint64_t)v14, *(void *)(v4 + *(int *)(a1 + 36)), *(void *)(v4 + *(int *)(a1 + 36) + 8), *(void *)(v4 + *(int *)(a1 + 40)), *(void *)(v4 + *(int *)(a1 + 40) + 8), a3);
  swift_retain();
  return swift_retain();
}

uint64_t sub_100104CD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = (int *)type metadata accessor for OnResponseHeadSequence.AsyncIterator();
  *(unsigned char *)(a6 + v12[9]) = 1;
  *(unsigned char *)(a6 + v12[10]) = 0;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a6, a1, AssociatedTypeWitness);
  unint64_t v15 = (void *)(a6 + v12[11]);
  void *v15 = a2;
  v15[1] = a3;
  uint64_t v16 = (void *)(a6 + v12[12]);
  void *v16 = a4;
  v16[1] = a5;
  return result;
}

uint64_t sub_100104DC0(uint64_t a1)
{
  v2[10] = a1;
  v2[11] = v1;
  sub_100003918(&qword_100207FE8);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  sub_100003918(&qword_10020DA80);
  v2[14] = swift_task_alloc();
  uint64_t v3 = sub_1001C04D0();
  v2[15] = v3;
  v2[16] = *(void *)(v3 - 8);
  v2[17] = swift_task_alloc();
  return _swift_task_switch(sub_100104EF0, 0, 0);
}

uint64_t sub_100104EF0()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(int *)(v1 + 40);
  *(_DWORD *)(v0 + 44) = v3;
  if (*(unsigned char *)(v2 + v3))
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void, unint64_t))(v0 + 8);
    return v4(0, 0xF000000000000000);
  }
  else
  {
    uint64_t v6 = *(int *)(v1 + 36);
    if (*(unsigned char *)(v2 + v6))
    {
      uint64_t v7 = v0 + 48;
      *(unsigned char *)(v2 + v6) = 0;
      *(void *)(v0 + 144) = *(void *)(v1 + 24);
      *(void *)(v0 + 152) = *(void *)(v1 + 16);
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v10 = (void *)swift_task_alloc();
      *(void *)(v0 + 160) = v10;
      void *v10 = v0;
      unint64_t v11 = sub_10010512C;
    }
    else
    {
      uint64_t v7 = v0 + 16;
      uint64_t v12 = *(void *)(v1 + 24);
      *(void *)(v0 + 240) = *(void *)(v1 + 16);
      *(void *)(v0 + 248) = v12;
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v10 = (void *)swift_task_alloc();
      *(void *)(v0 + 256) = v10;
      void *v10 = v0;
      unint64_t v11 = sub_100105DB0;
    }
    v10[1] = v11;
    return dispatch thunk of AsyncIteratorProtocol.next()(v7, AssociatedTypeWitness, AssociatedConformanceWitness);
  }
}

uint64_t sub_10010512C()
{
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100106428;
  }
  else {
    uint64_t v2 = sub_100105240;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100105240()
{
  *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 64);
  *(void *)(v0 + 192) = v1;
  *(unsigned char *)(v0 + 41) = *(unsigned char *)(v0 + 72);
  if (v1)
  {
    if (v1 == 1)
    {
      uint64_t v2 = 0;
      unint64_t v3 = 0xF000000000000000;
LABEL_24:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v30 = *(uint64_t (**)(uint64_t, unint64_t))(v0 + 8);
      return v30(v2, v3);
    }
    uint64_t v4 = *(void *)(v0 + 120);
    uint64_t v5 = *(void *)(v0 + 128);
    uint64_t v6 = *(void *)(v0 + 112);
    swift_retain();
    sub_1001C0530();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) != 1)
    {
      uint64_t v19 = *(void *)(v0 + 80);
      uint64_t v20 = *(void *)(v0 + 88);
      (*(void (**)(void, void, void))(*(void *)(v0 + 128) + 32))(*(void *)(v0 + 136), *(void *)(v0 + 112), *(void *)(v0 + 120));
      uint64_t v32 = (uint64_t (*)(uint64_t))(*(void *)(v20 + *(int *)(v19 + 44))
                                            + **(int **)(v20 + *(int *)(v19 + 44)));
      int64_t v21 = (void *)swift_task_alloc();
      *(void *)(v0 + 200) = v21;
      *int64_t v21 = v0;
      v21[1] = sub_100105710;
      uint64_t v22 = *(void *)(v0 + 136);
      goto LABEL_13;
    }
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 128) + 56))(*(void *)(v0 + 112), 1, 1, *(void *)(v0 + 120));
  }
  sub_100010360(*(void *)(v0 + 112), &qword_10020DA80);
  unint64_t v7 = *(void *)(v0 + 184);
  if (v7 >> 60 == 15)
  {
    sub_1000A110C(*(void *)(v0 + 176), v7, *(void *)(v0 + 192));
    uint64_t v8 = *(void *)(v0 + 144);
    *(void *)(v0 + 240) = *(void *)(v0 + 152);
    *(void *)(v0 + 248) = v8;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    unint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 256) = v11;
    *unint64_t v11 = v0;
    v11[1] = sub_100105DB0;
    return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 16, AssociatedTypeWitness, AssociatedConformanceWitness);
  }
  char v12 = *(unsigned char *)(v0 + 41);
  *(unsigned char *)(*(void *)(v0 + 88) + *(int *)(v0 + 44)) = v12 & 1;
  if ((v12 & 1) == 0)
  {
    unint64_t v13 = *(void *)(v0 + 184);
    uint64_t v14 = *(void *)(v0 + 192);
    uint64_t v15 = *(void *)(v0 + 176);
    sub_10000D9E0(v15, v13);
    uint64_t v16 = v15;
    unint64_t v17 = v13;
    uint64_t v18 = v14;
LABEL_22:
    sub_1000A110C(v16, v17, v18);
LABEL_23:
    uint64_t v2 = *(void *)(v0 + 176);
    unint64_t v3 = *(void *)(v0 + 184);
    goto LABEL_24;
  }
  if (!*(void *)(v0 + 192))
  {
    uint64_t v28 = *(void *)(v0 + 176);
    unint64_t v29 = *(void *)(v0 + 184);
    sub_10000D9E0(v28, v29);
    uint64_t v16 = v28;
    unint64_t v17 = v29;
    uint64_t v18 = 0;
    goto LABEL_22;
  }
  uint64_t v24 = *(void *)(v0 + 176);
  unint64_t v23 = *(void *)(v0 + 184);
  sub_1001C0750();
  swift_retain();
  sub_10000D9E0(v24, v23);
  sub_1001C0700();
  uint64_t v25 = sub_1001C0550();
  *(void *)(v0 + 216) = v25;
  swift_release();
  swift_release();
  if (!v25)
  {
    unint64_t v17 = *(void *)(v0 + 184);
    uint64_t v18 = *(void *)(v0 + 192);
    uint64_t v16 = *(void *)(v0 + 176);
    goto LABEL_22;
  }
  sub_1001C0740();
  if (!swift_dynamicCastClass())
  {
    sub_1000A110C(*(void *)(v0 + 176), *(void *)(v0 + 184), *(void *)(v0 + 192));
    swift_release();
    goto LABEL_23;
  }
  int64_t v26 = *(int **)(*(void *)(v0 + 88) + *(int *)(*(void *)(v0 + 80) + 48));
  sub_1001C0730();
  uint64_t v32 = (uint64_t (*)(uint64_t))((char *)v26 + *v26);
  uint64_t v27 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v27;
  *uint64_t v27 = v0;
  v27[1] = sub_100105BBC;
  uint64_t v22 = *(void *)(v0 + 104);
LABEL_13:
  return v32(v22);
}

uint64_t sub_100105710()
{
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1001064B4;
  }
  else {
    uint64_t v2 = sub_100105824;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100105824()
{
  (*(void (**)(void, void))(*(void *)(v0 + 128) + 8))(*(void *)(v0 + 136), *(void *)(v0 + 120));
  unint64_t v1 = *(void *)(v0 + 184);
  if (v1 >> 60 == 15)
  {
    sub_1000A110C(*(void *)(v0 + 176), v1, *(void *)(v0 + 192));
    uint64_t v2 = *(void *)(v0 + 144);
    *(void *)(v0 + 240) = *(void *)(v0 + 152);
    *(void *)(v0 + 248) = v2;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 256) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_100105DB0;
    return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 16, AssociatedTypeWitness, AssociatedConformanceWitness);
  }
  char v6 = *(unsigned char *)(v0 + 41);
  *(unsigned char *)(*(void *)(v0 + 88) + *(int *)(v0 + 44)) = v6 & 1;
  if ((v6 & 1) == 0)
  {
    unint64_t v7 = *(void *)(v0 + 184);
    uint64_t v8 = *(void *)(v0 + 192);
    uint64_t v9 = *(void *)(v0 + 176);
    sub_10000D9E0(v9, v7);
    uint64_t v10 = v9;
    unint64_t v11 = v7;
    uint64_t v12 = v8;
LABEL_15:
    sub_1000A110C(v10, v11, v12);
LABEL_16:
    uint64_t v21 = *(void *)(v0 + 176);
    uint64_t v22 = *(void *)(v0 + 184);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
    return v23(v21, v22);
  }
  if (!*(void *)(v0 + 192))
  {
    uint64_t v19 = *(void *)(v0 + 176);
    unint64_t v20 = *(void *)(v0 + 184);
    sub_10000D9E0(v19, v20);
    uint64_t v10 = v19;
    unint64_t v11 = v20;
    uint64_t v12 = 0;
    goto LABEL_15;
  }
  uint64_t v14 = *(void *)(v0 + 176);
  unint64_t v13 = *(void *)(v0 + 184);
  sub_1001C0750();
  swift_retain();
  sub_10000D9E0(v14, v13);
  sub_1001C0700();
  uint64_t v15 = sub_1001C0550();
  *(void *)(v0 + 216) = v15;
  swift_release();
  swift_release();
  if (!v15)
  {
    unint64_t v11 = *(void *)(v0 + 184);
    uint64_t v12 = *(void *)(v0 + 192);
    uint64_t v10 = *(void *)(v0 + 176);
    goto LABEL_15;
  }
  sub_1001C0740();
  if (!swift_dynamicCastClass())
  {
    sub_1000A110C(*(void *)(v0 + 176), *(void *)(v0 + 184), *(void *)(v0 + 192));
    swift_release();
    goto LABEL_16;
  }
  uint64_t v16 = *(int **)(*(void *)(v0 + 88) + *(int *)(*(void *)(v0 + 80) + 48));
  sub_1001C0730();
  uint64_t v25 = (uint64_t (*)(uint64_t))((char *)v16 + *v16);
  unint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v17;
  *unint64_t v17 = v0;
  v17[1] = sub_100105BBC;
  uint64_t v18 = *(void *)(v0 + 104);
  return v25(v18);
}

uint64_t sub_100105BBC()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 104);
  *(void *)(*(void *)v1 + 232) = v0;
  swift_task_dealloc();
  sub_100010360(v2, &qword_100207FE8);
  if (v0) {
    unint64_t v3 = sub_100106570;
  }
  else {
    unint64_t v3 = sub_100105CF4;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100105CF4()
{
  sub_1000A110C(v0[22], v0[23], v0[24]);
  swift_release();
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[23];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v3(v1, v2);
}

uint64_t sub_100105DB0()
{
  *(void *)(*(void *)v1 + 264) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100106630;
  }
  else {
    uint64_t v2 = sub_100105EC4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100105EC4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  *(void *)(v0 + 272) = v1;
  *(void *)(v0 + 280) = v2;
  *(void *)(v0 + 288) = v3;
  char v4 = *(unsigned char *)(v0 + 40);
  *(unsigned char *)(v0 + 42) = v4;
  if (v3 == 1)
  {
    uint64_t v1 = 0;
    unint64_t v2 = 0xF000000000000000;
LABEL_17:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = *(uint64_t (**)(uint64_t, unint64_t))(v0 + 8);
    return v15(v1, v2);
  }
  if (v4)
  {
    *(unsigned char *)(*(void *)(v0 + 88) + *(int *)(v0 + 44)) = 1;
    if (v3)
    {
      sub_1001C0750();
      swift_retain();
      sub_1001C0700();
      uint64_t v8 = sub_1001C0550();
      *(void *)(v0 + 296) = v8;
      swift_release();
      swift_release();
      if (v8)
      {
        sub_1001C0740();
        if (swift_dynamicCastClass())
        {
          uint64_t v9 = *(int **)(*(void *)(v0 + 88) + *(int *)(*(void *)(v0 + 80) + 48));
          sub_1001C0730();
          unint64_t v17 = (uint64_t (*)(uint64_t))((char *)v9 + *v9);
          uint64_t v10 = (void *)swift_task_alloc();
          *(void *)(v0 + 304) = v10;
          void *v10 = v0;
          v10[1] = sub_10010621C;
          uint64_t v11 = *(void *)(v0 + 96);
          return v17(v11);
        }
        swift_release();
      }
    }
    unint64_t v12 = *(void *)(v0 + 280);
    uint64_t v13 = *(void *)(v0 + 288);
    uint64_t v14 = *(void *)(v0 + 272);
    sub_10000D9E0(v14, v12);
    sub_1000A110C(v14, v12, v13);
    uint64_t v1 = *(void *)(v0 + 272);
    unint64_t v2 = *(void *)(v0 + 280);
    goto LABEL_17;
  }
  if (v2 >> 60 != 15)
  {
    sub_10000D9E0(v1, v2);
    sub_1000A110C(v1, v2, v3);
    goto LABEL_17;
  }
  sub_1000A110C(v1, v2, v3);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 256) = v7;
  *unint64_t v7 = v0;
  v7[1] = sub_100105DB0;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 16, AssociatedTypeWitness, AssociatedConformanceWitness);
}

uint64_t sub_10010621C()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 96);
  *(void *)(*(void *)v1 + 312) = v0;
  swift_task_dealloc();
  sub_100010360(v2, &qword_100207FE8);
  if (v0) {
    uint64_t v3 = sub_1001066BC;
  }
  else {
    uint64_t v3 = sub_100106354;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100106354()
{
  swift_release();
  unint64_t v1 = v0[35];
  uint64_t v2 = v0[36];
  uint64_t v3 = v0[34];
  sub_10000D9E0(v3, v1);
  sub_1000A110C(v3, v1, v2);
  uint64_t v4 = v0[34];
  uint64_t v5 = v0[35];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v6 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v6(v4, v5);
}

uint64_t sub_100106428()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001064B4()
{
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = v0[15];
  sub_1000A110C(v0[22], v0[23], v0[24]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100106570()
{
  unint64_t v1 = v0[23];
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[22];
  swift_release();
  sub_100007918(v3, v1);
  sub_1000A110C(v3, v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100106630()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001066BC()
{
  uint64_t v1 = v0[36];
  uint64_t v3 = v0[34];
  unint64_t v2 = v0[35];
  swift_release();
  sub_1000A110C(v3, v2, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10010676C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100106804;
  return sub_100104DC0(a2);
}

uint64_t sub_100106804(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  swift_task_dealloc();
  if (!v2)
  {
    uint64_t v8 = *(void **)(v6 + 16);
    *uint64_t v8 = a1;
    v8[1] = a2;
  }
  uint64_t v9 = *(uint64_t (**)(void))(v7 + 8);
  return v9();
}

uint64_t sub_100106920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_100104B54(a1, a2, a3);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8);
  return v5(v3, a1);
}

uint64_t sub_100106980@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v13 = *(void *)(a5 - 8);
  __chkstk_darwin(a1, a2);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v6, v16);
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(a6, v15, a5);
  uint64_t v17 = type metadata accessor for OnResponseHeadSequence();
  uint64_t v18 = (void *)(a6 + *(int *)(v17 + 36));
  void *v18 = a1;
  v18[1] = a2;
  uint64_t v19 = (void *)(a6 + *(int *)(v17 + 40));
  *uint64_t v19 = a3;
  v19[1] = a4;
  swift_retain();
  return swift_retain();
}

uint64_t type metadata accessor for OnResponseHeadSequence()
{
  return sub_10000E738();
}

uint64_t sub_100106AD4()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_100106B90(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 9) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = v9;
    a1 = (void *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    uint64_t v10 = (char *)a1 + v6;
    unsigned char *v10 = *((unsigned char *)a2 + v6);
    v10[1] = *((unsigned char *)a2 + v6 + 1);
    uint64_t v11 = (void *)(((unint64_t)a1 + v6 + 9) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v12 = (void *)(((unint64_t)a2 + v6 + 9) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v13 = v12[1];
    *uint64_t v11 = *v12;
    v11[1] = v13;
    uint64_t v14 = (void *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v15 = (void *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    swift_retain();
  }
  swift_retain();
  return a1;
}

uint64_t sub_100106CDC(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  swift_release();
  return swift_release();
}

uint64_t sub_100106D80(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 48);
  int v7 = (unsigned char *)(v6 + a1);
  uint64_t v8 = (unsigned char *)(v6 + a2);
  *int v7 = *v8;
  v7[1] = v8[1];
  uint64_t v9 = (void *)((unint64_t)(v7 + 9) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)((unint64_t)(v8 + 9) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  unint64_t v12 = (void *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = v13[1];
  void *v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100106E58(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 40);
  int v7 = (unsigned char *)(v6 + a1);
  uint64_t v8 = (unsigned char *)(v6 + a2);
  *int v7 = *v8;
  v7[1] = v8[1];
  uint64_t v9 = (void *)((unint64_t)(v7 + 9) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)((unint64_t)(v8 + 9) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  swift_retain();
  swift_release();
  unint64_t v12 = (void *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = v13[1];
  void *v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100106F44(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 32);
  int v7 = (unsigned char *)(v6 + a1);
  uint64_t v8 = (unsigned char *)(v6 + a2);
  *int v7 = *v8;
  v7[1] = v8[1];
  uint64_t v9 = (_OWORD *)((unint64_t)(v7 + 9) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (_OWORD *)((unint64_t)(v8 + 9) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  *(_OWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_100107008(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 24);
  int v7 = (unsigned char *)(v6 + a1);
  unint64_t v8 = v6 + a2;
  *int v7 = *(unsigned char *)v8;
  v7[1] = *(unsigned char *)(v8 + 1);
  uint64_t v9 = (_OWORD *)((unint64_t)(v7 + 9) & 0xFFFFFFFFFFFFFFF8);
  v8 += 9;
  unint64_t v10 = (v8 & 0xFFFFFFFFFFFFFFF8) + 23;
  *uint64_t v9 = *(_OWORD *)(v8 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  *(_OWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(v10 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1001070E0(_DWORD *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v8 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v9 = ((((v8 + 9) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    uint64_t v10 = v9 & 0xFFFFFFF8;
    if ((v9 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = a2 - v7 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v9);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v9);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x100107288);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v9);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v6 < 0x7FFFFFFF)
  {
    unint64_t v18 = *(void *)(((unint64_t)a1 + v8 + 9) & 0xFFFFFFFFFFFFFFF8);
    if (v18 >= 0xFFFFFFFF) {
      LODWORD(v18) = -1;
    }
    return (v18 + 1);
  }
  else
  {
    uint64_t v17 = *(uint64_t (**)(_DWORD *))(v5 + 48);
    return v17(a1);
  }
}

void sub_10010729C(_DWORD *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(v6 + 64);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v6 + 84);
  }
  size_t v10 = ((((v8 + 9) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v9 >= a3)
  {
    int v13 = 0;
    int v14 = a2 - v9;
    if (a2 <= v9)
    {
LABEL_17:
      switch(v13)
      {
        case 1:
          *((unsigned char *)a1 + v10) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)((char *)a1 + v10) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)((char *)a1 + v10) = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFF)
            {
              unint64_t v18 = (void *)(((unint64_t)a1 + v8 + 9) & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0)
              {
                uint64_t v19 = a2 ^ 0x80000000;
                v18[1] = 0;
              }
              else
              {
                uint64_t v19 = (a2 - 1);
              }
              void *v18 = v19;
            }
            else
            {
              uint64_t v17 = *(void (**)(_DWORD *, uint64_t))(v6 + 56);
              v17(a1, a2);
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    if (((((v8 + 9) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v11 = a3 - v9 + 1;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v11 >= 0x10000) {
      int v12 = 4;
    }
    else {
      int v12 = 2;
    }
    if (v11 < 0x100) {
      int v12 = 1;
    }
    if (v11 >= 2) {
      int v13 = v12;
    }
    else {
      int v13 = 0;
    }
    int v14 = a2 - v9;
    if (a2 <= v9) {
      goto LABEL_17;
    }
  }
  if (((((v8 + 9) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    int v15 = v14;
  }
  else {
    int v15 = 1;
  }
  if (((((v8 + 9) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v16 = ~v9 + a2;
    bzero(a1, v10);
    *a1 = v16;
  }
  switch(v13)
  {
    case 1:
      *((unsigned char *)a1 + v10) = v15;
      break;
    case 2:
      *(_WORD *)((char *)a1 + v10) = v15;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1001074B4);
    case 4:
      *(_DWORD *)((char *)a1 + v10) = v15;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for OnResponseHeadSequence.AsyncIterator()
{
  return sub_10000E738();
}

uint64_t sub_1001074F4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100107594(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    size_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    unsigned int v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    int v13 = (void *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
    int v14 = (void *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v15 = v14[1];
    void *v13 = *v14;
    v13[1] = v15;
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1001076B4(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  swift_release();
  return swift_release();
}

uint64_t sub_100107734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = v8[1];
  *int v7 = *v8;
  v7[1] = v9;
  size_t v10 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v11 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = v11[1];
  void *v10 = *v11;
  v10[1] = v12;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1001077D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = v8[1];
  *int v7 = *v8;
  v7[1] = v9;
  swift_retain();
  swift_release();
  size_t v10 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v11 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = v11[1];
  void *v10 = *v11;
  v10[1] = v12;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100107888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  int v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  *(_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_100107914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 23;
  *int v7 = *(_OWORD *)(v8 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  *(_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(v9 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1001079B4(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x100107B08);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_100107B1C(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFF)
            {
              uint64_t v19 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0)
              {
                uint64_t v20 = a2 ^ 0x80000000;
                v19[1] = 0;
              }
              else
              {
                uint64_t v20 = a2 - 1;
              }
              *uint64_t v19 = v20;
            }
            else
            {
              unint64_t v18 = *(void (**)(void))(v6 + 56);
              v18();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v17 = ~v8 + a2;
    bzero(a1, ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x100107D10);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t sub_100107D38()
{
  return swift_getWitnessTable();
}

uint64_t sub_100107D54()
{
  uint64_t result = sub_1001C0340();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_100107E38()
{
  v1[8] = v0;
  uint64_t v2 = *v0;
  v1[9] = *v0;
  sub_1001BF310();
  v1[10] = swift_task_alloc();
  uint64_t v3 = *(void *)(v2 + 80);
  v1[11] = v3;
  v1[12] = *(void *)(v3 - 8);
  v1[13] = swift_task_alloc();
  return _swift_task_switch(sub_100107F5C, 0, 0);
}

uint64_t sub_100107F5C()
{
  *(void *)(v0 + 112) = qword_10020DA88;
  unint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C1200();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Running fetchServerDrivenConfig activity", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 104);
  uint64_t v7 = *(void *)(v0 + 80);
  uint64_t v6 = *(void *)(v0 + 88);
  uint64_t v8 = *(void *)(v0 + 64);

  type metadata accessor for TC2UpdateServerDrivenConfigurationRequest();
  uint64_t v9 = *(void *)(v8 + qword_10020DA90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v8 + *(void *)(*(void *)v8 + 112), v6);
  swift_retain();
  sub_1001BF300();
  sub_100032890(v8 + *(void *)(*(void *)v8 + 120), v0 + 16);
  *(void *)(v0 + 120) = sub_10000B198(v9, v4, v7, (long long *)(v0 + 16));
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v10;
  void *v10 = v0;
  v10[1] = sub_10010812C;
  return sub_10000B490();
}

uint64_t sub_10010812C()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1001082C0;
  }
  else {
    os_log_type_t v2 = sub_100108240;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100108240()
{
  swift_release();
  sub_1001084C0();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001082C0()
{
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C11F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 56) = v5;
    sub_1001C1310();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "fetchServerDrivenConfig activity could not update, error=%@", v3, 0xCu);
    sub_100003918(&qword_100207DA8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();
    swift_errorRelease();
  }
  else
  {
    swift_release();
    swift_errorRelease();

    swift_errorRelease();
    swift_errorRelease();
  }
  sub_1001084C0();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

void sub_1001084C0()
{
  oslog = sub_1001C0330();
  os_log_type_t v0 = sub_1001C1200();
  if (os_log_type_enabled(oslog, v0))
  {
    uint64_t v1 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v1 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v0, "Finished fetchServerDrivenConfig activity", v1, 2u);
    swift_slowDealloc();
  }
}

uint64_t *sub_10010856C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (uint64_t)v0 + qword_10020DA88;
  uint64_t v3 = sub_1001C0340();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 112));
  sub_100003E90((uint64_t)v0 + *(void *)(*v0 + 120));
  return v0;
}

uint64_t sub_10010865C()
{
  sub_10010856C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TC2UpdateServerDrivenConfigurationActivity()
{
  return sub_10000E738();
}

uint64_t sub_1001086CC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1000074CC;
  return sub_100107E38();
}

void sub_10010875C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1001C0890();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [self sharedScheduler];
  NSString v8 = sub_1001C0BE0();
  sub_1000A0DDC();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, enum case for DispatchQoS.QoSClass.background(_:), v2);
  uint64_t v9 = (void *)sub_1001C1270();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  aBlock[4] = sub_10010933C;
  aBlock[5] = v1;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10010912C;
  aBlock[3] = &unk_1001FFE28;
  unint64_t v10 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v7 registerForTaskWithIdentifier:v8 usingQueue:v9 launchHandler:v10];
  _Block_release(v10);
}

uint64_t sub_100108944(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_100003918(&qword_10020C3B0);
  __chkstk_darwin(v4 - 8, v5);
  id v7 = (char *)&aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a2 + 64);
  long long aBlock = *(void ***)(a2 + 56);
  uint64_t v18 = v8;
  swift_bridgeObjectRetain();
  v23._countAndFlagsBits = 58;
  v23._object = (void *)0xE100000000000000;
  sub_1001C0D00(v23);
  unint64_t v10 = aBlock;
  uint64_t v9 = v18;
  unsigned int v11 = (void *)swift_allocObject();
  uint64_t v11[2] = a2;
  v11[3] = v10;
  v11[4] = v9;
  uint64_t v21 = sub_10010939C;
  uint64_t v22 = v11;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v18 = 1107296256;
  uint64_t v19 = sub_100108CFC;
  uint64_t v20 = &unk_1001FFE78;
  uint64_t v12 = _Block_copy(&aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  [a1 setExpirationHandlerWithReason:v12];
  _Block_release(v12);
  sub_1001C0F50();
  uint64_t v13 = sub_1001C0FC0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v7, 0, 1, v13);
  int v14 = (void *)swift_allocObject();
  v14[2] = 0;
  v14[3] = 0;
  v14[4] = a2;
  v14[5] = v10;
  v14[6] = v9;
  v14[7] = a1;
  swift_retain();
  id v15 = a1;
  sub_1001A1CC0((uint64_t)v7, (uint64_t)&unk_10020DBF0, (uint64_t)v14);
  return swift_release();
}

void sub_100108B44(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  swift_bridgeObjectRetain_n();
  oslog = sub_1001C0330();
  os_log_type_t v6 = sub_1001C1200();
  if (os_log_type_enabled(oslog, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    swift_bridgeObjectRetain();
    sub_1000DF238(a3, a4, &v9);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 12) = 2048;
    sub_1001C1310();
    _os_log_impl((void *)&_mh_execute_header, oslog, v6, "%s scheduled task is being expired reason=%lu", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_100108CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_100108D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  return _swift_task_switch(sub_100108D74, 0, 0);
}

uint64_t sub_100108D74()
{
  uint64_t v13 = v0;
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C1200();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v4 = v0[4];
    unint64_t v3 = v0[5];
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    swift_bridgeObjectRetain();
    v0[2] = sub_1000DF238(v4, v3, &v12);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s performing scheduled task", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  os_log_type_t v6 = (void *)v0[3];
  uint64_t v7 = v6[5];
  uint64_t v8 = v6[6];
  sub_10000D934(v6 + 2, v7);
  unsigned int v11 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v8 + 8) + **(int **)(v8 + 8));
  uint64_t v9 = (void *)swift_task_alloc();
  v0[7] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_100108FC8;
  return v11(v7, v8);
}

uint64_t sub_100108FC8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1001090C4, 0, 0);
}

uint64_t sub_1001090C4()
{
  [*(id *)(v0 + 48) setTaskCompleted];
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_10010912C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_100109194()
{
  sub_100003E90(v0 + 16);
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC20privatecloudcomputed16TC2ScheduledTask_logger;
  uint64_t v2 = sub_1001C0340();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_100109244()
{
  return type metadata accessor for TC2ScheduledTask();
}

uint64_t type metadata accessor for TC2ScheduledTask()
{
  uint64_t result = qword_10020DB50;
  if (!qword_10020DB50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100109298()
{
  uint64_t result = sub_1001C0340();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10010933C(void *a1)
{
  return sub_100108944(a1, v1);
}

uint64_t sub_100109344(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100109354()
{
  return swift_release();
}

uint64_t sub_10010935C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

void sub_10010939C(uint64_t a1)
{
  sub_100108B44(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1001093A8()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1001093F8()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v0 + 48);
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_1000074CC;
  *(_OWORD *)(v4 + 40) = v5;
  *(void *)(v4 + 24) = v2;
  *(void *)(v4 + 32) = v3;
  return _swift_task_switch(sub_100108D74, 0, 0);
}

uint64_t sub_1001094BC(uint64_t a1, uint64_t a2)
{
  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  v3[9] = *v2;
  return _swift_task_switch(sub_100109508, 0, 0);
}

uint64_t sub_100109508()
{
  uint64_t v27 = v0;
  uint64_t v1 = (_DWORD *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 48);
  unint64_t v3 = *(void *)(v0 + 56);
  *(void *)(v0 + 80) = OBJC_IVAR____TtC20privatecloudcomputed22IncomingUserDataReader_logger;
  swift_retain_n();
  sub_100007B14(v2, v3);
  uint64_t v4 = sub_1001C0330();
  os_log_type_t v5 = sub_1001C1200();
  if (os_log_type_enabled(v4, v5))
  {
    unint64_t v24 = v3 >> 62;
    uint64_t v6 = *(void *)(v0 + 64);
    uint64_t v7 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    uint64_t v9 = *(void *)(v6 + OBJC_IVAR____TtC20privatecloudcomputed22IncomingUserDataReader_logPrefix);
    unint64_t v8 = *(void *)(v6 + OBJC_IVAR____TtC20privatecloudcomputed22IncomingUserDataReader_logPrefix + 8);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 32) = sub_1000DF238(v9, v8, &v26);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v7 + 12) = 2048;
    uint64_t v10 = 0;
    switch(v24)
    {
      case 1uLL:
        int v13 = *(_DWORD *)(v0 + 52);
        LODWORD(v10) = v13 - *v1;
        if (__OFSUB__(v13, *v1))
        {
          __break(1u);
LABEL_13:
          __break(1u);
          JUMPOUT(0x100109838);
        }
        uint64_t v10 = (int)v10;
LABEL_8:
        uint64_t v18 = *(void *)(v0 + 48);
        unint64_t v17 = *(void *)(v0 + 56);
        *(void *)(v0 + 40) = v10;
        sub_1001C1310();
        sub_10000792C(v18, v17);
        _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s IncomingUserDataReader | Starting forwarding data: %ld", (uint8_t *)v7, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        break;
      case 2uLL:
        uint64_t v14 = *(void *)(*(void *)v1 + 16);
        uint64_t v15 = *(void *)(*(void *)v1 + 24);
        BOOL v16 = __OFSUB__(v15, v14);
        uint64_t v10 = v15 - v14;
        if (!v16) {
          goto LABEL_8;
        }
        goto LABEL_13;
      case 3uLL:
        goto LABEL_8;
      default:
        uint64_t v10 = *(unsigned __int8 *)(v0 + 62);
        goto LABEL_8;
    }
  }
  else
  {
    unint64_t v11 = *(void *)(v0 + 56);
    uint64_t v12 = *(void *)(v0 + 48);

    swift_release_n();
    sub_10000792C(v12, v11);
  }
  uint64_t v20 = *(void *)(v0 + 64);
  uint64_t v19 = *(void *)(v0 + 72);
  long long v25 = *(_OWORD *)(v0 + 48);
  uint64_t v21 = swift_task_alloc();
  *(void *)(v0 + 88) = v21;
  *(void *)(v21 + 16) = v20;
  *(_OWORD *)(v21 + 24) = v25;
  *(void *)(v21 + 40) = v19;
  uint64_t v22 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v22;
  *uint64_t v22 = v0;
  v22[1] = sub_100109848;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v22, 0, 0, 0x4464726177726F66, 0xEF293A5F28617461, sub_10010D64C, v21, (char *)&type metadata for () + 8);
}

uint64_t sub_100109848()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100109BE4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100109964;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100109964()
{
  uint64_t v23 = v0;
  unint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 48);
  swift_retain_n();
  sub_100007B14(v2, v1);
  unint64_t v3 = sub_1001C0330();
  os_log_type_t v4 = sub_1001C1200();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = *(void *)(v0 + 64);
    uint64_t v21 = *(void *)(v0 + 56) >> 62;
    uint64_t v6 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    uint64_t v8 = *(void *)(v5 + OBJC_IVAR____TtC20privatecloudcomputed22IncomingUserDataReader_logPrefix);
    unint64_t v7 = *(void *)(v5 + OBJC_IVAR____TtC20privatecloudcomputed22IncomingUserDataReader_logPrefix + 8);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 16) = sub_1000DF238(v8, v7, &v22);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v6 + 12) = 2048;
    uint64_t v9 = 0;
    switch(v21)
    {
      case 1:
        int v12 = *(_DWORD *)(v0 + 48);
        int v13 = *(_DWORD *)(v0 + 52);
        BOOL v14 = __OFSUB__(v13, v12);
        LODWORD(v9) = v13 - v12;
        if (v14)
        {
          __break(1u);
LABEL_13:
          __break(1u);
          JUMPOUT(0x100109BD4);
        }
        uint64_t v9 = (int)v9;
LABEL_8:
        uint64_t v18 = *(void *)(v0 + 48);
        unint64_t v17 = *(void *)(v0 + 56);
        *(void *)(v0 + 24) = v9;
        sub_1001C1310();
        sub_10000792C(v18, v17);
        _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s IncomingUserDataReader | Finished forwarding data: %ld", (uint8_t *)v6, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        break;
      case 2:
        uint64_t v15 = *(void *)(*(void *)(v0 + 48) + 16);
        uint64_t v16 = *(void *)(*(void *)(v0 + 48) + 24);
        BOOL v14 = __OFSUB__(v16, v15);
        uint64_t v9 = v16 - v15;
        if (!v14) {
          goto LABEL_8;
        }
        goto LABEL_13;
      case 3:
        goto LABEL_8;
      default:
        uint64_t v9 = *(unsigned __int8 *)(v0 + 62);
        goto LABEL_8;
    }
  }
  else
  {
    unint64_t v10 = *(void *)(v0 + 56);
    uint64_t v11 = *(void *)(v0 + 48);

    swift_release_n();
    sub_10000792C(v11, v10);
  }
  uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_100109BE4()
{
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100109C48(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, char *a5)
{
  uint64_t v48 = a5;
  uint64_t v46 = sub_100003918(&qword_10020DCD0);
  uint64_t v44 = *(void *)(v46 - 8);
  __chkstk_darwin(v46, v9);
  uint64_t v45 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100003918(&qword_100208640);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v14 = __chkstk_darwin(v11, v13);
  uint64_t v47 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v44 - v17;
  uint64_t v19 = sub_100003918(&qword_10020DDB0);
  uint64_t v21 = __chkstk_darwin(v19 - 8, v20);
  uint64_t v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v24);
  uint64_t v26 = (char *)&v44 - v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v18, a1, v11);
  uint64_t v27 = (os_unfair_lock_s *)(a2 + OBJC_IVAR____TtC20privatecloudcomputed22IncomingUserDataReader_stateLock);
  os_unfair_lock_lock((os_unfair_lock_t)(a2 + OBJC_IVAR____TtC20privatecloudcomputed22IncomingUserDataReader_stateLock));
  uint64_t v28 = sub_100003918(&qword_10020DCC0);
  sub_10010A094((uint64_t)v27 + *(int *)(v28 + 28), a3, a4, (uint64_t)v18, (uint64_t)v26);
  os_unfair_lock_unlock(v27);
  unint64_t v29 = *(void (**)(char *, uint64_t))(v12 + 8);
  v29(v18, v11);
  sub_10003282C((uint64_t)v26, (uint64_t)v23, &qword_10020DDB0);
  uint64_t v30 = type metadata accessor for IncomingUserDataReader.ForwardDataAction(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v23, 1, v30) != 1)
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v32 = *(void *)&v23[*(int *)(sub_100003918(&qword_10020DDB8) + 48)];
        uint64_t v33 = v47;
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v47, v23, v11);
        uint64_t v49 = v32;
        sub_1001C0EB0();
        unint64_t v34 = v33;
      }
      else
      {
        uint64_t v42 = v47;
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v47, v23, v11);
        sub_1001C0EC0();
        unint64_t v34 = v42;
      }
      v29(v34, v11);
    }
    else
    {
      uint64_t v35 = sub_100003918(&qword_10020DDC0);
      uint64_t v36 = (uint64_t *)&v23[*(int *)(v35 + 48)];
      uint64_t v37 = *v36;
      unint64_t v38 = v36[1];
      uint64_t v48 = &v23[*(int *)(v35 + 64)];
      uint64_t v39 = v44;
      (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v45, v23, v46);
      unint64_t v40 = v47;
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v47, v48, v11);
      uint64_t v49 = v37;
      unint64_t v50 = v38;
      sub_10000D9E0(v37, v38);
      uint64_t v41 = v45;
      sub_1001C0EC0();
      sub_1001C0EC0();
      sub_100007918(v37, v38);
      v29(v40, v11);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v46);
    }
  }
  return sub_100010360((uint64_t)v26, &qword_10020DDB0);
}

uint64_t sub_10010A094@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v59 = a2;
  uint64_t v10 = sub_100003918(&qword_100208648);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for IncomingUserDataReader.State(0);
  uint64_t v16 = __chkstk_darwin(v14, v15);
  uint64_t v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v19);
  uint64_t v21 = (char *)&v54 - v20;
  sub_10010D5E8(a1, (uint64_t)&v54 - v20);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      unint64_t v55 = a3;
      uint64_t v56 = a4;
      if (v21[8]) {
        goto LABEL_17;
      }
      uint64_t v57 = a5;
      uint64_t v58 = v5;
      uint64_t v40 = *(void *)v21;
      uint64_t v41 = sub_100003918(&qword_10020DCD8);
      uint64_t v42 = (uint64_t)&v21[*(int *)(v41 + 64)];
      uint64_t v60 = v40;
      sub_10001E54C(v42, (uint64_t)v13);
      uint64_t v43 = sub_100003918(&qword_100208640);
      uint64_t v44 = *(void *)(v43 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v13, 1, v43) != 1) {
        goto LABEL_17;
      }
      sub_10010DF4C(a1, type metadata accessor for IncomingUserDataReader.State);
      uint64_t v45 = *(void *)(v40 + 24);
      Swift::Int v46 = v45 + 1;
      if (__OFADD__(v45, 1)) {
        goto LABEL_16;
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (*(void *)(v40 + 16) < v46 || (isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1000A3E24(v46, 0);
        uint64_t v40 = v60;
      }
      uint64_t v48 = v58;
      sub_1000A4488((void *)(v40 + 16), v40 + 40, v59, v55);
      uint64_t v58 = v48;
      uint64_t v49 = *(void *)(v40 + 24);
      unint64_t v50 = &v18[*(int *)(v41 + 64)];
      *(void *)uint64_t v18 = v40;
      sub_100010360((uint64_t)v13, &qword_100208648);
      v18[8] = 0;
      if (v49 == 4)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v50, v56, v43);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v50, 0, 1, v43);
        swift_storeEnumTagMultiPayload();
        sub_10010D678((uint64_t)v18, a1);
        uint64_t v51 = type metadata accessor for IncomingUserDataReader.ForwardDataAction(0);
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v57, 1, 1, v51);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 56))(v50, 1, 1, v43);
        swift_storeEnumTagMultiPayload();
        sub_10010D678((uint64_t)v18, a1);
        uint64_t v52 = v57;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(v57, v56, v43);
        uint64_t v53 = type metadata accessor for IncomingUserDataReader.ForwardDataAction(0);
        swift_storeEnumTagMultiPayload();
        uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v52, 0, 1, v53);
      }
      break;
    case 2u:
      uint64_t v36 = *(void *)v21;
      uint64_t v37 = *(int *)(sub_100003918(&qword_10020DDB8) + 48);
      uint64_t v38 = sub_100003918(&qword_100208640);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(a5, a4, v38);
      *(void *)(a5 + v37) = v36;
      uint64_t v39 = type metadata accessor for IncomingUserDataReader.ForwardDataAction(0);
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(a5, 0, 1, v39);
    case 3u:
      goto LABEL_17;
    default:
      unint64_t v22 = a3;
      sub_10010DF4C(a1, type metadata accessor for IncomingUserDataReader.State);
      uint64_t v23 = *(void *)v21;
      uint64_t v24 = &v21[*(int *)(sub_100003918(&qword_10020DCC8) + 48)];
      uint64_t v25 = sub_100003918(&qword_10020DCD0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v25 - 8) + 32))(a5, v24, v25);
      if (*(void *)(v23 + 24))
      {
        __break(1u);
LABEL_16:
        __break(1u);
LABEL_17:
        sub_1001C1580();
        __break(1u);
        JUMPOUT(0x10010A790);
      }
      uint64_t v26 = a1 + *(int *)(sub_100003918(&qword_10020DCD8) + 64);
      *(void *)a1 = v23;
      *(unsigned char *)(a1 + 8) = 0;
      uint64_t v27 = sub_100003918(&qword_100208640);
      uint64_t v28 = a4;
      uint64_t v29 = *(void *)(v27 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56))(v26, 1, 1, v27);
      swift_storeEnumTagMultiPayload();
      uint64_t v30 = sub_100003918(&qword_10020DDC0);
      uint64_t v31 = (void *)(a5 + *(int *)(v30 + 48));
      uint64_t v32 = a5 + *(int *)(v30 + 64);
      uint64_t v33 = v59;
      void *v31 = v59;
      v31[1] = v22;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v32, v28, v27);
      uint64_t v34 = type metadata accessor for IncomingUserDataReader.ForwardDataAction(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(a5, 0, 1, v34);
      uint64_t result = sub_100007B14(v33, v22);
      break;
  }
  return result;
}

uint64_t sub_10010A7A0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003918(&qword_10020DDA0);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v6, v9);
  uint64_t v12 = (char *)&v31 - v11;
  __chkstk_darwin(v10, v13);
  uint64_t v15 = (char *)&v31 - v14;
  swift_retain();
  swift_errorRetain();
  swift_retain();
  swift_errorRetain();
  uint64_t v16 = sub_1001C0330();
  os_log_type_t v17 = sub_1001C1200();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v33 = v12;
    uint64_t v34 = v8;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = (void *)swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    *(void *)&long long v36 = v32;
    *(_DWORD *)uint64_t v18 = 136315394;
    uint64_t v20 = *(void *)(v2 + OBJC_IVAR____TtC20privatecloudcomputed22IncomingUserDataReader_logPrefix);
    unint64_t v21 = *(void *)(v2 + OBJC_IVAR____TtC20privatecloudcomputed22IncomingUserDataReader_logPrefix + 8);
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1000DF238(v20, v21, (uint64_t *)&v36);
    sub_1001C1310();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2112;
    if (a1)
    {
      swift_errorRetain();
      uint64_t v22 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v35 = v22;
      sub_1001C1310();
    }
    else
    {
      uint64_t v35 = 0;
      sub_1001C1310();
      uint64_t v22 = 0;
    }
    *uint64_t v19 = v22;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "%s IncomingUserDataReader | Finish stream: %@", (uint8_t *)v18, 0x16u);
    sub_100003918(&qword_100207DA8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v12 = v33;
    uint64_t v8 = v34;
  }
  else
  {
    swift_release_n();

    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v23 = (os_unfair_lock_s *)(v2 + OBJC_IVAR____TtC20privatecloudcomputed22IncomingUserDataReader_stateLock);
  os_unfair_lock_lock((os_unfair_lock_t)(v2 + OBJC_IVAR____TtC20privatecloudcomputed22IncomingUserDataReader_stateLock));
  uint64_t v24 = sub_100003918(&qword_10020DCC0);
  sub_10010AC9C((uint64_t)v23 + *(int *)(v24 + 28), a1, v15);
  os_unfair_lock_unlock(v23);
  if (a1)
  {
    sub_10003282C((uint64_t)v15, (uint64_t)v12, &qword_10020DDA0);
    uint64_t v25 = sub_100003918(&qword_10020DCD0);
    uint64_t v26 = *(void *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v12, 1, v25) == 1)
    {
      sub_100010360((uint64_t)v15, &qword_10020DDA0);
      uint64_t v27 = (uint64_t)v12;
      return sub_100010360(v27, &qword_10020DDA0);
    }
    *(void *)&long long v36 = a1;
    swift_errorRetain();
    sub_1001C0EB0();
    sub_100010360((uint64_t)v15, &qword_10020DDA0);
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v12, v25);
  }
  else
  {
    sub_10003282C((uint64_t)v15, (uint64_t)v8, &qword_10020DDA0);
    uint64_t v28 = sub_100003918(&qword_10020DCD0);
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v8, 1, v28) == 1)
    {
      sub_100010360((uint64_t)v15, &qword_10020DDA0);
      uint64_t v27 = (uint64_t)v8;
      return sub_100010360(v27, &qword_10020DDA0);
    }
    long long v36 = xmmword_1001CE850;
    sub_1001C0EC0();
    sub_100010360((uint64_t)v15, &qword_10020DDA0);
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v8, v28);
  }
}

uint64_t sub_10010AC9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v6 = sub_100003918(&qword_10020DCD0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for IncomingUserDataReader.State(0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10010D5E8(a1, (uint64_t)v14);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v31 = a3;
      uint64_t v32 = v3;
      uint64_t v30 = *(void *)v14;
      char v19 = v14[8];
      uint64_t v20 = sub_100003918(&qword_10020DCD8);
      uint64_t v15 = (uint64_t)&v14[*(int *)(v20 + 64)];
      if (v19) {
        goto LABEL_15;
      }
      uint64_t v21 = v20;
      uint64_t v22 = sub_100003918(&qword_100208640);
      uint64_t v23 = *(void *)(v22 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v15, 1, v22) != 1) {
        goto LABEL_16;
      }
      sub_10010DF4C(a1, type metadata accessor for IncomingUserDataReader.State);
      uint64_t v24 = v31;
      uint64_t v25 = v33;
      if (v33)
      {
        swift_errorRetain();
        swift_release();
        *(void *)a1 = v25;
      }
      else
      {
        uint64_t v27 = a1 + *(int *)(v21 + 64);
        *(void *)a1 = v30;
        *(unsigned char *)(a1 + 8) = 1;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v27, 1, 1, v22);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v24, 1, 1, v6);
      break;
    case 2u:
      swift_errorRelease();
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
    case 3u:
      goto LABEL_16;
    default:
      uint64_t v31 = a3;
      uint64_t v32 = v3;
      sub_10010DF4C(a1, type metadata accessor for IncomingUserDataReader.State);
      uint64_t v15 = *(void *)v14;
      uint64_t v16 = &v14[*(int *)(sub_100003918(&qword_10020DCC8) + 48)];
      os_log_type_t v17 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v17(v10, v16, v6);
      uint64_t v18 = *(void *)(v15 + 24);
      swift_release();
      if (v18)
      {
        __break(1u);
LABEL_15:
        sub_100010360(v15, &qword_100208648);
        swift_release();
LABEL_16:
        sub_1001C1580();
        __break(1u);
        JUMPOUT(0x10010B108);
      }
      if (v33) {
        *(void *)a1 = v33;
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v28 = v31;
      v17(v31, v10, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v28, 0, 1, v6);
      uint64_t result = swift_errorRetain();
      break;
  }
  return result;
}

uint64_t sub_10010B118()
{
  *(void *)(v1 + 56) = v0;
  return _swift_task_switch(sub_10010B138, 0, 0);
}

uint64_t sub_10010B138()
{
  uint64_t v13 = v0;
  v0[8] = OBJC_IVAR____TtC20privatecloudcomputed22IncomingUserDataReader_logger;
  swift_retain_n();
  uint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C1200();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[7];
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v5 = v3 + OBJC_IVAR____TtC20privatecloudcomputed22IncomingUserDataReader_logPrefix;
    uint64_t v7 = *(void *)(v3 + OBJC_IVAR____TtC20privatecloudcomputed22IncomingUserDataReader_logPrefix);
    unint64_t v6 = *(void *)(v5 + 8);
    swift_bridgeObjectRetain();
    v0[6] = sub_1000DF238(v7, v6, &v12);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s IncomingUserDataReader | Starting next call", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v8 = (void *)swift_task_alloc();
  v0[9] = v8;
  uint64_t v9 = sub_100003918((uint64_t *)&unk_10020DD68);
  *uint64_t v8 = v0;
  v8[1] = sub_10010B388;
  uint64_t v10 = v0[7];
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0x29287478656ELL, 0xE600000000000000, sub_10010D6DC, v10, v9);
}

uint64_t sub_10010B388()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_10010B774;
  }
  else {
    os_log_type_t v2 = sub_10010B49C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10010B49C()
{
  uint64_t v16 = v0;
  uint64_t v1 = v0[2];
  unint64_t v2 = v0[3];
  swift_retain();
  sub_10000D9E0(v1, v2);
  swift_retain();
  sub_10000D9E0(v1, v2);
  uint64_t v3 = sub_1001C0330();
  os_log_type_t v4 = sub_1001C1200();
  if (os_log_type_enabled(v3, v4))
  {
    os_log_type_t v14 = v4;
    uint64_t v5 = v0[7];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    uint64_t v8 = *(void *)(v5 + OBJC_IVAR____TtC20privatecloudcomputed22IncomingUserDataReader_logPrefix);
    unint64_t v7 = *(void *)(v5 + OBJC_IVAR____TtC20privatecloudcomputed22IncomingUserDataReader_logPrefix + 8);
    swift_bridgeObjectRetain();
    v0[4] = sub_1000DF238(v8, v7, &v15);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v6 + 12) = 2048;
    uint64_t v9 = -1;
    if (v2 >> 60 != 15)
    {
      switch(v2 >> 62)
      {
        case 1uLL:
          sub_100007918(v1, v2);
          LODWORD(v9) = HIDWORD(v1) - v1;
          if (__OFSUB__(HIDWORD(v1), v1))
          {
            __break(1u);
            JUMPOUT(0x10010B764);
          }
          uint64_t v9 = (int)v9;
          break;
        case 2uLL:
          uint64_t v11 = *(void *)(v1 + 16);
          uint64_t v10 = *(void *)(v1 + 24);
          sub_100007918(v1, v2);
          uint64_t v9 = v10 - v11;
          if (__OFSUB__(v10, v11))
          {
            __break(1u);
            goto LABEL_11;
          }
          break;
        case 3uLL:
LABEL_11:
          sub_100007918(v1, v2);
          uint64_t v9 = 0;
          break;
        default:
          sub_100007918(v1, v2);
          uint64_t v9 = BYTE6(v2);
          break;
      }
    }
    v0[5] = v9;
    sub_1001C1310();
    sub_100007918(v1, v2);
    _os_log_impl((void *)&_mh_execute_header, v3, v14, "%s IncomingUserDataReader | Finished next call - %ld bytes", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100007918(v1, v2);

    swift_release_n();
    sub_100007918(v1, v2);
  }
  uint64_t v12 = (uint64_t (*)(uint64_t, unint64_t))v0[1];
  return v12(v1, v2);
}

uint64_t sub_10010B774()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10010B78C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100003918(&qword_100208648);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v50 = (uint64_t)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v8);
  uint64_t v49 = (uint64_t)&v48 - v9;
  uint64_t v10 = sub_100003918(&qword_10020DCD0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v13 = __chkstk_darwin(v10, v12);
  uint64_t v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v13, v16);
  char v19 = (char *)&v48 - v18;
  __chkstk_darwin(v17, v20);
  uint64_t v22 = (char *)&v48 - v21;
  uint64_t v23 = sub_100003918(&qword_10020DDD0);
  uint64_t v25 = __chkstk_darwin(v23 - 8, v24);
  uint64_t v27 = (char *)&v48 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25, v28);
  uint64_t v30 = (char *)&v48 - v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v22, a1, v10);
  uint64_t v31 = (os_unfair_lock_s *)(a2 + OBJC_IVAR____TtC20privatecloudcomputed22IncomingUserDataReader_stateLock);
  os_unfair_lock_lock((os_unfair_lock_t)(a2 + OBJC_IVAR____TtC20privatecloudcomputed22IncomingUserDataReader_stateLock));
  uint64_t v32 = sub_100003918(&qword_10020DCC0);
  sub_10010BC5C((uint64_t)v31 + *(int *)(v32 + 28), (uint64_t)v22, (uint64_t)v30);
  os_unfair_lock_unlock(v31);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v11 + 8);
  v33(v22, v10);
  sub_10003282C((uint64_t)v30, (uint64_t)v27, &qword_10020DDD0);
  uint64_t Action = type metadata accessor for IncomingUserDataReader.NextAction(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(Action - 8) + 48))(v27, 1, Action) == 1) {
    goto LABEL_4;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v35 = *(void *)&v27[*(int *)(sub_100003918(&qword_10020DDD8) + 48)];
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v27, v10);
    uint64_t v51 = v35;
    sub_1001C0EB0();
    v33(v15, v10);
LABEL_4:
    long long v36 = &qword_10020DDD0;
    uint64_t v37 = (uint64_t)v30;
    return sub_100010360(v37, v36);
  }
  uint64_t v39 = sub_100003918(&qword_10020DDE0);
  uint64_t v40 = (uint64_t *)&v27[*(int *)(v39 + 48)];
  uint64_t v42 = *v40;
  unint64_t v41 = v40[1];
  uint64_t v43 = (uint64_t)&v27[*(int *)(v39 + 64)];
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v19, v27, v10);
  uint64_t v44 = v49;
  sub_10001E54C(v43, v49);
  uint64_t v51 = v42;
  unint64_t v52 = v41;
  unint64_t v48 = v41;
  sub_10000D9E0(v42, v41);
  sub_1001C0EC0();
  uint64_t v45 = v50;
  sub_10003282C(v44, v50, &qword_100208648);
  uint64_t v46 = sub_100003918(&qword_100208640);
  uint64_t v47 = *(void *)(v46 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46) != 1)
  {
    sub_1001C0EC0();
    sub_100007918(v42, v48);
    sub_100010360(v44, &qword_100208648);
    v33(v19, v10);
    sub_100010360((uint64_t)v30, &qword_10020DDD0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 8))(v45, v46);
  }
  sub_100007918(v42, v48);
  sub_100010360(v44, &qword_100208648);
  v33(v19, v10);
  sub_100010360((uint64_t)v30, &qword_10020DDD0);
  uint64_t v37 = v45;
  long long v36 = &qword_100208648;
  return sub_100010360(v37, v36);
}

uint64_t sub_10010BC5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_100003918(&qword_100208648);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for IncomingUserDataReader.State(0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10010D5E8(a1, (uint64_t)v14);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      v63[1] = v3;
      uint64_t v15 = *(void **)v14;
      char v16 = v14[8];
      uint64_t v17 = sub_100003918(&qword_10020DCD8);
      uint64_t v18 = (uint64_t)&v14[*(int *)(v17 + 64)];
      if ((v16 & 1) == 0)
      {
        sub_10010DF4C(a1, type metadata accessor for IncomingUserDataReader.State);
        uint64_t v64 = v15;
        sub_10001E54C(v18, (uint64_t)v10);
        if ((uint64_t)v15[3] < 1)
        {
          sub_100010360((uint64_t)v10, &qword_100208648);
          uint64_t v55 = a1 + *(int *)(sub_100003918(&qword_10020DCC8) + 48);
          *(void *)a1 = v15;
          uint64_t v56 = sub_100003918(&qword_10020DCD0);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 16))(v55, a2, v56);
          swift_storeEnumTagMultiPayload();
          uint64_t Action = type metadata accessor for IncomingUserDataReader.NextAction(0);
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(Action - 8) + 56))(a3, 1, 1, Action);
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1000F86C0();
          uint64_t v15 = v64;
        }
        uint64_t v43 = v15[4];
        uint64_t v44 = v43 + 1;
        if (!__OFADD__(v43, 1))
        {
          uint64_t v45 = &v15[2 * v43];
          uint64_t v46 = v45[5];
          uint64_t v47 = v45[6];
          uint64_t v48 = v15[3];
          if (v44 >= v15[2]) {
            uint64_t v44 = 0;
          }
          _DWORD v15[4] = v44;
          if (!__OFSUB__(v48, 1))
          {
            v15[3] = v48 - 1;
            uint64_t v49 = a1 + *(int *)(v17 + 64);
            *(void *)a1 = v15;
            *(unsigned char *)(a1 + 8) = 0;
            uint64_t v50 = sub_100003918(&qword_100208640);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v49, 1, 1, v50);
            swift_storeEnumTagMultiPayload();
            uint64_t v51 = sub_100003918(&qword_10020DDE0);
            unint64_t v52 = (void *)(a3 + *(int *)(v51 + 48));
            uint64_t v53 = a3 + *(int *)(v51 + 64);
            uint64_t v54 = sub_100003918(&qword_10020DCD0);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16))(a3, a2, v54);
            *unint64_t v52 = v46;
            v52[1] = v47;
            sub_10001E54C((uint64_t)v10, v53);
            goto LABEL_25;
          }
          goto LABEL_29;
        }
        goto LABEL_27;
      }
      uint64_t v19 = sub_100003918(&qword_100208640);
      uint64_t v20 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) != 1) {
        goto LABEL_30;
      }
      sub_10010DF4C(a1, type metadata accessor for IncomingUserDataReader.State);
      uint64_t v64 = v15;
      if ((uint64_t)v15[3] < 1)
      {
        swift_release();
        swift_storeEnumTagMultiPayload();
        uint64_t v58 = sub_100003918(&qword_10020DDE0);
        uint64_t v59 = *(int *)(v58 + 48);
        uint64_t v60 = a3 + *(int *)(v58 + 64);
        uint64_t v61 = sub_100003918(&qword_10020DCD0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 16))(a3, a2, v61);
        *(_OWORD *)(a3 + v59) = xmmword_1001CE850;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v60, 1, 1, v19);
        goto LABEL_25;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000F86C0();
        uint64_t v15 = v64;
      }
      uint64_t v21 = v15[4];
      uint64_t v22 = v21 + 1;
      if (__OFADD__(v21, 1))
      {
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        while (1)
        {
LABEL_30:
          sub_1001C1580();
          __break(1u);
        }
      }
      uint64_t v23 = &v15[2 * v21];
      uint64_t v24 = v23[5];
      v63[0] = v23[6];
      uint64_t v25 = v15[3];
      if (v22 >= v15[2]) {
        uint64_t v22 = 0;
      }
      _DWORD v15[4] = v22;
      if (__OFSUB__(v25, 1)) {
        goto LABEL_28;
      }
      v15[3] = v25 - 1;
      uint64_t v26 = a1 + *(int *)(v17 + 64);
      *(void *)a1 = v15;
      *(unsigned char *)(a1 + 8) = 1;
      uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
      v27(v26, 1, 1, v19);
      swift_storeEnumTagMultiPayload();
      uint64_t v28 = sub_100003918(&qword_10020DDE0);
      uint64_t v29 = (void *)(a3 + *(int *)(v28 + 48));
      uint64_t v30 = a3 + *(int *)(v28 + 64);
      uint64_t v31 = sub_100003918(&qword_10020DCD0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(a3, a2, v31);
      uint64_t v32 = v63[0];
      *uint64_t v29 = v24;
      v29[1] = v32;
      v27(v30, 1, 1, v19);
LABEL_25:
      uint64_t v62 = type metadata accessor for IncomingUserDataReader.NextAction(0);
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(a3, 0, 1, v62);
    case 2u:
      uint64_t v33 = *(void *)v14;
      uint64_t v34 = *(int *)(sub_100003918(&qword_10020DDD8) + 48);
      uint64_t v35 = sub_100003918(&qword_10020DCD0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(a3, a2, v35);
      *(void *)(a3 + v34) = v33;
      uint64_t v36 = type metadata accessor for IncomingUserDataReader.NextAction(0);
      goto LABEL_14;
    case 3u:
      uint64_t v37 = sub_100003918(&qword_10020DDE0);
      uint64_t v38 = *(int *)(v37 + 48);
      uint64_t v39 = a3 + *(int *)(v37 + 64);
      uint64_t v40 = sub_100003918(&qword_10020DCD0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16))(a3, a2, v40);
      *(_OWORD *)(a3 + v38) = xmmword_1001CE850;
      uint64_t v41 = sub_100003918(&qword_100208640);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v39, 1, 1, v41);
      uint64_t v36 = type metadata accessor for IncomingUserDataReader.NextAction(0);
LABEL_14:
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(a3, 0, 1, v36);
    default:
      goto LABEL_30;
  }
}

uint64_t sub_10010C488()
{
  sub_100010360(v0 + OBJC_IVAR____TtC20privatecloudcomputed22IncomingUserDataReader_stateLock, &qword_10020DCC0);
  uint64_t v1 = v0 + OBJC_IVAR____TtC20privatecloudcomputed22IncomingUserDataReader_logger;
  uint64_t v2 = sub_1001C0340();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_10010C554()
{
  return type metadata accessor for IncomingUserDataReader(0);
}

uint64_t type metadata accessor for IncomingUserDataReader(uint64_t a1)
{
  return sub_10001C958(a1, (uint64_t *)&unk_10020DC20);
}

void sub_10010C57C()
{
  sub_10010C650();
  if (v0 <= 0x3F)
  {
    sub_1001C0340();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_10010C650()
{
  if (!qword_10020DC30)
  {
    type metadata accessor for IncomingUserDataReader.State(255);
    unint64_t v0 = sub_1001BF4C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10020DC30);
    }
  }
}

uint64_t type metadata accessor for IncomingUserDataReader.State(uint64_t a1)
{
  return sub_10001C958(a1, (uint64_t *)&unk_10020DD50);
}

char *sub_10010C6C8()
{
  if (&swift_runtimeSupportsNoncopyableTypes) {
    return (char *)sub_100003918(&qword_10020DCC0);
  }
  else {
    return (char *)&type metadata for () + 8;
  }
}

char *sub_10010C6F0(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v14 = *(void *)a2;
      swift_errorRetain();
      *(void *)a1 = v14;
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      swift_retain();
      uint64_t v15 = *(int *)(sub_100003918(&qword_10020DCD8) + 64);
      char v16 = &a1[v15];
      uint64_t v17 = &a2[v15];
      uint64_t v18 = sub_100003918(&qword_100208640);
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        uint64_t v20 = sub_100003918(&qword_100208648);
        memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      swift_retain();
      uint64_t v8 = *(int *)(sub_100003918(&qword_10020DCC8) + 48);
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      uint64_t v11 = sub_100003918(&qword_10020DCD0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_10010C95C(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    return swift_errorRelease();
  }
  else
  {
    if (result == 1)
    {
      swift_release();
      uint64_t v8 = a1 + *(int *)(sub_100003918(&qword_10020DCD8) + 64);
      uint64_t v9 = sub_100003918(&qword_100208640);
      uint64_t v10 = *(void *)(v9 - 8);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
      if (result) {
        return result;
      }
      int v5 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
      uint64_t v7 = v8;
      uint64_t v6 = v9;
    }
    else
    {
      if (result) {
        return result;
      }
      swift_release();
      uint64_t v3 = a1 + *(int *)(sub_100003918(&qword_10020DCC8) + 48);
      uint64_t v4 = sub_100003918(&qword_10020DCD0);
      int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
      uint64_t v6 = v4;
      uint64_t v7 = v3;
    }
    return v5(v7, v6);
  }
}

char *sub_10010CAC4(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v11 = *(void *)a2;
      swift_errorRetain();
      *(void *)a1 = v11;
      goto LABEL_10;
    case 1:
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      swift_retain();
      uint64_t v12 = *(int *)(sub_100003918(&qword_10020DCD8) + 64);
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      uint64_t v15 = sub_100003918(&qword_100208640);
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        uint64_t v17 = sub_100003918(&qword_100208648);
        memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      goto LABEL_10;
    case 0:
      *(void *)a1 = *(void *)a2;
      swift_retain();
      uint64_t v7 = *(int *)(sub_100003918(&qword_10020DCC8) + 48);
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = sub_100003918(&qword_10020DCD0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *sub_10010CCE4(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10010DF4C((uint64_t)a1, type metadata accessor for IncomingUserDataReader.State);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        uint64_t v11 = *(void *)a2;
        swift_errorRetain();
        *(void *)a1 = v11;
        goto LABEL_11;
      case 1:
        *(void *)a1 = *(void *)a2;
        a1[8] = a2[8];
        swift_retain();
        uint64_t v12 = *(int *)(sub_100003918(&qword_10020DCD8) + 64);
        uint64_t v13 = &a1[v12];
        uint64_t v14 = &a2[v12];
        uint64_t v15 = sub_100003918(&qword_100208640);
        uint64_t v16 = *(void *)(v15 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
        {
          uint64_t v17 = sub_100003918(&qword_100208648);
          memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
        }
        goto LABEL_11;
      case 0:
        *(void *)a1 = *(void *)a2;
        swift_retain();
        uint64_t v7 = *(int *)(sub_100003918(&qword_10020DCC8) + 48);
        uint64_t v8 = &a1[v7];
        uint64_t v9 = &a2[v7];
        uint64_t v10 = sub_100003918(&qword_10020DCD0);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
LABEL_11:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_10010CF28(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *(void *)a1 = *(void *)a2;
    a1[8] = a2[8];
    uint64_t v11 = *(int *)(sub_100003918(&qword_10020DCD8) + 64);
    uint64_t v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    uint64_t v14 = sub_100003918(&qword_100208640);
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = sub_100003918(&qword_100208648);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    goto LABEL_8;
  }
  if (!EnumCaseMultiPayload)
  {
    *(void *)a1 = *(void *)a2;
    uint64_t v7 = *(int *)(sub_100003918(&qword_10020DCC8) + 48);
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    uint64_t v10 = sub_100003918(&qword_10020DCD0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
LABEL_8:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *sub_10010D118(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10010DF4C((uint64_t)a1, type metadata accessor for IncomingUserDataReader.State);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      uint64_t v11 = *(int *)(sub_100003918(&qword_10020DCD8) + 64);
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      uint64_t v14 = sub_100003918(&qword_100208640);
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        uint64_t v16 = sub_100003918(&qword_100208648);
        memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      goto LABEL_9;
    }
    if (!EnumCaseMultiPayload)
    {
      *(void *)a1 = *(void *)a2;
      uint64_t v7 = *(int *)(sub_100003918(&qword_10020DCC8) + 48);
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = sub_100003918(&qword_10020DCD0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void sub_10010D32C()
{
  sub_10010D434();
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v4 = &v3;
    sub_10001DCD4();
    if (v1 <= 0x3F)
    {
      swift_getTupleTypeLayout3();
      int v5 = &v2;
      uint64_t v6 = &unk_1001D3BC0;
      swift_initEnumMetadataMultiPayload();
    }
  }
}

void sub_10010D434()
{
  if (!qword_10020DD60)
  {
    sub_1000166C8((uint64_t *)&unk_10020DD68);
    sub_1000166C8(&qword_100208C98);
    unint64_t v0 = sub_1001C0ED0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10020DD60);
    }
  }
}

uint64_t sub_10010D4AC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v2;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1000074CC;
  v7[7] = a2;
  v7[8] = v6;
  v7[6] = a1;
  v7[9] = *v6;
  return _swift_task_switch(sub_100109508, 0, 0);
}

uint64_t sub_10010D594(uint64_t a1)
{
  return sub_10010A7A0(a1);
}

uint64_t sub_10010D5B8(uint64_t (*a1)(void))
{
  uint64_t result = a1();
  if (result) {
    return _swift_stdlib_bridgeErrorToNSError();
  }
  return result;
}

uint64_t sub_10010D5E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IncomingUserDataReader.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10010D64C(uint64_t a1)
{
  return sub_100109C48(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(char **)(v1 + 40));
}

uint64_t type metadata accessor for IncomingUserDataReader.ForwardDataAction(uint64_t a1)
{
  return sub_10001C958(a1, qword_10020DF00);
}

uint64_t sub_10010D678(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IncomingUserDataReader.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10010D6DC(uint64_t a1)
{
  return sub_10010B78C(a1, v1);
}

uint64_t type metadata accessor for IncomingUserDataReader.NextAction(uint64_t a1)
{
  return sub_10001C958(a1, qword_10020DE58);
}

uint64_t *sub_10010D704(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = sub_100003918(&qword_10020DCD0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = *(int *)(sub_100003918(&qword_10020DDD8) + 48);
      uint64_t v9 = *(uint64_t *)((char *)a2 + v8);
      swift_errorRetain();
      *(uint64_t *)((char *)a1 + v8) = v9;
    }
    else
    {
      uint64_t v11 = sub_100003918(&qword_10020DDE0);
      uint64_t v12 = *(int *)(v11 + 48);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      unint64_t v15 = *((void *)v14 + 1);
      if (v15 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      }
      else
      {
        uint64_t v16 = *(void *)v14;
        sub_100007B14(*(void *)v14, *((void *)v14 + 1));
        *(void *)uint64_t v13 = v16;
        *((void *)v13 + 1) = v15;
      }
      uint64_t v17 = *(int *)(v11 + 64);
      uint64_t v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      uint64_t v20 = sub_100003918(&qword_100208640);
      uint64_t v21 = *(void *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        uint64_t v22 = sub_100003918(&qword_100208648);
        memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10010D96C(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v3 = sub_100003918(&qword_10020DCD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  if (EnumCaseMultiPayload == 1)
  {
    sub_100003918(&qword_10020DDD8);
    return swift_errorRelease();
  }
  else
  {
    uint64_t v5 = sub_100003918(&qword_10020DDE0);
    uint64_t v6 = (uint64_t *)(a1 + *(int *)(v5 + 48));
    unint64_t v7 = v6[1];
    if (v7 >> 60 != 15) {
      sub_10000792C(*v6, v7);
    }
    uint64_t v8 = a1 + *(int *)(v5 + 64);
    uint64_t v9 = sub_100003918(&qword_100208640);
    uint64_t v11 = *(void *)(v9 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v8, 1, v9);
    if (!result)
    {
      uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
      return v10(v8, v9);
    }
  }
  return result;
}

uint64_t sub_10010DAF8(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = sub_100003918(&qword_10020DCD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v6 = *(int *)(sub_100003918(&qword_10020DDD8) + 48);
    uint64_t v7 = *(void *)(a2 + v6);
    swift_errorRetain();
    *(void *)(a1 + v6) = v7;
  }
  else
  {
    uint64_t v8 = sub_100003918(&qword_10020DDE0);
    uint64_t v9 = *(int *)(v8 + 48);
    uint64_t v10 = a1 + v9;
    uint64_t v11 = (uint64_t *)(a2 + v9);
    unint64_t v12 = v11[1];
    if (v12 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
    }
    else
    {
      uint64_t v13 = *v11;
      sub_100007B14(*v11, v11[1]);
      *(void *)uint64_t v10 = v13;
      *(void *)(v10 + 8) = v12;
    }
    uint64_t v14 = *(int *)(v8 + 64);
    unint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (const void *)(a2 + v14);
    uint64_t v17 = sub_100003918(&qword_100208640);
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      uint64_t v19 = sub_100003918(&qword_100208648);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10010DD10(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_10010DF4C(a1, type metadata accessor for IncomingUserDataReader.NextAction);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = sub_100003918(&qword_10020DCD0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v6 = *(int *)(sub_100003918(&qword_10020DDD8) + 48);
      uint64_t v7 = *(void *)(a2 + v6);
      swift_errorRetain();
      *(void *)(a1 + v6) = v7;
    }
    else
    {
      uint64_t v8 = sub_100003918(&qword_10020DDE0);
      uint64_t v9 = *(int *)(v8 + 48);
      uint64_t v10 = a1 + v9;
      uint64_t v11 = (uint64_t *)(a2 + v9);
      unint64_t v12 = v11[1];
      if (v12 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
      }
      else
      {
        uint64_t v13 = *v11;
        sub_100007B14(*v11, v11[1]);
        *(void *)uint64_t v10 = v13;
        *(void *)(v10 + 8) = v12;
      }
      uint64_t v14 = *(int *)(v8 + 64);
      unint64_t v15 = (void *)(a1 + v14);
      uint64_t v16 = (const void *)(a2 + v14);
      uint64_t v17 = sub_100003918(&qword_100208640);
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        uint64_t v19 = sub_100003918(&qword_100208648);
        memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v15, v16, v17);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10010DF4C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10010DFAC(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = sub_100003918(&qword_10020DCD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v6 = sub_100003918(&qword_10020DDD8);
    *(void *)(a1 + *(int *)(v6 + 48)) = *(void *)(a2 + *(int *)(v6 + 48));
  }
  else
  {
    uint64_t v7 = sub_100003918(&qword_10020DDE0);
    *(_OWORD *)(a1 + *(int *)(v7 + 48)) = *(_OWORD *)(a2 + *(int *)(v7 + 48));
    uint64_t v8 = *(int *)(v7 + 64);
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (const void *)(a2 + v8);
    uint64_t v11 = sub_100003918(&qword_100208640);
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = sub_100003918(&qword_100208648);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10010E16C(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_10010DF4C(a1, type metadata accessor for IncomingUserDataReader.NextAction);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = sub_100003918(&qword_10020DCD0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v6 = sub_100003918(&qword_10020DDD8);
      *(void *)(a1 + *(int *)(v6 + 48)) = *(void *)(a2 + *(int *)(v6 + 48));
    }
    else
    {
      uint64_t v7 = sub_100003918(&qword_10020DDE0);
      *(_OWORD *)(a1 + *(int *)(v7 + 48)) = *(_OWORD *)(a2 + *(int *)(v7 + 48));
      uint64_t v8 = *(int *)(v7 + 64);
      uint64_t v9 = (void *)(a1 + v8);
      uint64_t v10 = (const void *)(a2 + v8);
      uint64_t v11 = sub_100003918(&qword_100208640);
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        uint64_t v13 = sub_100003918(&qword_100208648);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_10010E350()
{
  sub_10010D434();
  if (v0 <= 0x3F)
  {
    sub_10001DCD4();
    if (v1 <= 0x3F)
    {
      swift_getTupleTypeLayout3();
      uint64_t v4 = &v3;
      swift_getTupleTypeLayout2();
      uint64_t v5 = &v2;
      swift_initEnumMetadataMultiPayload();
    }
  }
}

uint64_t *sub_10010E450(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v11 = sub_100003918(&qword_100208640);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = sub_100003918(&qword_100208640);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = *(int *)(sub_100003918(&qword_10020DDB8) + 48);
      uint64_t v9 = *(uint64_t *)((char *)a2 + v8);
      swift_errorRetain();
      *(uint64_t *)((char *)a1 + v8) = v9;
    }
    else
    {
      uint64_t v12 = sub_100003918(&qword_10020DCD0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
      uint64_t v13 = sub_100003918(&qword_10020DDC0);
      uint64_t v14 = *(int *)(v13 + 48);
      unint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      unint64_t v17 = *((void *)v16 + 1);
      if (v17 >> 60 == 15)
      {
        *(_OWORD *)unint64_t v15 = *(_OWORD *)v16;
      }
      else
      {
        uint64_t v18 = *(void *)v16;
        sub_100007B14(*(void *)v16, *((void *)v16 + 1));
        *(void *)unint64_t v15 = v18;
        *((void *)v15 + 1) = v17;
      }
      uint64_t v19 = *(int *)(v13 + 64);
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      uint64_t v22 = sub_100003918(&qword_100208640);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10010E6A8(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
LABEL_7:
    uint64_t v7 = sub_100003918(&qword_100208640);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(a1, v7);
  }
  if (result != 1)
  {
    if (result) {
      return result;
    }
    uint64_t v3 = sub_100003918(&qword_10020DCD0);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    uint64_t v4 = sub_100003918(&qword_10020DDC0);
    int v5 = (uint64_t *)(a1 + *(int *)(v4 + 48));
    unint64_t v6 = v5[1];
    if (v6 >> 60 != 15) {
      sub_10000792C(*v5, v6);
    }
    a1 += *(int *)(v4 + 64);
    goto LABEL_7;
  }
  uint64_t v9 = sub_100003918(&qword_100208640);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
  sub_100003918(&qword_10020DDB8);
  return swift_errorRelease();
}

uint64_t sub_10010E814(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = sub_100003918(&qword_100208640);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = sub_100003918(&qword_100208640);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    uint64_t v6 = *(int *)(sub_100003918(&qword_10020DDB8) + 48);
    uint64_t v7 = *(void *)(a2 + v6);
    swift_errorRetain();
    *(void *)(a1 + v6) = v7;
  }
  else
  {
    uint64_t v9 = sub_100003918(&qword_10020DCD0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    uint64_t v10 = sub_100003918(&qword_10020DDC0);
    uint64_t v11 = *(int *)(v10 + 48);
    uint64_t v12 = a1 + v11;
    uint64_t v13 = (uint64_t *)(a2 + v11);
    unint64_t v14 = v13[1];
    if (v14 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    }
    else
    {
      uint64_t v15 = *v13;
      sub_100007B14(*v13, v13[1]);
      *(void *)uint64_t v12 = v15;
      *(void *)(v12 + 8) = v14;
    }
    uint64_t v16 = *(int *)(v10 + 64);
    uint64_t v17 = a1 + v16;
    uint64_t v18 = a2 + v16;
    uint64_t v19 = sub_100003918(&qword_100208640);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10010EA1C(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_10010DF4C(a1, type metadata accessor for IncomingUserDataReader.ForwardDataAction);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v8 = sub_100003918(&qword_100208640);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = sub_100003918(&qword_100208640);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
      uint64_t v6 = *(int *)(sub_100003918(&qword_10020DDB8) + 48);
      uint64_t v7 = *(void *)(a2 + v6);
      swift_errorRetain();
      *(void *)(a1 + v6) = v7;
    }
    else
    {
      uint64_t v9 = sub_100003918(&qword_10020DCD0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      uint64_t v10 = sub_100003918(&qword_10020DDC0);
      uint64_t v11 = *(int *)(v10 + 48);
      uint64_t v12 = a1 + v11;
      uint64_t v13 = (uint64_t *)(a2 + v11);
      unint64_t v14 = v13[1];
      if (v14 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      }
      else
      {
        uint64_t v15 = *v13;
        sub_100007B14(*v13, v13[1]);
        *(void *)uint64_t v12 = v15;
        *(void *)(v12 + 8) = v14;
      }
      uint64_t v16 = *(int *)(v10 + 64);
      uint64_t v17 = a1 + v16;
      uint64_t v18 = a2 + v16;
      uint64_t v19 = sub_100003918(&qword_100208640);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10010EC48(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v7 = sub_100003918(&qword_100208640);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = sub_100003918(&qword_100208640);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    uint64_t v6 = sub_100003918(&qword_10020DDB8);
    *(void *)(a1 + *(int *)(v6 + 48)) = *(void *)(a2 + *(int *)(v6 + 48));
  }
  else
  {
    uint64_t v8 = sub_100003918(&qword_10020DCD0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    uint64_t v9 = sub_100003918(&qword_10020DDC0);
    *(_OWORD *)(a1 + *(int *)(v9 + 48)) = *(_OWORD *)(a2 + *(int *)(v9 + 48));
    uint64_t v10 = *(int *)(v9 + 64);
    uint64_t v11 = a1 + v10;
    uint64_t v12 = a2 + v10;
    uint64_t v13 = sub_100003918(&qword_100208640);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10010EE04(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_10010DF4C(a1, type metadata accessor for IncomingUserDataReader.ForwardDataAction);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v7 = sub_100003918(&qword_100208640);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = sub_100003918(&qword_100208640);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      uint64_t v6 = sub_100003918(&qword_10020DDB8);
      *(void *)(a1 + *(int *)(v6 + 48)) = *(void *)(a2 + *(int *)(v6 + 48));
    }
    else
    {
      uint64_t v8 = sub_100003918(&qword_10020DCD0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      uint64_t v9 = sub_100003918(&qword_10020DDC0);
      *(_OWORD *)(a1 + *(int *)(v9 + 48)) = *(_OWORD *)(a2 + *(int *)(v9 + 48));
      uint64_t v10 = *(int *)(v9 + 64);
      uint64_t v11 = a1 + v10;
      uint64_t v12 = a2 + v10;
      uint64_t v13 = sub_100003918(&qword_100208640);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_10010EFE4()
{
  sub_10010D434();
  if (v0 <= 0x3F)
  {
    sub_1000F9D70();
    if (v2 <= 0x3F)
    {
      uint64_t v3 = *(void *)(v1 - 8) + 64;
      swift_getTupleTypeLayout3();
      uint64_t v6 = &v5;
      swift_getTupleTypeLayout2();
      uint64_t v7 = &v4;
      uint64_t v8 = v3;
      swift_initEnumMetadataMultiPayload();
    }
  }
}

uint64_t sub_10010F0E4()
{
  uint64_t result = sub_1001C0340();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_10010F1D8(Swift::String a1, uint64_t a2, unint64_t a3)
{
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  a1._uint64_t countAndFlagsBits = 0xD000000000000019;
  char v4 = (void *)0x80000001001C3670;
  object = a1._object;
  switch(a3 >> 61)
  {
    case 1uLL:
      char v4 = (void *)0x80000001001C3650;
      a1._uint64_t countAndFlagsBits = 0xD000000000000010;
      break;
    case 2uLL:
      sub_1001C1420(17);
      swift_bridgeObjectRelease();
      uint64_t v9 = 0x6E69766965636552;
      unint64_t v10 = 0xEF206D6F72662067;
      v11._uint64_t countAndFlagsBits = countAndFlagsBits;
      v11._object = object;
      sub_1001C0D00(v11);
      goto LABEL_6;
    case 3uLL:
      char v4 = (void *)0xE800000000000000;
      a1._uint64_t countAndFlagsBits = 0x64656873696E6946;
      break;
    case 4uLL:
      uint64_t v9 = 0;
      unint64_t v10 = 0xE000000000000000;
      swift_errorRetain();
      sub_1001C1420(18);
      v12._uint64_t countAndFlagsBits = 0x282064656C696146;
      v12._object = (void *)0xEF203A726F727265;
      sub_1001C0D00(v12);
      sub_100003918(&qword_100208C98);
      sub_1001C1510();
      v13._uint64_t countAndFlagsBits = 41;
      v13._object = (void *)0xE100000000000000;
      sub_1001C0D00(v13);
      sub_10015D388(countAndFlagsBits, (uint64_t)object, a2, a3);
LABEL_6:
      a1._uint64_t countAndFlagsBits = v9;
      char v4 = (void *)v10;
      break;
    case 5uLL:
      char v4 = (void *)0xEB0000000064657ALL;
      a1._uint64_t countAndFlagsBits = 0x696C616974696E49;
      break;
    default:
      break;
  }
  a1._object = v4;
  sub_1001C0D00(a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10010F3E4()
{
  v1[4] = v0;
  uint64_t v2 = sub_1001BF8E0();
  v1[5] = v2;
  void v1[6] = *(void *)(v2 - 8);
  v1[7] = swift_task_alloc();
  v1[8] = type metadata accessor for PowerAssertion();
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  return _swift_task_switch(sub_10010F4E4, 0, 0);
}

uint64_t sub_10010F4E4()
{
  uint64_t v27 = v0;
  unint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C11E0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Running TrustedRequest", v3, 2u);
    swift_slowDealloc();
  }

  swift_retain_n();
  uint64_t v4 = sub_1001C0330();
  os_log_type_t v5 = sub_1001C11E0();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = v0[4];
  if (v6)
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315394;
    uint64_t v9 = (uint64_t *)(v7 + *(void *)(*(void *)v7 + 368));
    uint64_t v11 = *v9;
    unint64_t v10 = v9[1];
    swift_bridgeObjectRetain();
    v0[2] = sub_1000DF238(v11, v10, &v25);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release();
    *(_WORD *)(v8 + 12) = 2080;
    swift_release();
    uint64_t v12 = sub_1000DA2AC();
    v0[3] = sub_1000DF238(v12, v13, &v25);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s Configuration: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v15 = v0[9];
  uint64_t v14 = v0[10];
  uint64_t v16 = v0[7];
  uint64_t v17 = v0[8];
  uint64_t v18 = v0[5];
  uint64_t v19 = v0[6];
  (*(void (**)(uint64_t, void, uint64_t))(v19 + 104))(v16, enum case for TC2LogCategory.daemon(_:), v18);
  sub_1001BFDD0();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v16, v18);
  *(_DWORD *)(v15 + *(int *)(v17 + 24)) = 0;
  uint64_t v25 = 0xD00000000000001FLL;
  unint64_t v26 = 0x80000001001C65F0;
  v29._object = (void *)0x80000001001C65D0;
  v29._uint64_t countAndFlagsBits = 0xD000000000000011;
  sub_1001C0D00(v29);
  unint64_t v20 = v26;
  uint64_t v21 = (void *)(v15 + *(int *)(v17 + 20));
  *uint64_t v21 = v25;
  v21[1] = v20;
  sub_1001627E8(v15, v14, (uint64_t (*)(void))type metadata accessor for PowerAssertion);
  sub_100190A6C();
  uint64_t v22 = (void *)swift_task_alloc();
  v0[11] = v22;
  *uint64_t v22 = v0;
  v22[1] = sub_10010F89C;
  uint64_t v23 = v0[4];
  return sub_10010FC08((uint64_t)v22, v23);
}

uint64_t sub_10010F89C()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_10010FADC;
  }
  else {
    os_log_type_t v2 = sub_10010F9B0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10010F9B0()
{
  uint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C1200();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "releasePowerAssertion", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[8];

  uint64_t v6 = *(int *)(v5 + 24);
  IOPMAssertionID v7 = *(_DWORD *)(v4 + v6);
  if (v7)
  {
    IOPMAssertionRelease(v7);
    *(_DWORD *)(v4 + v6) = 0;
  }
  sub_10016290C(v0[10], (uint64_t (*)(void))type metadata accessor for PowerAssertion);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_10010FADC()
{
  uint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C1200();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "releasePowerAssertion", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[8];

  uint64_t v6 = *(int *)(v5 + 24);
  IOPMAssertionID v7 = *(_DWORD *)(v4 + v6);
  if (v7)
  {
    IOPMAssertionRelease(v7);
    *(_DWORD *)(v4 + v6) = 0;
  }
  sub_10016290C(v0[10], (uint64_t (*)(void))type metadata accessor for PowerAssertion);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_10010FC08(uint64_t a1, uint64_t a2)
{
  v2[5] = a2;
  uint64_t v3 = sub_1001BF810();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  sub_100003918(&qword_10020E128);
  v2[10] = swift_task_alloc();
  uint64_t v4 = (void *)swift_task_alloc();
  v2[11] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_10010FD38;
  return sub_100110880();
}

uint64_t sub_10010FD38()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1001100CC;
  }
  else {
    os_log_type_t v2 = sub_10010FE4C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10010FE4C()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[7];
  sub_10010A7A0(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v1, 1, 1, v2);
  IOPMAssertionID v7 = (uint64_t (*)(uint64_t))((char *)&dword_10020E138 + dword_10020E138);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[13] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10010FF68;
  uint64_t v5 = v0[10];
  return v7(v5);
}

uint64_t sub_10010FF68()
{
  uint64_t v1 = *(void *)(*v0 + 80);
  uint64_t v4 = *v0;
  swift_task_dealloc();
  sub_100010360(v1, &qword_10020E128);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_1001100CC()
{
  uint64_t v43 = v0;
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 56);
  static TrustedCloudComputeError.wrapAny(error:)(*(void **)(v0 + 96), v1);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  *(void *)(v0 + 112) = v5;
  *(void *)(v0 + 120) = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  uint64_t v40 = v5;
  v5(v2, v1, v3);
  swift_errorRetain();
  swift_retain();
  swift_errorRetain();
  swift_retain();
  uint64_t v6 = sub_1001C0330();
  os_log_type_t v7 = sub_1001C11F0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = *(void *)(v0 + 64);
    uint64_t v34 = *(void *)(v0 + 56);
    uint64_t v9 = *(void *)(v0 + 40);
    uint64_t v10 = *(void *)(v0 + 48);
    os_log_type_t type = v7;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v33 = (void *)swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315650;
    uint64_t v12 = (uint64_t *)(v9 + *(void *)(*(void *)v9 + 368));
    log = v6;
    uint64_t v14 = *v12;
    unint64_t v13 = v12[1];
    swift_bridgeObjectRetain();
    *(void *)(v0 + 16) = sub_1000DF238(v14, v13, &v42);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v11 + 12) = 2112;
    sub_1001627A0(&qword_10020D938, (void (*)(uint64_t))&type metadata accessor for TrustedCloudComputeError);
    swift_allocError();
    v40(v15, v8, v10);
    uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 24) = v16;
    sub_1001C1310();
    void *v33 = v16;
    uint64_t v17 = v34 + 8;
    uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
    v35(v8, v10);
    *(_WORD *)(v11 + 22) = 2112;
    swift_errorRetain();
    uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 32) = v18;
    sub_1001C1310();
    v33[1] = v18;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, type, "%s sendRopesRequest trustedCloudComputeError: %@ from raw error: %@", (uint8_t *)v11, 0x20u);
    sub_100003918(&qword_100207DA8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v19 = v35;
  }
  else
  {
    uint64_t v21 = *(void *)(v0 + 56);
    uint64_t v20 = *(void *)(v0 + 64);
    uint64_t v22 = *(void *)(v0 + 48);

    swift_release_n();
    uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
    uint64_t v17 = v21 + 8;
    uint64_t v19 = v23;
    v23(v20, v22);
    swift_errorRelease();
    swift_errorRelease();
  }
  *(void *)(v0 + 128) = v17;
  *(void *)(v0 + 136) = v19;
  uint64_t v24 = *(void *)(v0 + 72);
  uint64_t v25 = *(void *)(v0 + 48);
  *(void *)typea = *(void *)(v0 + 80);
  uint64_t v39 = *(void *)(v0 + 56);
  *(void *)(v0 + 144) = sub_1001627A0(&qword_10020D938, (void (*)(uint64_t))&type metadata accessor for TrustedCloudComputeError);
  uint64_t v26 = swift_allocError();
  v40(v27, v24, v25);
  sub_10010A7A0(v26);
  swift_errorRelease();
  uint64_t v28 = swift_allocError();
  v40(v29, v24, v25);
  sub_1000F7C54(v28);
  swift_errorRelease();
  v40(*(void *)typea, v24, v25);
  (*(void (**)(os_log_type_t *, void, uint64_t, uint64_t))(v39 + 56))(*(os_log_type_t **)typea, 0, 1, v25);
  uint64_t v41 = (uint64_t (*)(uint64_t))((char *)&dword_10020E138 + dword_10020E138);
  uint64_t v30 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v30;
  *uint64_t v30 = v0;
  v30[1] = sub_100110664;
  uint64_t v31 = *(void *)(v0 + 80);
  return v41(v31);
}

uint64_t sub_100110664()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  swift_task_dealloc();
  sub_100010360(v1, &qword_10020E128);
  return _swift_task_switch(sub_100110784, 0, 0);
}

uint64_t sub_100110784()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[17];
  uint64_t v2 = (void (*)(uint64_t, uint64_t, uint64_t))v0[14];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[6];
  swift_allocError();
  v2(v5, v3, v4);
  swift_willThrow();
  swift_errorRelease();
  v1(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_100110880()
{
  v1[2] = v0;
  uint64_t v2 = sub_1001C0420();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  void v1[6] = swift_task_alloc();
  uint64_t v3 = (void *)swift_task_alloc();
  v1[7] = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10011097C;
  return sub_100111848();
}

uint64_t sub_10011097C(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 64) = a1;
    return _swift_task_switch(sub_100110AD0, 0, 0);
  }
}

uint64_t sub_100110AD0()
{
  uint64_t v19 = v0[8];
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[2];
  uint64_t v6 = v5 + qword_10021F8E0;
  char v7 = *(unsigned char *)(v5 + qword_10021F8E0 + 64);
  char v8 = *(unsigned char *)(v5 + qword_10021F8E0 + 88);
  uint64_t v9 = type metadata accessor for TrustedRequestConfiguration();
  v0[9] = sub_1000D6310(v7, v8, 1, *(void *)(v6 + *(int *)(v9 + 80)), *(void *)(v6 + *(int *)(v9 + 80) + 8));
  uint64_t v10 = v6 + *(int *)(v9 + 56);
  uint64_t v11 = sub_1001BF0B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v2, v10, v11);
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v2, enum case for NWEndpoint.url(_:), v3);
  sub_1000376D4(0, (unint64_t *)&qword_10020C380);
  uint64_t v12 = sub_1001C1240();
  v0[10] = v12;
  uint64_t v13 = v5 + qword_10021F8D8;
  uint64_t v14 = swift_task_alloc();
  v0[11] = v14;
  *(void *)(v14 + 16) = v5;
  *(void *)(v14 + 24) = v19;
  uint64_t v15 = swift_task_alloc();
  v0[12] = v15;
  *(void *)(v15 + 16) = &unk_10020E178;
  *(void *)(v15 + 24) = v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  sub_1001C0650();
  swift_allocObject();
  swift_retain();
  uint64_t v16 = sub_1001C05F0();
  v0[13] = v16;
  uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10020C050
                                                                                     + dword_10020C050);
  uint64_t v17 = (void *)swift_task_alloc();
  v0[14] = v17;
  *uint64_t v17 = v0;
  v17[1] = sub_100110D40;
  return v20((uint64_t)v20, v16, v12, v13, (uint64_t)&unk_10020C048, v15);
}

uint64_t sub_100110D40()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100110F24;
  }
  else {
    uint64_t v2 = sub_100110E54;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100110E54()
{
  uint64_t v1 = (void *)v0[10];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  swift_release();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100110F24()
{
  uint64_t v1 = (void *)v0[10];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  swift_release();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100110FF4(uint64_t a1)
{
  v2[9] = a1;
  v2[10] = v1;
  v2[11] = type metadata accessor for ThimbledEvent();
  v2[12] = swift_task_alloc();
  uint64_t v3 = sub_100003918(&qword_100208A00);
  v2[13] = v3;
  v2[14] = *(void *)(v3 - 8);
  v2[15] = swift_task_alloc();
  uint64_t v4 = sub_1001C02E0();
  v2[16] = v4;
  v2[17] = *(void *)(v4 - 8);
  v2[18] = swift_task_alloc();
  uint64_t v5 = sub_1001C02A0();
  v2[19] = v5;
  v2[20] = *(void *)(v5 - 8);
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  uint64_t v6 = sub_1001C14C0();
  v2[23] = v6;
  v2[24] = *(void *)(v6 - 8);
  v2[25] = swift_task_alloc();
  return _swift_task_switch(sub_10011120C, 0, 0);
}

uint64_t sub_10011120C()
{
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v5 = *(void *)(v0 + 80);
  sub_1001C14E0();
  sub_1001627A0(&qword_100208C80, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  sub_1001C18D0();
  sub_1001627A0(&qword_100208C88, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
  sub_1001C1500();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v6 = *(void *)(v0 + 56);
  uint64_t v7 = *(void *)(v0 + 64);
  uint64_t v8 = (void *)swift_task_alloc();
  v8[2] = v4;
  v8[3] = v6;
  v8[4] = v7;
  uint64_t v9 = (os_unfair_lock_s *)(v5 + *(void *)(*(void *)v5 + 128));
  os_unfair_lock_lock(v9);
  uint64_t v10 = sub_100003918(&qword_100208C90);
  sub_10015DAEC((uint64_t)v9 + *(int *)(v10 + 28));
  os_unfair_lock_unlock(v9);
  uint64_t v11 = (uint64_t *)(v0 + 176);
  swift_task_dealloc();
  uint64_t v12 = sub_1001C02C0();
  sub_1001C02F0();
  os_signpost_type_t v13 = sub_1001C1280();
  if (sub_1001C12D0())
  {
    os_signpost_type_t v33 = v13;
    uint64_t v15 = *(void *)(v0 + 136);
    uint64_t v14 = *(void *)(v0 + 144);
    uint64_t v16 = *(void *)(v0 + 128);
    swift_retain();
    sub_1001C0320();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v15 + 88))(v14, v16) == enum case for OSSignpostError.doubleEnd(_:))
    {
      uint64_t v17 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 136) + 8))(*(void *)(v0 + 144), *(void *)(v0 + 128));
      uint64_t v17 = "";
    }
    uint64_t v20 = *(void *)(v0 + 176);
    uint64_t v11 = (uint64_t *)(v0 + 168);
    uint64_t v22 = *(void *)(v0 + 152);
    uint64_t v21 = *(void *)(v0 + 160);
    (*(void (**)(void, uint64_t, uint64_t))(v21 + 16))(*(void *)(v0 + 168), v20, v22);
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v23 = 0;
    os_signpost_id_t v24 = sub_1001C0290();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v12, v33, v24, "FullTrustedRequest", v17, v23, 2u);
    swift_slowDealloc();

    uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
    v19(v20, v22);
  }
  else
  {
    uint64_t v18 = *(void *)(v0 + 160);

    uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  }
  uint64_t v25 = *v11;
  uint64_t v26 = *(void *)(v0 + 112);
  uint64_t v27 = *(void *)(v0 + 120);
  uint64_t v28 = *(uint64_t **)(v0 + 96);
  uint64_t v34 = *(void *)(v0 + 104);
  v19(v25, *(void *)(v0 + 152));
  sub_10013B088((void *)(v0 + 16));
  void v28[3] = (uint64_t)&type metadata for TC2TrustedRequestMetric;
  v28[4] = sub_10015DB10();
  uint64_t v29 = swift_allocObject();
  *uint64_t v28 = v29;
  long long v30 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v29 + 16) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v29 + 32) = v30;
  *(void *)(v29 + 48) = *(void *)(v0 + 48);
  swift_storeEnumTagMultiPayload();
  sub_100003918(qword_100208000);
  sub_1001C0FE0();
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v34);
  uint64_t v31 = (void *)swift_task_alloc();
  *(void *)(v0 + 208) = v31;
  void *v31 = v0;
  v31[1] = sub_10011169C;
  return sub_10013E234();
}

uint64_t sub_10011169C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100111848()
{
  v1[17] = v0;
  uint64_t v2 = sub_100003918(&qword_10020C350);
  v1[18] = v2;
  v1[19] = *(void *)(v2 - 8);
  v1[20] = swift_task_alloc();
  sub_100003918(qword_100208CD0);
  v1[21] = swift_task_alloc();
  uint64_t v3 = sub_1001BF310();
  v1[22] = v3;
  v1[23] = *(void *)(v3 - 8);
  v1[24] = swift_task_alloc();
  v1[25] = swift_task_alloc();
  uint64_t v4 = sub_1001BF2C0();
  v1[26] = v4;
  v1[27] = *(void *)(v4 - 8);
  v1[28] = swift_task_alloc();
  v1[29] = swift_task_alloc();
  sub_100003918(&qword_10020BF98);
  v1[30] = swift_task_alloc();
  uint64_t v5 = sub_1001BF7A0();
  v1[31] = v5;
  v1[32] = *(void *)(v5 - 8);
  v1[33] = swift_task_alloc();
  uint64_t v6 = sub_1001BF950();
  v1[34] = v6;
  v1[35] = *(void *)(v6 - 8);
  v1[36] = swift_task_alloc();
  v1[37] = type metadata accessor for TrustedRequestConfiguration();
  v1[38] = swift_task_alloc();
  return _swift_task_switch(sub_100111B2C, 0, 0);
}

uint64_t sub_100111B2C()
{
  uint64_t v2 = *(void *)(v0 + 296);
  uint64_t v1 = *(void *)(v0 + 304);
  uint64_t v4 = *(void *)(v0 + 280);
  uint64_t v3 = *(void *)(v0 + 288);
  uint64_t v5 = *(void *)(v0 + 272);
  uint64_t v6 = *(void *)(v0 + 136);
  uint64_t v7 = qword_10021F8E0;
  *(void *)(v0 + 312) = qword_10021F8E0;
  sub_100161F3C(v6 + v7, v1, (uint64_t (*)(void))type metadata accessor for TrustedRequestConfiguration);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6 + qword_10021F8E8, v5);
  uint64_t v8 = (uint64_t *)(v1 + *(int *)(v2 + 80));
  uint64_t v9 = v8[1];
  uint64_t v26 = *v8;
  *(void *)(v0 + 320) = v9;
  uint64_t v10 = (uint64_t *)(v1 + *(int *)(v2 + 84));
  if (v10[1])
  {
    uint64_t v25 = *v10;
    unint64_t v11 = v10[1];
  }
  else
  {
    uint64_t v25 = 0;
    unint64_t v11 = 0xE000000000000000;
  }
  *(void *)(v0 + 328) = v11;
  uint64_t v12 = *(void *)(v0 + 288);
  uint64_t v24 = *(void *)(v0 + 296);
  uint64_t v13 = *(void *)(v0 + 272);
  uint64_t v14 = *(void *)(v0 + 280);
  uint64_t v23 = *(void *)(v0 + 304);
  uint64_t v15 = *(void *)(v0 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1001BF930();
  uint64_t v18 = v17;
  *(void *)(v0 + 336) = v17;
  uint64_t v19 = sub_1001BF940();
  *(void *)(v0 + 344) = v19;
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  sub_10016290C(v23, (uint64_t (*)(void))type metadata accessor for TrustedRequestConfiguration);
  *(void *)(v0 + 16) = v26;
  *(void *)(v0 + 24) = v9;
  *(void *)(v0 + 32) = v25;
  *(void *)(v0 + 40) = v11;
  *(void *)(v0 + 48) = v16;
  *(void *)(v0 + 56) = v18;
  *(void *)(v0 + 64) = v19;
  uint64_t v20 = *(void *)(*(void *)v15 + 296);
  _s20privatecloudcomputed8LRUCacheC10addToCache3now5valueSb10Foundation4DateV_xtFfA__0();
  *(_DWORD *)(v0 + 384) = *(_DWORD *)(v24 + 88);
  uint64_t v21 = *(void *)(v15 + v20);
  *(void *)(v0 + 352) = v21;
  return _swift_task_switch(sub_100111D14, v21, 0);
}

uint64_t sub_100111D14()
{
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 216);
  sub_100094E78(v1, (uint64_t *)(v0 + 16), *(void *)(v0 + 136) + *(void *)(v0 + 312) + *(int *)(v0 + 384), *(char **)(v0 + 240));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(void *)(v0 + 360) = v4;
  *(void *)(v0 + 368) = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v4(v1, v2);
  return _swift_task_switch(sub_100111E00, 0, 0);
}

uint64_t sub_100111E00()
{
  uint64_t v25 = v0;
  uint64_t v1 = *(void *)(v0 + 248);
  uint64_t v2 = *(void *)(v0 + 256);
  uint64_t v3 = *(void *)(v0 + 240);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v4 = *(void *)(v0 + 176);
    uint64_t v5 = *(void *)(v0 + 184);
    uint64_t v6 = *(void *)(v0 + 168);
    uint64_t v7 = *(void *)(v0 + 136) + *(void *)(v0 + 312) + *(int *)(v0 + 384);
    sub_100010360(v3, &qword_10020BF98);
    sub_10003282C(v7, v6, qword_100208CD0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) == 1)
    {
      sub_100010360(*(void *)(v0 + 168), qword_100208CD0);
      swift_retain_n();
      uint64_t v8 = sub_1001C0330();
      os_log_type_t v9 = sub_1001C1200();
      BOOL v10 = os_log_type_enabled(v8, v9);
      uint64_t v11 = *(void *)(v0 + 136);
      if (v10)
      {
        uint64_t v12 = (uint8_t *)swift_slowAlloc();
        uint64_t v24 = swift_slowAlloc();
        *(_DWORD *)uint64_t v12 = 136315138;
        uint64_t v13 = (uint64_t *)(v11 + *(void *)(*(void *)v11 + 368));
        uint64_t v15 = *v13;
        unint64_t v14 = v13[1];
        swift_bridgeObjectRetain();
        *(void *)(v0 + 96) = sub_1000DF238(v15, v14, &v24);
        sub_1001C1310();
        swift_bridgeObjectRelease();
        swift_release_n();
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s no session identifier on request", v12, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
      return v23(0);
    }
    else
    {
      uint64_t v22 = *(void *)(v0 + 352);
      (*(void (**)(void, void, void))(*(void *)(v0 + 184) + 32))(*(void *)(v0 + 200), *(void *)(v0 + 168), *(void *)(v0 + 176));
      _s20privatecloudcomputed8LRUCacheC10addToCache3now5valueSb10Foundation4DateV_xtFfA__0();
      return _swift_task_switch(sub_100112320, v22, 0);
    }
  }
  else
  {
    uint64_t v16 = *(void *)(v0 + 264);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v16, v3, v1);
    uint64_t v17 = sub_1001BF810();
    sub_1001627A0(&qword_10020D938, (void (*)(uint64_t))&type metadata accessor for TrustedCloudComputeError);
    swift_allocError();
    uint64_t v19 = v18;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v18, v16, v1);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v17 - 8) + 104))(v19, enum case for TrustedCloudComputeError.deniedDueToRateLimit(_:), v17);
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v16, v1);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
    return v20();
  }
}

uint64_t sub_100112320()
{
  uint64_t v1 = v0[44];
  uint64_t v12 = (void (*)(uint64_t, uint64_t))v0[45];
  uint64_t v2 = v0[28];
  uint64_t v11 = v0[26];
  uint64_t v9 = v0[29];
  uint64_t v10 = v0[25];
  uint64_t v3 = v0[19];
  uint64_t v4 = v0[20];
  uint64_t v8 = v0[18];
  uint64_t v5 = v1 + OBJC_IVAR____TtC20privatecloudcomputed11RateLimiter_model;
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 24);
  sub_10000D934((void *)(v1 + OBJC_IVAR____TtC20privatecloudcomputed11RateLimiter_config), *(void *)(v1 + OBJC_IVAR____TtC20privatecloudcomputed11RateLimiter_config + 24));
  swift_bridgeObjectRetain();
  sub_1001BFA50();
  sub_1001BF8F0();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v8);
  sub_1001BF260();
  v0[47] = sub_10001FC44(v2, v10, v6);
  v12(v2, v11);
  swift_bridgeObjectRelease();
  v12(v9, v11);
  return _swift_task_switch(sub_1001124B4, 0, 0);
}

uint64_t sub_1001124B4()
{
  uint64_t v26 = v0;
  (*(void (**)(void, void, void))(v0[23] + 16))(v0[24], v0[25], v0[22]);
  swift_retain();
  uint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C1200();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v22 = v0[47];
    uint64_t v23 = v0[25];
    uint64_t v19 = v0[24];
    uint64_t v3 = v0[22];
    uint64_t v21 = v0[23];
    uint64_t v4 = v0[17];
    uint64_t v5 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315650;
    uint64_t v6 = (uint64_t *)(v4 + *(void *)(*(void *)v4 + 368));
    os_log_type_t type = v2;
    uint64_t v8 = *v6;
    unint64_t v7 = v6[1];
    swift_bridgeObjectRetain();
    v0[14] = sub_1000DF238(v8, v7, &v25);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release();
    *(_WORD *)(v5 + 12) = 2080;
    sub_1001627A0(qword_100207DC0, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v9 = sub_1001C1780();
    v0[15] = sub_1000DF238(v9, v10, &v25);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
    v11(v19, v3);
    *(_WORD *)(v5 + 22) = 2048;
    v0[16] = v22;
    sub_1001C1310();
    _os_log_impl((void *)&_mh_execute_header, v1, type, "%s using session identifier %s with progress %lu", (uint8_t *)v5, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v11(v23, v3);
  }
  else
  {
    uint64_t v13 = v0[24];
    uint64_t v12 = v0[25];
    uint64_t v14 = v0[22];
    uint64_t v15 = v0[23];
    swift_release();
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    v16(v13, v14);

    v16(v12, v14);
  }
  uint64_t v24 = v0[47];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(uint64_t))v0[1];
  return v17(v24);
}

uint64_t sub_100112844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[121] = a6;
  v6[120] = a5;
  v6[119] = a4;
  v6[113] = a2;
  uint64_t v8 = type metadata accessor for ValidatedAttestationOrAttestation();
  v6[122] = v8;
  v6[123] = *(void *)(v8 - 8);
  v6[124] = swift_task_alloc();
  uint64_t v9 = sub_100003918(&qword_10020E188);
  v6[125] = v9;
  v6[126] = *(void *)(v9 - 8);
  v6[127] = swift_task_alloc();
  uint64_t v10 = sub_100003918(&qword_10020E190);
  v6[128] = v10;
  v6[129] = *(void *)(v10 - 8);
  v6[130] = swift_task_alloc();
  uint64_t v11 = sub_100003918(&qword_10020E198);
  v6[131] = v11;
  v6[132] = *(void *)(v11 - 8);
  v6[133] = swift_task_alloc();
  v6[134] = swift_task_alloc();
  uint64_t v12 = sub_100003918(&qword_10020E1A0);
  v6[135] = v12;
  v6[136] = *(void *)(v12 - 8);
  v6[137] = swift_task_alloc();
  v6[138] = swift_task_alloc();
  v6[101] = a3;
  return _swift_task_switch(sub_100112AB8, 0, 0);
}

uint64_t sub_100112AB8()
{
  uint64_t v1 = v0[120];
  uint64_t v2 = *(void *)(v1 + *(void *)(*(void *)v1 + 344));
  v0[139] = v2;
  sub_1001139F4();
  uint64_t v3 = swift_allocObject();
  v0[140] = v3;
  *(void *)(v3 + 16) = &unk_10020E1B0;
  *(void *)(v3 + 24) = v1;
  swift_retain();
  swift_retain();
  sub_1000166C8((uint64_t *)&unk_10020E1C8);
  swift_asyncLet_begin();
  uint64_t v4 = v2 + *(void *)(*(void *)v2 + 272);
  uint64_t v5 = v2 + *(void *)(*(void *)v2 + 280);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t))((char *)&dword_100208C50
                                                                                 + dword_100208C50);
  swift_retain_n();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[141] = v6;
  void *v6 = v0;
  v6[1] = sub_100112C74;
  uint64_t v7 = v0[120];
  return v9((uint64_t)"LoadAttestationsFromCache", 25, 2, v5, v4, v7);
}

uint64_t sub_100112C74(uint64_t a1, char a2)
{
  uint64_t v4 = *v3;
  *(void *)(v4 + 1136) = a1;
  *(unsigned char *)(v4 + 801) = a2;
  *(void *)(v4 + 1144) = v2;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100112D9C, 0, 0);
}

void sub_100112D9C()
{
  uint64_t v1 = *(void *)(v0 + 1144);
  char v2 = *(unsigned char *)(v0 + 801);
  uint64_t v3 = *(void *)(v0 + 1136);
  uint64_t v4 = *(void *)(v0 + 1112);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v5 + 16) = v3;
  *(unsigned char *)(v5 + 24) = v2 & 1;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = (os_unfair_lock_s *)(v4 + *(void *)(*(void *)v4 + 128));
  os_unfair_lock_lock(v6);
  uint64_t v7 = sub_100003918(&qword_100208C90);
  sub_10015DF50((uint64_t)v6 + *(int *)(v7 + 28));
  os_unfair_lock_unlock(v6);
  if (!v1)
  {
    char v8 = *(unsigned char *)(v0 + 801);
    swift_task_dealloc();
    if (v8)
    {
      swift_willThrowTypedImpl();
    }
    else
    {
      uint64_t v9 = *(void *)(v0 + 1136);
      uint64_t v10 = *(void *)(v0 + 1096);
      uint64_t v11 = *(void *)(v0 + 1088);
      uint64_t v26 = *(void *)(v0 + 1080);
      uint64_t v27 = *(void *)(v0 + 1104);
      uint64_t v12 = *(void *)(v0 + 1064);
      uint64_t v13 = *(void *)(v0 + 1056);
      uint64_t v28 = *(void *)(v0 + 1048);
      uint64_t v29 = *(void *)(v0 + 1072);
      uint64_t v14 = *(void *)(v0 + 1040);
      uint64_t v15 = *(void *)(v0 + 1032);
      uint64_t v16 = *(void *)(v0 + 1024);
      swift_release();
      (*(void (**)(uint64_t, void, uint64_t))(v15 + 104))(v14, enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:), v16);
      sub_1001C0FD0();
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v27, v10, v26);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v29, v12, v28);
      uint64_t v17 = *(void *)(v9 + 16);
      if (v17)
      {
        uint64_t v18 = *(void *)(v0 + 984);
        uint64_t v19 = v9 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
        uint64_t v20 = *(void *)(v18 + 72);
        uint64_t v21 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 1008) + 8);
        swift_bridgeObjectRetain();
        do
        {
          uint64_t v22 = *(void *)(v0 + 1016);
          uint64_t v23 = *(void *)(v0 + 1000);
          sub_100161F3C(v19, *(void *)(v0 + 992), (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
          sub_1001C0FE0();
          (*v21)(v22, v23);
          v19 += v20;
          --v17;
        }
        while (v17);
        sub_10015DF8C(*(void *)(v0 + 1136), 0);
      }
      sub_100003918(&qword_10020C058);
      uint64_t v24 = swift_allocObject();
      *(void *)(v0 + 1152) = v24;
      swift_defaultActor_initialize();
      *(void *)(v24 + 112) = sub_1000546D8((uint64_t)_swiftEmptyArrayStorage);
      *(void *)(v24 + 120) = 0;
      *(unsigned char *)(v24 + 128) = -1;
      uint64_t v25 = swift_allocObject();
      *(void *)(v0 + 1160) = v25;
      swift_defaultActor_initialize();
      *(void *)(v25 + 112) = sub_1000546D8((uint64_t)_swiftEmptyArrayStorage);
      *(void *)(v25 + 120) = 0;
      *(unsigned char *)(v25 + 128) = -1;
      _swift_asyncLet_get_throwing(v0 + 16, v0 + 744, sub_1001130EC, v0 + 816);
    }
  }
}

uint64_t sub_1001130EC()
{
  *(void *)(v1 + 1168) = v0;
  if (v0)
  {
    sub_10015DF8C(*(void *)(v1 + 1136), 0);
    char v2 = sub_100113634;
  }
  else
  {
    char v2 = sub_100113170;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100113170()
{
  uint64_t v1 = *(void *)(v0 + 1136);
  uint64_t v14 = *(void *)(v0 + 1104);
  uint64_t v2 = *(void *)(v0 + 968);
  uint64_t v3 = *(void *)(v0 + 960);
  uint64_t v12 = *(void *)(v0 + 952);
  uint64_t v13 = *(void *)(v0 + 1072);
  uint64_t v4 = *(void *)(v0 + 904);
  long long v5 = *(_OWORD *)(v0 + 760);
  *(_OWORD *)(v0 + 696) = *(_OWORD *)(v0 + 744);
  *(_OWORD *)(v0 + 712) = v5;
  *(_OWORD *)(v0 + 728) = *(_OWORD *)(v0 + 776);
  uint64_t v6 = sub_100003918(&qword_10020E1D8);
  uint64_t v7 = sub_100003918(&qword_10020E1E0);
  uint64_t v8 = swift_task_alloc();
  *(void *)(v0 + 1176) = v8;
  int8x16_t v9 = *(int8x16_t *)(v0 + 1152);
  *(void *)(v8 + 16) = v3;
  *(void *)(v8 + 24) = v0 + 696;
  *(void *)(v8 + 32) = v2;
  *(void *)(v8 + 40) = v1;
  *(void *)(v8 + 48) = v4;
  *(void *)(v8 + 56) = v0 + 808;
  *(void *)(v8 + 64) = v13;
  *(int8x16_t *)(v8 + 72) = vextq_s8(v9, v9, 8uLL);
  *(void *)(v8 + 88) = v12;
  *(void *)(v8 + 96) = v14;
  sub_10015E0B0((uint64_t *)(v0 + 696), (void (*)(uint64_t, uint64_t))sub_100007B14);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 1184) = v10;
  void *v10 = v0;
  v10[1] = sub_10011331C;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 792, v6, v7, 0, 0, &unk_10020E1F0, v8, v6);
}

uint64_t sub_10011331C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1136);
  swift_task_dealloc();
  sub_10015DF8C(v1, 0);
  swift_task_dealloc();
  return _swift_task_switch(sub_100113454, 0, 0);
}

uint64_t sub_100113454()
{
  uint64_t v1 = *(void *)(v0 + 792);
  *(void *)(v0 + 1192) = v1;
  uint64_t v12 = *(void *)(v0 + 1104);
  uint64_t v2 = *(void *)(v0 + 1088);
  uint64_t v11 = *(void *)(v0 + 1080);
  uint64_t v3 = *(void *)(v0 + 1072);
  uint64_t v4 = *(void *)(v0 + 1056);
  uint64_t v5 = *(void *)(v0 + 1048);
  if (*(unsigned char *)(v0 + 800))
  {
    *(void *)(v0 + 856) = v1;
    swift_errorRetain();
    sub_100003918(&qword_100208C98);
    swift_willThrowTypedImpl();
    sub_10015E0B0((uint64_t *)(v0 + 696), (void (*)(uint64_t, uint64_t))sub_10000792C);
    swift_release();
    swift_release();
    sub_1000106B0(v1, 1);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v12, v11);
    uint64_t v6 = sub_100113904;
    uint64_t v7 = v0 + 16;
    uint64_t v9 = v0 + 864;
    uint64_t v8 = v0 + 744;
  }
  else
  {
    sub_10015E0B0((uint64_t *)(v0 + 696), (void (*)(uint64_t, uint64_t))sub_10000792C);
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v12, v11);
    uint64_t v6 = sub_100113814;
    uint64_t v7 = v0 + 16;
    uint64_t v8 = v0 + 744;
    uint64_t v9 = v0 + 912;
  }
  return _swift_asyncLet_finish(v7, v8, v6, v9);
}

uint64_t sub_100113634()
{
  uint64_t v1 = v0[138];
  uint64_t v2 = v0[136];
  uint64_t v3 = v0[135];
  uint64_t v4 = v0[134];
  uint64_t v5 = v0[132];
  uint64_t v6 = v0[131];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_asyncLet_finish(v0 + 2, v0 + 93, sub_100113724, v0 + 82);
}

uint64_t sub_100113724()
{
  return _swift_task_switch(sub_100113740, 0, 0);
}

uint64_t sub_100113740()
{
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100113814()
{
  return _swift_task_switch(sub_100113830, 0, 0);
}

uint64_t sub_100113830()
{
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100113904()
{
  return _swift_task_switch(sub_100113920, 0, 0);
}

uint64_t sub_100113920()
{
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001139F4()
{
  sub_1001C0410();
  sub_1001C03F0();
  sub_1001C03F0();
  sub_1001C0510();
  sub_1001C0510();
  uint64_t v1 = (os_unfair_lock_s *)(v0 + *(void *)(*(void *)v0 + 128));
  os_unfair_lock_lock(v1);
  uint64_t v2 = sub_100003918(&qword_100208C90);
  sub_1001628A4((uint64_t)v1 + *(int *)(v2 + 28), v3);
  os_unfair_lock_unlock(v1);
  swift_release();
  return swift_release();
}

uint64_t sub_100113ACC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return _swift_task_switch(sub_100113AEC, 0, 0);
}

uint64_t sub_100113AEC()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 72) + *(void *)(**(void **)(v0 + 72) + 344));
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_100208C70 + dword_100208C70);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100113BCC;
  uint64_t v3 = *(void *)(v0 + 72);
  return v5(v0 + 16, v1, v3);
}

uint64_t sub_100113BCC()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100113D0C;
  }
  else {
    uint64_t v2 = sub_100113CE0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100113CE0()
{
  uint64_t v1 = *(_OWORD **)(v0 + 64);
  long long v2 = *(_OWORD *)(v0 + 32);
  long long v3 = *(_OWORD *)(v0 + 48);
  _OWORD *v1 = *(_OWORD *)(v0 + 16);
  v1[1] = v2;
  v1[2] = v3;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100113D0C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100113D24(uint64_t a1, int *a2)
{
  *(void *)(v2 + 64) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  long long v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 72) = v3;
  *long long v3 = v2;
  v3[1] = sub_100113E04;
  return v5(v2 + 16);
}

uint64_t sub_100113E04()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (!v0)
  {
    uint64_t v4 = *(_OWORD **)(v2 + 64);
    long long v5 = *(_OWORD *)(v2 + 16);
    long long v6 = *(_OWORD *)(v2 + 48);
    v4[1] = *(_OWORD *)(v2 + 32);
    v4[2] = v6;
    *uint64_t v4 = v5;
  }
  uint64_t v7 = *(uint64_t (**)(void))(v3 + 8);
  return v7();
}

uint64_t sub_100113F14()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_100113FA4;
  return sub_1000253AC();
}

uint64_t sub_100113FA4(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_1001140A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 264) = v19;
  *(void *)(v8 + 272) = v20;
  *(_OWORD *)(v8 + 248) = v18;
  *(void *)(v8 + 232) = a7;
  *(void *)(v8 + 240) = a8;
  *(void *)(v8 + 216) = a5;
  *(void *)(v8 + 224) = a6;
  *(void *)(v8 + 200) = a3;
  *(void *)(v8 + 208) = a4;
  *(void *)(v8 + 184) = a1;
  *(void *)(v8 + 192) = a2;
  sub_100003918(&qword_10020E200);
  *(void *)(v8 + 280) = swift_task_alloc();
  *(void *)(v8 + 288) = swift_task_alloc();
  *(void *)(v8 + 296) = swift_task_alloc();
  uint64_t v9 = sub_100003918(&qword_10020E1A0);
  *(void *)(v8 + 304) = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  *(void *)(v8 + 312) = v10;
  *(void *)(v8 + 320) = *(void *)(v10 + 64);
  *(void *)(v8 + 328) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for NWAsyncConnection.OHTTPStreamFactory(0);
  *(void *)(v8 + 336) = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  *(void *)(v8 + 344) = v12;
  *(void *)(v8 + 352) = *(void *)(v12 + 64);
  *(void *)(v8 + 360) = swift_task_alloc();
  uint64_t v13 = sub_100003918(&qword_10020E198);
  *(void *)(v8 + 368) = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  *(void *)(v8 + 376) = v14;
  *(void *)(v8 + 384) = *(void *)(v14 + 64);
  *(void *)(v8 + 392) = swift_task_alloc();
  uint64_t v15 = *(void *)(type metadata accessor for NWAsyncConnection.Inbound(0) - 8);
  *(void *)(v8 + 400) = v15;
  *(void *)(v8 + 408) = *(void *)(v15 + 64);
  *(void *)(v8 + 416) = swift_task_alloc();
  sub_100003918(&qword_10020C3B0);
  *(void *)(v8 + 424) = swift_task_alloc();
  return _swift_task_switch(sub_100114334, 0, 0);
}

uint64_t sub_100114334()
{
  *(void *)(v0 + 432) = *(void *)(**(void **)(v0 + 192) + 360);
  uint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C1200();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Entered main task group", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = *(void *)(v0 + 416);
  uint64_t v4 = *(void *)(v0 + 424);
  uint64_t v55 = v4;
  uint64_t v6 = *(void *)(v0 + 392);
  uint64_t v34 = *(void *)(v0 + 400);
  uint64_t v35 = *(void *)(v0 + 408);
  uint64_t v33 = v6;
  uint64_t v7 = *(void *)(v0 + 376);
  uint64_t v37 = *(void *)(v0 + 384);
  uint64_t v8 = *(void *)(v0 + 368);
  uint64_t v53 = *(void *)(v0 + 360);
  uint64_t v54 = *(void *)(v0 + 352);
  uint64_t v46 = *(void *)(v0 + 320);
  uint64_t v47 = *(void *)(v0 + 336);
  uint64_t v41 = *(void *)(v0 + 344);
  uint64_t v42 = *(void *)(v0 + 312);
  uint64_t v44 = *(void *)(v0 + 304);
  uint64_t v45 = *(void *)(v0 + 328);
  uint64_t v43 = *(void *)(v0 + 272);
  uint64_t v58 = *(void *)(v0 + 264);
  uint64_t v51 = *(void *)(v0 + 256);
  uint64_t v9 = *(void *)(v0 + 240);
  uint64_t v50 = *(void *)(v0 + 248);
  uint64_t v10 = *(void *)(v0 + 224);
  uint64_t v52 = *(void *)(v0 + 232);
  uint64_t v39 = *(void *)(v0 + 216);
  uint64_t v40 = *(void *)(v0 + 208);
  uint64_t v11 = *(void *)(v0 + 192);
  uint64_t v48 = *(uint64_t **)(v0 + 200);

  uint64_t v56 = sub_1001C0FC0();
  uint64_t v57 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56);
  v57(v4, 1, 1, v56);
  sub_100161F3C(v10, v5, type metadata accessor for NWAsyncConnection.Inbound);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v9, v8);
  unint64_t v12 = (*(unsigned __int8 *)(v34 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  unint64_t v36 = (v35 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = (*(unsigned __int8 *)(v7 + 80) + v36 + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v38 = (v37 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 0;
  *(void *)(v14 + 24) = 0;
  uint64_t v49 = v11;
  *(void *)(v14 + 32) = v11;
  long long v16 = *(_OWORD *)v48;
  long long v15 = *((_OWORD *)v48 + 1);
  *(_OWORD *)(v14 + 72) = *((_OWORD *)v48 + 2);
  *(_OWORD *)(v14 + 40) = v16;
  *(_OWORD *)(v14 + 56) = v15;
  *(void *)(v14 + 88) = v40;
  *(void *)(v14 + 96) = v39;
  sub_1001627E8(v5, v14 + v12, type metadata accessor for NWAsyncConnection.Inbound);
  *(void *)(v14 + v36) = v52;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(v14 + v13, v33, v8);
  *(void *)(v14 + v38) = v50;
  *(void *)(v14 + ((v38 + 15) & 0xFFFFFFFFFFFFFFF8)) = v51;
  swift_retain();
  swift_retain();
  sub_10015E0B0(v48, (void (*)(uint64_t, uint64_t))sub_100007B14);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_100117EE0(v4, (uint64_t)&unk_10020E210, v14);
  sub_100010360(v4, &qword_10020C3B0);
  v57(v4, 1, 1, v56);
  sub_100161F3C(v58, v53, type metadata accessor for NWAsyncConnection.OHTTPStreamFactory);
  uint64_t v17 = *(unsigned __int8 *)(v41 + 80);
  uint64_t v18 = (v17 + 40) & ~v17;
  unint64_t v19 = (v54 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = 0;
  void v21[3] = 0;
  v21[4] = v50;
  sub_1001627E8(v53, (uint64_t)v21 + v18, type metadata accessor for NWAsyncConnection.OHTTPStreamFactory);
  *(void *)((char *)v21 + v19) = v49;
  *(void *)((char *)v21 + v20) = v51;
  uint64_t v22 = (_OWORD *)((char *)v21 + ((v20 + 15) & 0xFFFFFFFFFFFFFFF8));
  long long v23 = *(_OWORD *)v48;
  long long v24 = *((_OWORD *)v48 + 2);
  v22[1] = *((_OWORD *)v48 + 1);
  void v22[2] = v24;
  *uint64_t v22 = v23;
  swift_retain();
  sub_10015E0B0(v48, (void (*)(uint64_t, uint64_t))sub_100007B14);
  swift_retain();
  swift_retain();
  sub_100117EE0(v55, (uint64_t)&unk_10020E220, (uint64_t)v21);
  sub_100010360(v55, &qword_10020C3B0);
  v57(v55, 1, 1, v56);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16))(v45, v43, v44);
  sub_100161F3C(v58, v53, type metadata accessor for NWAsyncConnection.OHTTPStreamFactory);
  unint64_t v25 = (*(unsigned __int8 *)(v42 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  unint64_t v26 = (v46 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = (char *)swift_allocObject();
  *((void *)v27 + 2) = 0;
  *((void *)v27 + 3) = 0;
  *((void *)v27 + 4) = v49;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(&v27[v25], v45, v44);
  *(void *)&v27[v26] = v50;
  sub_1001627E8(v53, (uint64_t)&v27[(v17 + v26 + 8) & ~v17], type metadata accessor for NWAsyncConnection.OHTTPStreamFactory);
  swift_retain();
  swift_retain();
  sub_100117EE0(v55, (uint64_t)&unk_10020E230, (uint64_t)v27);
  sub_100010360(v55, &qword_10020C3B0);
  *(void *)(v0 + 40) = v47;
  *(void *)(v0 + 48) = &off_100200D00;
  uint64_t v28 = sub_10000395C((uint64_t *)(v0 + 16));
  sub_100161F3C(v58, (uint64_t)v28, type metadata accessor for NWAsyncConnection.OHTTPStreamFactory);
  v57(v55, 1, 1, v56);
  sub_100032890(v0 + 16, v0 + 56);
  uint64_t v29 = (void *)swift_allocObject();
  v29[2] = 0;
  v29[3] = 0;
  sub_10000E720((long long *)(v0 + 56), (uint64_t)(v29 + 4));
  v29[9] = v49;
  swift_retain();
  sub_100117EE0(v55, (uint64_t)&unk_10020E240, (uint64_t)v29);
  sub_100010360(v55, &qword_10020C3B0);
  sub_100003E90(v0 + 16);
  *(void *)(v0 + 440) = *(void *)(*(void *)v49 + 368);
  *(void *)(v0 + 448) = 0;
  *(void *)(v0 + 456) = 0;
  *(void *)(v0 + 464) = 0;
  uint64_t v30 = (void *)swift_task_alloc();
  *(void *)(v0 + 472) = v30;
  uint64_t v31 = sub_100003918(&qword_10020E248);
  *uint64_t v30 = v0;
  v30[1] = sub_100114A98;
  return TaskGroup.next(isolation:)(v0 + 128, 0, 0, v31);
}

uint64_t sub_100114A98()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100114B94, 0, 0);
}

uint64_t sub_100114B94()
{
  uint64_t v81 = v0;
  uint64_t v1 = *(void *)(v0 + 128);
  unsigned int v2 = *(unsigned __int8 *)(v0 + 136);
  if (v2 > 0xFD)
  {
    uint64_t v3 = *(void *)(v0 + 464);
    if (v3)
    {
      *(void *)(v0 + 152) = v3;
      swift_errorRetain();
      sub_100003918(&qword_100208C98);
      if (swift_dynamicCast())
      {
        uint64_t v4 = *(void *)(v0 + 120);
        if (*(unsigned char *)(v0 + 112) == 3)
        {
          sub_10002C2C4();
          uint64_t v5 = swift_allocError();
          *(unsigned char *)uint64_t v6 = 3;
          *(void *)(v6 + 8) = v4;
          swift_errorRelease();
          swift_errorRelease();
LABEL_50:
          swift_errorRelease();
          uint64_t v43 = 1;
          goto LABEL_68;
        }
        swift_bridgeObjectRelease();
      }
    }
    uint64_t v26 = *(void *)(v0 + 448);
    if (!v26) {
      goto LABEL_25;
    }
    *(void *)(v0 + 176) = v26;
    swift_errorRetain();
    swift_errorRetain();
    sub_100003918(&qword_100208C98);
    uint64_t v27 = sub_1001C0EE0();
    int v28 = swift_dynamicCast();
    uint64_t v29 = *(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56);
    uint64_t v30 = *(void *)(v0 + 296);
    if (v28)
    {
      uint64_t v31 = *(void *)(v27 - 8);
      v29(*(void *)(v0 + 296), 0, 1, v27);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v30, 1, v27) != 1)
      {
        sub_100010360(*(void *)(v0 + 296), &qword_10020E200);
        swift_errorRelease();
LABEL_25:
        if (!v3) {
          goto LABEL_29;
        }
        *(void *)(v0 + 144) = *(void *)(v0 + 464);
        swift_errorRetain();
        swift_errorRetain();
        sub_100003918(&qword_100208C98);
        uint64_t v32 = sub_1001C0EE0();
        int v33 = swift_dynamicCast();
        uint64_t v34 = *(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56);
        uint64_t v35 = *(void *)(v0 + 288);
        if (v33)
        {
          uint64_t v36 = *(void *)(v32 - 8);
          v34(*(void *)(v0 + 288), 0, 1, v32);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v35, 1, v32) != 1)
          {
            sub_100010360(*(void *)(v0 + 288), &qword_10020E200);
            swift_errorRelease();
LABEL_29:
            uint64_t v37 = *(void *)(v0 + 456);
            if (v37)
            {
              *(void *)(v0 + 160) = v37;
              swift_errorRetain();
              swift_errorRetain();
              sub_100003918(&qword_100208C98);
              uint64_t v38 = sub_1001C0EE0();
              int v39 = swift_dynamicCast();
              uint64_t v40 = *(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56);
              uint64_t v41 = *(void *)(v0 + 280);
              if (v39)
              {
                uint64_t v42 = *(void *)(v38 - 8);
                v40(*(void *)(v0 + 280), 0, 1, v38);
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v41, 1, v38) != 1)
                {
                  sub_100010360(*(void *)(v0 + 280), &qword_10020E200);
                  swift_errorRelease();
LABEL_49:
                  sub_1001C0EE0();
                  sub_1001627A0(&qword_100208790, (void (*)(uint64_t))&type metadata accessor for CancellationError);
                  uint64_t v5 = swift_allocError();
                  sub_1001C0B70();
                  swift_errorRelease();
                  swift_errorRelease();
                  goto LABEL_50;
                }
              }
              else
              {
                v40(*(void *)(v0 + 280), 1, 1, v38);
              }
              sub_100010360(*(void *)(v0 + 280), &qword_10020E200);
              swift_errorRelease();
              swift_errorRelease();
              swift_errorRelease();
              uint64_t v5 = *(void *)(v0 + 456);
              uint64_t v43 = 1;
              goto LABEL_68;
            }
            if (!(*(void *)(v0 + 448) | *(void *)(v0 + 464)))
            {
              uint64_t v5 = 0;
              uint64_t v43 = 0;
              goto LABEL_68;
            }
            goto LABEL_49;
          }
        }
        else
        {
          v34(*(void *)(v0 + 288), 1, 1, v32);
        }
        sub_100010360(*(void *)(v0 + 288), &qword_10020E200);
        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
        uint64_t v5 = *(void *)(v0 + 464);
        uint64_t v43 = 1;
LABEL_68:
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        unint64_t v75 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
        return v75(v5, v43);
      }
    }
    else
    {
      v29(*(void *)(v0 + 296), 1, 1, v27);
    }
    sub_100010360(*(void *)(v0 + 296), &qword_10020E200);
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    uint64_t v5 = *(void *)(v0 + 448);
    uint64_t v43 = 1;
    goto LABEL_68;
  }
  switch(v2 >> 6)
  {
    case 1u:
      if (v2)
      {
        sub_10015EC30(*(void *)(v0 + 128), *(unsigned char *)(v0 + 136));
        swift_retain();
        sub_10015EC30(v1, v2);
        swift_retain();
        sub_10015EC30(v1, v2);
        uint64_t v51 = sub_1001C0330();
        os_log_type_t v52 = sub_1001C1200();
        if (os_log_type_enabled(v51, v52))
        {
          uint64_t v53 = (uint64_t *)(*(void *)(v0 + 192) + *(void *)(v0 + 440));
          uint64_t v54 = swift_slowAlloc();
          int v77 = (void *)swift_slowAlloc();
          uint64_t v80 = swift_slowAlloc();
          *(_DWORD *)uint64_t v54 = 136315394;
          uint64_t v55 = *v53;
          unint64_t v56 = v53[1];
          swift_bridgeObjectRetain();
          *(void *)(v54 + 4) = sub_1000DF238(v55, v56, &v80);
          swift_bridgeObjectRelease();
          swift_release_n();
          *(_WORD *)(v54 + 12) = 2112;
          sub_100010664(v1, v2);
          uint64_t v57 = _swift_stdlib_bridgeErrorToNSError();
          *(void *)(v54 + 14) = v57;
          *int v77 = v57;
          sub_10015EC44(v1, v2);
          sub_10015EC44(v1, v2);
          _os_log_impl((void *)&_mh_execute_header, v51, v52, "%s Data substream task failed. Error: %@", (uint8_t *)v54, 0x16u);
          sub_100003918(&qword_100207DA8);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
          swift_errorRelease();
        }
        else
        {
          swift_errorRelease();

          sub_10015EC44(v1, v2);
          swift_release_n();
          sub_10015EC44(v1, v2);
        }
        sub_10015EC44(v1, v2);
        uint64_t v72 = *(void *)(v0 + 464);
        goto LABEL_62;
      }
      swift_retain_n();
      uint64_t v7 = sub_1001C0330();
      os_log_type_t v8 = sub_1001C1200();
      if (!os_log_type_enabled(v7, v8)) {
        goto LABEL_19;
      }
      uint64_t v14 = (uint64_t *)(*(void *)(v0 + 192) + *(void *)(v0 + 440));
      uint64_t v10 = swift_slowAlloc();
      uint64_t v80 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136315138;
      uint64_t v16 = *v14;
      unint64_t v15 = v14[1];
      swift_bridgeObjectRetain();
      *(void *)(v10 + 4) = sub_1000DF238(v16, v15, &v80);
      swift_bridgeObjectRelease();
      swift_release_n();
      unint64_t v13 = "%s Data substream task finished successfully";
      goto LABEL_16;
    case 2u:
      if (v2)
      {
        *(void *)(v0 + 168) = v1;
        sub_100010664(v1, v2);
        sub_100010664(v1, v2);
        sub_100003918(&qword_100208C98);
        if (swift_dynamicCast())
        {
          int v58 = *(unsigned __int8 *)(v0 + 96);
          swift_bridgeObjectRelease();
          if (v58 == 3)
          {
            sub_100003918(&qword_10020E1D8);
            sub_1001C0F00();
          }
        }
        swift_retain();
        sub_10015EC30(v1, v2);
        swift_retain();
        sub_10015EC30(v1, v2);
        uint64_t v59 = sub_1001C0330();
        os_log_type_t v60 = sub_1001C1200();
        if (os_log_type_enabled(v59, v60))
        {
          uint64_t v61 = (uint64_t *)(*(void *)(v0 + 192) + *(void *)(v0 + 440));
          uint64_t v62 = swift_slowAlloc();
          uint64_t v78 = (void *)swift_slowAlloc();
          uint64_t v80 = swift_slowAlloc();
          *(_DWORD *)uint64_t v62 = 136315394;
          uint64_t v63 = *v61;
          unint64_t v64 = v61[1];
          swift_bridgeObjectRetain();
          *(void *)(v62 + 4) = sub_1000DF238(v63, v64, &v80);
          swift_bridgeObjectRelease();
          swift_release_n();
          *(_WORD *)(v62 + 12) = 2112;
          sub_100010664(v1, v2);
          uint64_t v65 = _swift_stdlib_bridgeErrorToNSError();
          *(void *)(v62 + 14) = v65;
          void *v78 = v65;
          sub_10015EC44(v1, v2);
          sub_10015EC44(v1, v2);
          _os_log_impl((void *)&_mh_execute_header, v59, v60, "%s Node substreams task failed. error: %@", (uint8_t *)v62, 0x16u);
          sub_100003918(&qword_100207DA8);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
          swift_errorRelease();
        }
        else
        {
          swift_errorRelease();

          sub_10015EC44(v1, v2);
          swift_release_n();
          sub_10015EC44(v1, v2);
        }
        sub_10015EC44(v1, v2);
        goto LABEL_63;
      }
      swift_retain_n();
      uint64_t v7 = sub_1001C0330();
      os_log_type_t v8 = sub_1001C1200();
      if (!os_log_type_enabled(v7, v8)) {
        goto LABEL_19;
      }
      uint64_t v17 = (uint64_t *)(*(void *)(v0 + 192) + *(void *)(v0 + 440));
      uint64_t v10 = swift_slowAlloc();
      uint64_t v80 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136315138;
      uint64_t v19 = *v17;
      unint64_t v18 = v17[1];
      swift_bridgeObjectRetain();
      *(void *)(v10 + 4) = sub_1000DF238(v19, v18, &v80);
      swift_bridgeObjectRelease();
      swift_release_n();
      unint64_t v13 = "%s Node substreams task finished successfully";
      goto LABEL_16;
    case 3u:
      swift_retain_n();
      unint64_t v20 = sub_1001C0330();
      os_log_type_t v21 = sub_1001C1200();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = (uint64_t *)(*(void *)(v0 + 192) + *(void *)(v0 + 440));
        uint64_t v23 = swift_slowAlloc();
        uint64_t v80 = swift_slowAlloc();
        *(_DWORD *)uint64_t v23 = 136315138;
        uint64_t v24 = *v22;
        unint64_t v25 = v22[1];
        swift_bridgeObjectRetain();
        *(void *)(v23 + 4) = sub_1000DF238(v24, v25, &v80);
        swift_bridgeObjectRelease();
        swift_release_n();
        _os_log_impl((void *)&_mh_execute_header, v20, v21, "%s Connection metrics reporting finished", (uint8_t *)v23, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        goto LABEL_64;
      }

      goto LABEL_47;
    default:
      if (v2)
      {
        sub_10015EC30(*(void *)(v0 + 128), *(unsigned char *)(v0 + 136));
        swift_retain();
        sub_10015EC30(v1, v2);
        swift_retain();
        sub_10015EC30(v1, v2);
        uint64_t v44 = sub_1001C0330();
        os_log_type_t v45 = sub_1001C1200();
        if (os_log_type_enabled(v44, v45))
        {
          uint64_t v46 = (uint64_t *)(*(void *)(v0 + 192) + *(void *)(v0 + 440));
          uint64_t v47 = swift_slowAlloc();
          unint64_t v79 = (void *)swift_slowAlloc();
          uint64_t v80 = swift_slowAlloc();
          *(_DWORD *)uint64_t v47 = 136315394;
          uint64_t v48 = *v46;
          unint64_t v49 = v46[1];
          swift_bridgeObjectRetain();
          *(void *)(v47 + 4) = sub_1000DF238(v48, v49, &v80);
          swift_bridgeObjectRelease();
          swift_release_n();
          *(_WORD *)(v47 + 12) = 2112;
          sub_100010664(v1, v2);
          uint64_t v50 = _swift_stdlib_bridgeErrorToNSError();
          *(void *)(v47 + 14) = v50;
          *unint64_t v79 = v50;
          sub_10015EC44(v1, v2);
          sub_10015EC44(v1, v2);
          _os_log_impl((void *)&_mh_execute_header, v44, v45, "%s Ropes request failed. Error: %@", (uint8_t *)v47, 0x16u);
          sub_100003918(&qword_100207DA8);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_release_n();
          sub_10015EC44(v1, v2);
          sub_10015EC44(v1, v2);
        }
        swift_retain_n();
        uint64_t v66 = sub_1001C0330();
        os_log_type_t v67 = sub_1001C11E0();
        if (os_log_type_enabled(v66, v67))
        {
          uint64_t v68 = (uint64_t *)(*(void *)(v0 + 192) + *(void *)(v0 + 440));
          uint64_t v69 = swift_slowAlloc();
          uint64_t v80 = swift_slowAlloc();
          *(_DWORD *)uint64_t v69 = 136315138;
          uint64_t v71 = *v68;
          unint64_t v70 = v68[1];
          swift_bridgeObjectRetain();
          *(void *)(v69 + 4) = sub_1000DF238(v71, v70, &v80);
          swift_bridgeObjectRelease();
          swift_release_n();
          _os_log_impl((void *)&_mh_execute_header, v66, v67, "%s Cancelling main task group", (uint8_t *)v69, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_release_n();
        }
        sub_100003918(&qword_10020E1D8);
        sub_1001C0F00();
        swift_errorRelease();
        sub_10015EC44(v1, v2);
        *(void *)(v0 + 448) = v1;
        uint64_t v1 = *(void *)(v0 + 456);
        uint64_t v72 = *(void *)(v0 + 464);
LABEL_62:
        *(void *)(v0 + 456) = v1;
        uint64_t v1 = v72;
LABEL_63:
        *(void *)(v0 + 464) = v1;
      }
      else
      {
        swift_retain_n();
        uint64_t v7 = sub_1001C0330();
        os_log_type_t v8 = sub_1001C1200();
        if (os_log_type_enabled(v7, v8))
        {
          uint64_t v9 = (uint64_t *)(*(void *)(v0 + 192) + *(void *)(v0 + 440));
          uint64_t v10 = swift_slowAlloc();
          uint64_t v80 = swift_slowAlloc();
          *(_DWORD *)uint64_t v10 = 136315138;
          uint64_t v12 = *v9;
          unint64_t v11 = v9[1];
          swift_bridgeObjectRetain();
          *(void *)(v10 + 4) = sub_1000DF238(v12, v11, &v80);
          swift_bridgeObjectRelease();
          swift_release_n();
          unint64_t v13 = "%s Ropes request finished successfully";
LABEL_16:
          _os_log_impl((void *)&_mh_execute_header, v7, v8, v13, (uint8_t *)v10, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          sub_10015EC44(v1, v2);
        }
        else
        {
LABEL_19:

          sub_10015EC44(v1, v2);
LABEL_47:
          swift_release_n();
        }
      }
LABEL_64:
      unint64_t v73 = (void *)swift_task_alloc();
      *(void *)(v0 + 472) = v73;
      uint64_t v74 = sub_100003918(&qword_10020E248);
      *unint64_t v73 = v0;
      v73[1] = sub_100114A98;
      uint64_t result = TaskGroup.next(isolation:)(v0 + 128, 0, 0, v74);
      break;
  }
  return result;
}

uint64_t sub_100115DFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = v4;
  uint64_t v156 = a3;
  uint64_t v159 = a2;
  uint64_t v160 = a1;
  uint64_t v158 = a4;
  uint64_t v152 = type metadata accessor for ValidatedAttestation();
  __chkstk_darwin(v152, v7);
  uint64_t v151 = (uint64_t)&v143 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = type metadata accessor for ValidatedAttestationOrAttestation();
  uint64_t v153 = *(void *)(v154 - 8);
  uint64_t v10 = __chkstk_darwin(v154, v9);
  uint64_t v155 = (uint64_t)&v143 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v12);
  unint64_t v161 = (char *)&v143 - v13;
  uint64_t v169 = (void *)sub_1001C0820();
  uint64_t v166 = *(v169 - 1);
  uint64_t v15 = __chkstk_darwin(v169, v14);
  uint64_t v163 = (char *)&v143 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v17);
  Swift::String v162 = (char *)&v143 - v18;
  uint64_t v167 = sub_1001C03B0();
  uint64_t v165 = *(void *)(v167 - 8);
  uint64_t v20 = __chkstk_darwin(v167, v19);
  Swift::String v157 = (char *)&v143 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v20, v22);
  uint64_t v170 = (char *)&v143 - v24;
  __chkstk_darwin(v23, v25);
  uint64_t v182 = (char *)&v143 - v26;
  uint64_t v27 = sub_1001C0C30();
  __chkstk_darwin(v27 - 8, v28);
  uint64_t v29 = v4 + qword_10021F8E8;
  uint64_t v30 = sub_1001BF940();
  uint64_t v31 = v6 + qword_10021F8E0;
  uint64_t v32 = type metadata accessor for TrustedRequestConfiguration();
  uint64_t v33 = *(void *)(v31 + *(int *)(v32 + 68));
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v34 = sub_10015A0C0(v30, v33, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v172 = v34;
  sub_100003918(&qword_100208930);
  sub_10015DB68();
  uint64_t v35 = sub_1001BEDF0();
  unint64_t v37 = v36;
  uint64_t result = swift_release();
  if (!v5)
  {
    uint64_t v164 = v29;
    uint64_t v168 = (int *)v32;
    uint64_t v171 = v31;
    uint64_t v147 = 0;
    sub_1001C0C20();
    uint64_t v145 = v35;
    unint64_t v146 = v37;
    uint64_t v39 = sub_1001C0C10();
    if (v40) {
      uint64_t v41 = v39;
    }
    else {
      uint64_t v41 = 0;
    }
    uint64_t v149 = v41;
    unint64_t v42 = 0xE000000000000000;
    if (v40) {
      unint64_t v42 = v40;
    }
    unint64_t v148 = v42;
    sub_100003918(&qword_10020E6D0);
    uint64_t v43 = sub_100003918(&qword_10020E6D8);
    uint64_t v44 = *(void *)(*(void *)(v43 - 8) + 72);
    unint64_t v45 = (*(unsigned __int8 *)(*(void *)(v43 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v43 - 8) + 80);
    uint64_t v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = xmmword_1001D3C30;
    uint64_t v150 = v46;
    unint64_t v47 = v46 + v45;
    uint64_t v48 = (uint64_t *)(v47 + *(int *)(v43 + 48));
    if (qword_100207990 != -1) {
      swift_once();
    }
    uint64_t v49 = (uint64_t)v169;
    uint64_t v50 = sub_10000D978((uint64_t)v169, (uint64_t)qword_10021FF38);
    uint64_t v51 = v166 + 16;
    os_log_type_t v52 = *(void (**)(unint64_t, uint64_t, uint64_t))(v166 + 16);
    v52(v47, v50, v49);
    *uint64_t v48 = sub_1001BF2D0();
    v48[1] = v53;
    uint64_t v54 = (void *)(v47 + v44 + *(int *)(v43 + 48));
    if (qword_100207998 != -1) {
      swift_once();
    }
    uint64_t v55 = sub_10000D978(v49, (uint64_t)qword_10021FF50);
    v52(v47 + v44, v55, v49);
    uint64_t v56 = *(void *)(*(void *)v6 + 304);
    uint64_t v144 = v6;
    uint64_t v57 = v6 + v56;
    uint64_t v58 = *(void *)(v57 + 152);
    *uint64_t v54 = *(void *)(v57 + 144);
    v54[1] = v58;
    uint64_t v59 = (uint64_t *)(v47 + 2 * v44 + *(int *)(v43 + 48));
    uint64_t v60 = qword_1002079A0;
    swift_bridgeObjectRetain();
    if (v60 != -1) {
      swift_once();
    }
    uint64_t v61 = sub_10000D978(v49, (uint64_t)qword_10021FF68);
    v52(v47 + 2 * v44, v61, v49);
    uint64_t *v59 = sub_1001BF930();
    v59[1] = v62;
    uint64_t v63 = (uint64_t *)(v47 + 3 * v44 + *(int *)(v43 + 48));
    if (qword_1002079A8 != -1) {
      swift_once();
    }
    uint64_t v64 = sub_10000D978(v49, (uint64_t)qword_10021FF80);
    v52(v47 + 3 * v44, v64, v49);
    unint64_t v65 = v148;
    *uint64_t v63 = v149;
    v63[1] = v65;
    if (qword_1002079B0 != -1) {
      swift_once();
    }
    uint64_t v66 = sub_10000D978(v49, (uint64_t)qword_10021FF98);
    os_log_type_t v67 = v52;
    v52(v47 + 4 * v44, v66, v49);
    uint64_t v68 = v168;
    if (*(unsigned char *)(v171 + v168[26]))
    {
      if (*(unsigned char *)(v171 + v168[26]) == 1)
      {
        unint64_t v69 = 0xE300000000000000;
        uint64_t v70 = 7827308;
      }
      else
      {
        unint64_t v69 = 0xEA0000000000646ELL;
        uint64_t v70 = 0x756F72676B636162;
      }
    }
    else
    {
      unint64_t v69 = 0xE400000000000000;
      uint64_t v70 = 1751607656;
    }
    uint64_t v71 = (uint64_t *)(v47 + 4 * v44 + *(int *)(v43 + 48));
    *uint64_t v71 = v70;
    v71[1] = v69;
    uint64_t v72 = (void *)(v47 + 5 * v44 + *(int *)(v43 + 48));
    if (qword_1002079C0 != -1) {
      swift_once();
    }
    uint64_t v73 = (uint64_t)v169;
    uint64_t v74 = sub_10000D978((uint64_t)v169, (uint64_t)qword_10021FFC8);
    v67(v47 + 5 * v44, v74, v73);
    unint64_t v75 = (void *)(v171 + v68[20]);
    uint64_t v76 = v75[1];
    *uint64_t v72 = *v75;
    v72[1] = v76;
    int v77 = (uint64_t *)(v47 + 6 * v44 + *(int *)(v43 + 48));
    uint64_t v78 = qword_1002079C8;
    swift_bridgeObjectRetain();
    if (v78 != -1) {
      swift_once();
    }
    uint64_t v79 = sub_10000D978(v73, (uint64_t)qword_10021FFE0);
    uint64_t v164 = v51;
    v67(v47 + 6 * v44, v79, v73);
    uint64_t v172 = v159;
    *int v77 = sub_1001C1780();
    v77[1] = v80;
    uint64_t v81 = (void *)(v47 + 7 * v44 + *(int *)(v43 + 48));
    sub_1001C07E0();
    *uint64_t v81 = 0xD000000000000011;
    v81[1] = 0x80000001001C6900;
    uint64_t v82 = (void *)(v47 + 8 * v44 + *(int *)(v43 + 48));
    sub_1001C0810();
    *uint64_t v82 = 0xD000000000000014;
    v82[1] = 0x80000001001D3CA0;
    uint64_t v83 = (uint64_t)v67;
    unint64_t v84 = (uint64_t *)(v47 + 9 * v44 + *(int *)(v43 + 48));
    sub_1001C07F0();
    uint64_t v172 = 0;
    unint64_t v173 = 0xE000000000000000;
    sub_1001C1420(23);
    swift_bridgeObjectRelease();
    uint64_t v172 = 0xD000000000000014;
    unint64_t v173 = 0x80000001001C6920;
    uint64_t v180 = sub_1001BF170(0);
    unint64_t v181 = v85;
    uint64_t v178 = 43;
    unint64_t v179 = 0xE100000000000000;
    uint64_t v176 = 45;
    unint64_t v177 = 0xE100000000000000;
    sub_10001A364();
    uint64_t v86 = sub_1001C1350();
    unint64_t v88 = v87;
    swift_bridgeObjectRelease();
    uint64_t v180 = v86;
    unint64_t v181 = v88;
    uint64_t v178 = 47;
    unint64_t v179 = 0xE100000000000000;
    uint64_t v176 = 95;
    unint64_t v177 = 0xE100000000000000;
    uint64_t v89 = sub_1001C1350();
    unint64_t v91 = v90;
    swift_bridgeObjectRelease();
    uint64_t v180 = v89;
    unint64_t v181 = v91;
    uint64_t v178 = 61;
    unint64_t v179 = 0xE100000000000000;
    Swift::String v92 = (void (*)(void, void, void))v169;
    uint64_t v176 = 0;
    unint64_t v177 = 0xE000000000000000;
    uint64_t v93 = sub_1001C1350();
    uint64_t v95 = v94;
    swift_bridgeObjectRelease();
    v183._uint64_t countAndFlagsBits = v93;
    v183._object = v95;
    sub_1001C0D00(v183);
    swift_bridgeObjectRelease();
    v184._uint64_t countAndFlagsBits = 34;
    v184._object = (void *)0xE100000000000000;
    sub_1001C0D00(v184);
    unint64_t v96 = v173;
    *unint64_t v84 = v172;
    v84[1] = v96;
    sub_1001C03A0();
    uint64_t v97 = v167;
    uint64_t v99 = (uint64_t)v161;
    uint64_t v98 = v162;
    if (*(void *)(v171 + v168[21] + 8))
    {
      uint64_t v100 = qword_1002079B8;
      swift_bridgeObjectRetain();
      if (v100 != -1) {
        swift_once();
      }
      uint64_t v101 = sub_10000D978((uint64_t)v92, (uint64_t)qword_10021FFB0);
      ((void (*)(char *, uint64_t, void))v83)(v98, v101, v92);
      sub_1001C03D0();
    }
    id v102 = [self automatedDeviceGroup];
    if (v102)
    {
      uint64_t v103 = v102;
      sub_1001C0BF0();

      if (qword_1002079D0 != -1) {
        swift_once();
      }
      uint64_t v104 = sub_10000D978((uint64_t)v92, (uint64_t)qword_10021FFF8);
      ((void (*)(char *, uint64_t, void))v83)(v98, v104, v92);
      sub_1001C03D0();
    }
    uint64_t v106 = v170;
    uint64_t v105 = v171;
    if (*(void *)(v171 + v168[18] + 8))
    {
      uint64_t v107 = qword_1002079D8;
      swift_bridgeObjectRetain();
      if (v107 != -1) {
        swift_once();
      }
      uint64_t v108 = sub_10000D978((uint64_t)v92, (uint64_t)qword_100220010);
      ((void (*)(char *, uint64_t, void))v83)(v98, v108, v92);
      sub_1001C03D0();
      uint64_t v105 = v171;
    }
    if (*(void *)(v105 + v168[19] + 8))
    {
      uint64_t v109 = qword_1002079E0;
      swift_bridgeObjectRetain();
      if (v109 != -1) {
        swift_once();
      }
      uint64_t v110 = sub_10000D978((uint64_t)v92, (uint64_t)qword_100220028);
      ((void (*)(char *, uint64_t, void))v83)(v98, v110, v92);
      sub_1001C03D0();
      uint64_t v105 = v171;
    }
    if (!*(void *)(v105 + 32))
    {
      uint64_t v115 = v163;
      uint64_t v113 = v182;
      if (*(void *)(v156 + 16))
      {
        sub_100161F3C(v156 + ((*(unsigned __int8 *)(v153 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v153 + 80)), v99, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
        uint64_t v138 = v155;
        sub_100161F3C(v99, v155, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_10016290C(v138, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
          sub_10016290C(v99, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
          uint64_t v113 = v182;
        }
        else
        {
          uint64_t v139 = v138;
          uint64_t v140 = v151;
          sub_1001627E8(v139, v151, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
          uint64_t v141 = *(void *)(v140 + *(int *)(v152 + 32) + 8);
          swift_bridgeObjectRetain();
          sub_10016290C(v140, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
          if (v141)
          {
            if (qword_1002079E8 != -1) {
              goto LABEL_65;
            }
            goto LABEL_62;
          }
          sub_10016290C(v99, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
          uint64_t v115 = v163;
          uint64_t v113 = v182;
        }
      }
      goto LABEL_49;
    }
    uint64_t v111 = qword_1002079E8;
    swift_bridgeObjectRetain();
    if (v111 != -1) {
      swift_once();
    }
    uint64_t v112 = sub_10000D978((uint64_t)v92, (uint64_t)qword_100220040);
    ((void (*)(char *, uint64_t, void))v83)(v98, v112, v92);
    uint64_t v113 = v182;
    sub_1001C03D0();
    if (qword_1002079F0 != -1) {
      swift_once();
    }
    uint64_t v114 = sub_10000D978((uint64_t)v92, (uint64_t)qword_100220058);
    ((void (*)(char *, uint64_t, void))v83)(v98, v114, v92);
    sub_1001C03D0();
    while (1)
    {
      uint64_t v115 = v163;
LABEL_49:
      uint64_t v116 = v92;
      uint64_t v99 = v165 + 16;
      Swift::String v92 = *(void (**)(void, void, void))(v165 + 16);
      v92(v106, v113, v97);
      sub_1001C07F0();
      sub_1001C03C0();
      uint64_t v118 = v117;
      (*(void (**)(char *, void (*)(void, void, void)))(v166 + 8))(v115, v116);
      if (!v118) {
        break;
      }
      uint64_t v83 = 0x3E2E2E2E3CLL;
      sub_1001C07F0();
      uint64_t v119 = sub_10018C404(32);
      uint64_t v106 = v120;
      uint64_t v97 = v121;
      uint64_t v123 = v122;
      swift_bridgeObjectRelease();
      uint64_t v180 = 0;
      unint64_t v181 = 0xE000000000000000;
      uint64_t v124 = sub_1001C0CC0();
      uint64_t v125 = sub_1001C1300();
      BOOL v126 = __OFADD__(v124, v125);
      Swift::Int v127 = v124 + v125;
      if (!v126)
      {
        sub_1001C0C80(v127);
        uint64_t v172 = v119;
        unint64_t v173 = (unint64_t)v106;
        uint64_t v174 = v97;
        uint64_t v175 = v123;
        sub_100162850();
        sub_1001C0CF0();
        uint64_t v172 = 0x3E2E2E2E3CLL;
        unint64_t v173 = 0xE500000000000000;
        sub_1001C0CF0();
        swift_bridgeObjectRelease();
        uint64_t v106 = v170;
        sub_1001C03D0();
        uint64_t v97 = v167;
        break;
      }
      __break(1u);
LABEL_65:
      swift_once();
LABEL_62:
      uint64_t v142 = sub_10000D978((uint64_t)v92, (uint64_t)qword_100220040);
      ((void (*)(char *, uint64_t, void))v83)(v98, v142, v92);
      uint64_t v113 = v182;
      sub_1001C03D0();
      sub_10016290C(v99, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
    }
    uint64_t v128 = v144;
    swift_retain_n();
    uint64_t v129 = sub_1001C0330();
    os_log_type_t v130 = sub_1001C1200();
    if (os_log_type_enabled(v129, v130))
    {
      uint64_t v131 = swift_slowAlloc();
      uint64_t v180 = swift_slowAlloc();
      *(_DWORD *)uint64_t v131 = 136315394;
      unsigned int v132 = (uint64_t *)(v128 + *(void *)(*(void *)v128 + 368));
      uint64_t v133 = *v132;
      unint64_t v134 = v132[1];
      swift_bridgeObjectRetain();
      uint64_t v172 = sub_1000DF238(v133, v134, &v180);
      sub_1001C1310();
      swift_release_n();
      uint64_t v97 = v167;
      swift_bridgeObjectRelease();
      *(_WORD *)(v131 + 12) = 2080;
      swift_beginAccess();
      v92(v157, v170, v97);
      uint64_t v135 = sub_1001C0C40();
      uint64_t v178 = sub_1000DF238(v135, v136, &v180);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v129, v130, "%s sending headers: %s", (uint8_t *)v131, 0x16u);
      swift_arrayDestroy();
      uint64_t v106 = v170;
      swift_slowDealloc();
      swift_slowDealloc();
      sub_10000792C(v145, v146);
    }
    else
    {
      sub_10000792C(v145, v146);
      swift_release_n();
    }

    uint64_t v137 = v165;
    (*(void (**)(uint64_t, char *, uint64_t))(v165 + 32))(v158, v182, v97);
    return (*(uint64_t (**)(char *, uint64_t))(v137 + 8))(v106, v97);
  }
  return result;
}

uint64_t sub_1001171B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a2;
  v8[5] = a3;
  v8[3] = a1;
  sub_100003918(&qword_10020C3B0);
  v8[10] = swift_task_alloc();
  v8[11] = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest(0);
  v8[12] = swift_task_alloc();
  uint64_t v10 = sub_1001C03B0();
  v8[13] = v10;
  v8[14] = *(void *)(v10 - 8);
  v8[15] = swift_task_alloc();
  sub_1001C0440();
  v8[16] = swift_task_alloc();
  uint64_t v11 = sub_1001C0460();
  v8[17] = v11;
  v8[18] = *(void *)(v11 - 8);
  v8[19] = swift_task_alloc();
  v8[2] = a4;
  return _swift_task_switch(sub_100117370, 0, 0);
}

uint64_t sub_100117370()
{
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v11 = v0[12];
  uint64_t v9 = v0[9];
  uint64_t v4 = v0[3];
  uint64_t v10 = v0[4];
  sub_1001C0430();
  type metadata accessor for TrustedRequestConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001C0450();
  uint64_t v5 = swift_task_alloc();
  *(void *)(v5 + 16) = v9;
  *(void *)(v5 + 24) = v10;
  sub_1001627A0(&qword_10020A760, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest);
  sub_1001C0060();
  swift_task_dealloc();
  v0[20] = sub_10015AE7C(v11, (void (*)(void))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest, &qword_10020A760, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest);
  v0[21] = v6;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[22] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_100117660;
  return sub_100119E18();
}

uint64_t sub_100117660()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10011775C, 0, 0);
}

uint64_t sub_10011775C()
{
  long long v6 = *(_OWORD *)(v0 + 160);
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 184) = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v0 + 16;
  *(_OWORD *)(v3 + 32) = v6;
  *(void *)(v3 + 48) = v1;
  uint64_t v7 = (uint64_t (*)(uint64_t, int *))((char *)&dword_10020E598 + dword_10020E598);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100117870;
  return v7((uint64_t)v7, (int *)&unk_10020E590);
}

uint64_t sub_100117870()
{
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100117BEC;
  }
  else {
    uint64_t v2 = sub_1001179A4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001179A4()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[7];
  uint64_t v3 = sub_1001C0FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v1, 1, 1, v3);
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = 0;
  v4[3] = 0;
  v4[4] = v2;
  swift_retain();
  sub_1001A1CC0(v1, (uint64_t)&unk_10020E5A0, (uint64_t)v4);
  swift_release();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[26] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100117AD8;
  uint64_t v6 = v0[8];
  uint64_t v8 = v0[5];
  uint64_t v7 = v0[6];
  return sub_10011C5B0(v8, v7, v6);
}

uint64_t sub_100117AD8()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100117DE4;
  }
  else {
    uint64_t v2 = sub_100117CE8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100117BEC()
{
  uint64_t v2 = v0[18];
  uint64_t v1 = v0[19];
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[12];
  uint64_t v5 = v0[9];
  sub_10000792C(v0[20], v0[21]);
  sub_10016290C(v4, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_10012AC40(v5, "%s Finished root connection subtask");
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_100117CE8()
{
  uint64_t v2 = v0[18];
  uint64_t v1 = v0[19];
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[12];
  uint64_t v5 = v0[9];
  sub_10000792C(v0[20], v0[21]);
  sub_10016290C(v4, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_10012AC40(v5, "%s Finished root connection subtask");
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_100117DE4()
{
  uint64_t v2 = v0[18];
  uint64_t v1 = v0[19];
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[12];
  uint64_t v5 = v0[9];
  sub_10000792C(v0[20], v0[21]);
  sub_10016290C(v4, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_10012AC40(v5, "%s Finished root connection subtask");
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_100117EE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_100003918(&qword_10020C3B0);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(a1, (uint64_t)v11, &qword_10020C3B0);
  uint64_t v12 = sub_1001C0FC0();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_100010360((uint64_t)v11, &qword_10020C3B0);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v14 = sub_1001C0EA0();
      uint64_t v16 = v15;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1001C0FB0();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v14 = 0;
  uint64_t v16 = 0;
LABEL_6:
  uint64_t v17 = *v4;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a2;
  *(void *)(v18 + 24) = a3;
  sub_100003918(&qword_10020E1D8);
  uint64_t v19 = (void *)(v16 | v14);
  if (v16 | v14)
  {
    v22[0] = 0;
    v22[1] = 0;
    uint64_t v19 = v22;
    void v22[2] = v14;
    v22[3] = v16;
  }
  v21[1] = 1;
  v21[2] = v19;
  void v21[3] = v17;
  swift_task_create();
  return swift_release();
}

uint64_t sub_1001180F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a3;
  v6[3] = a4;
  uint64_t v9 = (uint64_t (*)(uint64_t))((char *)&dword_10020EE28 + dword_10020EE28);
  uint64_t v7 = (void *)swift_task_alloc();
  v6[6] = v7;
  *uint64_t v7 = v6;
  v7[1] = sub_10011819C;
  return v9((uint64_t)v9);
}

uint64_t sub_10011819C()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1001185AC;
  }
  else {
    uint64_t v2 = sub_1001182B0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001182B0()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = qword_10021F8E0;
  uint64_t v3 = *(int *)(type metadata accessor for TrustedRequestConfiguration() + 100);
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v0 + 24);
  uint64_t v6 = (uint64_t *)(*(void *)(v0 + 24) + v3 + v2);
  uint64_t v7 = *v6;
  *(void *)(v0 + 64) = *v6;
  unint64_t v8 = v6[1];
  *(void *)(v0 + 72) = v8;
  *(void *)(v0 + 80) = v4;
  *(_OWORD *)(v4 + 16) = v5;
  *(void *)(v4 + 32) = v1;
  uint64_t v9 = swift_task_alloc();
  *(void *)(v0 + 88) = v9;
  *(void *)(v9 + 16) = &unk_10020E458;
  *(void *)(v9 + 24) = v4;
  sub_100007B14(v7, v8);
  uint64_t v12 = (uint64_t (*)(void))((char *)&dword_10020E470 + dword_10020E470);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v10;
  void *v10 = v0;
  v10[1] = sub_100118404;
  return v12();
}

uint64_t sub_100118404()
{
  unint64_t v2 = *(void *)(*(void *)v1 + 72);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  sub_10000792C(v3, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  if (v0) {
    uint64_t v4 = sub_100118594;
  }
  else {
    uint64_t v4 = sub_100036354;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_100118594()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001185AC()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001185C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[4] = a2;
  v4[2] = a1;
  return _swift_task_switch(sub_1001185EC, 0, 0);
}

uint64_t sub_1001185EC()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  *(unsigned char *)(v0 + 152) = 0;
  uint64_t v3 = swift_allocObject();
  *(void *)(v0 + 56) = v3;
  *(void *)(v3 + 16) = 0x10000;
  *(void *)(v0 + 64) = *(void *)(v1 + *(void *)(*(void *)v1 + 344));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v4;
  v4[2] = v1;
  v4[3] = v2;
  v4[4] = v3;
  v4[5] = v0 + 16;
  uint64_t v7 = (uint64_t (*)(void))((char *)&dword_10020E490 + dword_10020E490);
  long long v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v5;
  *long long v5 = v0;
  v5[1] = sub_10011871C;
  return v7();
}

uint64_t sub_10011871C()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1001189CC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100118838;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100118838()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  *(unsigned char *)(v0 + 153) = 0;
  uint64_t v3 = *(void *)(v1 + *(void *)(*(void *)v1 + 256));
  uint64_t v4 = OBJC_IVAR____TtC20privatecloudcomputed22OutgoingUserDataWriter_waiterIDGenerator;
  *(void *)(v0 + 96) = v3;
  *(void *)(v0 + 104) = v4;
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v6 = (atomic_ullong *)(v3 + v4);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v7;
  v7[2] = v1;
  v7[3] = v0 + 153;
  v7[4] = v0 + 16;
  v7[5] = v0 + 152;
  v7[6] = v2;
  v7[7] = v5;
  unint64_t add_explicit = atomic_fetch_add_explicit(v6, 1uLL, memory_order_relaxed);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v9;
  v9[2] = v3;
  v9[3] = add_explicit;
  v9[4] = &unk_10020E4A8;
  v9[5] = v7;
  uint64_t v10 = swift_task_alloc();
  *(void *)(v0 + 128) = v10;
  *(void *)(v10 + 16) = v3;
  *(void *)(v10 + 24) = add_explicit;
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_100118A3C;
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v11, &unk_10020E4B0, v9, sub_1000F905C, v10, 0, 0, (char *)&type metadata for () + 8);
}

uint64_t sub_1001189CC()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100118A3C()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100118E9C;
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = sub_100118B6C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100118B6C()
{
  uint64_t v22 = v0;
  if (*(unsigned char *)(v0 + 153) == 1)
  {
    swift_retain_n();
    uint64_t v1 = sub_1001C0330();
    os_log_type_t v2 = sub_1001C1200();
    BOOL v3 = os_log_type_enabled(v1, v2);
    uint64_t v4 = *(void *)(v0 + 48);
    if (v3)
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 136315138;
      uint64_t v6 = (uint64_t *)(v4 + *(void *)(*(void *)v4 + 368));
      uint64_t v8 = *v6;
      unint64_t v7 = v6[1];
      swift_bridgeObjectRetain();
      *(void *)(v0 + 24) = sub_1000DF238(v8, v7, &v21);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s Finished sending all user data", v5, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    sub_10012AA50();
    swift_release();
    uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
    return v19();
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 96);
    uint64_t v11 = *(void *)(v0 + 48);
    uint64_t v10 = *(void *)(v0 + 56);
    uint64_t v12 = *(void *)(v0 + 32);
    uint64_t v13 = (atomic_ullong *)(v9 + *(void *)(v0 + 104));
    uint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v14;
    v14[2] = v11;
    v14[3] = v0 + 153;
    v14[4] = v0 + 16;
    v14[5] = v0 + 152;
    v14[6] = v10;
    v14[7] = v12;
    unint64_t add_explicit = atomic_fetch_add_explicit(v13, 1uLL, memory_order_relaxed);
    uint64_t v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 120) = v16;
    void v16[2] = v9;
    v16[3] = add_explicit;
    v16[4] = &unk_10020E4A8;
    v16[5] = v14;
    uint64_t v17 = swift_task_alloc();
    *(void *)(v0 + 128) = v17;
    *(void *)(v17 + 16) = v9;
    *(void *)(v17 + 24) = add_explicit;
    uint64_t v18 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v18;
    void *v18 = v0;
    v18[1] = sub_100118A3C;
    return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v18, &unk_10020E4B0, v16, sub_1000F905C, v17, 0, 0, (char *)&type metadata for () + 8);
  }
}

uint64_t sub_100118E9C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100118F28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[95] = v3;
  v4[94] = a3;
  v4[93] = a2;
  v4[87] = a1;
  uint64_t v5 = sub_100003918(&qword_10020E260);
  v4[96] = v5;
  v4[97] = *(void *)(v5 - 8);
  v4[98] = swift_task_alloc();
  uint64_t v6 = sub_100003918(&qword_10020E268);
  v4[99] = v6;
  v4[100] = *(void *)(v6 - 8);
  v4[101] = swift_task_alloc();
  v4[102] = swift_task_alloc();
  uint64_t v7 = sub_100003918(&qword_10020E270);
  v4[103] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v4[104] = v8;
  v4[105] = *(void *)(v8 + 64);
  v4[106] = swift_task_alloc();
  v4[107] = swift_task_alloc();
  return _swift_task_switch(sub_1001190E0, 0, 0);
}

uint64_t sub_1001190E0()
{
  uint64_t v1 = *(void *)(v0 + 856);
  uint64_t v19 = *(void *)(v0 + 848);
  uint64_t v20 = *(void *)(v0 + 840);
  uint64_t v2 = *(void *)(v0 + 832);
  uint64_t v18 = *(void *)(v0 + 824);
  uint64_t v3 = *(void *)(v0 + 816);
  uint64_t v4 = *(void *)(v0 + 808);
  uint64_t v5 = *(void *)(v0 + 800);
  uint64_t v6 = *(void *)(v0 + 792);
  uint64_t v7 = *(void *)(v0 + 784);
  uint64_t v8 = *(void *)(v0 + 776);
  uint64_t v9 = *(void *)(v0 + 768);
  uint64_t v21 = *(void *)(v0 + 760);
  uint64_t v24 = *(void *)(v0 + 696);
  long long v22 = *(_OWORD *)(v0 + 744);
  (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v7, enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:), v9);
  sub_1001C0FD0();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  uint64_t v10 = v3;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v3, v4, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v19, v1, v18);
  unint64_t v11 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))(v12 + v11, v19, v18);
  *(void *)(v12 + ((v20 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v21;
  uint64_t v13 = swift_allocObject();
  *(void *)(v0 + 864) = v13;
  *(void *)(v13 + 16) = &unk_10020E280;
  *(void *)(v13 + 24) = v12;
  swift_retain();
  swift_asyncLet_begin();
  uint64_t v14 = sub_100003918(&qword_10020E298);
  uint64_t v15 = swift_task_alloc();
  *(void *)(v0 + 872) = v15;
  *(void *)(v15 + 16) = v24;
  *(void *)(v15 + 24) = v21;
  *(void *)(v15 + 32) = v10;
  *(_OWORD *)(v15 + 40) = v22;
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 880) = v16;
  void *v16 = v0;
  v16[1] = sub_1001193B8;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)(v16, v14, (char *)&type metadata for () + 8, 0, 0, &unk_10020E2A8, v15, v14);
}

uint64_t sub_1001193B8()
{
  *(void *)(*(void *)v1 + 888) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100119680;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1001194D4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001194D4()
{
  sub_1001C0FF0();
  return _swift_asyncLet_finish(v0 + 16, v1, sub_100119550, v0 + 704);
}

uint64_t sub_100119550()
{
  return _swift_task_switch(sub_10011956C, 0, 0);
}

uint64_t sub_10011956C()
{
  uint64_t v1 = v0[102];
  uint64_t v2 = v0[100];
  uint64_t v3 = v0[99];
  uint64_t v4 = v0[95];
  (*(void (**)(void, void))(v0[104] + 8))(v0[107], v0[103]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_10012AC40(v4, "%s Leaving runNodesStreams");
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100119680()
{
  swift_task_dealloc();
  sub_1001C0FF0();
  return _swift_asyncLet_finish(v0 + 16, v1, sub_100119708, v0 + 656);
}

uint64_t sub_100119708()
{
  return _swift_task_switch(sub_100119724, 0, 0);
}

uint64_t sub_100119724()
{
  uint64_t v1 = v0[102];
  uint64_t v2 = v0[100];
  uint64_t v3 = v0[99];
  uint64_t v4 = v0[95];
  (*(void (**)(void, void))(v0[104] + 8))(v0[107], v0[103]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_10012AC40(v4, "%s Leaving runNodesStreams");
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

void sub_100119838()
{
  uint64_t v1 = sub_1001C14C0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001C14E0();
  sub_1001627A0(&qword_100208C80, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  sub_1001C18D0();
  sub_1001627A0(&qword_100208C88, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
  sub_1001C1500();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v5, v1);
  long long v9 = v10;
  uint64_t v6 = (os_unfair_lock_s *)(v0 + *(void *)(*(void *)v0 + 128));
  os_unfair_lock_lock(v6);
  uint64_t v7 = sub_100003918(&qword_100208C90);
  sub_10015F54C((uint32_t *)((char *)&v6->_os_unfair_lock_opaque + *(int *)(v7 + 28)));
  os_unfair_lock_unlock(v6);
}

void sub_100119A28(uint64_t a1)
{
  uint64_t v3 = sub_1001C14C0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001C14E0();
  sub_1001627A0(&qword_100208C80, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  sub_1001C18D0();
  sub_1001627A0(&qword_100208C88, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
  sub_1001C1500();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
  long long v12 = v14;
  uint64_t v13 = a1;
  uint64_t v8 = (os_unfair_lock_s *)(v1 + *(void *)(*(void *)v1 + 128));
  os_unfair_lock_lock(v8);
  uint64_t v9 = sub_100003918(&qword_100208C90);
  sub_10015F520((uint64_t)v8 + *(int *)(v9 + 28), v10);
  os_unfair_lock_unlock(v8);
}

void sub_100119C20(uint64_t a1)
{
  uint64_t v3 = sub_1001C14C0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001C14E0();
  sub_1001627A0(&qword_100208C80, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  sub_1001C18D0();
  sub_1001627A0(&qword_100208C88, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
  sub_1001C1500();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
  long long v11 = v13;
  uint64_t v12 = a1;
  uint64_t v8 = (os_unfair_lock_s *)(v1 + *(void *)(*(void *)v1 + 128));
  os_unfair_lock_lock(v8);
  uint64_t v9 = sub_100003918(&qword_100208C90);
  sub_10015F56C((uint32_t *)((char *)&v8->_os_unfair_lock_opaque + *(int *)(v9 + 28)));
  os_unfair_lock_unlock(v8);
}

uint64_t sub_100119E18()
{
  v1[9] = v0;
  uint64_t v2 = sub_1001BF2C0();
  v1[10] = v2;
  v1[11] = *(void *)(v2 - 8);
  v1[12] = swift_task_alloc();
  uint64_t v3 = sub_1001BF950();
  v1[13] = v3;
  v1[14] = *(void *)(v3 - 8);
  v1[15] = swift_task_alloc();
  v1[16] = type metadata accessor for TrustedRequestConfiguration();
  v1[17] = swift_task_alloc();
  return _swift_task_switch(sub_100119F64, 0, 0);
}

uint64_t sub_100119F64()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v4 = v0[14];
  uint64_t v3 = v0[15];
  uint64_t v5 = v0[13];
  uint64_t v6 = v0[9];
  uint64_t v26 = v6 + qword_10021F8E0;
  sub_100161F3C(v6 + qword_10021F8E0, v2, (uint64_t (*)(void))type metadata accessor for TrustedRequestConfiguration);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6 + qword_10021F8E8, v5);
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(v1 + 80));
  uint64_t v8 = v7[1];
  uint64_t v25 = *v7;
  v0[18] = v8;
  uint64_t v9 = (uint64_t *)(v2 + *(int *)(v1 + 84));
  if (v9[1])
  {
    uint64_t v24 = *v9;
    unint64_t v10 = v9[1];
  }
  else
  {
    uint64_t v24 = 0;
    unint64_t v10 = 0xE000000000000000;
  }
  v0[19] = v10;
  uint64_t v11 = v0[15];
  uint64_t v23 = v0[16];
  uint64_t v13 = v0[13];
  uint64_t v12 = v0[14];
  uint64_t v22 = v0[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1001BF930();
  uint64_t v16 = v15;
  v0[20] = v15;
  uint64_t v17 = sub_1001BF940();
  v0[21] = v17;
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  sub_10016290C(v22, (uint64_t (*)(void))type metadata accessor for TrustedRequestConfiguration);
  v0[2] = v25;
  v0[3] = v8;
  v0[4] = v24;
  v0[5] = v10;
  v0[6] = v14;
  v0[7] = v16;
  v0[8] = v17;
  uint64_t v18 = v26 + *(int *)(v23 + 88);
  _s20privatecloudcomputed8LRUCacheC10addToCache3now5valueSb10Foundation4DateV_xtFfA__0();
  uint64_t v19 = (void *)swift_task_alloc();
  v0[22] = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_10011A188;
  uint64_t v20 = v0[12];
  return sub_100097064((uint64_t)(v0 + 2), v18, v20);
}

uint64_t sub_10011A188()
{
  uint64_t v1 = *(void *)(*v0 + 96);
  uint64_t v2 = *(void *)(*v0 + 88);
  uint64_t v3 = *(void *)(*v0 + 80);
  uint64_t v6 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v6 + 8);
  return v4();
}

void *sub_10011A3A0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v2 = a1;
  sub_10018F248(0, v1, 0);
  uint64_t result = (void *)sub_1001569C4(v2);
  uint64_t v5 = (uint64_t)result;
  uint64_t v6 = 0;
  uint64_t v7 = v2 + 64;
  uint64_t v24 = v2 + 80;
  int64_t v25 = v1;
  int v26 = v4;
  uint64_t v27 = v2 + 64;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(v2 + 32))
  {
    unint64_t v10 = (unint64_t)v5 >> 6;
    if ((*(void *)(v7 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(v2 + 36) != v4) {
      goto LABEL_24;
    }
    uint64_t v28 = v6;
    uint64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v5);
    uint64_t v12 = v11[1];
    uint64_t v13 = (uint64_t *)(*(void *)(v2 + 56) + 16 * v5);
    uint64_t v14 = v13[1];
    uint64_t v29 = *v11;
    uint64_t v30 = *v13;
    uint64_t v15 = v2;
    unint64_t v17 = _swiftEmptyArrayStorage[2];
    unint64_t v16 = _swiftEmptyArrayStorage[3];
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v17 >= v16 >> 1) {
      uint64_t result = (void *)sub_10018F248(v16 > 1, v17 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v17 + 1;
    uint64_t v18 = &_swiftEmptyArrayStorage[4 * v17];
    v18[4] = v29;
    v18[5] = v12;
    v18[6] = v30;
    v18[7] = v14;
    int64_t v8 = 1 << *(unsigned char *)(v15 + 32);
    if (v5 >= v8) {
      goto LABEL_25;
    }
    uint64_t v7 = v27;
    uint64_t v19 = *(void *)(v27 + 8 * v10);
    if ((v19 & (1 << v5)) == 0) {
      goto LABEL_26;
    }
    uint64_t v2 = v15;
    int v4 = v26;
    if (*(_DWORD *)(v15 + 36) != v26) {
      goto LABEL_27;
    }
    unint64_t v20 = v19 & (-2 << (v5 & 0x3F));
    if (v20)
    {
      int64_t v8 = __clz(__rbit64(v20)) | v5 & 0xFFFFFFFFFFFFFFC0;
      int64_t v9 = v25;
    }
    else
    {
      unint64_t v21 = v10 + 1;
      unint64_t v22 = (unint64_t)(v8 + 63) >> 6;
      int64_t v9 = v25;
      if (v10 + 1 < v22)
      {
        unint64_t v23 = *(void *)(v27 + 8 * v21);
        if (v23)
        {
LABEL_20:
          int64_t v8 = __clz(__rbit64(v23)) + (v21 << 6);
        }
        else
        {
          while (v22 - 2 != v10)
          {
            unint64_t v23 = *(void *)(v24 + 8 * v10++);
            if (v23)
            {
              unint64_t v21 = v10 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v6 = v28 + 1;
    uint64_t v5 = v8;
    if (v28 + 1 == v9) {
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void *sub_10011A5D8(uint64_t a1)
{
  uint64_t v32 = sub_1001BFC80();
  uint64_t v3 = *(void *)(v32 - 8);
  __chkstk_darwin(v32, v4);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (!v7) {
    return result;
  }
  uint64_t v27 = v1;
  uint64_t v35 = _swiftEmptyArrayStorage;
  sub_10018F2E0(0, v7, 0);
  uint64_t v34 = v35;
  uint64_t result = (void *)sub_1001569C4(a1);
  uint64_t v10 = (uint64_t)result;
  uint64_t v11 = 0;
  uint64_t v12 = a1 + 64;
  uint64_t v30 = a1 + 64;
  uint64_t v31 = v3 + 32;
  uint64_t v26 = a1 + 88;
  int64_t v28 = v7;
  uint64_t v29 = v9;
  while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v15 = (unint64_t)v10 >> 6;
    if ((*(void *)(v12 + 8 * ((unint64_t)v10 >> 6)) & (1 << v10)) == 0) {
      goto LABEL_26;
    }
    if (*(_DWORD *)(a1 + 36) != v9) {
      goto LABEL_27;
    }
    uint64_t v33 = v11;
    swift_retain();
    sub_10013AAB8((uint64_t)v6);
    swift_release();
    unint64_t v16 = v34;
    uint64_t v35 = v34;
    unint64_t v18 = v34[2];
    unint64_t v17 = v34[3];
    if (v18 >= v17 >> 1)
    {
      sub_10018F2E0(v17 > 1, v18 + 1, 1);
      unint64_t v16 = v35;
    }
    void v16[2] = v18 + 1;
    unint64_t v19 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v34 = v16;
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))((unint64_t)v16 + v19 + *(void *)(v3 + 72) * v18, v6, v32);
    int64_t v13 = 1 << *(unsigned char *)(a1 + 32);
    if (v10 >= v13) {
      goto LABEL_28;
    }
    uint64_t v12 = v30;
    uint64_t v20 = *(void *)(v30 + 8 * v15);
    if ((v20 & (1 << v10)) == 0) {
      goto LABEL_29;
    }
    LODWORD(v9) = v29;
    if (*(_DWORD *)(a1 + 36) != v29) {
      goto LABEL_30;
    }
    unint64_t v21 = v20 & (-2 << (v10 & 0x3F));
    if (v21)
    {
      int64_t v13 = __clz(__rbit64(v21)) | v10 & 0xFFFFFFFFFFFFFFC0;
      int64_t v14 = v28;
    }
    else
    {
      unint64_t v22 = v15 + 1;
      unint64_t v23 = (unint64_t)(v13 + 63) >> 6;
      int64_t v14 = v28;
      if (v15 + 1 < v23)
      {
        unint64_t v24 = *(void *)(v30 + 8 * v22);
        if (!v24)
        {
          unint64_t v22 = v15 + 2;
          if (v15 + 2 >= v23) {
            goto LABEL_4;
          }
          unint64_t v24 = *(void *)(v30 + 8 * v22);
          if (!v24)
          {
            while (v23 - 3 != v15)
            {
              unint64_t v24 = *(void *)(v26 + 8 * v15++);
              if (v24)
              {
                unint64_t v22 = v15 + 2;
                goto LABEL_17;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_17:
        int64_t v13 = __clz(__rbit64(v24)) + (v22 << 6);
      }
    }
LABEL_4:
    uint64_t v11 = v33 + 1;
    uint64_t v10 = v13;
    if (v33 + 1 == v14) {
      return v34;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

void *sub_10011A8D8(uint64_t a1)
{
  uint64_t v51 = sub_1001BFCD0();
  uint64_t v52 = *(void *)(v51 - 8);
  __chkstk_darwin(v51, v2);
  uint64_t v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    int v77 = _swiftEmptyArrayStorage;
    sub_10018F31C(0, v5, 0);
    uint64_t v6 = v77;
    uint64_t v7 = sub_1001569C4(a1);
    if (v7 < 0 || v7 >= 1 << *(unsigned char *)(a1 + 32))
    {
LABEL_36:
      __break(1u);
    }
    else
    {
      uint64_t v9 = a1 + 64;
      uint64_t v48 = v52 + 32;
      uint64_t v53 = a1 + 80;
      uint64_t v10 = 1;
      uint64_t v50 = a1;
      uint64_t v49 = v4;
      int64_t v45 = v5;
      uint64_t v46 = v8;
      uint64_t v47 = a1 + 64;
      while ((*(void *)(v9 + 8 * ((unint64_t)v7 >> 6)) & (1 << v7)) != 0)
      {
        if (*(_DWORD *)(a1 + 36) != v8) {
          goto LABEL_38;
        }
        unint64_t v58 = (unint64_t)v7 >> 6;
        uint64_t v59 = 1 << v7;
        uint64_t v56 = v10;
        uint64_t v73 = v6;
        uint64_t v57 = v7 & 0x3F;
        uint64_t v11 = *(void *)(a1 + 56);
        uint64_t v12 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v7);
        uint64_t v13 = *v12;
        unint64_t v70 = v12[1];
        uint64_t v72 = v7;
        int64_t v14 = (unint64_t *)(v11 + 120 * v7);
        unint64_t v15 = *v14;
        unint64_t v16 = v14[1];
        unint64_t v17 = v14[2];
        unint64_t v18 = v14[3];
        uint64_t v20 = v14[4];
        unint64_t v19 = v14[5];
        unint64_t v22 = v14[6];
        unint64_t v21 = v14[7];
        unint64_t v24 = v14[8];
        unint64_t v23 = v14[9];
        unint64_t v26 = v14[10];
        unint64_t v25 = v14[11];
        unint64_t v28 = v14[12];
        unint64_t v27 = v14[13];
        unint64_t v29 = v14[14];
        v76[0] = v13;
        v76[1] = v70;
        v76[2] = v15;
        v76[3] = v16;
        unint64_t v71 = v17;
        v76[4] = v17;
        v76[5] = v18;
        v76[6] = v20;
        v76[7] = v19;
        unint64_t v68 = v22;
        v76[8] = v22;
        v76[9] = v21;
        unint64_t v69 = v21;
        v76[10] = v24;
        v76[11] = v23;
        unint64_t v66 = v23;
        v76[12] = v26;
        v76[13] = v25;
        unint64_t v64 = v25;
        v76[14] = v28;
        v76[15] = v27;
        unint64_t v62 = v27;
        unint64_t v60 = v15 >> 62;
        v76[16] = v29;
        swift_bridgeObjectRetain();
        sub_10002C9AC(v15);
        swift_bridgeObjectRetain();
        sub_10000D9E0(v20, v19);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v55 = v15;
        unint64_t v54 = v16;
        sub_10002C9AC(v15);
        unint64_t v70 = v18;
        swift_bridgeObjectRetain();
        sub_10000D9E0(v20, v19);
        unint64_t v67 = v24;
        swift_bridgeObjectRetain();
        unint64_t v65 = v26;
        swift_bridgeObjectRetain();
        unint64_t v63 = v28;
        swift_bridgeObjectRetain();
        unint64_t v61 = v29;
        swift_bridgeObjectRetain();
        sub_10015D2E0(v76);
        uint64_t v74 = 0;
        unint64_t v75 = 0xE000000000000000;
        uint64_t v30 = (void *)0xEE0064656C696146;
        v31._uint64_t countAndFlagsBits = 0x6465696669726576;
        switch(v60)
        {
          case 1uLL:
            v79._uint64_t countAndFlagsBits = 0x6E69766965636572;
            v79._object = (void *)0xE900000000000067;
            sub_1001C0D00(v79);
            goto LABEL_13;
          case 2uLL:
            v78._uint64_t countAndFlagsBits = 0x64656873696E6966;
            v78._object = (void *)0xE800000000000000;
            sub_1001C0D00(v78);
LABEL_13:
            swift_bridgeObjectRelease();
            if ((v54 & 0x8000000000000000) == 0) {
              goto LABEL_14;
            }
            goto LABEL_42;
          case 3uLL:
            uint64_t v30 = (void *)0xEA00000000006465;
            v31._uint64_t countAndFlagsBits = 0x6966697265766E75;
            switch(v55)
            {
              case 0xC000000000000001:
                v31._uint64_t countAndFlagsBits = 0x6E69796669726576;
                uint64_t v30 = (void *)0xE900000000000067;
                goto LABEL_8;
              case 0xC000000000000002:
              case 0xC000000000000003:
              case 0xC000000000000004:
              case 0xC000000000000005:
              case 0xC000000000000006:
              case 0xC000000000000007:
                goto LABEL_43;
              case 0xC000000000000008:
                uint64_t v30 = (void *)0xE800000000000000;
                v31._uint64_t countAndFlagsBits = 0x6465696669726576;
                goto LABEL_8;
              case 0xC000000000000009:
                uint64_t v30 = (void *)0xE700000000000000;
                v31._uint64_t countAndFlagsBits = 0x79654B746E6573;
                goto LABEL_8;
              default:
                goto LABEL_8;
            }
          default:
LABEL_8:
            v31._object = v30;
            sub_1001C0D00(v31);
            swift_bridgeObjectRelease();
LABEL_14:
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v32 = v49;
            sub_1001BFCC0();
            sub_10015D2E0(v76);
            uint64_t v6 = v73;
            int v77 = v73;
            unint64_t v34 = v73[2];
            unint64_t v33 = v73[3];
            if (v34 >= v33 >> 1)
            {
              sub_10018F31C(v33 > 1, v34 + 1, 1);
              uint64_t v6 = v77;
            }
            v6[2] = v34 + 1;
            (*(void (**)(unint64_t, char *, uint64_t))(v52 + 32))((unint64_t)v6+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(void *)(v52 + 72) * v34, v32, v51);
            a1 = v50;
            char v35 = *(unsigned char *)(v50 + 32);
            if (v72 >= 1 << v35) {
              goto LABEL_39;
            }
            uint64_t v9 = v47;
            unint64_t v36 = v58;
            uint64_t v37 = *(void *)(v47 + 8 * v58);
            if ((v37 & v59) == 0) {
              goto LABEL_40;
            }
            LODWORD(v8) = v46;
            if (*(_DWORD *)(v50 + 36) != v46) {
              goto LABEL_41;
            }
            unint64_t v38 = v37 & (-2 << v57);
            if (v38)
            {
              uint64_t v7 = __clz(__rbit64(v38)) | v72 & 0xFFFFFFFFFFFFFFC0;
              uint64_t v39 = v56;
              if (v56 == v45) {
                return v6;
              }
            }
            else
            {
              unint64_t v40 = v58 + 1;
              unint64_t v41 = (unint64_t)((1 << v35) + 63) >> 6;
              uint64_t v39 = v56;
              if (v58 + 1 >= v41)
              {
LABEL_29:
                uint64_t v7 = 1 << v35;
                if (v56 == v45) {
                  return v6;
                }
              }
              else
              {
                unint64_t v42 = *(void *)(v47 + 8 * v40);
                if (!v42)
                {
                  do
                  {
                    if (v41 - 2 == v36) {
                      goto LABEL_29;
                    }
                    unint64_t v42 = *(void *)(v53 + 8 * v36++);
                  }
                  while (!v42);
                  unint64_t v40 = v36 + 1;
                }
                uint64_t v7 = __clz(__rbit64(v42)) + (v40 << 6);
                if (v56 == v45) {
                  return v6;
                }
              }
            }
            if (v7 < 0) {
              goto LABEL_36;
            }
            uint64_t v10 = v39 + 1;
            if (v7 >= 1 << v35) {
              goto LABEL_36;
            }
            break;
        }
      }
    }
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    sub_1001C1570();
LABEL_43:
    __break(1u);
    JUMPOUT(0x10011B064);
  }
  return v6;
}

uint64_t sub_10011B09C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a2;
  v6[5] = a4;
  v6[2] = a3;
  v6[3] = a1;
  return _swift_task_switch(sub_10011B0C4, 0, 0);
}

uint64_t sub_10011B0C4()
{
  uint64_t v1 = *(void *)(v0 + 56);
  long long v9 = *(_OWORD *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 32) + *(void *)(**(void **)(v0 + 32) + 320);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  *(void *)(v3 + 16) = v0 + 16;
  *(_OWORD *)(v3 + 24) = v9;
  *(void *)(v3 + 40) = v1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v0 + 72) = v4;
  *(void *)(v4 + 16) = &unk_10020E660;
  *(void *)(v4 + 24) = v3;
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 80) = v5;
  *(void *)(v5 + 16) = &unk_10020E670;
  *(void *)(v5 + 24) = v4;
  *(void *)(v5 + 32) = v2;
  *(_OWORD *)(v5 + 40) = xmmword_1001D3C40;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v6;
  void *v6 = v0;
  v6[1] = sub_10011B258;
  uint64_t v7 = *(void *)(v0 + 24);
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)(v7, (char *)&type metadata for () + 8, (char *)&type metadata for () + 8, 0, 0, &unk_10020E680, v5, (char *)&type metadata for () + 8);
}

uint64_t sub_10011B258()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10011B410;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_10011B374;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10011B374()
{
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  return result;
}

uint64_t sub_10011B410()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10011B488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[4] = a4;
  v5[5] = a5;
  v5[2] = a2;
  v5[3] = a3;
  uint64_t v6 = sub_1001C0460();
  v5[6] = v6;
  v5[7] = *(void *)(v6 - 8);
  v5[8] = swift_task_alloc();
  return _swift_task_switch(sub_10011B54C, 0, 0);
}

uint64_t sub_10011B54C()
{
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v5 = *(void *)(v0 + 32);
  long long v11 = *(_OWORD *)(v0 + 16);
  sub_1001C0570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  uint64_t v6 = sub_1001C0560();
  *(void *)(v0 + 72) = v6;
  uint64_t v7 = swift_task_alloc();
  *(void *)(v0 + 80) = v7;
  *(_OWORD *)(v7 + 16) = v11;
  *(void *)(v7 + 32) = v5;
  *(void *)(v7 + 40) = v6;
  *(unsigned char *)(v7 + 48) = 1;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_10011B6AC;
  uint64_t v9 = *(void *)(v0 + 16);
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v8, &unk_10020E6C8, v7, sub_1000A10C0, v9, 0, 0, (char *)&type metadata for () + 8);
}

uint64_t sub_10011B6AC()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10011B410;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_10011B7C8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10011B7C8()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10011B834(uint64_t a1, int *a2)
{
  v3[10] = v2;
  uint64_t v5 = sub_1001C02A0();
  v3[11] = v5;
  v3[12] = *(void *)(v5 - 8);
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  uint64_t v6 = sub_1001C14C0();
  v3[15] = v6;
  v3[16] = *(void *)(v6 - 8);
  v3[17] = swift_task_alloc();
  uint64_t v9 = (uint64_t (*)(void *))((char *)a2 + *a2);
  uint64_t v7 = (void *)swift_task_alloc();
  v3[18] = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10011B9F0;
  return v9(v3 + 6);
}

uint64_t sub_10011B9F0()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10011C05C;
  }
  else {
    uint64_t v2 = sub_10011BB04;
  }
  return _swift_task_switch(v2, 0, 0);
}

void sub_10011BB04()
{
  unint64_t v42 = v0;
  v0[4] = v0[6];
  uint64_t v40 = v0[19];
  uint64_t v3 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v4 = v0[15];
  uint64_t v1 = v0 + 4;
  uint64_t v6 = v0[10];
  uint64_t v5 = v0 + 10;
  *((unsigned char *)v1 + 8) = v40 != 0;
  sub_1001C14E0();
  sub_1001627A0(&qword_100208C80, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  sub_1001C18D0();
  sub_1001627A0(&qword_100208C88, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
  sub_1001C1500();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v7 = *(v1 - 2);
  uint64_t v8 = *(v1 - 1);
  uint64_t v9 = (void *)swift_task_alloc();
  v9[2] = v1;
  v9[3] = v7;
  v9[4] = v8;
  uint64_t v10 = (os_unfair_lock_s *)(v6 + *(void *)(*(void *)v6 + 128));
  os_unfair_lock_lock(v10);
  uint64_t v11 = sub_100003918(&qword_100208C90);
  sub_100162084((uint64_t)v10 + *(int *)(v11 + 28), v12);
  os_unfair_lock_unlock(v10);
  if (!v40)
  {
    unint64_t v38 = v5;
    swift_task_dealloc();
    uint64_t v13 = v39;
    if ((*(unsigned char *)(v39 + 40) & 1) == 0)
    {
      int64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 + 96) + 16);
      v14(*(void *)(v39 + 112), *(void *)(v39 + 80) + *(void *)(**(void **)(v39 + 80) + 280), *(void *)(v39 + 88));
      unint64_t v15 = sub_1001C02C0();
      os_signpost_type_t v16 = sub_1001C12A0();
      char v17 = sub_1001C12D0();
      uint64_t v18 = *(void *)(v39 + 112);
      if (v17)
      {
        uint64_t v20 = *(void *)(v39 + 96);
        uint64_t v19 = *(void *)(v39 + 104);
        uint64_t v21 = *(void *)(v39 + 88);
        v14(v19, v18, v21);
        unint64_t v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v22 = 0;
        os_signpost_id_t v23 = sub_1001C0290();
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v15, v16, v23, "RopesInvokeRequestSent", "", v22, 2u);
        swift_slowDealloc();

        unint64_t v24 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
        v24(v18, v21);
        uint64_t v25 = v21;
        uint64_t v13 = v39;
        v24(v19, v25);
      }
      else
      {
        uint64_t v26 = *(void *)(v39 + 88);
        uint64_t v27 = *(void *)(v39 + 96);

        (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v18, v26);
      }
    }
    swift_retain_n();
    unint64_t v28 = sub_1001C0330();
    os_log_type_t v29 = sub_1001C1200();
    BOOL v30 = os_log_type_enabled(v28, v29);
    uint64_t v31 = *v38;
    if (v30)
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      *(_DWORD *)uint64_t v32 = 136315138;
      unint64_t v33 = (uint64_t *)(v31 + *(void *)(*(void *)v31 + 256));
      uint64_t v34 = *v33;
      unint64_t v35 = v33[1];
      swift_bridgeObjectRetain();
      uint64_t v36 = v34;
      uint64_t v13 = v39;
      v1[5] = sub_1000DF238(v36, v35, &v41);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "%s Ropes invoke request sent", v32, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    if (*(unsigned char *)(v13 + 40))
    {
      *(void *)(v13 + 64) = *(void *)(v13 + 32);
      sub_100003918(&qword_100208C98);
      swift_willThrowTypedImpl();
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v37 = *(void (**)(void))(v13 + 8);
    v37();
  }
}

uint64_t sub_10011C05C()
{
  uint64_t v42 = v0;
  uint64_t v1 = *(void *)(v0 + 152);
  *(void *)(v0 + 32) = v1;
  uint64_t v2 = v0 + 32;
  uint64_t v4 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 120);
  uint64_t v7 = (uint64_t *)(v0 + 80);
  uint64_t v6 = *(void *)(v0 + 80);
  *(unsigned char *)(v0 + 40) = v1 != 0;
  sub_1001C14E0();
  sub_1001627A0(&qword_100208C80, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  sub_1001C18D0();
  sub_1001627A0(&qword_100208C88, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
  sub_1001C1500();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v8 = *(void *)(v0 + 16);
  uint64_t v9 = *(void *)(v0 + 24);
  uint64_t v10 = (void *)swift_task_alloc();
  v10[2] = v0 + 32;
  v10[3] = v8;
  v10[4] = v9;
  uint64_t v11 = (os_unfair_lock_s *)(v6 + *(void *)(*(void *)v6 + 128));
  os_unfair_lock_lock(v11);
  uint64_t v12 = sub_100003918(&qword_100208C90);
  sub_100162084((uint64_t)v11 + *(int *)(v12 + 28), v13);
  os_unfair_lock_unlock(v11);
  swift_task_dealloc();
  uint64_t v14 = v40;
  if ((*(unsigned char *)(v40 + 40) & 1) == 0)
  {
    unint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 + 96) + 16);
    v15(*(void *)(v40 + 112), *(void *)(v40 + 80) + *(void *)(**(void **)(v40 + 80) + 280), *(void *)(v40 + 88));
    os_signpost_type_t v16 = sub_1001C02C0();
    os_signpost_type_t v17 = sub_1001C12A0();
    char v18 = sub_1001C12D0();
    uint64_t v19 = *(void *)(v40 + 112);
    if (v18)
    {
      os_signpost_type_t v39 = v17;
      uint64_t v21 = *(void *)(v40 + 96);
      uint64_t v20 = *(void *)(v40 + 104);
      uint64_t v22 = *(void *)(v40 + 88);
      v15(v20, v19, v22);
      os_signpost_id_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_signpost_id_t v23 = 0;
      os_signpost_id_t v24 = sub_1001C0290();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v16, v39, v24, "RopesInvokeRequestSent", "", v23, 2u);
      swift_slowDealloc();

      uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      v25(v19, v22);
      uint64_t v26 = v22;
      uint64_t v14 = v40;
      v25(v20, v26);
    }
    else
    {
      uint64_t v27 = *(void *)(v40 + 88);
      uint64_t v28 = *(void *)(v40 + 96);

      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v19, v27);
    }
  }
  swift_retain_n();
  os_log_type_t v29 = sub_1001C0330();
  os_log_type_t v30 = sub_1001C1200();
  BOOL v31 = os_log_type_enabled(v29, v30);
  uint64_t v32 = *v7;
  if (v31)
  {
    unint64_t v33 = (uint8_t *)swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    *(_DWORD *)unint64_t v33 = 136315138;
    uint64_t v34 = (uint64_t *)(v32 + *(void *)(*(void *)v32 + 256));
    uint64_t v35 = *v34;
    unint64_t v36 = v34[1];
    swift_bridgeObjectRetain();
    *(void *)(v2 + 40) = sub_1000DF238(v35, v36, &v41);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "%s Ropes invoke request sent", v33, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  if (*(unsigned char *)(v14 + 40))
  {
    *(void *)(v14 + 64) = *(void *)(v14 + 32);
    sub_100003918(&qword_100208C98);
    swift_willThrowTypedImpl();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v37 = *(uint64_t (**)(void))(v14 + 8);
  return v37();
}

uint64_t sub_10011C5B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[12] = a3;
  v4[13] = v3;
  v4[10] = a1;
  v4[11] = a2;
  uint64_t v5 = sub_1001BF950();
  v4[14] = v5;
  v4[15] = *(void *)(v5 - 8);
  v4[16] = swift_task_alloc();
  v4[17] = type metadata accessor for ThimbledEvent();
  v4[18] = swift_task_alloc();
  uint64_t v6 = sub_100003918(&qword_100208A00);
  v4[19] = v6;
  v4[20] = *(void *)(v6 - 8);
  v4[21] = swift_task_alloc();
  uint64_t v7 = sub_1001C03E0();
  v4[22] = v7;
  v4[23] = *(void *)(v7 - 8);
  v4[24] = swift_task_alloc();
  type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList(0);
  v4[25] = swift_task_alloc();
  type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList(0);
  v4[26] = swift_task_alloc();
  v4[27] = swift_task_alloc();
  type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata(0);
  v4[28] = swift_task_alloc();
  v4[29] = swift_task_alloc();
  type metadata accessor for Proto_Ropes_Common_CompressedAttestationList(0);
  v4[30] = swift_task_alloc();
  type metadata accessor for Proto_Ropes_Common_AttestationList(0);
  v4[31] = swift_task_alloc();
  type metadata accessor for Proto_Ropes_Common_Attestation(0);
  v4[32] = swift_task_alloc();
  v4[33] = sub_100003918(&qword_10020A648);
  v4[34] = swift_task_alloc();
  v4[35] = swift_task_alloc();
  v4[36] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse(0);
  v4[37] = v8;
  v4[38] = *(void *)(v8 - 8);
  v4[39] = swift_task_alloc();
  v4[40] = swift_task_alloc();
  sub_100003918(&qword_10020C3B0);
  v4[41] = swift_task_alloc();
  sub_100003918(&qword_10020E5B0);
  v4[42] = swift_task_alloc();
  uint64_t v9 = sub_100003918(&qword_10020E5B8);
  v4[43] = v9;
  v4[44] = *(void *)(v9 - 8);
  v4[45] = swift_task_alloc();
  v4[46] = sub_100003918(&qword_10020E5C0);
  v4[47] = swift_task_alloc();
  v4[48] = type metadata accessor for NWAsyncConnection.Inbound(0);
  v4[49] = swift_task_alloc();
  sub_100003918(&qword_10020E5C8);
  v4[50] = swift_task_alloc();
  return _swift_task_switch(sub_10011CA98, 0, 0);
}

uint64_t sub_10011CA98()
{
  uint64_t v1 = *(void *)(v0 + 400);
  uint64_t v2 = *(void *)(v0 + 376);
  uint64_t v3 = *(void *)(v0 + 360);
  uint64_t v13 = *(void *)(v0 + 368);
  uint64_t v4 = *(void *)(v0 + 344);
  uint64_t v5 = *(void *)(v0 + 352);
  uint64_t v6 = *(uint64_t **)(v0 + 104);
  sub_100161F3C(*(void *)(v0 + 80), *(void *)(v0 + 392), type metadata accessor for NWAsyncConnection.Inbound);
  sub_1001627A0(&qword_10020E3D8, (void (*)(uint64_t))type metadata accessor for NWAsyncConnection.Inbound);
  swift_retain();
  sub_1001C1880();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v1, v4);
  sub_100016710(&qword_10020E5E0, &qword_10020E5B8);
  sub_1001C10A0();
  uint64_t v7 = v2 + *(int *)(v13 + 80);
  *(void *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 8) = 2;
  *(_OWORD *)(v2 + *(int *)(v13 + 76)) = xmmword_1001CB200;
  uint64_t v8 = *v6;
  *(_OWORD *)(v0 + 408) = *(_OWORD *)(*v6 + 360);
  uint64_t v9 = qword_10021F8E8;
  *(void *)(v0 + 424) = *(void *)(v8 + 344);
  *(void *)(v0 + 432) = v9;
  *(void *)(v0 + 440) = *(void *)(v8 + 336);
  *(_DWORD *)(v0 + 464) = enum case for NWActivity.CompletionReason.success(_:);
  uint64_t v14 = (uint64_t (*)(uint64_t))((char *)&dword_10020EB98 + dword_10020EB98);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 448) = v10;
  void *v10 = v0;
  v10[1] = sub_10011CD10;
  uint64_t v11 = *(void *)(v0 + 336);
  return v14(v11);
}

uint64_t sub_10011CD10()
{
  *(void *)(*(void *)v1 + 456) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10011DECC;
  }
  else {
    uint64_t v2 = sub_10011CE24;
  }
  return _swift_task_switch(v2, 0, 0);
}

void sub_10011CE24()
{
  uint64_t v108 = v0;
  uint64_t v1 = *(void *)(v0 + 336);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 304) + 48))(v1, 1, *(void *)(v0 + 296)) == 1)
  {
    uint64_t v2 = *(void *)(v0 + 400);
    sub_100010360(*(void *)(v0 + 376), &qword_10020E5C0);
    sub_100010360(v2, &qword_10020E5C8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(void (**)(void))(v0 + 8);
    v3();
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 312);
    uint64_t v5 = *(void *)(v0 + 320);
    sub_1001627E8(v1, v5, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse);
    sub_100161F3C(v5, v4, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse);
    swift_retain_n();
    uint64_t v6 = sub_1001C0330();
    os_log_type_t v7 = sub_1001C1200();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = *(void *)(v0 + 312);
      uint64_t v9 = *(void *)(v0 + 288);
      uint64_t v10 = (uint64_t *)(*(void *)(v0 + 104) + *(void *)(v0 + 416));
      uint64_t v11 = swift_slowAlloc();
      v107[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315394;
      uint64_t v13 = *v10;
      unint64_t v12 = v10[1];
      swift_bridgeObjectRetain();
      *(void *)(v11 + 4) = sub_1000DF238(v13, v12, v107);
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v11 + 12) = 2080;
      sub_10003282C(v8, v9, &qword_10020A648);
      uint64_t v14 = sub_1001C0C40();
      *(void *)(v11 + 14) = sub_1000DF238(v14, v15, v107);
      swift_bridgeObjectRelease();
      sub_10016290C(v8, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "%s received message: %s", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v16 = *(void *)(v0 + 312);

      swift_release_n();
      sub_10016290C(v16, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse);
    }
    uint64_t v17 = *(void *)(v0 + 280);
    sub_10003282C(*(void *)(v0 + 320), v17, &qword_10020A648);
    uint64_t v18 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v17, 1, v18) == 1)
    {
      uint64_t v19 = *(void *)(v0 + 320);
      uint64_t v20 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse;
    }
    else
    {
      sub_10003282C(*(void *)(v0 + 280), *(void *)(v0 + 272), &qword_10020A648);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v21 = *(void *)(v0 + 320);
          uint64_t v25 = *(void *)(v0 + 240);
          os_signpost_id_t v24 = *(void **)(v0 + 248);
          uint64_t v26 = *(void *)(v0 + 104) + *(void *)(v0 + 408);
          sub_1001627E8(*(void *)(v0 + 272), v25, type metadata accessor for Proto_Ropes_Common_CompressedAttestationList);
          sub_100162B00(v25, v26, v24);
          sub_100120D84((uint64_t)v24);
          sub_10016290C((uint64_t)v24, type metadata accessor for Proto_Ropes_Common_AttestationList);
          uint64_t v27 = type metadata accessor for Proto_Ropes_Common_CompressedAttestationList;
          uint64_t v28 = v25;
          goto LABEL_25;
        case 2u:
          uint64_t v21 = *(void *)(v0 + 320);
          uint64_t v22 = *(void *)(v0 + 256);
          uint64_t v29 = *(void *)(v0 + 88);
          sub_1001627E8(*(void *)(v0 + 272), v22, type metadata accessor for Proto_Ropes_Common_Attestation);
          sub_1001205F4(v22, v29);
          os_signpost_id_t v23 = type metadata accessor for Proto_Ropes_Common_Attestation;
          goto LABEL_14;
        case 3u:
          uint64_t v30 = *(void *)(v0 + 320);
          uint64_t v31 = *(void *)(v0 + 328);
          uint64_t v21 = *(void *)(v0 + 272);
          uint64_t v32 = *(void *)(v0 + 96);
          sub_1001211EC();
          uint64_t v33 = sub_1001C0FC0();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v31, 1, 1, v33);
          uint64_t v34 = (void *)swift_allocObject();
          v34[2] = 0;
          v34[3] = 0;
          v34[4] = v32;
          swift_retain();
          sub_1001A1CC0(v31, (uint64_t)&unk_10020E5F0, (uint64_t)v34);
          swift_release();
          sub_10016290C(v30, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse);
          uint64_t v35 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type;
          goto LABEL_26;
        case 4u:
          uint64_t v36 = *(void *)(v0 + 224);
          uint64_t v37 = *(void *)(v0 + 232);
          sub_1001627E8(*(void *)(v0 + 272), v37, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata);
          sub_100161F3C(v37, v36, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata);
          swift_retain_n();
          unint64_t v38 = sub_1001C0330();
          os_log_type_t v39 = sub_1001C1200();
          if (os_log_type_enabled(v38, v39))
          {
            uint64_t v104 = *(void *)(v0 + 320);
            *(void *)os_log_type_t type = *(void *)(v0 + 232);
            unint64_t v96 = *(uint64_t **)(v0 + 224);
            uint64_t v40 = (uint64_t *)(*(void *)(v0 + 104) + *(void *)(v0 + 416));
            uint64_t v41 = swift_slowAlloc();
            v107[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v41 = 136315394;
            uint64_t v42 = *v40;
            unint64_t v43 = v40[1];
            swift_bridgeObjectRetain();
            *(void *)(v0 + 64) = sub_1000DF238(v42, v43, v107);
            sub_1001C1310();
            swift_bridgeObjectRelease();
            swift_release_n();
            *(_WORD *)(v41 + 12) = 2080;
            uint64_t v44 = *v96;
            unint64_t v45 = v96[1];
            swift_bridgeObjectRetain();
            *(void *)(v0 + 72) = sub_1000DF238(v44, v45, v107);
            sub_1001C1310();
            swift_bridgeObjectRelease();
            sub_10016290C((uint64_t)v96, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata);
            _os_log_impl((void *)&_mh_execute_header, v38, v39, "%s logging metadata message: %s", (uint8_t *)v41, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            uint64_t v46 = *(void *)type;
            uint64_t v47 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata;
LABEL_31:
            sub_10016290C(v46, v47);
            uint64_t v20 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse;
            uint64_t v19 = v104;
          }
          else
          {
            uint64_t v21 = *(void *)(v0 + 320);
            uint64_t v73 = *(void *)(v0 + 224);
            uint64_t v72 = *(void *)(v0 + 232);

            sub_10016290C(v73, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata);
            swift_release_n();
            uint64_t v28 = v72;
            uint64_t v27 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.LoggingMetadata;
LABEL_25:
            sub_10016290C(v28, v27);
            uint64_t v35 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse;
LABEL_26:
            uint64_t v20 = v35;
            uint64_t v19 = v21;
          }
          break;
        case 5u:
          uint64_t v48 = *(void *)(v0 + 208);
          uint64_t v49 = *(void *)(v0 + 216);
          sub_1001627E8(*(void *)(v0 + 272), v49, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
          sub_100161F3C(v49, v48, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
          swift_retain_n();
          uint64_t v50 = sub_1001C0330();
          os_log_type_t v51 = sub_1001C11E0();
          if (os_log_type_enabled(v50, v51))
          {
            uint64_t typea = *(void *)(v0 + 208);
            uint64_t v52 = (uint64_t *)(*(void *)(v0 + 104) + *(void *)(v0 + 416));
            uint64_t v53 = swift_slowAlloc();
            v107[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v53 = 136315394;
            uint64_t v54 = *v52;
            unint64_t v55 = v52[1];
            swift_bridgeObjectRetain();
            *(void *)(v0 + 48) = sub_1000DF238(v54, v55, v107);
            sub_1001C1310();
            swift_bridgeObjectRelease();
            swift_release_n();
            *(_WORD *)(v53 + 12) = 2048;
            uint64_t v56 = *(void *)(*(void *)typea + 16);
            sub_10016290C(typea, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);
            *(void *)(v0 + 56) = v56;
            sub_1001C1310();
            _os_log_impl((void *)&_mh_execute_header, v50, v51, "%s received %ld rate limit configurations", (uint8_t *)v53, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            sub_10016290C(*(void *)(v0 + 208), type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList);

            swift_release_n();
          }
          uint64_t v104 = *(void *)(v0 + 320);
          uint64_t v74 = *(void *)(v0 + 216);
          uint64_t v76 = *(void *)(v0 + 160);
          uint64_t v75 = *(void *)(v0 + 168);
          int v77 = *(void **)(v0 + 144);
          *(void *)typec = *(void *)(v0 + 152);
          uint64_t v78 = *(void *)(v0 + 104);
          swift_retain();
          uint64_t v79 = swift_bridgeObjectRetain();
          uint64_t v80 = sub_10015A4D8(v79, v78);
          swift_release();
          swift_bridgeObjectRelease();
          *int v77 = v80;
          swift_storeEnumTagMultiPayload();
          sub_100003918(qword_100208000);
          sub_1001C0FE0();
          (*(void (**)(uint64_t, os_log_type_t *))(v76 + 8))(v75, *(os_log_type_t **)typec);
          uint64_t v47 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfigurationList;
          uint64_t v46 = v74;
          goto LABEL_31;
        case 6u:
          sub_1001627E8(*(void *)(v0 + 272), *(void *)(v0 + 200), type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList);
          swift_retain_n();
          uint64_t v57 = sub_1001C0330();
          os_log_type_t v58 = sub_1001C11E0();
          if (os_log_type_enabled(v57, v58))
          {
            uint64_t v98 = *(void *)(v0 + 128);
            uint64_t v105 = v57;
            uint64_t v59 = *(void *)(v0 + 120);
            uint64_t v60 = *(void *)(v0 + 104);
            os_log_type_t typeb = v58;
            unint64_t v61 = (uint64_t *)(v60 + *(void *)(v0 + 416));
            uint64_t v95 = v60 + *(void *)(v0 + 432);
            uint64_t v97 = *(void *)(v0 + 112);
            uint64_t v62 = swift_slowAlloc();
            v107[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v62 = 136315394;
            uint64_t v64 = *v61;
            unint64_t v63 = v61[1];
            swift_bridgeObjectRetain();
            *(void *)(v0 + 32) = sub_1000DF238(v64, v63, v107);
            sub_1001C1310();
            swift_bridgeObjectRelease();
            swift_release_n();
            *(_WORD *)(v62 + 12) = 2080;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v98, v95, v97);
            uint64_t v65 = sub_1001C0C40();
            *(void *)(v0 + 40) = sub_1000DF238(v65, v66, v107);
            sub_1001C1310();
            swift_bridgeObjectRelease();
            swift_release_n();
            _os_log_impl((void *)&_mh_execute_header, v105, typeb, "%s received expired attestation message for parameters  %s. Will refresh attestations out of band", (uint8_t *)v62, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_release_n();
          }
          uint64_t v104 = *(void *)(v0 + 320);
          uint64_t v81 = *(void *)(v0 + 200);
          uint64_t v83 = *(void *)(v0 + 160);
          uint64_t v82 = *(void *)(v0 + 168);
          uint64_t v84 = *(void *)(v0 + 144);
          uint64_t v85 = *(void *)(v0 + 112);
          *(void *)typed = *(void *)(v0 + 152);
          uint64_t v86 = *(void *)(v0 + 104) + *(void *)(v0 + 432);
          uint64_t v87 = *(void *)(v0 + 120);
          uint64_t v88 = v84 + *(int *)(sub_100003918(&qword_10020C4B8) + 48);
          sub_100161F3C(v81, v84, type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 16))(v88, v86, v85);
          swift_storeEnumTagMultiPayload();
          sub_100003918(qword_100208000);
          sub_1001C0FE0();
          (*(void (**)(uint64_t, os_log_type_t *))(v83 + 8))(v82, *(os_log_type_t **)typed);
          uint64_t v47 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.ExpiredAttestationList;
          uint64_t v46 = v81;
          goto LABEL_31;
        case 7u:
          uint64_t v67 = *(void *)(v0 + 456);
          uint64_t v68 = *(void *)(v0 + 424);
          uint64_t v69 = *(void *)(v0 + 104);
          sub_100003918(&qword_10020E198);
          sub_1001C0FF0();
          unint64_t v70 = (os_unfair_lock_s *)(*(void *)(v69 + v68) + *(void *)(**(void **)(v69 + v68) + 128));
          os_unfair_lock_lock(v70);
          uint64_t v71 = sub_100003918(&qword_100208C90);
          sub_100158EE8((uint64_t)v70 + *(int *)(v71 + 28), (uint64_t *)(v0 + 24));
          os_unfair_lock_unlock(v70);
          if (v67) {
            return;
          }
          if (*(void *)(v0 + 24))
          {
            uint64_t v92 = *(void *)(v0 + 184);
            uint64_t v91 = *(void *)(v0 + 192);
            uint64_t v93 = *(void *)(v0 + 176);
            (*(void (**)(uint64_t, void, uint64_t))(v92 + 104))(v91, *(unsigned int *)(v0 + 464), v93);
            swift_retain();
            sub_1001C0400();
            swift_release_n();
            (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v91, v93);
          }
          uint64_t v94 = *(void *)(v0 + 272);
          sub_10016290C(*(void *)(v0 + 320), type metadata accessor for Proto_Ropes_HttpService_InvokeResponse);
          uint64_t v20 = type metadata accessor for Proto_Ropes_HttpService_InvokeResponse.OneOf_Type;
          uint64_t v19 = v94;
          break;
        default:
          uint64_t v21 = *(void *)(v0 + 320);
          uint64_t v22 = *(void *)(v0 + 248);
          sub_1001627E8(*(void *)(v0 + 272), v22, type metadata accessor for Proto_Ropes_Common_AttestationList);
          sub_100120D84(v22);
          os_signpost_id_t v23 = type metadata accessor for Proto_Ropes_Common_AttestationList;
LABEL_14:
          uint64_t v27 = v23;
          uint64_t v28 = v22;
          goto LABEL_25;
      }
    }
    sub_10016290C(v19, v20);
    sub_100010360(*(void *)(v0 + 280), &qword_10020A648);
    uint64_t v106 = (void (*)(uint64_t))((char *)&dword_10020EB98 + dword_10020EB98);
    uint64_t v89 = (void *)swift_task_alloc();
    *(void *)(v0 + 448) = v89;
    *uint64_t v89 = v0;
    v89[1] = sub_10011CD10;
    uint64_t v90 = *(void *)(v0 + 336);
    v106(v90);
  }
}

uint64_t sub_10011DECC()
{
  *(void *)(v0 + 16) = *(void *)(v0 + 456);
  sub_100003918(&qword_100208C98);
  swift_willThrowTypedImpl();
  return _swift_task_switch(sub_10011DF58, 0, 0);
}

uint64_t sub_10011DF58()
{
  uint64_t v1 = v0[57];
  uint64_t v2 = v0[50];
  uint64_t v3 = v0[41];
  uint64_t v4 = v0[12];
  sub_100010360(v0[47], &qword_10020E5C0);
  uint64_t v5 = sub_1001C0FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v3, 1, 1, v5);
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v4;
  v6[5] = v1;
  swift_retain();
  swift_errorRetain();
  sub_1001A1CC0(v3, (uint64_t)&unk_10020E5E8, (uint64_t)v6);
  swift_release();
  swift_willThrow();
  sub_100010360(v2, &qword_10020E5C8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_10011E1C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = a2;
  uint64_t v14 = a3;
  sub_1001627A0(&qword_10020A778, (void (*)(uint64_t))type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest);
  sub_1001C0060();
  sub_100010360(a1, &qword_10020A640);
  sub_1001627E8((uint64_t)v9, a1, type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest);
  uint64_t v10 = type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.OneOf_Type(0);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a1, 0, 1, v10);
}

uint64_t sub_10011E348(_DWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v31 = a3;
  uint64_t v32 = a2;
  uint64_t v4 = sub_100003918(&qword_10020A638);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v30 = (uint64_t)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t v11 = type metadata accessor for Proto_Ropes_Common_Capabilities(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v14 = __chkstk_darwin(v11, v13);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v17);
  uint64_t v19 = (char *)&v29 - v18;
  *a1 = 1;
  uint64_t v20 = *(int *)(type metadata accessor for Proto_Ropes_HttpService_InvokeRequest.SetupRequest(0) + 28);
  uint64_t v33 = a1;
  uint64_t v21 = (uint64_t)a1 + v20;
  sub_10003282C((uint64_t)a1 + v20, (uint64_t)v10, &qword_10020A638);
  uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v22(v10, 1, v11) == 1)
  {
    *(void *)uint64_t v19 = _swiftEmptyArrayStorage;
    v19[8] = 0;
    _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_100010360((uint64_t)v10, &qword_10020A638);
  }
  else
  {
    sub_1001627E8((uint64_t)v10, (uint64_t)v19, type metadata accessor for Proto_Ropes_Common_Capabilities);
  }
  swift_bridgeObjectRelease();
  *(void *)uint64_t v19 = &off_1001FB9B0;
  sub_100010360(v21, &qword_10020A638);
  sub_1001627E8((uint64_t)v19, v21, type metadata accessor for Proto_Ropes_Common_Capabilities);
  os_signpost_id_t v23 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56);
  v23(v21, 0, 1, v11);
  uint64_t v24 = v30;
  sub_10003282C(v21, v30, &qword_10020A638);
  if (v22((char *)v24, 1, v11) == 1)
  {
    *(void *)uint64_t v16 = _swiftEmptyArrayStorage;
    v16[8] = 0;
    _s20privatecloudcomputed45Proto_Ropes_HttpService_PrefetchUnaryResponseV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_100010360(v24, &qword_10020A638);
  }
  else
  {
    sub_1001627E8(v24, (uint64_t)v16, type metadata accessor for Proto_Ropes_Common_Capabilities);
  }
  v16[8] = 1;
  sub_100010360(v21, &qword_10020A638);
  sub_1001627E8((uint64_t)v16, v21, type metadata accessor for Proto_Ropes_Common_Capabilities);
  v23(v21, 0, 1, v11);
  uint64_t v25 = v32;
  swift_retain();
  uint64_t v26 = sub_10015ABE8(v31, v25);
  swift_release();
  uint64_t v27 = v33;
  uint64_t result = swift_bridgeObjectRelease();
  *((void *)v27 + 1) = v26;
  return result;
}

uint64_t sub_10011E6BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v69 = a1;
  uint64_t v5 = type metadata accessor for ValidatedAttestation();
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v65 = (void *)((char *)v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v67 = type metadata accessor for ValidatedAttestationOrAttestation();
  uint64_t v9 = __chkstk_darwin(v67, v8);
  unint64_t v66 = (char *)v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9, v11);
  uint64_t v14 = (void *)((char *)v59 - v13);
  uint64_t v16 = __chkstk_darwin(v12, v15);
  uint64_t v18 = (void *)((char *)v59 - v17);
  uint64_t v20 = __chkstk_darwin(v16, v19);
  uint64_t v22 = (void *)((char *)v59 - v21);
  uint64_t v24 = __chkstk_darwin(v20, v23);
  uint64_t v26 = (char *)v59 - v25;
  __chkstk_darwin(v24, v27);
  uint64_t v29 = (char *)v59 - v28;
  sub_100161F3C(a3, (uint64_t)v59 - v28, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
  uint64_t v68 = a3;
  sub_100161F3C(a3, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
  swift_retain_n();
  uint64_t v30 = sub_1001C0330();
  int v31 = sub_1001C1200();
  if (os_log_type_enabled(v30, (os_log_type_t)v31))
  {
    int v62 = v31;
    os_log_t v63 = v30;
    uint64_t v64 = v26;
    uint64_t v32 = swift_slowAlloc();
    uint64_t v61 = swift_slowAlloc();
    uint64_t v71 = v61;
    *(_DWORD *)uint64_t v32 = 136315650;
    uint64_t v33 = (uint64_t *)(a2 + *(void *)(*(void *)a2 + 368));
    uint64_t v34 = *v33;
    unint64_t v35 = v33[1];
    swift_bridgeObjectRetain();
    uint64_t v70 = sub_1000DF238(v34, v35, &v71);
    sub_1001C1310();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 12) = 2080;
    sub_100161F3C((uint64_t)v29, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
    uint64_t v36 = (uint64_t)v29;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v60 = v29;
      uint64_t v37 = *v22;
      unint64_t v38 = v22[1];
      uint64_t v39 = v22[2];
      unint64_t v40 = v22[3];
      v59[1] = v22[9];
      sub_100007918(v39, v40);
      swift_bridgeObjectRelease();
      uint64_t v41 = v37;
      uint64_t v36 = (uint64_t)v60;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v42 = v65;
      sub_1001627E8((uint64_t)v22, (uint64_t)v65, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
      uint64_t v41 = *v42;
      unint64_t v38 = v42[1];
      swift_bridgeObjectRetain();
      sub_10016290C((uint64_t)v42, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
    }
    uint64_t v70 = sub_1000DF238(v41, v38, &v71);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    sub_10016290C(v36, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
    *(_WORD *)(v32 + 22) = 1024;
    uint64_t v43 = (uint64_t)v64;
    sub_100161F3C((uint64_t)v64, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v44 = v18[2];
      unint64_t v45 = v18[3];
      uint64_t v60 = (char *)v18[9];
      unint64_t v46 = v18[12];
      swift_bridgeObjectRelease();
      unint64_t v47 = v45;
      uint64_t v43 = (uint64_t)v64;
      sub_100007918(v44, v47);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v46 = *(void *)((char *)v18 + *(int *)(sub_100003918(&qword_100208188) + 48));
      sub_10016290C((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
    }
    if (HIDWORD(v46)) {
      goto LABEL_19;
    }
    sub_10016290C(v43, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
    LODWORD(v70) = v46;
    sub_1001C1310();
    os_log_t v48 = v63;
    _os_log_impl((void *)&_mh_execute_header, v63, (os_log_type_t)v62, "%s adding prefetched attestation for node: %s ohttpContext: %u", (uint8_t *)v32, 0x1Cu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10016290C((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
    swift_release_n();

    sub_10016290C((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
  }
  sub_100161F3C(v68, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v50 = v66;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v52 = *v14;
    uint64_t v51 = v14[1];
    sub_100007918(v14[2], v14[3]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v53 = v65;
    sub_1001627E8((uint64_t)v14, (uint64_t)v65, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
    uint64_t v52 = *v53;
    uint64_t v51 = v53[1];
    swift_bridgeObjectRetain();
    sub_10016290C((uint64_t)v53, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
  }
  uint64_t v54 = (void *)v69;
  swift_bridgeObjectRelease();
  *uint64_t v54 = v52;
  v54[1] = v51;
  sub_100161F3C(v68, (uint64_t)v50, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v55 = v50[2];
    unint64_t v56 = v50[3];
    unint64_t v57 = v50[12];
    swift_bridgeObjectRelease();
    sub_100007918(v55, v56);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v57 = *(void *)((char *)v50 + *(int *)(sub_100003918(&qword_100208188) + 48));
    uint64_t result = sub_10016290C((uint64_t)v50, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
  }
  if (!HIDWORD(v57))
  {
    *(_DWORD *)(v69 + 16) = v57;
    return result;
  }
LABEL_19:
  uint64_t result = sub_1001C1570();
  __break(1u);
  return result;
}

uint64_t sub_10011EE40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Proto_PrivateCloudCompute_AuthToken(0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = a2;
  sub_1001627A0(&qword_10020A070, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_AuthToken);
  sub_1001C0060();
  sub_100010360(a1, &qword_100207FE0);
  sub_1001627E8((uint64_t)v7, a1, type metadata accessor for Proto_PrivateCloudCompute_AuthToken);
  uint64_t v8 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest.OneOf_Type(0);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a1, 0, 1, v8);
}

double sub_10011EFC0(uint64_t *a1, long long *a2)
{
  long long v10 = *a2;
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  sub_1001619E0((uint64_t)&v10);
  sub_10000792C(v4, v5);
  *(_OWORD *)a1 = v10;
  long long v9 = a2[2];
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  sub_1001619E0((uint64_t)&v9);
  sub_10000792C(v6, v7);
  double result = *(double *)&v9;
  *((_OWORD *)a1 + 1) = v9;
  return result;
}

uint64_t sub_10011F054(uint64_t a1, unint64_t a2, uint64_t a3, int a4)
{
  uint64_t v6 = v5;
  uint64_t v7 = v4;
  uint64_t v184 = sub_1001C0820();
  uint64_t v165 = *(void *)(v184 - 8);
  __chkstk_darwin(v184, v12);
  Swift::String v183 = (char *)&v158 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100003918(&qword_100207FE8);
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v163 = (char *)&v158 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = sub_1001C0870();
  uint64_t v164 = *(void *)(v189 - 8);
  uint64_t v18 = __chkstk_darwin(v189, v17);
  uint64_t v178 = (char *)&v158 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18, v20);
  uint64_t v23 = (char *)&v158 - v22;
  uint64_t v25 = __chkstk_darwin(v21, v24);
  unint64_t v177 = (char *)&v158 - v26;
  uint64_t v28 = __chkstk_darwin(v25, v27);
  uint64_t v174 = (char *)&v158 - v29;
  uint64_t v31 = __chkstk_darwin(v28, v30);
  uint64_t v202 = (void (**)(char *))((char *)&v158 - v32);
  uint64_t v34 = __chkstk_darwin(v31, v33);
  uint64_t v200 = (void (**)(char *, char *, uint64_t))((char *)&v158 - v35);
  uint64_t v37 = __chkstk_darwin(v34, v36);
  uint64_t v199 = (void (**)(char *, char *, uint64_t))((char *)&v158 - v38);
  __chkstk_darwin(v37, v39);
  uint64_t v190 = (char *)&v158 - v40;
  uint64_t v41 = sub_1001C03B0();
  uint64_t v168 = *(void *)(v41 - 8);
  uint64_t v43 = __chkstk_darwin(v41, v42);
  Swift::String v162 = (char *)&v158 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43, v45);
  uint64_t v197 = (char *)&v158 - v46;
  uint64_t v167 = sub_100003918(&qword_100207FF0);
  uint64_t v48 = __chkstk_darwin(v167, v47);
  uint64_t v176 = (uint64_t)&v158 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __chkstk_darwin(v48, v50);
  uint64_t v166 = (char *)&v158 - v52;
  __chkstk_darwin(v51, v53);
  uint64_t v191 = (uint64_t *)((char *)&v158 - v54);
  uint64_t v55 = sub_100003918(&qword_10020DA80);
  __chkstk_darwin(v55 - 8, v56);
  uint64_t v201 = (char *)&v158 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v173 = sub_1001C04D0();
  uint64_t v172 = *(void *)(v173 - 8);
  __chkstk_darwin(v173, v58);
  uint64_t v169 = (uint64_t)&v158 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = v4 + *(void *)(*(void *)v4 + 360);
  sub_10000D9E0(a1, a2);
  swift_retain();
  sub_10000D9E0(a1, a2);
  swift_retain();
  sub_10000D9E0(a1, a2);
  swift_retain();
  sub_10000D9E0(a1, a2);
  swift_retain();
  sub_10000D9E0(a1, a2);
  swift_retain();
  swift_retain();
  sub_10000D9E0(a1, a2);
  swift_retain();
  swift_retain();
  uint64_t v196 = v60;
  uint64_t v61 = sub_1001C0330();
  os_log_type_t v62 = sub_1001C1200();
  LODWORD(v195) = v62;
  BOOL v63 = os_log_type_enabled(v61, v62);
  uint64_t v203 = v41;
  uint64_t v198 = v7;
  uint64_t v175 = v23;
  if (v63)
  {
    uint64_t v64 = swift_slowAlloc();
    uint64_t v171 = v5;
    uint64_t v65 = v64;
    uint64_t v194 = (void (*)(void, void, void))swift_slowAlloc();
    uint64_t v205 = v194;
    *(_DWORD *)uint64_t v65 = 136315906;
    int v170 = a4;
    unint64_t v66 = (uint64_t *)(v7 + *(void *)(*(void *)v7 + 368));
    uint64_t v67 = *v66;
    unint64_t v68 = v66[1];
    swift_bridgeObjectRetain();
    v204[0] = sub_1000DF238(v67, v68, (uint64_t *)&v205);
    sub_1001C1310();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v65 + 12) = 2080;
    v204[0] = a1;
    v204[1] = a2;
    sub_10000D9E0(a1, a2);
    sub_100003918((uint64_t *)&unk_10020DD68);
    uint64_t v69 = sub_1001C0C40();
    v204[0] = sub_1000DF238(v69, v70, (uint64_t *)&v205);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    sub_100007918(a1, a2);
    swift_release();
    sub_100007918(a1, a2);
    swift_release();
    *(_WORD *)(v65 + 22) = 2080;
    v204[0] = a3;
    swift_retain();
    sub_100003918(&qword_10020E610);
    uint64_t v71 = sub_1001C0C40();
    v204[0] = sub_1000DF238(v71, v72, (uint64_t *)&v205);
    a4 = v170;
    sub_1001C1310();
    swift_bridgeObjectRelease();
    sub_100007918(a1, a2);
    swift_release();
    sub_100007918(a1, a2);
    swift_release();
    *(_WORD *)(v65 + 32) = 1024;
    sub_100007918(a1, a2);
    swift_release();
    LODWORD(v204[0]) = a4 & 1;
    sub_1001C1310();
    sub_100007918(a1, a2);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v61, (os_log_type_t)v195, "%s receive: content: %s, contentContext: %s, isComplete: %{BOOL}d", (uint8_t *)v65, 0x26u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v6 = v171;
    swift_slowDealloc();

    uint64_t v73 = (uint64_t)v201;
    if (!a3) {
      goto LABEL_26;
    }
  }
  else
  {
    sub_100007918(a1, a2);
    swift_release_n();

    swift_release();
    sub_100007918(a1, a2);
    swift_release();
    sub_100007918(a1, a2);
    swift_release();
    sub_100007918(a1, a2);
    swift_release();
    sub_100007918(a1, a2);
    swift_release();
    sub_100007918(a1, a2);
    swift_release();
    uint64_t v73 = (uint64_t)v201;
    if (!a3)
    {
LABEL_26:
      sub_10000D9E0(a1, a2);
      return a1;
    }
  }
  swift_retain();
  sub_1001C0530();
  uint64_t v74 = v172;
  uint64_t v75 = v173;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v172 + 48))(v73, 1, v173) == 1)
  {
    swift_release();
    sub_100010360(v73, &qword_10020DA80);
    goto LABEL_26;
  }
  int v170 = a4;
  unint64_t v161 = (double *)a3;
  uint64_t v160 = a1;
  unint64_t v159 = a2;
  uint64_t v171 = v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 32))(v169, v73, v75);
  uint64_t v76 = v197;
  sub_1001C0470();
  uint64_t v77 = v168;
  uint64_t v78 = (uint64_t)v166;
  uint64_t v79 = v203;
  uint64_t v194 = *(void (**)(void, void, void))(v168 + 16);
  uint64_t v195 = v168 + 16;
  v194(v166, v76, v203);
  uint64_t v80 = sub_1001627A0((unint64_t *)&qword_100207FF8, (void (*)(uint64_t))&type metadata accessor for HTTPFields);
  sub_1001C1100();
  uint64_t v192 = *(void (**)(char *, uint64_t))(v77 + 8);
  uint64_t v193 = v77 + 8;
  v192(v76, v79);
  uint64_t v81 = v167;
  *(void *)(v78 + *(int *)(v167 + 36)) = v204[0];
  uint64_t v82 = v191;
  sub_10002C318(v78, (uint64_t)v191, &qword_100207FF0);
  uint64_t v83 = (void (**)(char *, uint64_t))((char *)v82 + *(int *)(v81 + 36));
  uint64_t v182 = (uint64_t *)(v198 + *(void *)(*(void *)v198 + 368));
  uint64_t v84 = *v83;
  sub_1001C1120();
  BOOL v86 = v84 == (void (*)(char *, uint64_t))v204[0];
  uint64_t v87 = v189;
  uint64_t v201 = (char *)v80;
  if (!v86)
  {
    *(void *)&long long v187 = v164 + 16;
    uint64_t v186 = (void (**)(void))(v164 + 32);
    uint64_t v185 = (void (**)(void (**)(char *, char *, uint64_t), uint64_t))(v164 + 8);
    unint64_t v181 = (void (**)(char *, uint64_t))(v165 + 8);
    *(void *)&long long v85 = 136315650;
    long long v180 = v85;
    unint64_t v179 = (char *)&type metadata for Any + 8;
    uint64_t v188 = v83;
    do
    {
      uint64_t v109 = v203;
      uint64_t v110 = (void (*)(uint64_t *, void))sub_1001C1150();
      uint64_t v111 = *(void (**)(void, void *, uint64_t))v187;
      uint64_t v112 = v82;
      (*(void (**)(char *))v187)(v190);
      v110(v204, 0);
      uint64_t v113 = v197;
      v194(v197, v112, v109);
      sub_1001C1130();
      v192(v113, v109);
      uint64_t v114 = v199;
      (*v186)();
      uint64_t v115 = v200;
      v111(v200, v114, v87);
      v111(v202, v114, v87);
      swift_retain();
      uint64_t v116 = sub_1001C0330();
      os_log_type_t v117 = sub_1001C1200();
      if (os_log_type_enabled(v116, v117))
      {
        uint64_t v94 = swift_slowAlloc();
        v204[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v94 = v180;
        uint64_t v96 = *v182;
        unint64_t v95 = v182[1];
        swift_bridgeObjectRetain();
        *(void *)(v94 + 4) = sub_1000DF238(v96, v95, v204);
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v94 + 12) = 2080;
        uint64_t v97 = v183;
        sub_1001C0850();
        sub_1001627A0(&qword_10020E608, (void (*)(uint64_t))&type metadata accessor for HTTPField.Name);
        uint64_t v98 = v184;
        uint64_t v99 = sub_1001C1780();
        unint64_t v101 = v100;
        id v102 = v97;
        uint64_t v87 = v189;
        uint64_t v103 = v98;
        uint64_t v104 = v202;
        (*v181)(v102, v103);
        *(void *)(v94 + 14) = sub_1000DF238(v99, v101, v204);
        swift_bridgeObjectRelease();
        uint64_t v105 = *v185;
        (*v185)(v200, v87);
        *(_WORD *)(v94 + 22) = 2080;
        uint64_t v106 = sub_1001C0860();
        *(void *)(v94 + 24) = sub_1000DF238(v106, v107, v204);
        swift_bridgeObjectRelease();
        v105((void (**)(char *, char *, uint64_t))v104, v87);
        _os_log_impl((void *)&_mh_execute_header, v116, v117, "%s Ropes response header: %s: %s", (uint8_t *)v94, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v105(v199, v87);
      }
      else
      {
        swift_release();
        uint64_t v118 = *v185;
        (*v185)(v115, v87);
        v118((void (**)(char *, char *, uint64_t))v202, v87);

        v118(v114, v87);
      }
      uint64_t v108 = *v188;
      uint64_t v82 = v191;
      sub_1001C1120();
    }
    while (v108 != (void (*)(char *, uint64_t))v204[0]);
  }
  sub_100010360((uint64_t)v82, &qword_100207FF0);
  sub_1001C0750();
  sub_1001C0700();
  uint64_t v88 = v161;
  uint64_t v89 = sub_1001C0550();
  swift_release();
  uint64_t v90 = v171;
  char v91 = v170;
  if (v89)
  {
    sub_1001C0740();
    if (swift_dynamicCastClass())
    {
      uint64_t v185 = (void (**)(void (**)(char *, char *, uint64_t), uint64_t))v89;
      uint64_t v92 = (uint64_t)v163;
      sub_1001C0730();
      uint64_t v93 = v168;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v168 + 48))(v92, 1, v203) == 1)
      {
        swift_release();
        sub_100010360(v92, &qword_100207FE8);
      }
      else
      {
        uint64_t v119 = v162;
        uint64_t v120 = v203;
        (*(void (**)(char *, uint64_t, uint64_t))(v93 + 32))(v162, v92, v203);
        uint64_t v121 = (uint64_t)v166;
        v194(v166, v119, v120);
        sub_1001C1100();
        uint64_t v122 = v167;
        *(void *)(v121 + *(int *)(v167 + 36)) = v204[0];
        uint64_t v123 = v176;
        sub_10002C318(v121, v176, &qword_100207FF0);
        uint64_t v124 = (void (**)(char *, char *, uint64_t))(v123 + *(int *)(v122 + 36));
        uint64_t v125 = *v124;
        sub_1001C1120();
        if (v125 != (void (*)(char *, char *, uint64_t))v204[0])
        {
          uint64_t v202 = (void (**)(char *))(v164 + 16);
          uint64_t v200 = (void (**)(char *, char *, uint64_t))(v164 + 32);
          uint64_t v191 = (void *)(v164 + 8);
          uint64_t v188 = (void (**)(char *, uint64_t))(v165 + 8);
          *(void *)&long long v126 = 136315650;
          long long v187 = v126;
          uint64_t v186 = (void (**)(void))((char *)&type metadata for Any + 8);
          uint64_t v199 = v124;
          do
          {
            uint64_t v145 = v203;
            unint64_t v146 = (void (*)(uint64_t *, void))sub_1001C1150();
            uint64_t v147 = *v202;
            uint64_t v148 = v123;
            uint64_t v149 = v174;
            uint64_t v150 = v189;
            (*v202)(v174);
            v146(v204, 0);
            uint64_t v151 = v197;
            v194(v197, v148, v145);
            sub_1001C1130();
            v192(v151, v145);
            uint64_t v152 = v177;
            (*v200)(v177, v149, v150);
            uint64_t v153 = v175;
            ((void (*)(char *, char *, uint64_t))v147)(v175, v152, v150);
            uint64_t v154 = v178;
            ((void (*)(char *, char *, uint64_t))v147)(v178, v152, v150);
            swift_retain();
            uint64_t v155 = sub_1001C0330();
            os_log_type_t v156 = sub_1001C1200();
            if (os_log_type_enabled(v155, v156))
            {
              uint64_t v130 = swift_slowAlloc();
              uint64_t v190 = (char *)swift_slowAlloc();
              v204[0] = (uint64_t)v190;
              *(_DWORD *)uint64_t v130 = v187;
              uint64_t v132 = *v182;
              unint64_t v131 = v182[1];
              swift_bridgeObjectRetain();
              *(void *)(v130 + 4) = sub_1000DF238(v132, v131, v204);
              swift_release();
              swift_bridgeObjectRelease();
              *(_WORD *)(v130 + 12) = 2080;
              uint64_t v133 = v183;
              sub_1001C0850();
              sub_1001627A0(&qword_10020E608, (void (*)(uint64_t))&type metadata accessor for HTTPField.Name);
              uint64_t v134 = v184;
              uint64_t v135 = sub_1001C1780();
              unint64_t v137 = v136;
              uint64_t v138 = v189;
              uint64_t v139 = v134;
              uint64_t v140 = v178;
              (*v188)(v133, v139);
              *(void *)(v130 + 14) = sub_1000DF238(v135, v137, v204);
              swift_bridgeObjectRelease();
              uint64_t v141 = (void (*)(char *, uint64_t))*v191;
              ((void (*)(char *, uint64_t))*v191)(v153, v138);
              *(_WORD *)(v130 + 22) = 2080;
              uint64_t v142 = sub_1001C0860();
              *(void *)(v130 + 24) = sub_1000DF238(v142, v143, v204);
              swift_bridgeObjectRelease();
              v141(v140, v138);
              _os_log_impl((void *)&_mh_execute_header, v155, v156, "%s Ropes response trailer: %s: %s", (uint8_t *)v130, 0x20u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              v141(v177, v138);
            }
            else
            {
              swift_release();
              Swift::String v157 = (void (*)(char *, uint64_t))*v191;
              ((void (*)(char *, uint64_t))*v191)(v153, v150);
              v157(v154, v150);

              v157(v152, v150);
            }
            uint64_t v123 = v176;
            uint64_t v144 = *v199;
            sub_1001C1120();
          }
          while (v144 != (void (*)(char *, char *, uint64_t))v204[0]);
        }
        swift_release();
        sub_100010360(v123, &qword_100207FF0);
        v192(v162, v203);
        uint64_t v90 = v171;
        uint64_t v88 = v161;
        char v91 = v170;
      }
    }
    else
    {
      swift_release();
    }
  }
  a1 = v160;
  if (v91)
  {
    uint64_t v127 = v169;
    uint64_t v128 = v90;
    sub_100121708(v169, v88);
  }
  else
  {
    uint64_t v127 = v169;
    sub_100122B90(v169);
    uint64_t v128 = v90;
    sub_100123840(v127, (char *)v88);
  }
  if (!v128)
  {
    (*(void (**)(uint64_t, uint64_t))(v172 + 8))(v127, v173);
    swift_release();
    a2 = v159;
    goto LABEL_26;
  }
  (*(void (**)(uint64_t, uint64_t))(v172 + 8))(v127, v173);
  swift_release();
  return a1;
}

uint64_t sub_1001205F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v71 = a2;
  uint64_t v72 = sub_100003918(&qword_10020E188);
  uint64_t v70 = *(void *)(v72 - 8);
  __chkstk_darwin(v72, v5);
  uint64_t v69 = (char *)v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100003918(&qword_10020E5F8);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v68 = (uint64_t)v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1001BF950();
  uint64_t v63 = *(void *)(v64 - 8);
  __chkstk_darwin(v64, v10);
  os_log_type_t v62 = (char *)v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = type metadata accessor for ValidatedAttestationOrAttestation();
  uint64_t v13 = __chkstk_darwin(v65, v12);
  uint64_t v66 = (uint64_t)v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)v58 - v16;
  uint64_t v18 = type metadata accessor for Proto_Ropes_Common_Attestation(0);
  uint64_t v20 = __chkstk_darwin(v18, v19);
  uint64_t v60 = (void *)((char *)v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v20, v22);
  uint64_t v24 = (char *)v58 - v23;
  uint64_t v25 = v2 + *(void *)(*(void *)v2 + 360);
  swift_retain_n();
  uint64_t v26 = sub_1001C0330();
  os_log_type_t v27 = sub_1001C11E0();
  BOOL v28 = os_log_type_enabled(v26, v27);
  uint64_t v67 = a1;
  uint64_t v61 = v18;
  if (v28)
  {
    uint64_t v29 = swift_slowAlloc();
    uint64_t v59 = v25;
    uint64_t v30 = (uint8_t *)v29;
    v74[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 136315138;
    v58[1] = v30 + 4;
    uint64_t v31 = (uint64_t *)(v3 + *(void *)(*(void *)v3 + 368));
    uint64_t v32 = v24;
    uint64_t v34 = *v31;
    unint64_t v33 = v31[1];
    swift_bridgeObjectRetain();
    uint64_t v35 = v34;
    uint64_t v24 = v32;
    uint64_t v73 = sub_1000DF238(v35, v33, v74);
    sub_1001C1310();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "%s received another attestations", v30, 0xCu);
    swift_arrayDestroy();
    a1 = v67;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  sub_100161F3C(a1, (uint64_t)v24, type metadata accessor for Proto_Ropes_Common_Attestation);
  swift_retain_n();
  uint64_t v36 = sub_1001C0330();
  os_log_type_t v37 = sub_1001C11E0();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = swift_slowAlloc();
    uint64_t v59 = swift_slowAlloc();
    v74[0] = v59;
    *(_DWORD *)uint64_t v38 = 136315394;
    uint64_t v39 = (uint64_t *)(v3 + *(void *)(*(void *)v3 + 368));
    uint64_t v40 = (uint64_t)v24;
    uint64_t v41 = *v39;
    unint64_t v42 = v39[1];
    swift_bridgeObjectRetain();
    uint64_t v73 = sub_1000DF238(v41, v42, v74);
    sub_1001C1310();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 1024;
    uint64_t v43 = v61;
    uint64_t v44 = v40 + *(int *)(v61 + 28);
    if (*(unsigned char *)(v44 + 4)) {
      int v45 = 0;
    }
    else {
      int v45 = *(_DWORD *)v44;
    }
    sub_10016290C(v40, type metadata accessor for Proto_Ropes_Common_Attestation);
    LODWORD(v73) = v45;
    a1 = v67;
    sub_1001C1310();
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "%s attestation with %u ohttp context", (uint8_t *)v38, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10016290C((uint64_t)v24, type metadata accessor for Proto_Ropes_Common_Attestation);
    swift_release_n();

    uint64_t v43 = v61;
  }
  uint64_t v46 = v60;
  sub_100161F3C(a1, (uint64_t)v60, type metadata accessor for Proto_Ropes_Common_Attestation);
  uint64_t v47 = (uint64_t)v62;
  (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v62, v3 + qword_10021F8E8, v64);
  sub_1000BA1C8(v46, v47, v74);
  uint64_t v48 = v74[1];
  uint64_t v49 = v77;
  uint64_t v50 = v78;
  uint64_t v51 = (unsigned int *)(a1 + *(int *)(v43 + 28));
  if (*((unsigned char *)v51 + 4)) {
    uint64_t v52 = 0;
  }
  else {
    uint64_t v52 = *v51;
  }
  *(void *)uint64_t v17 = v74[0];
  *((void *)v17 + 1) = v48;
  long long v53 = v76;
  *((_OWORD *)v17 + 1) = v75;
  *((_OWORD *)v17 + 2) = v53;
  *((void *)v17 + 6) = v49;
  *((void *)v17 + 7) = v50;
  long long v54 = v80;
  *((_OWORD *)v17 + 4) = v79;
  *((_OWORD *)v17 + 5) = v54;
  *((void *)v17 + 12) = v52;
  swift_storeEnumTagMultiPayload();
  uint64_t v55 = v68;
  sub_100161F3C((uint64_t)v17, v68, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
  sub_100124A48(v55);
  sub_100010360(v55, &qword_10020E5F8);
  sub_100161F3C((uint64_t)v17, v66, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
  sub_100003918(&qword_10020E198);
  uint64_t v56 = v69;
  sub_1001C0FE0();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v56, v72);
  return sub_10016290C((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
}

uint64_t sub_100120D84(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ValidatedAttestationOrAttestation();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8, v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100003918(&qword_10020E188);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Proto_Ropes_Common_AttestationList(0);
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100161F3C(a1, (uint64_t)v17, type metadata accessor for Proto_Ropes_Common_AttestationList);
  swift_retain_n();
  uint64_t v18 = sub_1001C0330();
  os_log_type_t v19 = sub_1001C11E0();
  LODWORD(v38) = v19;
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v39 = v10;
  uint64_t v40 = v5;
  if (v20)
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v37 = a1;
    uint64_t v22 = v21;
    uint64_t v36 = swift_slowAlloc();
    uint64_t v42 = v36;
    *(_DWORD *)uint64_t v22 = 136315394;
    uint64_t v23 = (uint64_t *)(v2 + *(void *)(*(void *)v2 + 368));
    os_log_t v35 = v18;
    uint64_t v25 = *v23;
    unint64_t v24 = v23[1];
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_1000DF238(v25, v24, &v42);
    sub_1001C1310();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2048;
    uint64_t v26 = *(void *)(*(void *)v17 + 16);
    sub_10016290C((uint64_t)v17, type metadata accessor for Proto_Ropes_Common_AttestationList);
    uint64_t v41 = v26;
    sub_1001C1310();
    uint64_t v18 = v35;
    _os_log_impl((void *)&_mh_execute_header, v35, (os_log_type_t)v38, "%s received more %ld attestations", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10016290C((uint64_t)v17, type metadata accessor for Proto_Ropes_Common_AttestationList);
    swift_release_n();
  }

  swift_retain();
  uint64_t v27 = swift_bridgeObjectRetain();
  BOOL v28 = sub_10015A2E4(v27, v2);
  swift_bridgeObjectRelease();
  swift_release();
  sub_100124578((uint64_t)v28);
  uint64_t v29 = v28[2];
  if (v29)
  {
    uint64_t v30 = *(unsigned __int8 *)(v40 + 80);
    uint64_t v38 = v28;
    uint64_t v31 = (uint64_t)v28 + ((v30 + 32) & ~v30);
    uint64_t v32 = *(void *)(v40 + 72);
    unint64_t v33 = (void (**)(char *, uint64_t))(v39 + 8);
    do
    {
      sub_100161F3C(v31, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
      sub_100003918(&qword_10020E198);
      sub_1001C0FE0();
      (*v33)(v13, v9);
      v31 += v32;
      --v29;
    }
    while (v29);
  }
  return swift_bridgeObjectRelease();
}

void sub_1001211EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1001C02A0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v5 = __chkstk_darwin(v2, v4);
  uint64_t v31 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v30 - v8;
  uint64_t v10 = sub_1001C14C0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001C14E0();
  sub_1001627A0(&qword_100208C80, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  sub_1001C18D0();
  sub_1001627A0(&qword_100208C88, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
  sub_1001C1500();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  long long v32 = v34;
  uint64_t v15 = (os_unfair_lock_s *)(v1 + *(void *)(*(void *)v1 + 128));
  os_unfair_lock_lock(v15);
  uint64_t v16 = sub_100003918(&qword_100208C90);
  sub_100161F1C((uint64_t)v15 + *(int *)(v16 + 28));
  os_unfair_lock_unlock(v15);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v17(v9, v1 + *(void *)(*(void *)v1 + 280), v2);
  uint64_t v18 = sub_1001C02C0();
  os_signpost_type_t v19 = sub_1001C12A0();
  if (sub_1001C12D0())
  {
    BOOL v20 = v31;
    v17(v31, (uint64_t)v9, v2);
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v21 = 0;
    os_signpost_id_t v22 = sub_1001C0290();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v18, v19, v22, "NodeSelected", "", v21, 2u);
    swift_slowDealloc();

    uint64_t v23 = *(void (**)(char *, uint64_t))(v3 + 8);
    v23(v9, v2);
    v23(v20, v2);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  }
  swift_retain_n();
  unint64_t v24 = sub_1001C0330();
  os_log_type_t v25 = sub_1001C1200();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v34 = swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 136315138;
    uint64_t v27 = (uint64_t *)(v1 + *(void *)(*(void *)v1 + 256));
    uint64_t v28 = *v27;
    unint64_t v29 = v27[1];
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1000DF238(v28, v29, (uint64_t *)&v34);
    sub_1001C1310();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "%s nodeSelected received", v26, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }
}

uint64_t sub_100121708(uint64_t a1, double *a2)
{
  uint64_t v203 = a1;
  uint64_t v204 = a2;
  uint64_t v202 = sub_1001BFB90();
  uint64_t v193 = *(void *)(v202 - 8);
  __chkstk_darwin(v202, v2);
  uint64_t v175 = (char *)&v167 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v191 = sub_100003918(&qword_10020E618);
  __chkstk_darwin(v191, v4);
  uint64_t v200 = (uint64_t)&v167 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100003918(&qword_10020D868);
  uint64_t v8 = __chkstk_darwin(v6 - 8, v7);
  uint64_t v187 = (uint64_t)&v167 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8, v10);
  uint64_t v192 = (char *)&v167 - v12;
  __chkstk_darwin(v11, v13);
  uint64_t v198 = (uint64_t)&v167 - v14;
  uint64_t v211 = sub_1001BFB40();
  uint64_t v209 = *(void *)(v211 - 8);
  __chkstk_darwin(v211, v15);
  unint64_t v181 = (char *)&v167 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v205 = sub_100003918(&qword_10020E620);
  __chkstk_darwin(v205, v17);
  uint64_t v210 = (char *)&v167 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100003918(&qword_10020D860);
  uint64_t v21 = __chkstk_darwin(v19 - 8, v20);
  uint64_t v190 = (uint64_t)&v167 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v21, v23);
  uint64_t v213 = (void (*)(char *, char *, uint64_t))((char *)&v167 - v25);
  __chkstk_darwin(v24, v26);
  uint64_t v208 = (char *)&v167 - v27;
  uint64_t v196 = sub_1001BF910();
  uint64_t v195 = *(void *)(v196 - 8);
  __chkstk_darwin(v196, v28);
  uint64_t v194 = (char *)&v167 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v186 = type metadata accessor for ThimbledEvent();
  __chkstk_darwin(v186, v30);
  uint64_t v185 = (uint64_t *)((char *)&v167 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v184 = sub_100003918(&qword_100208A00);
  uint64_t v183 = *(void *)(v184 - 8);
  __chkstk_darwin(v184, v32);
  uint64_t v182 = (char *)&v167 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = type metadata accessor for TrustedRequestConfiguration();
  uint64_t v35 = __chkstk_darwin(v189, v34);
  uint64_t v178 = (uint64_t)&v167 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35, v37);
  uint64_t v188 = (char *)&v167 - v38;
  uint64_t v180 = sub_1001BF2C0();
  uint64_t v179 = *(void *)(v180 - 8);
  uint64_t v40 = __chkstk_darwin(v180, v39);
  uint64_t v176 = (char *)&v167 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40, v42);
  uint64_t v44 = (char *)&v167 - v43;
  uint64_t v45 = type metadata accessor for RateLimitTimingDetails(0);
  __chkstk_darwin(v45, v46);
  uint64_t v48 = (double *)((char *)&v167 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v49 = type metadata accessor for RateLimitConfiguration(0);
  uint64_t v177 = *(void *)(v49 - 8);
  __chkstk_darwin(v49, v50);
  uint64_t v52 = (char *)&v167 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_1001C04D0();
  uint64_t v54 = *(void *)(v53 - 8);
  __chkstk_darwin(v53, v55);
  uint64_t v57 = (char *)&v167 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v207 = sub_1001BFC50();
  uint64_t v212 = *(void *)(v207 - 8);
  uint64_t v59 = __chkstk_darwin(v207, v58);
  uint64_t v199 = (char *)&v167 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __chkstk_darwin(v59, v61);
  uint64_t v206 = (char *)&v167 - v63;
  __chkstk_darwin(v62, v64);
  uint64_t v66 = (char *)&v167 - v65;
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v57, v203, v53);
  uint64_t v67 = (uint64_t)v204;
  swift_retain();
  sub_10000F034((uint64_t)v57, v67, (uint64_t)v66);
  char v68 = sub_1001BFBC0();
  uint64_t v214 = v66;
  if (v68)
  {
    uint64_t v69 = (int *)v189;
    uint64_t v203 = v45;
    uint64_t v173 = v49;
    uint64_t v204 = v48;
    uint64_t v70 = v44;
    uint64_t v174 = v52;
    uint64_t v71 = (uint64_t)v188;
    uint64_t v72 = sub_1001BFB50();
    if ((v73 & 1) == 0)
    {
      double v74 = *(double *)&v72;
      uint64_t v75 = v201;
      uint64_t v76 = v201 + qword_10021F8E0;
      uint64_t v77 = v69[21];
      uint64_t v78 = (uint64_t *)(v201 + qword_10021F8E0 + v69[20]);
      uint64_t v79 = v78[1];
      uint64_t v169 = *v78;
      uint64_t v80 = *(void *)(v201 + qword_10021F8E0 + v77 + 8);
      uint64_t v170 = *(void *)(v201 + qword_10021F8E0 + v77);
      uint64_t v172 = v80;
      swift_bridgeObjectRetain();
      uint64_t v171 = v79;
      swift_bridgeObjectRetain();
      uint64_t v168 = sub_1001BF930();
      uint64_t v167 = v81;
      uint64_t v82 = sub_1001BF940();
      uint64_t v83 = *(void *)(v76 + v69[17]);
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v84 = v197;
      uint64_t v85 = sub_10015A0C0(v82, v83, v75);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      BOOL v86 = sub_10011A3A0(v85);
      uint64_t v197 = v84;
      swift_release();
      _s20privatecloudcomputed8LRUCacheC10addToCache3now5valueSb10Foundation4DateV_xtFfA__0();
      uint64_t v87 = v76;
      uint64_t v88 = v70;
      uint64_t v89 = v71;
      sub_100161F3C(v87, v71, (uint64_t (*)(void))type metadata accessor for TrustedRequestConfiguration);
      uint64_t v90 = v179;
      char v91 = v176;
      uint64_t v92 = v180;
      (*(void (**)(char *, char *, uint64_t))(v179 + 16))(v176, v88, v180);
      double v93 = *(double *)(v89 + 56);
      uint64_t v94 = v178;
      sub_100161F3C(v89, v178, (uint64_t (*)(void))type metadata accessor for TrustedRequestConfiguration);
      unint64_t v95 = v204;
      *uint64_t v204 = 0.0;
      if (v74 < 0.0) {
        double v96 = 0.0;
      }
      else {
        double v96 = v74;
      }
      if (*(double *)(v94 + 40) >= v96) {
        double v97 = v96;
      }
      else {
        double v97 = *(double *)(v94 + 40);
      }
      v95[1] = v97;
      sub_1001BF250();
      if (v93 == 0.0) {
        double v93 = *(double *)(v94 + 56);
      }
      double v98 = 1.0;
      if (v93 <= 1.0) {
        double v98 = v93;
      }
      if (v93 < 0.0) {
        double v99 = 0.0;
      }
      else {
        double v99 = v98;
      }
      sub_10016290C(v94, (uint64_t (*)(void))type metadata accessor for TrustedRequestConfiguration);
      unint64_t v100 = *(void (**)(char *, uint64_t))(v90 + 8);
      v100(v91, v92);
      uint64_t v101 = (uint64_t)v204;
      *(double *)((char *)v204 + *(int *)(v203 + 28)) = v97 * v99;
      sub_10016290C(v89, (uint64_t (*)(void))type metadata accessor for TrustedRequestConfiguration);
      v100(v88, v92);
      id v102 = v174;
      uint64_t v103 = v171;
      *uint64_t v174 = v169;
      v102[1] = v103;
      uint64_t v104 = v172;
      v102[2] = v170;
      v102[3] = v104;
      uint64_t v105 = v167;
      v102[4] = v168;
      v102[5] = v105;
      v102[6] = v86;
      sub_1001627E8(v101, (uint64_t)v102 + *(int *)(v173 + 20), type metadata accessor for RateLimitTimingDetails);
      sub_100003918(&qword_10020D1D8);
      unint64_t v106 = (*(unsigned __int8 *)(v177 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v177 + 80);
      uint64_t v107 = swift_allocObject();
      *(_OWORD *)(v107 + 16) = xmmword_1001CC760;
      sub_100161F3C((uint64_t)v102, v107 + v106, type metadata accessor for RateLimitConfiguration);
      *uint64_t v185 = v107;
      swift_storeEnumTagMultiPayload();
      sub_100003918(qword_100208000);
      uint64_t v108 = v182;
      sub_1001C0FE0();
      (*(void (**)(char *, uint64_t))(v183 + 8))(v108, v184);
      sub_10016290C((uint64_t)v102, type metadata accessor for RateLimitConfiguration);
    }
  }
  uint64_t v110 = (uint64_t)v210;
  uint64_t v109 = v211;
  uint64_t v111 = (uint64_t)v208;
  uint64_t v112 = v209;
  uint64_t v113 = (uint64_t)v213;
  uint64_t v114 = sub_1001BFC30();
  if (v115)
  {
    uint64_t v116 = v115;
    uint64_t v204 = (double *)v114;
    uint64_t v118 = *(void *)(v201 + qword_10021F8E0 + 72);
    uint64_t v117 = *(void *)(v201 + qword_10021F8E0 + 80);
    uint64_t v119 = v195;
    uint64_t v120 = v194;
    uint64_t v121 = v196;
    (*(void (**)(char *, void, uint64_t))(v195 + 104))(v194, enum case for TC2EnvironmentNames.production(_:), v196);
    uint64_t v122 = sub_1001BF900();
    uint64_t v124 = v123;
    (*(void (**)(char *, uint64_t))(v119 + 8))(v120, v121);
    if (v118 == v122 && v117 == v124)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      char v125 = sub_1001C1840();
      swift_bridgeObjectRelease();
      if (v125)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v126 = sub_1001BFB70();
        uint64_t v128 = v127;
        uint64_t v129 = sub_1001BFB60();
        uint64_t v131 = v130;
        uint64_t v132 = sub_1001BFB80();
        uint64_t v134 = v133;
        uint64_t v135 = sub_1001BFBB0();
        unint64_t v136 = v185;
        *uint64_t v185 = (uint64_t)v204;
        v136[1] = v116;
        v136[2] = v126;
        v136[3] = v128;
        v136[4] = v129;
        v136[5] = v131;
        v136[6] = v132;
        v136[7] = v134;
        v136[8] = v135;
        v136[9] = v137;
        swift_storeEnumTagMultiPayload();
        sub_100003918(qword_100208000);
        uint64_t v138 = v182;
        sub_1001C0FE0();
        (*(void (**)(char *, uint64_t))(v183 + 8))(v138, v184);
      }
    }
    uint64_t v110 = (uint64_t)v210;
    uint64_t v109 = v211;
    uint64_t v111 = (uint64_t)v208;
    uint64_t v112 = v209;
    uint64_t v113 = (uint64_t)v213;
  }
  sub_1001BFC20();
  (*(void (**)(uint64_t, void, uint64_t))(v112 + 104))(v113, enum case for TC2RopesResponseMetadata.StatusCode.ok(_:), v109);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v112 + 56))(v113, 0, 1, v109);
  uint64_t v139 = v110 + *(int *)(v205 + 48);
  uint64_t v140 = &qword_10020D860;
  sub_10003282C(v111, v110, &qword_10020D860);
  sub_10003282C(v113, v139, &qword_10020D860);
  uint64_t v141 = v113;
  uint64_t v142 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v112 + 48);
  if (v142(v110, 1, v109) == 1)
  {
    sub_100010360(v141, &qword_10020D860);
    sub_100010360(v111, &qword_10020D860);
    if (v142(v139, 1, v109) == 1)
    {
      char v143 = -1;
    }
    else
    {
      uint64_t v140 = &qword_10020E620;
      char v143 = 0;
    }
  }
  else
  {
    uint64_t v144 = v190;
    sub_10003282C(v110, v190, &qword_10020D860);
    if (v142(v139, 1, v109) == 1)
    {
      sub_100010360((uint64_t)v213, &qword_10020D860);
      sub_100010360(v111, &qword_10020D860);
      (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v144, v109);
      char v143 = 0;
      uint64_t v140 = &qword_10020E620;
    }
    else
    {
      uint64_t v145 = v181;
      (*(void (**)(char *, uint64_t, uint64_t))(v112 + 32))(v181, v139, v109);
      sub_1001627A0(&qword_10020E630, (void (*)(uint64_t))&type metadata accessor for TC2RopesResponseMetadata.StatusCode);
      char v143 = sub_1001C0BD0();
      unint64_t v146 = *(void (**)(char *, uint64_t))(v112 + 8);
      v146(v145, v109);
      uint64_t v140 = &qword_10020D860;
      sub_100010360((uint64_t)v213, &qword_10020D860);
      sub_100010360(v111, &qword_10020D860);
      v146((char *)v144, v109);
    }
  }
  uint64_t v148 = v206;
  uint64_t v147 = v207;
  uint64_t v149 = v202;
  uint64_t v150 = v214;
  sub_100010360(v110, v140);
  uint64_t v151 = v212;
  uint64_t v152 = *(void (**)(char *, char *, uint64_t))(v212 + 16);
  v152(v148, v150, v147);
  if (v143)
  {
    uint64_t v213 = v152;
    uint64_t v153 = v198;
    sub_1001BFBA0();
    uint64_t v154 = enum case for TC2RopesResponseMetadata.ErrorCode.success(_:);
    uint64_t v155 = sub_1001BFC40();
    uint64_t v156 = (uint64_t)v192;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v155 - 8) + 104))(v192, v154, v155);
    uint64_t v157 = v193;
    (*(void (**)(uint64_t, void, uint64_t))(v193 + 104))(v156, enum case for TC2RopesResponseMetadata.ReceivedErrorCode.errorCode(_:), v149);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v157 + 56))(v156, 0, 1, v149);
    uint64_t v158 = v200;
    uint64_t v159 = v200 + *(int *)(v191 + 48);
    sub_10003282C(v153, v200, &qword_10020D868);
    uint64_t v160 = v158;
    sub_10003282C(v156, v159, &qword_10020D868);
    unint64_t v161 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v157 + 48);
    if (v161(v158, 1, v149) == 1)
    {
      sub_100010360(v156, &qword_10020D868);
      sub_100010360(v153, &qword_10020D868);
      Swift::String v162 = *(void (**)(char *, uint64_t))(v212 + 8);
      uint64_t v147 = v207;
      v162(v206, v207);
      if (v161(v159, 1, v149) == 1)
      {
        sub_100010360(v200, &qword_10020D868);
        uint64_t v150 = v214;
        return ((uint64_t (*)(char *, uint64_t))v162)(v150, v147);
      }
      uint64_t v160 = v200;
      goto LABEL_40;
    }
    sub_10003282C(v158, v187, &qword_10020D868);
    if (v161(v159, 1, v149) == 1)
    {
      sub_100010360(v156, &qword_10020D868);
      sub_100010360(v198, &qword_10020D868);
      Swift::String v162 = *(void (**)(char *, uint64_t))(v212 + 8);
      uint64_t v147 = v207;
      v162(v206, v207);
      (*(void (**)(uint64_t, uint64_t))(v157 + 8))(v187, v149);
LABEL_40:
      uint64_t v152 = v213;
      uint64_t v150 = v214;
      sub_100010360(v160, &qword_10020E618);
      goto LABEL_44;
    }
    uint64_t v163 = v175;
    (*(void (**)(char *, uint64_t, uint64_t))(v157 + 32))(v175, v159, v149);
    sub_1001627A0(&qword_10020E628, (void (*)(uint64_t))&type metadata accessor for TC2RopesResponseMetadata.ReceivedErrorCode);
    uint64_t v164 = v187;
    LODWORD(v211) = sub_1001C0BD0();
    uint64_t v165 = *(void (**)(char *, uint64_t))(v157 + 8);
    v165(v163, v149);
    sub_100010360(v156, &qword_10020D868);
    sub_100010360(v198, &qword_10020D868);
    Swift::String v162 = *(void (**)(char *, uint64_t))(v212 + 8);
    uint64_t v147 = v207;
    v162(v206, v207);
    v165((char *)v164, v149);
    sub_100010360(v200, &qword_10020D868);
    uint64_t v150 = v214;
    if (v211) {
      return ((uint64_t (*)(char *, uint64_t))v162)(v150, v147);
    }
    uint64_t v152 = v213;
  }
  else
  {
    Swift::String v162 = *(void (**)(char *, uint64_t))(v151 + 8);
    v162(v148, v147);
  }
LABEL_44:
  v152(v199, v150, v147);
  sub_1001BF810();
  sub_1001627A0(&qword_10020D938, (void (*)(uint64_t))&type metadata accessor for TrustedCloudComputeError);
  swift_allocError();
  sub_1001BF7F0();
  swift_willThrow();
  return ((uint64_t (*)(char *, uint64_t))v162)(v150, v147);
}

void sub_100122B90(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ThimbledEvent();
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100003918(&qword_100208A00);
  uint64_t v113 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v9);
  uint64_t v112 = (char *)v105 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1001BF340();
  uint64_t v110 = *(void *)(v11 - 8);
  uint64_t v111 = v11;
  __chkstk_darwin(v11, v12);
  uint64_t v109 = (char *)v105 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1001BF2C0();
  uint64_t v117 = *(void *)(v14 - 8);
  uint64_t v118 = (void (*)(uint64_t *, void, uint64_t))v14;
  __chkstk_darwin(v14, v15);
  uint64_t v116 = (char *)v105 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1001BF450();
  uint64_t v121 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17, v18);
  uint64_t v114 = (char *)v105 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v21);
  uint64_t v23 = (void *)((char *)v105 - v22);
  uint64_t v120 = sub_1001C02A0();
  uint64_t v115 = *(void *)(v120 - 8);
  uint64_t v25 = __chkstk_darwin(v120, v24);
  uint64_t v108 = (char *)v105 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25, v27);
  uint64_t v29 = (char *)v105 - v28;
  uint64_t v122 = a1;
  uint64_t v30 = (os_unfair_lock_s *)(v2 + *(void *)(*(void *)v2 + 128));
  os_unfair_lock_lock(v30);
  uint64_t v31 = sub_100003918(&qword_100208C90);
  sub_100161FA4((uint64_t)v30 + *(int *)(v31 + 28), v125);
  os_unfair_lock_unlock(v30);
  if (v125[0] != 1) {
    return;
  }
  unint64_t v106 = v7;
  swift_retain_n();
  uint64_t v32 = sub_1001C0330();
  os_log_type_t v33 = sub_1001C1200();
  BOOL v34 = os_log_type_enabled(v32, v33);
  uint64_t v107 = v8;
  v105[1] = v4;
  uint64_t v119 = v17;
  if (v34)
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    uint64_t v124 = swift_slowAlloc();
    *(_DWORD *)uint64_t v35 = 136315138;
    v105[0] = v35 + 4;
    uint64_t v36 = (uint64_t *)(v2 + *(void *)(*(void *)v2 + 256));
    uint64_t v38 = *v36;
    unint64_t v37 = v36[1];
    swift_bridgeObjectRetain();
    uint64_t v123 = sub_1000DF238(v38, v37, &v124);
    sub_1001C1310();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "%s Ropes invoke response head received", v35, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  uint64_t v39 = v115;
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v115 + 16);
  uint64_t v41 = v120;
  v40(v29, v2 + *(void *)(*(void *)v2 + 280), v120);
  uint64_t v42 = sub_1001C02C0();
  os_signpost_type_t v43 = sub_1001C12A0();
  if (sub_1001C12D0())
  {
    uint64_t v44 = v108;
    v40(v108, (uint64_t)v29, v41);
    uint64_t v45 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v45 = 0;
    os_signpost_id_t v46 = sub_1001C0290();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v42, v43, v46, "RopesResponseHeadReceived", "", v45, 2u);
    swift_slowDealloc();

    uint64_t v47 = *(void (**)(char *, uint64_t))(v39 + 8);
    v47(v29, v41);
    v47(v44, v41);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v39 + 8))(v29, v41);
  }
  uint64_t v48 = (char **)(v2 + *(void *)(*(void *)v2 + 176));
  uint64_t v49 = v48[1];
  uint64_t v108 = *v48;
  uint64_t v115 = (uint64_t)v49;
  swift_bridgeObjectRetain();
  unint64_t v50 = sub_100054DEC((uint64_t)_swiftEmptyArrayStorage);
  *uint64_t v23 = sub_1001BF2D0();
  v23[1] = v51;
  uint64_t v52 = v121;
  uint64_t v53 = *(void (**)(void))(v121 + 104);
  LODWORD(v120) = enum case for EventValue.string(_:);
  uint64_t v54 = v119;
  uint64_t v55 = (void (*)(uint64_t *, void, uint64_t))v53;
  v53(v23);
  uint64_t v57 = *(void (**)(uint64_t, uint64_t *, uint64_t))(v52 + 32);
  uint64_t v56 = v52 + 32;
  uint64_t v58 = (uint64_t)v114;
  uint64_t v59 = v57;
  v57((uint64_t)v114, v23, v54);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v124 = v50;
  sub_1000EAF20(v58, 8, isUniquelyReferenced_nonNull_native);
  uint64_t v61 = v124;
  swift_bridgeObjectRelease();
  uint64_t v62 = v116;
  sub_1001BF2B0();
  sub_1001BF280();
  double v64 = v63;
  (*(void (**)(char *, void (*)(uint64_t *, void, uint64_t)))(v117 + 8))(v62, v118);
  if ((~*(void *)&v64 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (v64 <= -9.22337204e18)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v64 >= 9.22337204e18)
  {
LABEL_19:
    __break(1u);
    return;
  }
  *uint64_t v23 = (uint64_t)v64;
  v55(v23, enum case for EventValue.int(_:), v54);
  uint64_t v65 = v54;
  uint64_t v66 = v59;
  v59(v58, v23, v65);
  char v67 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v124 = v61;
  sub_1000EAF20(v58, 0, v67);
  uint64_t v68 = v124;
  swift_bridgeObjectRelease();
  uint64_t v69 = (uint64_t *)(v2 + *(void *)(*(void *)v2 + 208));
  uint64_t v70 = v69[1];
  *uint64_t v23 = *v69;
  v23[1] = v70;
  uint64_t v71 = v56;
  uint64_t v72 = v120;
  v55(v23, v120, v119);
  v66(v58, v23, v119);
  swift_bridgeObjectRetain();
  char v73 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v124 = v68;
  sub_1000EAF20(v58, 1, v73);
  uint64_t v74 = v124;
  swift_bridgeObjectRelease();
  uint64_t v75 = (uint64_t *)(v2 + *(void *)(*(void *)v2 + 232));
  uint64_t v76 = v75[1];
  *uint64_t v23 = *v75;
  v23[1] = v76;
  uint64_t v77 = v66;
  uint64_t v78 = v71;
  uint64_t v79 = v119;
  v55(v23, v72, v119);
  uint64_t v121 = v78;
  v77(v58, v23, v79);
  swift_bridgeObjectRetain();
  char v80 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v124 = v74;
  sub_1000EAF20(v58, 2, v80);
  uint64_t v81 = v124;
  swift_bridgeObjectRelease();
  uint64_t v82 = (uint64_t *)(v2 + *(void *)(*(void *)v2 + 192));
  uint64_t v83 = v82[1];
  if (v83)
  {
    *uint64_t v23 = *v82;
    v23[1] = v83;
    v55(v23, v120, v79);
    v77(v58, v23, v79);
    swift_bridgeObjectRetain();
    char v84 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v124 = v81;
    sub_1000EAF20(v58, 3, v84);
    uint64_t v81 = v124;
    swift_bridgeObjectRelease();
  }
  uint64_t v85 = v55;
  uint64_t v86 = v115;
  *uint64_t v23 = (uint64_t)v108;
  v23[1] = v86;
  uint64_t v118 = v85;
  v85(v23, v120, v79);
  v77(v58, v23, v79);
  swift_bridgeObjectRetain();
  char v87 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v124 = v81;
  sub_1000EAF20(v58, 5, v87);
  uint64_t v88 = v124;
  swift_bridgeObjectRelease();
  uint64_t v89 = (uint64_t *)(v2 + *(void *)(*(void *)v2 + 184));
  uint64_t v90 = v89[1];
  char v91 = v77;
  if (v90)
  {
    *uint64_t v23 = *v89;
    v23[1] = v90;
    v118(v23, v120, v79);
    v77(v58, v23, v79);
    swift_bridgeObjectRetain();
    char v92 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v124 = v88;
    sub_1000EAF20(v58, 6, v92);
    uint64_t v88 = v124;
    swift_bridgeObjectRelease();
  }
  double v93 = v109;
  sub_1001BF330();
  uint64_t v94 = sub_1001BF320();
  uint64_t v96 = v95;
  (*(void (**)(char *, uint64_t))(v110 + 8))(v93, v111);
  *uint64_t v23 = v94;
  v23[1] = v96;
  v118(v23, v120, v79);
  v91(v58, v23, v79);
  char v97 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v124 = v88;
  sub_1000EAF20(v58, 7, v97);
  uint64_t v98 = v124;
  swift_bridgeObjectRelease();
  sub_1001BF440();
  v91(v58, v23, v79);
  char v99 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v124 = v98;
  sub_1000EAF20(v58, 9, v99);
  uint64_t v100 = v124;
  swift_bridgeObjectRelease();
  uint64_t v101 = v106;
  v106[3] = &type metadata for TC2InvokeResponseMetric;
  v101[4] = sub_100161FE4();
  id v102 = (void *)swift_allocObject();
  *uint64_t v101 = v102;
  v102[2] = 0xD000000000000015;
  v102[3] = 0x80000001001C68A0;
  uint64_t v103 = v108;
  v102[4] = v100;
  v102[5] = v103;
  v102[6] = v115;
  swift_storeEnumTagMultiPayload();
  sub_100003918(qword_100208000);
  uint64_t v104 = v112;
  sub_1001C0FE0();
  (*(void (**)(char *, uint64_t))(v113 + 8))(v104, v107);
}

uint64_t sub_100123840(uint64_t a1, char *a2)
{
  uint64_t v140 = a1;
  uint64_t v141 = a2;
  uint64_t v133 = sub_1001BFC00();
  uint64_t v137 = *(void *)(v133 - 8);
  __chkstk_darwin(v133, v2);
  uint64_t v123 = (char *)&v105 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = sub_100003918(&qword_10020E638);
  __chkstk_darwin(v134, v4);
  uint64_t v138 = (char *)&v105 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100003918(&qword_10020D858);
  uint64_t v8 = __chkstk_darwin(v6 - 8, v7);
  uint64_t v130 = (uint64_t)&v105 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8, v10);
  uint64_t v142 = (uint64_t)&v105 - v12;
  __chkstk_darwin(v11, v13);
  unint64_t v136 = (char *)&v105 - v14;
  uint64_t v120 = type metadata accessor for ThimbledEvent();
  __chkstk_darwin(v120, v15);
  uint64_t v121 = (uint64_t *)((char *)&v105 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v122 = sub_100003918(&qword_100208A00);
  uint64_t v119 = *(void *)(v122 - 8);
  __chkstk_darwin(v122, v17);
  uint64_t v118 = (char *)&v105 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = type metadata accessor for TrustedRequestConfiguration();
  uint64_t v20 = __chkstk_darwin(v128, v19);
  uint64_t v116 = (uint64_t)&v105 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v22);
  uint64_t v127 = (char *)&v105 - v23;
  uint64_t v126 = sub_1001BF2C0();
  uint64_t v117 = *(void *)(v126 - 8);
  uint64_t v25 = __chkstk_darwin(v126, v24);
  uint64_t v124 = (char *)&v105 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25, v27);
  char v125 = (char *)&v105 - v28;
  uint64_t v29 = type metadata accessor for RateLimitTimingDetails(0);
  __chkstk_darwin(v29, v30);
  uint64_t v32 = (char *)&v105 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for RateLimitConfiguration(0);
  uint64_t v115 = *(void *)(v33 - 8);
  __chkstk_darwin(v33, v34);
  uint64_t v36 = (char *)&v105 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1001C04D0();
  uint64_t v38 = *(void *)(v37 - 8);
  __chkstk_darwin(v37, v39);
  uint64_t v41 = (char *)&v105 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_1001BFC50();
  uint64_t v135 = *(void *)(v42 - 8);
  uint64_t v44 = __chkstk_darwin(v42, v43);
  uint64_t v131 = (char *)&v105 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44, v46);
  uint64_t v48 = (char *)&v105 - v47;
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v41, v140, v37);
  uint64_t v49 = (uint64_t)v141;
  swift_retain();
  sub_10000F034((uint64_t)v41, v49, (uint64_t)v48);
  char v50 = sub_1001BFBC0();
  uint64_t v141 = v48;
  uint64_t v139 = v42;
  if (v50)
  {
    uint64_t v51 = (int *)v128;
    uint64_t v140 = v29;
    uint64_t v112 = v33;
    uint64_t v113 = v32;
    uint64_t v52 = v126;
    uint64_t v114 = v36;
    uint64_t v53 = (uint64_t)v127;
    uint64_t v54 = v129;
    uint64_t v55 = sub_1001BFB50();
    if ((v56 & 1) == 0)
    {
      double v57 = *(double *)&v55;
      uint64_t v58 = v54 + qword_10021F8E0;
      uint64_t v59 = v51[21];
      uint64_t v60 = (uint64_t *)(v54 + qword_10021F8E0 + v51[20]);
      uint64_t v61 = v60[1];
      uint64_t v108 = *v60;
      uint64_t v62 = *(void *)(v54 + qword_10021F8E0 + v59 + 8);
      uint64_t v109 = *(void *)(v54 + qword_10021F8E0 + v59);
      uint64_t v111 = v62;
      swift_bridgeObjectRetain();
      uint64_t v110 = v61;
      swift_bridgeObjectRetain();
      uint64_t v107 = sub_1001BF930();
      uint64_t v106 = v63;
      uint64_t v64 = sub_1001BF940();
      uint64_t v65 = *(void *)(v58 + v51[17]);
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v66 = v132;
      uint64_t v67 = sub_10015A0C0(v64, v65, v54);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v68 = sub_10011A3A0(v67);
      uint64_t v132 = v66;
      swift_release();
      uint64_t v69 = v125;
      _s20privatecloudcomputed8LRUCacheC10addToCache3now5valueSb10Foundation4DateV_xtFfA__0();
      uint64_t v70 = v53;
      sub_100161F3C(v58, v53, (uint64_t (*)(void))type metadata accessor for TrustedRequestConfiguration);
      uint64_t v71 = v117;
      uint64_t v72 = v52;
      (*(void (**)(char *, char *, uint64_t))(v117 + 16))(v124, v69, v52);
      double v73 = *(double *)(v70 + 56);
      uint64_t v74 = v116;
      sub_100161F3C(v70, v116, (uint64_t (*)(void))type metadata accessor for TrustedRequestConfiguration);
      uint64_t v75 = (uint64_t)v113;
      *uint64_t v113 = 0;
      if (v57 < 0.0) {
        double v76 = 0.0;
      }
      else {
        double v76 = v57;
      }
      if (*(double *)(v74 + 40) >= v76) {
        double v77 = v76;
      }
      else {
        double v77 = *(double *)(v74 + 40);
      }
      *(double *)(v75 + 8) = v77;
      sub_1001BF250();
      if (v73 == 0.0) {
        double v73 = *(double *)(v74 + 56);
      }
      double v78 = 1.0;
      if (v73 <= 1.0) {
        double v78 = v73;
      }
      if (v73 < 0.0) {
        double v79 = 0.0;
      }
      else {
        double v79 = v78;
      }
      sub_10016290C(v74, (uint64_t (*)(void))type metadata accessor for TrustedRequestConfiguration);
      char v80 = *(void (**)(char *, uint64_t))(v71 + 8);
      v80(v124, v72);
      *(double *)(v75 + *(int *)(v140 + 28)) = v77 * v79;
      sub_10016290C(v70, (uint64_t (*)(void))type metadata accessor for TrustedRequestConfiguration);
      v80(v125, v72);
      uint64_t v81 = v114;
      uint64_t v82 = v110;
      *uint64_t v114 = v108;
      v81[1] = v82;
      uint64_t v83 = v111;
      v81[2] = v109;
      v81[3] = v83;
      uint64_t v84 = v106;
      v81[4] = v107;
      v81[5] = v84;
      v81[6] = v68;
      sub_1001627E8(v75, (uint64_t)v81 + *(int *)(v112 + 20), type metadata accessor for RateLimitTimingDetails);
      sub_100003918(&qword_10020D1D8);
      unint64_t v85 = (*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80);
      uint64_t v86 = swift_allocObject();
      *(_OWORD *)(v86 + 16) = xmmword_1001CC760;
      sub_100161F3C((uint64_t)v81, v86 + v85, type metadata accessor for RateLimitConfiguration);
      *uint64_t v121 = v86;
      swift_storeEnumTagMultiPayload();
      sub_100003918(qword_100208000);
      char v87 = v118;
      sub_1001C0FE0();
      (*(void (**)(char *, uint64_t))(v119 + 8))(v87, v122);
      sub_10016290C((uint64_t)v81, type metadata accessor for RateLimitConfiguration);
    }
    uint64_t v89 = v137;
    uint64_t v88 = (uint64_t)v138;
    uint64_t v90 = (uint64_t)v136;
    uint64_t v91 = v142;
  }
  else
  {
    uint64_t v89 = v137;
    uint64_t v88 = (uint64_t)v138;
    uint64_t v90 = (uint64_t)v136;
    uint64_t v91 = v142;
  }
  uint64_t v92 = v134;
  uint64_t v93 = v133;
  sub_1001BFC10();
  (*(void (**)(uint64_t, void, uint64_t))(v89 + 104))(v91, enum case for TC2RopesResponseMetadata.Code.ok(_:), v93);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v89 + 56))(v91, 0, 1, v93);
  uint64_t v94 = v88 + *(int *)(v92 + 48);
  sub_10003282C(v90, v88, &qword_10020D858);
  sub_10003282C(v91, v94, &qword_10020D858);
  uint64_t v95 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v89 + 48);
  if (v95(v88, 1, v93) != 1)
  {
    uint64_t v100 = v130;
    sub_10003282C(v88, v130, &qword_10020D858);
    int v101 = v95(v94, 1, v93);
    uint64_t v97 = v139;
    if (v101 != 1)
    {
      uint64_t v103 = v123;
      (*(void (**)(char *, uint64_t, uint64_t))(v89 + 32))(v123, v94, v93);
      sub_1001627A0(&qword_10020E640, (void (*)(uint64_t))&type metadata accessor for TC2RopesResponseMetadata.Code);
      LODWORD(v140) = sub_1001C0BD0();
      uint64_t v104 = *(void (**)(char *, uint64_t))(v89 + 8);
      v104(v103, v93);
      sub_100010360(v142, &qword_10020D858);
      sub_100010360(v90, &qword_10020D858);
      v104((char *)v100, v93);
      sub_100010360(v88, &qword_10020D858);
      uint64_t v99 = v135;
      uint64_t v98 = v141;
      if (v140) {
        return (*(uint64_t (**)(char *, uint64_t))(v99 + 8))(v98, v97);
      }
LABEL_25:
      (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v131, v98, v97);
      sub_1001BF810();
      sub_1001627A0(&qword_10020D938, (void (*)(uint64_t))&type metadata accessor for TrustedCloudComputeError);
      swift_allocError();
      sub_1001BF7F0();
      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v99 + 8))(v98, v97);
    }
    sub_100010360(v142, &qword_10020D858);
    sub_100010360(v90, &qword_10020D858);
    (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v100, v93);
    uint64_t v98 = v141;
LABEL_24:
    sub_100010360(v88, &qword_10020E638);
    uint64_t v99 = v135;
    goto LABEL_25;
  }
  sub_100010360(v91, &qword_10020D858);
  sub_100010360(v90, &qword_10020D858);
  int v96 = v95(v94, 1, v93);
  uint64_t v97 = v139;
  uint64_t v98 = v141;
  if (v96 != 1) {
    goto LABEL_24;
  }
  sub_100010360(v88, &qword_10020D858);
  uint64_t v99 = v135;
  return (*(uint64_t (**)(char *, uint64_t))(v99 + 8))(v98, v97);
}

uint64_t sub_100124578(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1001C03E0();
  uint64_t v36 = *(void *)(v4 - 8);
  uint64_t v37 = v4;
  __chkstk_darwin(v4, v5);
  uint64_t v35 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1001C02A0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v10 = __chkstk_darwin(v7, v9);
  uint64_t v34 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v34 - v13;
  uint64_t v15 = sub_1001C14C0();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = a1;
  sub_1001C14E0();
  sub_1001627A0(&qword_100208C80, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  sub_1001C18D0();
  sub_1001627A0(&qword_100208C88, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
  sub_1001C1500();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  uint64_t v38 = *(void *)(v43 + 16);
  long long v39 = v42;
  uint64_t v40 = &v43;
  uint64_t v41 = v2;
  uint64_t v20 = (os_unfair_lock_s *)(v2 + *(void *)(*(void *)v2 + 128));
  os_unfair_lock_lock(v20);
  uint64_t v21 = sub_100003918(&qword_100208C90);
  sub_100161ED4((uint64_t)v20 + *(int *)(v21 + 28), (uint64_t *)&v42);
  os_unfair_lock_unlock(v20);
  uint64_t v22 = v42;
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v23(v14, v2 + *(void *)(*(void *)v2 + 280), v7);
  uint64_t v24 = sub_1001C02C0();
  os_signpost_type_t v25 = sub_1001C12A0();
  if ((sub_1001C12D0() & 1) == 0)
  {

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v14, v7);
    if (!v22) {
      return result;
    }
    goto LABEL_5;
  }
  uint64_t v26 = v34;
  v23(v34, (uint64_t)v14, v7);
  uint64_t v27 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v27 = 0;
  os_signpost_id_t v28 = sub_1001C0290();
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v24, v25, v28, "AttestationsReceivedFromRopes", "", v27, 2u);
  swift_slowDealloc();

  uint64_t v29 = *(void (**)(char *, uint64_t))(v8 + 8);
  v29(v14, v7);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v29)(v26, v7);
  if (v22)
  {
LABEL_5:
    uint64_t v32 = v35;
    uint64_t v31 = v36;
    uint64_t v33 = v37;
    (*(void (**)(char *, void, uint64_t))(v36 + 104))(v35, enum case for NWActivity.CompletionReason.success(_:), v37);
    swift_retain();
    sub_1001C0400();
    swift_release_n();
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v32, v33);
  }
  return result;
}

uint64_t sub_100124A48(uint64_t a1)
{
  uint64_t v37 = a1;
  uint64_t v2 = sub_1001C03E0();
  uint64_t v35 = *(void *)(v2 - 8);
  uint64_t v36 = v2;
  __chkstk_darwin(v2, v3);
  uint64_t v34 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1001C02A0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = __chkstk_darwin(v5, v7);
  uint64_t v33 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v32 - v11;
  uint64_t v13 = sub_1001C14C0();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001C14E0();
  sub_1001627A0(&qword_100208C80, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  sub_1001C18D0();
  sub_1001627A0(&qword_100208C88, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
  sub_1001C1500();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  uint64_t v38 = 1;
  long long v39 = v42;
  uint64_t v40 = v37;
  uint64_t v41 = v1;
  uint64_t v18 = (os_unfair_lock_s *)(v41 + *(void *)(*(void *)v41 + 128));
  os_unfair_lock_lock(v18);
  uint64_t v19 = sub_100003918(&qword_100208C90);
  sub_100161E90((uint64_t)v18 + *(int *)(v19 + 28), (uint64_t *)&v42);
  os_unfair_lock_unlock(v18);
  uint64_t v20 = v42;
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v21(v12, v1 + *(void *)(*(void *)v1 + 280), v5);
  uint64_t v22 = sub_1001C02C0();
  os_signpost_type_t v23 = sub_1001C12A0();
  if ((sub_1001C12D0() & 1) == 0)
  {

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v12, v5);
    if (!v20) {
      return result;
    }
    goto LABEL_5;
  }
  uint64_t v24 = v33;
  v21(v33, (uint64_t)v12, v5);
  os_signpost_type_t v25 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)os_signpost_type_t v25 = 0;
  os_signpost_id_t v26 = sub_1001C0290();
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v22, v23, v26, "AttestationsReceivedFromRopes", "", v25, 2u);
  swift_slowDealloc();

  uint64_t v27 = *(void (**)(char *, uint64_t))(v6 + 8);
  v27(v12, v5);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v27)(v24, v5);
  if (v20)
  {
LABEL_5:
    uint64_t v30 = v34;
    uint64_t v29 = v35;
    uint64_t v31 = v36;
    (*(void (**)(char *, void, uint64_t))(v35 + 104))(v34, enum case for NWActivity.CompletionReason.success(_:), v36);
    swift_retain();
    sub_1001C0400();
    swift_release_n();
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v30, v31);
  }
  return result;
}

uint64_t sub_100124F10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_1001BF950();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v43 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for Proto_Ropes_Common_Attestation(0);
  uint64_t v12 = __chkstk_darwin(v44, v11);
  long long v42 = (uint64_t *)((char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)&v37 - v15;
  sub_100161F3C(a1, (uint64_t)&v37 - v15, type metadata accessor for Proto_Ropes_Common_Attestation);
  swift_retain_n();
  uint64_t v17 = sub_1001C0330();
  os_log_type_t v18 = sub_1001C11E0();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v40 = a1;
    uint64_t v20 = v19;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v41 = v3;
    v45[0] = v21;
    *(_DWORD *)uint64_t v20 = 136315394;
    uint64_t v39 = v7;
    uint64_t v22 = (uint64_t *)(a2 + *(void *)(*(void *)a2 + 368));
    uint64_t v38 = v8;
    uint64_t v23 = *v22;
    unint64_t v24 = v22[1];
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_1000DF238(v23, v24, v45);
    sub_1001C1310();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 1024;
    os_signpost_type_t v25 = &v16[*(int *)(v44 + 28)];
    if (v25[4]) {
      int v26 = 0;
    }
    else {
      int v26 = *(_DWORD *)v25;
    }
    sub_10016290C((uint64_t)v16, type metadata accessor for Proto_Ropes_Common_Attestation);
    LODWORD(v52) = v26;
    uint64_t v8 = v38;
    uint64_t v7 = v39;
    sub_1001C1310();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "%s attestation with %u ohttp context", (uint8_t *)v20, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a1 = v40;
    swift_slowDealloc();
  }
  else
  {
    sub_10016290C((uint64_t)v16, type metadata accessor for Proto_Ropes_Common_Attestation);
    swift_release_n();
  }

  uint64_t v27 = v42;
  sub_100161F3C(a1, (uint64_t)v42, type metadata accessor for Proto_Ropes_Common_Attestation);
  uint64_t v28 = (uint64_t)v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v43, a2 + qword_10021F8E8, v7);
  sub_1000BA1C8(v27, v28, v45);
  uint64_t v29 = v45[1];
  uint64_t v30 = v48;
  uint64_t v31 = v49;
  uint64_t v32 = (unsigned int *)(a1 + *(int *)(v44 + 28));
  if (*((unsigned char *)v32 + 4)) {
    uint64_t v33 = 0;
  }
  else {
    uint64_t v33 = *v32;
  }
  *(void *)a3 = v45[0];
  *(void *)(a3 + 8) = v29;
  long long v34 = v47;
  *(_OWORD *)(a3 + 16) = v46;
  *(_OWORD *)(a3 + 32) = v34;
  *(void *)(a3 + 48) = v30;
  *(void *)(a3 + 56) = v31;
  long long v35 = v51;
  *(_OWORD *)(a3 + 64) = v50;
  *(_OWORD *)(a3 + 80) = v35;
  *(void *)(a3 + 96) = v33;
  type metadata accessor for ValidatedAttestationOrAttestation();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100125310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v47 = a3;
  uint64_t v6 = type metadata accessor for TrustedRequestConfiguration();
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = &v42[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration(0);
  uint64_t v12 = __chkstk_darwin(v10, v11);
  uint64_t v48 = &v42[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (uint64_t *)&v42[-v15];
  uint64_t v17 = sub_1001BF2C0();
  __chkstk_darwin(v17 - 8, v18);
  uint64_t v20 = &v42[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = sub_100003918(&qword_100209380);
  __chkstk_darwin(v21 - 8, v22);
  unint64_t v24 = &v42[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  _s20privatecloudcomputed8LRUCacheC10addToCache3now5valueSb10Foundation4DateV_xtFfA__0();
  uint64_t v25 = a1;
  sub_100161F3C(a1, (uint64_t)v16, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
  sub_100161F3C(a2 + qword_10021F8E0, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for TrustedRequestConfiguration);
  sub_1000D4D08(v20, v16, (uint64_t)v9, v24);
  uint64_t v26 = type metadata accessor for RateLimitConfiguration(0);
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v27 + 48))(v24, 1, v26) == 1)
  {
    uint64_t v45 = v10;
    uint64_t v46 = v3;
    sub_100010360((uint64_t)v24, &qword_100209380);
    sub_100161F3C(v25, (uint64_t)v48, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
    swift_retain_n();
    uint64_t v28 = sub_1001C0330();
    os_log_type_t v29 = sub_1001C11F0();
    int v30 = v29;
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      uint64_t v50 = v44;
      *(_DWORD *)uint64_t v31 = 136315394;
      uint64_t v32 = (uint64_t *)(a2 + *(void *)(*(void *)a2 + 368));
      int v43 = v30;
      uint64_t v34 = *v32;
      unint64_t v33 = v32[1];
      swift_bridgeObjectRetain();
      uint64_t v49 = sub_1000DF238(v34, v33, &v50);
      sub_1001C1310();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2080;
      long long v35 = v48;
      sub_100161F3C((uint64_t)v48, (uint64_t)v16, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
      uint64_t v36 = sub_1001C0C40();
      uint64_t v49 = sub_1000DF238(v36, v37, &v50);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      sub_10016290C((uint64_t)v35, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
      _os_log_impl((void *)&_mh_execute_header, v28, (os_log_type_t)v43, "%s unable to process rate limit configuration %s", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();

      sub_10016290C((uint64_t)v48, type metadata accessor for Proto_Ropes_RateLimit_RateLimitConfiguration);
    }
    uint64_t v39 = 1;
    uint64_t v40 = v47;
  }
  else
  {
    uint64_t v38 = v47;
    sub_1001627E8((uint64_t)v24, v47, type metadata accessor for RateLimitConfiguration);
    uint64_t v39 = 0;
    uint64_t v40 = v38;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v40, v39, 1, v26);
}

void sub_1001257F4(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100003918(&qword_10020E068);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_1001BFCB0();
  uint64_t v10 = __chkstk_darwin(v44, v9);
  uint64_t v38 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v12);
  long long v35 = (char *)&v34 - v14;
  uint64_t v36 = v13;
  uint64_t v15 = *(void *)(a1 + 64);
  uint64_t v40 = a1 + 64;
  uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v15;
  int64_t v41 = (unint64_t)(v16 + 63) >> 6;
  long long v42 = (void (**)(char *, void, uint64_t, uint64_t))(v13 + 56);
  uint64_t v19 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  unint64_t v37 = (void (**)(char *, char *, uint64_t))(v13 + 32);
  uint64_t v43 = a1;
  swift_bridgeObjectRetain();
  int64_t v20 = 0;
  uint64_t v39 = _swiftEmptyArrayStorage;
  if (!v18) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v21 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  for (unint64_t i = v21 | (v20 << 6); ; unint64_t i = __clz(__rbit64(v24)) + (v20 << 6))
  {
    uint64_t v26 = *(void *)(*(void *)(v43 + 56) + 8 * i);
    uint64_t v2 = (os_unfair_lock_s *)(v26 + *(void *)(*(void *)v26 + 304));
    swift_retain();
    os_unfair_lock_lock(v2);
    sub_100156A4C((uint64_t)&v2[2]);
    if (v3) {
      break;
    }
    os_unfair_lock_unlock(v2);
    os_unfair_lock_lock(v2);
    sub_100156994(&v2[2]._os_unfair_lock_opaque);
    uint64_t v3 = 0;
    os_unfair_lock_unlock(v2);
    uint64_t v27 = v44;
    (*v42)(v8, 0, 1, v44);
    swift_release();
    if ((*v19)(v8, 1, v27) == 1)
    {
      sub_100010360((uint64_t)v8, &qword_10020E068);
      if (v18) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v2 = (os_unfair_lock_s *)*v37;
      uint64_t v28 = v35;
      uint64_t v29 = v44;
      (*v37)(v35, v8, v44);
      ((void (*)(char *, char *, uint64_t))v2)(v38, v28, v29);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v39 = (void *)sub_1000E4288(0, v39[2] + 1, 1, (unint64_t)v39);
      }
      unint64_t v31 = v39[2];
      unint64_t v30 = v39[3];
      if (v31 >= v30 >> 1) {
        uint64_t v39 = (void *)sub_1000E4288(v30 > 1, v31 + 1, 1, (unint64_t)v39);
      }
      uint64_t v32 = v38;
      unint64_t v33 = v39;
      v39[2] = v31 + 1;
      ((void (*)(char *, char *, uint64_t))v2)((char *)v33+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(void *)(v36 + 72) * v31, v32, v44);
      if (v18) {
        goto LABEL_4;
      }
    }
LABEL_5:
    if (__OFADD__(v20++, 1))
    {
      __break(1u);
LABEL_36:
      __break(1u);
      break;
    }
    if (v20 >= v41) {
      goto LABEL_34;
    }
    unint64_t v24 = *(void *)(v40 + 8 * v20);
    if (!v24)
    {
      int64_t v25 = v20 + 1;
      if (v20 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v24 = *(void *)(v40 + 8 * v25);
      if (!v24)
      {
        int64_t v25 = v20 + 2;
        if (v20 + 2 >= v41) {
          goto LABEL_34;
        }
        unint64_t v24 = *(void *)(v40 + 8 * v25);
        if (!v24)
        {
          int64_t v25 = v20 + 3;
          if (v20 + 3 >= v41) {
            goto LABEL_34;
          }
          unint64_t v24 = *(void *)(v40 + 8 * v25);
          if (!v24)
          {
            int64_t v25 = v20 + 4;
            if (v20 + 4 >= v41) {
              goto LABEL_34;
            }
            unint64_t v24 = *(void *)(v40 + 8 * v25);
            if (!v24)
            {
              int64_t v25 = v20 + 5;
              if (v20 + 5 >= v41)
              {
LABEL_34:
                swift_release();
                return;
              }
              unint64_t v24 = *(void *)(v40 + 8 * v25);
              if (!v24)
              {
                while (1)
                {
                  int64_t v20 = v25 + 1;
                  if (__OFADD__(v25, 1)) {
                    goto LABEL_36;
                  }
                  if (v20 >= v41) {
                    goto LABEL_34;
                  }
                  unint64_t v24 = *(void *)(v40 + 8 * v20);
                  ++v25;
                  if (v24) {
                    goto LABEL_19;
                  }
                }
              }
            }
          }
        }
      }
      int64_t v20 = v25;
    }
LABEL_19:
    unint64_t v18 = (v24 - 1) & v24;
  }
  os_unfair_lock_unlock(v2);
  __break(1u);
}

uint64_t sub_100125C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[12] = a4;
  v5[13] = a5;
  v5[10] = a2;
  v5[11] = a3;
  v5[14] = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest(0);
  v5[15] = swift_task_alloc();
  return _swift_task_switch(sub_100125D20, 0, 0);
}

uint64_t sub_100125D20()
{
  unint64_t v30 = v0;
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[11];
  *(void *)(swift_task_alloc() + 16) = v2;
  sub_1001627A0(&qword_10020A058, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest);
  sub_1001C0060();
  swift_task_dealloc();
  uint64_t v3 = sub_10015AE7C(v1, (void (*)(void))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest, &qword_10020A058, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest);
  v0[16] = v3;
  v0[17] = v4;
  unint64_t v5 = v4;
  uint64_t v6 = v3;
  uint64_t v7 = 0;
  switch(v4 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(v3), v3)) {
        goto LABEL_14;
      }
      uint64_t v7 = HIDWORD(v3) - (int)v3;
LABEL_6:
      uint64_t v10 = v0[12];
      swift_beginAccess();
      uint64_t v11 = *(void *)(v10 + 16);
      BOOL v12 = __OFSUB__(v11, v7);
      uint64_t v13 = v11 - v7;
      if (v12)
      {
        __break(1u);
LABEL_14:
        __break(1u);
LABEL_15:
        __break(1u);
        JUMPOUT(0x1001261E8);
      }
      *(void *)(v0[12] + 16) = v13;
      swift_retain_n();
      swift_retain();
      uint64_t v14 = sub_1001C0330();
      os_log_type_t type = sub_1001C11E0();
      BOOL v15 = os_log_type_enabled(v14, type);
      uint64_t v16 = v0[12];
      uint64_t v17 = v0[10];
      if (v15)
      {
        uint64_t v18 = swift_slowAlloc();
        uint64_t v29 = swift_slowAlloc();
        *(_DWORD *)uint64_t v18 = 136315394;
        uint64_t v19 = (uint64_t *)(v17 + *(void *)(*(void *)v17 + 368));
        uint64_t v20 = *v19;
        unint64_t v21 = v19[1];
        swift_bridgeObjectRetain();
        v0[8] = sub_1000DF238(v20, v21, &v29);
        sub_1001C1310();
        swift_bridgeObjectRelease();
        swift_release_n();
        *(_WORD *)(v18 + 12) = 2048;
        swift_beginAccess();
        v0[9] = *(void *)(v16 + 16);
        sub_1001C1310();
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v14, type, "%s Sending auth message on data stream. Remaining budget before node selected: %ld", (uint8_t *)v18, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
        swift_release();
      }
      uint64_t v22 = v0[13];
      sub_1001C0570();
      sub_100007B14(v6, v5);
      uint64_t v23 = sub_1001C0540();
      v0[18] = v23;
      uint64_t v24 = swift_task_alloc();
      v0[19] = v24;
      *(void *)(v24 + 16) = v22;
      *(void *)(v24 + 24) = v6;
      *(void *)(v24 + 32) = v5;
      *(void *)(v24 + 40) = v23;
      *(unsigned char *)(v24 + 48) = 0;
      int64_t v25 = (void *)swift_task_alloc();
      v0[20] = v25;
      *int64_t v25 = v0;
      v25[1] = sub_1001261F8;
      uint64_t v26 = v0[13];
      return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v25, &unk_10020E558, v24, sub_1000A10C0, v26, 0, 0, (char *)&type metadata for () + 8);
    case 2uLL:
      uint64_t v9 = *(void *)(v3 + 16);
      uint64_t v8 = *(void *)(v3 + 24);
      uint64_t v7 = v8 - v9;
      if (!__OFSUB__(v8, v9)) {
        goto LABEL_6;
      }
      goto LABEL_15;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v7 = BYTE6(v4);
      goto LABEL_6;
  }
}

uint64_t sub_1001261F8()
{
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1001263C0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100126314;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100126314()
{
  unint64_t v1 = v0[17];
  uint64_t v3 = v0[15];
  uint64_t v2 = v0[16];
  swift_release();
  sub_10000792C(v2, v1);
  sub_10000792C(v2, v1);
  sub_10016290C(v3, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1001263C0()
{
  uint64_t v2 = v0[16];
  unint64_t v1 = v0[17];
  swift_task_dealloc();
  swift_release();
  sub_10000792C(v2, v1);
  sub_10000792C(v2, v1);
  sub_10016290C(v0[15], type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest);
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100126478(uint64_t a1, int *a2)
{
  v3[10] = v2;
  uint64_t v5 = sub_1001C02A0();
  v3[11] = v5;
  v3[12] = *(void *)(v5 - 8);
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  uint64_t v6 = sub_1001C14C0();
  v3[15] = v6;
  v3[16] = *(void *)(v6 - 8);
  v3[17] = swift_task_alloc();
  uint64_t v9 = (uint64_t (*)(void *))((char *)a2 + *a2);
  uint64_t v7 = (void *)swift_task_alloc();
  v3[18] = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100126634;
  return v9(v3 + 6);
}

uint64_t sub_100126634()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100126CB4;
  }
  else {
    uint64_t v2 = sub_100126748;
  }
  return _swift_task_switch(v2, 0, 0);
}

void sub_100126748()
{
  uint64_t v39 = v0;
  *(void *)(v0 + 32) = *(void *)(v0 + 48);
  uint64_t v1 = (uint64_t *)(v0 + 32);
  uint64_t v37 = v1[15];
  uint64_t v3 = v1[12];
  uint64_t v2 = v1[13];
  uint64_t v4 = v1[11];
  uint64_t v5 = v1[6];
  *((unsigned char *)v1 + 8) = v37 != 0;
  sub_1001C14E0();
  sub_1001627A0(&qword_100208C80, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  sub_1001C18D0();
  sub_1001627A0(&qword_100208C88, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
  sub_1001C1500();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v6 = *(v1 - 2);
  uint64_t v7 = *(v1 - 1);
  uint64_t v8 = (void *)swift_task_alloc();
  v8[2] = v1;
  v8[3] = v6;
  v8[4] = v7;
  uint64_t v9 = (os_unfair_lock_s *)(v5 + *(void *)(*(void *)v5 + 128));
  os_unfair_lock_lock(v9);
  uint64_t v10 = sub_100003918(&qword_100208C90);
  sub_10016197C((uint64_t)v9 + *(int *)(v10 + 28), v11);
  os_unfair_lock_unlock(v9);
  if (v37) {
    return;
  }
  swift_task_dealloc();
  uint64_t v12 = v36;
  if (*(unsigned char *)(v36 + 40) == 1)
  {
    uint64_t v13 = *v1;
  }
  else
  {
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 + 96) + 16);
    v14(*(void *)(v36 + 112), *(void *)(v36 + 80) + *(void *)(**(void **)(v36 + 80) + 280), *(void *)(v36 + 88));
    BOOL v15 = sub_1001C02C0();
    os_signpost_type_t v16 = sub_1001C12A0();
    char v17 = sub_1001C12D0();
    uint64_t v18 = *(void *)(v36 + 112);
    if (v17)
    {
      uint64_t v20 = *(void *)(v36 + 96);
      uint64_t v19 = *(void *)(v36 + 104);
      uint64_t v21 = *(void *)(v36 + 88);
      v14(v19, v18, v21);
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      os_signpost_id_t v23 = sub_1001C0290();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v15, v16, v23, "OTTSent", "", v22, 2u);
      swift_slowDealloc();

      uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
      v24(v18, v21);
      v24(v19, v21);
    }
    else
    {
      uint64_t v25 = *(void *)(v36 + 88);
      uint64_t v26 = *(void *)(v36 + 96);

      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v18, v25);
    }
    swift_retain_n();
    uint64_t v27 = sub_1001C0330();
    os_log_type_t v28 = sub_1001C1200();
    BOOL v29 = os_log_type_enabled(v27, v28);
    uint64_t v30 = v1[6];
    if (v29)
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 136315138;
      uint64_t v32 = (uint64_t *)(v30 + *(void *)(*(void *)v30 + 256));
      uint64_t v33 = *v32;
      unint64_t v34 = v32[1];
      swift_bridgeObjectRetain();
      v1[5] = sub_1000DF238(v33, v34, &v38);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "%s Sent auth message on data stream", v31, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    uint64_t v12 = v36;
    if ((*(unsigned char *)(v36 + 40) & 1) == 0)
    {
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      long long v35 = *(void (**)(void))(v36 + 8);
      goto LABEL_14;
    }
    uint64_t v13 = *(void *)(v36 + 32);
  }
  *(void *)(v12 + 64) = v13;
  sub_100003918(&qword_100208C98);
  swift_willThrowTypedImpl();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v35 = *(void (**)(void))(v12 + 8);
LABEL_14:
  v35();
}

uint64_t sub_100126CB4()
{
  uint64_t v41 = v0;
  uint64_t v1 = *(void *)(v0 + 152);
  *(void *)(v0 + 32) = v1;
  uint64_t v2 = (uint64_t *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 120);
  uint64_t v6 = *(void *)(v0 + 80);
  *(unsigned char *)(v0 + 40) = v1 != 0;
  sub_1001C14E0();
  sub_1001627A0(&qword_100208C80, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  sub_1001C18D0();
  sub_1001627A0(&qword_100208C88, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
  sub_1001C1500();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v5);
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v8 = *(void *)(v0 + 24);
  uint64_t v9 = (void *)swift_task_alloc();
  v9[2] = v0 + 32;
  v9[3] = v7;
  v9[4] = v8;
  uint64_t v10 = (os_unfair_lock_s *)(v6 + *(void *)(*(void *)v6 + 128));
  os_unfair_lock_lock(v10);
  uint64_t v11 = sub_100003918(&qword_100208C90);
  sub_10016197C((uint64_t)v10 + *(int *)(v11 + 28), v12);
  os_unfair_lock_unlock(v10);
  uint64_t v38 = (uint64_t *)(v0 + 80);
  swift_task_dealloc();
  uint64_t v13 = v39;
  if (*(unsigned char *)(v39 + 40) == 1)
  {
    uint64_t v14 = *v2;
LABEL_11:
    *(void *)(v13 + 64) = v14;
    sub_100003918(&qword_100208C98);
    swift_willThrowTypedImpl();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v36 = *(uint64_t (**)(void))(v13 + 8);
    goto LABEL_13;
  }
  BOOL v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 + 96) + 16);
  v15(*(void *)(v39 + 112), *(void *)(v39 + 80) + *(void *)(**(void **)(v39 + 80) + 280), *(void *)(v39 + 88));
  os_signpost_type_t v16 = sub_1001C02C0();
  os_signpost_type_t v17 = sub_1001C12A0();
  char v18 = sub_1001C12D0();
  uint64_t v19 = *(void *)(v39 + 112);
  if (v18)
  {
    uint64_t v20 = *(void *)(v39 + 96);
    uint64_t v21 = *(void *)(v39 + 104);
    uint64_t v22 = *(void *)(v39 + 88);
    v15(v21, v19, v22);
    os_signpost_id_t v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_signpost_id_t v23 = 0;
    os_signpost_id_t v24 = sub_1001C0290();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v16, v17, v24, "OTTSent", "", v23, 2u);
    swift_slowDealloc();

    uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v25(v19, v22);
    v25(v21, v22);
  }
  else
  {
    uint64_t v27 = *(void *)(v39 + 88);
    uint64_t v26 = *(void *)(v39 + 96);

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v19, v27);
  }
  swift_retain_n();
  os_log_type_t v28 = sub_1001C0330();
  os_log_type_t v29 = sub_1001C1200();
  BOOL v30 = os_log_type_enabled(v28, v29);
  uint64_t v31 = *v38;
  if (v30)
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 136315138;
    uint64_t v33 = (uint64_t *)(v31 + *(void *)(*(void *)v31 + 256));
    uint64_t v34 = *v33;
    unint64_t v35 = v33[1];
    swift_bridgeObjectRetain();
    v2[5] = sub_1000DF238(v34, v35, &v40);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "%s Sent auth message on data stream", v32, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v13 = v39;
  if (*(unsigned char *)(v39 + 40))
  {
    uint64_t v14 = *(void *)(v39 + 32);
    goto LABEL_11;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v36 = *(uint64_t (**)(void))(v39 + 8);
LABEL_13:
  return v36();
}

uint64_t sub_100127214(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 256) = v12;
  *(void *)(v8 + 264) = v13;
  *(void *)(v8 + 240) = a6;
  *(void *)(v8 + 248) = a8;
  *(void *)(v8 + 224) = a3;
  *(void *)(v8 + 232) = a5;
  *(unsigned char *)(v8 + 496) = a4;
  *(void *)(v8 + 216) = a2;
  *(void *)(v8 + 272) = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest(0);
  *(void *)(v8 + 280) = swift_task_alloc();
  *(void *)(v8 + 184) = a7;
  return _swift_task_switch(sub_1001272C8, 0, 0);
}

uint64_t sub_1001272C8()
{
  uint64_t v94 = v0;
  *(void *)(v0 + 288) = *(void *)(**(void **)(v0 + 232) + 360);
  swift_retain_n();
  uint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C11E0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void *)(v0 + 232);
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    v93[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v5 = (uint64_t *)(v3 + *(void *)(*(void *)v3 + 368));
    uint64_t v7 = *v5;
    unint64_t v6 = v5[1];
    swift_bridgeObjectRetain();
    *(void *)(v0 + 208) = sub_1000DF238(v7, v6, v93);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s Received user data to forward to server", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  if (*(unsigned char *)(v0 + 496) == 1)
  {
    unint64_t v8 = *(void *)(v0 + 224);
    **(unsigned char **)(v0 + 240) = 1;
    switch(v8 >> 62)
    {
      case 1uLL:
        if ((int)*(void *)(v0 + 216) != *(uint64_t *)(v0 + 216) >> 32) {
          goto LABEL_7;
        }
        break;
      case 2uLL:
        if (*(void *)(*(void *)(v0 + 216) + 16) != *(void *)(*(void *)(v0 + 216) + 24)) {
          goto LABEL_7;
        }
        break;
      case 3uLL:
        break;
      default:
        if (*(unsigned char *)(v0 + 230)) {
          goto LABEL_7;
        }
        break;
    }
    sub_1001C0570();
    uint64_t v31 = sub_1001C0540();
    *(void *)(v0 + 296) = v31;
    uint64_t v32 = *(void *)(v0 + 184);
    uint64_t v33 = swift_task_alloc();
    *(void *)(v0 + 304) = v33;
    *(void *)(v33 + 16) = v32;
    *(_OWORD *)(v33 + 24) = xmmword_1001CE850;
    *(void *)(v33 + 40) = v31;
    *(unsigned char *)(v33 + 48) = 1;
    uint64_t v34 = (void *)swift_task_alloc();
    *(void *)(v0 + 312) = v34;
    *uint64_t v34 = v0;
    v34[1] = sub_1001283C4;
    return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v34, &unk_10020E508, v33, sub_1000A10C0, v32, 0, 0, (char *)&type metadata for () + 8);
  }
  else
  {
LABEL_7:
    uint64_t v9 = *(void *)(v0 + 280);
    uint64_t v11 = *(void *)(v0 + 216);
    uint64_t v10 = *(void *)(v0 + 224);
    uint64_t v12 = swift_task_alloc();
    *(void *)(v12 + 16) = v11;
    *(void *)(v12 + 24) = v10;
    sub_1001627A0(&qword_10020A058, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest);
    sub_1001C0060();
    swift_task_dealloc();
    uint64_t v13 = sub_10015AE7C(v9, (void (*)(void))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest, &qword_10020A058, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest);
    *(void *)(v0 + 328) = v13;
    *(void *)(v0 + 336) = v14;
    uint64_t v15 = v13;
    unint64_t v16 = v14;
    uint64_t v17 = v0 + 184;
    char v18 = (char *)(v0 + 496);
    uint64_t v19 = *(unsigned char **)(v0 + 248);
    *(void *)(v0 + 344) = *(void *)(*(void *)(v0 + 232) + *(void *)(**(void **)(v0 + 232) + 344));
    sub_1001296E0();
    unint64_t v20 = v16 >> 62;
    if (*v19)
    {
      uint64_t v89 = v15;
      swift_retain_n();
      uint64_t v21 = sub_1001C0330();
      os_log_type_t v22 = sub_1001C11E0();
      BOOL v23 = os_log_type_enabled(v21, v22);
      uint64_t v24 = *(void *)(v0 + 232);
      if (v23)
      {
        uint64_t v25 = (uint8_t *)swift_slowAlloc();
        v93[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v25 = 136315138;
        uint64_t v26 = (uint64_t *)(v24 + *(void *)(*(void *)v24 + 368));
        uint64_t v28 = *v26;
        unint64_t v27 = v26[1];
        swift_bridgeObjectRetain();
        uint64_t v29 = v28;
        uint64_t v17 = v0 + 184;
        *(void *)(v0 + 200) = sub_1000DF238(v29, v27, v93);
        unint64_t v20 = v16 >> 62;
        sub_1001C1310();
        char v18 = (char *)(v0 + 496);
        swift_bridgeObjectRelease();
        swift_release_n();
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "%s Sending message on data stream, node selected", v25, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      switch(v20)
      {
        case 1uLL:
          if (!__OFSUB__(HIDWORD(v89), v89)) {
            goto LABEL_32;
          }
          goto LABEL_63;
        case 2uLL:
          if (!__OFSUB__(*(void *)(v89 + 24), *(void *)(v89 + 16))) {
            goto LABEL_32;
          }
          goto LABEL_64;
        default:
LABEL_32:
          char v58 = *v18;
          uint64_t v60 = *(void *)(v0 + 216);
          uint64_t v59 = *(void *)(v0 + 224);
          uint64_t v61 = swift_task_alloc();
          *(void *)(v0 + 352) = v61;
          *(void *)(v61 + 16) = v17;
          *(void *)(v61 + 24) = v89;
          *(void *)(v61 + 32) = v16;
          *(void *)(v61 + 40) = v60;
          *(void *)(v61 + 48) = v59;
          *(unsigned char *)(v61 + 56) = v58;
          os_log_type_t type = (uint64_t (*)(void))((char *)&dword_10020E4D0 + dword_10020E4D0);
          uint64_t v62 = (void *)swift_task_alloc();
          *(void *)(v0 + 360) = v62;
          *uint64_t v62 = v0;
          v62[1] = sub_1001285C0;
          break;
      }
LABEL_40:
      return type();
    }
    else
    {
      uint64_t v30 = 0;
      switch(v20)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v15), v15))
          {
            __break(1u);
LABEL_62:
            __break(1u);
LABEL_63:
            __break(1u);
LABEL_64:
            __break(1u);
LABEL_65:
            __break(1u);
LABEL_66:
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
LABEL_69:
            __break(1u);
LABEL_70:
            __break(1u);
            JUMPOUT(0x100128364);
          }
          uint64_t v30 = HIDWORD(v15) - (int)v15;
LABEL_23:
          uint64_t v37 = *(void *)(v0 + 256);
          swift_beginAccess();
          uint64_t v38 = *(void *)(v37 + 16);
          swift_retain();
          if (v38 >= v30)
          {
            swift_retain();
            swift_retain();
            uint64_t v48 = sub_1001C0330();
            os_log_type_t v49 = sub_1001C11E0();
            BOOL v50 = os_log_type_enabled(v48, v49);
            uint64_t v51 = *(void *)(v0 + 256);
            uint64_t v52 = *(void *)(v0 + 232);
            if (v50)
            {
              uint64_t v53 = swift_slowAlloc();
              v93[0] = swift_slowAlloc();
              *(_DWORD *)uint64_t v53 = 136315394;
              uint64_t v54 = (uint64_t *)(v52 + *(void *)(*(void *)v52 + 368));
              uint64_t v55 = *v54;
              unint64_t v56 = v54[1];
              swift_bridgeObjectRetain();
              uint64_t v57 = v55;
              unint64_t v20 = v16 >> 62;
              *(void *)(v0 + 144) = sub_1000DF238(v57, v56, v93);
              sub_1001C1310();
              uint64_t v17 = v0 + 184;
              swift_bridgeObjectRelease();
              swift_release_n();
              *(_WORD *)(v53 + 12) = 2048;
              swift_beginAccess();
              *(void *)(v0 + 136) = *(void *)(v51 + 16);
              sub_1001C1310();
              swift_release();
              _os_log_impl((void *)&_mh_execute_header, v48, v49, "%s Sending message on data stream, within initial budget: %ld", (uint8_t *)v53, 0x16u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              swift_release_n();
              swift_release();
            }
            switch((int)v20)
            {
              case 1:
                if (!__OFSUB__(HIDWORD(v15), v15)) {
                  goto LABEL_39;
                }
                goto LABEL_65;
              case 2:
                if (!__OFSUB__(*(void *)(v15 + 24), *(void *)(v15 + 16))) {
                  goto LABEL_39;
                }
                goto LABEL_66;
              default:
LABEL_39:
                char v63 = *(unsigned char *)(v0 + 496);
                uint64_t v65 = *(void *)(v0 + 216);
                uint64_t v64 = *(void *)(v0 + 224);
                uint64_t v66 = swift_task_alloc();
                *(void *)(v0 + 472) = v66;
                *(void *)(v66 + 16) = v17;
                *(void *)(v66 + 24) = v15;
                *(void *)(v66 + 32) = v16;
                *(void *)(v66 + 40) = v65;
                *(void *)(v66 + 48) = v64;
                *(unsigned char *)(v66 + 56) = v63;
                os_log_type_t type = (uint64_t (*)(void))((char *)&dword_10020E4D0 + dword_10020E4D0);
                uint64_t v67 = (void *)swift_task_alloc();
                *(void *)(v0 + 480) = v67;
                *uint64_t v67 = v0;
                v67[1] = sub_1001293C0;
                break;
            }
            goto LABEL_40;
          }
          swift_retain();
          sub_100007B14(v15, v16);
          swift_retain();
          swift_retain();
          sub_100007B14(v15, v16);
          uint64_t v39 = sub_1001C0330();
          os_log_type_t v40 = sub_1001C11E0();
          if (os_log_type_enabled(v39, v40))
          {
            os_log_type_t v88 = v40;
            uint64_t v90 = v15;
            uint64_t v41 = *(void *)(v0 + 232);
            uint64_t v42 = swift_slowAlloc();
            v93[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v42 = 136315650;
            uint64_t v43 = (uint64_t *)(v41 + *(void *)(*(void *)v41 + 368));
            uint64_t v44 = *v43;
            unint64_t v45 = v43[1];
            swift_bridgeObjectRetain();
            *(void *)(v0 + 168) = sub_1000DF238(v44, v45, v93);
            sub_1001C1310();
            swift_bridgeObjectRelease();
            swift_release_n();
            *(_WORD *)(v42 + 12) = 2048;
            uint64_t v17 = v0 + 184;
            switch(v16 >> 62)
            {
              case 1uLL:
                sub_10000792C(v90, v16);
                LODWORD(v47) = HIDWORD(v90) - v90;
                if (__OFSUB__(HIDWORD(v90), v90)) {
                  goto LABEL_69;
                }
                uint64_t v47 = (int)v47;
LABEL_46:
                uint64_t v46 = v90;
LABEL_48:
                uint64_t v70 = *(void *)(v0 + 256);
                *(void *)(v0 + 176) = v47;
                sub_1001C1310();
                sub_10000792C(v46, v16);
                *(_WORD *)(v42 + 22) = 2048;
                swift_beginAccess();
                uint64_t v71 = *(void *)(v70 + 16);
                swift_release();
                *(void *)(v0 + 192) = v71;
                sub_1001C1310();
                swift_release();
                _os_log_impl((void *)&_mh_execute_header, v39, v88, "%s Sending message on data stream (%ld bytes), above initial budget: %ld bytes", (uint8_t *)v42, 0x20u);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();

                uint64_t v15 = v46;
                break;
              case 2uLL:
                uint64_t v69 = *(void *)(v90 + 16);
                uint64_t v68 = *(void *)(v90 + 24);
                sub_10000792C(v90, v16);
                uint64_t v47 = v68 - v69;
                if (!__OFSUB__(v68, v69)) {
                  goto LABEL_46;
                }
                goto LABEL_70;
              case 3uLL:
                uint64_t v46 = v90;
                sub_10000792C(v90, v16);
                uint64_t v47 = 0;
                goto LABEL_48;
              default:
                uint64_t v46 = v90;
                sub_10000792C(v90, v16);
                uint64_t v47 = BYTE6(v16);
                goto LABEL_48;
            }
          }
          else
          {
            swift_release();
            sub_10000792C(v15, v16);

            swift_release_n();
            sub_10000792C(v15, v16);
            swift_release();
          }
          uint64_t v72 = *(void *)(v0 + 256);
          swift_beginAccess();
          uint64_t v73 = *(void *)(v72 + 16);
          if (v73 >= 1)
          {
            sub_100007B14(v15, v16);
            sub_1001771D4(v73, v15, v16, v93);
            uint64_t v74 = v93[0];
            unint64_t v75 = v93[1];
            *(void *)(v0 + 376) = v93[0];
            *(void *)(v0 + 384) = v75;
            switch(v75 >> 62)
            {
              case 1uLL:
                if (!__OFSUB__(HIDWORD(v74), v74)) {
                  goto LABEL_60;
                }
                goto LABEL_67;
              case 2uLL:
                if (!__OFSUB__(*(void *)(v74 + 24), *(void *)(v74 + 16))) {
                  goto LABEL_60;
                }
                goto LABEL_68;
              default:
LABEL_60:
                unint64_t v85 = (void *)swift_task_alloc();
                *(void *)(v0 + 392) = v85;
                v85[2] = v17;
                v85[3] = v74;
                v85[4] = v75;
                os_log_type_t type = (uint64_t (*)(void))((char *)&dword_10020E4D0 + dword_10020E4D0);
                uint64_t v86 = (void *)swift_task_alloc();
                *(void *)(v0 + 400) = v86;
                *uint64_t v86 = v0;
                v86[1] = sub_10012880C;
                break;
            }
            goto LABEL_40;
          }
          sub_100007B14(v15, v16);
          *(void *)(v0 + 416) = v15;
          *(void *)(v0 + 424) = v16;
          swift_retain_n();
          double v76 = sub_1001C0330();
          os_log_type_t v77 = sub_1001C11E0();
          BOOL v78 = os_log_type_enabled(v76, v77);
          uint64_t v79 = *(void *)(v0 + 232);
          if (v78)
          {
            char v80 = (uint8_t *)swift_slowAlloc();
            v93[0] = swift_slowAlloc();
            *(_DWORD *)char v80 = 136315138;
            uint64_t v81 = (uint64_t *)(v79 + *(void *)(*(void *)v79 + 368));
            uint64_t v82 = *v81;
            unint64_t v83 = v81[1];
            swift_bridgeObjectRetain();
            *(void *)(v0 + 160) = sub_1000DF238(v82, v83, v93);
            sub_1001C1310();
            swift_bridgeObjectRelease();
            swift_release_n();
            _os_log_impl((void *)&_mh_execute_header, v76, v77, "%s Waiting on node selected", v80, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_release_n();
          }
          uint64_t typea = (uint64_t (*)(uint64_t))((char *)&dword_10020EE28 + dword_10020EE28);
          uint64_t v84 = (void *)swift_task_alloc();
          *(void *)(v0 + 432) = v84;
          *uint64_t v84 = v0;
          v84[1] = sub_100128CA8;
          uint64_t result = typea((uint64_t)typea);
          break;
        case 2uLL:
          uint64_t v36 = *(void *)(v15 + 16);
          uint64_t v35 = *(void *)(v15 + 24);
          uint64_t v30 = v35 - v36;
          if (!__OFSUB__(v35, v36)) {
            goto LABEL_23;
          }
          goto LABEL_62;
        case 3uLL:
          goto LABEL_23;
        default:
          uint64_t v30 = BYTE6(v16);
          goto LABEL_23;
      }
    }
  }
  return result;
}

uint64_t sub_1001283C4()
{
  *(void *)(*(void *)v1 + 320) = v0;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v2 = sub_10012854C;
  }
  else
  {
    swift_task_dealloc();
    os_log_type_t v2 = sub_1001284E0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001284E0()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10012854C()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001285C0()
{
  *(void *)(*(void *)v1 + 368) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_100128780;
  }
  else {
    os_log_type_t v2 = sub_1001286F4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001286F4()
{
  uint64_t v1 = v0[35];
  sub_10000792C(v0[41], v0[42]);
  sub_10016290C(v1, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest);
  swift_task_dealloc();
  os_log_type_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_100128780()
{
  uint64_t v1 = v0[35];
  sub_10000792C(v0[41], v0[42]);
  sub_10016290C(v1, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest);
  swift_task_dealloc();
  os_log_type_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_10012880C()
{
  *(void *)(*(void *)v1 + 408) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_100128C04;
  }
  else {
    os_log_type_t v2 = sub_100128940;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100128940()
{
  uint64_t v24 = v0;
  unint64_t v1 = *(void *)(v0 + 384);
  uint64_t v2 = 0;
  switch(v1 >> 62)
  {
    case 1uLL:
      int v3 = *(_DWORD *)(v0 + 376);
      int v4 = *(_DWORD *)(v0 + 380);
      BOOL v5 = __OFSUB__(v4, v3);
      int v6 = v4 - v3;
      if (v5)
      {
        __break(1u);
LABEL_13:
        __break(1u);
        JUMPOUT(0x100128BF4);
      }
      uint64_t v2 = v6;
LABEL_6:
      uint64_t v9 = *(void *)(v0 + 376);
      uint64_t v11 = *(void *)(v0 + 328);
      unint64_t v10 = *(void *)(v0 + 336);
      sub_100007B14(v11, v10);
      sub_10012A74C(v2, v11, v10, v23);
      sub_10000792C(v9, v1);
      *(_OWORD *)(v0 + 416) = *(_OWORD *)v23;
      swift_retain_n();
      uint64_t v12 = sub_1001C0330();
      os_log_type_t v13 = sub_1001C11E0();
      BOOL v14 = os_log_type_enabled(v12, v13);
      uint64_t v15 = *(void *)(v0 + 232);
      if (v14)
      {
        unint64_t v16 = (uint8_t *)swift_slowAlloc();
        v23[0] = swift_slowAlloc();
        *(_DWORD *)unint64_t v16 = 136315138;
        uint64_t v17 = (uint64_t *)(v15 + *(void *)(*(void *)v15 + 368));
        uint64_t v19 = *v17;
        unint64_t v18 = v17[1];
        swift_bridgeObjectRetain();
        *(void *)(v0 + 160) = sub_1000DF238(v19, v18, v23);
        sub_1001C1310();
        swift_bridgeObjectRelease();
        swift_release_n();
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "%s Waiting on node selected", v16, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      os_log_type_t v22 = (uint64_t (*)(uint64_t))((char *)&dword_10020EE28 + dword_10020EE28);
      unint64_t v20 = (void *)swift_task_alloc();
      *(void *)(v0 + 432) = v20;
      *unint64_t v20 = v0;
      v20[1] = sub_100128CA8;
      return v22((uint64_t)v22);
    case 2uLL:
      uint64_t v7 = *(void *)(*(void *)(v0 + 376) + 16);
      uint64_t v8 = *(void *)(*(void *)(v0 + 376) + 24);
      uint64_t v2 = v8 - v7;
      if (!__OFSUB__(v8, v7)) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v2 = BYTE6(v1);
      goto LABEL_6;
  }
}

uint64_t sub_100128C04()
{
  uint64_t v1 = v0[41];
  unint64_t v2 = v0[42];
  uint64_t v3 = v0[35];
  sub_10000792C(v0[47], v0[48]);
  sub_10000792C(v1, v2);
  sub_10016290C(v3, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest);
  swift_task_dealloc();
  int v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100128CA8()
{
  *(void *)(*(void *)v1 + 440) = v0;
  swift_task_dealloc();
  if (v0) {
    unint64_t v2 = sub_1001290A0;
  }
  else {
    unint64_t v2 = sub_100128DBC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100128DBC()
{
  uint64_t v25 = v0;
  **(unsigned char **)(v0 + 248) = 1;
  swift_retain_n();
  uint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C11E0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void *)(v0 + 232);
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    BOOL v5 = (uint64_t *)(v3 + *(void *)(*(void *)v3 + 368));
    uint64_t v6 = *v5;
    unint64_t v7 = v5[1];
    swift_bridgeObjectRetain();
    *(void *)(v0 + 152) = sub_1000DF238(v6, v7, &v24);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s Node selected", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  unint64_t v8 = *(void *)(v0 + 424);
  uint64_t v9 = 0;
  switch(v8 >> 62)
  {
    case 1uLL:
      int v10 = *(_DWORD *)(v0 + 416);
      int v11 = *(_DWORD *)(v0 + 420);
      BOOL v12 = __OFSUB__(v11, v10);
      int v13 = v11 - v10;
      if (v12)
      {
        __break(1u);
LABEL_13:
        __break(1u);
        JUMPOUT(0x100129090);
      }
      uint64_t v9 = v13;
LABEL_9:
      uint64_t v16 = *(void *)(v0 + 416);
      char v17 = *(unsigned char *)(v0 + 496);
      uint64_t v19 = *(void *)(v0 + 216);
      uint64_t v18 = *(void *)(v0 + 224);
      uint64_t v20 = swift_task_alloc();
      *(void *)(v0 + 448) = v20;
      *(void *)(v20 + 16) = v0 + 184;
      *(void *)(v20 + 24) = v16;
      *(void *)(v20 + 32) = v8;
      *(void *)(v20 + 40) = v19;
      *(void *)(v20 + 48) = v18;
      *(unsigned char *)(v20 + 56) = v17;
      BOOL v23 = (uint64_t (*)(uint64_t, uint64_t, char, int *))((char *)&dword_10020E4D0 + dword_10020E4D0);
      uint64_t v21 = (void *)swift_task_alloc();
      *(void *)(v0 + 456) = v21;
      *uint64_t v21 = v0;
      v21[1] = sub_100129144;
      return v23((uint64_t)v23, v9, 0, (int *)&unk_10020E4E0);
    case 2uLL:
      uint64_t v14 = *(void *)(*(void *)(v0 + 416) + 16);
      uint64_t v15 = *(void *)(*(void *)(v0 + 416) + 24);
      uint64_t v9 = v15 - v14;
      if (!__OFSUB__(v15, v14)) {
        goto LABEL_9;
      }
      goto LABEL_13;
    case 3uLL:
      goto LABEL_9;
    default:
      uint64_t v9 = BYTE6(v8);
      goto LABEL_9;
  }
}

uint64_t sub_1001290A0()
{
  uint64_t v1 = v0[41];
  unint64_t v2 = v0[42];
  uint64_t v3 = v0[35];
  sub_10000792C(v0[52], v0[53]);
  sub_10000792C(v1, v2);
  sub_10016290C(v3, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100129144()
{
  *(void *)(*(void *)v1 + 464) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  if (v0) {
    unint64_t v2 = sub_10012931C;
  }
  else {
    unint64_t v2 = sub_100129278;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100129278()
{
  uint64_t v1 = v0[41];
  unint64_t v2 = v0[42];
  uint64_t v3 = v0[35];
  sub_10000792C(v0[52], v0[53]);
  sub_10000792C(v1, v2);
  sub_10016290C(v3, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10012931C()
{
  uint64_t v1 = v0[41];
  unint64_t v2 = v0[42];
  uint64_t v3 = v0[35];
  sub_10000792C(v0[52], v0[53]);
  sub_10000792C(v1, v2);
  sub_10016290C(v3, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1001293C0()
{
  *(void *)(*(void *)v1 + 488) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  if (v0) {
    unint64_t v2 = sub_100129654;
  }
  else {
    unint64_t v2 = sub_1001294F4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001294F4()
{
  unint64_t v1 = v0[42];
  switch(v1 >> 62)
  {
    case 1uLL:
      uint64_t v3 = v0[41];
      sub_10000792C(v3, v0[42]);
      if (__OFSUB__(HIDWORD(v3), v3)) {
        goto LABEL_14;
      }
      uint64_t v2 = HIDWORD(v3) - (int)v3;
      break;
    case 2uLL:
      uint64_t v4 = v0[41];
      uint64_t v6 = *(void *)(v4 + 16);
      uint64_t v5 = *(void *)(v4 + 24);
      sub_10000792C(v4, v0[42]);
      BOOL v7 = __OFSUB__(v5, v6);
      uint64_t v2 = v5 - v6;
      if (!v7) {
        break;
      }
      __break(1u);
LABEL_8:
      sub_10000792C(v0[41], v1);
      uint64_t v2 = 0;
      break;
    case 3uLL:
      goto LABEL_8;
    default:
      sub_10000792C(v0[41], v0[42]);
      uint64_t v2 = BYTE6(v1);
      break;
  }
  uint64_t v8 = v0[32];
  sub_10016290C(v0[35], type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest);
  swift_beginAccess();
  uint64_t v9 = *(void *)(v8 + 16);
  BOOL v7 = __OFSUB__(v9, v2);
  uint64_t v10 = v9 - v2;
  if (v7)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    JUMPOUT(0x100129644);
  }
  *(void *)(v0[32] + 16) = v10;
  swift_task_dealloc();
  int v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_100129654()
{
  uint64_t v1 = v0[35];
  sub_10000792C(v0[41], v0[42]);
  sub_10016290C(v1, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeRequest);
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1001296E0()
{
  uint64_t v1 = sub_1001C02A0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v4 = __chkstk_darwin(v1, v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  v10((char *)&v17 - v8, v0 + *(void *)(*(void *)v0 + 280), v1);
  int v11 = sub_1001C02C0();
  os_signpost_type_t v12 = sub_1001C12A0();
  if (sub_1001C12D0())
  {
    v10(v6, (uint64_t)v9, v1);
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    os_signpost_id_t v14 = sub_1001C0290();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v11, v12, v14, "ReceivedOutgoingUserDataChunk", "", v13, 2u);
    swift_slowDealloc();

    uint64_t v15 = *(void (**)(char *, uint64_t))(v2 + 8);
    v15(v9, v1);
    return ((uint64_t (*)(char *, uint64_t))v15)(v6, v1);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v9, v1);
  }
}

uint64_t sub_1001298EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  *(unsigned char *)(v7 + 72) = a7;
  *(void *)(v7 + 24) = a3;
  *(void *)(v7 + 32) = a4;
  *(void *)(v7 + 16) = a2;
  return _swift_task_switch(sub_100129914, 0, 0);
}

uint64_t sub_100129914()
{
  char v1 = *(unsigned char *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 32);
  long long v8 = *(_OWORD *)(v0 + 16);
  sub_1001C0570();
  uint64_t v3 = sub_1001C0540();
  *(void *)(v0 + 40) = v3;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 48) = v4;
  *(_OWORD *)(v4 + 16) = v8;
  *(void *)(v4 + 32) = v2;
  *(void *)(v4 + 40) = v3;
  *(unsigned char *)(v4 + 48) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100129A40;
  uint64_t v6 = *(void *)(v0 + 16);
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v5, &unk_10020E518, v4, sub_1000A10C0, v6, 0, 0, (char *)&type metadata for () + 8);
}

uint64_t sub_100129A40()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100162AE0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100162A70;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100129B5C(uint64_t a1, uint64_t a2, char a3, int *a4)
{
  *(unsigned char *)(v5 + 41) = a3;
  *(void *)(v5 + 72) = a2;
  *(void *)(v5 + 80) = v4;
  uint64_t v7 = sub_1001C14C0();
  *(void *)(v5 + 88) = v7;
  *(void *)(v5 + 96) = *(void *)(v7 - 8);
  *(void *)(v5 + 104) = swift_task_alloc();
  uint64_t v10 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  long long v8 = (void *)swift_task_alloc();
  *(void *)(v5 + 112) = v8;
  *long long v8 = v5;
  v8[1] = sub_100129CAC;
  return v10(v5 + 48);
}

uint64_t sub_100129CAC()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10012A048;
  }
  else {
    uint64_t v2 = sub_100129DC0;
  }
  return _swift_task_switch(v2, 0, 0);
}

void sub_100129DC0()
{
  *(void *)(v0 + 32) = *(void *)(v0 + 48);
  uint64_t v13 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 88);
  char v12 = *(unsigned char *)(v0 + 41);
  uint64_t v11 = *(void *)(v0 + 72);
  *(unsigned char *)(v0 + 40) = v13 != 0;
  sub_1001C14E0();
  sub_1001627A0(&qword_100208C80, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  sub_1001C18D0();
  sub_1001627A0(&qword_100208C88, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
  sub_1001C1500();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = *(void *)(v0 + 24);
  uint64_t v7 = swift_task_alloc();
  *(void *)(v7 + 16) = v0 + 32;
  *(void *)(v7 + 24) = v11;
  *(void *)(v7 + 32) = v5;
  *(void *)(v7 + 40) = v6;
  *(unsigned char *)(v7 + 48) = v12;
  long long v8 = (os_unfair_lock_s *)(v4 + *(void *)(*(void *)v4 + 128));
  os_unfair_lock_lock(v8);
  uint64_t v9 = sub_100003918(&qword_100208C90);
  sub_100161938((uint64_t)v8 + *(int *)(v9 + 28));
  os_unfair_lock_unlock(v8);
  if (!v13)
  {
    swift_task_dealloc();
    if (*(unsigned char *)(v0 + 40))
    {
      *(void *)(v0 + 64) = *(void *)(v0 + 32);
      sub_100003918(&qword_100208C98);
      swift_willThrowTypedImpl();
    }
    swift_task_dealloc();
    uint64_t v10 = *(void (**)(void))(v0 + 8);
    v10();
  }
}

uint64_t sub_10012A048()
{
  uint64_t v1 = *(void *)(v0 + 120);
  *(void *)(v0 + 32) = v1;
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v5 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 88);
  char v14 = *(unsigned char *)(v0 + 41);
  uint64_t v13 = *(void *)(v0 + 72);
  *(unsigned char *)(v0 + 40) = v1 != 0;
  sub_1001C14E0();
  sub_1001627A0(&qword_100208C80, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  sub_1001C18D0();
  sub_1001627A0(&qword_100208C88, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
  sub_1001C1500();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v7 = *(void *)(v0 + 24);
  uint64_t v8 = swift_task_alloc();
  *(void *)(v8 + 16) = v0 + 32;
  *(void *)(v8 + 24) = v13;
  *(void *)(v8 + 32) = v6;
  *(void *)(v8 + 40) = v7;
  *(unsigned char *)(v8 + 48) = v14;
  uint64_t v9 = (os_unfair_lock_s *)(v5 + *(void *)(*(void *)v5 + 128));
  os_unfair_lock_lock(v9);
  uint64_t v10 = sub_100003918(&qword_100208C90);
  sub_100161938((uint64_t)v9 + *(int *)(v10 + 28));
  os_unfair_lock_unlock(v9);
  swift_task_dealloc();
  if (*(unsigned char *)(v0 + 40))
  {
    *(void *)(v0 + 64) = *(void *)(v0 + 32);
    sub_100003918(&qword_100208C98);
    swift_willThrowTypedImpl();
  }
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_10012A2C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  *(unsigned char *)(v7 + 72) = a7;
  *(void *)(v7 + 24) = a3;
  *(void *)(v7 + 32) = a4;
  *(void *)(v7 + 16) = a2;
  return _swift_task_switch(sub_10012A2F0, 0, 0);
}

uint64_t sub_10012A2F0()
{
  char v1 = *(unsigned char *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 32);
  long long v8 = *(_OWORD *)(v0 + 16);
  sub_1001C0570();
  uint64_t v3 = sub_1001C0540();
  *(void *)(v0 + 40) = v3;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 48) = v4;
  *(_OWORD *)(v4 + 16) = v8;
  *(void *)(v4 + 32) = v2;
  *(void *)(v4 + 40) = v3;
  *(unsigned char *)(v4 + 48) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10012A41C;
  uint64_t v6 = *(void *)(v0 + 16);
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v5, &unk_10020E548, v4, sub_1000A10C0, v6, 0, 0, (char *)&type metadata for () + 8);
}

uint64_t sub_10012A41C()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10012A59C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_10012A538;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10012A538()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10012A59C()
{
  swift_task_dealloc();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10012A608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a3;
  v4[4] = a4;
  v4[2] = a2;
  return _swift_task_switch(sub_10012A62C, 0, 0);
}

uint64_t sub_10012A62C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  long long v7 = *(_OWORD *)(v0 + 16);
  sub_1001C0570();
  uint64_t v2 = sub_1001C0540();
  *(void *)(v0 + 40) = v2;
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 48) = v3;
  *(_OWORD *)(v3 + 16) = v7;
  *(void *)(v3 + 32) = v1;
  *(void *)(v3 + 40) = v2;
  *(unsigned char *)(v3 + 48) = 0;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10012A41C;
  uint64_t v5 = *(void *)(v0 + 16);
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v4, &unk_10020E528, v3, sub_1000A10C0, v5, 0, 0, (char *)&type metadata for () + 8);
}

uint64_t sub_10012A74C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  unint64_t v5 = a3 >> 62;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v10 = (int)a2;
      uint64_t v9 = a2 >> 32;
      break;
    case 2uLL:
      uint64_t v10 = *(void *)(a2 + 16);
      uint64_t v9 = *(void *)(a2 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v10 = 0;
      uint64_t v9 = BYTE6(a3);
      break;
  }
  uint64_t v11 = sub_10018AFF0(v10, v9, a2, a3);
  if (!a1 || v11 < 0 || v11 >= a1)
  {
    uint64_t v12 = sub_10018AF74(v10, a1, a2, a3);
    uint64_t v13 = 0;
    switch((int)v5)
    {
      case 1:
        uint64_t v13 = a2 >> 32;
        break;
      case 2:
        uint64_t v13 = *(void *)(a2 + 24);
        break;
      case 3:
        break;
      default:
        uint64_t v13 = BYTE6(a3);
        break;
    }
    if (v13 < v12)
    {
LABEL_16:
      __break(1u);
      JUMPOUT(0x10012A8CCLL);
    }
  }
  uint64_t v14 = sub_1001BF140();
  uint64_t v16 = v15;
  uint64_t result = sub_10000792C(a2, a3);
  *a4 = v14;
  a4[1] = v16;
  return result;
}

uint64_t sub_10012A8FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  *(unsigned char *)(v7 + 72) = a7;
  *(void *)(v7 + 24) = a3;
  *(void *)(v7 + 32) = a4;
  *(void *)(v7 + 16) = a2;
  return _swift_task_switch(sub_10012A924, 0, 0);
}

uint64_t sub_10012A924()
{
  char v1 = *(unsigned char *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 32);
  long long v8 = *(_OWORD *)(v0 + 16);
  sub_1001C0570();
  uint64_t v3 = sub_1001C0540();
  *(void *)(v0 + 40) = v3;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 48) = v4;
  *(_OWORD *)(v4 + 16) = v8;
  *(void *)(v4 + 32) = v2;
  *(void *)(v4 + 40) = v3;
  *(unsigned char *)(v4 + 48) = v1;
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v5;
  *unint64_t v5 = v0;
  v5[1] = sub_10012A41C;
  uint64_t v6 = *(void *)(v0 + 16);
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v5, &unk_10020E538, v4, sub_1000A10C0, v6, 0, 0, (char *)&type metadata for () + 8);
}

void sub_10012AA50()
{
  uint64_t v1 = sub_1001C14C0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  unint64_t v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001C14E0();
  sub_1001627A0(&qword_100208C80, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  sub_1001C18D0();
  sub_1001627A0(&qword_100208C88, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
  sub_1001C1500();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v5, v1);
  long long v10 = v11;
  uint64_t v6 = (os_unfair_lock_s *)(v0 + *(void *)(*(void *)v0 + 128));
  os_unfair_lock_lock(v6);
  uint64_t v7 = sub_100003918(&qword_100208C90);
  sub_10016157C((uint64_t)v6 + *(int *)(v7 + 28), v8);
  os_unfair_lock_unlock(v6);
}

void sub_10012AC40(uint64_t a1, const char *a2)
{
  swift_retain_n();
  oslog = sub_1001C0330();
  os_log_type_t v4 = sub_1001C11E0();
  if (os_log_type_enabled(oslog, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)unint64_t v5 = 136315138;
    uint64_t v6 = (uint64_t *)(a1 + *(void *)(*(void *)a1 + 368));
    uint64_t v7 = *v6;
    unint64_t v8 = v6[1];
    swift_bridgeObjectRetain();
    sub_1000DF238(v7, v8, &v10);
    sub_1001C1310();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, oslog, v4, a2, v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }
}

uint64_t sub_10012AE0C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_1000A12C8;
  return sub_10012AEA8(a1, a2);
}

uint64_t sub_10012AEA8(uint64_t a1, uint64_t a2)
{
  v2[4] = a1;
  v2[5] = a2;
  v2[6] = type metadata accessor for ThimbledEvent();
  v2[7] = swift_task_alloc();
  uint64_t v3 = sub_100003918(&qword_100208A00);
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  uint64_t v4 = sub_100003918(&qword_10020E440);
  v2[11] = v4;
  v2[12] = *(void *)(v4 - 8);
  v2[13] = swift_task_alloc();
  return _swift_task_switch(sub_10012AFFC, 0, 0);
}

uint64_t sub_10012AFFC()
{
  uint64_t v1 = sub_1000E3F44(0, 32, 0, (char *)_swiftEmptyArrayStorage);
  sub_100003918(&qword_10020E270);
  sub_1001C1010();
  v0[14] = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[15] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10012B0EC;
  uint64_t v3 = v0[11];
  return AsyncStream.Iterator.next(isolation:)(v0 + 2, 0, 0, v3);
}

uint64_t sub_10012B0EC()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10012B1E8, 0, 0);
}

uint64_t sub_10012B1E8()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v3 = *(char **)(v0 + 112);
  if (v1)
  {
    unint64_t v5 = *((void *)v3 + 2);
    unint64_t v4 = *((void *)v3 + 3);
    if (v5 >= v4 >> 1) {
      uint64_t v3 = sub_1000E3F44((char *)(v4 > 1), v5 + 1, 1, *(char **)(v0 + 112));
    }
    *((void *)v3 + 2) = v5 + 1;
    uint64_t v6 = &v3[16 * v5];
    *((void *)v6 + 4) = v2;
    *((void *)v6 + 5) = v1;
    *(void *)(v0 + 112) = v3;
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 120) = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_10012B0EC;
    uint64_t v8 = *(void *)(v0 + 88);
    return AsyncStream.Iterator.next(isolation:)(v0 + 16, 0, 0, v8);
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 80);
    uint64_t v10 = *(void *)(v0 + 64);
    uint64_t v11 = *(void *)(v0 + 72);
    uint64_t v12 = *(void *)(v0 + 56);
    (*(void (**)(void, void))(*(void *)(v0 + 96) + 8))(*(void *)(v0 + 104), *(void *)(v0 + 88));
    *(void *)uint64_t v12 = v3;
    *(unsigned char *)(v12 + 8) = 2;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_100003918(qword_100208000);
    sub_1001C0FE0();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
    return v13();
  }
}

uint64_t sub_10012B404(uint64_t a1, int *a2)
{
  unint64_t v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1000B4C7C;
  return v5();
}

uint64_t sub_10012B4D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[36] = a6;
  v7[37] = a7;
  v7[34] = a4;
  v7[35] = a5;
  v7[32] = a2;
  v7[33] = a3;
  uint64_t v8 = *(void *)(type metadata accessor for NWAsyncConnection.OHTTPStreamFactory(0) - 8);
  v7[38] = v8;
  v7[39] = *(void *)(v8 + 64);
  v7[40] = swift_task_alloc();
  uint64_t v9 = sub_100003918(&qword_10020E268);
  v7[41] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v7[42] = v10;
  v7[43] = *(void *)(v10 + 64);
  v7[44] = swift_task_alloc();
  sub_100003918(&qword_10020C3B0);
  v7[45] = swift_task_alloc();
  v7[46] = swift_task_alloc();
  type metadata accessor for ValidatedAttestation();
  v7[47] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for ValidatedAttestationOrAttestation();
  v7[48] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v7[49] = v12;
  v7[50] = *(void *)(v12 + 64);
  v7[51] = swift_task_alloc();
  v7[52] = swift_task_alloc();
  v7[53] = swift_task_alloc();
  v7[54] = swift_task_alloc();
  v7[55] = swift_task_alloc();
  v7[56] = swift_task_alloc();
  v7[57] = swift_task_alloc();
  v7[58] = swift_task_alloc();
  v7[59] = swift_task_alloc();
  v7[60] = swift_task_alloc();
  v7[61] = swift_task_alloc();
  v7[62] = swift_task_alloc();
  v7[63] = swift_task_alloc();
  v7[64] = swift_task_alloc();
  sub_100003918(&qword_10020E2B0);
  v7[65] = swift_task_alloc();
  uint64_t v13 = sub_100003918(&qword_10020E2B8);
  v7[66] = v13;
  v7[67] = *(void *)(v13 - 8);
  v7[68] = swift_task_alloc();
  type metadata accessor for NodeStreamController.StateMachine(0);
  v7[69] = swift_task_alloc();
  return _swift_task_switch(sub_10012B830, 0, 0);
}

uint64_t sub_10012B830()
{
  uint64_t v1 = (unint64_t *)v0[69];
  uint64_t v2 = (uint64_t *)v0[34];
  type metadata accessor for NodeStreamController(0);
  uint64_t v3 = swift_allocObject();
  v0[70] = v3;
  unint64_t v4 = (_DWORD *)(v3 + OBJC_IVAR____TtC20privatecloudcomputed20NodeStreamController_stateLock);
  unint64_t *v1 = sub_100055010((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for NodeStreamController.StateMachine.State(0);
  swift_storeEnumTagMultiPayload();
  *unint64_t v4 = 0;
  unint64_t v5 = (char *)v4 + *(int *)(sub_100003918(&qword_100208630) + 28);
  uint64_t v6 = sub_100003918(&qword_10020E2C0);
  bzero(v5, *(void *)(*(void *)(v6 - 8) + 64));
  sub_1001627E8((uint64_t)v1, (uint64_t)v5, type metadata accessor for NodeStreamController.StateMachine);
  v0[23] = &_swiftEmptySetSingleton;
  v0[28] = &_swiftEmptySetSingleton;
  sub_100003918(&qword_10020E2C8);
  sub_1001C10E0(32);
  sub_1001C10E0(32);
  sub_100003918(&qword_10020E1A0);
  sub_1001C1010();
  v0[71] = qword_10021F8E0;
  uint64_t v7 = *v2;
  v0[72] = *(void *)(*v2 + 360);
  v0[73] = *(void *)(v7 + 368);
  uint64_t v8 = (void *)swift_task_alloc();
  v0[74] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_10012BA40;
  uint64_t v9 = v0[66];
  uint64_t v10 = v0[65];
  return AsyncStream.Iterator.next(isolation:)(v10, 0, 0, v9);
}

uint64_t sub_10012BA40()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10012BB3C, 0, 0);
}

uint64_t sub_10012BB3C()
{
  uint64_t v149 = v0;
  uint64_t v1 = (uint64_t *)(v0 + 200);
  uint64_t v2 = *(void *)(v0 + 520);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 392) + 48))(v2, 1, *(void *)(v0 + 384)) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 536) + 8))(*(void *)(v0 + 544), *(void *)(v0 + 528));
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v0 + 184);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    unint64_t v4 = sub_1001C0330();
    os_log_type_t v5 = sub_1001C11E0();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint64_t *)(*(void *)(v0 + 272) + *(void *)(v0 + 584));
      uint64_t v7 = swift_slowAlloc();
      uint64_t v148 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136315394;
      uint64_t v9 = *v6;
      unint64_t v8 = v6[1];
      swift_bridgeObjectRetain();
      *(void *)(v0 + 248) = sub_1000DF238(v9, v8, &v148);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v7 + 12) = 2048;
      uint64_t v10 = *(void *)(v3 + 16);
      swift_bridgeObjectRelease();
      *(void *)(v0 + 192) = v10;
      sub_1001C1310();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s Not expecting more attestations. Running with %ld attestations", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();

      swift_release_n();
    }
    uint64_t v22 = swift_allocObject();
    *(void *)(v0 + 600) = v22;
    *(unsigned char *)(v22 + 16) = 0;
    *(void *)(v0 + 216) = 0;
    swift_beginAccess();
    *(void *)(v0 + 608) = 0;
    *(void *)(v0 + 616) = _swiftEmptyArrayStorage;
    BOOL v23 = (void *)swift_task_alloc();
    *(void *)(v0 + 624) = v23;
    uint64_t v24 = sub_100003918(&qword_10020E2D0);
    *BOOL v23 = v0;
    v23[1] = sub_10012CF90;
    return ThrowingTaskGroup.nextResult()(v0 + 152, v24);
  }
  uint64_t v12 = *(void *)(v0 + 504);
  uint64_t v11 = *(void *)(v0 + 512);
  sub_1001627E8(v2, v11, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
  sub_100161F3C(v11, v12, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = *(void *)(v0 + 504);
    uint64_t v14 = *(void *)(v0 + 272) + *(void *)(v0 + 568);
    uint64_t v15 = *(void *)(v13 + 16);
    unint64_t v16 = *(void *)(v13 + 24);
    swift_bridgeObjectRelease();
    sub_100007918(v15, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v17 = *(void *)(*(void *)(v0 + 224) + 16);
    if (v17 >= *(void *)(v14 + 16))
    {
      sub_100161F3C(*(void *)(v0 + 512), *(void *)(v0 + 488), (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
      swift_retain_n();
      uint64_t v25 = sub_1001C0330();
      os_log_type_t v26 = sub_1001C11F0();
      if (os_log_type_enabled(v25, v26))
      {
        os_log_type_t v144 = v26;
        uint64_t v27 = *(void *)(v0 + 488);
        uint64_t v28 = *(void *)(v0 + 408);
        uint64_t v29 = (uint64_t *)(*(void *)(v0 + 272) + *(void *)(v0 + 584));
        uint64_t v30 = swift_slowAlloc();
        *(void *)(v0 + 240) = swift_slowAlloc();
        *(_DWORD *)uint64_t v30 = 136315906;
        uint64_t v32 = *v29;
        unint64_t v31 = v29[1];
        swift_bridgeObjectRetain();
        *(void *)(v30 + 4) = sub_1000DF238(v32, v31, (uint64_t *)(v0 + 240));
        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 12) = 2080;
        sub_100161F3C(v27, v28, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v34 = *(uint64_t **)(v0 + 408);
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v36 = *v34;
          unint64_t v35 = v34[1];
          sub_100007918(v34[2], v34[3]);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v116 = *(uint64_t **)(v0 + 376);
          sub_1001627E8((uint64_t)v34, (uint64_t)v116, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
          uint64_t v36 = *v116;
          unint64_t v35 = v116[1];
          swift_bridgeObjectRetain();
          sub_10016290C((uint64_t)v116, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
        }
        uint64_t v141 = *(void *)(v0 + 512);
        uint64_t v117 = *(void *)(v0 + 488);
        uint64_t v118 = *(void *)(v0 + 272) + *(void *)(v0 + 568);
        *(void *)(v30 + 14) = sub_1000DF238(v36, v35, (uint64_t *)(v0 + 240));
        swift_bridgeObjectRelease();
        sub_10016290C(v117, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
        *(_WORD *)(v30 + 22) = 2048;
        *(void *)(v30 + 24) = v17;
        *(_WORD *)(v30 + 32) = 2048;
        uint64_t v119 = *(void *)(v118 + 8);
        swift_release();
        *(void *)(v30 + 34) = v119;
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v25, v144, "%s ignoring node %s; already have %ld attestations out of %ld max",
          (uint8_t *)v30,
          0x2Au);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v107 = v141;
        goto LABEL_55;
      }
      uint64_t v67 = *(void *)(v0 + 512);
      uint64_t v80 = *(void *)(v0 + 488);
LABEL_40:
      swift_release();
      sub_10016290C(v80, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
      swift_release();
      goto LABEL_41;
    }
    sub_100161F3C(*(void *)(v0 + 512), *(void *)(v0 + 496), (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
    int v18 = swift_getEnumCaseMultiPayload();
    uint64_t v19 = *(Swift::Int **)(v0 + 496);
    if (v18 == 1)
    {
      Swift::Int v20 = *v19;
      Swift::Int v21 = v19[1];
      sub_100007918(v19[2], v19[3]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v1 = (uint64_t *)(v0 + 200);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v37 = *(Swift::Int **)(v0 + 376);
      sub_1001627E8((uint64_t)v19, (uint64_t)v37, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
      Swift::Int v20 = *v37;
      Swift::Int v21 = v37[1];
      swift_bridgeObjectRetain();
      sub_10016290C((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
    }
    sub_100101F08((Swift::Int *)(v0 + 120), v20, v21);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10016290C(*(void *)(v0 + 504), (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
  }
  uint64_t v38 = *(void *)(v0 + 184);
  sub_100161F3C(*(void *)(v0 + 512), *(void *)(v0 + 480), (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
  int v39 = swift_getEnumCaseMultiPayload();
  os_log_type_t v40 = *(uint64_t **)(v0 + 480);
  uint64_t v145 = v1;
  if (v39 == 1)
  {
    uint64_t v42 = *v40;
    uint64_t v41 = v40[1];
    uint64_t v43 = v40[2];
    unint64_t v44 = v40[3];
    swift_bridgeObjectRetain();
    sub_100007918(v43, v44);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v45 = *(uint64_t **)(v0 + 376);
    sub_1001627E8((uint64_t)v40, (uint64_t)v45, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
    uint64_t v42 = *v45;
    uint64_t v41 = v45[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10016290C((uint64_t)v45, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
  }
  char v46 = sub_1000FEDD4(v42, v41, v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v46 & 1) == 0)
  {
    uint64_t v60 = *(void *)(v38 + 16);
    uint64_t v61 = *(void *)(*(void *)(v0 + 272) + *(void *)(v0 + 568) + 8);
    if (v60 < v61)
    {
      sub_100161F3C(*(void *)(v0 + 512), *(void *)(v0 + 440), (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
      int v62 = swift_getEnumCaseMultiPayload();
      char v63 = *(Swift::Int **)(v0 + 440);
      if (v62 == 1)
      {
        Swift::Int v65 = *v63;
        Swift::Int v64 = v63[1];
        sub_100007918(v63[2], v63[3]);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        Swift::Int v66 = v65;
      }
      else
      {
        uint64_t v90 = *(Swift::Int **)(v0 + 376);
        sub_1001627E8((uint64_t)v63, (uint64_t)v90, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
        Swift::Int v91 = *v90;
        Swift::Int v64 = v90[1];
        swift_bridgeObjectRetain();
        sub_10016290C((uint64_t)v90, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
        Swift::Int v66 = v91;
      }
      uint64_t v143 = *(void *)(v0 + 560);
      uint64_t v126 = *(void *)(v0 + 512);
      uint64_t v92 = *(void *)(v0 + 424);
      uint64_t v131 = *(void *)(v0 + 392);
      uint64_t v132 = *(void *)(v0 + 400);
      uint64_t v93 = *(void *)(v0 + 368);
      uint64_t v137 = v93;
      uint64_t v147 = *(void *)(v0 + 360);
      uint64_t v94 = *(void *)(v0 + 352);
      uint64_t v95 = *(void *)(v0 + 328);
      uint64_t v96 = *(void *)(v0 + 336);
      uint64_t v128 = v95;
      uint64_t v129 = v94;
      uint64_t v97 = *(void *)(v0 + 320);
      uint64_t v130 = v97;
      uint64_t v134 = *(void *)(v0 + 344);
      uint64_t v133 = *(void *)(v0 + 304);
      uint64_t v127 = *(void *)(v0 + 296);
      uint64_t v98 = *(void *)(v0 + 280);
      uint64_t v140 = *(void *)(v0 + 288);
      uint64_t v136 = *(void *)(v0 + 272);
      sub_100101F08((Swift::Int *)(v0 + 136), v66, v64);
      swift_bridgeObjectRelease();
      uint64_t v99 = sub_1001C0FC0();
      uint64_t v135 = *(void *)(v99 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v135 + 56))(v93, 1, 1, v99);
      sub_100161F3C(v126, v92, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v96 + 16))(v94, v98, v95);
      sub_100161F3C(v127, v97, type metadata accessor for NWAsyncConnection.OHTTPStreamFactory);
      unint64_t v100 = (*(unsigned __int8 *)(v131 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80);
      unint64_t v101 = (v132 + v100 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v102 = (*(unsigned __int8 *)(v96 + 80) + v101 + 8) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80);
      unint64_t v103 = (v134 + v102 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v104 = (*(unsigned __int8 *)(v133 + 80) + v103 + 8) & ~(unint64_t)*(unsigned __int8 *)(v133 + 80);
      uint64_t v105 = (char *)swift_allocObject();
      *((void *)v105 + 2) = 0;
      *((void *)v105 + 3) = 0;
      *((void *)v105 + 4) = v136;
      sub_1001627E8(v92, (uint64_t)&v105[v100], (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
      *(void *)&v105[v101] = v143;
      (*(void (**)(char *, uint64_t, uint64_t))(v96 + 32))(&v105[v102], v129, v128);
      *(void *)&v105[v103] = v140;
      sub_1001627E8(v130, (uint64_t)&v105[v104], type metadata accessor for NWAsyncConnection.OHTTPStreamFactory);
      sub_10003282C(v137, v147, &qword_10020C3B0);
      LODWORD(v103) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v135 + 48))(v147, 1, v99);
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v106 = *(void *)(v0 + 360);
      if (v103 == 1)
      {
        sub_100010360(*(void *)(v0 + 360), &qword_10020C3B0);
      }
      else
      {
        sub_1001C0FB0();
        (*(void (**)(uint64_t, uint64_t))(v135 + 8))(v106, v99);
      }
      if (*((void *)v105 + 2))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v109 = sub_1001C0EA0();
        uint64_t v111 = v110;
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v109 = 0;
        uint64_t v111 = 0;
      }
      uint64_t v112 = **(void **)(v0 + 256);
      sub_100003918(&qword_10020E298);
      uint64_t v113 = v111 | v109;
      if (v111 | v109)
      {
        uint64_t v113 = v0 + 16;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v109;
        *(void *)(v0 + 40) = v111;
      }
      uint64_t v114 = *(void *)(v0 + 512);
      uint64_t v115 = *(void *)(v0 + 368);
      *(void *)(v0 + 72) = 1;
      *(void *)(v0 + 80) = v113;
      *(void *)(v0 + 88) = v112;
      swift_task_create();
      swift_release();
      sub_100010360(v115, &qword_10020C3B0);
      uint64_t v107 = v114;
      goto LABEL_55;
    }
    sub_100161F3C(*(void *)(v0 + 512), *(void *)(v0 + 432), (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
    swift_retain_n();
    uint64_t v25 = sub_1001C0330();
    os_log_type_t v69 = sub_1001C11F0();
    if (os_log_type_enabled(v25, v69))
    {
      os_log_type_t v142 = v69;
      uint64_t v70 = *(void *)(v0 + 432);
      uint64_t v71 = *(void *)(v0 + 416);
      uint64_t v72 = (uint64_t *)(*(void *)(v0 + 272) + *(void *)(v0 + 584));
      uint64_t v73 = swift_slowAlloc();
      *(void *)(v0 + 200) = swift_slowAlloc();
      *(_DWORD *)uint64_t v73 = 136315906;
      uint64_t v74 = *v72;
      unint64_t v75 = v72[1];
      swift_bridgeObjectRetain();
      *(void *)(v73 + 4) = sub_1000DF238(v74, v75, v145);
      swift_bridgeObjectRelease();
      *(_WORD *)(v73 + 12) = 2080;
      sub_100161F3C(v70, v71, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
      int v76 = swift_getEnumCaseMultiPayload();
      os_log_type_t v77 = *(uint64_t **)(v0 + 416);
      if (v76 == 1)
      {
        uint64_t v79 = *v77;
        unint64_t v78 = v77[1];
        sub_100007918(v77[2], v77[3]);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v120 = *(uint64_t **)(v0 + 376);
        sub_1001627E8((uint64_t)v77, (uint64_t)v120, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
        uint64_t v79 = *v120;
        unint64_t v78 = v120[1];
        swift_bridgeObjectRetain();
        sub_10016290C((uint64_t)v120, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
      }
      uint64_t v138 = *(void *)(v0 + 512);
      uint64_t v121 = *(void *)(v0 + 432);
      *(void *)(v73 + 14) = sub_1000DF238(v79, v78, v145);
      swift_bridgeObjectRelease();
      sub_10016290C(v121, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
      *(_WORD *)(v73 + 22) = 2048;
      *(void *)(v73 + 24) = v60;
      *(_WORD *)(v73 + 32) = 2048;
      swift_release();
      *(void *)(v73 + 34) = v61;
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v25, v142, "%s ignoring node %s; already have %ld attestations out of %ld max",
        (uint8_t *)v73,
        0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v107 = v138;
      goto LABEL_55;
    }
    uint64_t v67 = *(void *)(v0 + 512);
    uint64_t v80 = *(void *)(v0 + 432);
    goto LABEL_40;
  }
  uint64_t v47 = *(void *)(v0 + 512);
  uint64_t v48 = *(void *)(v0 + 464);
  sub_100161F3C(v47, *(void *)(v0 + 472), (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
  sub_100161F3C(v47, v48, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
  swift_retain();
  uint64_t v25 = sub_1001C0330();
  os_log_type_t v49 = sub_1001C11E0();
  if (os_log_type_enabled(v25, v49))
  {
    os_log_type_t v139 = v49;
    unint64_t v146 = v25;
    uint64_t v50 = *(void *)(v0 + 472);
    uint64_t v51 = *(void *)(v0 + 456);
    uint64_t v52 = (uint64_t *)(*(void *)(v0 + 272) + *(void *)(v0 + 584));
    uint64_t v53 = swift_slowAlloc();
    *(void *)(v0 + 232) = swift_slowAlloc();
    *(_DWORD *)uint64_t v53 = 136315650;
    uint64_t v54 = *v52;
    unint64_t v55 = v52[1];
    swift_bridgeObjectRetain();
    *(void *)(v53 + 4) = sub_1000DF238(v54, v55, (uint64_t *)(v0 + 232));
    swift_bridgeObjectRelease();
    swift_release();
    *(_WORD *)(v53 + 12) = 2080;
    sub_100161F3C(v50, v51, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
    int v56 = swift_getEnumCaseMultiPayload();
    uint64_t v57 = *(uint64_t **)(v0 + 456);
    if (v56 == 1)
    {
      uint64_t v59 = *v57;
      unint64_t v58 = v57[1];
      sub_100007918(v57[2], v57[3]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v81 = *(uint64_t **)(v0 + 376);
      sub_1001627E8((uint64_t)v57, (uint64_t)v81, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
      uint64_t v59 = *v81;
      unint64_t v58 = v81[1];
      swift_bridgeObjectRetain();
      sub_10016290C((uint64_t)v81, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
    }
    uint64_t v83 = *(void *)(v0 + 464);
    uint64_t v82 = *(void *)(v0 + 472);
    uint64_t v84 = *(void *)(v0 + 448);
    *(void *)(v53 + 14) = sub_1000DF238(v59, v58, (uint64_t *)(v0 + 232));
    swift_bridgeObjectRelease();
    sub_10016290C(v82, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
    *(_WORD *)(v53 + 22) = 2048;
    sub_100161F3C(v83, v84, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
    int v85 = swift_getEnumCaseMultiPayload();
    uint64_t v86 = *(void **)(v0 + 448);
    if (v85 == 1)
    {
      uint64_t v87 = v86[2];
      unint64_t v88 = v86[3];
      uint64_t v89 = v86[12];
      swift_bridgeObjectRelease();
      sub_100007918(v87, v88);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v89 = *(void *)((char *)v86 + *(int *)(sub_100003918(&qword_100208188) + 48));
      sub_10016290C((uint64_t)v86, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
    }
    uint64_t v108 = *(void *)(v0 + 512);
    sub_10016290C(*(void *)(v0 + 464), (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
    *(void *)(v53 + 24) = v89;
    _os_log_impl((void *)&_mh_execute_header, v146, v139, "%s already have a node with identifier %s, conflict: %llu", (uint8_t *)v53, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v107 = v108;
    goto LABEL_55;
  }
  uint64_t v67 = *(void *)(v0 + 512);
  uint64_t v68 = *(void *)(v0 + 472);
  sub_10016290C(*(void *)(v0 + 464), (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
  swift_release();
  sub_10016290C(v68, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
LABEL_41:

  uint64_t v107 = v67;
LABEL_55:
  sub_10016290C(v107, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
  uint64_t v122 = (void *)swift_task_alloc();
  *(void *)(v0 + 592) = v122;
  *uint64_t v122 = v0;
  v122[1] = sub_10012BA40;
  uint64_t v123 = *(void *)(v0 + 528);
  uint64_t v124 = *(void *)(v0 + 520);
  return AsyncStream.Iterator.next(isolation:)(v124, 0, 0, v123);
}

uint64_t sub_10012CF90()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 632) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_10012D96C;
  }
  else
  {
    *(void *)(v2 + 640) = *(void *)(v2 + 152);
    *(unsigned char *)(v2 + 161) = *(unsigned char *)(v2 + 160);
    uint64_t v3 = sub_10012D0B4;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10012D0B4()
{
  uint64_t v42 = v1;
  uint64_t v2 = (void *)(v1 + 176);
  int v3 = *(unsigned __int8 *)(v1 + 161);
  if (v3 == 255)
  {
    uint64_t v4 = *(void *)(v1 + 184);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v5 = sub_1001C0330();
    os_log_type_t v6 = sub_1001C11E0();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint64_t *)(*(void *)(v1 + 272) + *(void *)(v1 + 584));
      uint64_t v8 = swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136315394;
      uint64_t v9 = *v7;
      unint64_t v10 = v7[1];
      swift_bridgeObjectRetain();
      *(void *)(v1 + 208) = sub_1000DF238(v9, v10, &v41);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v8 + 12) = 2048;
      uint64_t v11 = *(void *)(v4 + 16);
      swift_bridgeObjectRelease();
      *(void *)(v1 + 168) = v11;
      sub_1001C1310();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "%s All %ld node substreams have finished", (uint8_t *)v8, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();

      swift_release_n();
    }
    uint64_t v23 = *(void *)(v1 + 616);
    if (*(unsigned char *)(*(void *)(v1 + 600) + 16) == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_21:
      sub_10012F650(*(void *)(v1 + 272));
      swift_errorRelease();
      swift_release();
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v32 = *(uint64_t (**)(void))(v1 + 8);
      goto LABEL_22;
    }
    uint64_t v24 = *(void *)(v23 + 16);
    swift_beginAccess();
    uint64_t v25 = *(void *)(*(void *)(v1 + 184) + 16);
    swift_bridgeObjectRelease();
    if (v24 == v25 && *(void *)(v23 + 16))
    {
      uint64_t v26 = *(void *)(v1 + 616);
      sub_10002C2C4();
      uint64_t v27 = swift_allocError();
      *(unsigned char *)uint64_t v28 = 3;
      *(void *)(v28 + 8) = v26;
      swift_errorRelease();
    }
    else
    {
      uint64_t v30 = *(void *)(v1 + 608);
      swift_bridgeObjectRelease();
      if (!v30) {
        goto LABEL_21;
      }
      uint64_t v27 = *(void *)(v1 + 608);
    }
    swift_errorRetain();
    uint64_t v31 = *(void *)(v1 + 272);
    sub_10012F860(v27);
    swift_willThrow();
    sub_10012F650(v31);
    swift_errorRelease();
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v32 = *(uint64_t (**)(void))(v1 + 8);
LABEL_22:
    return v32();
  }
  uint64_t v12 = *(void *)(v1 + 216);
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13)
  {
    __break(1u);
    goto LABEL_34;
  }
  *(void *)(v1 + 216) = v14;
  uint64_t v15 = *(void *)(v1 + 184);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v0 = sub_1001C0330();
  os_log_type_t v16 = sub_1001C11E0();
  if (!os_log_type_enabled(v0, v16))
  {
    swift_bridgeObjectRelease_n();

    swift_release_n();
    if (v3) {
      goto LABEL_8;
    }
    goto LABEL_16;
  }
  uint64_t v17 = (uint64_t *)(*(void *)(v1 + 272) + *(void *)(v1 + 584));
  uint64_t v18 = swift_slowAlloc();
  *(void *)(v1 + 176) = swift_slowAlloc();
  *(_DWORD *)uint64_t v18 = 136315394;
  uint64_t v19 = *v17;
  unint64_t v20 = v17[1];
  swift_bridgeObjectRetain();
  *(void *)(v18 + 4) = sub_1000DF238(v19, v20, (uint64_t *)(v1 + 176));
  swift_bridgeObjectRelease();
  swift_release_n();
  *(_WORD *)(v18 + 12) = 2048;
  uint64_t v21 = *(void *)(v15 + 16);
  uint64_t v22 = *(void *)(v1 + 216);
  swift_bridgeObjectRelease();
  if (__OFSUB__(v21, v22))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(void *)(v18 + 14) = v21 - v22;
  swift_bridgeObjectRelease();
  _os_log_impl((void *)&_mh_execute_header, v0, v16, "%s Node substream task finished. Remaining: %ld", (uint8_t *)v18, 0x16u);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  if (v3)
  {
LABEL_8:
    swift_errorRelease();
    uint64_t v2 = *(void **)(v1 + 616);
    *(void *)(v1 + 608) = *(void *)(v1 + 640);
LABEL_29:
    *(void *)(v1 + 616) = v2;
    goto LABEL_30;
  }
LABEL_16:
  uint64_t v0 = *(NSObject **)(v1 + 640);
  if ((unint64_t)v0 >= 2)
  {
    sub_10015F90C(*(void *)(v1 + 640), 0);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v2 = *(void **)(v1 + 616);
    if (isUniquelyReferenced_nonNull_native)
    {
LABEL_26:
      unint64_t v36 = v2[2];
      unint64_t v35 = v2[3];
      if (v36 >= v35 >> 1) {
        uint64_t v2 = sub_1000E4054((void *)(v35 > 1), v36 + 1, 1, v2);
      }
      unint64_t v37 = *(void *)(v1 + 640);
      unsigned __int8 v38 = *(unsigned char *)(v1 + 161);
      v2[2] = v36 + 1;
      v2[v36 + 4] = v0;
      sub_10015F8D8(v37, v38);
      goto LABEL_29;
    }
LABEL_35:
    uint64_t v2 = sub_1000E4054(0, v2[2] + 1, 1, v2);
    goto LABEL_26;
  }
  uint64_t v29 = *(void *)(v1 + 600);
  sub_10015F8D8(*(void *)(v1 + 640), *(unsigned char *)(v1 + 161));
  *(unsigned char *)(v29 + 16) = 1;
LABEL_30:
  int v39 = (void *)swift_task_alloc();
  *(void *)(v1 + 624) = v39;
  uint64_t v40 = sub_100003918(&qword_10020E2D0);
  void *v39 = v1;
  v39[1] = sub_10012CF90;
  return ThrowingTaskGroup.nextResult()(v1 + 152, v40);
}

uint64_t sub_10012D96C()
{
  return _swift_unexpectedError(*(void *)(v0 + 632), "_Concurrency/TaskGroup.swift", 28, 1, 1173);
}

uint64_t sub_10012D988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[9] = a5;
  v6[10] = a6;
  v6[7] = a3;
  v6[8] = a4;
  v6[5] = a1;
  v6[6] = a2;
  type metadata accessor for ValidatedAttestation();
  v6[11] = swift_task_alloc();
  v6[12] = type metadata accessor for ValidatedAttestationOrAttestation();
  v6[13] = swift_task_alloc();
  v6[14] = swift_task_alloc();
  return _swift_task_switch(sub_10012DA60, 0, 0);
}

uint64_t sub_10012DA60()
{
  sub_100161F3C(*(void *)(v0 + 48), *(void *)(v0 + 112), (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
  swift_retain_n();
  uint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C1200();
  if (os_log_type_enabled(v1, v2))
  {
    os_log_type_t v24 = v2;
    uint64_t v3 = *(void *)(v0 + 104);
    uint64_t v23 = *(void *)(v0 + 112);
    uint64_t v4 = *(void *)(v0 + 40);
    uint64_t v5 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    os_log_type_t v6 = (uint64_t *)(v4 + *(void *)(*(void *)v4 + 368));
    uint64_t v8 = *v6;
    unint64_t v7 = v6[1];
    swift_bridgeObjectRetain();
    *(void *)(v0 + 24) = sub_1000DF238(v8, v7, &v26);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v5 + 12) = 2080;
    sub_100161F3C(v23, v3, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    unint64_t v10 = *(uint64_t **)(v0 + 104);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v11 = *v10;
      unint64_t v12 = v10[1];
      sub_100007918(v10[2], v10[3]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v14 = *(uint64_t **)(v0 + 88);
      sub_1001627E8((uint64_t)v10, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
      uint64_t v11 = *v14;
      unint64_t v12 = v14[1];
      swift_bridgeObjectRetain();
      sub_10016290C((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
    }
    uint64_t v15 = *(void *)(v0 + 112);
    *(void *)(v0 + 32) = sub_1000DF238(v11, v12, &v26);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    sub_10016290C(v15, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
    _os_log_impl((void *)&_mh_execute_header, v1, v24, "%s Creating node stream subtask for node: %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 112);

    swift_release_n();
    sub_10016290C(v13, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
  }
  uint64_t v16 = *(void *)(v0 + 80);
  uint64_t v17 = *(void *)(v0 + 40);
  uint64_t v18 = sub_100003918(&qword_10020E298);
  uint64_t v19 = swift_task_alloc();
  *(void *)(v0 + 120) = v19;
  long long v20 = *(_OWORD *)(v0 + 64);
  *(int8x16_t *)(v19 + 16) = vextq_s8(*(int8x16_t *)(v0 + 48), *(int8x16_t *)(v0 + 48), 8uLL);
  *(void *)(v19 + 32) = v17;
  *(_OWORD *)(v19 + 40) = v20;
  *(void *)(v19 + 56) = v16;
  uint64_t v21 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v21;
  *uint64_t v21 = v0;
  v21[1] = sub_10012DE74;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 16, v18, v18, 0, 0, &unk_10020E308, v19, v18);
}

uint64_t sub_10012DE74()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v2 = sub_10012E040;
  }
  else
  {
    swift_task_dealloc();
    os_log_type_t v2 = sub_10012DF90;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10012DF90()
{
  sub_10012F298(v0[5], v0[6], (uint64_t (*)(void))&static os_log_type_t.debug.getter, "%s Leaving node stream subtask for node: %s");
  uint64_t v1 = v0[2];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v2 = (uint64_t (*)(uint64_t))v0[1];
  return v2(v1);
}

uint64_t sub_10012E040()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  swift_task_dealloc();
  sub_10012F298(v2, v1, (uint64_t (*)(void))&static os_log_type_t.debug.getter, "%s Leaving node stream subtask for node: %s");
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10012E100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[9] = a6;
  v7[10] = a7;
  v7[7] = a4;
  v7[8] = a5;
  v7[5] = a2;
  v7[6] = a3;
  v7[4] = a1;
  uint64_t v8 = *(void *)(type metadata accessor for NWAsyncConnection.OHTTPStreamFactory(0) - 8);
  v7[11] = v8;
  v7[12] = *(void *)(v8 + 64);
  v7[13] = swift_task_alloc();
  uint64_t v9 = sub_100003918(&qword_10020E268);
  v7[14] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v7[15] = v10;
  v7[16] = *(void *)(v10 + 64);
  v7[17] = swift_task_alloc();
  uint64_t v11 = *(void *)(type metadata accessor for ValidatedAttestationOrAttestation() - 8);
  v7[18] = v11;
  v7[19] = *(void *)(v11 + 64);
  v7[20] = swift_task_alloc();
  sub_100003918(&qword_10020C3B0);
  v7[21] = swift_task_alloc();
  return _swift_task_switch(sub_10012E2C8, 0, 0);
}

uint64_t sub_10012E2C8()
{
  uint64_t v1 = v0;
  uint64_t v34 = v0 + 2;
  uint64_t v3 = v0[20];
  uint64_t v2 = v0[21];
  uint64_t v5 = v0[18];
  uint64_t v4 = v0[19];
  uint64_t v29 = v0[17];
  uint64_t v32 = v0[16];
  uint64_t v38 = v0[14];
  uint64_t v36 = v0[15];
  uint64_t v37 = v0[13];
  uint64_t v30 = v0[10];
  uint64_t v31 = v0[11];
  uint64_t v33 = v0[9];
  uint64_t v28 = v0[8];
  uint64_t v6 = v0[6];
  uint64_t v35 = v0[7];
  uint64_t v24 = v6;
  uint64_t v7 = v0[5];
  uint64_t v8 = sub_1001C0FC0();
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
  v25(v2, 1, 1, v8);
  sub_100161F3C(v6, v3, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
  uint64_t v9 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = (v9 + 40) & ~v9;
  uint64_t v26 = v4 + 7;
  unint64_t v11 = (v10 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = (void *)swift_allocObject();
  v12[2] = 0;
  uint64_t v12[3] = 0;
  v12[4] = v7;
  sub_1001627E8(v3, (uint64_t)v12 + v10, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
  *(void *)((char *)v12 + v11) = v35;
  swift_retain();
  swift_retain();
  uint64_t v27 = v2;
  sub_10012E99C(v2, (uint64_t)&unk_10020E320, (uint64_t)v12);
  sub_100010360(v2, &qword_10020C3B0);
  v25(v2, 1, 1, v8);
  uint64_t v13 = v3;
  sub_100161F3C(v24, v3, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v29, v28, v38);
  sub_100161F3C(v30, v37, type metadata accessor for NWAsyncConnection.OHTTPStreamFactory);
  uint64_t v14 = (v9 + 32) & ~v9;
  unint64_t v15 = (v14 + v26) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v15 + *(unsigned __int8 *)(v36 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  unint64_t v17 = (v32 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (*(unsigned __int8 *)(v31 + 80) + v18 + 8) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = 0;
  *(void *)(v20 + 24) = 0;
  sub_1001627E8(v13, v20 + v14, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
  *(void *)(v20 + v15) = v35;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v36 + 32))(v20 + v16, v29, v38);
  *(void *)(v20 + v17) = v33;
  *(void *)(v20 + v18) = v7;
  sub_1001627E8(v37, v20 + v19, type metadata accessor for NWAsyncConnection.OHTTPStreamFactory);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10012E99C(v27, (uint64_t)&unk_10020E330, v20);
  sub_100010360(v27, &qword_10020C3B0);
  uint64_t v21 = (void *)swift_task_alloc();
  v1[22] = v21;
  uint64_t v22 = sub_100003918(&qword_10020E2D0);
  *uint64_t v21 = v1;
  v21[1] = sub_10012E6B8;
  return ThrowingTaskGroup.nextResult()(v34, v22);
}

uint64_t sub_10012E6B8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_10012E980;
  }
  else
  {
    *(void *)(v2 + 192) = *(void *)(v2 + 16);
    *(unsigned char *)(v2 + 25) = *(unsigned char *)(v2 + 24);
    uint64_t v3 = sub_10012E7DC;
  }
  return _swift_task_switch(v3, 0, 0);
}

void sub_10012E7DC()
{
  int v1 = *(unsigned __int8 *)(v0 + 25);
  if (v1 == 255)
  {
    __break(1u);
  }
  else if (v1)
  {
    sub_100003918(&qword_10020E298);
    sub_100003918(&qword_100208C98);
    sub_1001C1080();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(void (**)(void))(v0 + 8);
    v4();
  }
  else
  {
    sub_100003918(&qword_10020E298);
    sub_100003918(&qword_100208C98);
    sub_1001C1080();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = *(void (**)(uint64_t))(v0 + 8);
    uint64_t v3 = *(void *)(v0 + 192);
    v2(v3);
  }
}

uint64_t sub_10012E980()
{
  return _swift_unexpectedError(*(void *)(v0 + 184), "_Concurrency/TaskGroup.swift", 28, 1, 1173);
}

uint64_t sub_10012E99C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = sub_100003918(&qword_10020C3B0);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(a1, (uint64_t)v10, &qword_10020C3B0);
  uint64_t v11 = sub_1001C0FC0();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_100010360((uint64_t)v10, &qword_10020C3B0);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v13 = sub_1001C0EA0();
      uint64_t v15 = v14;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1001C0FB0();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v13 = 0;
  uint64_t v15 = 0;
LABEL_6:
  uint64_t v16 = *v4;
  sub_100003918(&qword_10020E298);
  unint64_t v17 = (void *)(v15 | v13);
  if (v15 | v13)
  {
    v20[0] = 0;
    v20[1] = 0;
    unint64_t v17 = v20;
    id v20[2] = v13;
    v20[3] = v15;
  }
  v19[1] = 1;
  v19[2] = v17;
  v19[3] = v16;
  swift_task_create();
  return swift_release();
}

uint64_t sub_10012EB80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = sub_100003918(&qword_10020C3B0);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(a1, (uint64_t)v10, &qword_10020C3B0);
  uint64_t v11 = sub_1001C0FC0();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_100010360((uint64_t)v10, &qword_10020C3B0);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v13 = sub_1001C0EA0();
      uint64_t v15 = v14;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1001C0FB0();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v13 = 0;
  uint64_t v15 = 0;
LABEL_6:
  uint64_t v16 = *v4;
  unint64_t v17 = (void *)(v15 | v13);
  if (v15 | v13)
  {
    v20[0] = 0;
    v20[1] = 0;
    unint64_t v17 = v20;
    id v20[2] = v13;
    v20[3] = v15;
  }
  v19[1] = 1;
  v19[2] = v17;
  v19[3] = v16;
  swift_task_create();
  return swift_release();
}

uint64_t sub_10012ED60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[8] = a5;
  v6[9] = v5;
  v6[6] = a3;
  v6[7] = a4;
  v6[4] = a1;
  v6[5] = a2;
  return _swift_task_switch(sub_10012ED88, 0, 0);
}

uint64_t sub_10012ED88()
{
  uint64_t v26 = v0;
  int v1 = (uint64_t *)v0[4];
  uint64_t v3 = *v1;
  unint64_t v2 = v1[1];
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v4 = sub_1001C0330();
  os_log_type_t v5 = sub_1001C1200();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v23 = v3;
    uint64_t v6 = v0[9];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    uint64_t v8 = (uint64_t *)(v6 + *(void *)(*(void *)v6 + 368));
    uint64_t v10 = *v8;
    unint64_t v9 = v8[1];
    swift_bridgeObjectRetain();
    v0[2] = sub_1000DF238(v10, v9, &v25);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    uint64_t v3 = v23;
    swift_release_n();
    *(_WORD *)(v7 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[3] = sub_1000DF238(v23, v2, &v25);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s starting node stream to %s; creating request...",
      (uint8_t *)v7,
      0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v11 = v0[9];
  uint64_t v13 = v0[6];
  uint64_t v12 = v0[7];
  uint64_t v14 = v0[4];
  uint64_t v15 = v0[5];
  uint64_t v17 = *(void *)(v14 + 96);
  uint64_t v16 = *(void *)(v14 + 104);
  unint64_t v18 = (void *)swift_task_alloc();
  v0[10] = v18;
  void v18[2] = v13;
  v18[3] = v11;
  v18[4] = v3;
  v18[5] = v2;
  v18[6] = v12;
  v18[7] = v15;
  uint64_t v19 = swift_task_alloc();
  v0[11] = v19;
  *(void *)(v19 + 16) = &unk_10020E370;
  *(void *)(v19 + 24) = v18;
  uint64_t v24 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10020E388
                                                                                              + dword_10020E388);
  uint64_t v20 = (void *)swift_task_alloc();
  v0[12] = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_10012F0B0;
  uint64_t v21 = v0[5];
  return v24(v21, v17, v16, 0xD000000000000014, 0x80000001001C66B0, (uint64_t)&unk_10020E380, v19);
}

uint64_t sub_10012F0B0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 104) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    return _swift_task_switch(sub_10012F234, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_10012F234()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_10012F298(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), const char *a4)
{
  uint64_t v8 = type metadata accessor for ValidatedAttestation();
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (uint64_t *)((char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for ValidatedAttestationOrAttestation();
  uint64_t v14 = __chkstk_darwin(v12, v13);
  uint64_t v16 = (uint64_t *)((char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14, v17);
  uint64_t v19 = (char *)&v28 - v18;
  sub_100161F3C(a2, (uint64_t)&v28 - v18, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
  swift_retain_n();
  uint64_t v20 = sub_1001C0330();
  int v21 = a3();
  if (os_log_type_enabled(v20, (os_log_type_t)v21))
  {
    int v30 = v21;
    uint64_t v31 = a4;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v33 = v29;
    *(_DWORD *)uint64_t v22 = 136315394;
    uint64_t v23 = (uint64_t *)(a1 + *(void *)(*(void *)a1 + 368));
    uint64_t v25 = *v23;
    unint64_t v24 = v23[1];
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_1000DF238(v25, v24, &v33);
    sub_1001C1310();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    sub_100161F3C((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v27 = *v16;
      unint64_t v26 = v16[1];
      sub_100007918(v16[2], v16[3]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1001627E8((uint64_t)v16, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
      uint64_t v27 = *v11;
      unint64_t v26 = v11[1];
      swift_bridgeObjectRetain();
      sub_10016290C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
    }
    uint64_t v32 = sub_1000DF238(v27, v26, &v33);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    sub_10016290C((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
    _os_log_impl((void *)&_mh_execute_header, v20, (os_log_type_t)v30, v31, (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();

    sub_10016290C((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
  }
}

void sub_10012F650(uint64_t a1)
{
  swift_retain_n();
  swift_retain();
  oslog = sub_1001C0330();
  os_log_type_t v2 = sub_1001C11E0();
  if (os_log_type_enabled(oslog, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315394;
    uint64_t v4 = (uint64_t *)(a1 + *(void *)(*(void *)a1 + 368));
    uint64_t v5 = *v4;
    unint64_t v6 = v4[1];
    swift_bridgeObjectRetain();
    sub_1000DF238(v5, v6, &v8);
    sub_1001C1310();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 1024;
    swift_beginAccess();
    sub_1001C1310();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, oslog, v2, "%s Leaving runNodesStreams taskGroup. Success: %{BOOL}d", (uint8_t *)v3, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release();
    swift_release_n();
  }
}

void sub_10012F860(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1001C02E0();
  uint64_t v65 = *(void *)(v4 - 8);
  uint64_t v66 = v4;
  uint64_t v6 = __chkstk_darwin(v4, v5);
  int v62 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v57 - v9;
  uint64_t v11 = sub_1001C03E0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1001C02A0();
  uint64_t v67 = *(void *)(v16 - 8);
  uint64_t v68 = v16;
  uint64_t v18 = __chkstk_darwin(v16, v17);
  Swift::Int v64 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18, v20);
  uint64_t v23 = (char *)&v57 - v22;
  __chkstk_darwin(v21, v24);
  unint64_t v26 = (char *)&v57 - v25;
  uint64_t v69 = a1;
  uint64_t v27 = (os_unfair_lock_s *)(v2 + *(void *)(*(void *)v2 + 128));
  os_unfair_lock_lock(v27);
  uint64_t v28 = sub_100003918(&qword_100208C90);
  sub_1001610FC((uint64_t)v27 + *(int *)(v28 + 28), (uint64_t)v70);
  os_unfair_lock_unlock(v27);
  unint64_t v29 = v70[0];
  if ((~v70[0] & 0xF000000000000007) == 0) {
    return;
  }
  unint64_t v30 = v70[1];
  unint64_t v61 = v70[3];
  int v63 = v71;
  if (!(v70[0] >> 62))
  {
LABEL_8:
    (*(void (**)(char *, void, uint64_t))(v12 + 104))(v15, enum case for NWActivity.CompletionReason.failure(_:), v11);
    sub_10002C384(v29);
    sub_1001C0400();
    sub_10016111C(v29);
    sub_10016111C(v29);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    return;
  }
  if (v70[0] >> 62 == 1)
  {
    unint64_t v60 = v70[2];
    (*(void (**)(char *, void, uint64_t))(v12 + 104))(v15, enum case for NWActivity.CompletionReason.failure(_:), v11);
    swift_retain();
    swift_retain();
    sub_1001C0400();
    uint64_t v31 = *(void (**)(char *, uint64_t))(v12 + 8);
    v12 += 8;
    v31(v15, v11);
    uint64_t v32 = sub_1001C02C0();
    uint64_t v15 = v23;
    sub_1001C02F0();
    int v33 = sub_1001C1280();
    if ((sub_1001C12D0() & 1) == 0)
    {

      swift_release();
      sub_10016111C(v29);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v15, v68);
      swift_release();
      return;
    }
    if ((v63 & 1) == 0)
    {
      uint64_t v34 = (const char *)v60;
      uint64_t v36 = v65;
      uint64_t v35 = v66;
      uint64_t v11 = (uint64_t)v62;
      if (!v60)
      {
        __break(1u);
        goto LABEL_8;
      }
      goto LABEL_19;
    }
    uint64_t v36 = v65;
    uint64_t v35 = v66;
    uint64_t v11 = (uint64_t)v62;
    if (!HIDWORD(v60))
    {
      if (v60 >> 11 == 27)
      {
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }
      if (WORD1(v60) <= 0x10u)
      {
        uint64_t v34 = &v73;
LABEL_19:
        unint64_t v58 = v34;
        swift_retain();
        sub_1001C0320();
        swift_release();
        int v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 88))(v11, v35);
        int v59 = v33;
        if (v39 == enum case for OSSignpostError.doubleEnd(_:))
        {
          uint64_t v43 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v11, v35);
          uint64_t v43 = "";
        }
        uint64_t v44 = v67;
        uint64_t v45 = v68;
        char v46 = v64;
        (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v64, v15, v68);
        uint64_t v47 = v15;
        uint64_t v48 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v48 = 0;
        os_signpost_id_t v49 = sub_1001C0290();
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v32, (os_signpost_type_t)v59, v49, v58, v43, v48, 2u);
        swift_slowDealloc();

        swift_release();
        sub_10016111C(v29);
        uint64_t v50 = *(void (**)(char *, uint64_t))(v44 + 8);
        v50(v47, v45);
        swift_release();
        v50(v46, v45);
        return;
      }
      goto LABEL_35;
    }
    goto LABEL_33;
  }
  char v37 = v61;
  sub_10002C384(v70[0]);
  uint64_t v38 = sub_1001C02C0();
  sub_1001C02F0();
  LODWORD(v62) = sub_1001C1280();
  if ((sub_1001C12D0() & 1) == 0)
  {

    sub_10016111C(v29);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v26, v68);
    sub_10016111C(v29);
    return;
  }
  if (v37)
  {
    if (HIDWORD(v30))
    {
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v30 >> 11 == 27)
    {
LABEL_38:
      __break(1u);
      return;
    }
    if (WORD1(v30) > 0x10u) {
      goto LABEL_36;
    }
    unint64_t v60 = (unint64_t)&v72;
  }
  else
  {
    if (!v30)
    {
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    unint64_t v60 = v30;
  }
  sub_10002C384(v29);
  sub_1001C0320();
  sub_10016111C(v29);
  uint64_t v41 = v65;
  uint64_t v40 = v66;
  if ((*(unsigned int (**)(char *, uint64_t))(v65 + 88))(v10, v66) == enum case for OSSignpostError.doubleEnd(_:))
  {
    uint64_t v42 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v41 + 8))(v10, v40);
    uint64_t v42 = "";
  }
  uint64_t v51 = v67;
  uint64_t v52 = v68;
  uint64_t v53 = v64;
  (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v64, v26, v68);
  uint64_t v54 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v54 = 0;
  os_signpost_id_t v55 = sub_1001C0290();
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v38, (os_signpost_type_t)v62, v55, (const char *)v60, v42, v54, 2u);
  swift_slowDealloc();

  sub_10016111C(v29);
  int v56 = *(void (**)(char *, uint64_t))(v51 + 8);
  v56(v26, v52);
  sub_10016111C(v29);
  v56(v53, v52);
}

uint64_t sub_1001300CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a1;
  v3[8] = a2;
  v3[9] = type metadata accessor for ValidatedAttestation();
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  uint64_t v6 = (void *)swift_task_alloc();
  v3[12] = v6;
  void *v6 = v3;
  v6[1] = sub_1001301DC;
  return sub_1001923EC(a1, a3);
}

uint64_t sub_1001301DC()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100130690;
  }
  else {
    uint64_t v2 = sub_1001302F0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001302F0()
{
  uint64_t v27 = v0;
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[10];
  sub_100161F3C(v1, v0[11], (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
  sub_100161F3C(v1, v2, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
  swift_retain_n();
  uint64_t v3 = sub_1001C0330();
  os_log_type_t v4 = sub_1001C1200();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[8];
    uint64_t v25 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315650;
    uint64_t v8 = (uint64_t *)(v6 + *(void *)(*(void *)v6 + 368));
    uint64_t v10 = *v8;
    unint64_t v9 = v8[1];
    swift_bridgeObjectRetain();
    v0[4] = sub_1000DF238(v10, v9, &v26);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v7 + 12) = 2080;
    uint64_t v22 = v5;
    uint64_t v12 = *(void *)(v5 + 96);
    unint64_t v11 = *(void *)(v5 + 104);
    sub_100007B14(v12, v11);
    log = v3;
    uint64_t v13 = sub_1001BF0E0();
    os_log_type_t type = v4;
    unint64_t v15 = v14;
    sub_10000792C(v12, v11);
    v0[5] = sub_1000DF238(v13, v15, &v26);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    sub_10016290C(v22, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
    *(_WORD *)(v7 + 22) = 2080;
    sub_1001BF2C0();
    sub_1001627A0(&qword_10020C558, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v16 = sub_1001C1780();
    v0[6] = sub_1000DF238(v16, v17, &v26);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    sub_10016290C(v25, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
    _os_log_impl((void *)&_mh_execute_header, log, type, "%s attestation success with package key %s, validationExpiration: %s", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v19 = v0[10];
    uint64_t v18 = v0[11];

    swift_release_n();
    sub_10016290C(v18, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
    sub_10016290C(v19, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_100130690()
{
  uint64_t v13 = v0;
  swift_retain();
  swift_errorRetain();
  swift_retain();
  swift_errorRetain();
  uint64_t v1 = sub_1001C0330();
  os_log_type_t v2 = sub_1001C1200();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[8];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    uint64_t v6 = (uint64_t *)(v3 + *(void *)(*(void *)v3 + 368));
    uint64_t v7 = *v6;
    unint64_t v8 = v6[1];
    swift_bridgeObjectRetain();
    v0[2] = sub_1000DF238(v7, v8, &v12);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v4 + 12) = 2112;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v9;
    sub_1001C1310();
    *uint64_t v5 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s attestation failure with error %@", (uint8_t *)v4, 0x16u);
    sub_100003918(&qword_100207DA8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_10013093C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[17] = a5;
  v6[18] = v5;
  v6[15] = a3;
  v6[16] = a4;
  v6[13] = a1;
  v6[14] = a2;
  v6[19] = type metadata accessor for ThimbledEvent();
  v6[20] = swift_task_alloc();
  uint64_t v7 = sub_100003918(&qword_100208A00);
  v6[21] = v7;
  v6[22] = *(void *)(v7 - 8);
  v6[23] = swift_task_alloc();
  uint64_t v8 = sub_1001BF2C0();
  v6[24] = v8;
  v6[25] = *(void *)(v8 - 8);
  v6[26] = swift_task_alloc();
  uint64_t v9 = sub_1001BF450();
  v6[27] = v9;
  v6[28] = *(void *)(v9 - 8);
  v6[29] = swift_task_alloc();
  v6[30] = swift_task_alloc();
  v6[31] = sub_100003918(&qword_100208C48);
  v6[32] = swift_task_alloc();
  v6[33] = swift_task_alloc();
  v6[34] = swift_task_alloc();
  uint64_t v10 = sub_1001C14C0();
  v6[35] = v10;
  v6[36] = *(void *)(v10 - 8);
  v6[37] = swift_task_alloc();
  v6[38] = swift_task_alloc();
  uint64_t v11 = sub_1001C02A0();
  v6[39] = v11;
  v6[40] = *(void *)(v11 - 8);
  v6[41] = swift_task_alloc();
  return _swift_task_switch(sub_100130C18, 0, 0);
}

uint64_t sub_100130C18()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v2;
  uint64_t v5 = *(void *)(*(void *)v1 + 128);
  *(void *)(v0 + 336) = v5;
  uint64_t v6 = (os_unfair_lock_s *)(v1 + v5);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + v5));
  uint64_t v7 = *(int *)(sub_100003918(&qword_100208C90) + 28);
  *(_DWORD *)(v0 + 384) = v7;
  sub_100160EF4((uint64_t)v6 + v7, v8);
  uint64_t v9 = *(void *)(v0 + 144);
  os_unfair_lock_unlock(v6);
  swift_task_dealloc();
  uint64_t v10 = v9 + *(void *)(*(void *)v9 + 272);
  sub_1001C02C0();
  sub_1001C0280();
  *(void *)(v0 + 344) = *(void *)(*(void *)v9 + 136);
  *(void *)(v0 + 352) = sub_1001C14E0();
  *(void *)(v0 + 360) = sub_1001627A0(&qword_100208C80, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  sub_1001C18D0();
  unint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_100208C40 + dword_100208C40);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 368) = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_100130E3C;
  uint64_t v12 = *(void *)(v0 + 328);
  uint64_t v13 = *(void *)(v0 + 272);
  uint64_t v14 = *(void *)(v0 + 128);
  uint64_t v15 = *(void *)(v0 + 136);
  return v17(v13, (uint64_t)"VerifyAttestation", 17, 2, v12, v10, v14, v15);
}

uint64_t sub_100130E3C()
{
  *(void *)(*(void *)v1 + 376) = v0;
  swift_task_dealloc();
  return _swift_task_switch(sub_100130F3C, 0, 0);
}

void sub_100130F3C()
{
  uint64_t v173 = *(void *)(v0 + 376);
  uint64_t v1 = *(void *)(v0 + 296);
  uint64_t v3 = *(void *)(v0 + 280);
  uint64_t v2 = *(void *)(v0 + 288);
  uint64_t v4 = *(void *)(v0 + 272);
  long long v170 = *(_OWORD *)(v0 + 112);
  uint64_t v5 = (os_unfair_lock_s *)(*(void *)(v0 + 144) + *(void *)(v0 + 336));
  uint64_t v6 = (uint64_t)v5 + *(int *)(v0 + 384);
  sub_1001C18D0();
  sub_1001627A0(&qword_100208C88, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
  sub_1001C1500();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v7(v1, v3);
  uint64_t v8 = swift_task_alloc();
  *(_OWORD *)(v8 + 16) = v170;
  *(void *)(v8 + 32) = v4;
  os_unfair_lock_lock(v5);
  sub_100160F20(v6, v9);
  os_unfair_lock_unlock(v5);
  if (v173) {
    return;
  }
  uint64_t v158 = v7;
  uint64_t v11 = *(void *)(v0 + 232);
  uint64_t v10 = *(uint64_t **)(v0 + 240);
  uint64_t v12 = *(void *)(v0 + 216);
  uint64_t v13 = *(void *)(v0 + 224);
  uint64_t v15 = *(void *)(v0 + 200);
  uint64_t v14 = *(void *)(v0 + 208);
  uint64_t v161 = *(void *)(v0 + 192);
  uint64_t v16 = *(void *)(v0 + 144);
  swift_task_dealloc();
  unint64_t v17 = (uint64_t *)(v16 + *(void *)(*(void *)v16 + 176));
  uint64_t v163 = *v17;
  uint64_t v164 = v17[1];
  swift_bridgeObjectRetain();
  unint64_t v18 = sub_100055214((uint64_t)_swiftEmptyArrayStorage);
  uint64_t *v10 = sub_1001BF2D0();
  v10[1] = v19;
  unsigned int v166 = enum case for EventValue.string(_:);
  uint64_t v171 = *(void (**)(uint64_t *))(v13 + 104);
  v171(v10);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t *, uint64_t))(v13 + 32);
  uint64_t v167 = v10;
  v20(v11, v10, v12);
  uint64_t v21 = v20;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1000EB128(v11, 8, isUniquelyReferenced_nonNull_native);
  unint64_t v23 = v18;
  swift_bridgeObjectRelease();
  sub_1001BF2B0();
  sub_1001BF280();
  double v25 = v24;
  uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  v26(v14, v161);
  if ((~*(void *)&v25 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v25 <= -9.22337204e18)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v25 >= 9.22337204e18)
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v27 = *(void *)(v0 + 232);
  uint64_t v28 = *(uint64_t **)(v0 + 240);
  uint64_t v29 = *(void *)(v0 + 216);
  uint64_t v30 = *(void *)(v0 + 144);
  *uint64_t v28 = (uint64_t)v25;
  unsigned int v162 = enum case for EventValue.int(_:);
  v171(v28);
  v21(v27, v28, v29);
  char v31 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v174 = v23;
  sub_1000EB128(v27, 0, v31);
  swift_bridgeObjectRelease();
  uint64_t v32 = (uint64_t *)(v30 + *(void *)(*(void *)v30 + 208));
  uint64_t v33 = v32[1];
  uint64_t v153 = *v32;
  *uint64_t v28 = *v32;
  uint64_t v165 = v21;
  v167[1] = v33;
  ((void (*)(uint64_t *, void, uint64_t))v171)(v28, v166, v29);
  v21(v27, v28, v29);
  uint64_t v156 = v33;
  swift_bridgeObjectRetain();
  char v34 = swift_isUniquelyReferenced_nonNull_native();
  sub_1000EB128(v27, 1, v34);
  swift_bridgeObjectRelease();
  uint64_t v35 = (uint64_t *)(v30 + *(void *)(*(void *)v30 + 232));
  uint64_t v36 = v35[1];
  uint64_t v152 = *v35;
  *uint64_t v28 = *v35;
  v167[1] = v36;
  ((void (*)(uint64_t *, void, uint64_t))v171)(v28, v166, v29);
  v21(v27, v28, v29);
  uint64_t v159 = v36;
  swift_bridgeObjectRetain();
  char v37 = swift_isUniquelyReferenced_nonNull_native();
  sub_1000EB128(v27, 2, v37);
  swift_bridgeObjectRelease();
  uint64_t v38 = (uint64_t *)(v30 + *(void *)(*(void *)v30 + 192));
  uint64_t v39 = v38[1];
  uint64_t v155 = v39;
  uint64_t v150 = *v38;
  if (v39)
  {
    uint64_t v41 = *(void *)(v0 + 232);
    uint64_t v40 = *(uint64_t **)(v0 + 240);
    uint64_t v42 = *(void *)(v0 + 216);
    *uint64_t v40 = *v38;
    v167[1] = v39;
    ((void (*)(uint64_t *, void, uint64_t))v171)(v40, v166, v42);
    v21(v41, v40, v42);
    swift_bridgeObjectRetain();
    char v43 = swift_isUniquelyReferenced_nonNull_native();
    sub_1000EB128(v41, 3, v43);
    swift_bridgeObjectRelease();
  }
  uint64_t v45 = *(void *)(v0 + 232);
  uint64_t v44 = *(uint64_t **)(v0 + 240);
  uint64_t v46 = *(void *)(v0 + 216);
  uint64_t v47 = *(uint64_t **)(v0 + 144);
  *uint64_t v44 = v163;
  v167[1] = v164;
  ((void (*)(uint64_t *, void, uint64_t))v171)(v44, v166, v46);
  v165(v45, v44, v46);
  swift_bridgeObjectRetain();
  char v48 = swift_isUniquelyReferenced_nonNull_native();
  sub_1000EB128(v45, 5, v48);
  swift_bridgeObjectRelease();
  uint64_t v49 = *v47;
  uint64_t v50 = (uint64_t *)((char *)v47 + *(void *)(*v47 + 184));
  uint64_t v51 = v50[1];
  uint64_t v154 = v51;
  uint64_t v149 = *v50;
  if (v51)
  {
    uint64_t v53 = *(void *)(v0 + 232);
    uint64_t v52 = *(uint64_t **)(v0 + 240);
    uint64_t v54 = *(void *)(v0 + 216);
    os_signpost_id_t v55 = *(uint64_t **)(v0 + 144);
    *uint64_t v52 = *v50;
    v167[1] = v51;
    ((void (*)(uint64_t *, void, uint64_t))v171)(v52, v166, v54);
    v165(v53, v52, v54);
    swift_bridgeObjectRetain();
    char v56 = swift_isUniquelyReferenced_nonNull_native();
    sub_1000EB128(v53, 6, v56);
    swift_bridgeObjectRelease();
    uint64_t v49 = *v55;
  }
  uint64_t v57 = *(void *)(v0 + 232);
  unint64_t v58 = *(unint64_t **)(v0 + 240);
  uint64_t v59 = *(void *)(v0 + 216);
  unint64_t v60 = (unint64_t *)(*(void *)(v0 + 144) + *(void *)(v49 + 240));
  uint64_t v61 = v60[1];
  unint64_t v151 = *v60;
  *unint64_t v58 = *v60;
  v167[1] = v61;
  ((void (*)(unint64_t *, void, uint64_t))v171)(v58, v166, v59);
  v165(v57, (uint64_t *)v58, v59);
  swift_bridgeObjectRetain();
  char v62 = swift_isUniquelyReferenced_nonNull_native();
  sub_1000EB128(v57, 7, v62);
  swift_bridgeObjectRelease();
  sub_1001BF440();
  v165(v57, (uint64_t *)v58, v59);
  char v63 = swift_isUniquelyReferenced_nonNull_native();
  sub_1000EB128(v57, 9, v63);
  swift_bridgeObjectRelease();
  uint64_t v64 = sub_1001C19D0();
  uint64_t v65 = 1000 * v64;
  if ((unsigned __int128)(v64 * (__int128)1000) >> 64 != (1000 * v64) >> 63) {
    goto LABEL_33;
  }
  sub_1001C19D0();
  uint64_t v67 = v65 + v66 / 1000000000000000;
  if (__OFADD__(v65, v66 / 1000000000000000))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v69 = *(void *)(v0 + 264);
  uint64_t v68 = *(void *)(v0 + 272);
  uint64_t v70 = *(uint64_t **)(v0 + 240);
  uint64_t v71 = *(void *)(v0 + 232);
  uint64_t v72 = *(void *)(v0 + 216);
  *uint64_t v70 = v67;
  ((void (*)(uint64_t *, void, uint64_t))v171)(v70, v162, v72);
  v165(v71, v70, v72);
  char v73 = swift_isUniquelyReferenced_nonNull_native();
  sub_1000EB128(v71, 13, v73);
  swift_bridgeObjectRelease();
  sub_10003282C(v68, v69, &qword_100208C48);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v75 = *(void *)(v0 + 264);
  uint64_t v76 = *(void *)(v0 + 232);
  os_log_type_t v77 = *(unint64_t **)(v0 + 240);
  uint64_t v78 = *(void *)(v0 + 216);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v147 = *(void *)(v0 + 208);
    uint64_t v148 = *(void *)(v0 + 192);
    uint64_t v79 = *(void *)(v0 + 120);
    *os_log_type_t v77 = *(void *)(v0 + 112);
    v167[1] = v79;
    ((void (*)(unint64_t *, void, uint64_t))v171)(v77, v166, v78);
    v165(v76, (uint64_t *)v77, v78);
    swift_bridgeObjectRetain();
    char v80 = swift_isUniquelyReferenced_nonNull_native();
    sub_1000EB128(v76, 12, v80);
    swift_bridgeObjectRelease();
    sub_1001BF440();
    v165(v76, (uint64_t *)v77, v78);
    char v81 = swift_isUniquelyReferenced_nonNull_native();
    sub_1000EB128(v76, 10, v81);
    swift_bridgeObjectRelease();
    swift_getErrorValue();
    Error.telemetryString.getter(*(void *)(v0 + 24), *(void *)(v0 + 32), v77);
    v165(v76, (uint64_t *)v77, v78);
    char v82 = swift_isUniquelyReferenced_nonNull_native();
    sub_1000EB128(v76, 11, v82);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v83 = sub_10005523C((uint64_t)_swiftEmptyArrayStorage);
    *os_log_type_t v77 = sub_1001BF2D0();
    v167[1] = v84;
    ((void (*)(unint64_t *, void, uint64_t))v171)(v77, v166, v78);
    v165(v76, (uint64_t *)v77, v78);
    char v85 = swift_isUniquelyReferenced_nonNull_native();
    sub_1000EB0EC(v76, 8, v85);
    swift_bridgeObjectRelease();
    sub_1001BF2B0();
    sub_1001BF280();
    double v87 = v86;
    v26(v147, v148);
    if ((~*(void *)&v87 & 0x7FF0000000000000) != 0)
    {
      if (v87 > -9.22337204e18)
      {
        if (v87 < 9.22337204e18)
        {
          uint64_t v88 = *(void *)(v0 + 232);
          uint64_t v89 = *(uint64_t **)(v0 + 240);
          uint64_t v90 = *(void *)(v0 + 216);
          *uint64_t v89 = (uint64_t)v87;
          ((void (*)(uint64_t *, void, uint64_t))v171)(v89, v162, v90);
          v165(v88, v89, v90);
          char v91 = swift_isUniquelyReferenced_nonNull_native();
          sub_1000EB0EC(v88, 0, v91);
          swift_bridgeObjectRelease();
          *uint64_t v89 = v153;
          v167[1] = v156;
          ((void (*)(uint64_t *, void, uint64_t))v171)(v89, v166, v90);
          v165(v88, v89, v90);
          swift_bridgeObjectRetain();
          char v92 = swift_isUniquelyReferenced_nonNull_native();
          sub_1000EB0EC(v88, 1, v92);
          unint64_t v93 = v83;
          swift_bridgeObjectRelease();
          *uint64_t v89 = v152;
          v167[1] = v159;
          ((void (*)(uint64_t *, void, uint64_t))v171)(v89, v166, v90);
          v165(v88, v89, v90);
          swift_bridgeObjectRetain();
          char v94 = swift_isUniquelyReferenced_nonNull_native();
          sub_1000EB0EC(v88, 2, v94);
          swift_bridgeObjectRelease();
          if (v155)
          {
            uint64_t v96 = *(void *)(v0 + 232);
            uint64_t v95 = *(uint64_t **)(v0 + 240);
            uint64_t v97 = *(void *)(v0 + 216);
            *uint64_t v95 = v150;
            v167[1] = v155;
            ((void (*)(uint64_t *, void, uint64_t))v171)(v95, v166, v97);
            v165(v96, v95, v97);
            swift_bridgeObjectRetain();
            char v98 = swift_isUniquelyReferenced_nonNull_native();
            sub_1000EB0EC(v96, 3, v98);
            swift_bridgeObjectRelease();
          }
          uint64_t v104 = *(void *)(v0 + 232);
          unint64_t v103 = *(uint64_t **)(v0 + 240);
          uint64_t v105 = *(void *)(v0 + 216);
          *unint64_t v103 = v163;
          v167[1] = v164;
          ((void (*)(uint64_t *, void, uint64_t))v171)(v103, v166, v105);
          v165(v104, v103, v105);
          swift_bridgeObjectRetain();
          char v106 = swift_isUniquelyReferenced_nonNull_native();
          sub_1000EB0EC(v104, 5, v106);
          swift_bridgeObjectRelease();
          if (v154)
          {
            uint64_t v108 = *(void *)(v0 + 232);
            uint64_t v107 = *(uint64_t **)(v0 + 240);
            uint64_t v109 = *(void *)(v0 + 216);
            *uint64_t v107 = v149;
            v167[1] = v154;
            ((void (*)(uint64_t *, void, uint64_t))v171)(v107, v166, v109);
            v165(v108, v107, v109);
            swift_bridgeObjectRetain();
            char v110 = swift_isUniquelyReferenced_nonNull_native();
            sub_1000EB0EC(v108, 6, v110);
            swift_bridgeObjectRelease();
            uint64_t v111 = v167;
            uint64_t v112 = v166;
            uint64_t v113 = (void (*)(uint64_t, unint64_t *, uint64_t))v165;
          }
          else
          {
            uint64_t v113 = (void (*)(uint64_t, unint64_t *, uint64_t))v165;
            uint64_t v111 = v167;
            uint64_t v112 = v166;
          }
          uint64_t v114 = *(void *)(v0 + 232);
          uint64_t v115 = *(unint64_t **)(v0 + 240);
          uint64_t v116 = *(void *)(v0 + 216);
          uint64_t v160 = *(void *)(v0 + 120);
          unint64_t v157 = *(void *)(v0 + 112);
          *uint64_t v115 = v151;
          v111[1] = v61;
          ((void (*)(unint64_t *, uint64_t, uint64_t))v171)(v115, v112, v116);
          v113(v114, v115, v116);
          swift_bridgeObjectRetain();
          char v117 = swift_isUniquelyReferenced_nonNull_native();
          sub_1000EB0EC(v114, 7, v117);
          swift_bridgeObjectRelease();
          sub_1001BF440();
          v113(v114, v115, v116);
          char v118 = swift_isUniquelyReferenced_nonNull_native();
          sub_1000EB0EC(v114, 9, v118);
          swift_bridgeObjectRelease();
          *uint64_t v115 = v157;
          v167[1] = v160;
          ((void (*)(unint64_t *, void, uint64_t))v171)(v115, v166, v116);
          v113(v114, v115, v116);
          swift_bridgeObjectRetain();
          char v119 = swift_isUniquelyReferenced_nonNull_native();
          sub_1000EB0EC(v114, 11, v119);
          swift_bridgeObjectRelease();
          swift_getErrorValue();
          Error.telemetryString.getter(*(void *)(v0 + 48), *(void *)(v0 + 56), v115);
          v113(v114, v115, v116);
          char v120 = swift_isUniquelyReferenced_nonNull_native();
          sub_1000EB0EC(v114, 10, v120);
          swift_bridgeObjectRelease();
          uint64_t v121 = sub_1001C19D0();
          uint64_t v122 = 1000 * v121;
          if ((unsigned __int128)(v121 * (__int128)1000) >> 64 == (1000 * v121) >> 63)
          {
            sub_1001C19D0();
            uint64_t v124 = v122 + v123 / 1000000000000000;
            if (!__OFADD__(v122, v123 / 1000000000000000))
            {
              uint64_t v126 = *(void *)(v0 + 232);
              char v125 = *(uint64_t **)(v0 + 240);
              uint64_t v127 = *(void *)(v0 + 216);
              uint64_t v129 = *(void *)(v0 + 176);
              uint64_t v128 = *(void *)(v0 + 184);
              uint64_t v130 = *(void **)(v0 + 160);
              uint64_t v168 = *(void *)(v0 + 168);
              uint64_t *v125 = v124;
              ((void (*)(uint64_t *, void, uint64_t))v171)(v125, v162, v127);
              v165(v126, v125, v127);
              char v131 = swift_isUniquelyReferenced_nonNull_native();
              sub_1000EB0EC(v126, 12, v131);
              swift_bridgeObjectRelease();
              v130[3] = &type metadata for TC2AttestationnVerificationErrorMetric;
              v130[4] = sub_100160F8C();
              uint64_t v132 = (void *)swift_allocObject();
              *uint64_t v130 = v132;
              v132[2] = 0xD000000000000015;
              v132[3] = 0x80000001001C6770;
              v132[4] = v93;
              uint64_t v102 = v163;
              uint64_t v101 = v164;
              v132[5] = v163;
              v132[6] = v164;
              swift_storeEnumTagMultiPayload();
              sub_100003918(qword_100208000);
              sub_1001C0FE0();
              swift_errorRelease();
              (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v128, v168);
              unint64_t v100 = v174;
              goto LABEL_24;
            }
LABEL_39:
            __break(1u);
            return;
          }
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  sub_1001BF440();
  v165(v76, (uint64_t *)v77, v78);
  char v99 = swift_isUniquelyReferenced_nonNull_native();
  sub_1000EB128(v76, 10, v99);
  unint64_t v100 = v174;
  swift_bridgeObjectRelease();
  sub_100010360(v75, &qword_100208C48);
  uint64_t v102 = v163;
  uint64_t v101 = v164;
LABEL_24:
  uint64_t v133 = *(void *)(v0 + 256);
  uint64_t v135 = *(void *)(v0 + 176);
  uint64_t v134 = *(void *)(v0 + 184);
  uint64_t v136 = *(void **)(v0 + 160);
  uint64_t v169 = *(void *)(v0 + 168);
  uint64_t v172 = *(void *)(v0 + 272);
  v136[3] = &type metadata for TC2AttestationVerificationMetric;
  v136[4] = sub_100160FE4();
  uint64_t v137 = (void *)swift_allocObject();
  *uint64_t v136 = v137;
  v137[2] = 0xD000000000000015;
  v137[3] = 0x80000001001C6750;
  v137[4] = v100;
  v137[5] = v102;
  v137[6] = v101;
  swift_storeEnumTagMultiPayload();
  sub_100003918(qword_100208000);
  sub_1001C0FE0();
  (*(void (**)(uint64_t, uint64_t))(v135 + 8))(v134, v169);
  sub_10003282C(v172, v133, &qword_100208C48);
  int v138 = swift_getEnumCaseMultiPayload();
  uint64_t v140 = *(void *)(v0 + 320);
  uint64_t v139 = *(void *)(v0 + 328);
  uint64_t v141 = *(void *)(v0 + 304);
  uint64_t v142 = *(void *)(v0 + 312);
  uint64_t v144 = *(void *)(v0 + 272);
  uint64_t v143 = *(void *)(v0 + 280);
  uint64_t v145 = *(void **)(v0 + 256);
  if (v138 == 1)
  {
    *(void *)(v0 + 96) = *v145;
    sub_100003918(&qword_100208C98);
    swift_willThrowTypedImpl();
  }
  else
  {
    sub_1001627E8((uint64_t)v145, *(void *)(v0 + 104), (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
  }
  v158(v141, v143);
  (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v139, v142);
  sub_100010360(v144, &qword_100208C48);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v146 = *(void (**)(void))(v0 + 8);
  v146();
}

uint64_t sub_100132450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[24] = a7;
  v8[25] = a8;
  v8[22] = a5;
  v8[23] = a6;
  v8[20] = a1;
  v8[21] = a4;
  uint64_t v10 = sub_1001BF310();
  v8[26] = v10;
  v8[27] = *(void *)(v10 - 8);
  v8[28] = swift_task_alloc();
  v8[29] = swift_task_alloc();
  v8[30] = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary(0);
  v8[31] = swift_task_alloc();
  v8[32] = swift_task_alloc();
  v8[33] = sub_100003918(&qword_100209FE0);
  v8[34] = swift_task_alloc();
  v8[35] = swift_task_alloc();
  v8[36] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse(0);
  v8[37] = v11;
  v8[38] = *(void *)(v11 - 8);
  v8[39] = swift_task_alloc();
  v8[40] = swift_task_alloc();
  sub_100003918(&qword_10020E3A0);
  v8[41] = swift_task_alloc();
  uint64_t v12 = sub_100003918(&qword_10020E3A8);
  v8[42] = v12;
  v8[43] = *(void *)(v12 - 8);
  v8[44] = swift_task_alloc();
  v8[45] = sub_100003918(&qword_10020E3B0);
  v8[46] = swift_task_alloc();
  v8[47] = type metadata accessor for NWAsyncConnection.Inbound(0);
  v8[48] = swift_task_alloc();
  sub_100003918(&qword_10020E3B8);
  v8[49] = swift_task_alloc();
  v8[18] = a2;
  uint64_t v13 = dword_10020EE28;
  uint64_t v14 = (void *)swift_task_alloc();
  v8[50] = v14;
  *uint64_t v14 = v8;
  v14[1] = sub_1001327C0;
  return ((uint64_t (*)(uint64_t))((char *)&dword_10020EE28 + v13))((uint64_t)v14);
}

uint64_t sub_1001327C0()
{
  *(void *)(*(void *)v1 + 408) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100132B7C;
  }
  else {
    uint64_t v2 = sub_100132900;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100132900()
{
  uint64_t v1 = v0[21];
  v0[52] = *(void *)(v1 + *(void *)(*(void *)v1 + 344));
  uint64_t v2 = swift_task_alloc();
  v0[53] = v2;
  *(void *)(v2 + 16) = v0 + 18;
  *(void *)(v2 + 24) = v1;
  uint64_t v3 = dword_10020E3D0;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[54] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100132A2C;
  uint64_t v6 = v0[22];
  uint64_t v5 = v0[23];
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_10020E3D0 + v3))(v6, v5, (int *)&unk_10020E3C8);
}

uint64_t sub_100132A2C()
{
  *(void *)(*(void *)v1 + 440) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100132F20;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100132CCC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100132B7C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100132CCC()
{
  uint64_t v1 = *(void *)(v0 + 392);
  uint64_t v2 = *(void *)(v0 + 368);
  uint64_t v3 = *(void *)(v0 + 352);
  uint64_t v4 = *(void *)(v0 + 360);
  uint64_t v5 = *(void *)(v0 + 336);
  uint64_t v6 = *(void *)(v0 + 344);
  uint64_t v7 = *(uint64_t **)(v0 + 168);
  sub_100161F3C(*(void *)(v0 + 160), *(void *)(v0 + 384), type metadata accessor for NWAsyncConnection.Inbound);
  sub_1001627A0(&qword_10020E3D8, (void (*)(uint64_t))type metadata accessor for NWAsyncConnection.Inbound);
  sub_1001C1770();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v3, v1, v5);
  sub_100016710(&qword_10020E3E0, &qword_10020E3A8);
  sub_1001C10A0();
  uint64_t v8 = v2 + *(int *)(v4 + 80);
  *(void *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 8) = 2;
  *(_OWORD *)(v2 + *(int *)(v4 + 76)) = xmmword_1001CB200;
  uint64_t v9 = *v7;
  *(_OWORD *)(v0 + 448) = *(_OWORD *)(*v7 + 360);
  *(void *)(v0 + 464) = *(void *)(v9 + 264);
  *(unsigned char *)(v0 + 534) = 1;
  uint64_t v10 = dword_10020EB80;
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 472) = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_100133078;
  uint64_t v12 = *(void *)(v0 + 328);
  return ((uint64_t (*)(uint64_t))((char *)&dword_10020EB80 + v10))(v12);
}

uint64_t sub_100132F20()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100133078()
{
  *(void *)(*(void *)v1 + 480) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100134A2C;
  }
  else {
    uint64_t v2 = sub_1001331B8;
  }
  return _swift_task_switch(v2, 0, 0);
}

void sub_1001331B8()
{
  uint64_t v143 = v0;
  uint64_t v1 = *(void *)(v0 + 328);
  int v2 = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 304) + 48))(v1, 1, *(void *)(v0 + 296));
  uint64_t v3 = *(void *)(v0 + 184);
  if (v2 == 1)
  {
    uint64_t v4 = *(void *)(v0 + 176);
    sub_100010360(*(void *)(v0 + 368), &qword_10020E3B0);
    sub_1001382A4(v4, v3);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v5 = sub_1001C0330();
    os_log_type_t v6 = sub_1001C11E0();
    if (os_log_type_enabled(v5, v6))
    {
      os_log_t loga = *(os_log_t *)(v0 + 392);
      unint64_t v7 = *(void *)(v0 + 184);
      uint64_t v134 = *(void *)(v0 + 176);
      uint64_t v8 = (uint64_t *)(*(void *)(v0 + 168) + *(void *)(v0 + 456));
      uint64_t v9 = swift_slowAlloc();
      v142[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315394;
      uint64_t v11 = *v8;
      unint64_t v10 = v8[1];
      swift_bridgeObjectRetain();
      *(void *)(v0 + 104) = sub_1000DF238(v11, v10, v142);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v9 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 48) = sub_1000DF238(v134, v7, v142);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "%s Received all messages in node stream: %s", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v12 = (uint64_t)loga;
    }
    else
    {
      uint64_t v25 = *(void *)(v0 + 392);
      swift_release_n();
      swift_bridgeObjectRelease_n();

      uint64_t v12 = v25;
    }
    sub_100010360(v12, &qword_10020E3B8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v26 = *(void (**)(void))(v0 + 8);
    v26(0);
    return;
  }
  uint64_t v14 = *(void *)(v0 + 312);
  uint64_t v13 = *(void *)(v0 + 320);
  sub_1001627E8(v1, v13, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse);
  sub_100161F3C(v13, v14, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v15 = sub_1001C0330();
  os_log_type_t v16 = sub_1001C11E0();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = *(void *)(v0 + 288);
    uint64_t v137 = *(void *)(v0 + 312);
    unint64_t v18 = *(void *)(v0 + 184);
    uint64_t v135 = *(void *)(v0 + 176);
    uint64_t v19 = (uint64_t *)(*(void *)(v0 + 168) + *(void *)(v0 + 456));
    uint64_t v20 = swift_slowAlloc();
    v142[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 136315650;
    uint64_t v22 = *v19;
    unint64_t v21 = v19[1];
    swift_bridgeObjectRetain();
    *(void *)(v20 + 4) = sub_1000DF238(v22, v21, v142);
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v20 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)(v20 + 14) = sub_1000DF238(v135, v18, v142);
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v20 + 22) = 2080;
    sub_10003282C(v137, v17, &qword_100209FE0);
    uint64_t v23 = sub_1001C0C40();
    *(void *)(v20 + 24) = sub_1000DF238(v23, v24, v142);
    swift_bridgeObjectRelease();
    sub_10016290C(v137, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s Received message from node %s: %s", (uint8_t *)v20, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v27 = *(void *)(v0 + 312);

    swift_release_n();
    swift_bridgeObjectRelease_n();
    sub_10016290C(v27, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse);
  }
  if (*(unsigned char *)(v0 + 534) == 1)
  {
    swift_retain_n();
    uint64_t v28 = sub_1001C0330();
    os_log_type_t v29 = sub_1001C11E0();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint64_t *)(*(void *)(v0 + 168) + *(void *)(v0 + 456));
      char v31 = (uint8_t *)swift_slowAlloc();
      v142[0] = swift_slowAlloc();
      *(_DWORD *)char v31 = 136315138;
      uint64_t v32 = *v30;
      unint64_t v33 = v30[1];
      swift_bridgeObjectRetain();
      *(void *)(v0 + 152) = sub_1000DF238(v32, v33, v142);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "%s Node has received data, cancelling all other node streams", v31, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    uint64_t v34 = *(void *)(v0 + 184);
    uint64_t v35 = *(void *)(v0 + 176);
    sub_10001B66C(v35, v34);
    sub_100137278(v35, v34);
  }
  uint64_t v36 = *(void *)(v0 + 280);
  sub_10003282C(*(void *)(v0 + 320), v36, &qword_100209FE0);
  uint64_t v37 = type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.OneOf_Type(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 48))(v36, 1, v37) == 1)
  {
    uint64_t v38 = *(void *)(v0 + 320);
LABEL_18:
    sub_10016290C(v38, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse);
    sub_100010360(*(void *)(v0 + 280), &qword_100209FE0);
    *(unsigned char *)(v0 + 534) = 0;
    uint64_t v39 = dword_10020EB80;
    uint64_t v40 = (void *)swift_task_alloc();
    *(void *)(v0 + 472) = v40;
    *uint64_t v40 = v0;
    v40[1] = sub_100133078;
    uint64_t v41 = *(void *)(v0 + 328);
    ((void (*)(uint64_t))((char *)&dword_10020EB80 + v39))(v41);
    return;
  }
  sub_10003282C(*(void *)(v0 + 280), *(void *)(v0 + 272), &qword_100209FE0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v54 = *(uint64_t **)(v0 + 272);
    uint64_t v56 = *v54;
    unint64_t v55 = v54[1];
    unint64_t v57 = v55 >> 62;
    switch(v55 >> 62)
    {
      case 1uLL:
        LODWORD(v58) = HIDWORD(v56) - v56;
        if (!__OFSUB__(HIDWORD(v56), v56))
        {
          uint64_t v58 = (int)v58;
LABEL_35:
          if (v58 != 16)
          {
LABEL_42:
            uint64_t v84 = *(void *)(v0 + 392);
            uint64_t v85 = *(void *)(v0 + 368);
            uint64_t v86 = *(void *)(v0 + 320);
            uint64_t v87 = *(void *)(v0 + 280);
            sub_10002C2C4();
            swift_allocError();
            *(unsigned char *)uint64_t v88 = 2;
            *(void *)(v88 + 8) = _swiftEmptyArrayStorage;
            swift_willThrow();
            sub_10000792C(v56, v55);
            goto LABEL_49;
          }
          if (v57)
          {
            if (v57 == 1)
            {
              if (v56 >> 32 >= (int)v56)
              {
                sub_100007B14(v56, v55);
                if (!sub_1001BEE60() || !__OFSUB__((int)v56, sub_1001BEE90()))
                {
                  uint64_t v126 = *(void *)(v0 + 480);
                  sub_1001BEE80();
                  sub_10000FBB4();
                  sub_10000792C(v56, v55);
                  if (v126) {
                    return;
                  }
                  goto LABEL_81;
                }
                goto LABEL_94;
              }
              goto LABEL_91;
            }
            uint64_t v109 = *(void *)(v56 + 16);
            uint64_t v110 = *(void *)(v56 + 24);
            swift_retain();
            swift_retain();
            if (sub_1001BEE60() && __OFSUB__(v109, sub_1001BEE90())) {
LABEL_95:
            }
              __break(1u);
            if (__OFSUB__(v110, v109)) {
              goto LABEL_93;
            }
            uint64_t v111 = *(void *)(v0 + 480);
            sub_1001BEE80();
            sub_10000FBB4();
            swift_release();
            swift_release();
            if (v111) {
              return;
            }
          }
          else
          {
            uint64_t v108 = *(void *)(v0 + 480);
            *(void *)(v0 + 520) = v56;
            *(_WORD *)(v0 + 528) = v55;
            *(unsigned char *)(v0 + 530) = BYTE2(v55);
            *(unsigned char *)(v0 + 531) = BYTE3(v55);
            *(unsigned char *)(v0 + 532) = BYTE4(v55);
            *(unsigned char *)(v0 + 533) = BYTE5(v55);
            sub_10000FBB4();
            if (v108) {
              return;
            }
          }
LABEL_81:
          (*(void (**)(void, void, void))(*(void *)(v0 + 216) + 16))(*(void *)(v0 + 224), *(void *)(v0 + 232), *(void *)(v0 + 208));
          swift_retain_n();
          uint64_t v112 = sub_1001C0330();
          os_log_type_t v113 = sub_1001C11E0();
          os_log_t log = v112;
          if (os_log_type_enabled(v112, v113))
          {
            uint64_t v136 = *(void *)(v0 + 232);
            uint64_t v138 = *(void *)(v0 + 320);
            uint64_t v133 = *(void *)(v0 + 216);
            uint64_t v127 = *(void *)(v0 + 208);
            uint64_t v128 = *(void *)(v0 + 224);
            uint64_t v114 = (uint64_t *)(*(void *)(v0 + 168) + *(void *)(v0 + 456));
            uint64_t v115 = swift_slowAlloc();
            v142[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v115 = 136315394;
            os_log_type_t v130 = v113;
            uint64_t v116 = *v114;
            unint64_t v117 = v114[1];
            swift_bridgeObjectRetain();
            *(void *)(v0 + 128) = sub_1000DF238(v116, v117, v142);
            sub_1001C1310();
            swift_bridgeObjectRelease();
            swift_release_n();
            *(_WORD *)(v115 + 12) = 2080;
            sub_1001627A0(qword_100207DC0, (void (*)(uint64_t))&type metadata accessor for UUID);
            uint64_t v118 = sub_1001C1780();
            *(void *)(v0 + 136) = sub_1000DF238(v118, v119, v142);
            sub_1001C1310();
            swift_bridgeObjectRelease();
            char v120 = *(void (**)(uint64_t, uint64_t))(v133 + 8);
            v120(v128, v127);
            _os_log_impl((void *)&_mh_execute_header, v112, v130, "%s Response UUID: %s", (uint8_t *)v115, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
            sub_10000792C(v56, v55);

            v120(v136, v127);
            uint64_t v38 = v138;
          }
          else
          {
            uint64_t v91 = *(void *)(v0 + 320);
            uint64_t v122 = *(void *)(v0 + 224);
            uint64_t v121 = *(void *)(v0 + 232);
            uint64_t v124 = *(void *)(v0 + 208);
            uint64_t v123 = *(void *)(v0 + 216);
            sub_10000792C(v56, v55);

            char v125 = *(void (**)(uint64_t, uint64_t))(v123 + 8);
            v125(v122, v124);
            swift_release_n();
            v125(v121, v124);
LABEL_84:
            uint64_t v38 = v91;
          }
          goto LABEL_18;
        }
        __break(1u);
LABEL_88:
        __break(1u);
LABEL_89:
        __break(1u);
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
        goto LABEL_95;
      case 2uLL:
        uint64_t v82 = *(void *)(v56 + 16);
        uint64_t v81 = *(void *)(v56 + 24);
        BOOL v83 = __OFSUB__(v81, v82);
        uint64_t v58 = v81 - v82;
        if (!v83) {
          goto LABEL_35;
        }
        goto LABEL_88;
      case 3uLL:
        goto LABEL_42;
      default:
        uint64_t v58 = BYTE6(v55);
        goto LABEL_35;
    }
  }
  if (EnumCaseMultiPayload == 1)
  {
    char v43 = *(uint64_t **)(v0 + 272);
    uint64_t v44 = *v43;
    *(void *)(v0 + 488) = *v43;
    unint64_t v45 = v43[1];
    *(void *)(v0 + 496) = v45;
    unint64_t v46 = v45 >> 62;
    swift_retain();
    sub_100007B14(v44, v45);
    swift_retain();
    sub_100007B14(v44, v45);
    uint64_t v47 = sub_1001C0330();
    os_log_type_t v48 = sub_1001C11E0();
    if (os_log_type_enabled(v47, v48))
    {
      os_log_type_t v131 = v48;
      uint64_t v49 = (uint64_t *)(*(void *)(v0 + 168) + *(void *)(v0 + 456));
      uint64_t v50 = swift_slowAlloc();
      *(void *)(v0 + 56) = swift_slowAlloc();
      *(_DWORD *)uint64_t v50 = 136315650;
      uint64_t v52 = *v49;
      unint64_t v51 = v49[1];
      swift_bridgeObjectRetain();
      *(void *)(v0 + 64) = sub_1000DF238(v52, v51, (uint64_t *)(v0 + 56));
      sub_1001C1310();
      swift_bridgeObjectRelease();
      unint64_t v46 = v45 >> 62;
      swift_release_n();
      *(_WORD *)(v50 + 12) = 2048;
      switch(v45 >> 62)
      {
        case 1uLL:
          sub_10000792C(v44, v45);
          LODWORD(v53) = HIDWORD(v44) - v44;
          if (__OFSUB__(HIDWORD(v44), v44)) {
            goto LABEL_92;
          }
          uint64_t v53 = (int)v53;
          break;
        case 2uLL:
          uint64_t v96 = *(void *)(v44 + 16);
          uint64_t v95 = *(void *)(v44 + 24);
          sub_10000792C(v44, v45);
          uint64_t v53 = v95 - v96;
          if (!__OFSUB__(v95, v96)) {
            break;
          }
          __break(1u);
LABEL_57:
          sub_10000792C(v44, v45);
          uint64_t v53 = 0;
          break;
        case 3uLL:
          goto LABEL_57;
        default:
          sub_10000792C(v44, v45);
          uint64_t v53 = BYTE6(v45);
          break;
      }
      uint64_t v97 = *(void *)(v0 + 200);
      *(void *)(v0 + 72) = v53;
      sub_1001C1310();
      sub_10000792C(v44, v45);
      *(_WORD *)(v50 + 22) = 2048;
      *(void *)(v0 + 80) = v97;
      sub_1001C1310();
      _os_log_impl((void *)&_mh_execute_header, v47, v131, "%s Received payload %ld bytes from node %llu", (uint8_t *)v50, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10000792C(v44, v45);

      swift_release_n();
      sub_10000792C(v44, v45);
    }
    uint64_t v98 = 0;
    switch((int)v46)
    {
      case 0:
        uint64_t v98 = BYTE6(v45);
        goto LABEL_64;
      case 1:
        if (__OFSUB__(HIDWORD(v44), v44)) {
          goto LABEL_89;
        }
        uint64_t v98 = HIDWORD(v44) - (int)v44;
LABEL_64:
        uint64_t v101 = *(void *)(v0 + 480);
        uint64_t v102 = *(void *)(v0 + 416);
        uint64_t v104 = *(void *)(v0 + 176);
        uint64_t v103 = *(void *)(v0 + 184);
        uint64_t v105 = (void *)swift_task_alloc();
        void v105[2] = v104;
        v105[3] = v103;
        v105[4] = v98;
        v105[5] = v102;
        uint64_t v64 = (os_unfair_lock_s *)(v102 + *(void *)(*(void *)v102 + 128));
        os_unfair_lock_lock(v64);
        uint64_t v106 = sub_100003918(&qword_100208C90);
        sub_100160D20((uint64_t)v64 + *(int *)(v106 + 28));
        if (v101) {
          goto LABEL_65;
        }
        os_unfair_lock_unlock(v64);
        swift_task_dealloc();
        uint64_t v107 = (void *)swift_task_alloc();
        *(void *)(v0 + 504) = v107;
        *uint64_t v107 = v0;
        v107[1] = sub_100134C58;
        sub_1001094BC(v44, v45);
        break;
      case 2:
        uint64_t v100 = *(void *)(v44 + 16);
        uint64_t v99 = *(void *)(v44 + 24);
        uint64_t v98 = v99 - v100;
        if (!__OFSUB__(v99, v100)) {
          goto LABEL_64;
        }
        goto LABEL_90;
      case 3:
        goto LABEL_64;
      default:
        JUMPOUT(0);
    }
    return;
  }
  uint64_t v59 = *(void *)(v0 + 480);
  uint64_t v60 = *(void *)(v0 + 416);
  uint64_t v62 = *(void *)(v0 + 176);
  uint64_t v61 = *(void *)(v0 + 184);
  sub_1001627E8(*(void *)(v0 + 272), *(void *)(v0 + 256), type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary);
  uint64_t v63 = swift_task_alloc();
  *(void *)(v63 + 16) = v62;
  *(void *)(v63 + 24) = v61;
  uint64_t v64 = (os_unfair_lock_s *)(v60 + *(void *)(*(void *)v60 + 128));
  os_unfair_lock_lock(v64);
  uint64_t v65 = sub_100003918(&qword_100208C90);
  sub_100160D58((uint64_t)v64 + *(int *)(v65 + 28), v66);
  if (v59)
  {
LABEL_65:
    os_unfair_lock_unlock(v64);
    return;
  }
  uint64_t v68 = *(void *)(v0 + 248);
  uint64_t v67 = *(void *)(v0 + 256);
  os_unfair_lock_unlock(v64);
  swift_task_dealloc();
  sub_100161F3C(v67, v68, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary);
  swift_retain_n();
  uint64_t v69 = sub_1001C0330();
  os_log_type_t v70 = sub_1001C11E0();
  if (os_log_type_enabled(v69, v70))
  {
    os_log_type_t type = v70;
    uint64_t v132 = *(void *)(v0 + 248);
    *(void *)uint64_t v129 = *(void *)(v0 + 240);
    uint64_t v71 = (uint64_t *)(*(void *)(v0 + 168) + *(void *)(v0 + 456));
    uint64_t v72 = swift_slowAlloc();
    v142[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v72 = 136315394;
    uint64_t v74 = *v71;
    unint64_t v73 = v71[1];
    swift_bridgeObjectRetain();
    *(void *)(v0 + 88) = sub_1000DF238(v74, v73, v142);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v72 + 12) = 2080;
    *(void *)(v0 + 96) = *(void *)v129;
    sub_100003918(&qword_10020E3E8);
    *(void *)(v0 + 32) = sub_1001C0C50();
    *(void *)(v0 + 40) = v75;
    v145._uint64_t countAndFlagsBits = 2618;
    v145._object = (void *)0xE200000000000000;
    sub_1001C0D00(v145);
    uint64_t v77 = *(void *)(v0 + 32);
    uint64_t v76 = *(void *)(v0 + 40);
    sub_1001627A0(&qword_10020A0B8, (void (*)(uint64_t))type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary);
    uint64_t v78 = sub_1001C0040();
    char v80 = v79;
    *(void *)(v0 + 16) = v77;
    *(void *)(v0 + 24) = v76;
    swift_bridgeObjectRetain();
    v146._uint64_t countAndFlagsBits = v78;
    v146._object = v80;
    sub_1001C0D00(v146);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 120) = sub_1000DF238(*(void *)(v0 + 16), *(void *)(v0 + 24), v142);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    sub_10016290C(v132, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary);
    _os_log_impl((void *)&_mh_execute_header, v69, type, "%s Response summary: %s", (uint8_t *)v72, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v89 = *(void *)(v0 + 248);

    swift_release_n();
    sub_10016290C(v89, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary);
  }
  uint64_t v90 = *(void *)(v0 + 256);
  if (*(unsigned char *)(v90 + 8) == 1)
  {
    switch(*(void *)v90)
    {
      case 1:
        uint64_t v84 = *(void *)(v0 + 392);
        uint64_t v85 = *(void *)(v0 + 368);
        uint64_t v86 = *(void *)(v0 + 320);
        uint64_t v87 = *(void *)(v0 + 280);
        sub_10002C2C4();
        swift_allocError();
        char v93 = 5;
        goto LABEL_48;
      case 2:
        uint64_t v84 = *(void *)(v0 + 392);
        uint64_t v85 = *(void *)(v0 + 368);
        uint64_t v86 = *(void *)(v0 + 320);
        uint64_t v87 = *(void *)(v0 + 280);
        sub_10002C2C4();
        swift_allocError();
        char v93 = 6;
        goto LABEL_48;
      case 3:
        uint64_t v84 = *(void *)(v0 + 392);
        uint64_t v85 = *(void *)(v0 + 368);
        uint64_t v86 = *(void *)(v0 + 320);
        uint64_t v87 = *(void *)(v0 + 280);
        sub_10002C2C4();
        swift_allocError();
        char v93 = 7;
        goto LABEL_48;
      default:
        uint64_t v91 = *(void *)(v0 + 320);
        sub_10016290C(*(void *)(v0 + 256), type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary);
        goto LABEL_84;
    }
  }
  uint64_t v84 = *(void *)(v0 + 392);
  uint64_t v85 = *(void *)(v0 + 368);
  uint64_t v86 = *(void *)(v0 + 320);
  uint64_t v87 = *(void *)(v0 + 280);
  sub_10002C2C4();
  swift_allocError();
  char v93 = 4;
LABEL_48:
  *(unsigned char *)uint64_t v92 = v93;
  *(void *)(v92 + 8) = _swiftEmptyArrayStorage;
  swift_willThrow();
  sub_10016290C(v90, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse.ResponseSummary);
LABEL_49:
  sub_10016290C(v86, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse);
  sub_100010360(v85, &qword_10020E3B0);
  sub_100010360(v84, &qword_10020E3B8);
  sub_100010360(v87, &qword_100209FE0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v94 = *(void (**)(void))(v0 + 8);
  v94();
}

uint64_t sub_100134A2C()
{
  *(void *)(v0 + 112) = *(void *)(v0 + 480);
  sub_100003918(&qword_100208C98);
  swift_willThrowTypedImpl();
  return _swift_task_switch(sub_100134AE4, 0, 0);
}

uint64_t sub_100134AE4()
{
  uint64_t v1 = v0[49];
  sub_100010360(v0[46], &qword_10020E3B0);
  sub_100010360(v1, &qword_10020E3B8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_100134C58()
{
  *(void *)(*(void *)v1 + 512) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100134EB4;
  }
  else {
    uint64_t v2 = sub_100134D98;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100134D98()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 320);
  sub_10000792C(*(void *)(v0 + 488), *(void *)(v0 + 496));
  sub_10016290C(v2, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse);
  sub_100010360(*(void *)(v0 + 280), &qword_100209FE0);
  *(unsigned char *)(v0 + 534) = 0;
  uint64_t v3 = dword_10020EB80;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 472) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100133078;
  uint64_t v5 = *(void *)(v1 + 328);
  return ((uint64_t (*)(uint64_t))((char *)&dword_10020EB80 + v3))(v5);
}

uint64_t sub_100134EB4()
{
  uint64_t v1 = v0[49];
  uint64_t v2 = v0[46];
  uint64_t v3 = v0[40];
  uint64_t v4 = v0[35];
  sub_10000792C(v0[61], v0[62]);
  sub_10016290C(v3, type metadata accessor for Proto_PrivateCloudCompute_PrivateCloudComputeResponse);
  sub_100010360(v2, &qword_10020E3B0);
  sub_100010360(v1, &qword_10020E3B8);
  sub_100010360(v4, &qword_100209FE0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100135068(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_100135088, 0, 0);
}

uint64_t sub_100135088()
{
  uint64_t v2 = v0[2];
  uint64_t v1 = v0[3];
  uint64_t v3 = qword_10021F8E0;
  uint64_t v4 = (uint64_t *)(v1 + *(int *)(type metadata accessor for TrustedRequestConfiguration() + 100) + v3);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  sub_1001C0570();
  uint64_t v7 = sub_1001C0540();
  v0[4] = v7;
  uint64_t v8 = swift_task_alloc();
  v0[5] = v8;
  *(void *)(v8 + 16) = v2;
  *(void *)(v8 + 24) = v5;
  *(void *)(v8 + 32) = v6;
  *(void *)(v8 + 40) = v7;
  *(unsigned char *)(v8 + 48) = 1;
  uint64_t v9 = (void *)swift_task_alloc();
  v0[6] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1001351CC;
  uint64_t v10 = v0[2];
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v9, &unk_10020C090, v8, sub_1000A10C0, v10, 0, 0, (char *)&type metadata for () + 8);
}

uint64_t sub_1001351CC()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10003636C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1001352E8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001352E8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10013534C(uint64_t a1, uint64_t a2, int *a3)
{
  v4[10] = a2;
  v4[11] = v3;
  v4[9] = a1;
  uint64_t v6 = sub_1001C02A0();
  v4[12] = v6;
  v4[13] = *(void *)(v6 - 8);
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  uint64_t v7 = sub_1001C14C0();
  v4[16] = v7;
  v4[17] = *(void *)(v7 - 8);
  v4[18] = swift_task_alloc();
  v4[19] = type metadata accessor for ThimbledEvent();
  v4[20] = swift_task_alloc();
  uint64_t v8 = sub_100003918(&qword_100208A00);
  v4[21] = v8;
  v4[22] = *(void *)(v8 - 8);
  v4[23] = swift_task_alloc();
  uint64_t v9 = sub_1001BF2C0();
  v4[24] = v9;
  v4[25] = *(void *)(v9 - 8);
  v4[26] = swift_task_alloc();
  uint64_t v10 = sub_1001BF450();
  v4[27] = v10;
  v4[28] = *(void *)(v10 - 8);
  v4[29] = swift_task_alloc();
  v4[30] = swift_task_alloc();
  uint64_t v13 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v11 = (void *)swift_task_alloc();
  v4[31] = v11;
  *uint64_t v11 = v4;
  v11[1] = sub_100135650;
  return v13();
}

uint64_t sub_100135650()
{
  *(void *)(*(void *)v1 + 256) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1001364E4;
  }
  else {
    uint64_t v2 = sub_100135764;
  }
  return _swift_task_switch(v2, 0, 0);
}

void sub_100135764()
{
  uint64_t v116 = v0;
  uint64_t v107 = v0[32];
  uint64_t v2 = v0[29];
  uint64_t v1 = (uint64_t *)v0[30];
  uint64_t v4 = v0[27];
  uint64_t v3 = v0[28];
  uint64_t v5 = v0[25];
  uint64_t v6 = v0[26];
  uint64_t v7 = v0[24];
  unint64_t v8 = sub_100055264((uint64_t)_swiftEmptyArrayStorage);
  uint64_t *v1 = sub_1001BF2D0();
  v1[1] = v9;
  unsigned int v110 = enum case for EventValue.string(_:);
  uint64_t v112 = *(void (**)(uint64_t *))(v3 + 104);
  v112(v1);
  uint64_t v111 = v1;
  uint64_t v10 = v1;
  uint64_t v11 = *(void (**)(uint64_t, uint64_t *, uint64_t))(v3 + 32);
  v11(v2, v10, v4);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v115[0] = v8;
  sub_1000EB164(v2, 8, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  sub_1001BF2B0();
  sub_1001BF280();
  double v14 = v13;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v7);
  if ((~*(void *)&v14 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v14 <= -9.22337204e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v14 >= 9.22337204e18)
  {
LABEL_28:
    __break(1u);
    return;
  }
  uint64_t v15 = v0[29];
  os_log_type_t v16 = (uint64_t *)v0[30];
  uint64_t v17 = v0[27];
  uint64_t v109 = v0;
  unint64_t v18 = (uint64_t *)v0[11];
  uint64_t *v16 = (uint64_t)v14;
  ((void (*)(uint64_t *, void, uint64_t))v112)(v16, enum case for EventValue.int(_:), v17);
  v11(v15, v16, v17);
  char v19 = swift_isUniquelyReferenced_nonNull_native();
  v115[0] = v8;
  sub_1000EB164(v15, 0, v19);
  swift_bridgeObjectRelease();
  uint64_t v20 = (uint64_t *)((char *)v18 + *(void *)(*v18 + 208));
  uint64_t v21 = v20[1];
  uint64_t *v16 = *v20;
  v111[1] = v21;
  ((void (*)(uint64_t *, void, uint64_t))v112)(v16, v110, v17);
  v11(v15, v16, v17);
  swift_bridgeObjectRetain();
  char v22 = swift_isUniquelyReferenced_nonNull_native();
  v115[0] = v8;
  sub_1000EB164(v15, 1, v22);
  swift_bridgeObjectRelease();
  uint64_t v23 = (uint64_t *)((char *)v18 + *(void *)(*v18 + 232));
  uint64_t v24 = v23[1];
  uint64_t *v16 = *v23;
  v111[1] = v24;
  ((void (*)(uint64_t *, void, uint64_t))v112)(v16, v110, v17);
  v11(v15, v16, v17);
  swift_bridgeObjectRetain();
  char v25 = swift_isUniquelyReferenced_nonNull_native();
  v115[0] = v8;
  sub_1000EB164(v15, 2, v25);
  swift_bridgeObjectRelease();
  uint64_t v26 = *v18;
  uint64_t v27 = (uint64_t *)((char *)v18 + *(void *)(*v18 + 192));
  uint64_t v28 = v27[1];
  if (v28)
  {
    uint64_t v30 = v109[29];
    os_log_type_t v29 = (uint64_t *)v109[30];
    uint64_t v31 = v109[27];
    uint64_t v32 = (uint64_t *)v109[11];
    *os_log_type_t v29 = *v27;
    v111[1] = v28;
    ((void (*)(uint64_t *, void, uint64_t))v112)(v29, v110, v31);
    v11(v30, v29, v31);
    swift_bridgeObjectRetain();
    char v33 = swift_isUniquelyReferenced_nonNull_native();
    v115[0] = v8;
    sub_1000EB164(v30, 3, v33);
    swift_bridgeObjectRelease();
    uint64_t v26 = *v32;
  }
  uint64_t v35 = v109[29];
  uint64_t v34 = (uint64_t *)v109[30];
  uint64_t v36 = v109[27];
  uint64_t v37 = (uint64_t *)v109[11];
  uint64_t v38 = (uint64_t *)((char *)v37 + *(void *)(v26 + 176));
  uint64_t v39 = v38[1];
  *uint64_t v34 = *v38;
  v111[1] = v39;
  ((void (*)(uint64_t *, void, uint64_t))v112)(v34, v110, v36);
  v11(v35, v34, v36);
  swift_bridgeObjectRetain();
  char v40 = swift_isUniquelyReferenced_nonNull_native();
  v115[0] = v8;
  sub_1000EB164(v35, 5, v40);
  swift_bridgeObjectRelease();
  uint64_t v41 = *v37;
  uint64_t v42 = (uint64_t *)((char *)v37 + *(void *)(*v37 + 184));
  uint64_t v43 = v42[1];
  if (v43)
  {
    uint64_t v45 = v109[29];
    uint64_t v44 = (uint64_t *)v109[30];
    uint64_t v46 = v109[27];
    uint64_t v47 = (uint64_t *)v109[11];
    *uint64_t v44 = *v42;
    v111[1] = v43;
    ((void (*)(uint64_t *, void, uint64_t))v112)(v44, v110, v46);
    v11(v45, v44, v46);
    swift_bridgeObjectRetain();
    char v48 = swift_isUniquelyReferenced_nonNull_native();
    v115[0] = v8;
    sub_1000EB164(v45, 6, v48);
    swift_bridgeObjectRelease();
    uint64_t v41 = *v47;
  }
  uint64_t v108 = v109[32];
  uint64_t v49 = v109[29];
  uint64_t v50 = (uint64_t *)v109[30];
  uint64_t v51 = v109[27];
  uint64_t v52 = (uint64_t *)(v109[11] + *(void *)(v41 + 240));
  uint64_t v53 = v52[1];
  *uint64_t v50 = *v52;
  v111[1] = v53;
  ((void (*)(uint64_t *, void, uint64_t))v112)(v50, v110, v51);
  v11(v49, v50, v51);
  swift_bridgeObjectRetain();
  char v54 = swift_isUniquelyReferenced_nonNull_native();
  sub_1000EB164(v49, 7, v54);
  swift_bridgeObjectRelease();
  *(unsigned char *)uint64_t v50 = v108 == 0;
  ((void (*)(uint64_t *, void, uint64_t))v112)(v50, enum case for EventValue.BOOL(_:), v51);
  v11(v49, v50, v51);
  char v55 = swift_isUniquelyReferenced_nonNull_native();
  v115[0] = v8;
  sub_1000EB164(v49, 9, v55);
  swift_bridgeObjectRelease();
  if (v108)
  {
    uint64_t v56 = v109[29];
    unint64_t v57 = (unint64_t *)v109[30];
    uint64_t v58 = v109[27];
    uint64_t v59 = v109[10];
    *unint64_t v57 = v109[9];
    v111[1] = v59;
    ((void (*)(unint64_t *, void, uint64_t))v112)(v57, v110, v58);
    uint64_t v60 = ((uint64_t (*)(uint64_t, unint64_t *, uint64_t))v11)(v56, v57, v58);
    sub_10001067C(v60, 1);
    swift_bridgeObjectRetain();
    char v61 = swift_isUniquelyReferenced_nonNull_native();
    v115[0] = v8;
    sub_1000EB164(v56, 11, v61);
    swift_bridgeObjectRelease();
    swift_getErrorValue();
    Error.telemetryString.getter(v109[3], v109[4], v57);
    v11(v56, (uint64_t *)v57, v58);
    char v62 = swift_isUniquelyReferenced_nonNull_native();
    v115[0] = v8;
    sub_1000EB164(v56, 10, v62);
    uint64_t v63 = swift_bridgeObjectRelease();
    sub_1000106B0(v63, 1);
  }
  uint64_t v64 = v109[32];
  uint64_t v66 = v109[22];
  uint64_t v65 = v109[23];
  uint64_t v68 = (void *)v109[20];
  uint64_t v67 = v109[21];
  v68[3] = &type metadata for TC2KDataSendMetric;
  v68[4] = sub_100160E54();
  uint64_t v69 = (void *)swift_allocObject();
  *uint64_t v68 = v69;
  v69[2] = 0xD000000000000015;
  v69[3] = 0x80000001001C6700;
  v69[4] = v8;
  v69[5] = 0;
  v69[6] = 0;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_100003918(qword_100208000);
  sub_1001C0FE0();
  (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v65, v67);
  if (v64)
  {
    uint64_t v70 = swift_bridgeObjectRelease();
    sub_1000106B0(v70, 1);
    goto LABEL_12;
  }
  long long v113 = *(_OWORD *)(v109 + 9);
  uint64_t v72 = v109[17];
  uint64_t v73 = v109[18];
  uint64_t v74 = v109[16];
  uint64_t v75 = v109[11];
  sub_1001C14E0();
  sub_1001627A0(&qword_100208C80, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  sub_1001C18D0();
  sub_1001627A0(&qword_100208C88, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
  sub_1001C1500();
  (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v73, v74);
  uint64_t v76 = v109[5];
  uint64_t v77 = v109[6];
  uint64_t v78 = swift_task_alloc();
  *(_OWORD *)(v78 + 16) = v113;
  *(void *)(v78 + 32) = v76;
  *(void *)(v78 + 40) = v77;
  *(void *)(v78 + 48) = v75;
  uint64_t v79 = (os_unfair_lock_s *)(v75 + *(void *)(*(void *)v75 + 128));
  os_unfair_lock_lock(v79);
  uint64_t v80 = sub_100003918(&qword_100208C90);
  sub_100160EAC((char *)v79 + *(int *)(v80 + 28), v115);
  if (!v107)
  {
    uint64_t v81 = v109[15];
    uint64_t v83 = v109[12];
    uint64_t v82 = v109[13];
    uint64_t v84 = v109[11];
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(v79);
    swift_task_dealloc();
    int v114 = LOBYTE(v115[0]);
    uint64_t v85 = v84 + *(void *)(*(void *)v84 + 280);
    uint64_t v86 = *(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 16);
    v86(v81, v85, v83);
    uint64_t v87 = sub_1001C02C0();
    os_signpost_type_t v88 = sub_1001C12A0();
    char v89 = sub_1001C12D0();
    uint64_t v90 = v109[15];
    if (v89)
    {
      uint64_t v92 = v109[13];
      uint64_t v91 = v109[14];
      uint64_t v93 = v109[12];
      v86(v91, v109[15], v93);
      char v94 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v94 = 0;
      os_signpost_id_t v95 = sub_1001C0290();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v87, v88, v95, "SentKeyToNode", "", v94, 2u);
      swift_slowDealloc();

      uint64_t v96 = *(void (**)(uint64_t, uint64_t))(v92 + 8);
      v96(v90, v93);
      v96(v91, v93);
      if (!v114) {
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v98 = v109[12];
      uint64_t v97 = v109[13];

      (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v90, v98);
      if (!v114) {
        goto LABEL_12;
      }
    }
    swift_retain_n();
    uint64_t v99 = sub_1001C0330();
    os_log_type_t v100 = sub_1001C1200();
    BOOL v101 = os_log_type_enabled(v99, v100);
    uint64_t v102 = v109[11];
    if (v101)
    {
      uint64_t v103 = (uint8_t *)swift_slowAlloc();
      v115[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v103 = 136315138;
      uint64_t v104 = (uint64_t *)(v102 + *(void *)(*(void *)v102 + 256));
      uint64_t v106 = *v104;
      unint64_t v105 = v104[1];
      swift_bridgeObjectRetain();
      v109[8] = sub_1000DF238(v106, v105, v115);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v99, v100, "%s First key sent to node.", v103, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
LABEL_12:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v71 = (void (*)(void))v109[1];
    v71();
    return;
  }
  os_unfair_lock_unlock(v79);
}

uint64_t sub_1001364E4()
{
  int v114 = v0;
  uint64_t v106 = v0[32];
  uint64_t v2 = v0[29];
  uint64_t v1 = (uint64_t *)v0[30];
  uint64_t v4 = v0[27];
  uint64_t v3 = v0[28];
  uint64_t v5 = v0[25];
  uint64_t v6 = v0[26];
  uint64_t v7 = v0[24];
  unint64_t v8 = sub_100055264((uint64_t)_swiftEmptyArrayStorage);
  uint64_t *v1 = sub_1001BF2D0();
  v1[1] = v9;
  unsigned int v108 = enum case for EventValue.string(_:);
  unsigned int v110 = *(void (**)(uint64_t *))(v3 + 104);
  v110(v1);
  uint64_t v109 = v1;
  uint64_t v10 = v1;
  uint64_t v11 = *(void (**)(uint64_t, uint64_t *, uint64_t))(v3 + 32);
  v11(v2, v10, v4);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v113[0] = v8;
  sub_1000EB164(v2, 8, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  sub_1001BF2B0();
  sub_1001BF280();
  double v14 = v13;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v6, v7);
  if ((~*(void *)&v14 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v14 <= -9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v14 >= 9.22337204e18)
  {
LABEL_24:
    __break(1u);
    return result;
  }
  uint64_t v16 = v0[29];
  uint64_t v17 = (uint64_t *)v0[30];
  uint64_t v18 = v0[27];
  uint64_t v107 = v0;
  char v19 = (uint64_t *)v0[11];
  *uint64_t v17 = (uint64_t)v14;
  ((void (*)(uint64_t *, void, uint64_t))v110)(v17, enum case for EventValue.int(_:), v18);
  v11(v16, v17, v18);
  char v20 = swift_isUniquelyReferenced_nonNull_native();
  v113[0] = v8;
  sub_1000EB164(v16, 0, v20);
  swift_bridgeObjectRelease();
  uint64_t v21 = (uint64_t *)((char *)v19 + *(void *)(*v19 + 208));
  uint64_t v22 = v21[1];
  *uint64_t v17 = *v21;
  v109[1] = v22;
  ((void (*)(uint64_t *, void, uint64_t))v110)(v17, v108, v18);
  v11(v16, v17, v18);
  swift_bridgeObjectRetain();
  char v23 = swift_isUniquelyReferenced_nonNull_native();
  v113[0] = v8;
  sub_1000EB164(v16, 1, v23);
  swift_bridgeObjectRelease();
  uint64_t v24 = (uint64_t *)((char *)v19 + *(void *)(*v19 + 232));
  uint64_t v25 = v24[1];
  *uint64_t v17 = *v24;
  v109[1] = v25;
  ((void (*)(uint64_t *, void, uint64_t))v110)(v17, v108, v18);
  v11(v16, v17, v18);
  swift_bridgeObjectRetain();
  char v26 = swift_isUniquelyReferenced_nonNull_native();
  v113[0] = v8;
  sub_1000EB164(v16, 2, v26);
  swift_bridgeObjectRelease();
  uint64_t v27 = *v19;
  uint64_t v28 = (uint64_t *)((char *)v19 + *(void *)(*v19 + 192));
  uint64_t v29 = v28[1];
  if (v29)
  {
    uint64_t v31 = v107[29];
    uint64_t v30 = (uint64_t *)v107[30];
    uint64_t v32 = v107[27];
    char v33 = (uint64_t *)v107[11];
    *uint64_t v30 = *v28;
    v109[1] = v29;
    ((void (*)(uint64_t *, void, uint64_t))v110)(v30, v108, v32);
    v11(v31, v30, v32);
    swift_bridgeObjectRetain();
    char v34 = swift_isUniquelyReferenced_nonNull_native();
    v113[0] = v8;
    sub_1000EB164(v31, 3, v34);
    swift_bridgeObjectRelease();
    uint64_t v27 = *v33;
  }
  uint64_t v36 = v107[29];
  uint64_t v35 = (uint64_t *)v107[30];
  uint64_t v37 = v107[27];
  uint64_t v38 = (uint64_t *)v107[11];
  uint64_t v39 = (uint64_t *)((char *)v38 + *(void *)(v27 + 176));
  uint64_t v40 = v39[1];
  *uint64_t v35 = *v39;
  v109[1] = v40;
  ((void (*)(uint64_t *, void, uint64_t))v110)(v35, v108, v37);
  v11(v36, v35, v37);
  swift_bridgeObjectRetain();
  char v41 = swift_isUniquelyReferenced_nonNull_native();
  v113[0] = v8;
  sub_1000EB164(v36, 5, v41);
  swift_bridgeObjectRelease();
  uint64_t v42 = *v38;
  uint64_t v43 = (uint64_t *)((char *)v38 + *(void *)(*v38 + 184));
  uint64_t v44 = v43[1];
  if (v44)
  {
    uint64_t v46 = v107[29];
    uint64_t v45 = (uint64_t *)v107[30];
    uint64_t v47 = v107[27];
    char v48 = (uint64_t *)v107[11];
    *uint64_t v45 = *v43;
    v109[1] = v44;
    ((void (*)(uint64_t *, void, uint64_t))v110)(v45, v108, v47);
    v11(v46, v45, v47);
    swift_bridgeObjectRetain();
    char v49 = swift_isUniquelyReferenced_nonNull_native();
    v113[0] = v8;
    sub_1000EB164(v46, 6, v49);
    swift_bridgeObjectRelease();
    uint64_t v42 = *v48;
  }
  uint64_t v105 = v107[32];
  uint64_t v50 = v107[29];
  uint64_t v51 = (uint64_t *)v107[30];
  uint64_t v52 = v107[27];
  uint64_t v53 = (uint64_t *)(v107[11] + *(void *)(v42 + 240));
  uint64_t v54 = v53[1];
  *uint64_t v51 = *v53;
  v109[1] = v54;
  ((void (*)(uint64_t *, void, uint64_t))v110)(v51, v108, v52);
  v11(v50, v51, v52);
  swift_bridgeObjectRetain();
  char v55 = swift_isUniquelyReferenced_nonNull_native();
  sub_1000EB164(v50, 7, v55);
  swift_bridgeObjectRelease();
  *(unsigned char *)uint64_t v51 = v105 == 0;
  ((void (*)(uint64_t *, void, uint64_t))v110)(v51, enum case for EventValue.BOOL(_:), v52);
  v11(v50, v51, v52);
  char v56 = swift_isUniquelyReferenced_nonNull_native();
  v113[0] = v8;
  sub_1000EB164(v50, 9, v56);
  swift_bridgeObjectRelease();
  if (v105)
  {
    uint64_t v57 = v107[29];
    uint64_t v58 = (unint64_t *)v107[30];
    uint64_t v59 = v107[27];
    uint64_t v60 = v107[10];
    *uint64_t v58 = v107[9];
    v109[1] = v60;
    ((void (*)(unint64_t *, void, uint64_t))v110)(v58, v108, v59);
    v11(v57, (uint64_t *)v58, v59);
    sub_10001067C(v106, 1);
    swift_bridgeObjectRetain();
    char v61 = swift_isUniquelyReferenced_nonNull_native();
    v113[0] = v8;
    sub_1000EB164(v57, 11, v61);
    swift_bridgeObjectRelease();
    swift_getErrorValue();
    Error.telemetryString.getter(v107[3], v107[4], v58);
    v11(v57, (uint64_t *)v58, v59);
    char v62 = swift_isUniquelyReferenced_nonNull_native();
    v113[0] = v8;
    sub_1000EB164(v57, 10, v62);
    swift_bridgeObjectRelease();
    sub_1000106B0(v106, 1);
  }
  uint64_t v63 = v107[32];
  uint64_t v65 = v107[22];
  uint64_t v64 = v107[23];
  uint64_t v67 = (void *)v107[20];
  uint64_t v66 = v107[21];
  v67[3] = &type metadata for TC2KDataSendMetric;
  v67[4] = sub_100160E54();
  uint64_t v68 = (void *)swift_allocObject();
  *uint64_t v67 = v68;
  v68[2] = 0xD000000000000015;
  v68[3] = 0x80000001001C6700;
  v68[4] = v8;
  v68[5] = 0;
  v68[6] = 0;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_100003918(qword_100208000);
  sub_1001C0FE0();
  (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v64, v66);
  if (v63)
  {
    swift_bridgeObjectRelease();
    sub_1000106B0(v106, 1);
  }
  else
  {
    long long v111 = *(_OWORD *)(v107 + 9);
    uint64_t v70 = v107[17];
    uint64_t v71 = v107[18];
    uint64_t v72 = v107[16];
    uint64_t v73 = v107[11];
    sub_1001C14E0();
    sub_1001627A0(&qword_100208C80, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
    sub_1001C18D0();
    sub_1001627A0(&qword_100208C88, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
    sub_1001C1500();
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v71, v72);
    uint64_t v74 = v107[5];
    uint64_t v75 = v107[6];
    uint64_t v76 = swift_task_alloc();
    *(_OWORD *)(v76 + 16) = v111;
    *(void *)(v76 + 32) = v74;
    *(void *)(v76 + 40) = v75;
    *(void *)(v76 + 48) = v73;
    uint64_t v77 = (os_unfair_lock_s *)(v73 + *(void *)(*(void *)v73 + 128));
    os_unfair_lock_lock(v77);
    uint64_t v78 = sub_100003918(&qword_100208C90);
    sub_100160EAC((char *)v77 + *(int *)(v78 + 28), v113);
    uint64_t v79 = v107[15];
    uint64_t v81 = v107[12];
    uint64_t v80 = v107[13];
    uint64_t v82 = v107[11];
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(v77);
    swift_task_dealloc();
    int v112 = LOBYTE(v113[0]);
    uint64_t v83 = v82 + *(void *)(*(void *)v82 + 280);
    uint64_t v84 = *(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 16);
    v84(v79, v83, v81);
    uint64_t v85 = sub_1001C02C0();
    os_signpost_type_t v86 = sub_1001C12A0();
    char v87 = sub_1001C12D0();
    uint64_t v88 = v107[15];
    if (v87)
    {
      uint64_t v90 = v107[13];
      uint64_t v89 = v107[14];
      uint64_t v91 = v107[12];
      v84(v89, v107[15], v91);
      uint64_t v92 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v92 = 0;
      os_signpost_id_t v93 = sub_1001C0290();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v85, v86, v93, "SentKeyToNode", "", v92, 2u);
      swift_slowDealloc();

      char v94 = *(void (**)(uint64_t, uint64_t))(v90 + 8);
      v94(v88, v91);
      v94(v89, v91);
      if (!v112) {
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v96 = v107[12];
      uint64_t v95 = v107[13];

      (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v88, v96);
      if (!v112) {
        goto LABEL_12;
      }
    }
    swift_retain_n();
    uint64_t v97 = sub_1001C0330();
    os_log_type_t v98 = sub_1001C1200();
    BOOL v99 = os_log_type_enabled(v97, v98);
    uint64_t v100 = v107[11];
    if (v99)
    {
      BOOL v101 = (uint8_t *)swift_slowAlloc();
      v113[0] = swift_slowAlloc();
      *(_DWORD *)BOOL v101 = 136315138;
      uint64_t v102 = (uint64_t *)(v100 + *(void *)(*(void *)v100 + 256));
      uint64_t v104 = *v102;
      unint64_t v103 = v102[1];
      swift_bridgeObjectRetain();
      v107[8] = sub_1000DF238(v104, v103, v113);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v97, v98, "%s First key sent to node.", v101, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
  }
LABEL_12:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v69 = (uint64_t (*)(void))v107[1];
  return v69();
}

uint64_t sub_100137278(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v141 = sub_1001C02E0();
  uint64_t v123 = *(void *)(v141 - 8);
  __chkstk_darwin(v141, v6);
  uint64_t v142 = (char *)&v120 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = sub_1001C02A0();
  uint64_t v143 = *(void (***)(const char *, uint64_t))(v144 - 8);
  uint64_t v9 = __chkstk_darwin(v144, v8);
  uint64_t v11 = (void (**)(const char *, uint64_t))((char *)&v120 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9, v12);
  double v14 = (char *)&v120 - v13;
  uint64_t v148 = (void *)sub_1001C03E0();
  uint64_t v15 = *(v148 - 1);
  __chkstk_darwin(v148, v16);
  uint64_t v18 = (char *)&v120 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = type metadata accessor for ThimbledEvent();
  __chkstk_darwin(v129, v19);
  os_log_type_t v130 = (char *)&v120 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = sub_100003918(&qword_100208A00);
  uint64_t v132 = *(void *)(v133 - 8);
  __chkstk_darwin(v133, v21);
  uint64_t v128 = (char *)&v120 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_1001BF340();
  uint64_t v125 = *(void *)(v126 - 8);
  __chkstk_darwin(v126, v23);
  uint64_t v124 = (char *)&v120 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = (void (*)(uint64_t, uint64_t *, uint64_t))sub_1001BF2C0();
  uint64_t v136 = *((void *)v147 - 1);
  __chkstk_darwin(v147, v25);
  uint64_t v135 = (char *)&v120 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = sub_1001BF450();
  uint64_t v149 = *(void *)(v145 - 8);
  uint64_t v28 = __chkstk_darwin(v145, v27);
  Swift::String v146 = (char *)&v120 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28, v30);
  uint64_t v32 = (uint64_t *)((char *)&v120 - v31);
  uint64_t v131 = a1;
  uint64_t v150 = a1;
  uint64_t v151 = a2;
  uint64_t v134 = a2;
  uint64_t v152 = v3;
  char v33 = (os_unfair_lock_s *)((char *)v3 + *((void *)*v3 + 16));
  os_unfair_lock_lock(v33);
  uint64_t v34 = sub_100003918(&qword_100208C90);
  sub_100160D84((uint64_t)v33 + *(int *)(v34 + 28), (uint64_t)&v153);
  os_unfair_lock_unlock(v33);
  uint64_t v36 = v153;
  uint64_t v35 = v154;
  uint64_t v139 = v155;
  uint64_t v138 = v156;
  int v140 = v157;
  uint64_t v137 = v153;
  uint64_t v127 = v154;
  if ((~(v153 & v154) & 0xF000000000000007) != 0)
  {
    if ((v154 & 0x8000000000000000) == 0)
    {
      (*(void (**)(char *, void, void *))(v15 + 104))(v18, enum case for NWActivity.CompletionReason.success(_:), v148);
      sub_10002C5F0(v36, v35);
      sub_1001C0400();
      sub_100160E00(v36, v35);
      (*(void (**)(char *, void *))(v15 + 8))(v18, v148);
      goto LABEL_17;
    }
    uint64_t v37 = v148;
    (*(void (**)(char *, void, void *))(v15 + 104))(v18, enum case for NWActivity.CompletionReason.success(_:), v148);
    swift_retain();
    swift_retain();
    sub_1001C0400();
    (*(void (**)(char *, void *))(v15 + 8))(v18, v37);
    uint64_t v38 = sub_1001C02C0();
    sub_1001C02F0();
    int v39 = sub_1001C1280();
    uint64_t result = sub_1001C12D0();
    if ((result & 1) == 0) {
      goto LABEL_8;
    }
    uint64_t v148 = v14;
    if (v140)
    {
      double v14 = v142;
      if ((unint64_t)v139 >> 32)
      {
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      if (v139 >> 11 == 27)
      {
LABEL_32:
        __break(1u);
        return result;
      }
      if (v139 >> 16 > 0x10)
      {
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
      char v41 = &v158;
    }
    else
    {
      char v41 = v139;
      double v14 = v142;
      if (!v139)
      {
        __break(1u);
LABEL_8:

        swift_release();
        v143[1](v14, v144);
        swift_release();
        goto LABEL_17;
      }
    }
    uint64_t v121 = v41;
    uint64_t v42 = v143;
    uint64_t v143 = v11;
    uint64_t v43 = v42;
    swift_retain();
    sub_1001C0320();
    swift_release();
    uint64_t v44 = v123;
    uint64_t v45 = v141;
    int v46 = (*(uint64_t (**)(const char *, uint64_t))(v123 + 88))(v14, v141);
    int v122 = v39;
    if (v46 == enum case for OSSignpostError.doubleEnd(_:))
    {
      uint64_t v47 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(const char *, uint64_t))(v44 + 8))(v14, v45);
      uint64_t v47 = "";
    }
    uint64_t v142 = v47;
    char v48 = v43;
    char v49 = v43[2];
    uint64_t v50 = v143;
    uint64_t v51 = (const char *)v148;
    uint64_t v52 = v144;
    ((void (*)(void (**)(const char *, uint64_t), void *, uint64_t))v49)(v143, v148, v144);
    uint64_t v53 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v53 = 0;
    os_signpost_id_t v54 = sub_1001C0290();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v38, (os_signpost_type_t)v122, v54, v121, v142, v53, 2u);
    swift_slowDealloc();

    swift_release();
    char v55 = v48[1];
    v55(v51, v52);
    swift_release();
    v55((const char *)v50, v52);
  }
LABEL_17:
  char v56 = (uint64_t *)((char *)v3 + *((void *)*v3 + 22));
  uint64_t v57 = (const char *)v56[1];
  uint64_t v144 = *v56;
  uint64_t v142 = v57;
  swift_bridgeObjectRetain();
  unint64_t v58 = sub_10005528C((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v143 = v3;
  *uint64_t v32 = sub_1001BF2D0();
  v32[1] = v59;
  uint64_t v60 = v149;
  char v61 = *(void (**)(void))(v149 + 104);
  LODWORD(v141) = enum case for EventValue.string(_:);
  uint64_t v62 = v145;
  uint64_t v63 = v61;
  v61(v32);
  uint64_t v64 = (uint64_t)v146;
  uint64_t v65 = v60 + 32;
  uint64_t v66 = *(void (**)(char *, uint64_t *, uint64_t))(v60 + 32);
  v66(v146, v32, v62);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v153 = v58;
  sub_1000EB1A0(v64, 8, isUniquelyReferenced_nonNull_native);
  uint64_t v68 = v153;
  swift_bridgeObjectRelease();
  uint64_t v69 = v135;
  sub_1001BF2B0();
  sub_1001BF280();
  double v71 = v70;
  uint64_t result = (*(uint64_t (**)(char *, void (*)(uint64_t, uint64_t *, uint64_t)))(v136 + 8))(v69, v147);
  if ((~*(void *)&v71 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v71 <= -9.22337204e18)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v71 >= 9.22337204e18)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  *uint64_t v32 = (uint64_t)v71;
  uint64_t v72 = v145;
  ((void (*)(uint64_t *, void, uint64_t))v63)(v32, enum case for EventValue.int(_:), v145);
  uint64_t v73 = (uint64_t)v146;
  uint64_t v148 = v63;
  uint64_t v149 = v65;
  v66(v146, v32, v72);
  char v74 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v153 = v68;
  sub_1000EB1A0(v73, 0, v74);
  uint64_t v75 = v153;
  swift_bridgeObjectRelease();
  uint64_t v76 = v143;
  uint64_t v77 = (uint64_t *)((char *)v76 + *((void *)*v76 + 26));
  uint64_t v78 = v77[1];
  *uint64_t v32 = *v77;
  v32[1] = v78;
  uint64_t v79 = v141;
  ((void (*)(uint64_t *, void, uint64_t))v63)(v32, v141, v72);
  v66((char *)v73, v32, v72);
  swift_bridgeObjectRetain();
  char v80 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v153 = v75;
  sub_1000EB1A0(v73, 1, v80);
  uint64_t v81 = v153;
  swift_bridgeObjectRelease();
  uint64_t v82 = (uint64_t *)((char *)v76 + *((void *)*v76 + 29));
  uint64_t v83 = v82[1];
  *uint64_t v32 = *v82;
  v32[1] = v83;
  uint64_t v84 = v79;
  uint64_t v85 = v72;
  uint64_t v86 = v72;
  uint64_t v87 = v73;
  ((void (*)(uint64_t *, uint64_t, uint64_t))v148)(v32, v84, v85);
  uint64_t v88 = v86;
  uint64_t v147 = (void (*)(uint64_t, uint64_t *, uint64_t))v66;
  v66((char *)v73, v32, v86);
  swift_bridgeObjectRetain();
  char v89 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v153 = v81;
  sub_1000EB1A0(v73, 2, v89);
  uint64_t v90 = v153;
  swift_bridgeObjectRelease();
  uint64_t v91 = (uint64_t *)((char *)v76 + *((void *)*v76 + 24));
  uint64_t v92 = v91[1];
  if (v92)
  {
    *uint64_t v32 = *v91;
    v32[1] = v92;
    uint64_t v93 = v141;
    ((void (*)(uint64_t *, void, uint64_t))v148)(v32, v141, v88);
    v147(v73, v32, v88);
    swift_bridgeObjectRetain();
    char v94 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v153 = v90;
    sub_1000EB1A0(v73, 3, v94);
    uint64_t v90 = v153;
    swift_bridgeObjectRelease();
    uint64_t v95 = v142;
  }
  else
  {
    uint64_t v95 = v142;
    uint64_t v93 = v141;
  }
  *uint64_t v32 = v144;
  v32[1] = (uint64_t)v95;
  ((void (*)(uint64_t *, uint64_t, uint64_t))v148)(v32, v93, v88);
  v147(v73, v32, v88);
  swift_bridgeObjectRetain();
  char v96 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v153 = v90;
  sub_1000EB1A0(v73, 6, v96);
  uint64_t v97 = v153;
  swift_bridgeObjectRelease();
  os_log_type_t v98 = (uint64_t *)((char *)v76 + *((void *)*v76 + 23));
  uint64_t v99 = v98[1];
  if (v99)
  {
    *uint64_t v32 = *v98;
    v32[1] = v99;
    uint64_t v100 = (void (*)(uint64_t *, uint64_t, uint64_t))v148;
    ((void (*)(uint64_t *, uint64_t, uint64_t))v148)(v32, v93, v88);
    uint64_t v101 = v93;
    v147(v73, v32, v88);
    swift_bridgeObjectRetain();
    char v102 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v153 = v97;
    sub_1000EB1A0(v73, 5, v102);
    uint64_t v97 = v153;
    swift_bridgeObjectRelease();
    unint64_t v103 = v100;
  }
  else
  {
    uint64_t v101 = v93;
    unint64_t v103 = (void (*)(uint64_t *, uint64_t, uint64_t))v148;
  }
  uint64_t v104 = v124;
  sub_1001BF330();
  uint64_t v105 = sub_1001BF320();
  uint64_t v107 = v106;
  (*(void (**)(char *, uint64_t))(v125 + 8))(v104, v126);
  *uint64_t v32 = v105;
  v32[1] = v107;
  v103(v32, v101, v88);
  unsigned int v108 = v147;
  v147(v87, v32, v88);
  char v109 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v153 = v97;
  sub_1000EB1A0(v87, 7, v109);
  uint64_t v110 = v153;
  swift_bridgeObjectRelease();
  sub_1001BF440();
  v108(v87, v32, v88);
  char v111 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v153 = v110;
  sub_1000EB1A0(v87, 9, v111);
  uint64_t v112 = v153;
  swift_bridgeObjectRelease();
  uint64_t v113 = v134;
  *uint64_t v32 = v131;
  v32[1] = v113;
  v103(v32, v101, v88);
  v108(v87, v32, v88);
  swift_bridgeObjectRetain();
  char v114 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v153 = v112;
  sub_1000EB1A0(v87, 11, v114);
  uint64_t v115 = v153;
  swift_bridgeObjectRelease();
  uint64_t v116 = v130;
  *((void *)v130 + 3) = &type metadata for TC2TrustedEndpointResponseMetric;
  v116[4] = sub_100160DA8();
  uint64_t v117 = (void *)swift_allocObject();
  *uint64_t v116 = v117;
  v117[2] = 0xD000000000000015;
  v117[3] = 0x80000001001C66D0;
  uint64_t v118 = v144;
  v117[4] = v115;
  v117[5] = v118;
  v117[6] = v142;
  swift_storeEnumTagMultiPayload();
  sub_100003918(qword_100208000);
  unint64_t v119 = v128;
  sub_1001C0FE0();
  sub_100160E00(v137, v127);
  return (*(uint64_t (**)(char *, uint64_t))(v132 + 8))(v119, v133);
}

void sub_1001382A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1001C02E0();
  uint64_t v29 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1001C02A0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v13 = __chkstk_darwin(v10, v12);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v16);
  uint64_t v18 = (char *)&v28 - v17;
  uint64_t v30 = a1;
  uint64_t v31 = a2;
  uint64_t v19 = (os_unfair_lock_s *)(v3 + *(void *)(*(void *)v3 + 128));
  os_unfair_lock_lock(v19);
  uint64_t v20 = sub_100003918(&qword_100208C90);
  sub_100160E18((uint64_t)v19 + *(int *)(v20 + 28), &v32);
  os_unfair_lock_unlock(v19);
  if (v32)
  {
    swift_retain();
    uint64_t v21 = sub_1001C02C0();
    sub_1001C02F0();
    os_signpost_type_t v22 = sub_1001C1280();
    if (sub_1001C12D0())
    {
      swift_retain();
      sub_1001C0320();
      swift_release();
      uint64_t v23 = v29;
      if ((*(unsigned int (**)(char *, uint64_t))(v29 + 88))(v9, v6) == enum case for OSSignpostError.doubleEnd(_:))
      {
        uint64_t v24 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v6);
        uint64_t v24 = "";
      }
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v18, v10);
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      os_signpost_id_t v26 = sub_1001C0290();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v21, v22, v26, "NodeResponse", v24, v25, 2u);
      swift_slowDealloc();
      swift_release();

      uint64_t v27 = *(void (**)(char *, uint64_t))(v11 + 8);
      v27(v18, v10);
      swift_release();
      v27(v15, v10);
    }
    else
    {

      swift_release();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v10);
      swift_release();
    }
  }
}

uint64_t sub_100138604(unint64_t *a1, uint64_t a2, unint64_t a3, uint64_t a4, int64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = sub_100003918(qword_10020CE78);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v15 = __chkstk_darwin(v12, v14);
  char v56 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15, v17);
  uint64_t v52 = (char *)&v44 - v19;
  __chkstk_darwin(v18, v20);
  uint64_t v51 = (uint64_t)&v44 - v21;
  unint64_t v54 = a3;
  uint64_t v55 = a2;
  uint64_t v22 = sub_100103DD4((uint64_t (*)(unint64_t))sub_100162ABC);
  int64_t v23 = *(void *)(*a1 + 16);
  if (v23 < v22)
  {
    __break(1u);
    goto LABEL_25;
  }
  int64_t v53 = a5;
  uint64_t result = sub_1000D6630(v22, v23);
  unint64_t v25 = *a1;
  uint64_t v26 = *(void *)(*a1 + 16);
  if (v26)
  {
    unint64_t v49 = a3;
    uint64_t v50 = a1;
    unint64_t v46 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    uint64_t v47 = v5;
    unint64_t v27 = v25 + v46;
    uint64_t v28 = sub_1001BF950();
    uint64_t v45 = v13;
    unint64_t v29 = v25;
    unint64_t v25 = *(void *)(v13 + 72);
    sub_1001627A0(&qword_10020D940, (void (*)(uint64_t))&type metadata accessor for TC2RequestParameters);
    unint64_t v48 = v29;
    swift_bridgeObjectRetain();
    unint64_t v30 = 0;
    while ((sub_1001C0BD0() & 1) == 0)
    {
      ++v30;
      v27 += v25;
      if (v26 == v30)
      {
        unint64_t v25 = v48;
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v31 = *(void *)(v25 + 16);
        a3 = v49;
        a1 = v50;
        uint64_t v13 = v45;
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
    a1 = v50;
    uint64_t v39 = v51;
    sub_100138AC8(v30, v51);
    sub_100010360(v39, qword_10020CE78);
    uint64_t v40 = sub_1001BF2C0();
    uint64_t v13 = (uint64_t)v52;
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v40 - 8) + 16))(v52, v49, v40);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(v13 + *(int *)(v12 + 52), a4, v28);
    a3 = *a1;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_20;
    }
    goto LABEL_28;
  }
  unint64_t v31 = 0;
LABEL_8:
  unint64_t v32 = v31 - v53;
  uint64_t v6 = (uint64_t)v56;
  if ((uint64_t)v31 < v53)
  {
LABEL_15:
    uint64_t v34 = sub_1001BF2C0();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v6, a3, v34);
    uint64_t v35 = v6 + *(int *)(v12 + 52);
    uint64_t v36 = sub_1001BF950();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(v35, a4, v36);
    a3 = *a1;
    if (swift_isUniquelyReferenced_nonNull_native())
    {
LABEL_16:
      unint64_t v38 = *(void *)(a3 + 16);
      unint64_t v37 = *(void *)(a3 + 24);
      if (v38 >= v37 >> 1) {
        a3 = sub_1000E42F0(v37 > 1, v38 + 1, 1, a3);
      }
      *(void *)(a3 + 16) = v38 + 1;
      sub_10002C318(v6, a3+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * v38, qword_10020CE78);
      uint64_t result = 0;
LABEL_23:
      *a1 = a3;
      return result;
    }
LABEL_25:
    a3 = sub_1000E42F0(0, *(void *)(a3 + 16) + 1, 1, a3);
    goto LABEL_16;
  }
  if (__OFSUB__(v31, v53))
  {
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v33 = v32 + 1;
  if (__OFADD__(v32, 1))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    a3 = sub_1000E42F0(0, *(void *)(a3 + 16) + 1, 1, a3);
LABEL_20:
    unint64_t v41 = v46;
    unint64_t v43 = *(void *)(a3 + 16);
    unint64_t v42 = *(void *)(a3 + 24);
    if (v43 >= v42 >> 1) {
      a3 = sub_1000E42F0(v42 > 1, v43 + 1, 1, a3);
    }
    *(void *)(a3 + 16) = v43 + 1;
    sub_10002C318(v13, a3 + v41 + v43 * v25, qword_10020CE78);
    uint64_t result = 1;
    goto LABEL_23;
  }
  if (v32 == -1) {
    goto LABEL_15;
  }
  if ((v33 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v31 >= v33)
  {
    sub_1000D6630(0, v33);
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_100138AC8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = sub_100104114(v5);
  }
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v7 = v6 - 1;
  uint64_t v8 = *(void *)(sub_100003918(qword_10020CE78) - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = v5 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)) + v9 * a1;
  uint64_t result = sub_10002C318(v10, a2, qword_10020CE78);
  if ((uint64_t)(v7 - a1) < 0)
  {
LABEL_15:
    uint64_t result = sub_1001C15D0();
    __break(1u);
    return result;
  }
  if (v9 > 0 || v10 >= v10 + v9 + v9 * (v7 - a1))
  {
    uint64_t result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (v9)
  {
    uint64_t result = swift_arrayInitWithTakeBackToFront();
  }
  *(void *)(v5 + 16) = v7;
  *uint64_t v2 = v5;
  return result;
}

void sub_100138C50(uint64_t a1)
{
  uint64_t v3 = sub_100003918(&qword_10020C370);
  __chkstk_darwin(v3 - 8, v4);
  unint64_t v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1001BF0B0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = &v18[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10003282C(v1 + qword_100208338, (uint64_t)v6, &qword_10020C370);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100010360((uint64_t)v6, &qword_10020C370);
    uint64_t v12 = sub_1001C0330();
    os_log_type_t v13 = sub_1001C11D0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "declining to persist lrucache without location", v14, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    uint64_t v15 = (*(uint64_t (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32))(v11, v6, v7);
    __chkstk_darwin(v15, v16);
    *(void *)&v18[-32] = v1;
    *(void *)&v18[-24] = a1;
    *(void *)&v18[-16] = v11;
    uint64_t v17 = (os_unfair_lock_s *)(v1 + qword_100208340);
    os_unfair_lock_lock((os_unfair_lock_t)(v1 + qword_100208340));
    sub_10015D9B4((uint64_t)&v17[2]);
    os_unfair_lock_unlock(v17);
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v11, v7);
  }
}

void sub_100138EB8(uint64_t a1)
{
  uint64_t v3 = sub_100103DD4((uint64_t (*)(unint64_t))sub_1001048E8);
  int64_t v4 = *(void *)(*(void *)a1 + 16);
  if (v4 < v3)
  {
    __break(1u);
  }
  else
  {
    sub_1000D6630(v3, v4);
    swift_bridgeObjectRetain();
    sub_100003918(&qword_10020E0C8);
    sub_10015D9EC();
    uint64_t v5 = sub_1001BEF10();
    if (v1)
    {
      swift_bridgeObjectRelease();
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v9 = sub_1001C0330();
      os_log_type_t v10 = sub_1001C11F0();
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = (uint8_t *)swift_slowAlloc();
        uint64_t v12 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v11 = 138412290;
        swift_errorRetain();
        uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
        sub_1001C1310();
        void *v12 = v13;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v9, v10, "failed to archive LRUCache: %@", v11, 0xCu);
        sub_100003918(&qword_100207DA8);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        swift_errorRelease();
      }
      else
      {
        swift_errorRelease();

        swift_errorRelease();
        swift_errorRelease();
      }
    }
    else
    {
      uint64_t v7 = v5;
      unint64_t v8 = v6;
      swift_bridgeObjectRelease();
      sub_1001BF1A0();
      sub_10000792C(v7, v8);
    }
  }
}

unint64_t sub_100139138()
{
  uint64_t v1 = sub_1001BF810();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100003918(&qword_10020E070);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003282C(v0, (uint64_t)v9, &qword_10020E070);
  unint64_t v10 = 0x696C616974696E49;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      swift_release();
      unint64_t v10 = 0x2074736575716552;
      break;
    case 2u:
      swift_release();
      unint64_t v10 = 0xD000000000000016;
      break;
    case 3u:
      unint64_t v10 = 0x64656873696E6946;
      break;
    case 4u:
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v9, v1);
      uint64_t v12 = 0;
      unint64_t v13 = 0xE000000000000000;
      sub_1001C1420(18);
      swift_bridgeObjectRelease();
      uint64_t v12 = 0x282064656C696146;
      unint64_t v13 = 0xEF203A726F727265;
      sub_1001627A0(&qword_100208C38, (void (*)(uint64_t))&type metadata accessor for TrustedCloudComputeError);
      v14._uint64_t countAndFlagsBits = sub_1001C1780();
      sub_1001C0D00(v14);
      swift_bridgeObjectRelease();
      v15._uint64_t countAndFlagsBits = 41;
      v15._object = (void *)0xE100000000000000;
      sub_1001C0D00(v15);
      unint64_t v10 = v12;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
      break;
    case 5u:
      return v10;
    case 6u:
      unint64_t v10 = 0xD000000000000015;
      break;
    case 7u:
      unint64_t v10 = 0x6C65732065646F4ELL;
      break;
    default:
      swift_release();
      unint64_t v10 = 0xD000000000000022;
      break;
  }
  return v10;
}

uint64_t sub_10013946C(uint64_t a1, char a2)
{
  uint64_t result = 0x6C65732065646F4ELL;
  switch(a2)
  {
    case 1:
      return result;
    case 2:
      uint64_t result = 0x64656873696E6946;
      break;
    case 3:
      unint64_t v4 = 0;
      swift_errorRetain();
      sub_1001C1420(18);
      v7._uint64_t countAndFlagsBits = 0x282064656C696146;
      v7._object = (void *)0xEF203A726F727265;
      sub_1001C0D00(v7);
      sub_100003918(&qword_100208C98);
      sub_1001C1510();
      v8._uint64_t countAndFlagsBits = 41;
      v8._object = (void *)0xE100000000000000;
      sub_1001C0D00(v8);
      sub_100028984(a1, 3);
      goto LABEL_6;
    case 4:
      if (a1) {
        uint64_t result = 0x656B6F5468747541;
      }
      else {
        uint64_t result = 0x696C616974696E49;
      }
      break;
    default:
      sub_1001C1420(32);
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD00000000000001DLL;
      if (__OFSUB__(0x10000, a1))
      {
        __break(1u);
        JUMPOUT(0x100139668);
      }
      v5._uint64_t countAndFlagsBits = sub_1001C1780();
      sub_1001C0D00(v5);
      swift_bridgeObjectRelease();
      v6._uint64_t countAndFlagsBits = 41;
      v6._object = (void *)0xE100000000000000;
      sub_1001C0D00(v6);
LABEL_6:
      uint64_t result = v4;
      break;
  }
  return result;
}

uint64_t sub_10013967C(char *a1, char *a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t *a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v19 = v18;
  uint64_t v165 = a8;
  uint64_t v164 = a7;
  uint64_t v163 = a6;
  uint64_t v162 = a5;
  uint64_t v161 = a4;
  uint64_t v160 = a3;
  uint64_t v186 = a2;
  uint64_t v187 = a1;
  uint64_t v180 = a18;
  uint64_t v181 = a16;
  uint64_t v182 = a15;
  uint64_t v183 = a14;
  uint64_t v184 = a13;
  LODWORD(v168) = a12;
  uint64_t v167 = a11;
  uint64_t v185 = a9;
  uint64_t v166 = a10;
  uint64_t v20 = sub_1001BF310();
  uint64_t v188 = *(void *)(v20 - 8);
  uint64_t v189 = v20;
  __chkstk_darwin(v20, v21);
  uint64_t v150 = (char *)&v146 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1001BF910();
  os_log_t v176 = *(os_log_t *)(v23 - 8);
  uint64_t v177 = v23;
  __chkstk_darwin(v23, v24);
  uint64_t v175 = (char *)&v146 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = sub_1001C02A0();
  uint64_t v174 = *(void *)(v156 - 8);
  uint64_t v27 = __chkstk_darwin(v156, v26);
  uint64_t v173 = (char *)&v146 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v29);
  uint64_t v152 = (char *)&v146 - v30;
  uint64_t v31 = sub_1001C0340();
  uint64_t v178 = *(void *)(v31 - 8);
  uint64_t v179 = v31;
  __chkstk_darwin(v31, v32);
  long long v170 = (char *)&v146 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v172 = sub_1001C02D0();
  uint64_t v171 = *(void *)(v172 - 8);
  __chkstk_darwin(v172, v34);
  uint64_t v169 = (char *)&v146 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v159 = sub_1001BF340();
  uint64_t v158 = *(void *)(v159 - 8);
  __chkstk_darwin(v159, v36);
  unsigned __int8 v157 = (char *)&v146 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = sub_1001C14C0();
  uint64_t v154 = *(void *)(v155 - 8);
  __chkstk_darwin(v155, v38);
  uint64_t v40 = (char *)&v146 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = sub_1001BF2C0();
  uint64_t v41 = *(void *)(v153 - 8);
  __chkstk_darwin(v153, v42);
  uint64_t v44 = (char *)&v146 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_1001BEDD0();
  __chkstk_darwin(v45 - 8, v46);
  uint64_t v47 = sub_100003918(&qword_100208CA8);
  unint64_t v48 = (int *)(v47 - 8);
  __chkstk_darwin(v47, v49);
  uint64_t v51 = (char *)&v146 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = (_DWORD *)(v19 + *(void *)(*(void *)v19 + 128));
  sub_100003918(&qword_10020E160);
  swift_storeEnumTagMultiPayload();
  sub_100003918(&qword_10020E070);
  swift_storeEnumTagMultiPayload();
  int64_t v53 = &v51[v48[20]];
  *(void *)int64_t v53 = 0;
  *((void *)v53 + 1) = 0;
  *((void *)v53 + 2) = 0;
  v53[24] = 2;
  unint64_t v54 = &v51[v48[21]];
  *(void *)unint64_t v54 = 0;
  v54[8] = 4;
  uint64_t v55 = &v51[v48[22]];
  *(void *)uint64_t v55 = 0;
  *((void *)v55 + 1) = 0;
  *((void *)v55 + 2) = 0;
  *((void *)v55 + 3) = 0xA000000000000000;
  char v56 = &v51[v48[23]];
  *(void *)char v56 = 0;
  *((void *)v56 + 1) = 0;
  *((void *)v56 + 2) = 0;
  v56[24] = 2;
  uint64_t v57 = &v51[v48[24]];
  *(void *)uint64_t v57 = 0;
  *((void *)v57 + 1) = 0;
  *((void *)v57 + 2) = 0;
  v57[24] = 2;
  unint64_t v58 = &v51[v48[25]];
  *(void *)unint64_t v58 = 0;
  *((void *)v58 + 1) = 0;
  v58[16] = 2;
  uint64_t v59 = &v51[v48[26]];
  *(void *)uint64_t v59 = 0;
  *((void *)v59 + 1) = 0;
  *((void *)v59 + 2) = 0;
  v59[24] = 1;
  uint64_t v60 = &v51[v48[27]];
  *(void *)uint64_t v60 = 0;
  *((void *)v60 + 1) = 0;
  *((void *)v60 + 2) = 0;
  v60[24] = 1;
  char v61 = &v51[v48[28]];
  *(void *)char v61 = 0;
  *((void *)v61 + 1) = 0;
  v61[16] = 1;
  uint64_t v62 = &v51[v48[29]];
  *(void *)uint64_t v62 = 0;
  *((void *)v62 + 1) = 0;
  v62[16] = 1;
  uint64_t v63 = &v51[v48[30]];
  *(void *)uint64_t v63 = 0;
  *((void *)v63 + 1) = 0;
  v63[16] = 1;
  uint64_t v64 = &v51[v48[31]];
  *(void *)uint64_t v64 = 0;
  v64[8] = 1;
  uint64_t v65 = &v51[v48[32]];
  *(void *)uint64_t v65 = 0;
  *((void *)v65 + 1) = 0;
  uint64_t v66 = v48[33];
  *(void *)&v51[v66] = sub_10005612C((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v67 = v48[34];
  uint64_t v68 = v152;
  *(void *)&v51[v67] = 0;
  *uint64_t v52 = 0;
  uint64_t v69 = (char *)v52 + *(int *)(sub_100003918(&qword_100208C90) + 28);
  uint64_t v70 = sub_100003918(&qword_10020E6F8);
  bzero(v69, *(void *)(*(void *)(v70 - 8) + 64));
  sub_10002C318((uint64_t)v51, (uint64_t)v69, &qword_100208CA8);
  uint64_t v71 = *(void *)(*(void *)v19 + 312);
  sub_1001BEE10();
  swift_allocObject();
  uint64_t v72 = sub_1001BEE00();
  sub_1001BEDB0();
  sub_1001BEDE0();
  *(void *)(v19 + v71) = v72;
  uint64_t v73 = v188 + 16;
  char v74 = *(void (**)(uint64_t, uint64_t, uint64_t))(v188 + 16);
  v74(v19 + *(void *)(*(void *)v19 + 144), (uint64_t)v187, v189);
  uint64_t v147 = v19 + *(void *)(*(void *)v19 + 152);
  uint64_t v149 = v73;
  uint64_t v148 = v74;
  ((void (*)(void))v74)();
  uint64_t v75 = v19 + *(void *)(*(void *)v19 + 136);
  uint64_t v76 = sub_1001C14E0();
  uint64_t v151 = *(void *)(v76 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v151 + 16))(v75, v181, v76);
  _s20privatecloudcomputed8LRUCacheC10addToCache3now5valueSb10Foundation4DateV_xtFfA__0();
  (*(void (**)(uint64_t, char *, uint64_t))(v41 + 32))(v19 + *(void *)(*(void *)v19 + 160), v44, v153);
  uint64_t v77 = v156;
  sub_1001627A0(&qword_100208C80, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  uint64_t v153 = v76;
  sub_1001C18D0();
  (*(void (**)(uint64_t, char *, uint64_t))(v154 + 32))(v19 + *(void *)(*(void *)v19 + 168), v40, v155);
  uint64_t v78 = (void *)(v19 + *(void *)(*(void *)v19 + 176));
  uint64_t v79 = v161;
  void *v78 = v160;
  v78[1] = v79;
  char v80 = (uint64_t *)(v19 + *(void *)(*(void *)v19 + 184));
  uint64_t v81 = v163;
  *char v80 = v162;
  v80[1] = v81;
  uint64_t v82 = (uint64_t **)(v19 + *(void *)(*(void *)v19 + 192));
  uint64_t v83 = v165;
  *uint64_t v82 = v164;
  v82[1] = v83;
  sub_10003282C(v185, v19 + *(void *)(*(void *)v19 + 200), qword_100208CD0);
  uint64_t v84 = (uint64_t *)(v19 + *(void *)(*(void *)v19 + 208));
  uint64_t v85 = v167;
  uint64_t v164 = v84;
  *uint64_t v84 = v166;
  v84[1] = v85;
  *(unsigned char *)(v19 + *(void *)(*(void *)v19 + 216)) = v168;
  uint64_t v86 = v19 + *(void *)(*(void *)v19 + 224);
  uint64_t v87 = sub_1001BF950();
  uint64_t v167 = *(void *)(v87 - 8);
  uint64_t v88 = *(void (**)(uint64_t, uint64_t))(v167 + 16);
  uint64_t v168 = v87;
  v88(v86, v184);
  uint64_t v89 = *(void *)(v180 + 168);
  uint64_t v90 = (void *)(v19 + *(void *)(*(void *)v19 + 232));
  *uint64_t v90 = *(void *)(v180 + 160);
  v90[1] = v89;
  swift_bridgeObjectRetain();
  uint64_t v91 = v157;
  sub_1001BF330();
  uint64_t v92 = sub_1001BF320();
  uint64_t v94 = v93;
  (*(void (**)(char *, uint64_t))(v158 + 8))(v91, v159);
  uint64_t v95 = (uint64_t *)(v19 + *(void *)(*(void *)v19 + 240));
  *uint64_t v95 = v92;
  v95[1] = v94;
  uint64_t v96 = v19 + *(void *)(*(void *)v19 + 248);
  uint64_t v97 = v179;
  os_log_type_t v98 = *(void (**)(uint64_t, uint64_t, uint64_t))(v178 + 16);
  v98(v96, v183, v179);
  uint64_t v162 = sub_1001627A0(qword_100207DC0, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v191 = sub_1001C1780();
  uint64_t v192 = v99;
  v193._uint64_t countAndFlagsBits = 58;
  v193._object = (void *)0xE100000000000000;
  sub_1001C0D00(v193);
  uint64_t v100 = v192;
  uint64_t v101 = (uint64_t *)(v19 + *(void *)(*(void *)v19 + 256));
  *uint64_t v101 = v191;
  v101[1] = v100;
  uint64_t v161 = v101;
  uint64_t v102 = v19 + *(void *)(*(void *)v19 + 264);
  uint64_t v103 = sub_100003918(qword_100208000);
  uint64_t v165 = *(uint64_t **)(v103 - 8);
  uint64_t v104 = (void (*)(uint64_t, uint64_t))v165[2];
  uint64_t v166 = v103;
  v104(v102, v182);
  uint64_t v163 = v96;
  v98((uint64_t)v170, v96, v97);
  uint64_t v105 = v173;
  uint64_t v106 = v169;
  sub_1001C02B0();
  (*(void (**)(uint64_t, char *, uint64_t))(v171 + 32))(v19 + *(void *)(*(void *)v19 + 272), v106, v172);
  sub_1001C02C0();
  sub_1001C0280();
  uint64_t v107 = v19 + *(void *)(*(void *)v19 + 280);
  uint64_t v108 = v174;
  (*(void (**)(uint64_t, char *, uint64_t))(v174 + 32))(v107, v68, v77);
  char v109 = *(void (**)(char *, uint64_t, uint64_t))(v108 + 16);
  v109(v105, v107, v77);
  uint64_t v110 = sub_1001C02C0();
  os_signpost_type_t v111 = sub_1001C1290();
  if (sub_1001C12D0())
  {
    v109(v68, (uint64_t)v105, v77);
    uint64_t v112 = v68;
    uint64_t v113 = v105;
    char v114 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v114 = 0;
    os_signpost_id_t v115 = sub_1001C0290();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v110, v111, v115, "FullTrustedRequest", "", v114, 2u);
    uint64_t v105 = v113;
    uint64_t v68 = v112;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v108 + 8))(v112, v77);
  }
  else
  {
  }
  uint64_t v116 = v188;
  uint64_t v117 = v164;
  uint64_t v188 = a17;
  v109(v68, (uint64_t)v105, v77);
  sub_1001C0310();
  swift_allocObject();
  uint64_t v118 = sub_1001C0300();
  (*(void (**)(char *, uint64_t))(v108 + 8))(v105, v77);
  *(void *)(v19 + *(void *)(*(void *)v19 + 288)) = v118;
  uint64_t v120 = *v117;
  uint64_t v119 = v117[1];
  uint64_t v121 = v175;
  os_log_t v122 = v176;
  uint64_t v123 = v177;
  ((void (*)(char *, void, uint64_t))v176[13].isa)(v175, enum case for TC2EnvironmentNames.production(_:), v177);
  uint64_t v124 = sub_1001BF900();
  uint64_t v126 = v125;
  ((void (*)(char *, uint64_t))v122[1].isa)(v121, v123);
  if (v120 == v124 && v119 == v126)
  {
    swift_bridgeObjectRelease();
    uint64_t v127 = v189;
  }
  else
  {
    char v128 = sub_1001C1840();
    swift_bridgeObjectRelease();
    uint64_t v127 = v189;
    if ((v128 & 1) == 0)
    {
      sub_1000161E0(v180);
      (*(void (**)(uint64_t, uint64_t))(v151 + 8))(v181, v153);
      ((void (*)(uint64_t, uint64_t))v165[1])(v182, v166);
      (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v183, v179);
      (*(void (**)(uint64_t, uint64_t))(v167 + 8))(v184, v168);
      sub_100010360(v185, qword_100208CD0);
      uint64_t v144 = *(void (**)(uint64_t, uint64_t))(v116 + 8);
      v144((uint64_t)v186, v127);
      v144((uint64_t)v187, v127);
      v148(v19 + *(void *)(*(void *)v19 + 296), v147, v127);
      goto LABEL_12;
    }
  }
  uint64_t v129 = v150;
  sub_1001BF300();
  uint64_t v130 = v19 + *(void *)(*(void *)v19 + 296);
  (*(void (**)(uint64_t, char *, uint64_t))(v116 + 32))(v130, v129, v127);
  swift_retain_n();
  uint64_t v131 = sub_1001C0330();
  os_log_type_t v132 = sub_1001C1200();
  int v133 = v132;
  if (os_log_type_enabled(v131, v132))
  {
    uint64_t v134 = swift_slowAlloc();
    os_log_t v176 = v131;
    uint64_t v135 = v134;
    uint64_t v177 = swift_slowAlloc();
    uint64_t v191 = v177;
    *(_DWORD *)uint64_t v135 = 136315394;
    LODWORD(v175) = v133;
    uint64_t v136 = *v161;
    unint64_t v137 = v161[1];
    swift_bridgeObjectRetain();
    uint64_t v190 = sub_1000DF238(v136, v137, &v191);
    sub_1001C1310();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v135 + 12) = 2080;
    v148((uint64_t)v129, v130, v127);
    swift_release();
    uint64_t v138 = sub_1001C1780();
    unint64_t v140 = v139;
    uint64_t v141 = *(void (**)(char *, uint64_t))(v116 + 8);
    v141(v129, v127);
    uint64_t v190 = sub_1000DF238(v138, v140, &v191);
    sub_1001C1310();
    swift_release();
    swift_bridgeObjectRelease();
    os_log_t v142 = v176;
    _os_log_impl((void *)&_mh_execute_header, v176, (os_log_type_t)v175, "%s RequestIDForEventReporting: %s", (uint8_t *)v135, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_1000161E0(v180);
    (*(void (**)(uint64_t, uint64_t))(v151 + 8))(v181, v153);
    ((void (*)(uint64_t, uint64_t))v165[1])(v182, v166);
    (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v183, v179);
    (*(void (**)(uint64_t, uint64_t))(v167 + 8))(v184, v168);
    sub_100010360(v185, qword_100208CD0);
    v141(v186, v127);
    v141(v187, v127);
  }
  else
  {
    swift_release_n();

    sub_1000161E0(v180);
    (*(void (**)(uint64_t, uint64_t))(v151 + 8))(v181, v153);
    ((void (*)(uint64_t, uint64_t))v165[1])(v182, v166);
    (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v183, v179);
    (*(void (**)(uint64_t, uint64_t))(v167 + 8))(v184, v168);
    sub_100010360(v185, qword_100208CD0);
    uint64_t v143 = *(void (**)(uint64_t, uint64_t))(v116 + 8);
    v143((uint64_t)v186, v127);
    v143((uint64_t)v187, v127);
  }
LABEL_12:
  *(void *)(v19 + *(void *)(*(void *)v19 + 304)) = v188;
  return v19;
}

uint64_t sub_10013AAB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v53 = a1;
  uint64_t v3 = sub_1001BF950();
  uint64_t v49 = *(void *)(v3 - 8);
  unint64_t v50 = v3;
  __chkstk_darwin(v3, v4);
  char v56 = (char *)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100003918(qword_100208CD0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v55 = (uint64_t)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1001BF2C0();
  uint64_t v46 = *(void *)(v9 - 8);
  uint64_t v47 = v9;
  __chkstk_darwin(v9, v10);
  unint64_t v54 = (char *)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1001BF310();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v15 = __chkstk_darwin(v12, v14);
  uint64_t v17 = (char *)v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v18);
  uint64_t v20 = (char *)v44 - v19;
  uint64_t v21 = sub_100003918(&qword_100208CA8);
  __chkstk_darwin(v21, v22);
  uint64_t v24 = (char *)v44 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = (os_unfair_lock_s *)((char *)v1 + *(void *)(*v1 + 128));
  os_unfair_lock_lock(v25);
  uint64_t v26 = sub_100003918(&qword_100208C90);
  sub_100162AE4((uint64_t)v25 + *(int *)(v26 + 28), (uint64_t)v24);
  os_unfair_lock_unlock(v25);
  uint64_t v27 = (uint64_t)v2 + *(void *)(*v2 + 144);
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v51 = v20;
  v28(v20, v27, v12);
  uint64_t v29 = (uint64_t)v2 + *(void *)(*v2 + 152);
  uint64_t v52 = v17;
  v28(v17, v29, v12);
  uint64_t v30 = *v1;
  uint64_t v31 = (uint64_t *)((char *)v2 + *(void *)(*v2 + 208));
  uint64_t v32 = v31[1];
  uint64_t v48 = *v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v54, (uint64_t)v1 + *(void *)(v30 + 160), v47);
  uint64_t v33 = *v1;
  uint64_t v34 = (uint64_t *)((char *)v2 + *(void *)(*v2 + 176));
  uint64_t v35 = v34[1];
  uint64_t v47 = *v34;
  uint64_t v46 = *(uint64_t *)((char *)v1 + *(void *)(v33 + 192));
  sub_10003282C((uint64_t)v1 + *(void *)(v33 + 200), v55, qword_100208CD0);
  uint64_t v36 = *v1;
  if (*((unsigned char *)v1 + *(void *)(*v1 + 216)))
  {
    if (*((unsigned char *)v1 + *(void *)(*v1 + 216)) == 1)
    {
      unint64_t v45 = 0xE300000000000000;
      uint64_t v37 = 7827308;
    }
    else
    {
      unint64_t v45 = 0xEA0000000000646ELL;
      uint64_t v37 = 0x756F72676B636162;
    }
  }
  else
  {
    unint64_t v45 = 0xE400000000000000;
    uint64_t v37 = 1751607656;
  }
  v44[4] = v37;
  (*(void (**)(char *, uint64_t, unint64_t))(v49 + 16))(v56, (uint64_t)v1 + *(void *)(v36 + 224), v50);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v38 = sub_100139138();
  uint64_t v49 = v39;
  unint64_t v50 = v38;
  uint64_t v40 = sub_10013946C(*(void *)&v24[*(int *)(v21 + 76)], v24[*(int *)(v21 + 76) + 8]);
  v44[2] = v41;
  v44[3] = v40;
  uint64_t v57 = 0;
  unint64_t v58 = 0xE000000000000000;
  sub_10010F1D8(*(Swift::String *)&v24[*(int *)(v21 + 80)], *(void *)&v24[*(int *)(v21 + 80) + 16], *(void *)&v24[*(int *)(v21 + 80) + 24]);
  v44[0] = v32;
  v44[1] = v35;
  swift_bridgeObjectRetain();
  uint64_t v42 = swift_bridgeObjectRetain();
  sub_10011A8D8(v42);
  swift_bridgeObjectRelease();
  sub_1001BFC60();
  return sub_100010360((uint64_t)v24, &qword_100208CA8);
}

uint64_t sub_10013B088@<X0>(void *a1@<X8>)
{
  v302 = a1;
  uint64_t v298 = sub_1001BF810();
  uint64_t v297 = *(void *)(v298 - 8);
  uint64_t v3 = __chkstk_darwin(v298, v2);
  v296 = (char *)&v292 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3, v5);
  v301 = (char *)&v292 - v6;
  uint64_t v303 = sub_100003918(&qword_10020E070);
  __chkstk_darwin(v303, v7);
  v304 = (char *)&v292 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100003918(&qword_10020E158);
  __chkstk_darwin(v9 - 8, v10);
  v299 = (char *)&v292 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v295 = sub_1001BF0B0();
  uint64_t v294 = *(void *)(v295 - 8);
  __chkstk_darwin(v295, v12);
  v293 = (char *)&v292 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100003918(&qword_100208AA0);
  uint64_t v16 = __chkstk_darwin(v14 - 8, v15);
  uint64_t v300 = (uint64_t)&v292 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v18);
  uint64_t v306 = (uint64_t)&v292 - v19;
  uint64_t v307 = sub_100003918(&qword_10020E160);
  __chkstk_darwin(v307, v20);
  uint64_t v308 = (uint64_t)&v292 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v312 = sub_100003918(&qword_100208CA8);
  __chkstk_darwin(v312, v22);
  uint64_t v316 = (uint64_t)&v292 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v24 = sub_1001BF2C0();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24, v26);
  uint64_t v28 = (char *)&v292 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1001BF450();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v32 = __chkstk_darwin(v29, v31);
  uint64_t v34 = (char *)&v292 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32, v35);
  uint64_t v37 = (unint64_t *)((char *)&v292 - v36);
  unint64_t v38 = sub_10005494C((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v39 = v1;
  uint64_t v40 = (unint64_t *)((char *)v1 + *(void *)(*v1 + 176));
  unint64_t v41 = v40[1];
  unint64_t v310 = *v40;
  unint64_t v311 = v41;
  swift_bridgeObjectRetain();
  sub_1001BF2B0();
  sub_1001BF280();
  double v43 = v42;
  (*(void (**)(char *, int64_t))(v25 + 8))(v28, v24);
  if ((~*(void *)&v43 & 0x7FF0000000000000) == 0)
  {
LABEL_148:
    __break(1u);
    goto LABEL_149;
  }
  if (v43 <= -9.22337204e18)
  {
LABEL_149:
    __break(1u);
    goto LABEL_150;
  }
  if (v43 >= 9.22337204e18)
  {
LABEL_150:
    __break(1u);
    goto LABEL_151;
  }
  *uint64_t v37 = (uint64_t)v43;
  v318 = *(void (**)(unint64_t *))(v30 + 104);
  unsigned int v314 = enum case for EventValue.int(_:);
  v318(v37);
  uint64_t v44 = *(void (**)(char *, unint64_t *, uint64_t))(v30 + 32);
  v44(v34, v37, v29);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v327 = (void (*)(void, void, void))v38;
  sub_1000EA9E8((uint64_t)v34, 0, isUniquelyReferenced_nonNull_native);
  uint64_t v46 = v327;
  swift_bridgeObjectRelease();
  uint64_t v47 = (unint64_t *)((char *)v1 + *(void *)(*v1 + 208));
  unint64_t v48 = v47[1];
  *uint64_t v37 = *v47;
  v37[1] = v48;
  uint64_t v49 = v34;
  uint64_t v50 = v29;
  uint64_t v51 = (uint64_t)v49;
  uint64_t v52 = enum case for EventValue.string(_:);
  ((void (*)(unint64_t *, void, uint64_t))v318)(v37, enum case for EventValue.string(_:), v50);
  v44((char *)v51, v37, v50);
  swift_bridgeObjectRetain();
  char v53 = swift_isUniquelyReferenced_nonNull_native();
  v327 = v46;
  sub_1000EA9E8(v51, 1, v53);
  unint64_t v54 = v327;
  swift_bridgeObjectRelease();
  uint64_t v55 = (unint64_t *)((char *)v39 + *(void *)(*v39 + 232));
  unint64_t v56 = v55[1];
  *uint64_t v37 = *v55;
  v37[1] = v56;
  unsigned int v309 = v52;
  uint64_t v57 = v52;
  uint64_t v58 = v30 + 32;
  uint64_t v59 = v39;
  uint64_t v60 = (os_unfair_lock_s *)(v30 + 104);
  ((void (*)(unint64_t *, uint64_t, uint64_t))v318)(v37, v57, v50);
  char v61 = (void (*)(uint64_t, unint64_t *, uint64_t))v44;
  v44((char *)v51, v37, v50);
  swift_bridgeObjectRetain();
  char v62 = swift_isUniquelyReferenced_nonNull_native();
  v327 = v54;
  sub_1000EA9E8(v51, 2, v62);
  uint64_t v63 = v327;
  swift_bridgeObjectRelease();
  uint64_t v64 = (unint64_t *)((char *)v59 + *(void *)(*v59 + 192));
  unint64_t v65 = v64[1];
  if (v65)
  {
    *uint64_t v37 = *v64;
    v37[1] = v65;
    uint64_t v66 = v309;
    ((void (*)(unint64_t *, void, uint64_t))v318)(v37, v309, v50);
    v61(v51, v37, v50);
    swift_bridgeObjectRetain();
    char v67 = swift_isUniquelyReferenced_nonNull_native();
    v327 = v63;
    sub_1000EA9E8(v51, 3, v67);
    uint64_t v63 = v327;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v66 = v309;
  }
  unint64_t v68 = v311;
  *uint64_t v37 = v310;
  v37[1] = v68;
  ((void (*)(unint64_t *, uint64_t, uint64_t))v318)(v37, v66, v50);
  v61(v51, v37, v50);
  swift_bridgeObjectRetain();
  char v69 = swift_isUniquelyReferenced_nonNull_native();
  v327 = v63;
  sub_1000EA9E8(v51, 5, v69);
  uint64_t v70 = v327;
  swift_bridgeObjectRelease();
  uint64_t v71 = *v59;
  uint64_t v72 = (unint64_t *)((char *)v59 + *(void *)(*v59 + 184));
  unint64_t v73 = v72[1];
  uint64_t v317 = v58;
  if (v73)
  {
    *uint64_t v37 = *v72;
    v37[1] = v73;
    ((void (*)(unint64_t *, uint64_t, uint64_t))v318)(v37, v66, v50);
    v61(v51, v37, v50);
    swift_bridgeObjectRetain();
    char v74 = swift_isUniquelyReferenced_nonNull_native();
    v327 = v70;
    sub_1000EA9E8(v51, 6, v74);
    v313 = (void (*)(uint64_t, unint64_t *, uint64_t))v327;
    swift_bridgeObjectRelease();
    uint64_t v71 = *v59;
    uint64_t v75 = v60;
    uint64_t v76 = v59;
    uint64_t v77 = v61;
  }
  else
  {
    uint64_t v75 = v60;
    uint64_t v76 = v59;
    uint64_t v77 = v61;
    v313 = (void (*)(uint64_t, unint64_t *, uint64_t))v70;
  }
  uint64_t v78 = (unint64_t *)((char *)v76 + *(void *)(v71 + 240));
  unint64_t v79 = v78[1];
  *uint64_t v37 = *v78;
  v37[1] = v79;
  uint64_t v80 = v66;
  uint64_t v81 = v66;
  uint64_t v82 = (void (*)(unint64_t *, uint64_t, uint64_t))v318;
  uint64_t v83 = v75;
  ((void (*)(unint64_t *, uint64_t, uint64_t))v318)(v37, v81, v50);
  uint64_t v305 = v51;
  v77(v51, v37, v50);
  swift_bridgeObjectRetain();
  uint64_t v84 = (void (*)(void, void, void))v313;
  char v85 = swift_isUniquelyReferenced_nonNull_native();
  v327 = v84;
  sub_1000EA9E8(v51, 7, v85);
  uint64_t v86 = v327;
  swift_bridgeObjectRelease();
  *uint64_t v37 = sub_1001BF2D0();
  v37[1] = v87;
  v315 = v83;
  v82(v37, v80, v50);
  uint64_t v88 = v305;
  v313 = v77;
  v77(v305, v37, v50);
  char v89 = swift_isUniquelyReferenced_nonNull_native();
  v327 = v86;
  sub_1000EA9E8(v88, 8, v89);
  uint64_t v90 = v327;
  swift_bridgeObjectRelease();
  uint64_t v91 = (os_unfair_lock_s *)((char *)v76 + *(void *)(*v76 + 128));
  os_unfair_lock_lock(v91);
  uint64_t v92 = sub_100003918(&qword_100208C90);
  uint64_t v93 = v316;
  sub_100156C78((uint64_t)v91 + *(int *)(v92 + 28), v316);
  uint64_t v94 = v88;
  os_unfair_lock_unlock(v91);
  uint64_t v95 = v308;
  sub_10003282C(v93, v308, &qword_10020E160);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    int64_t v24 = *(void *)(v95 + 8);
    uint64_t v107 = sub_100003918(&qword_100208A98);
    sub_10002C318(v95 + *(int *)(v107 + 48), v306, &qword_100208AA0);
    sub_1001BF440();
    v313(v88, v37, v50);
    char v108 = swift_isUniquelyReferenced_nonNull_native();
    v327 = v90;
    sub_1000EA9E8(v88, 19, v108);
    char v109 = v327;
    swift_bridgeObjectRelease();
    uint64_t v110 = sub_1001C19D0();
    uint64_t v111 = 1000 * v110;
    if ((unsigned __int128)(v110 * (__int128)1000) >> 64 != (1000 * v110) >> 63) {
      goto LABEL_164;
    }
    sub_1001C19D0();
    if (__OFADD__(v111, v112 / 1000000000000000)) {
      goto LABEL_166;
    }
    *uint64_t v37 = v111 + v112 / 1000000000000000;
    ((void (*)(unint64_t *, void, uint64_t))v318)(v37, v314, v50);
    v313(v88, v37, v50);
    char v113 = swift_isUniquelyReferenced_nonNull_native();
    v327 = v109;
    sub_1000EA9E8(v88, 18, v113);
    uint64_t v90 = v327;
    swift_bridgeObjectRelease();
    uint64_t v114 = v300;
    sub_10003282C(v306, v300, &qword_100208AA0);
    uint64_t v115 = sub_1001C05B0();
    uint64_t v116 = *(void *)(v115 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v116 + 48))(v114, 1, v115) == 1)
    {
      sub_100010360(v114, &qword_100208AA0);
      uint64_t v117 = sub_1001C0420();
      uint64_t v118 = v299;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v117 - 8) + 56))(v299, 1, 1, v117);
      int64_t v24 = v312;
    }
    else
    {
      uint64_t v119 = v299;
      sub_1001C05A0();
      (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v114, v115);
      uint64_t v118 = v119;
      uint64_t v120 = sub_1001C0420();
      uint64_t v121 = *(void *)(v120 - 8);
      int v122 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v121 + 48))(v119, 1, v120);
      int64_t v24 = v312;
      if (v122 != 1)
      {
        if ((*(unsigned int (**)(char *, uint64_t))(v121 + 88))(v118, v120) != enum case for NWEndpoint.url(_:))
        {
          sub_100010360(v306, &qword_100208AA0);
          (*(void (**)(char *, uint64_t))(v121 + 8))(v118, v120);
          goto LABEL_23;
        }
        (*(void (**)(char *, uint64_t))(v121 + 96))(v118, v120);
        uint64_t v286 = v294;
        v287 = v293;
        v288 = v118;
        uint64_t v289 = v295;
        (*(void (**)(char *, char *, uint64_t))(v294 + 32))(v293, v288, v295);
        *uint64_t v37 = sub_1001BF000();
        v37[1] = v290;
        ((void (*)(unint64_t *, void, uint64_t))v318)(v37, v309, v50);
        v313(v88, v37, v50);
        char v291 = swift_isUniquelyReferenced_nonNull_native();
        v327 = v90;
        sub_1000EA9E8(v88, 21, v291);
        uint64_t v90 = v327;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v286 + 8))(v287, v289);
        uint64_t v123 = &qword_100208AA0;
        uint64_t v124 = v306;
        goto LABEL_22;
      }
    }
    sub_100010360(v306, &qword_100208AA0);
    uint64_t v123 = &qword_10020E158;
    uint64_t v124 = (uint64_t)v118;
LABEL_22:
    sub_100010360(v124, v123);
    goto LABEL_23;
  }
  if (EnumCaseMultiPayload != 1)
  {
    int64_t v24 = v312;
LABEL_23:
    uint64_t v106 = v316;
    goto LABEL_24;
  }
  int64_t v24 = *(void *)v95;
  sub_1001BF440();
  v313(v88, v37, v50);
  char v97 = swift_isUniquelyReferenced_nonNull_native();
  v327 = v90;
  sub_1000EA9E8(v88, 19, v97);
  os_log_type_t v98 = v327;
  swift_bridgeObjectRelease();
  uint64_t v99 = sub_1001C19D0();
  uint64_t v100 = 1000 * v99;
  if ((unsigned __int128)(v99 * (__int128)1000) >> 64 != (1000 * v99) >> 63) {
    goto LABEL_163;
  }
  sub_1001C19D0();
  if (__OFADD__(v100, v101 / 1000000000000000)) {
    goto LABEL_165;
  }
  *uint64_t v37 = v100 + v101 / 1000000000000000;
  ((void (*)(unint64_t *, void, uint64_t))v318)(v37, v314, v50);
  uint64_t v102 = v313;
  v313(v88, v37, v50);
  char v103 = swift_isUniquelyReferenced_nonNull_native();
  v327 = v98;
  sub_1000EA9E8(v88, 18, v103);
  uint64_t v104 = v327;
  swift_bridgeObjectRelease();
  swift_getErrorValue();
  Error.telemetryString.getter(v325, v326, v37);
  v102(v88, v37, v50);
  char v105 = swift_isUniquelyReferenced_nonNull_native();
  v327 = v104;
  sub_1000EA9E8(v88, 20, v105);
  uint64_t v90 = v327;
  swift_bridgeObjectRelease();
  swift_errorRelease();
  uint64_t v106 = v316;
  int64_t v24 = v312;
LABEL_24:
  uint64_t v125 = v106 + *(int *)(v24 + 84);
  uint64_t v126 = *(void *)v125;
  uint64_t v127 = *(void *)(v125 + 8);
  if (*(unsigned char *)(v125 + 24))
  {
    if (*(unsigned char *)(v125 + 24) != 1) {
      goto LABEL_33;
    }
    int64_t v24 = *(void *)(v125 + 16);
    swift_errorRetain();
    sub_1001BF440();
    v313(v88, v37, v50);
    char v128 = swift_isUniquelyReferenced_nonNull_native();
    v327 = v90;
    sub_1000EA9E8(v88, 13, v128);
    uint64_t v129 = v327;
    swift_bridgeObjectRelease();
    uint64_t v130 = sub_1001C19D0();
    uint64_t v131 = 1000 * v130;
    if ((unsigned __int128)(v130 * (__int128)1000) >> 64 != (1000 * v130) >> 63) {
      goto LABEL_167;
    }
    sub_1001C19D0();
    if (__OFADD__(v131, v132 / 1000000000000000)) {
      goto LABEL_169;
    }
    *uint64_t v37 = v131 + v132 / 1000000000000000;
    ((void (*)(unint64_t *, void, uint64_t))v318)(v37, v314, v50);
    int v133 = v313;
    v313(v88, v37, v50);
    char v134 = swift_isUniquelyReferenced_nonNull_native();
    v327 = v129;
    sub_1000EA9E8(v88, 12, v134);
    uint64_t v135 = v327;
    swift_bridgeObjectRelease();
    swift_getErrorValue();
    Error.telemetryString.getter(v323, v324, v37);
    v133(v88, v37, v50);
    char v136 = swift_isUniquelyReferenced_nonNull_native();
    v327 = v135;
    sub_1000EA9E8(v88, 14, v136);
    uint64_t v90 = v327;
    swift_bridgeObjectRelease();
    sub_100028A6C(v126, v127, v24, 1);
    int64_t v24 = v312;
  }
  else
  {
    sub_1001BF440();
    v313(v88, v37, v50);
    char v137 = swift_isUniquelyReferenced_nonNull_native();
    v327 = v90;
    sub_1000EA9E8(v88, 13, v137);
    uint64_t v138 = v327;
    swift_bridgeObjectRelease();
    uint64_t v139 = sub_1001C19D0();
    uint64_t v140 = 1000 * v139;
    if ((unsigned __int128)(v139 * (__int128)1000) >> 64 != (1000 * v139) >> 63) {
      goto LABEL_168;
    }
    sub_1001C19D0();
    if (__OFADD__(v140, v141 / 1000000000000000)) {
      goto LABEL_170;
    }
    *uint64_t v37 = v140 + v141 / 1000000000000000;
    ((void (*)(unint64_t *, void, uint64_t))v318)(v37, v314, v50);
    v313(v88, v37, v50);
    char v142 = swift_isUniquelyReferenced_nonNull_native();
    v327 = v138;
    sub_1000EA9E8(v88, 12, v142);
    uint64_t v90 = v327;
    swift_bridgeObjectRelease();
  }
  uint64_t v106 = v316;
LABEL_33:
  uint64_t v143 = v106 + *(int *)(v24 + 88);
  uint64_t v144 = *(void *)v143;
  uint64_t v145 = *(void *)(v143 + 8);
  if (*(unsigned char *)(v143 + 24))
  {
    if (*(unsigned char *)(v143 + 24) != 1) {
      goto LABEL_42;
    }
    int64_t v24 = *(void *)(v143 + 16);
    swift_errorRetain();
    uint64_t v146 = sub_1001C19D0();
    uint64_t v147 = 1000 * v146;
    if ((unsigned __int128)(v146 * (__int128)1000) >> 64 != (1000 * v146) >> 63) {
      goto LABEL_171;
    }
    sub_1001C19D0();
    if (__OFADD__(v147, v148 / 1000000000000000)) {
      goto LABEL_173;
    }
    *uint64_t v37 = v147 + v148 / 1000000000000000;
    ((void (*)(unint64_t *, void, uint64_t))v318)(v37, v314, v50);
    uint64_t v149 = v313;
    v313(v88, v37, v50);
    char v150 = swift_isUniquelyReferenced_nonNull_native();
    v327 = v90;
    sub_1000EA9E8(v88, 15, v150);
    uint64_t v151 = v327;
    swift_bridgeObjectRelease();
    sub_1001BF440();
    v149(v88, v37, v50);
    char v152 = swift_isUniquelyReferenced_nonNull_native();
    v327 = v151;
    sub_1000EA9E8(v88, 16, v152);
    uint64_t v153 = v327;
    swift_bridgeObjectRelease();
    swift_getErrorValue();
    Error.telemetryString.getter(v321, v322, v37);
    v149(v88, v37, v50);
    char v154 = swift_isUniquelyReferenced_nonNull_native();
    v327 = v153;
    sub_1000EA9E8(v88, 17, v154);
    uint64_t v90 = v327;
    swift_bridgeObjectRelease();
    sub_100028A6C(v144, v145, v24, 1);
    int64_t v24 = v312;
  }
  else
  {
    uint64_t v155 = sub_1001C19D0();
    uint64_t v156 = 1000 * v155;
    if ((unsigned __int128)(v155 * (__int128)1000) >> 64 != (1000 * v155) >> 63) {
      goto LABEL_172;
    }
    sub_1001C19D0();
    if (__OFADD__(v156, v157 / 1000000000000000)) {
      goto LABEL_174;
    }
    *uint64_t v37 = v156 + v157 / 1000000000000000;
    ((void (*)(unint64_t *, void, uint64_t))v318)(v37, v314, v50);
    uint64_t v158 = v313;
    v313(v88, v37, v50);
    char v159 = swift_isUniquelyReferenced_nonNull_native();
    v327 = v90;
    sub_1000EA9E8(v88, 15, v159);
    uint64_t v160 = v327;
    swift_bridgeObjectRelease();
    sub_1001BF440();
    v158(v88, v37, v50);
    char v161 = swift_isUniquelyReferenced_nonNull_native();
    v327 = v160;
    sub_1000EA9E8(v88, 16, v161);
    uint64_t v90 = v327;
    swift_bridgeObjectRelease();
  }
  uint64_t v106 = v316;
LABEL_42:
  if ((*(unsigned char *)(v106 + *(int *)(v24 + 96) + 24) & 1) == 0)
  {
    uint64_t v162 = sub_1001C19D0();
    uint64_t v163 = 1000 * v162;
    if ((unsigned __int128)(v162 * (__int128)1000) >> 64 != (1000 * v162) >> 63)
    {
LABEL_151:
      __break(1u);
      goto LABEL_152;
    }
    sub_1001C19D0();
    if (__OFADD__(v163, v164 / 1000000000000000))
    {
LABEL_152:
      __break(1u);
      goto LABEL_153;
    }
    *uint64_t v37 = v163 + v164 / 1000000000000000;
    ((void (*)(unint64_t *, void, uint64_t))v318)(v37, v314, v50);
    uint64_t v165 = v313;
    v313(v88, v37, v50);
    char v166 = swift_isUniquelyReferenced_nonNull_native();
    v327 = v90;
    sub_1000EA9E8(v88, 27, v166);
    uint64_t v167 = v327;
    swift_bridgeObjectRelease();
    sub_1001BF440();
    v165(v88, v37, v50);
    char v168 = swift_isUniquelyReferenced_nonNull_native();
    v327 = v167;
    sub_1000EA9E8(v88, 28, v168);
    uint64_t v90 = v327;
    swift_bridgeObjectRelease();
    uint64_t v106 = v316;
  }
  uint64_t v169 = v106 + *(int *)(v24 + 72);
  uint64_t v170 = *(void *)v169;
  uint64_t v171 = *(void *)(v169 + 8);
  if (!*(unsigned char *)(v169 + 24))
  {
    uint64_t v181 = sub_1001C19D0();
    uint64_t v182 = 1000 * v181;
    if ((unsigned __int128)(v181 * (__int128)1000) >> 64 != (1000 * v181) >> 63) {
      goto LABEL_176;
    }
    sub_1001C19D0();
    if (__OFADD__(v182, v183 / 1000000000000000)) {
      goto LABEL_178;
    }
    *uint64_t v37 = v182 + v183 / 1000000000000000;
    ((void (*)(unint64_t *, void, uint64_t))v318)(v37, v314, v50);
    uint64_t v184 = v313;
    v313(v88, v37, v50);
    char v185 = swift_isUniquelyReferenced_nonNull_native();
    v327 = v90;
    sub_1000EA9E8(v88, 22, v185);
    uint64_t v186 = v327;
    swift_bridgeObjectRelease();
    sub_1001BF440();
    v184(v88, v37, v50);
    char v187 = swift_isUniquelyReferenced_nonNull_native();
    v327 = v186;
    sub_1000EA9E8(v88, 23, v187);
    uint64_t v90 = v327;
    swift_bridgeObjectRelease();
    goto LABEL_54;
  }
  if (*(unsigned char *)(v169 + 24) == 1)
  {
    int64_t v24 = *(void *)(v169 + 16);
    swift_errorRetain();
    uint64_t v172 = sub_1001C19D0();
    uint64_t v173 = 1000 * v172;
    if ((unsigned __int128)(v172 * (__int128)1000) >> 64 != (1000 * v172) >> 63) {
      goto LABEL_175;
    }
    sub_1001C19D0();
    if (__OFADD__(v173, v174 / 1000000000000000)) {
      goto LABEL_177;
    }
    *uint64_t v37 = v173 + v174 / 1000000000000000;
    ((void (*)(unint64_t *, void, uint64_t))v318)(v37, v314, v50);
    uint64_t v175 = v313;
    v313(v88, v37, v50);
    char v176 = swift_isUniquelyReferenced_nonNull_native();
    v327 = v90;
    sub_1000EA9E8(v88, 22, v176);
    uint64_t v177 = v327;
    swift_bridgeObjectRelease();
    sub_1001BF440();
    v175(v88, v37, v50);
    char v178 = swift_isUniquelyReferenced_nonNull_native();
    v327 = v177;
    sub_1000EA9E8(v88, 23, v178);
    uint64_t v179 = v327;
    swift_bridgeObjectRelease();
    swift_getErrorValue();
    Error.telemetryString.getter(v319, v320, v37);
    v175(v88, v37, v50);
    char v180 = swift_isUniquelyReferenced_nonNull_native();
    v327 = v179;
    sub_1000EA9E8(v88, 24, v180);
    uint64_t v90 = v327;
    swift_bridgeObjectRelease();
    sub_100028A6C(v170, v171, v24, 1);
    int64_t v24 = v312;
LABEL_54:
    uint64_t v106 = v316;
  }
  if ((*(unsigned char *)(v106 + *(int *)(v24 + 104) + 16) & 1) == 0)
  {
    uint64_t v188 = sub_1001C19D0();
    uint64_t v189 = 1000 * v188;
    int64_t v24 = (int64_t)v315;
    if ((unsigned __int128)(v188 * (__int128)1000) >> 64 != (1000 * v188) >> 63)
    {
LABEL_153:
      __break(1u);
      goto LABEL_154;
    }
    sub_1001C19D0();
    if (__OFADD__(v189, v190 / 1000000000000000))
    {
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
      goto LABEL_156;
    }
    *uint64_t v37 = v189 + v190 / 1000000000000000;
    ((void (*)(unint64_t *, void, uint64_t))v318)(v37, v314, v50);
    v313(v88, v37, v50);
    char v191 = swift_isUniquelyReferenced_nonNull_native();
    v327 = v90;
    sub_1000EA9E8(v88, 34, v191);
    uint64_t v90 = v327;
    swift_bridgeObjectRelease();
    uint64_t v106 = v316;
  }
  int64_t v192 = 0;
  int64_t v24 = 0;
  uint64_t v308 = *(int *)(v312 + 124);
  uint64_t v193 = *(void *)(v106 + v308);
  uint64_t v194 = 1 << *(unsigned char *)(v193 + 32);
  uint64_t v195 = -1;
  if (v194 < 64) {
    uint64_t v195 = ~(-1 << v194);
  }
  uint64_t v196 = v193 + 64;
  unint64_t v197 = v195 & *(void *)(v193 + 64);
  int64_t v198 = (unint64_t)(v194 + 63) >> 6;
  while (v197)
  {
    unint64_t v199 = __clz(__rbit64(v197));
    v197 &= v197 - 1;
    unint64_t v200 = v199 | (v192 << 6);
LABEL_63:
    BOOL v201 = *(void *)(*(void *)(v193 + 56) + 120 * v200 + 40) >> 60 == 15;
    BOOL v202 = __OFADD__(v24, v201);
    v24 += v201;
    if (v202)
    {
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
      goto LABEL_148;
    }
  }
  int64_t v203 = v192 + 1;
  if (__OFADD__(v192, 1)) {
    goto LABEL_145;
  }
  if (v203 >= v198) {
    goto LABEL_85;
  }
  unint64_t v204 = *(void *)(v196 + 8 * v203);
  ++v192;
  if (v204) {
    goto LABEL_84;
  }
  int64_t v192 = v203 + 1;
  if (v203 + 1 >= v198) {
    goto LABEL_85;
  }
  unint64_t v204 = *(void *)(v196 + 8 * v192);
  if (v204) {
    goto LABEL_84;
  }
  int64_t v192 = v203 + 2;
  if (v203 + 2 >= v198) {
    goto LABEL_85;
  }
  unint64_t v204 = *(void *)(v196 + 8 * v192);
  if (v204) {
    goto LABEL_84;
  }
  int64_t v192 = v203 + 3;
  if (v203 + 3 >= v198) {
    goto LABEL_85;
  }
  unint64_t v204 = *(void *)(v196 + 8 * v192);
  if (v204) {
    goto LABEL_84;
  }
  int64_t v192 = v203 + 4;
  if (v203 + 4 >= v198) {
    goto LABEL_85;
  }
  unint64_t v204 = *(void *)(v196 + 8 * v192);
  if (v204) {
    goto LABEL_84;
  }
  int64_t v192 = v203 + 5;
  if (v203 + 5 >= v198) {
    goto LABEL_85;
  }
  unint64_t v204 = *(void *)(v196 + 8 * v192);
  if (v204)
  {
LABEL_84:
    unint64_t v197 = (v204 - 1) & v204;
    unint64_t v200 = __clz(__rbit64(v204)) + (v192 << 6);
    goto LABEL_63;
  }
  int64_t v205 = v203 + 6;
  if (v205 >= v198) {
    goto LABEL_85;
  }
  unint64_t v204 = *(void *)(v196 + 8 * v205);
  if (v204)
  {
    int64_t v192 = v205;
    goto LABEL_84;
  }
  while (1)
  {
    int64_t v192 = v205 + 1;
    if (__OFADD__(v205, 1)) {
      goto LABEL_179;
    }
    if (v192 >= v198) {
      break;
    }
    unint64_t v204 = *(void *)(v196 + 8 * v192);
    ++v205;
    if (v204) {
      goto LABEL_84;
    }
  }
LABEL_85:
  *(unsigned char *)uint64_t v37 = v24 > 0;
  LODWORD(v307) = enum case for EventValue.BOOL(_:);
  uint64_t v206 = v318;
  v318(v37);
  uint64_t v207 = v313;
  v313(v88, v37, v50);
  char v208 = swift_isUniquelyReferenced_nonNull_native();
  v327 = v90;
  sub_1000EA9E8(v88, 30, v208);
  uint64_t v209 = v327;
  swift_bridgeObjectRelease();
  *uint64_t v37 = v24;
  ((void (*)(unint64_t *, void, uint64_t))v206)(v37, v314, v50);
  v207(v88, v37, v50);
  char v210 = swift_isUniquelyReferenced_nonNull_native();
  v327 = v209;
  sub_1000EA9E8(v88, 31, v210);
  uint64_t v211 = v327;
  swift_bridgeObjectRelease();
  int64_t v212 = 0;
  unint64_t v213 = 0;
  uint64_t v214 = *(void *)(v316 + v308);
  unsigned long long v215 = v207;
  uint64_t v216 = 1 << *(unsigned char *)(v214 + 32);
  uint64_t v217 = -1;
  if (v216 < 64) {
    uint64_t v217 = ~(-1 << v216);
  }
  uint64_t v218 = v214 + 64;
  unint64_t v219 = v217 & *(void *)(v214 + 64);
  int64_t v220 = (unint64_t)(v216 + 63) >> 6;
  int64_t v24 = v312;
  while (2)
  {
    if (v219)
    {
      unint64_t v221 = __clz(__rbit64(v219));
      v219 &= v219 - 1;
      unint64_t v222 = v221 | (v212 << 6);
LABEL_111:
      Swift::String v226 = (void *)(*(void *)(v214 + 56) + 120 * v222);
      uint64_t v227 = *v226 >> 62;
      if (v227 && (v227 != 3 || *v226 & 0xFFFFFFFFFFFFFFFELL ^ 0xC000000000000000 | v226[1]))
      {
        BOOL v202 = __OFADD__(v213++, 1);
        if (v202) {
          goto LABEL_147;
        }
      }
      continue;
    }
    break;
  }
  int64_t v223 = v212 + 1;
  if (__OFADD__(v212, 1)) {
    goto LABEL_146;
  }
  if (v223 < v220)
  {
    unint64_t v224 = *(void *)(v218 + 8 * v223);
    ++v212;
    if (!v224)
    {
      int64_t v212 = v223 + 1;
      if (v223 + 1 >= v220) {
        goto LABEL_115;
      }
      unint64_t v224 = *(void *)(v218 + 8 * v212);
      if (!v224)
      {
        int64_t v212 = v223 + 2;
        if (v223 + 2 >= v220) {
          goto LABEL_115;
        }
        unint64_t v224 = *(void *)(v218 + 8 * v212);
        if (!v224)
        {
          int64_t v212 = v223 + 3;
          if (v223 + 3 >= v220) {
            goto LABEL_115;
          }
          unint64_t v224 = *(void *)(v218 + 8 * v212);
          if (!v224)
          {
            int64_t v212 = v223 + 4;
            if (v223 + 4 >= v220) {
              goto LABEL_115;
            }
            unint64_t v224 = *(void *)(v218 + 8 * v212);
            if (!v224)
            {
              int64_t v212 = v223 + 5;
              if (v223 + 5 >= v220) {
                goto LABEL_115;
              }
              unint64_t v224 = *(void *)(v218 + 8 * v212);
              if (!v224)
              {
                int64_t v225 = v223 + 6;
                if (v225 >= v220) {
                  goto LABEL_115;
                }
                unint64_t v224 = *(void *)(v218 + 8 * v225);
                if (!v224)
                {
                  while (1)
                  {
                    int64_t v212 = v225 + 1;
                    if (__OFADD__(v225, 1)) {
                      break;
                    }
                    if (v212 >= v220) {
                      goto LABEL_115;
                    }
                    unint64_t v224 = *(void *)(v218 + 8 * v212);
                    ++v225;
                    if (v224) {
                      goto LABEL_110;
                    }
                  }
LABEL_180:
                  __break(1u);
LABEL_181:
                  __break(1u);
LABEL_182:
                  __break(1u);
LABEL_183:
                  __break(1u);
LABEL_184:
                  __break(1u);
                  swift_bridgeObjectRelease();
                  os_unfair_lock_unlock((os_unfair_lock_t)v24);
                  __break(1u);
                  JUMPOUT(0x10013D948);
                }
                int64_t v212 = v225;
              }
            }
          }
        }
      }
    }
LABEL_110:
    unint64_t v219 = (v224 - 1) & v224;
    unint64_t v222 = __clz(__rbit64(v224)) + (v212 << 6);
    goto LABEL_111;
  }
LABEL_115:
  *uint64_t v37 = v213;
  ((void (*)(unint64_t *, void, uint64_t))v206)(v37, v314, v50);
  v207(v88, v37, v50);
  char v228 = swift_isUniquelyReferenced_nonNull_native();
  v327 = v211;
  sub_1000EA9E8(v88, 29, v228);
  Swift::String v229 = v327;
  swift_bridgeObjectRelease();
  uint64_t v230 = v316;
  uint64_t v231 = v316 + *(int *)(v24 + 92);
  int v232 = *(unsigned __int8 *)(v231 + 16);
  if (v232 == 2)
  {
    uint64_t v233 = (uint64_t)v304;
    goto LABEL_120;
  }
  int64_t v24 = *(void *)(v231 + 8);
  *(unsigned char *)uint64_t v37 = v232 & 1;
  ((void (*)(unint64_t *, void, uint64_t))v206)(v37, v307, v50);
  v207(v88, v37, v50);
  char v234 = swift_isUniquelyReferenced_nonNull_native();
  v327 = v229;
  sub_1000EA9E8(v88, 26, v234);
  Swift::String v235 = v327;
  swift_bridgeObjectRelease();
  uint64_t v236 = sub_1001C19D0();
  uint64_t v237 = 1000 * v236;
  if ((unsigned __int128)(v236 * (__int128)1000) >> 64 != (1000 * v236) >> 63) {
    goto LABEL_155;
  }
  sub_1001C19D0();
  uint64_t v233 = (uint64_t)v304;
  if (__OFADD__(v237, v238 / 1000000000000000))
  {
LABEL_156:
    __break(1u);
    goto LABEL_157;
  }
  *uint64_t v37 = v237 + v238 / 1000000000000000;
  ((void (*)(unint64_t *, void, uint64_t))v318)(v37, v314, v50);
  v215(v88, v37, v50);
  char v239 = swift_isUniquelyReferenced_nonNull_native();
  v327 = v235;
  sub_1000EA9E8(v88, 25, v239);
  Swift::String v229 = v327;
  swift_bridgeObjectRelease();
  int64_t v24 = v312;
  uint64_t v230 = v316;
LABEL_120:
  if ((*(unsigned char *)(v230 + *(int *)(v24 + 108) + 16) & 1) == 0)
  {
    uint64_t v240 = sub_1001C19D0();
    uint64_t v241 = 1000 * v240;
    if ((unsigned __int128)(v240 * (__int128)1000) >> 64 == (1000 * v240) >> 63)
    {
      sub_1001C19D0();
      if (!__OFADD__(v241, v242 / 1000000000000000))
      {
        *uint64_t v37 = v241 + v242 / 1000000000000000;
        ((void (*)(unint64_t *, void, uint64_t))v318)(v37, v314, v50);
        v313(v88, v37, v50);
        char v243 = swift_isUniquelyReferenced_nonNull_native();
        v327 = v229;
        sub_1000EA9E8(v88, 35, v243);
        Swift::String v229 = v327;
        swift_bridgeObjectRelease();
        uint64_t v230 = v316;
        goto LABEL_124;
      }
LABEL_158:
      __break(1u);
LABEL_159:
      __break(1u);
      goto LABEL_160;
    }
LABEL_157:
    __break(1u);
    goto LABEL_158;
  }
LABEL_124:
  if ((*(unsigned char *)(v230 + *(int *)(v24 + 112) + 16) & 1) == 0)
  {
    uint64_t v244 = sub_1001C19D0();
    uint64_t v245 = 1000 * v244;
    if ((unsigned __int128)(v244 * (__int128)1000) >> 64 != (1000 * v244) >> 63) {
      goto LABEL_159;
    }
    sub_1001C19D0();
    if (!__OFADD__(v245, v246 / 1000000000000000))
    {
      *uint64_t v37 = v245 + v246 / 1000000000000000;
      ((void (*)(unint64_t *, void, uint64_t))v318)(v37, v314, v50);
      v313(v88, v37, v50);
      char v247 = swift_isUniquelyReferenced_nonNull_native();
      v327 = v229;
      sub_1000EA9E8(v88, 36, v247);
      Swift::String v229 = v327;
      swift_bridgeObjectRelease();
      uint64_t v230 = v316;
      goto LABEL_128;
    }
LABEL_160:
    __break(1u);
LABEL_161:
    __break(1u);
    goto LABEL_162;
  }
LABEL_128:
  sub_10003282C(v230 + *(int *)(v24 + 68), v233, &qword_10020E070);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 3u:
      uint64_t v265 = sub_1001C19D0();
      uint64_t v266 = 1000 * v265;
      if ((unsigned __int128)(v265 * (__int128)1000) >> 64 != (1000 * v265) >> 63) {
        goto LABEL_182;
      }
      sub_1001C19D0();
      if (__OFADD__(v266, v267 / 1000000000000000)) {
        goto LABEL_184;
      }
      *uint64_t v37 = v266 + v267 / 1000000000000000;
      ((void (*)(unint64_t *, void, uint64_t))v318)(v37, v314, v50);
      v268 = v313;
      v313(v88, v37, v50);
      char v269 = swift_isUniquelyReferenced_nonNull_native();
      v327 = v229;
      sub_1000EA9E8(v88, 10, v269);
      v270 = v327;
      swift_bridgeObjectRelease();
      sub_1001BF440();
      v268(v88, v37, v50);
      char v271 = swift_isUniquelyReferenced_nonNull_native();
      v327 = v270;
      sub_1000EA9E8(v88, 9, v271);
      Swift::String v229 = v327;
      swift_bridgeObjectRelease();
      break;
    case 4u:
      sub_100003918(qword_100208AA8);
      (*(void (**)(char *, uint64_t, uint64_t))(v297 + 32))(v301, v233, v298);
      uint64_t v248 = sub_1001C19D0();
      uint64_t v249 = 1000 * v248;
      if ((unsigned __int128)(v248 * (__int128)1000) >> 64 != (1000 * v248) >> 63) {
        goto LABEL_181;
      }
      sub_1001C19D0();
      if (__OFADD__(v249, v250 / 1000000000000000)) {
        goto LABEL_183;
      }
      *uint64_t v37 = v249 + v250 / 1000000000000000;
      ((void (*)(unint64_t *, void, uint64_t))v318)(v37, v314, v50);
      v251 = v313;
      v313(v88, v37, v50);
      char v252 = swift_isUniquelyReferenced_nonNull_native();
      v327 = v229;
      sub_1000EA9E8(v88, 10, v252);
      uint64_t v307 = (uint64_t)v327;
      swift_bridgeObjectRelease();
      uint64_t v253 = v297;
      uint64_t v254 = (uint64_t)v296;
      uint64_t v255 = v298;
      (*(void (**)(char *, char *, uint64_t))(v297 + 16))(v296, v301, v298);
      uint64_t v256 = sub_100149C0C(v254);
      unint64_t v258 = v257;
      uint64_t v308 = *(void *)(v253 + 8);
      uint64_t v259 = v254;
      uint64_t v260 = v255;
      ((void (*)(uint64_t, uint64_t))v308)(v259, v255);
      *uint64_t v37 = v256;
      v37[1] = v258;
      ((void (*)(unint64_t *, void, uint64_t))v318)(v37, v309, v50);
      v251(v94, v37, v50);
      uint64_t v261 = v307;
      char v262 = swift_isUniquelyReferenced_nonNull_native();
      v327 = (void (*)(void, void, void))v261;
      sub_1000EA9E8(v94, 11, v262);
      v263 = v327;
      swift_bridgeObjectRelease();
      sub_1001BF440();
      v251(v94, v37, v50);
      char v264 = swift_isUniquelyReferenced_nonNull_native();
      v327 = v263;
      sub_1000EA9E8(v94, 9, v264);
      Swift::String v229 = v327;
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v308)(v301, v260);
      int64_t v24 = v312;
      break;
    case 5u:
    case 6u:
    case 7u:
      break;
    default:
      swift_release();
      break;
  }
  uint64_t v272 = v316;
  uint64_t v273 = v316 + *(int *)(v24 + 100);
  if ((*(unsigned char *)(v273 + 24) & 1) == 0)
  {
    uint64_t v274 = *(void *)(v273 + 16);
    uint64_t v275 = sub_1001C19D0();
    int64_t v24 = 1000 * v275;
    if ((unsigned __int128)(v275 * (__int128)1000) >> 64 != (1000 * v275) >> 63) {
      goto LABEL_161;
    }
    sub_1001C19D0();
    if (!__OFADD__(v24, v276 / 1000000000000000))
    {
      *uint64_t v37 = v24 + v276 / 1000000000000000;
      uint64_t v277 = v314;
      v278 = (void (*)(unint64_t *, uint64_t, uint64_t))v318;
      ((void (*)(unint64_t *, void, uint64_t))v318)(v37, v314, v50);
      uint64_t v312 = v274;
      v279 = v313;
      v313(v94, v37, v50);
      char v280 = swift_isUniquelyReferenced_nonNull_native();
      v327 = v229;
      sub_1000EA9E8(v94, 32, v280);
      v281 = v327;
      swift_bridgeObjectRelease();
      *uint64_t v37 = v312;
      v278(v37, v277, v50);
      v279(v94, v37, v50);
      char v282 = swift_isUniquelyReferenced_nonNull_native();
      v327 = v281;
      sub_1000EA9E8(v94, 33, v282);
      Swift::String v229 = v327;
      swift_bridgeObjectRelease();
      uint64_t v272 = v316;
      goto LABEL_140;
    }
LABEL_162:
    __break(1u);
LABEL_163:
    __break(1u);
LABEL_164:
    __break(1u);
LABEL_165:
    __break(1u);
LABEL_166:
    __break(1u);
LABEL_167:
    __break(1u);
LABEL_168:
    __break(1u);
LABEL_169:
    __break(1u);
LABEL_170:
    __break(1u);
LABEL_171:
    __break(1u);
LABEL_172:
    __break(1u);
LABEL_173:
    __break(1u);
LABEL_174:
    __break(1u);
LABEL_175:
    __break(1u);
LABEL_176:
    __break(1u);
LABEL_177:
    __break(1u);
LABEL_178:
    __break(1u);
LABEL_179:
    __break(1u);
    goto LABEL_180;
  }
LABEL_140:
  uint64_t result = sub_100010360(v272, &qword_100208CA8);
  v284 = v302;
  void *v302 = 0xD000000000000015;
  v284[1] = 0x80000001001C6630;
  unint64_t v285 = v310;
  v284[2] = v229;
  v284[3] = v285;
  v284[4] = v311;
  return result;
}

uint64_t sub_10013D968(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_100003918(&qword_10020E160);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (uint64_t *)((char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10003282C((uint64_t)a1, (uint64_t)v11, &qword_10020E160);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1) {
      sub_100010360((uint64_t)v11, &qword_10020E160);
    }
    sub_100010360((uint64_t)a1, &qword_10020E160);
    uint64_t v13 = (char *)a1 + *(int *)(sub_100003918(&qword_100208A98) + 48);
    *a1 = a2;
    a1[1] = a3;
    uint64_t v14 = sub_1001C05B0();
    uint64_t v15 = *(void *)(v14 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v13, a4, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
  }
  else
  {
    uint64_t v16 = sub_100003918(&qword_100208A98);
    uint64_t v17 = (uint64_t)v11 + *(int *)(v16 + 48);
    uint64_t v18 = sub_1001C05B0();
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) != 1) {
      return sub_100010360(v17, &qword_100208AA0);
    }
    uint64_t v22 = v11;
    uint64_t v20 = *v11;
    uint64_t v21 = v22[1];
    sub_100010360((uint64_t)a1, &qword_10020E160);
    uint64_t v23 = (char *)a1 + *(int *)(v16 + 48);
    *a1 = v20;
    a1[1] = v21;
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v23, a4, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v23, 0, 1, v18);
  }
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10013DBEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100003918(&qword_10020E070);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100003918(&qword_100208CA8);
  uint64_t v11 = (void *)(a1 + *(int *)(v10 + 80));
  if ((v11[3] >> 61) >= 5)
  {
    *uint64_t v11 = a2;
    v11[1] = 0;
    uint64_t v11[2] = 0;
    v11[3] = 0;
    swift_retain();
  }
  uint64_t v12 = (void *)(a1 + *(int *)(v10 + 68));
  sub_10003282C((uint64_t)v12, (uint64_t)v9, &qword_10020E070);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 3:
    case 6:
    case 7:
      return result;
    case 4:
      uint64_t v14 = sub_1001BF810();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v9, v14);
      break;
    case 5:
      sub_100010360((uint64_t)v12, &qword_10020E070);
      void *v12 = a3;
      swift_storeEnumTagMultiPayload();
      uint64_t result = swift_retain();
      break;
    default:
      uint64_t result = sub_100010360((uint64_t)v9, &qword_10020E070);
      break;
  }
  return result;
}

uint64_t sub_10013DDA0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_100003918(&qword_10020E070);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (uint64_t *)((char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a3)
  {
    uint64_t v18 = a1 + *(int *)(sub_100003918(&qword_100208CA8) + 72);
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(void *)(v18 + 8);
    uint64_t v21 = *(void *)(v18 + 16);
    char v22 = *(unsigned char *)(v18 + 24);
    swift_errorRetain();
    uint64_t result = sub_100028A6C(v19, v20, v21, v22);
    *(void *)uint64_t v18 = a2;
    *(void *)(v18 + 8) = a4;
    *(void *)(v18 + 16) = a5;
    *(unsigned char *)(v18 + 24) = 1;
  }
  else
  {
    uint64_t v14 = sub_100003918(&qword_100208CA8);
    uint64_t v15 = a1 + *(int *)(v14 + 72);
    sub_100028A6C(*(void *)v15, *(void *)(v15 + 8), *(void *)(v15 + 16), *(unsigned char *)(v15 + 24));
    *(void *)uint64_t v15 = a4;
    *(void *)(v15 + 8) = a5;
    *(void *)(v15 + 16) = 0;
    *(unsigned char *)(v15 + 24) = 0;
    uint64_t v16 = (void *)(a1 + *(int *)(v14 + 68));
    sub_10003282C((uint64_t)v16, (uint64_t)v13, &qword_10020E070);
    if (swift_getEnumCaseMultiPayload())
    {
      return sub_100010360((uint64_t)v13, &qword_10020E070);
    }
    else
    {
      uint64_t v23 = *v13;
      sub_100010360((uint64_t)v16, &qword_10020E070);
      void *v16 = v23;
      return swift_storeEnumTagMultiPayload();
    }
  }
  return result;
}

BOOL sub_10013DF34(uint64_t a1, uint64_t a2)
{
  uint64_t v30 = a2;
  uint64_t v3 = sub_1001C03B0();
  uint64_t v32 = *(void *)(v3 - 8);
  uint64_t v33 = v3;
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1001C04B0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100003918(&qword_10020E070);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (uint64_t *)((char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = (int *)sub_100003918(&qword_100208CA8);
  uint64_t v17 = v16[17];
  uint64_t v31 = a1;
  uint64_t v18 = (void *)(a1 + v17);
  sub_10003282C((uint64_t)v18, (uint64_t)v15, &qword_10020E070);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v20 = *v15;
    sub_100010360((uint64_t)v18, &qword_10020E070);
    void *v18 = v20;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    sub_1001C04C0();
    uint64_t v21 = sub_1001C04A0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    uint64_t v22 = v31;
    uint64_t v23 = v31 + v16[29];
    *(void *)uint64_t v23 = v21;
    *(unsigned char *)(v23 + 8) = 0;
    sub_1001C0470();
    if (qword_1002079F8 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_1001C0820();
    sub_10000D978(v24, (uint64_t)qword_100220070);
    uint64_t v25 = sub_1001C03C0();
    uint64_t v27 = v26;
    swift_release();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v6, v33);
    uint64_t v28 = (uint64_t *)(v22 + v16[30]);
    swift_bridgeObjectRelease();
    *uint64_t v28 = v25;
    v28[1] = v27;
  }
  else
  {
    sub_100010360((uint64_t)v15, &qword_10020E070);
  }
  return EnumCaseMultiPayload == 1;
}

uint64_t sub_10013E234()
{
  v1[35] = v0;
  uint64_t v2 = sub_1001C0250();
  v1[36] = v2;
  v1[37] = *(void *)(v2 - 8);
  v1[38] = swift_task_alloc();
  sub_1001C0C30();
  v1[39] = swift_task_alloc();
  uint64_t v3 = sub_1001C01F0();
  v1[40] = v3;
  v1[41] = *(void *)(v3 - 8);
  v1[42] = swift_task_alloc();
  v1[43] = swift_task_alloc();
  return _swift_task_switch(sub_10013E38C, 0, 0);
}

uint64_t sub_10013E38C()
{
  char v161 = v0;
  uint64_t v1 = v0[35];
  sub_1001C0370();
  swift_allocObject();
  sub_1001C0360();
  char v2 = sub_1001C0350();
  swift_release();
  v0[44] = *(void *)(*(void *)v1 + 248);
  swift_retain_n();
  uint64_t v3 = sub_1001C0330();
  os_log_type_t v4 = sub_1001C1200();
  BOOL v5 = os_log_type_enabled(v3, v4);
  char v159 = v0;
  uint64_t v6 = v0[35];
  if ((v2 & 1) == 0)
  {
    if (v5)
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      v160[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315138;
      uint64_t v15 = (uint64_t *)(v6 + *(void *)(*(void *)v6 + 256));
      uint64_t v16 = *v15;
      unint64_t v17 = v15[1];
      swift_bridgeObjectRetain();
      v0[24] = sub_1000DF238(v16, v17, v160);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s Request Log: TransparencyReport is not enabled", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    goto LABEL_85;
  }
  uint64_t v7 = v0 + 34;
  uint64_t v8 = v159 + 35;
  if (v5)
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    v160[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    uint64_t v10 = (uint64_t *)(v6 + *(void *)(*(void *)v6 + 256));
    uint64_t v11 = *v10;
    unint64_t v12 = v10[1];
    swift_bridgeObjectRetain();
    uint64_t v13 = v11;
    uint64_t v8 = v159 + 35;
    *uint64_t v7 = sub_1000DF238(v13, v12, v160);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s Request Log: logging request data for analysis", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  swift_retain_n();
  uint64_t v18 = sub_1001C0330();
  os_log_type_t v19 = sub_1001C1200();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v21 = *v8;
  if (v20)
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    v160[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 136315138;
    uint64_t v23 = (uint64_t *)(v21 + *(void *)(*(void *)v21 + 256));
    uint64_t v24 = *v23;
    unint64_t v25 = v23[1];
    swift_bridgeObjectRetain();
    v159[33] = sub_1000DF238(v24, v25, v160);
    uint64_t v8 = v159 + 35;
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "%s Request Log: request parameters:", v22, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  swift_retain_n();
  uint64_t v26 = sub_1001C0330();
  os_log_type_t v27 = sub_1001C1200();
  BOOL v28 = os_log_type_enabled(v26, v27);
  uint64_t v29 = *v8;
  if (v28)
  {
    uint64_t v30 = swift_slowAlloc();
    v160[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 136315394;
    uint64_t v31 = (uint64_t *)(v29 + *(void *)(*(void *)v29 + 256));
    uint64_t v32 = *v31;
    unint64_t v33 = v31[1];
    swift_bridgeObjectRetain();
    v159[31] = sub_1000DF238(v32, v33, v160);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v30 + 12) = 2080;
    uint64_t v34 = sub_1001BF930();
    v159[32] = sub_1000DF238(v34, v35, v160);
    uint64_t v8 = v159 + 35;
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "%s Request Log: pipelineKind: %s", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  swift_retain_n();
  uint64_t v36 = sub_1001C0330();
  os_log_type_t v37 = sub_1001C1200();
  BOOL v38 = os_log_type_enabled(v36, v37);
  uint64_t v39 = *v8;
  if (v38)
  {
    uint64_t v40 = swift_slowAlloc();
    v160[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v40 = 136315394;
    unint64_t v41 = (uint64_t *)(v39 + *(void *)(*(void *)v39 + 256));
    uint64_t v42 = *v41;
    unint64_t v43 = v41[1];
    swift_bridgeObjectRetain();
    v159[29] = sub_1000DF238(v42, v43, v160);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release();
    *(_WORD *)(v40 + 12) = 2080;
    sub_1001BF940();
    swift_release();
    uint64_t v44 = sub_1001C0B90();
    unint64_t v46 = v45;
    swift_bridgeObjectRelease();
    v159[30] = sub_1000DF238(v44, v46, v160);
    uint64_t v8 = v159 + 35;
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "%s Request Log: pipelineArguments: %s", (uint8_t *)v40, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  swift_retain_n();
  uint64_t v47 = sub_1001C0330();
  os_log_type_t v48 = sub_1001C1200();
  BOOL v49 = os_log_type_enabled(v47, v48);
  uint64_t v50 = *v8;
  if (v49)
  {
    uint64_t v51 = (uint8_t *)swift_slowAlloc();
    v160[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v51 = 136315138;
    uint64_t v52 = (uint64_t *)(v50 + *(void *)(*(void *)v50 + 256));
    uint64_t v54 = *v52;
    unint64_t v53 = v52[1];
    swift_bridgeObjectRetain();
    v159[28] = sub_1000DF238(v54, v53, v160);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "%s Request Log: attestations: ", v51, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v55 = (os_unfair_lock_s *)(v159[35] + *(void *)(*(void *)v159[35] + 128));
  os_unfair_lock_lock(v55);
  uint64_t v56 = sub_100003918(&qword_100208C90);
  sub_100156C28((uint64_t)v55 + *(int *)(v56 + 28), v160);
  v159[45] = 0;
  os_unfair_lock_unlock(v55);
  uint64_t v57 = v159[35];
  v159[46] = v160[0];
  unint64_t v58 = sub_100054974((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v59 = *(void *)(v57 + *(void *)(*(void *)v57 + 304));
  v159[47] = v59;
  if (v59)
  {
    uint64_t v60 = v159[35];
    swift_retain();
    swift_bridgeObjectRelease();
    v159[48] = *(void *)(*(void *)v60 + 152);
    type metadata accessor for TC2AttestationStore();
    sub_1001627A0(&qword_10020C4E0, (void (*)(uint64_t))type metadata accessor for TC2AttestationStore);
    uint64_t v62 = sub_1001C0EA0();
    return _swift_task_switch(sub_10014004C, v62, v61);
  }
  unint64_t v142 = v58;
  uint64_t v63 = v159 + 2;
  uint64_t v64 = v159[46];
  uint64_t v65 = v159[41];
  uint64_t v66 = v159[35];
  uint64_t v67 = sub_1000E3C90(0, *(void *)(v64 + 16), 0, (unint64_t)_swiftEmptyArrayStorage);
  int64_t v68 = 0;
  v159[27] = v67;
  uint64_t v143 = v64 + 64;
  uint64_t v147 = v64;
  uint64_t v69 = -1;
  uint64_t v70 = -1 << *(unsigned char *)(v64 + 32);
  if (-v70 < 64) {
    uint64_t v69 = ~(-1 << -(char)v70);
  }
  unint64_t v71 = v69 & *(void *)(v64 + 64);
  uint64_t v141 = (uint64_t *)(v66 + *(void *)(*(void *)v66 + 256));
  int64_t v144 = (unint64_t)(63 - v70) >> 6;
  uint64_t v145 = (void (**)(uint64_t, uint64_t, uint64_t))(v65 + 16);
  uint64_t v146 = v65;
  if (!v71) {
    goto LABEL_28;
  }
LABEL_27:
  uint64_t v151 = (v71 - 1) & v71;
  int64_t v152 = v68;
  for (unint64_t i = __clz(__rbit64(v71)) | (v68 << 6); ; unint64_t i = __clz(__rbit64(v74)) + (v75 << 6))
  {
    uint64_t v77 = (uint64_t *)(*(void *)(v147 + 48) + 16 * i);
    unint64_t v78 = v77[1];
    uint64_t v148 = *v77;
    unint64_t v79 = (unint64_t *)(*(void *)(v147 + 56) + 120 * i);
    unint64_t v80 = *v79;
    unint64_t v81 = v79[1];
    unint64_t v82 = v79[3];
    uint64_t v153 = v79[2];
    uint64_t v83 = v79[4];
    unint64_t v84 = v79[5];
    v159[16] = 0;
    v159[17] = 0xE000000000000000;
    unint64_t v158 = v84;
    uint64_t v156 = v83;
    unint64_t v155 = v78;
    if (v84 >> 60 == 15)
    {
      uint64_t v85 = *(void *)(v142 + 16);
      swift_bridgeObjectRetain();
      sub_10002C9AC(v80);
      swift_bridgeObjectRetain();
      sub_10000D9E0(v83, v84);
      swift_bridgeObjectRetain();
      if (v85)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v86 = sub_100169E3C(v153, v82);
        if (v87)
        {
          uint64_t v88 = (uint64_t *)(*(void *)(v142 + 56) + 16 * v86);
          uint64_t v89 = *v88;
          unint64_t v90 = v88[1];
          sub_100007B14(*v88, v90);
          swift_bridgeObjectRelease();
          uint64_t v91 = sub_100146634(v89, v90);
          uint64_t v93 = v92;
          sub_10000792C(v89, v90);
          swift_beginAccess();
          v159[16] = v91;
          v159[17] = v93;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_10002C9AC(v80);
      swift_bridgeObjectRetain();
      sub_10000D9E0(v83, v84);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10000D9E0(v83, v84);
      uint64_t v94 = sub_100146634(v83, v84);
      uint64_t v96 = v95;
      sub_100007918(v83, v84);
      swift_beginAccess();
      v159[16] = v94;
      v159[17] = v96;
      swift_bridgeObjectRelease();
    }
    if ((v80 >> 62) - 1 < 2
      || (uint64_t v98 = 0x6164696C61766E55, v97 = 0xEB00000000646574, v80 >> 62)
      && v80 & 0xFFFFFFFFFFFFFFFELL ^ 0xC000000000000000 | v81)
    {
      unint64_t v97 = 0xE900000000000064;
      uint64_t v98 = 0x65746164696C6156;
    }
    unint64_t v157 = v97;
    uint64_t v154 = v98;
    sub_10002C9AC(v80);
    swift_bridgeObjectRetain();
    sub_10000D9E0(v83, v158);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10002C9AC(v80);
    swift_bridgeObjectRetain();
    sub_10000D9E0(v83, v158);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_10002C9AC(v80);
    swift_bridgeObjectRetain();
    sub_10000D9E0(v83, v158);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_10002C9AC(v80);
    swift_bridgeObjectRetain();
    sub_10000D9E0(v83, v158);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v99 = sub_1001C0330();
    os_log_type_t v100 = sub_1001C1200();
    if (os_log_type_enabled(v99, v100))
    {
      os_log_type_t v149 = v100;
      char v150 = v99;
      uint64_t v101 = swift_slowAlloc();
      v160[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v101 = 136316418;
      uint64_t v102 = *v141;
      unint64_t v103 = v141[1];
      swift_bridgeObjectRetain();
      v159[22] = sub_1000DF238(v102, v103, v160);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v101 + 12) = 2080;
      swift_bridgeObjectRetain();
      v159[18] = sub_1000DF238(v148, v155, v160);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v101 + 22) = 2080;
      sub_10002C9AC(v80);
      sub_10002CA34(v80);
      swift_bridgeObjectRelease();
      sub_100007918(v156, v158);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v104 = 0xE900000000000067;
      uint64_t v105 = 0x6E69766965636572;
      switch(v80 >> 62)
      {
        case 1uLL:
          goto LABEL_61;
        case 2uLL:
          unint64_t v104 = 0xE800000000000000;
          uint64_t v106 = 0x6873696E6966;
          goto LABEL_60;
        case 3uLL:
          unint64_t v104 = 0xEA00000000006465;
          uint64_t v105 = 0x6966697265766E75;
          switch(v80)
          {
            case 0xC000000000000001:
              uint64_t v105 = 0x6E69796669726576;
              unint64_t v104 = 0xE900000000000067;
              goto LABEL_61;
            case 0xC000000000000002:
            case 0xC000000000000003:
            case 0xC000000000000004:
            case 0xC000000000000005:
            case 0xC000000000000006:
            case 0xC000000000000007:
              goto LABEL_89;
            case 0xC000000000000008:
              unint64_t v104 = 0xE800000000000000;
              goto LABEL_57;
            case 0xC000000000000009:
              unint64_t v104 = 0xE700000000000000;
              uint64_t v105 = 0x79654B746E6573;
              goto LABEL_61;
            default:
              goto LABEL_61;
          }
        default:
          sub_10002CA34(v80);
          unint64_t v104 = 0xEE0064656C696146;
LABEL_57:
          uint64_t v106 = 0x696669726576;
LABEL_60:
          uint64_t v105 = v106 & 0xFFFFFFFFFFFFLL | 0x6465000000000000;
LABEL_61:
          v159[19] = sub_1000DF238(v105, v104, v160);
          sub_1001C1310();
          swift_bridgeObjectRelease();
          sub_10002CA34(v80);
          swift_bridgeObjectRelease();
          sub_100007918(v156, v158);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(_WORD *)(v101 + 32) = 2080;
          swift_bridgeObjectRetain();
          v159[20] = sub_1000DF238(v154, v157, v160);
          sub_1001C1310();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v101 + 42) = 2080;
          swift_bridgeObjectRetain();
          v159[21] = sub_1000DF238(v153, v82, v160);
          sub_1001C1310();
          swift_bridgeObjectRelease();
          sub_10002CA34(v80);
          swift_bridgeObjectRelease();
          sub_100007918(v156, v158);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_10002CA34(v80);
          swift_bridgeObjectRelease();
          sub_100007918(v156, v158);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v107 = v156;
          swift_bridgeObjectRelease();
          *(_WORD *)(v101 + 52) = 2080;
          swift_beginAccess();
          uint64_t v109 = v159[16];
          unint64_t v108 = v159[17];
          swift_bridgeObjectRetain();
          v159[23] = sub_1000DF238(v109, v108, v160);
          sub_1001C1310();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v150, v149, "%s Request Log: Attestation: %s %s <%s %s: %s>", (uint8_t *)v101, 0x3Eu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          break;
      }
    }
    else
    {
      sub_10002CA34(v80);
      swift_bridgeObjectRelease();
      sub_100007918(v156, v158);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_release_n();
      swift_bridgeObjectRelease_n();
      sub_10002CA34(v80);
      swift_bridgeObjectRelease();
      sub_100007918(v156, v158);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      sub_10002CA34(v80);
      swift_bridgeObjectRelease();
      sub_100007918(v156, v158);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10002CA34(v80);
      swift_bridgeObjectRelease();
      sub_100007918(v156, v158);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v107 = v156;
    }
    uint64_t v110 = v159[42];
    uint64_t v111 = v159[43];
    uint64_t v112 = v159[40];
    sub_1001C01E0();
    swift_bridgeObjectRetain();
    sub_1001C01C0();
    sub_1001C01D0();
    swift_bridgeObjectRetain();
    sub_1001C01B0();
    (*v145)(v110, v111, v112);
    unint64_t v113 = v159[27];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v113 = sub_1000E3C90(0, *(void *)(v113 + 16) + 1, 1, v113);
    }
    unint64_t v115 = *(void *)(v113 + 16);
    unint64_t v114 = *(void *)(v113 + 24);
    if (v115 >= v114 >> 1) {
      unint64_t v113 = sub_1000E3C90(v114 > 1, v115 + 1, 1, v113);
    }
    uint64_t v116 = v159[42];
    uint64_t v117 = v159[43];
    uint64_t v118 = v159[40];
    *(void *)(v113 + 16) = v115 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v146 + 32))(v113+ ((*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80))+ *(void *)(v146 + 72) * v115, v116, v118);
    sub_10002CA34(v80);
    swift_bridgeObjectRelease();
    sub_100007918(v107, v158);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v159[27] = v113;
    (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v117, v118);
    swift_bridgeObjectRelease();
    uint64_t v63 = v159 + 2;
    unint64_t v71 = v151;
    int64_t v68 = v152;
    if (v151) {
      goto LABEL_27;
    }
LABEL_28:
    int64_t v73 = v68 + 1;
    if (__OFADD__(v68, 1))
    {
      __break(1u);
      goto LABEL_89;
    }
    if (v73 >= v144) {
      goto LABEL_72;
    }
    unint64_t v74 = *(void *)(v143 + 8 * v73);
    int64_t v75 = v68 + 1;
    if (!v74)
    {
      int64_t v75 = v68 + 2;
      if (v68 + 2 >= v144) {
        goto LABEL_72;
      }
      unint64_t v74 = *(void *)(v143 + 8 * v75);
      if (!v74)
      {
        int64_t v75 = v68 + 3;
        if (v68 + 3 >= v144) {
          goto LABEL_72;
        }
        unint64_t v74 = *(void *)(v143 + 8 * v75);
        if (!v74) {
          break;
        }
      }
    }
LABEL_41:
    uint64_t v151 = (v74 - 1) & v74;
    int64_t v152 = v75;
  }
  uint64_t v76 = v68 + 4;
  if (v68 + 4 < v144)
  {
    unint64_t v74 = *(void *)(v143 + 8 * v76);
    if (!v74)
    {
      while (1)
      {
        int64_t v75 = v76 + 1;
        if (__OFADD__(v76, 1)) {
          break;
        }
        if (v75 >= v144) {
          goto LABEL_72;
        }
        unint64_t v74 = *(void *)(v143 + 8 * v75);
        ++v76;
        if (v74) {
          goto LABEL_41;
        }
      }
LABEL_89:
      __break(1u);
      JUMPOUT(0x100140014);
    }
    int64_t v75 = v68 + 4;
    goto LABEL_41;
  }
LABEL_72:
  uint64_t v119 = v159[45];
  swift_bridgeObjectRelease();
  swift_release();
  v159[25] = sub_1001BF940();
  sub_100003918(&qword_100208930);
  sub_10015DB68();
  uint64_t v120 = sub_1001BEDF0();
  if (v119)
  {
    swift_bridgeObjectRelease();
    swift_errorRetain();
    swift_errorRetain();
    char v128 = sub_1001C0330();
    os_log_type_t v129 = sub_1001C11F0();
    if (os_log_type_enabled(v128, v129))
    {
      uint64_t v130 = (uint8_t *)swift_slowAlloc();
      uint64_t v131 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v130 = 138412290;
      swift_errorRetain();
      uint64_t v132 = _swift_stdlib_bridgeErrorToNSError();
      v159[26] = v132;
      sub_1001C1310();
      *uint64_t v131 = v132;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v128, v129, "failed to log Biome event: %@", v130, 0xCu);
      sub_100003918(&qword_100207DA8);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();
    }
  }
  else
  {
    uint64_t v122 = v120;
    unint64_t v123 = v121;
    swift_bridgeObjectRelease();
    sub_1001C0C20();
    uint64_t v125 = sub_1001C0C10();
    unint64_t v126 = v124;
    if (v124) {
      unint64_t v127 = v124;
    }
    else {
      unint64_t v127 = 0xE000000000000000;
    }
    sub_1001C0190();
    sub_1001627A0(&qword_10020E150, (void (*)(uint64_t))&type metadata accessor for Library.Streams.PrivateCloudCompute.RequestLog);
    sub_1001C01A0();
    uint64_t v133 = v159[38];
    uint64_t v134 = v159[37];
    uint64_t v135 = v63;
    uint64_t v136 = v159[36];
    uint64_t v137 = v159[35];
    if (!v126) {
      uint64_t v125 = 0;
    }
    sub_10000D934(v135, v159[5]);
    uint64_t v138 = (void *)swift_task_alloc();
    v138[2] = v137;
    v138[3] = v125;
    v138[4] = v127;
    v138[5] = v159 + 27;
    sub_1001C0270();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    sub_1001C0260();
    sub_10000792C(v122, v123);
    (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v133, v136);
    sub_100003E90((uint64_t)(v159 + 2));
  }
  swift_bridgeObjectRelease();
LABEL_85:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v139 = (uint64_t (*)(void))v159[1];
  return v139();
}

uint64_t sub_10014004C()
{
  v0[49] = sub_1000CDF34(v0[35] + v0[48]);
  return _swift_task_switch(sub_1001400C0, 0, 0);
}

uint64_t sub_1001400C0()
{
  unint64_t v108 = v0;
  swift_release();
  uint64_t v1 = v0[49];
  uint64_t v2 = v0[46];
  uint64_t v3 = v0[41];
  uint64_t v4 = v0[35];
  uint64_t v5 = sub_1000E3C90(0, *(void *)(v2 + 16), 0, (unint64_t)_swiftEmptyArrayStorage);
  int64_t v6 = 0;
  v0[27] = v5;
  uint64_t v7 = v0 + 2;
  uint64_t v83 = v0 + 18;
  char v87 = v0 + 22;
  unint64_t v80 = v0 + 26;
  uint64_t v84 = v2 + 64;
  uint64_t v89 = v2;
  uint64_t v8 = -1;
  uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
  uint64_t v10 = v1;
  if (-v9 < 64) {
    uint64_t v8 = ~(-1 << -(char)v9);
  }
  unint64_t v11 = v8 & *(void *)(v2 + 64);
  unint64_t v82 = (uint64_t *)(v4 + *(void *)(*(void *)v4 + 256));
  unint64_t v81 = v0 + 27;
  unint64_t v86 = (void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  uint64_t v88 = v3;
  int64_t v85 = (unint64_t)(63 - v9) >> 6;
  unint64_t v90 = v0 + 2;
  uint64_t v91 = v1;
  unint64_t v103 = v0;
  if (!v11) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v95 = (v11 - 1) & v11;
  for (unint64_t i = __clz(__rbit64(v11)) | (v6 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v6 << 6))
  {
    int64_t v96 = v6;
    uint64_t v16 = (uint64_t *)(*(void *)(v89 + 48) + 16 * i);
    uint64_t v17 = *v16;
    uint64_t v18 = (unint64_t *)(*(void *)(v89 + 56) + 120 * i);
    unint64_t v20 = *v18;
    unint64_t v19 = v18[1];
    uint64_t v21 = v18[3];
    uint64_t v98 = v18[2];
    unint64_t v99 = v16[1];
    uint64_t v23 = v18[4];
    unint64_t v22 = v18[5];
    v0[16] = 0;
    v0[17] = 0xE000000000000000;
    uint64_t v104 = v23;
    unint64_t v102 = v21;
    uint64_t v92 = v17;
    unint64_t v100 = v20;
    if (v22 >> 60 == 15)
    {
      uint64_t v24 = *(void *)(v10 + 16);
      swift_bridgeObjectRetain();
      sub_10002C9AC(v20);
      swift_bridgeObjectRetain();
      sub_10000D9E0(v23, v22);
      swift_bridgeObjectRetain();
      unint64_t v25 = v19;
      if (v24)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v26 = sub_100169E3C(v98, v21);
        if (v27)
        {
          BOOL v28 = (uint64_t *)(*(void *)(v91 + 56) + 16 * v26);
          uint64_t v30 = *v28;
          unint64_t v29 = v28[1];
          sub_100007B14(*v28, v29);
          swift_bridgeObjectRelease();
          uint64_t v31 = sub_100146634(v30, v29);
          uint64_t v33 = v32;
          sub_10000792C(v30, v29);
          swift_beginAccess();
          v0[16] = v31;
          v0[17] = v33;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      unint64_t v37 = v100;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_10002C9AC(v20);
      swift_bridgeObjectRetain();
      sub_10000D9E0(v23, v22);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10000D9E0(v23, v22);
      uint64_t v34 = sub_100146634(v23, v22);
      uint64_t v36 = v35;
      sub_100007918(v23, v22);
      swift_beginAccess();
      v0[16] = v34;
      v0[17] = v36;
      swift_bridgeObjectRelease();
      unint64_t v37 = v20;
      unint64_t v25 = v19;
    }
    if ((v37 >> 62) - 1 < 2
      || (v39 = 0x6164696C61766E55, unint64_t v38 = 0xEB00000000646574, v37 >> 62)
      && v37 & 0xFFFFFFFFFFFFFFFELL ^ 0xC000000000000000 | v25)
    {
      unint64_t v38 = 0xE900000000000064;
      uint64_t v39 = 0x65746164696C6156;
    }
    unint64_t v101 = v38;
    uint64_t v97 = v39;
    sub_10002C9AC(v37);
    swift_bridgeObjectRetain();
    sub_10000D9E0(v23, v22);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10002C9AC(v37);
    swift_bridgeObjectRetain();
    sub_10000D9E0(v23, v22);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_10002C9AC(v37);
    swift_bridgeObjectRetain();
    sub_10000D9E0(v23, v22);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_10002C9AC(v37);
    swift_bridgeObjectRetain();
    sub_10000D9E0(v23, v22);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_1001C0330();
    os_log_type_t v41 = sub_1001C1200();
    if (os_log_type_enabled(v40, v41))
    {
      os_log_type_t v93 = v41;
      uint64_t v94 = v40;
      uint64_t v42 = swift_slowAlloc();
      v107[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v42 = 136316418;
      uint64_t v43 = *v82;
      unint64_t v44 = v82[1];
      swift_bridgeObjectRetain();
      *char v87 = sub_1000DF238(v43, v44, v107);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v42 + 12) = 2080;
      swift_bridgeObjectRetain();
      *uint64_t v83 = sub_1000DF238(v92, v99, v107);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v42 + 22) = 2080;
      sub_10002C9AC(v100);
      sub_10002CA34(v100);
      swift_bridgeObjectRelease();
      sub_100007918(v104, v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v45 = 0xE900000000000067;
      uint64_t v46 = 0x6E69766965636572;
      switch(v37 >> 62)
      {
        case 1uLL:
          goto LABEL_39;
        case 2uLL:
          unint64_t v45 = 0xE800000000000000;
          uint64_t v47 = 0x6873696E6966;
          goto LABEL_38;
        case 3uLL:
          unint64_t v45 = 0xEA00000000006465;
          uint64_t v46 = 0x6966697265766E75;
          switch(v100)
          {
            case 0xC000000000000001:
              uint64_t v46 = 0x6E69796669726576;
              unint64_t v45 = 0xE900000000000067;
              goto LABEL_39;
            case 0xC000000000000002:
            case 0xC000000000000003:
            case 0xC000000000000004:
            case 0xC000000000000005:
            case 0xC000000000000006:
            case 0xC000000000000007:
              goto LABEL_66;
            case 0xC000000000000008:
              unint64_t v45 = 0xE800000000000000;
              goto LABEL_35;
            case 0xC000000000000009:
              unint64_t v45 = 0xE700000000000000;
              uint64_t v46 = 0x79654B746E6573;
              goto LABEL_39;
            default:
              goto LABEL_39;
          }
        default:
          sub_10002CA34(v100);
          unint64_t v45 = 0xEE0064656C696146;
LABEL_35:
          uint64_t v47 = 0x696669726576;
LABEL_38:
          uint64_t v46 = v47 & 0xFFFFFFFFFFFFLL | 0x6465000000000000;
LABEL_39:
          v103[19] = sub_1000DF238(v46, v45, v107);
          sub_1001C1310();
          swift_bridgeObjectRelease();
          sub_10002CA34(v100);
          swift_bridgeObjectRelease();
          sub_100007918(v104, v22);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(_WORD *)(v42 + 32) = 2080;
          swift_bridgeObjectRetain();
          v103[20] = sub_1000DF238(v97, v101, v107);
          sub_1001C1310();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v42 + 42) = 2080;
          swift_bridgeObjectRetain();
          v103[21] = sub_1000DF238(v98, v102, v107);
          sub_1001C1310();
          swift_bridgeObjectRelease();
          sub_10002CA34(v100);
          swift_bridgeObjectRelease();
          sub_100007918(v104, v22);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_10002CA34(v100);
          swift_bridgeObjectRelease();
          sub_100007918(v104, v22);
          unint64_t v48 = v100;
          uint64_t v0 = v103;
          uint64_t v49 = v104;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(_WORD *)(v42 + 52) = 2080;
          swift_beginAccess();
          uint64_t v50 = v103[16];
          unint64_t v51 = v103[17];
          swift_bridgeObjectRetain();
          v103[23] = sub_1000DF238(v50, v51, v107);
          sub_1001C1310();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v94, v93, "%s Request Log: Attestation: %s %s <%s %s: %s>", (uint8_t *)v42, 0x3Eu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          break;
      }
    }
    else
    {
      sub_10002CA34(v100);
      swift_bridgeObjectRelease();
      sub_100007918(v23, v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_release_n();
      swift_bridgeObjectRelease_n();
      unint64_t v48 = v100;
      sub_10002CA34(v100);
      swift_bridgeObjectRelease();
      sub_100007918(v23, v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      sub_10002CA34(v100);
      swift_bridgeObjectRelease();
      sub_100007918(v23, v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10002CA34(v100);
      swift_bridgeObjectRelease();
      sub_100007918(v23, v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v49 = v23;
      uint64_t v0 = v103;
    }
    uint64_t v53 = v0[42];
    uint64_t v52 = v0[43];
    uint64_t v54 = v0[40];
    sub_1001C01E0();
    swift_bridgeObjectRetain();
    sub_1001C01C0();
    sub_1001C01D0();
    swift_bridgeObjectRetain();
    sub_1001C01B0();
    (*v86)(v53, v52, v54);
    unint64_t v55 = v0[27];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v55 = sub_1000E3C90(0, *(void *)(v55 + 16) + 1, 1, v55);
    }
    unint64_t v57 = *(void *)(v55 + 16);
    unint64_t v56 = *(void *)(v55 + 24);
    if (v57 >= v56 >> 1) {
      unint64_t v55 = sub_1000E3C90(v56 > 1, v57 + 1, 1, v55);
    }
    uint64_t v58 = v0[42];
    uint64_t v59 = v0[43];
    uint64_t v60 = v0[40];
    *(void *)(v55 + 16) = v57 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v88 + 32))(v55+ ((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80))+ *(void *)(v88 + 72) * v57, v58, v60);
    sub_10002CA34(v48);
    swift_bridgeObjectRelease();
    sub_100007918(v49, v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v0[27] = v55;
    (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v59, v60);
    swift_bridgeObjectRelease();
    uint64_t v7 = v90;
    uint64_t v10 = v91;
    unint64_t v11 = v95;
    int64_t v6 = v96;
    if (v95) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_66;
    }
    if (v13 >= v85) {
      goto LABEL_50;
    }
    unint64_t v14 = *(void *)(v84 + 8 * v13);
    ++v6;
    if (!v14)
    {
      int64_t v6 = v13 + 1;
      if (v13 + 1 >= v85) {
        goto LABEL_50;
      }
      unint64_t v14 = *(void *)(v84 + 8 * v6);
      if (!v14)
      {
        int64_t v6 = v13 + 2;
        if (v13 + 2 >= v85) {
          goto LABEL_50;
        }
        unint64_t v14 = *(void *)(v84 + 8 * v6);
        if (!v14) {
          break;
        }
      }
    }
LABEL_18:
    uint64_t v95 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 < v85)
  {
    unint64_t v14 = *(void *)(v84 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v6 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          break;
        }
        if (v6 >= v85) {
          goto LABEL_50;
        }
        unint64_t v14 = *(void *)(v84 + 8 * v6);
        ++v15;
        if (v14) {
          goto LABEL_18;
        }
      }
LABEL_66:
      __break(1u);
      JUMPOUT(0x100141264);
    }
    int64_t v6 = v15;
    goto LABEL_18;
  }
LABEL_50:
  uint64_t v61 = v0[45];
  swift_bridgeObjectRelease();
  swift_release();
  v0[25] = sub_1001BF940();
  sub_100003918(&qword_100208930);
  sub_10015DB68();
  uint64_t v62 = sub_1001BEDF0();
  if (v61)
  {
    swift_bridgeObjectRelease();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v70 = sub_1001C0330();
    os_log_type_t v71 = sub_1001C11F0();
    if (os_log_type_enabled(v70, v71))
    {
      uint64_t v72 = (uint8_t *)swift_slowAlloc();
      int64_t v73 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v72 = 138412290;
      swift_errorRetain();
      uint64_t v74 = _swift_stdlib_bridgeErrorToNSError();
      *unint64_t v80 = v74;
      sub_1001C1310();
      *int64_t v73 = v74;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v70, v71, "failed to log Biome event: %@", v72, 0xCu);
      sub_100003918(&qword_100207DA8);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();
    }
  }
  else
  {
    uint64_t v64 = v62;
    unint64_t v65 = v63;
    swift_bridgeObjectRelease();
    sub_1001C0C20();
    uint64_t v67 = sub_1001C0C10();
    unint64_t v68 = v66;
    if (v66) {
      unint64_t v69 = v66;
    }
    else {
      unint64_t v69 = 0xE000000000000000;
    }
    sub_1001C0190();
    sub_1001627A0(&qword_10020E150, (void (*)(uint64_t))&type metadata accessor for Library.Streams.PrivateCloudCompute.RequestLog);
    sub_1001C01A0();
    uint64_t v105 = v0[38];
    uint64_t v75 = v0[36];
    uint64_t v76 = v0[35];
    if (!v68) {
      uint64_t v67 = 0;
    }
    uint64_t v106 = v0[37];
    sub_10000D934(v7, v0[5]);
    uint64_t v77 = (void *)swift_task_alloc();
    v77[2] = v76;
    v77[3] = v67;
    v77[4] = v69;
    v77[5] = v81;
    sub_1001C0270();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    sub_1001C0260();
    sub_10000792C(v64, v65);
    (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v105, v75);
    sub_100003E90((uint64_t)v7);
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v78 = (uint64_t (*)(void))v103[1];
  return v78();
}

uint64_t sub_10014129C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  if (a3)
  {
    uint64_t v14 = sub_100003918(&qword_100208CA8);
    uint64_t v15 = a1 + *(int *)(v14 + 88);
    uint64_t v16 = *(void *)v15;
    uint64_t v17 = *(void *)(v15 + 8);
    uint64_t v18 = *(void *)(v15 + 16);
    char v19 = *(unsigned char *)(v15 + 24);
    swift_errorRetain();
    swift_errorRetain();
    sub_100028A6C(v16, v17, v18, v19);
    *(void *)uint64_t v15 = a2;
    *(void *)(v15 + 8) = a4;
    *(void *)(v15 + 16) = a5;
    *(unsigned char *)(v15 + 24) = 1;
    uint64_t v10 = a1 + *(int *)(v14 + 76);
    uint64_t result = sub_100028984(*(void *)v10, *(unsigned char *)(v10 + 8));
    *(void *)uint64_t v10 = a2;
    char v12 = 3;
  }
  else
  {
    uint64_t v8 = sub_100003918(&qword_100208CA8);
    uint64_t v9 = a1 + *(int *)(v8 + 88);
    sub_100028A6C(*(void *)v9, *(void *)(v9 + 8), *(void *)(v9 + 16), *(unsigned char *)(v9 + 24));
    *(void *)uint64_t v9 = a4;
    *(void *)(v9 + 8) = a5;
    *(void *)(v9 + 16) = 0;
    *(unsigned char *)(v9 + 24) = 0;
    uint64_t v10 = a1 + *(int *)(v8 + 76);
    uint64_t result = sub_100028984(*(void *)v10, *(unsigned char *)(v10 + 8));
    *(void *)uint64_t v10 = 1;
    char v12 = 4;
  }
  *(unsigned char *)(v10 + 8) = v12;
  return result;
}

uint64_t sub_1001413DC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result = sub_100003918(&qword_100208CA8);
  uint64_t v15 = (uint64_t *)(a1 + *(int *)(result + 76));
  if (a3)
  {
    if ((v15[1] & 0xFE) != 2)
    {
      uint64_t *v15 = a2;
      *((unsigned char *)v15 + 8) = 3;
      return swift_errorRetain();
    }
  }
  else
  {
    uint64_t v16 = *v15;
    switch(*((unsigned char *)v15 + 8))
    {
      case 1:
        if (__OFADD__(v16, a4)) {
          goto LABEL_14;
        }
        uint64_t *v15 = v16 + a4;
        *((unsigned char *)v15 + 8) = 1;
        if (!v16) {
          goto LABEL_11;
        }
        return result;
      case 2:
      case 3:
        return result;
      case 4:
        if (!v16) {
          goto LABEL_15;
        }
        uint64_t *v15 = a4;
        *((unsigned char *)v15 + 8) = 0;
LABEL_11:
        uint64_t v19 = a1 + *(int *)(result + 92);
        *(void *)uint64_t v19 = a5;
        *(void *)(v19 + 8) = a6;
        *(unsigned char *)(v19 + 16) = a7 & 1;
        break;
      default:
        BOOL v17 = __OFADD__(v16, a4);
        uint64_t v18 = v16 + a4;
        if (v17)
        {
          __break(1u);
LABEL_14:
          __break(1u);
LABEL_15:
          sub_1001C1420(49);
          swift_bridgeObjectRelease();
          v20._uint64_t countAndFlagsBits = 0x696C616974696E49;
          v20._object = (void *)0xEB0000000064657ALL;
          sub_1001C0D00(v20);
          swift_bridgeObjectRelease();
          v21._object = (void *)0x80000001001C67E0;
          v21._uint64_t countAndFlagsBits = 0xD000000000000020;
          sub_1001C0D00(v21);
          sub_1001C1580();
          __break(1u);
          JUMPOUT(0x1001415C8);
        }
        uint64_t *v15 = v18;
        *((unsigned char *)v15 + 8) = 0;
        break;
    }
  }
  return result;
}

uint64_t sub_1001415DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_100003918(&qword_100208CA8);
  uint64_t v7 = a1 + *(int *)(result + 76);
  unsigned int v8 = *(unsigned __int8 *)(v7 + 8);
  BOOL v9 = v8 >= 2;
  unsigned int v10 = v8 - 2;
  if (v9)
  {
    if (v10 < 2) {
      return result;
    }
    if (!*(void *)v7)
    {
      sub_1001C1420(49);
      swift_bridgeObjectRelease();
      v12._uint64_t countAndFlagsBits = 0x696C616974696E49;
      v12._object = (void *)0xEB0000000064657ALL;
      sub_1001C0D00(v12);
      swift_bridgeObjectRelease();
      v13._object = (void *)0x80000001001C67E0;
      v13._uint64_t countAndFlagsBits = 0xD000000000000020;
      sub_1001C0D00(v13);
      uint64_t result = sub_1001C1580();
      __break(1u);
      return result;
    }
    *(void *)uint64_t v7 = 0;
  }
  *(unsigned char *)(v7 + 8) = 2;
  uint64_t v11 = a1 + *(int *)(result + 108);
  *(void *)uint64_t v11 = a2;
  *(void *)(v11 + 8) = a3;
  *(unsigned char *)(v11 + 16) = 0;
  return result;
}

uint64_t sub_100141734(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v130 = type metadata accessor for ValidatedAttestation();
  __chkstk_darwin(v130, v8);
  uint64_t v138 = (uint64_t *)((char *)&v115 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v139 = type metadata accessor for ValidatedAttestationOrAttestation();
  uint64_t result = __chkstk_darwin(v139, v10);
  uint64_t v14 = (uint64_t *)((char *)&v115 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a3) {
    goto LABEL_44;
  }
  unint64_t v15 = *(void *)(a2 + 16);
  if (v15)
  {
    uint64_t v122 = a4 + *(void *)(*(void *)a4 + 248);
    uint64_t v16 = (a2 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)));
    uint64_t v137 = *(void *)(v12 + 72);
    uint64_t v116 = a2;
    swift_bridgeObjectRetain();
    *(void *)&long long v17 = 136315138;
    long long v118 = v17;
    uint64_t v117 = (char *)&type metadata for Any + 8;
    long long v121 = xmmword_1001D3C60;
    long long v129 = xmmword_1001D3C50;
    long long v128 = xmmword_1001CE850;
    uint64_t v142 = a1;
    uint64_t v131 = v14;
    while (1)
    {
      sub_100161F3C((uint64_t)v16, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v27 = *v14;
        uint64_t v26 = v14[1];
        uint64_t v29 = v14[2];
        unint64_t v28 = v14[3];
        uint64_t v30 = v14[5];
        uint64_t v31 = v14[7];
        uint64_t v32 = v14[9];
        uint64_t v145 = v14[11];
        unint64_t v140 = v30;
        uint64_t v141 = v29;
        if (v28 >> 60 == 15)
        {
          unint64_t v133 = v27;
          swift_bridgeObjectRetain();
          sub_10000D9E0(v29, v28);
          swift_bridgeObjectRetain();
          unint64_t v134 = v26;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v144 = v28;
          sub_10000D9E0(v29, v28);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v33 = v32;
          uint64_t v34 = sub_1001C0330();
          os_log_type_t v35 = sub_1001C11F0();
          uint64_t v36 = v31;
          int v37 = v35;
          uint64_t v143 = v34;
          if (os_log_type_enabled(v34, v35))
          {
            unint64_t v38 = (uint8_t *)swift_slowAlloc();
            unint64_t v136 = v33;
            LODWORD(v132) = v37;
            uint64_t v39 = v38;
            unint64_t v126 = v38;
            uint64_t v127 = swift_slowAlloc();
            uint64_t v146 = (void *)v127;
            *(_DWORD *)uint64_t v39 = v118;
            unint64_t v40 = v134;
            swift_bridgeObjectRetain();
            *(void *)(v39 + 4) = sub_1000DF238(v133, v40, (uint64_t *)&v146);
            swift_bridgeObjectRelease_n();
            uint64_t v41 = v141;
            unint64_t v42 = v144;
            sub_100007918(v141, v144);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v135 = v36;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_100007918(v41, v42);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v43 = v143;
            _os_log_impl((void *)&_mh_execute_header, v143, (os_log_type_t)v132, "bundle missing for attestation: %s", v126, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
            swift_bridgeObjectRelease();

            sub_100007918(v141, v42);
          }
          else
          {
            swift_bridgeObjectRelease();

            uint64_t v92 = v141;
            unint64_t v93 = v144;
            sub_100007918(v141, v144);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_100007918(v92, v93);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_100007918(v92, v93);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          a1 = v142;
          goto LABEL_7;
        }
        uint64_t v143 = v16;
        unint64_t v144 = v15;
        uint64_t v125 = v14[4];
        unint64_t v126 = (uint8_t *)v14[6];
        uint64_t v127 = v14[8];
        uint64_t v132 = v14[10];
        uint64_t v124 = v14[12];
        uint64_t v67 = *(int *)(sub_100003918(&qword_100208CA8) + 124);
        swift_bridgeObjectRetain_n();
        sub_10000D9E0(v29, v28);
        unint64_t v68 = v145;
        swift_bridgeObjectRetain();
        uint64_t v69 = v142;
        swift_bridgeObjectRetain();
        uint64_t v135 = v31;
        swift_bridgeObjectRetain();
        unint64_t v136 = v32;
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v146 = *(void **)(v69 + v67);
        uint64_t v71 = (uint64_t)v146;
        uint64_t v123 = v67;
        *(void *)(v69 + v67) = 0x8000000000000000;
        uint64_t v72 = v26;
        unint64_t v74 = sub_100169E3C(v27, v26);
        uint64_t v75 = *(void *)(v71 + 16);
        BOOL v76 = (v73 & 1) == 0;
        uint64_t v77 = v75 + v76;
        if (__OFADD__(v75, v76)) {
          goto LABEL_40;
        }
        char v78 = v73;
        if (*(void *)(v71 + 24) >= v77)
        {
          unint64_t v81 = v68;
          if (isUniquelyReferenced_nonNull_native)
          {
            unint64_t v82 = v146;
            if ((v73 & 1) == 0) {
              goto LABEL_34;
            }
          }
          else
          {
            sub_1000EE2A8();
            unint64_t v82 = v146;
            if ((v78 & 1) == 0) {
              goto LABEL_34;
            }
          }
        }
        else
        {
          sub_1000EA314(v77, isUniquelyReferenced_nonNull_native);
          unint64_t v79 = sub_100169E3C(v27, v26);
          if ((v78 & 1) != (v80 & 1)) {
            goto LABEL_43;
          }
          unint64_t v74 = v79;
          unint64_t v81 = v68;
          unint64_t v82 = v146;
          if ((v78 & 1) == 0)
          {
LABEL_34:
            v82[(v74 >> 6) + 8] |= 1 << v74;
            uint64_t v106 = (uint64_t *)(v82[6] + 16 * v74);
            *uint64_t v106 = v27;
            v106[1] = v72;
            uint64_t v107 = v82[7] + 120 * v74;
            *(_OWORD *)uint64_t v107 = v121;
            *(void *)(v107 + 16) = v27;
            *(void *)(v107 + 24) = v72;
            unint64_t v108 = v140;
            *(void *)(v107 + 32) = v141;
            *(void *)(v107 + 40) = v28;
            uint64_t v109 = v125;
            *(void *)(v107 + 48) = v124;
            *(void *)(v107 + 56) = v109;
            uint64_t v110 = v126;
            *(void *)(v107 + 64) = v108;
            *(void *)(v107 + 72) = v110;
            uint64_t v111 = v127;
            *(void *)(v107 + 80) = v135;
            *(void *)(v107 + 88) = v111;
            uint64_t v112 = v132;
            *(void *)(v107 + 96) = v136;
            *(void *)(v107 + 104) = v112;
            *(void *)(v107 + 112) = v81;
            uint64_t v113 = v82[2];
            BOOL v90 = __OFADD__(v113, 1);
            uint64_t v114 = v113 + 1;
            if (v90) {
              goto LABEL_42;
            }
            v82[2] = v114;
            swift_bridgeObjectRetain();
            uint64_t v100 = v141;
            goto LABEL_36;
          }
        }
        uint64_t v94 = v82[7];
        unint64_t v133 = v27;
        uint64_t v95 = (unint64_t *)(v94 + 120 * v74);
        unint64_t v96 = *v95;
        uint64_t v97 = v95[4];
        unint64_t v98 = v95[5];
        unint64_t v119 = v95[10];
        unint64_t v120 = v95[12];
        uint64_t v145 = v95[14];
        sub_10002CA34(v96);
        swift_bridgeObjectRelease();
        sub_100007918(v97, v98);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(_OWORD *)uint64_t v95 = v121;
        v95[2] = v133;
        v95[3] = v72;
        unint64_t v99 = v140;
        uint64_t v100 = v141;
        v95[4] = v141;
        v95[5] = v28;
        unint64_t v101 = v125;
        v95[6] = v124;
        v95[7] = v101;
        unint64_t v102 = v126;
        v95[8] = v99;
        v95[9] = (unint64_t)v102;
        unint64_t v103 = v136;
        uint64_t v104 = v127;
        v95[10] = v135;
        v95[11] = v104;
        unint64_t v105 = v132;
        v95[12] = v103;
        v95[13] = v105;
        v95[14] = v81;
LABEL_36:
        a1 = v142;
        *(void *)(v142 + v123) = v82;
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        sub_100007918(v100, v28);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
      uint64_t v143 = v16;
      unint64_t v144 = v15;
      uint64_t v145 = *(uint64_t *)((char *)v14 + *(int *)(sub_100003918(&qword_100208188) + 48));
      unint64_t v44 = v138;
      sub_1001627E8((uint64_t)v14, (uint64_t)v138, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
      uint64_t v46 = *v44;
      uint64_t v45 = v44[1];
      uint64_t v47 = v44[4];
      uint64_t v48 = v44[5];
      uint64_t v49 = v44[7];
      uint64_t v135 = v44[6];
      uint64_t v50 = (unint64_t *)((char *)v44 + *(int *)(v130 + 32));
      unint64_t v51 = *v50;
      unint64_t v52 = v50[1];
      unint64_t v133 = v47;
      unint64_t v134 = v51;
      uint64_t v53 = v44[11];
      uint64_t v141 = v44[10];
      uint64_t v54 = *(int *)(sub_100003918(&qword_100208CA8) + 124);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      unint64_t v140 = v49;
      swift_bridgeObjectRetain();
      unint64_t v136 = v52;
      swift_bridgeObjectRetain();
      char v55 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v146 = *(void **)(a1 + v54);
      uint64_t v56 = (uint64_t)v146;
      *(void *)(a1 + v54) = 0x8000000000000000;
      unint64_t v58 = sub_100169E3C(v46, v45);
      uint64_t v59 = *(void *)(v56 + 16);
      BOOL v60 = (v57 & 1) == 0;
      uint64_t v61 = v59 + v60;
      if (__OFADD__(v59, v60))
      {
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        sub_1001C18C0();
        __break(1u);
LABEL_44:
        sub_100003918(&qword_10020E6E8);
        uint64_t result = sub_1001C1830();
        __break(1u);
        return result;
      }
      char v62 = v57;
      uint64_t v63 = *(void *)(v56 + 24);
      uint64_t v132 = v53;
      if (v63 >= v61)
      {
        if (v55)
        {
          unint64_t v66 = v146;
          if ((v57 & 1) == 0) {
            goto LABEL_24;
          }
        }
        else
        {
          sub_1000EE2A8();
          unint64_t v66 = v146;
          if ((v62 & 1) == 0) {
            goto LABEL_24;
          }
        }
      }
      else
      {
        sub_1000EA314(v61, v55);
        unint64_t v64 = sub_100169E3C(v46, v45);
        if ((v62 & 1) != (v65 & 1)) {
          goto LABEL_43;
        }
        unint64_t v58 = v64;
        unint64_t v66 = v146;
        if ((v62 & 1) == 0)
        {
LABEL_24:
          v66[(v58 >> 6) + 8] |= 1 << v58;
          uint64_t v83 = (uint64_t *)(v66[6] + 16 * v58);
          *uint64_t v83 = v46;
          v83[1] = v45;
          uint64_t v84 = v66[7] + 120 * v58;
          *(_OWORD *)uint64_t v84 = v129;
          *(void *)(v84 + 16) = v46;
          *(void *)(v84 + 24) = v45;
          *(_OWORD *)(v84 + 32) = v128;
          uint64_t v85 = v133;
          *(void *)(v84 + 48) = v145;
          *(void *)(v84 + 56) = v85;
          uint64_t v86 = v135;
          *(void *)(v84 + 64) = v48;
          *(void *)(v84 + 72) = v86;
          unint64_t v87 = v134;
          *(void *)(v84 + 80) = v140;
          *(void *)(v84 + 88) = v87;
          uint64_t v88 = v141;
          *(void *)(v84 + 96) = v136;
          *(void *)(v84 + 104) = v88;
          *(void *)(v84 + 112) = v132;
          uint64_t v89 = v66[2];
          BOOL v90 = __OFADD__(v89, 1);
          uint64_t v91 = v89 + 1;
          if (v90) {
            goto LABEL_41;
          }
          uint64_t v66[2] = v91;
          swift_bridgeObjectRetain();
          goto LABEL_5;
        }
      }
      uint64_t v18 = (unint64_t *)(v66[7] + 120 * v58);
      unint64_t v19 = *v18;
      uint64_t v20 = v18[4];
      unint64_t v21 = v18[5];
      uint64_t v124 = v18[8];
      uint64_t v125 = v18[10];
      unint64_t v126 = (uint8_t *)v18[12];
      uint64_t v127 = v18[14];
      sub_10002CA34(v19);
      swift_bridgeObjectRelease();
      sub_100007918(v20, v21);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_OWORD *)uint64_t v18 = v129;
      void v18[2] = v46;
      v18[3] = v45;
      *((_OWORD *)v18 + 2) = v128;
      uint64_t v22 = v133;
      v18[6] = v145;
      v18[7] = v22;
      unint64_t v23 = v135;
      v18[8] = v48;
      v18[9] = v23;
      unint64_t v24 = v134;
      v18[10] = v140;
      v18[11] = v24;
      uint64_t v25 = v141;
      v18[12] = v136;
      v18[13] = v25;
      v18[14] = v132;
LABEL_5:
      a1 = v142;
      *(void *)(v142 + v54) = v66;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10016290C((uint64_t)v138, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
LABEL_6:
      uint64_t v14 = v131;
      uint64_t v16 = v143;
      unint64_t v15 = v144;
LABEL_7:
      uint64_t v16 = ((char *)v16 + v137);
      if (!--v15) {
        return sub_10015DF8C(v116, 0);
      }
    }
  }
  return result;
}

uint64_t sub_100142320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v113 = a5;
  uint64_t v11 = type metadata accessor for ValidatedAttestation();
  __chkstk_darwin(v11 - 8, v12);
  long long v118 = (uint64_t *)((char *)&v110 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v137 = type metadata accessor for ValidatedAttestationOrAttestation();
  uint64_t v14 = *(void *)(v137 - 8);
  uint64_t v16 = __chkstk_darwin(v137, v15);
  unint64_t v120 = (uint64_t *)((char *)&v110 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v132 = (uint64_t)&v110 - v20;
  uint64_t v22 = __chkstk_darwin(v19, v21);
  unint64_t v24 = (uint64_t *)((char *)&v110 - v23);
  __chkstk_darwin(v22, v25);
  uint64_t v123 = (uint64_t)&v110 - v26;
  uint64_t v27 = sub_100003918(&qword_10020E070);
  __chkstk_darwin(v27, v28);
  uint64_t v30 = (uint64_t *)((char *)&v110 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v124 = (int *)sub_100003918(&qword_100208CA8);
  uint64_t v31 = v124[24];
  uint64_t v134 = a1;
  uint64_t v32 = a1 + v31;
  if ((*(unsigned char *)(v32 + 24) & 1) == 0)
  {
    BOOL v33 = __OFADD__(*(void *)v32, a2);
    a2 += *(void *)v32;
    if (v33) {
      goto LABEL_42;
    }
    a3 = *(void *)(v32 + 8);
    a4 = *(void *)(v32 + 16);
  }
  *(void *)uint64_t v32 = a2;
  *(void *)(v32 + 8) = a3;
  *(void *)(v32 + 16) = a4;
  *(unsigned char *)(v32 + 24) = 0;
  uint64_t v34 = v134 + v124[17];
  sub_10003282C(v34, (uint64_t)v30, &qword_10020E070);
  uint64_t v35 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 3u:
    case 5u:
    case 6u:
    case 7u:
      break;
    case 4u:
      uint64_t v36 = sub_1001BF810();
      (*(void (**)(uint64_t *, uint64_t))(*(void *)(v36 - 8) + 8))(v30, v36);
      uint64_t v35 = 0;
      break;
    default:
      uint64_t v35 = *v30;
      sub_100010360(v34, &qword_10020E070);
      swift_storeEnumTagMultiPayload();
      break;
  }
  uint64_t v37 = *(void *)(v113 + 16);
  if (v37)
  {
    uint64_t v111 = v35;
    uint64_t v131 = a6 + *(void *)(*(void *)a6 + 248);
    uint64_t v38 = v113 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    uint64_t v135 = *(void *)(v14 + 72);
    swift_bridgeObjectRetain();
    *(void *)&long long v39 = 136315138;
    long long v121 = v39;
    uint64_t v112 = (char *)&type metadata for Any + 8;
    long long v119 = xmmword_1001D3C60;
    uint64_t v40 = v132;
    uint64_t v41 = v123;
    while (1)
    {
      sub_100161F3C(v38, v41, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
      sub_100161F3C(v41, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v43 = *v24;
        unint64_t v42 = v24[1];
        uint64_t v44 = v24[2];
        unint64_t v45 = v24[3];
        uint64_t v46 = v24[5];
        uint64_t v47 = v24[6];
        uint64_t v126 = v24[4];
        unint64_t v127 = v47;
        uint64_t v136 = v24[7];
        uint64_t v48 = v24[8];
        uint64_t v49 = v24[9];
        unint64_t v140 = v44;
        unint64_t v141 = v49;
        uint64_t v50 = v24[10];
        unint64_t v128 = v48;
        uint64_t v129 = v50;
        uint64_t v51 = v24[11];
        uint64_t v138 = v45;
        unint64_t v139 = v51;
        uint64_t v125 = v24[12];
        id v133 = (id)v124[31];
        if (*(void *)(*(void *)((char *)v133 + v134) + 16)
          && (swift_bridgeObjectRetain(), sub_100169E3C(v43, v42),
                                          char v53 = v52,
                                          swift_bridgeObjectRelease(),
                                          (v53 & 1) != 0))
        {
          sub_10016290C(v41, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
          swift_bridgeObjectRelease();
          sub_100007918(v140, v138);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRetain();
          uint64_t v64 = v140;
          unint64_t v65 = v138;
          sub_10000D9E0(v140, v138);
          if (v65 >> 60 != 15)
          {
            swift_bridgeObjectRetain();
            sub_10000D9E0(v64, v65);
            swift_bridgeObjectRetain();
            unint64_t v74 = (char *)v133;
            uint64_t v73 = v134;
            unint64_t v130 = v46;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v142 = *(void **)&v74[v73];
            uint64_t v76 = (uint64_t)v142;
            *(void *)&v74[v73] = 0x8000000000000000;
            unint64_t v78 = sub_100169E3C(v43, v42);
            uint64_t v79 = *(void *)(v76 + 16);
            BOOL v80 = (v77 & 1) == 0;
            uint64_t v81 = v79 + v80;
            if (__OFADD__(v79, v80))
            {
              __break(1u);
LABEL_41:
              __break(1u);
LABEL_42:
              __break(1u);
LABEL_43:
              sub_1001C18C0();
              __break(1u);
              JUMPOUT(0x100142F84);
            }
            char v82 = v77;
            if (*(void *)(v76 + 24) >= v81)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                sub_1000EE2A8();
              }
            }
            else
            {
              sub_1000EA314(v81, isUniquelyReferenced_nonNull_native);
              unint64_t v83 = sub_100169E3C(v43, v42);
              if ((v82 & 1) != (v84 & 1)) {
                goto LABEL_43;
              }
              unint64_t v78 = v83;
            }
            uint64_t v122 = v37;
            uint64_t v88 = v142;
            if (v82)
            {
              uint64_t v89 = (unint64_t *)(v142[7] + 120 * v78);
              unint64_t v90 = *v89;
              uint64_t v114 = v89[4];
              unint64_t v91 = v89[5];
              unint64_t v115 = v89[8];
              unint64_t v116 = v89[10];
              unint64_t v117 = v89[12];
              sub_10002CA34(v90);
              swift_bridgeObjectRelease();
              sub_100007918(v114, v91);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              *(_OWORD *)uint64_t v89 = v119;
              v89[2] = v43;
              v89[3] = v42;
              unint64_t v92 = v139;
              uint64_t v93 = v140;
              unint64_t v94 = v138;
              v89[4] = v140;
              v89[5] = v94;
              unint64_t v95 = v126;
              v89[6] = v125;
              v89[7] = v95;
              uint64_t v96 = v129;
              unint64_t v97 = v127;
              v89[8] = v130;
              v89[9] = v97;
              unint64_t v98 = v128;
              v89[10] = v136;
              v89[11] = v98;
              v89[12] = v141;
              v89[13] = v96;
              v89[14] = v92;
            }
            else
            {
              v142[(v78 >> 6) + 8] |= 1 << v78;
              unint64_t v99 = (uint64_t *)(v88[6] + 16 * v78);
              *unint64_t v99 = v43;
              v99[1] = v42;
              uint64_t v100 = v88[7] + 120 * v78;
              *(_OWORD *)uint64_t v100 = v119;
              *(void *)(v100 + 16) = v43;
              *(void *)(v100 + 24) = v42;
              uint64_t v101 = v141;
              unint64_t v94 = v138;
              unint64_t v102 = v139;
              *(void *)(v100 + 32) = v140;
              *(void *)(v100 + 40) = v94;
              uint64_t v103 = v126;
              *(void *)(v100 + 48) = v125;
              *(void *)(v100 + 56) = v103;
              unint64_t v104 = v127;
              *(void *)(v100 + 64) = v130;
              *(void *)(v100 + 72) = v104;
              unint64_t v105 = v128;
              *(void *)(v100 + 80) = v136;
              *(void *)(v100 + 88) = v105;
              uint64_t v106 = v129;
              *(void *)(v100 + 96) = v101;
              *(void *)(v100 + 104) = v106;
              *(void *)(v100 + 112) = v102;
              uint64_t v107 = v88[2];
              BOOL v33 = __OFADD__(v107, 1);
              uint64_t v108 = v107 + 1;
              if (v33) {
                goto LABEL_41;
              }
              v88[2] = v108;
              swift_bridgeObjectRetain();
              uint64_t v93 = v140;
            }
            *(void *)((char *)v133 + v134) = v88;
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            sub_100007918(v93, v94);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_100007918(v93, v94);
            uint64_t v41 = v123;
            sub_10016290C(v123, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
            uint64_t v40 = v132;
            uint64_t v37 = v122;
            goto LABEL_11;
          }
          uint64_t v129 = v43;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v66 = sub_1001C0330();
          os_log_type_t v67 = sub_1001C11F0();
          id v133 = v66;
          if (os_log_type_enabled(v66, v67))
          {
            uint64_t v68 = swift_slowAlloc();
            uint64_t v69 = swift_slowAlloc();
            unint64_t v130 = v46;
            uint64_t v142 = (void *)v69;
            *(_DWORD *)uint64_t v68 = v121;
            swift_bridgeObjectRetain();
            *(void *)(v68 + 4) = sub_1000DF238(v129, v42, (uint64_t *)&v142);
            swift_bridgeObjectRelease_n();
            uint64_t v122 = v37;
            unint64_t v70 = v138;
            sub_100007918(v140, v138);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            id v71 = v133;
            _os_log_impl((void *)&_mh_execute_header, (os_log_t)v133, v67, "bundle missing for attestation: %s", (uint8_t *)v68, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            uint64_t v41 = v123;
            swift_slowDealloc();
            swift_bridgeObjectRelease();

            unint64_t v72 = v70;
            uint64_t v37 = v122;
            sub_100007918(v140, v72);
          }
          else
          {
            swift_bridgeObjectRelease();
            uint64_t v86 = v140;
            unint64_t v87 = v138;
            sub_100007918(v140, v138);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_100007918(v86, v87);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_10016290C(v41, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
        }
        uint64_t v40 = v132;
      }
      else
      {
        sub_100161F3C(v41, v40, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
        uint64_t v54 = sub_1001C0330();
        os_log_type_t v55 = sub_1001C11F0();
        if (os_log_type_enabled(v54, v55))
        {
          uint64_t v56 = swift_slowAlloc();
          uint64_t v142 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v56 = v121;
          char v57 = v120;
          sub_100161F3C(v40, (uint64_t)v120, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v58 = *v57;
            uint64_t v59 = v57;
            unint64_t v60 = v57[1];
            uint64_t v61 = v59[2];
            unint64_t v62 = v59[3];
            unint64_t v63 = v59[9];
            uint64_t v138 = v59[5];
            unint64_t v139 = v63;
            unint64_t v140 = v59[11];
            unint64_t v141 = v58;
            sub_100007918(v61, v62);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v85 = v118;
            sub_1001627E8((uint64_t)v57, (uint64_t)v118, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
            unint64_t v60 = v85[1];
            unint64_t v141 = *v85;
            swift_bridgeObjectRetain();
            sub_10016290C((uint64_t)v85, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
          }
          *(void *)(v56 + 4) = sub_1000DF238(v141, v60, (uint64_t *)&v142);
          swift_bridgeObjectRelease();
          uint64_t v40 = v132;
          sub_10016290C(v132, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
          _os_log_impl((void *)&_mh_execute_header, v54, v55, "Received unexpected validated attestation nodeID: %s", (uint8_t *)v56, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v41 = v123;
        }
        else
        {
          sub_10016290C(v40, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
        }
        sub_10016290C(v41, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
        sub_10016290C((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
      }
LABEL_11:
      v38 += v135;
      if (!--v37)
      {
        swift_bridgeObjectRelease();
        return v111;
      }
    }
  }
  return v35;
}

uint64_t sub_100142FA4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v159 = a6;
  unint64_t v160 = a5;
  unint64_t v158 = a3;
  uint64_t v9 = type metadata accessor for ValidatedAttestation();
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v135 = (void *)((char *)v128 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v146 = type metadata accessor for ValidatedAttestationOrAttestation();
  uint64_t v155 = *(void *)(v146 - 8);
  uint64_t v13 = __chkstk_darwin(v146, v12);
  uint64_t v156 = (void *)((char *)v128 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = __chkstk_darwin(v13, v15);
  uint64_t v147 = (char *)v128 - v17;
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v21 = (void *)((char *)v128 - v20);
  __chkstk_darwin(v19, v22);
  uint64_t v139 = (uint64_t)v128 - v23;
  uint64_t v24 = sub_100003918(&qword_10020E2B0);
  uint64_t v26 = __chkstk_darwin(v24 - 8, v25);
  uint64_t v148 = (uint64_t)v128 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26, v28);
  uint64_t v30 = (char *)v128 - v29;
  uint64_t v31 = sub_100003918(&qword_10020E5F8);
  __chkstk_darwin(v31 - 8, v32);
  uint64_t v34 = (char *)v128 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_100003918(&qword_10020E600);
  uint64_t v37 = __chkstk_darwin(v35 - 8, v36);
  long long v39 = (char *)v128 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37, v40);
  uint64_t v154 = (uint64_t)v128 - v41;
  uint64_t v42 = sub_100003918(&qword_10020E070);
  __chkstk_darwin(v42, v43);
  unint64_t v45 = (void *)((char *)v128 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v138 = (int *)sub_100003918(&qword_100208CA8);
  uint64_t v46 = v138[24];
  uint64_t v149 = a1;
  uint64_t v47 = a1 + v46;
  if (*(unsigned char *)(v47 + 24))
  {
    unint64_t v48 = v158;
  }
  else
  {
    BOOL v49 = __OFADD__(*(void *)v47, a2);
    a2 += *(void *)v47;
    if (v49) {
      goto LABEL_44;
    }
    unint64_t v48 = *(void *)(v47 + 8);
    a4 = *(void *)(v47 + 16);
  }
  *(void *)uint64_t v47 = a2;
  *(void *)(v47 + 8) = v48;
  *(void *)(v47 + 16) = a4;
  *(unsigned char *)(v47 + 24) = 0;
  uint64_t v50 = v149 + v138[17];
  sub_10003282C(v50, (uint64_t)v45, &qword_10020E070);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v129 = 0;
  uint64_t v52 = v146;
  char v53 = v156;
  switch(EnumCaseMultiPayload)
  {
    case 3:
    case 5:
    case 6:
    case 7:
      break;
    case 4:
      uint64_t v54 = sub_1001BF810();
      (*(void (**)(uint64_t *, uint64_t))(*(void *)(v54 - 8) + 8))(v45, v54);
      uint64_t v129 = 0;
      break;
    default:
      uint64_t v129 = *v45;
      sub_100010360(v50, &qword_10020E070);
      swift_storeEnumTagMultiPayload();
      break;
  }
  sub_10003282C(v160, (uint64_t)v34, &qword_10020E5F8);
  sub_1001627E8((uint64_t)v34, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
  uint64_t v55 = v155;
  uint64_t v57 = v155 + 56;
  uint64_t v56 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v155 + 56);
  v56((uint64_t)v30, 0, 1, v52);
  v56((uint64_t)v39, 1, 1, v52);
  sub_10004E328((uint64_t)v30, (uint64_t)v39, &qword_10020E2B0);
  uint64_t v58 = (uint64_t)v39;
  uint64_t v59 = v154;
  sub_10002C318(v58, v154, &qword_10020E600);
  uint64_t v60 = v159;
  unint64_t v160 = *(void *)(*(void *)v159 + 248);
  uint64_t v61 = v148;
  sub_10002C318(v59, v148, &qword_10020E2B0);
  uint64_t v151 = v56;
  uint64_t v152 = v57;
  v56(v59, 1, 1, v52);
  unint64_t v62 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
  uint64_t v155 = v55 + 48;
  char v150 = v62;
  unsigned int v63 = v62(v61, 1, v52);
  uint64_t v65 = (uint64_t)v147;
  uint64_t v66 = v139;
  if (v63 != 1)
  {
    unint64_t v145 = v60 + v160;
    *(void *)&long long v64 = 136315138;
    long long v137 = v64;
    v128[1] = (char *)&type metadata for Any + 8;
    long long v136 = xmmword_1001D3C60;
    do
    {
      sub_1001627E8(v61, v66, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
      sub_100161F3C(v66, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        sub_100161F3C(v66, v65, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
        uint64_t v81 = sub_1001C0330();
        os_log_type_t v82 = sub_1001C11F0();
        if (os_log_type_enabled(v81, v82))
        {
          uint64_t v83 = swift_slowAlloc();
          char v161 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v83 = v137;
          sub_100161F3C(v65, (uint64_t)v53, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v84 = *v53;
            unint64_t v85 = v53[1];
            uint64_t v86 = v53[2];
            unint64_t v87 = v53[3];
            uint64_t v159 = v156[11];
            unint64_t v160 = v84;
            sub_100007918(v86, v87);
            uint64_t v65 = (uint64_t)v147;
            swift_bridgeObjectRelease();
            char v53 = v156;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v106 = v135;
            sub_1001627E8((uint64_t)v53, (uint64_t)v135, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
            unint64_t v85 = v106[1];
            unint64_t v160 = *v106;
            swift_bridgeObjectRetain();
            sub_10016290C((uint64_t)v106, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
          }
          *(void *)(v83 + 4) = sub_1000DF238(v160, v85, (uint64_t *)&v161);
          swift_bridgeObjectRelease();
          sub_10016290C(v65, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
          _os_log_impl((void *)&_mh_execute_header, v81, v82, "Received unexpected validated attestation nodeID: %s", (uint8_t *)v83, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v66 = v139;
          sub_10016290C(v139, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
          uint64_t v52 = v146;
        }
        else
        {
          sub_10016290C(v65, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);

          sub_10016290C(v66, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
        }
        sub_10016290C((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for ValidatedAttestation);
        goto LABEL_13;
      }
      uint64_t v69 = *v21;
      unint64_t v70 = v21[1];
      uint64_t v71 = v21[2];
      unint64_t v72 = v21[3];
      uint64_t v73 = v21[5];
      uint64_t v74 = v21[6];
      uint64_t v141 = v21[4];
      unint64_t v142 = v74;
      uint64_t v159 = v21[7];
      unint64_t v160 = v73;
      uint64_t v75 = v21[8];
      uint64_t v76 = v21[9];
      unint64_t v157 = v71;
      unint64_t v158 = v76;
      char v77 = v21[10];
      unint64_t v143 = v75;
      unint64_t v144 = v77;
      uint64_t v153 = v21[11];
      uint64_t v140 = v21[12];
      uint64_t v78 = v138[31];
      if (*(void *)(*(void *)(v149 + v78) + 16))
      {
        swift_bridgeObjectRetain();
        sub_100169E3C(v69, v70);
        char v80 = v79;
        swift_bridgeObjectRelease();
        if (v80)
        {
          sub_10016290C(v66, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
          swift_bridgeObjectRelease();
          sub_100007918(v157, v72);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_34:
          char v53 = v156;
          uint64_t v65 = (uint64_t)v147;
          goto LABEL_14;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v88 = v157;
      sub_10000D9E0(v157, v72);
      if (v72 >> 60 == 15)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v89 = sub_1001C0330();
        os_log_type_t v90 = sub_1001C11F0();
        unint64_t v144 = v89;
        if (os_log_type_enabled(v89, v90))
        {
          uint64_t v91 = swift_slowAlloc();
          char v161 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v91 = v137;
          swift_bridgeObjectRetain();
          *(void *)(v91 + 4) = sub_1000DF238(v69, v70, (uint64_t *)&v161);
          swift_bridgeObjectRelease_n();
          uint64_t v92 = v157;
          sub_100007918(v157, v72);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v93 = v144;
          _os_log_impl((void *)&_mh_execute_header, v144, v90, "bundle missing for attestation: %s", (uint8_t *)v91, 0xCu);
          swift_arrayDestroy();
          uint64_t v66 = v139;
          swift_slowDealloc();
          uint64_t v61 = v148;
          swift_slowDealloc();
          swift_bridgeObjectRelease();

          sub_100007918(v92, v72);
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v107 = v157;
          sub_100007918(v157, v72);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_100007918(v107, v72);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10016290C(v66, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
        uint64_t v52 = v146;
        goto LABEL_34;
      }
      swift_bridgeObjectRetain();
      sub_10000D9E0(v88, v72);
      swift_bridgeObjectRetain();
      uint64_t v94 = v149;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      char v161 = *(void **)(v94 + v78);
      uint64_t v96 = (uint64_t)v161;
      *(void *)(v94 + v78) = 0x8000000000000000;
      unint64_t v98 = sub_100169E3C(v69, v70);
      uint64_t v99 = *(void *)(v96 + 16);
      BOOL v100 = (v97 & 1) == 0;
      uint64_t v101 = v99 + v100;
      if (__OFADD__(v99, v100))
      {
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        sub_1001C18C0();
        __break(1u);
        JUMPOUT(0x100143EA8);
      }
      char v102 = v97;
      if (*(void *)(v96 + 24) >= v101)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          unint64_t v105 = v161;
          if ((v97 & 1) == 0) {
            goto LABEL_39;
          }
        }
        else
        {
          sub_1000EE2A8();
          unint64_t v105 = v161;
          if ((v102 & 1) == 0) {
            goto LABEL_39;
          }
        }
      }
      else
      {
        sub_1000EA314(v101, isUniquelyReferenced_nonNull_native);
        unint64_t v103 = sub_100169E3C(v69, v70);
        if ((v102 & 1) != (v104 & 1)) {
          goto LABEL_45;
        }
        unint64_t v98 = v103;
        unint64_t v105 = v161;
        if ((v102 & 1) == 0)
        {
LABEL_39:
          v105[(v98 >> 6) + 8] |= 1 << v98;
          long long v118 = (uint64_t *)(v105[6] + 16 * v98);
          *long long v118 = v69;
          v118[1] = v70;
          uint64_t v119 = v105[7] + 120 * v98;
          *(_OWORD *)uint64_t v119 = v136;
          *(void *)(v119 + 16) = v69;
          *(void *)(v119 + 24) = v70;
          uint64_t v111 = v157;
          unint64_t v120 = v158;
          *(void *)(v119 + 32) = v157;
          *(void *)(v119 + 40) = v72;
          unint64_t v117 = v72;
          uint64_t v121 = v141;
          *(void *)(v119 + 48) = v140;
          *(void *)(v119 + 56) = v121;
          uint64_t v122 = v159;
          unint64_t v123 = v142;
          *(void *)(v119 + 64) = v160;
          *(void *)(v119 + 72) = v123;
          unint64_t v124 = v143;
          *(void *)(v119 + 80) = v122;
          *(void *)(v119 + 88) = v124;
          uint64_t v125 = v144;
          *(void *)(v119 + 96) = v120;
          *(void *)(v119 + 104) = v125;
          *(void *)(v119 + 112) = v153;
          uint64_t v126 = v105[2];
          BOOL v49 = __OFADD__(v126, 1);
          uint64_t v127 = v126 + 1;
          if (v49) {
            goto LABEL_43;
          }
          void v105[2] = v127;
          swift_bridgeObjectRetain();
          goto LABEL_41;
        }
      }
      uint64_t v108 = (unint64_t *)(v105[7] + 120 * v98);
      unint64_t v109 = *v108;
      uint64_t v130 = v108[4];
      unint64_t v110 = v108[5];
      unint64_t v131 = v108[8];
      unint64_t v132 = v108[10];
      unint64_t v133 = v108[12];
      unint64_t v134 = v108[14];
      sub_10002CA34(v109);
      swift_bridgeObjectRelease();
      sub_100007918(v130, v110);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_OWORD *)uint64_t v108 = v136;
      v108[2] = v69;
      v108[3] = v70;
      uint64_t v111 = v157;
      v108[4] = v157;
      v108[5] = v72;
      unint64_t v112 = v141;
      v108[6] = v140;
      v108[7] = v112;
      unint64_t v113 = v159;
      unint64_t v114 = v142;
      v108[8] = v160;
      v108[9] = v114;
      unint64_t v115 = v143;
      unint64_t v116 = v144;
      v108[10] = v113;
      v108[11] = v115;
      v108[12] = v158;
      v108[13] = (unint64_t)v116;
      unint64_t v117 = v72;
      v108[14] = v153;
LABEL_41:
      *(void *)(v149 + v78) = v105;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      sub_100007918(v111, v117);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100007918(v111, v117);
      uint64_t v66 = v139;
      sub_10016290C(v139, (uint64_t (*)(void))type metadata accessor for ValidatedAttestationOrAttestation);
      uint64_t v52 = v146;
      uint64_t v65 = (uint64_t)v147;
      char v53 = v156;
LABEL_13:
      uint64_t v61 = v148;
LABEL_14:
      uint64_t v68 = v154;
      sub_10002C318(v154, v61, &qword_10020E2B0);
      v151(v68, 1, 1, v52);
    }
    while (v150(v61, 1, v52) != 1);
  }
  sub_100010360(v154, &qword_10020E600);
  return v129;
}

uint64_t sub_100143EC8(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020E070);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (uint64_t *)((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = a1 + *(int *)(sub_100003918(&qword_100208CA8) + 68);
  sub_10003282C(v6, (uint64_t)v5, &qword_10020E070);
  uint64_t v7 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 3u:
    case 5u:
    case 6u:
    case 7u:
      return v7;
    case 4u:
      uint64_t v8 = sub_1001BF810();
      (*(void (**)(uint64_t *, uint64_t))(*(void *)(v8 - 8) + 8))(v5, v8);
      uint64_t v7 = 0;
      break;
    default:
      uint64_t v7 = *v5;
      sub_100010360(v6, &qword_10020E070);
      swift_storeEnumTagMultiPayload();
      break;
  }
  return v7;
}

uint64_t sub_100144038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_100003918(&qword_100208CA8);
  uint64_t v7 = *(int *)(result + 124);
  uint64_t v8 = *(void *)(a1 + v7);
  if (*(void *)(v8 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v9 = sub_100169E3C(a2, a3);
    if (v10)
    {
      uint64_t v11 = (unint64_t *)(*(void *)(v8 + 56) + 120 * v9);
      unint64_t v19 = *v11;
      unint64_t v12 = v11[3];
      uint64_t v13 = v11[4];
      unint64_t v14 = v11[5];
      unint64_t v24 = v11[6];
      unint64_t v25 = v11[2];
      unint64_t v15 = v11[8];
      unint64_t v22 = v11[9];
      unint64_t v23 = v11[7];
      unint64_t v26 = v11[12];
      unint64_t v20 = v11[13];
      unint64_t v21 = v11[11];
      unint64_t v17 = v11[10];
      unint64_t v18 = v11[14];
      sub_10002C9AC(*v11);
      swift_bridgeObjectRetain();
      sub_10000D9E0(v13, v14);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_10000D9E0(v13, v14);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10002CA34(v19);
      long long v27 = xmmword_1001D3C70;
      unint64_t v28 = v25;
      unint64_t v29 = v12;
      uint64_t v30 = v13;
      unint64_t v31 = v14;
      unint64_t v32 = v24;
      unint64_t v33 = v23;
      unint64_t v34 = v15;
      unint64_t v35 = v22;
      unint64_t v36 = v17;
      unint64_t v37 = v21;
      unint64_t v38 = v26;
      unint64_t v39 = v20;
      unint64_t v40 = v18;
      swift_bridgeObjectRetain();
      sub_10002C9AC(0xC000000000000001);
      swift_bridgeObjectRetain();
      sub_10000D9E0(v13, v14);
      sub_100007918(v13, v14);
      swift_bridgeObjectRelease();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v41 = *(void *)(a1 + v7);
      *(void *)(a1 + v7) = 0x8000000000000000;
      sub_1000EB530((uint64_t)&v27, a2, a3, isUniquelyReferenced_nonNull_native);
      *(void *)(a1 + v7) = v41;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10002CA34(0xC000000000000001);
      swift_bridgeObjectRelease();
      sub_100007918(v13, v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001442D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v73 = a4;
  uint64_t v8 = sub_100003918(&qword_100208C48);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (unint64_t *)((char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = sub_100003918(&qword_100208CA8);
  uint64_t v13 = *(int *)(result + 124);
  uint64_t v14 = *(void *)(a1 + v13);
  if (*(void *)(v14 + 16))
  {
    uint64_t v15 = result;
    swift_bridgeObjectRetain();
    unint64_t v16 = sub_100169E3C(a2, a3);
    if (v17)
    {
      uint64_t v65 = v11;
      uint64_t v62 = v13;
      uint64_t v64 = a1;
      uint64_t v63 = a2;
      uint64_t v67 = v4;
      unint64_t v18 = (unint64_t *)(*(void *)(v14 + 56) + 120 * v16);
      unint64_t v19 = *v18;
      unint64_t v20 = v18[1];
      unint64_t v21 = v18[3];
      unint64_t v61 = v18[2];
      uint64_t v22 = v18[4];
      unint64_t v23 = v18[5];
      unint64_t v60 = v18[6];
      unint64_t v59 = v18[7];
      uint64_t v68 = a3;
      unint64_t v24 = v18[8];
      unint64_t v58 = v18[9];
      unint64_t v71 = v18[10];
      unint64_t v57 = v18[11];
      unint64_t v72 = v18[12];
      unint64_t v25 = v18[14];
      unint64_t v56 = v18[13];
      sub_10002C9AC(v19);
      uint64_t v69 = v21;
      uint64_t v26 = v22;
      swift_bridgeObjectRetain();
      sub_10000D9E0(v22, v23);
      unint64_t v66 = v25;
      swift_bridgeObjectRetain();
      unint64_t v70 = v24;
      uint64_t v27 = v68;
      unint64_t v28 = v71;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v19 >> 62 != 3 || v19 != 0xC000000000000001 || v20 != 0)
      {
        sub_10002CA34(v19);
        swift_bridgeObjectRelease();
        sub_100007918(v26, v23);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      unint64_t v55 = v23;
      uint64_t v31 = v26;
      unint64_t v32 = v70;
      unint64_t v33 = v65;
      sub_10003282C(v73, (uint64_t)v65, &qword_100208C48);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        unint64_t v34 = *v33;
        uint64_t v35 = v69;
        swift_bridgeObjectRetain();
        unint64_t v36 = v55;
        sub_10000D9E0(v31, v55);
        unint64_t v37 = v32;
        swift_bridgeObjectRetain();
        unint64_t v38 = v28;
        swift_bridgeObjectRetain();
        unint64_t v39 = v72;
        swift_bridgeObjectRetain();
        unint64_t v40 = v66;
        swift_bridgeObjectRetain();
        uint64_t v41 = v64;
LABEL_17:
        v74[0] = v34;
        v74[1] = 0;
        uint64_t v74[2] = v61;
        v74[3] = v35;
        v74[4] = v31;
        v74[5] = v36;
        v74[6] = v60;
        v74[7] = v59;
        v74[8] = v37;
        v74[9] = v58;
        v74[10] = v38;
        v74[11] = v57;
        v74[12] = v39;
        v74[13] = v56;
        v74[14] = v40;
        swift_bridgeObjectRetain();
        sub_10002C9AC(v34);
        sub_10002C9AC(v34);
        swift_bridgeObjectRetain();
        sub_10000D9E0(v31, v36);
        sub_100007918(v31, v36);
        swift_bridgeObjectRelease();
        sub_10002CA34(v34);
        uint64_t v52 = v62;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v75 = *(void *)(v41 + v52);
        *(void *)(v41 + v52) = 0x8000000000000000;
        sub_1000EB530((uint64_t)v74, v63, v27, isUniquelyReferenced_nonNull_native);
        *(void *)(v41 + v52) = v75;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10002CA34(v34);
        swift_bridgeObjectRelease();
        sub_100007918(v31, v36);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      uint64_t v42 = *(int *)(v15 + 128);
      uint64_t v43 = v64;
      uint64_t v44 = *(void *)(v64 + v42);
      BOOL v45 = __OFADD__(v44, 1);
      uint64_t v46 = v44 + 1;
      uint64_t result = v69;
      if (!v45)
      {
        *(void *)(v64 + v42) = v46;
        swift_bridgeObjectRetain();
        uint64_t v47 = v26;
        unint64_t v48 = v55;
        sub_10000D9E0(v26, v55);
        unint64_t v49 = v32;
        swift_bridgeObjectRetain();
        unint64_t v38 = v28;
        swift_bridgeObjectRetain();
        unint64_t v50 = v72;
        swift_bridgeObjectRetain();
        unint64_t v40 = v66;
        swift_bridgeObjectRetain();
        uint64_t v51 = (uint64_t)v33;
        unint64_t v39 = v50;
        sub_100010360(v51, &qword_100208C48);
        unint64_t v37 = v49;
        unint64_t v34 = 0xC000000000000008;
        uint64_t v41 = v43;
        unint64_t v36 = v48;
        uint64_t v31 = v47;
        uint64_t v35 = v69;
        goto LABEL_17;
      }
      __break(1u);
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1001447C4(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v83 = a4;
  uint64_t v84 = a5;
  uint64_t v11 = sub_1001C02A0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v14 = __chkstk_darwin(v11, v13);
  unint64_t v16 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v17);
  unint64_t v19 = (char *)&v62 - v18;
  uint64_t v20 = sub_100003918(&qword_100208CA8);
  uint64_t v21 = *(int *)(v20 + 124);
  unint64_t v85 = a1;
  uint64_t v22 = *(void *)&a1[v21];
  if (!*(void *)(v22 + 16)) {
    return 0;
  }
  uint64_t v80 = v21;
  uint64_t v82 = v20;
  swift_bridgeObjectRetain();
  uint64_t v81 = a2;
  unint64_t v23 = sub_100169E3C(a2, a3);
  if ((v24 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v62 = a6;
  uint64_t v63 = v16;
  uint64_t v65 = v19;
  uint64_t v66 = v12;
  uint64_t v64 = v11;
  uint64_t v75 = v6;
  unint64_t v25 = (unint64_t *)(*(void *)(v22 + 56) + 120 * v23);
  unint64_t v26 = *v25;
  unint64_t v27 = v25[1];
  unint64_t v28 = v25[3];
  unint64_t v72 = v25[2];
  uint64_t v30 = v25[4];
  unint64_t v29 = v25[5];
  unint64_t v71 = v25[6];
  unint64_t v31 = v25[8];
  unint64_t v70 = v25[7];
  unint64_t v69 = v25[9];
  unint64_t v73 = v25[10];
  unint64_t v32 = v25[12];
  unint64_t v68 = v25[11];
  unint64_t v33 = v25[14];
  unint64_t v67 = v25[13];
  sub_10002C9AC(v26);
  unint64_t v77 = v28;
  swift_bridgeObjectRetain();
  uint64_t v76 = v30;
  unint64_t v78 = v29;
  sub_10000D9E0(v30, v29);
  unint64_t v74 = v33;
  swift_bridgeObjectRetain();
  unint64_t v79 = v31;
  unint64_t v34 = v73;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v26 >> 62 == 3 && (v26 == 0xC000000000000008 ? (BOOL v35 = v27 == 0) : (BOOL v35 = 0), v35))
  {
    long long v86 = xmmword_1001D3C80;
    unint64_t v87 = v72;
    unint64_t v88 = v77;
    uint64_t v38 = v76;
    unint64_t v39 = v78;
    uint64_t v89 = v76;
    unint64_t v90 = v78;
    unint64_t v91 = v71;
    unint64_t v92 = v70;
    unint64_t v93 = v79;
    unint64_t v94 = v69;
    unint64_t v95 = v34;
    unint64_t v96 = v68;
    unint64_t v97 = v32;
    unint64_t v98 = v67;
    unint64_t v99 = v74;
    swift_bridgeObjectRetain();
    sub_10002C9AC(0xC000000000000009);
    swift_bridgeObjectRetain();
    sub_10000D9E0(v38, v39);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v40 = v85;
    uint64_t v41 = v80;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v100 = *(void *)&v40[v41];
    *(void *)&v40[v41] = 0x8000000000000000;
    sub_1000EB530((uint64_t)&v86, v81, a3, isUniquelyReferenced_nonNull_native);
    *(void *)&v40[v41] = v100;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v43 = v82;
    uint64_t v44 = &v40[*(int *)(v82 + 100)];
    if (v44[24])
    {
      uint64_t v45 = 1;
      uint64_t v47 = v83;
      uint64_t v46 = v84;
    }
    else
    {
      uint64_t v48 = *((void *)v44 + 2);
      BOOL v49 = __OFADD__(v48, 1);
      uint64_t v45 = v48 + 1;
      if (v49)
      {
        __break(1u);
        JUMPOUT(0x100144EE8);
      }
      uint64_t v47 = *(void *)v44;
      uint64_t v46 = *((void *)v44 + 1);
    }
    *(void *)uint64_t v44 = v47;
    *((void *)v44 + 1) = v46;
    *((void *)v44 + 2) = v45;
    v44[24] = 0;
    unint64_t v50 = &v40[*(int *)(v43 + 80)];
    uint64_t v51 = *(void *)v50;
    switch(*((void *)v50 + 3) >> 61)
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
        sub_10002CA34(0xC000000000000009);
        swift_bridgeObjectRelease();
        sub_100007918(v38, v78);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v36 = 0;
        break;
      default:
        uint64_t v52 = v62 + *(void *)(*(void *)v62 + 280);
        uint64_t v53 = v64;
        unint64_t v85 = *(char **)(v66 + 16);
        ((void (*)(char *, uint64_t, uint64_t))v85)(v65, v52, v64);
        uint64_t v84 = v51;
        swift_retain();
        uint64_t v54 = sub_1001C02C0();
        os_signpost_type_t v55 = sub_1001C1290();
        if (sub_1001C12D0())
        {
          unint64_t v56 = v63;
          ((void (*)(char *, char *, uint64_t))v85)(v63, v65, v53);
          unint64_t v57 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v57 = 0;
          os_signpost_id_t v58 = sub_1001C0290();
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v54, v55, v58, "SentKey", "", v57, 2u);
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v66 + 8))(v56, v53);
        }
        else
        {

          unint64_t v56 = v63;
        }
        uint64_t v59 = v53;
        unint64_t v60 = v65;
        ((void (*)(char *, char *, uint64_t))v85)(v56, v65, v59);
        sub_1001C0310();
        swift_allocObject();
        uint64_t v36 = 1;
        uint64_t v61 = sub_1001C0300();
        (*(void (**)(char *, uint64_t))(v66 + 8))(v60, v59);
        sub_10015D388(*(void *)v50, *((void *)v50 + 1), *((void *)v50 + 2), *((void *)v50 + 3));
        *(void *)unint64_t v50 = v84;
        *((void *)v50 + 1) = v61;
        *((_OWORD *)v50 + 1) = xmmword_1001D3C90;
        sub_10002CA34(0xC000000000000009);
        swift_bridgeObjectRelease();
        sub_100007918(v76, v78);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
    }
  }
  else
  {
    sub_10002CA34(v26);
    swift_bridgeObjectRelease();
    sub_100007918(v76, v78);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v36;
}

uint64_t sub_100144F00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int64x2_t *a5@<X8>)
{
  uint64_t v101 = a4;
  uint64_t v10 = sub_1001C02A0();
  uint64_t v103 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10, v11);
  char v102 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12, v14);
  unint64_t v105 = (unint64_t)&v82 - v16;
  __chkstk_darwin(v15, v17);
  char v104 = (char *)&v82 - v18;
  uint64_t result = sub_100003918(&qword_100208CA8);
  uint64_t v20 = *(int *)(result + 124);
  uint64_t v21 = *(void *)(a1 + v20);
  uint64_t v22 = *(void *)(v21 + 16);
  int64x2_t v23 = 0uLL;
  if (v22)
  {
    uint64_t v24 = result;
    swift_bridgeObjectRetain();
    unint64_t v25 = sub_100169E3C(a2, a3);
    if (v26)
    {
      uint64_t v88 = v20;
      uint64_t v89 = v24;
      uint64_t v90 = a1;
      uint64_t v91 = v10;
      uint64_t v92 = a2;
      unint64_t v93 = a5;
      uint64_t v96 = v5;
      unint64_t v27 = (unint64_t *)(*(void *)(v21 + 56) + 120 * v25);
      unint64_t v28 = *v27;
      unint64_t v29 = v27[1];
      unint64_t v30 = v27[3];
      unint64_t v87 = v27[2];
      uint64_t v32 = v27[4];
      unint64_t v31 = v27[5];
      unint64_t v86 = v27[6];
      unint64_t v33 = v27[8];
      unint64_t v85 = v27[7];
      uint64_t v34 = a3;
      unint64_t v35 = v27[10];
      unint64_t v84 = v27[9];
      unint64_t v83 = v27[11];
      unint64_t v100 = v27[12];
      unint64_t v36 = v27[14];
      unint64_t v82 = v27[13];
      sub_10002C9AC(v28);
      unint64_t v97 = v30;
      swift_bridgeObjectRetain();
      uint64_t v98 = v32;
      unint64_t v99 = v31;
      sub_10000D9E0(v32, v31);
      unint64_t v94 = v36;
      swift_bridgeObjectRetain();
      unint64_t v37 = v33;
      unint64_t v38 = v100;
      swift_bridgeObjectRetain();
      unint64_t v95 = v35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v28 >> 62 == 3 && v28 == 0xC000000000000009 && v29 == 0)
      {
        long long v106 = xmmword_1001D3CA0;
        unint64_t v107 = v87;
        unint64_t v108 = v97;
        uint64_t v43 = v98;
        unint64_t v44 = v99;
        uint64_t v109 = v98;
        unint64_t v110 = v99;
        unint64_t v111 = v86;
        unint64_t v112 = v85;
        unint64_t v113 = v37;
        unint64_t v114 = v84;
        unint64_t v115 = v95;
        unint64_t v116 = v83;
        unint64_t v117 = v38;
        unint64_t v118 = v82;
        unint64_t v119 = v94;
        swift_bridgeObjectRetain();
        sub_10002C9AC(0x4000000000000000uLL);
        swift_bridgeObjectRetain();
        sub_10000D9E0(v43, v44);
        unint64_t v87 = v37;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v45 = v90;
        uint64_t v46 = v88;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v120 = *(void *)(v45 + v46);
        *(void *)(v45 + v46) = 0x8000000000000000;
        sub_1000EB530((uint64_t)&v106, v92, v34, isUniquelyReferenced_nonNull_native);
        *(void *)(v45 + v46) = v120;
        uint64_t v88 = v34;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v48 = (unint64_t *)(v45 + *(int *)(v89 + 80));
        unint64_t v41 = *v48;
        uint64_t v49 = v91;
        uint64_t v51 = v104;
        unint64_t v50 = v105;
        switch(v48[3] >> 61)
        {
          case 1uLL:
            uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t))(v103 + 16);
            unint64_t v60 = (char *)v48[1];
            v59(v104, v101 + *(void *)(*(void *)v101 + 280), v91);
            swift_retain();
            unint64_t v105 = (unint64_t)v60;
            swift_retain();
            uint64_t v61 = sub_1001C02C0();
            int v62 = sub_1001C1290();
            if (sub_1001C12D0())
            {
              LODWORD(v101) = v62;
              uint64_t v63 = v102;
              v59(v102, (uint64_t)v51, v49);
              uint64_t v64 = v59;
              uint64_t v65 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v65 = 0;
              os_signpost_id_t v66 = sub_1001C0290();
              _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v61, (os_signpost_type_t)v101, v66, "NodeResponse", "", v65, 2u);
              uint64_t v59 = v64;
              uint64_t v49 = v91;
              swift_slowDealloc();

              uint64_t v67 = v103;
              (*(void (**)(char *, uint64_t))(v103 + 8))(v63, v49);
            }
            else
            {

              uint64_t v63 = v102;
              uint64_t v67 = v103;
            }
            v59(v63, (uint64_t)v51, v49);
            sub_1001C0310();
            swift_allocObject();
            uint64_t v75 = sub_1001C0300();
            (*(void (**)(char *, uint64_t))(v67 + 8))(v51, v49);
            uint64_t v76 = v75 | 0x4000000000000000;
            uint64_t v78 = *v48;
            uint64_t v77 = v48[1];
            uint64_t v79 = v48[2];
            unint64_t v80 = v48[3];
            uint64_t v81 = v88;
            swift_bridgeObjectRetain();
            sub_10015D388(v78, v77, v79, v80);
            *uint64_t v48 = v92;
            v48[1] = v81;
            unint64_t v42 = v105 | 0x8000000000000000;
            uint64_t v48[2] = 0;
            v48[3] = v76;
            sub_10002CA34(0x4000000000000000uLL);
            swift_bridgeObjectRelease();
            sub_100007918(v98, v99);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            int64x2_t v23 = vdupq_n_s64(7uLL);
            v23.i64[0] = (uint64_t)"SentKey";
            LOBYTE(v22) = 2;
            break;
          case 2uLL:
          case 3uLL:
          case 4uLL:
          case 5uLL:
            sub_10002CA34(0x4000000000000000uLL);
            swift_bridgeObjectRelease();
            sub_100007918(v98, v99);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            LOBYTE(v22) = 0;
            unint64_t v41 = 0xF000000000000007;
            unint64_t v42 = 0xF000000000000007;
            goto LABEL_11;
          default:
            uint64_t v52 = v101 + *(void *)(*(void *)v101 + 280);
            uint64_t v53 = v103;
            char v104 = *(char **)(v103 + 16);
            ((void (*)(unint64_t, uint64_t, uint64_t))v104)(v105, v52, v91);
            swift_retain();
            uint64_t v54 = sub_1001C02C0();
            LODWORD(v101) = sub_1001C1290();
            if (sub_1001C12D0())
            {
              os_signpost_type_t v55 = v102;
              ((void (*)(char *, unint64_t, uint64_t))v104)(v102, v50, v49);
              unint64_t v56 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)unint64_t v56 = 0;
              os_signpost_id_t v57 = sub_1001C0290();
              _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v54, (os_signpost_type_t)v101, v57, "NodeResponse", "", v56, 2u);
              uint64_t v53 = v103;
              swift_slowDealloc();

              os_signpost_id_t v58 = v55;
              (*(void (**)(char *, uint64_t))(v53 + 8))(v55, v49);
            }
            else
            {

              os_signpost_id_t v58 = v102;
            }
            ((void (*)(char *, unint64_t, uint64_t))v104)(v58, v50, v49);
            sub_1001C0310();
            swift_allocObject();
            uint64_t v68 = sub_1001C0300();
            (*(void (**)(unint64_t, uint64_t))(v53 + 8))(v50, v49);
            uint64_t v69 = v68 | 0x4000000000000000;
            uint64_t v71 = *v48;
            uint64_t v70 = v48[1];
            uint64_t v72 = v48[2];
            unint64_t v73 = v48[3];
            uint64_t v74 = v88;
            swift_bridgeObjectRetain();
            sub_10015D388(v71, v70, v72, v73);
            *uint64_t v48 = v92;
            v48[1] = v74;
            uint64_t v48[2] = 0;
            v48[3] = v69;
            sub_10002CA34(0x4000000000000000uLL);
            swift_bridgeObjectRelease();
            sub_100007918(v98, v99);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            unint64_t v42 = 0;
            LOBYTE(v22) = 0;
            goto LABEL_11;
        }
      }
      else
      {
        sub_10002CA34(v28);
        swift_bridgeObjectRelease();
        sub_100007918(v98, v99);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        LOBYTE(v22) = 0;
        unint64_t v41 = 0xF000000000000007;
        unint64_t v42 = 0xF000000000000007;
LABEL_11:
        int64x2_t v23 = 0uLL;
      }
      a5 = v93;
    }
    else
    {
      uint64_t result = swift_bridgeObjectRelease();
      LOBYTE(v22) = 0;
      unint64_t v41 = 0xF000000000000007;
      unint64_t v42 = 0xF000000000000007;
      int64x2_t v23 = 0uLL;
    }
  }
  else
  {
    unint64_t v41 = 0xF000000000000007;
    unint64_t v42 = 0xF000000000000007;
  }
  a5->i64[0] = v41;
  a5->i64[1] = v42;
  a5[1] = v23;
  a5[2].i8[0] = v22;
  return result;
}

uint64_t sub_1001458E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_100003918(&qword_100208CA8);
  uint64_t v7 = *(int *)(result + 124);
  uint64_t v8 = *(void *)(a1 + v7);
  if (*(void *)(v8 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v9 = sub_100169E3C(a2, a3);
    if (v10)
    {
      uint64_t v27 = a1;
      uint64_t v28 = a2;
      uint64_t v11 = (unint64_t *)(*(void *)(v8 + 56) + 120 * v9);
      unint64_t v29 = *v11;
      unint64_t v12 = v11[3];
      uint64_t v14 = v11[4];
      unint64_t v13 = v11[5];
      unint64_t v25 = v11[6];
      unint64_t v26 = v11[2];
      unint64_t v15 = v11[8];
      unint64_t v16 = v11[10];
      unint64_t v23 = v11[9];
      unint64_t v24 = v11[7];
      unint64_t v17 = v11[12];
      unint64_t v18 = v11[14];
      unint64_t v21 = v11[13];
      unint64_t v22 = v11[11];
      unint64_t v30 = v11[1];
      sub_10002C9AC(*v11);
      swift_bridgeObjectRetain();
      sub_10000D9E0(v14, v13);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      unint64_t v19 = v29;
      if ((v29 & 0xC000000000000001) == 0x4000000000000000)
      {
        v31[0] = 0x4000000000000001;
        v31[1] = v30;
        v31[2] = v26;
        v31[3] = v12;
        v31[4] = v14;
        v31[5] = v13;
        v31[6] = v25;
        v31[7] = v24;
        v31[8] = v15;
        v31[9] = v23;
        v31[10] = v16;
        v31[11] = v22;
        v31[12] = v17;
        v31[13] = v21;
        v31[14] = v18;
        swift_bridgeObjectRetain();
        sub_10002C9AC(0x4000000000000001uLL);
        swift_bridgeObjectRetain();
        sub_10000D9E0(v14, v13);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v32 = *(void *)(v27 + v7);
        *(void *)(v27 + v7) = 0x8000000000000000;
        sub_1000EB530((uint64_t)v31, v28, a3, isUniquelyReferenced_nonNull_native);
        *(void *)(v27 + v7) = v32;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v19 = 0x4000000000000001;
      }
      sub_10002CA34(v19);
      swift_bridgeObjectRelease();
      sub_100007918(v14, v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100145B50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v72 = a5;
  uint64_t v10 = sub_1001C14C0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_100003918(&qword_100208CA8);
  uint64_t v16 = *(void *)(a1 + *(int *)(result + 124));
  if (*(void *)(v16 + 16))
  {
    uint64_t v67 = *(int *)(result + 124);
    uint64_t v69 = result;
    swift_bridgeObjectRetain();
    uint64_t v68 = a2;
    unint64_t v17 = sub_100169E3C(a2, a3);
    if ((v18 & 1) == 0) {
      return swift_bridgeObjectRelease();
    }
    uint64_t v48 = v14;
    uint64_t v49 = v11;
    uint64_t v50 = v10;
    uint64_t v59 = a1;
    uint64_t v60 = a4;
    uint64_t v63 = v5;
    unint64_t v19 = (unint64_t *)(*(void *)(v16 + 56) + 120 * v17);
    unint64_t v21 = *v19;
    unint64_t v20 = v19[1];
    unint64_t v22 = v19[3];
    unint64_t v58 = v19[2];
    uint64_t v23 = v19[4];
    unint64_t v24 = v19[5];
    unint64_t v57 = v19[6];
    unint64_t v25 = v19[8];
    unint64_t v56 = v19[7];
    unint64_t v26 = v19[10];
    unint64_t v55 = v19[9];
    unint64_t v27 = v19[12];
    unint64_t v54 = v19[11];
    unint64_t v28 = v19[14];
    unint64_t v53 = v19[13];
    unint64_t v61 = v20;
    sub_10002C9AC(v21);
    unint64_t v64 = v22;
    swift_bridgeObjectRetain();
    uint64_t v65 = v23;
    sub_10000D9E0(v23, v24);
    swift_bridgeObjectRetain();
    unint64_t v66 = v25;
    swift_bridgeObjectRetain();
    unint64_t v62 = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    if (v21 >> 62 != 1)
    {
      sub_10002CA34(v21);
      swift_bridgeObjectRelease();
      sub_100007918(v65, v24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    unint64_t v51 = v24;
    unint64_t v52 = v27;
    unint64_t v29 = v61 + v60;
    if (__OFADD__(v61, v60))
    {
      __break(1u);
    }
    else
    {
      v71[0] = v21 & 1 | 0x4000000000000000;
      v71[1] = v61 + v60;
      v71[2] = v58;
      v71[3] = v64;
      uint64_t v30 = v65;
      unint64_t v31 = v51;
      v71[4] = v65;
      v71[5] = v51;
      v71[6] = v57;
      v71[7] = v56;
      v71[8] = v66;
      v71[9] = v55;
      v71[10] = v62;
      v71[11] = v54;
      v71[12] = v52;
      v71[13] = v53;
      v71[14] = v28;
      swift_bridgeObjectRetain();
      unint64_t v58 = v21 & 1 | 0x4000000000000000;
      unint64_t v61 = v29;
      sub_10002C9AC(v58);
      swift_bridgeObjectRetain();
      uint64_t v32 = v30;
      unint64_t v33 = v31;
      sub_10000D9E0(v32, v31);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v34 = v59;
      uint64_t v35 = v67;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v70 = *(void *)(v34 + v35);
      *(void *)(v34 + v35) = 0x8000000000000000;
      sub_1000EB530((uint64_t)v71, v68, a3, isUniquelyReferenced_nonNull_native);
      *(void *)(v34 + v35) = v70;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v37 = v34 + *(int *)(v69 + 80);
      unint64_t v38 = *(void *)(v37 + 24);
      if (v38 >> 61 != 2)
      {
LABEL_13:
        sub_10002CA34(v58);
        swift_bridgeObjectRelease();
        sub_100007918(v65, v33);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      uint64_t v40 = *(void *)v37;
      uint64_t v39 = *(void *)(v37 + 8);
      uint64_t v41 = v38 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v42 = *(void *)(v37 + 16);
      if (v42)
      {
        swift_bridgeObjectRetain();
        uint64_t result = swift_retain();
      }
      else
      {
        uint64_t v68 = sub_1001C14E0();
        sub_1001627A0(&qword_100208C80, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
        swift_bridgeObjectRetain();
        swift_retain();
        uint64_t v72 = v40;
        uint64_t v43 = v48;
        sub_1001C18D0();
        sub_1001627A0(&qword_100208C88, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
        uint64_t v44 = v50;
        sub_1001C1500();
        uint64_t v45 = v43;
        uint64_t v40 = v72;
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v45, v44);
        uint64_t v46 = v34 + *(int *)(v69 + 112);
        *(_OWORD *)uint64_t v46 = v70;
        *(unsigned char *)(v46 + 16) = 0;
      }
      uint64_t v47 = v42 + v60;
      if (!__OFADD__(v42, v60))
      {
        sub_10015D388(*(void *)v37, *(void *)(v37 + 8), *(void *)(v37 + 16), *(void *)(v37 + 24));
        *(void *)uint64_t v37 = v40;
        *(void *)(v37 + 8) = v39;
        *(void *)(v37 + 16) = v47;
        *(void *)(v37 + 24) = v41 | 0x4000000000000000;
        unint64_t v33 = v51;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100146150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100003918(&qword_100208CA8);
  uint64_t v7 = *(int *)(v6 + 124);
  uint64_t v8 = *(void *)(a1 + v7);
  if (!*(void *)(v8 + 16)) {
    return 0;
  }
  uint64_t v9 = v6;
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_100169E3C(a2, a3);
  if (v11)
  {
    uint64_t v32 = v9;
    uint64_t v33 = a2;
    uint64_t v12 = (unint64_t *)(*(void *)(v8 + 56) + 120 * v10);
    unint64_t v13 = *v12;
    unint64_t v14 = v12[3];
    unint64_t v15 = v12[5];
    uint64_t v37 = v12[4];
    unint64_t v30 = v12[6];
    unint64_t v31 = v12[2];
    unint64_t v16 = v12[8];
    unint64_t v17 = v12[10];
    unint64_t v28 = v12[9];
    unint64_t v29 = v12[7];
    unint64_t v34 = v12[12];
    unint64_t v18 = v12[14];
    unint64_t v26 = v12[13];
    unint64_t v27 = v12[11];
    unint64_t v36 = v12[1];
    sub_10002C9AC(*v12);
    swift_bridgeObjectRetain();
    sub_10000D9E0(v37, v15);
    unint64_t v35 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (v13 >> 62 == 1)
    {
      unint64_t v19 = v13 & 1 | 0x8000000000000000;
      v38[0] = v19;
      v38[1] = v36;
      v38[2] = v31;
      v38[3] = v14;
      v38[4] = v37;
      v38[5] = v15;
      v38[6] = v30;
      v38[7] = v29;
      v38[8] = v16;
      v38[9] = v28;
      v38[10] = v17;
      v38[11] = v27;
      v38[12] = v34;
      v38[13] = v26;
      v38[14] = v35;
      swift_bridgeObjectRetain();
      sub_10002C9AC(v19);
      swift_bridgeObjectRetain();
      sub_10000D9E0(v37, v15);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v39 = *(void *)(a1 + v7);
      *(void *)(a1 + v7) = 0x8000000000000000;
      sub_1000EB530((uint64_t)v38, v33, a3, isUniquelyReferenced_nonNull_native);
      *(void *)(a1 + v7) = v39;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v21 = a1 + *(int *)(v32 + 80);
      unint64_t v22 = *(void *)(v21 + 24);
      unint64_t v23 = v15;
      if (v22 >> 61 == 2)
      {
        uint64_t v24 = v22 & 0x1FFFFFFFFFFFFFFFLL;
        *(void *)(v21 + 24) = 0x6000000000000000;
      }
      else
      {
        uint64_t v24 = 0;
      }
    }
    else
    {
      uint64_t v24 = 0;
      unint64_t v19 = v13;
      unint64_t v23 = v15;
    }
    sub_10002CA34(v19);
    swift_bridgeObjectRelease();
    sub_100007918(v37, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v24 = 0;
  }
  swift_bridgeObjectRelease();
  return v24;
}

const char *sub_100146434@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int64x2_t *a3@<X8>)
{
  swift_errorRetain();
  sub_100003918(&qword_100208C98);
  if (swift_dynamicCast())
  {
    if (*(void *)(v15 + 16))
    {
      a2 = *(void *)(v15 + 32);
      swift_errorRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10002C2C4();
      a2 = swift_allocError();
      *(unsigned char *)uint64_t v6 = v14;
      *(void *)(v6 + 8) = v15;
    }
  }
  else
  {
    swift_errorRetain();
  }
  uint64_t v7 = (unint64_t *)(a1 + *(int *)(sub_100003918(&qword_100208CA8) + 80));
  unint64_t v8 = *v7;
  unint64_t v10 = v7 + 1;
  uint64_t result = (const char *)v7[1];
  unint64_t v11 = v7[3];
  switch(v11 >> 61)
  {
    case 1uLL:
      *uint64_t v7 = a2;
      void *v10 = 0;
      v7[2] = 0;
      v7[3] = 0x8000000000000000;
      int64x2_t v13 = vdupq_n_s64(7uLL);
      v13.i64[0] = (uint64_t)"SentKey";
      v8 |= 0x4000000000000000uLL;
      char v12 = 2;
      break;
    case 2uLL:
      swift_bridgeObjectRelease();
      char v12 = 0;
      *uint64_t v7 = a2;
      void *v10 = 0;
      v7[2] = 0;
      v7[3] = 0x8000000000000000;
      unint64_t v8 = v11 & 0x1FFFFFFFFFFFFFFFLL | 0x8000000000000000;
      uint64_t result = "ReceivingResponse";
      int64x2_t v13 = (int64x2_t)xmmword_1001D3CB0;
      break;
    case 3uLL:
    case 4uLL:
      swift_errorRelease();
      uint64_t result = 0;
      char v12 = 0;
      int64x2_t v13 = 0uLL;
      goto LABEL_12;
    case 5uLL:
      uint64_t result = 0;
      char v12 = 0;
      *uint64_t v7 = a2;
      int64x2_t v13 = 0uLL;
      *(_OWORD *)unint64_t v10 = 0u;
      v7[3] = 0x8000000000000000;
LABEL_12:
      unint64_t v8 = 0xF000000000000007;
      break;
    default:
      uint64_t result = 0;
      char v12 = 0;
      *uint64_t v7 = a2;
      int64x2_t v13 = 0uLL;
      *(_OWORD *)unint64_t v10 = 0u;
      v7[3] = 0x8000000000000000;
      break;
  }
  a3->i64[0] = v8;
  a3->i64[1] = (uint64_t)result;
  a3[1] = v13;
  a3[2].i8[0] = v12;
  return result;
}

uint64_t sub_100146634(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_1001BF500();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  char v12 = (char *)&v15 - v11;
  sub_100007B14(a1, a2);
  sub_1001BF4F0();
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v12, v9, v4);
  uint64_t v13 = sub_1001BF4E0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v4);
  return v13;
}

uint64_t sub_100146A54()
{
  uint64_t v0 = sub_100003918(&qword_10020C538);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001BF2D0();
  sub_1001C0230();
  sub_1001BF2B0();
  uint64_t v4 = sub_1001BF2C0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 0, 1, v4);
  sub_1001C0240();
  sub_1001BF930();
  sub_1001C0200();
  swift_bridgeObjectRetain();
  sub_1001C0210();
  swift_bridgeObjectRetain();
  return sub_1001C0220();
}

uint64_t sub_100146BA8()
{
  uint64_t v1 = sub_100003918(&qword_10020C348);
  uint64_t v3 = __chkstk_darwin(v1 - 8, v2);
  uint64_t v29 = (uint64_t)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3, v5);
  unint64_t v28 = (char *)&v28 - v7;
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v28 - v9;
  uint64_t v11 = sub_1001C14C0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v14 = __chkstk_darwin(v11, v13);
  unint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v17);
  unint64_t v19 = (char *)&v28 - v18;
  sub_1001C14E0();
  sub_1001627A0(&qword_100208C80, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  sub_1001C18D0();
  uint64_t v20 = v0 + *(void *)(*(void *)v0 + 112);
  swift_beginAccess();
  sub_10003282C(v20, (uint64_t)v10, &qword_10020C348);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_100010360((uint64_t)v10, &qword_10020C348);
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  }
  else
  {
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v21(v16, v10, v11);
    sub_1001627A0(&qword_100208C88, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
    sub_1001C1500();
    char v22 = sub_1001C19E0();
    unint64_t v23 = *(void (**)(char *, uint64_t))(v12 + 8);
    v23(v16, v11);
    if ((v22 & 1) == 0)
    {
      v23(v19, v11);
      return 0;
    }
  }
  uint64_t v24 = (uint64_t)v28;
  v21(v28, v19, v11);
  uint64_t v25 = 1;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v24, 0, 1, v11);
  uint64_t v26 = v29;
  sub_10002C318(v24, v29, &qword_10020C348);
  swift_beginAccess();
  sub_10004E328(v26, v20, &qword_10020C348);
  swift_endAccess();
  return v25;
}

void sub_100146F5C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char *a11, uint64_t a12)
{
  uint64_t v185 = a7;
  uint64_t v184 = a6;
  uint64_t v174 = a5;
  uint64_t v183 = a4;
  uint64_t v175 = a3;
  uint64_t v182 = a2;
  uint64_t v176 = a1;
  uint64_t v177 = a9;
  uint64_t v188 = (_OWORD *)a12;
  uint64_t v189 = a10;
  uint64_t v13 = sub_1001C0FC0();
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v173 = (char *)&v146 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100003918(qword_100208CD0);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v172 = (uint64_t)&v146 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = sub_100003918(&qword_10020C068);
  uint64_t v168 = *(void *)(v169 - 8);
  uint64_t v20 = __chkstk_darwin(v169, v19);
  uint64_t v167 = (uint64_t)&v146 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v22);
  uint64_t v166 = (uint64_t)&v146 - v23;
  uint64_t v24 = sub_1001BF0B0();
  __chkstk_darwin(v24 - 8, v25);
  uint64_t v181 = (uint64_t)&v146 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = sub_100003918(&qword_10020C028);
  uint64_t v162 = *(void *)(v163 - 8);
  __chkstk_darwin(v163, v27);
  uint64_t v161 = (uint64_t)&v146 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = sub_100003918(&qword_10020C350);
  uint64_t v159 = *(void *)(v160 - 8);
  uint64_t v30 = __chkstk_darwin(v160, v29);
  uint64_t v158 = (uint64_t)&v146 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v30, v32);
  unint64_t v157 = (char *)&v146 - v34;
  __chkstk_darwin(v33, v35);
  uint64_t v156 = (char *)&v146 - v36;
  uint64_t v171 = sub_1001BF8D0();
  uint64_t v170 = *(void *)(v171 - 8);
  __chkstk_darwin(v171, v37);
  uint64_t v190 = (char *)&v146 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v150 = sub_1001C0C30();
  uint64_t v149 = *(void *)(v150 - 8);
  __chkstk_darwin(v150, v39);
  unint64_t v148 = (unint64_t)&v146 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v191 = sub_100003918(&qword_10020C5E0);
  uint64_t v192 = *(void *)(v191 - 8);
  uint64_t v42 = __chkstk_darwin(v191, v41);
  uint64_t v165 = (char *)&v146 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __chkstk_darwin(v42, v44);
  uint64_t v164 = (uint64_t)&v146 - v46;
  uint64_t v48 = __chkstk_darwin(v45, v47);
  uint64_t v155 = (uint64_t)&v146 - v49;
  __chkstk_darwin(v48, v50);
  uint64_t v186 = (char *)&v146 - v51;
  uint64_t v52 = sub_100003918(&qword_10020BFB8);
  uint64_t v53 = *(void *)(v52 - 8);
  uint64_t v55 = __chkstk_darwin(v52, v54);
  uint64_t v152 = (char *)&v146 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v55, v57);
  uint64_t v59 = (char *)&v146 - v58;
  sub_10000D934(a8, a8[3]);
  sub_1001BFA30();
  sub_1001BF8F0();
  uint64_t v60 = *(void (**)(char *, uint64_t))(v53 + 8);
  v60(v59, v52);
  uint64_t v178 = v205;
  sub_10000D934(a8, a8[3]);
  sub_1001BF9E0();
  sub_1001BF8F0();
  uint64_t v154 = v52;
  uint64_t v153 = v53 + 8;
  uint64_t v151 = v60;
  v60(v59, v52);
  unint64_t v61 = (_OWORD *)v205;
  unint64_t v62 = a8;
  sub_10000D934(a8, a8[3]);
  uint64_t v63 = sub_100003918(&qword_100207DB8);
  unint64_t v64 = v186;
  sub_1001BF980();
  unint64_t v65 = sub_1000B9CCC();
  sub_1001BF8F0();
  unint64_t v66 = *(void (**)(char *, uint64_t))(v192 + 8);
  v192 += 8;
  v66(v64, v191);
  char v180 = (void (*)(uint64_t, uint64_t))v66;
  uint64_t v179 = v63;
  if (!v206)
  {
    uint64_t v186 = (char *)v65;
LABEL_14:
    uint64_t v77 = a8;
    sub_1001BEEA0();
    swift_allocObject();
    uint64_t v79 = sub_1001BEE70();
    uint64_t v205 = 0x1000000000;
    unint64_t v206 = v79 | 0x4000000000000000;
    uint64_t v80 = v187;
    int v81 = sub_100155D70(&v205);
    uint64_t v83 = (uint64_t)v190;
    if (!v81)
    {
      uint64_t v187 = v80;
      uint64_t v73 = v205;
      unint64_t v150 = v206;
      goto LABEL_18;
    }
    sub_10002C2C4();
    swift_allocError();
    *(unsigned char *)uint64_t v82 = 0;
    *(void *)(v82 + 8) = _swiftEmptyArrayStorage;
    swift_willThrow();
    sub_10000792C(v205, v206);
LABEL_16:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1000161E0((uint64_t)v188);
    sub_100010360(v185, qword_100208CD0);
    sub_100003E90((uint64_t)v77);
    return;
  }
  if (sub_1001C0CC0() <= 0)
  {
    uint64_t v186 = (char *)v65;
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  unint64_t v67 = v148;
  sub_1001C0C20();
  uint64_t v68 = sub_1001C0C00();
  unint64_t v70 = v69;
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, unint64_t))(v149 + 8))(v67, v150);
  if (v70 >> 60 == 15) {
    uint64_t v71 = 0;
  }
  else {
    uint64_t v71 = v68;
  }
  if (v70 >> 60 == 15) {
    unint64_t v72 = 0xC000000000000000;
  }
  else {
    unint64_t v72 = v70;
  }
  uint64_t v73 = sub_1001BF0F0();
  unint64_t v75 = v74;
  sub_10000792C(v71, v72);
  unint64_t v150 = v75;
  BOOL v76 = v75 >> 60 == 15;
  uint64_t v77 = v62;
  if (v76)
  {
    sub_10002C2C4();
    swift_allocError();
    *(unsigned char *)uint64_t v78 = 0;
    *(void *)(v78 + 8) = _swiftEmptyArrayStorage;
    swift_willThrow();
    goto LABEL_16;
  }
  uint64_t v186 = (char *)v65;
  uint64_t v83 = (uint64_t)v190;
LABEL_18:
  uint64_t v84 = TC2ServerDrivenConfiguration.maxPrefetchedAttestations.getter();
  if (v85) {
    uint64_t v86 = v178;
  }
  else {
    uint64_t v86 = v84;
  }
  if (v178 >= v86) {
    uint64_t v87 = v86;
  }
  else {
    uint64_t v87 = v178;
  }
  id v88 = [self currentEstimates];
  sub_1000376D4(0, &qword_10020E700);
  unint64_t v89 = sub_1001C0DF0();

  if (v89 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v90 = (void *)sub_1001C1590();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v90 = *(void **)((v89 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v149 = v73;
  if (!v90)
  {
    swift_bridgeObjectRelease();
    uint64_t v95 = 0;
    goto LABEL_35;
  }
  if ((v89 & 0xC000000000000001) != 0) {
    goto LABEL_47;
  }
  if (*(void *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v91 = v87;
    for (id i = *(id *)(v89 + 32); ; id i = (id)sub_1001C1440())
    {
      unint64_t v93 = i;
      swift_bridgeObjectRelease();
      id v94 = [v93 countryCode];

      if (v94)
      {
        uint64_t v95 = sub_1001C0BF0();
        uint64_t v90 = v96;
      }
      else
      {
        uint64_t v95 = 0;
        uint64_t v90 = 0;
      }
      uint64_t v87 = v91;
LABEL_35:
      v97.value._uint64_t countAndFlagsBits = v95;
      v97.value._object = v90;
      Swift::Int_optional v209 = TC2ServerDrivenConfiguration.totalAttestations(forRegion:)(v97);
      Swift::Int value = v209.value;
      Swift::Bool is_nil = v209.is_nil;
      swift_bridgeObjectRelease();
      unint64_t v100 = is_nil ? v61 : (_OWORD *)value;
      uint64_t v101 = (uint64_t)((uint64_t)v61 >= (uint64_t)v100 ? v100 : v61);
      char v102 = (void (*)(char *, uint64_t, uint64_t))v77[3];
      uint64_t v103 = v77[4];
      sub_10000D934(v77, (uint64_t)v102);
      uint64_t v207 = &type metadata for SystemInfo;
      char v208 = &protocol witness table for SystemInfo;
      char v104 = (_OWORD *)swift_allocObject();
      uint64_t v205 = (uint64_t)v104;
      unint64_t v61 = v188;
      long long v105 = v188[9];
      v104[9] = v188[8];
      v104[10] = v105;
      v104[11] = v61[10];
      long long v106 = v61[5];
      v104[5] = v61[4];
      v104[6] = v106;
      long long v107 = v61[7];
      v104[7] = v61[6];
      v104[8] = v107;
      long long v108 = v61[1];
      v104[1] = *v61;
      v104[2] = v108;
      long long v109 = v61[3];
      v104[3] = v61[2];
      v104[4] = v109;
      sub_100016110((uint64_t)v61);
      TC2Configuration.environment(systemInfo:)((uint64_t)&v205, v102, v103, v83);
      sub_100003E90((uint64_t)&v205);
      uint64_t v110 = v87;
      BOOL v111 = __OFSUB__(v101, v87);
      uint64_t v87 = v101 - v87;
      if (!v111) {
        break;
      }
      __break(1u);
LABEL_47:
      uint64_t v91 = v87;
    }
    unint64_t v148 = (unint64_t)a11;
    uint64_t v112 = v77[3];
    uint64_t v178 = v110;
    sub_10000D934(v77, v112);
    uint64_t v147 = v101;
    unint64_t v113 = v152;
    sub_1001BFA00();
    sub_1001BF8F0();
    v151(v113, v154);
    uint64_t v114 = v205;
    if (v205 >= v87) {
      uint64_t v114 = v87;
    }
    uint64_t v154 = v114 & ~(v114 >> 63);
    sub_10000D934(v77, v77[3]);
    uint64_t v115 = v155;
    sub_1001BF990();
    sub_1001BF8F0();
    v180(v115, v191);
    uint64_t v155 = v205;
    uint64_t v153 = v206;
    sub_10000D934(v77, v77[3]);
    unint64_t v116 = v156;
    sub_1001BFAA0();
    sub_1001BF8F0();
    unint64_t v117 = *(void (**)(char *, uint64_t))(v159 + 8);
    unint64_t v118 = v116;
    uint64_t v119 = v160;
    v117(v118, v160);
    double v120 = v204;
    sub_10000D934(v77, v77[3]);
    uint64_t v121 = v157;
    sub_1001BFA90();
    sub_1001BF8F0();
    v117(v121, v119);
    double v122 = v203;
    sub_10000D934(v77, v77[3]);
    uint64_t v123 = v158;
    sub_1001BFA80();
    sub_1001BF8F0();
    v117((char *)v123, v119);
    double v124 = v202;
    sub_10000D934(v77, v77[3]);
    uint64_t v125 = v161;
    sub_1001BFA10();
    sub_1001BF8F0();
    (*(void (**)(uint64_t, uint64_t))(v162 + 8))(v125, v163);
    LODWORD(v163) = v201;
    uint64_t v162 = sub_1001BF8A0();
    uint64_t v161 = v126;
    LODWORD(v160) = sub_1001BF870();
    sub_1001BF8B0();
    uint64_t v159 = sub_1001BF880();
    uint64_t v158 = v127;
    sub_10000D934(v77, v77[3]);
    uint64_t v128 = v166;
    sub_1001BF9C0();
    sub_1001BF8F0();
    uint64_t v129 = *(void (**)(uint64_t, uint64_t))(v168 + 8);
    uint64_t v130 = v128;
    uint64_t v131 = v169;
    v129(v130, v169);
    uint64_t v168 = v199;
    uint64_t v166 = v200;
    sub_10000D934(v77, v77[3]);
    uint64_t v132 = v167;
    sub_1001BFA20();
    sub_1001BF8F0();
    v129(v132, v131);
    uint64_t v195 = v197;
    uint64_t v196 = v198;
    uint64_t v193 = 44;
    unint64_t v194 = 0xE100000000000000;
    sub_10001A364();
    uint64_t v133 = sub_1001C1330();
    swift_bridgeObjectRelease();
    uint64_t v169 = sub_10015C6B4(v133);
    swift_bridgeObjectRelease();
    sub_10000D934(v77, v77[3]);
    uint64_t v134 = v164;
    sub_1001BF9A0();
    sub_1001BF8F0();
    uint64_t v135 = v191;
    long long v136 = (void (*)(char *, uint64_t))v180;
    v180(v134, v191);
    uint64_t v167 = v197;
    uint64_t v164 = v198;
    uint64_t v146 = v77;
    sub_10000D934(v77, v77[3]);
    long long v137 = v165;
    sub_1001BF970();
    sub_1001BF8F0();
    v136(v137, v135);
    uint64_t v138 = v195;
    uint64_t v139 = v196;
    uint64_t v140 = v185;
    uint64_t v141 = v172;
    sub_10003282C(v185, v172, qword_100208CD0);
    unint64_t v142 = v173;
    sub_1001C1050();
    char v143 = sub_1000DAC84(v142);
    uint64_t v145 = v148 | ((HIDWORD(v148) & 1) << 32);
    sub_1000D9FD8(v178, v147, v154, v155, v153, v163, v162, v161, v177, v120, v122, v124, v160 & 1, v181, v159, v158, v168, v166, v169,
      v167,
      v164,
      v138,
      v139,
      v176,
      v182,
      v175,
      v183,
      v174,
      v184,
      v141,
      v149,
      v150,
      v143,
      v144,
      v145,
      SBYTE4(v145));
    swift_release();
    sub_1000161E0((uint64_t)v188);
    sub_100010360(v140, qword_100208CD0);
    (*(void (**)(char *, uint64_t))(v170 + 8))(v190, v171);
    sub_100003E90((uint64_t)v146);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10014831C(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1000A12C8;
  return v6(a1);
}

uint64_t sub_1001483F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  uint64_t v8 = sub_1001C14E0();
  v7[9] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v7[10] = v9;
  v7[11] = *(void *)(v9 + 64);
  v7[12] = swift_task_alloc();
  sub_100003918(&qword_10020C3B0);
  v7[13] = swift_task_alloc();
  return _swift_task_switch(sub_1001484F8, 0, 0);
}

uint64_t sub_1001484F8()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[10];
  uint64_t v16 = v0[12];
  uint64_t v17 = v0[11];
  uint64_t v19 = v0[8];
  uint64_t v18 = v0[7];
  uint64_t v3 = v0[5];
  uint64_t v14 = v0[6];
  uint64_t v15 = v0[9];
  uint64_t v4 = v0[4];
  uint64_t v5 = sub_1001C0FC0();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  v6(v1, 1, 1, v5);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v4;
  v7[5] = v3;
  swift_retain();
  sub_10012EB80(v1, (uint64_t)&unk_10020E690, (uint64_t)v7);
  sub_100010360(v1, &qword_10020C3B0);
  v6(v1, 1, 1, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v16, v14, v15);
  unint64_t v8 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 0;
  *(void *)(v9 + 24) = 0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))(v9 + v8, v16, v15);
  uint64_t v10 = (void *)(v9 + ((v17 + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  void *v10 = v18;
  v10[1] = v19;
  sub_10012EB80(v1, (uint64_t)&unk_10020E6A0, v9);
  sub_100010360(v1, &qword_10020C3B0);
  uint64_t v11 = (void *)swift_task_alloc();
  v0[14] = v11;
  uint64_t v12 = sub_100003918(&qword_10020E6A8);
  v0[15] = v12;
  *uint64_t v11 = v0;
  v11[1] = sub_100148770;
  return ThrowingTaskGroup.next(isolation:)(v0 + 19, 0, 0, v12);
}

uint64_t sub_100148770()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100148930;
  }
  else {
    uint64_t v2 = sub_100148884;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100148884()
{
  if (*(unsigned char *)(v0 + 152))
  {
    __break(1u);
  }
  else
  {
    sub_100003918(&qword_100208C98);
    sub_1001C1080();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  return result;
}

uint64_t sub_100148930()
{
  v0[2] = v0[16];
  swift_errorRetain();
  sub_100003918(&qword_100208C98);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    sub_1001C1080();
    uint64_t v1 = (void *)swift_task_alloc();
    v0[17] = v1;
    void *v1 = v0;
    v1[1] = sub_100148AA0;
    uint64_t v2 = v0[15];
    return ThrowingTaskGroup.next(isolation:)((char *)v0 + 153, 0, 0, v2);
  }
  else
  {
    swift_errorRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
}

uint64_t sub_100148AA0()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100148C34;
  }
  else {
    uint64_t v2 = sub_100148BB4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100148BB4()
{
  if (*(unsigned char *)(v0 + 153))
  {
    __break(1u);
  }
  else
  {
    swift_errorRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  return result;
}

uint64_t sub_100148C34()
{
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100148CB4(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  unint64_t v8 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v6;
  void *v6 = v4;
  v6[1] = sub_1000A12C8;
  return v8(a1);
}

uint64_t sub_100148D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10020E6B0 + dword_10020E6B0);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v9;
  *uint64_t v9 = v6;
  v9[1] = sub_100148E5C;
  return v11(a5, a6, 0, 0, 1);
}

uint64_t sub_100148E5C()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v1 = sub_100162AFC;
  }
  else
  {
    uint64_t v1 = sub_100148F74;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_100148F74()
{
  sub_100162714();
  swift_allocError();
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100148FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 56) = v5;
  uint64_t v12 = sub_1001C14C0();
  *(void *)(v6 + 64) = v12;
  *(void *)(v6 + 72) = *(void *)(v12 - 8);
  *(void *)(v6 + 80) = swift_task_alloc();
  *(void *)(v6 + 88) = swift_task_alloc();
  *(void *)(v6 + 40) = a1;
  *(void *)(v6 + 48) = a2;
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  *(unsigned char *)(v6 + 32) = a5 & 1;
  return _swift_task_switch(sub_100149100, 0, 0);
}

uint64_t sub_100149100()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = sub_1001C14E0();
  uint64_t v5 = sub_1001627A0(&qword_100208C80, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  sub_1001C18D0();
  sub_1001627A0(&qword_100208C88, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
  sub_1001C14F0();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v6;
  v0[13] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v2);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[14] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1001492A0;
  uint64_t v8 = v0[11];
  return dispatch thunk of Clock.sleep(until:tolerance:)(v8, v0 + 2, v4, v5);
}

uint64_t sub_1001492A0()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  uint64_t v3 = *(void *)(*v1 + 88);
  uint64_t v4 = *(void *)(*v1 + 64);
  uint64_t v5 = *v1;
  *(void *)(v5 + 120) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
  {
    return _swift_task_switch(sub_10014945C, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_10014945C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001494C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[7] = sub_100003918(&qword_10020C180);
  v5[8] = swift_task_alloc();
  uint64_t v6 = sub_100003918(&qword_100208640);
  v5[9] = v6;
  v5[10] = *(void *)(v6 - 8);
  v5[11] = swift_task_alloc();
  return _swift_task_switch(sub_1001495C4, 0, 0);
}

uint64_t sub_1001495C4()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = swift_task_alloc();
  v0[12] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[13] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1001496B4;
  uint64_t v6 = v0[7];
  uint64_t v5 = v0[8];
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD00000000000001BLL, 0x80000001001C56F0, sub_1000F91B0, v3, v6);
}

uint64_t sub_1001496B4()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100149A04;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1001497D0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001497D0()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = (int *)v0[5];
  uint64_t v4 = (void *)(v0[8] + *(int *)(v0[7] + 48));
  v0[15] = *v4;
  v0[16] = v4[1];
  (*(void (**)(uint64_t))(v2 + 32))(v1);
  uint64_t v7 = (uint64_t (*)(void))((char *)v3 + *v3);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[17] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1001498F0;
  return v7();
}

uint64_t sub_1001498F0()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100149B30;
  }
  else {
    uint64_t v2 = sub_100149A7C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100149A04()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100149A7C()
{
  uint64_t v2 = v0[15];
  unint64_t v1 = v0[16];
  uint64_t v4 = v0[10];
  uint64_t v3 = v0[11];
  uint64_t v5 = v0[9];
  sub_1001C0EC0();
  sub_10000792C(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_100149B30()
{
  uint64_t v2 = v0[15];
  unint64_t v1 = v0[16];
  uint64_t v4 = v0[10];
  uint64_t v3 = v0[11];
  uint64_t v5 = v0[9];
  v0[2] = v0[18];
  swift_errorRetain();
  sub_1001C0EB0();
  swift_willThrow();
  sub_10000792C(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_100149C0C(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020D858);
  __chkstk_darwin(v2 - 8, v3);
  char v180 = (char *)&v170 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = sub_1001BFC00();
  uint64_t v181 = *(void *)(v182 - 8);
  __chkstk_darwin(v182, v5);
  uint64_t v171 = (char *)&v170 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = sub_1001BFC40();
  uint64_t v178 = *(void *)(v179 - 8);
  __chkstk_darwin(v179, v7);
  uint64_t v177 = (char *)&v170 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100003918(&qword_10020D860);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v188 = (char *)&v170 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v190 = sub_1001BFB40();
  uint64_t v189 = *(void *)(v190 - 8);
  __chkstk_darwin(v190, v12);
  uint64_t v174 = (char *)&v170 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v176 = sub_1001BF6D0();
  uint64_t v175 = *(void *)(v176 - 8);
  __chkstk_darwin(v176, v14);
  uint64_t v173 = (char *)&v170 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100003918(&qword_10020D850);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v187 = (char *)&v170 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v193 = sub_1001BF710();
  uint64_t v191 = *(void *)(v193 - 8);
  uint64_t v20 = __chkstk_darwin(v193, v19);
  uint64_t v183 = (char *)&v170 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v22);
  uint64_t v184 = (char *)&v170 - v23;
  uint64_t v195 = sub_1001BF750();
  uint64_t v192 = *(void *)(v195 - 8);
  __chkstk_darwin(v195, v24);
  unint64_t v194 = (char *)&v170 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100003918(&qword_10020D868);
  __chkstk_darwin(v26 - 8, v27);
  uint64_t v198 = (char *)&v170 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v200 = sub_1001BFC50();
  uint64_t v199 = *(void *)(v200 - 8);
  uint64_t v30 = __chkstk_darwin(v200, v29);
  uint64_t v172 = (char *)&v170 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v30, v32);
  uint64_t v185 = (char *)&v170 - v34;
  __chkstk_darwin(v33, v35);
  uint64_t v197 = (char *)&v170 - v36;
  uint64_t v204 = sub_1001BFB90();
  uint64_t v201 = *(void *)(v204 - 8);
  uint64_t v38 = __chkstk_darwin(v204, v37);
  uint64_t v186 = (char *)&v170 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38, v40);
  uint64_t v196 = (char *)&v170 - v41;
  uint64_t v209 = sub_1001BF690();
  uint64_t v203 = *(void *)(v209 - 8);
  __chkstk_darwin(v209, v42);
  double v202 = (char *)&v170 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_100003918(&qword_10020D870);
  __chkstk_darwin(v44 - 8, v45);
  unint64_t v206 = (char *)&v170 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v208 = sub_1001BF640();
  uint64_t v205 = *(void *)(v208 - 8);
  __chkstk_darwin(v208, v47);
  uint64_t v207 = (char *)&v170 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_100003918(&qword_10020D878);
  __chkstk_darwin(v49 - 8, v50);
  uint64_t v211 = (char *)&v170 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v213 = sub_1001BF670();
  uint64_t v210 = *(void *)(v213 - 8);
  __chkstk_darwin(v213, v52);
  int64_t v212 = (char *)&v170 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_100003918(&qword_10020D880);
  __chkstk_darwin(v54 - 8, v55);
  uint64_t v57 = (char *)&v170 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v216 = sub_1001BF700();
  uint64_t v214 = *(void *)(v216 - 8);
  __chkstk_darwin(v216, v58);
  unsigned long long v215 = (char *)&v170 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_100003918(qword_10020D888);
  __chkstk_darwin(v60 - 8, v61);
  uint64_t v63 = (char *)&v170 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1001BF7E0();
  uint64_t v217 = *(void *)(v64 - 8);
  __chkstk_darwin(v64, v65);
  unint64_t v67 = (char *)&v170 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_1001BF810();
  uint64_t v69 = *(void *)(v68 - 8);
  __chkstk_darwin(v68, v70);
  unint64_t v72 = (char *)&v170 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v221 = 0;
  unint64_t v222 = 0xE000000000000000;
  sub_1001C1420(27);
  swift_bridgeObjectRelease();
  unint64_t v221 = 0xD000000000000019;
  unint64_t v222 = 0x80000001001C5790;
  uint64_t v73 = a1;
  v223._uint64_t countAndFlagsBits = sub_1001BF7B0();
  sub_1001C0D00(v223);
  swift_bridgeObjectRelease();
  uint64_t v75 = v221;
  unint64_t v74 = (void *)v222;
  (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v72, v73, v68);
  int v76 = (*(uint64_t (**)(char *, uint64_t))(v69 + 88))(v72, v68);
  if (v76 == enum case for TrustedCloudComputeError.deniedDueToRateLimit(_:))
  {
    (*(void (**)(char *, uint64_t))(v69 + 96))(v72, v68);
    uint64_t v77 = sub_1001BF7A0();
    (*(void (**)(char *, uint64_t))(*(void *)(v77 - 8) + 8))(v72, v77);
    return v75;
  }
  if (v76 == enum case for TrustedCloudComputeError.deniedDueToAvailability(_:))
  {
    uint64_t v216 = (uint64_t)v74;
    unint64_t v79 = v75;
    (*(void (**)(char *, uint64_t))(v69 + 96))(v72, v68);
    uint64_t v80 = v217;
    uint64_t v81 = v64;
    (*(void (**)(char *, char *, uint64_t))(v217 + 32))(v67, v72, v64);
    sub_1001BF7D0();
    uint64_t v82 = sub_1001BF7C0();
    uint64_t v83 = *(void *)(v82 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v63, 1, v82) == 1)
    {
      (*(void (**)(char *, uint64_t))(v80 + 8))(v67, v64);
      return v79;
    }
    else
    {
      int v90 = (*(uint64_t (**)(char *, uint64_t))(v83 + 88))(v63, v82);
      if (v90 == enum case for TrustedCloudComputeError.AvailabilityInfo.Reason.unknownWorkload(_:))
      {
        unint64_t v221 = 0;
        unint64_t v222 = 0xE000000000000000;
        sub_1001C1420(18);
        swift_bridgeObjectRelease();
        unint64_t v221 = v79;
        unint64_t v222 = v216;
        v224._uint64_t countAndFlagsBits = 0xD000000000000010;
        v224._object = (void *)0x80000001001C5A30;
        sub_1001C0D00(v224);
        uint64_t v75 = v221;
        (*(void (**)(char *, uint64_t))(v217 + 8))(v67, v64);
      }
      else
      {
        uint64_t v98 = v217;
        if (v90 == enum case for TrustedCloudComputeError.AvailabilityInfo.Reason.noNodesAvailable(_:))
        {
          unint64_t v221 = 0;
          unint64_t v222 = 0xE000000000000000;
          sub_1001C1420(19);
          swift_bridgeObjectRelease();
          unint64_t v221 = v79;
          unint64_t v222 = v216;
          v99._object = (void *)0x80000001001C5A70;
          v99._uint64_t countAndFlagsBits = 0xD000000000000011;
        }
        else
        {
          if (v90 != enum case for TrustedCloudComputeError.AvailabilityInfo.Reason.nodesBusy(_:))
          {
            uint64_t v131 = (void (**)(char *, uint64_t))(v217 + 8);
            unint64_t v221 = 0;
            unint64_t v222 = 0xE000000000000000;
            if (v90 == enum case for TrustedCloudComputeError.AvailabilityInfo.Reason.nodeAttestationChanged(_:))
            {
              sub_1001C1420(25);
              swift_bridgeObjectRelease();
              unint64_t v221 = v79;
              unint64_t v222 = v216;
              v231._uint64_t countAndFlagsBits = 0xD000000000000017;
              v231._object = (void *)0x80000001001C5A50;
              sub_1001C0D00(v231);
              uint64_t v75 = v221;
              (*v131)(v67, v81);
            }
            else
            {
              sub_1001C1420(19);
              swift_bridgeObjectRelease();
              unint64_t v221 = v79;
              unint64_t v222 = v216;
              v235._object = (void *)0x80000001001C57B0;
              v235._uint64_t countAndFlagsBits = 0xD000000000000011;
              sub_1001C0D00(v235);
              unint64_t v145 = v221;
              (*v131)(v67, v81);
              (*(void (**)(char *, uint64_t))(v83 + 8))(v63, v82);
              return v145;
            }
            return v75;
          }
          unint64_t v221 = v79;
          unint64_t v222 = v216;
          v99._uint64_t countAndFlagsBits = 0x75427365646F6E5FLL;
          v99._object = (void *)0xEA00000000007973;
        }
        sub_1001C0D00(v99);
        uint64_t v75 = v221;
        (*(void (**)(char *, uint64_t))(v98 + 8))(v67, v81);
      }
    }
    return v75;
  }
  if (v76 == enum case for TrustedCloudComputeError.timeoutError(_:))
  {
    unint64_t v84 = v75;
    (*(void (**)(char *, uint64_t))(v69 + 96))(v72, v68);
    uint64_t v85 = v214;
    uint64_t v86 = v215;
    uint64_t v87 = v216;
    (*(void (**)(char *, char *, uint64_t))(v214 + 32))(v215, v72, v216);
    sub_1001BF6F0();
    uint64_t v88 = sub_1001BF6E0();
    uint64_t v89 = *(void *)(v88 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v57, 1, v88) == 1)
    {
      (*(void (**)(char *, uint64_t))(v85 + 8))(v86, v87);
      return v84;
    }
    else
    {
      int v97 = (*(uint64_t (**)(char *, uint64_t))(v89 + 88))(v57, v88);
      if (v97 == enum case for TrustedCloudComputeError.TimeoutErrorInfo.Reason.setupRequestTimeout(_:))
      {
        unint64_t v221 = 0;
        unint64_t v222 = 0xE000000000000000;
        sub_1001C1420(22);
        swift_bridgeObjectRelease();
        unint64_t v221 = v84;
        unint64_t v222 = (unint64_t)v74;
        v225._uint64_t countAndFlagsBits = 0xD000000000000014;
        v225._object = (void *)0x80000001001C5A10;
        sub_1001C0D00(v225);
        uint64_t v75 = v221;
        (*(void (**)(char *, uint64_t))(v85 + 8))(v86, v87);
      }
      else
      {
        long long v106 = (void (**)(char *, uint64_t))(v85 + 8);
        unint64_t v221 = 0;
        unint64_t v222 = 0xE000000000000000;
        if (v97 == enum case for TrustedCloudComputeError.TimeoutErrorInfo.Reason.decryptionKeyTimeout(_:))
        {
          sub_1001C1420(23);
          swift_bridgeObjectRelease();
          unint64_t v221 = v84;
          unint64_t v222 = (unint64_t)v74;
          v227._uint64_t countAndFlagsBits = 0xD000000000000015;
          v227._object = (void *)0x80000001001C59F0;
          sub_1001C0D00(v227);
          uint64_t v75 = v221;
          (*v106)(v86, v87);
        }
        else
        {
          sub_1001C1420(19);
          swift_bridgeObjectRelease();
          unint64_t v221 = v84;
          unint64_t v222 = (unint64_t)v74;
          v230._object = (void *)0x80000001001C57B0;
          v230._uint64_t countAndFlagsBits = 0xD000000000000011;
          sub_1001C0D00(v230);
          unint64_t v130 = v221;
          (*v106)(v86, v87);
          (*(void (**)(char *, uint64_t))(v89 + 8))(v57, v88);
          return v130;
        }
      }
    }
    return v75;
  }
  if (v76 == enum case for TrustedCloudComputeError.invalidRequestError(_:))
  {
    (*(void (**)(char *, uint64_t))(v69 + 96))(v72, v68);
    uint64_t v91 = v210;
    unint64_t v93 = v212;
    uint64_t v92 = v213;
    (*(void (**)(char *, char *, uint64_t))(v210 + 32))(v212, v72, v213);
    id v94 = v211;
    sub_1001BF660();
    uint64_t v95 = sub_1001BF650();
    uint64_t v96 = *(void *)(v95 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v96 + 48))(v94, 1, v95) == 1)
    {
      (*(void (**)(char *, uint64_t))(v91 + 8))(v93, v92);
      return v75;
    }
    unint64_t v103 = v75;
    char v104 = (void (**)(char *, uint64_t))(v91 + 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v96 + 88))(v94, v95) == enum case for TrustedCloudComputeError.InvalidRequestErrorInfo.Reason.invalidWorkload(_:))
    {
      unint64_t v221 = 0;
      unint64_t v222 = 0xE000000000000000;
      sub_1001C1420(18);
      swift_bridgeObjectRelease();
      unint64_t v221 = v103;
      unint64_t v222 = (unint64_t)v74;
      v226._uint64_t countAndFlagsBits = 0xD000000000000010;
      v226._object = (void *)0x80000001001C59D0;
      sub_1001C0D00(v226);
      unint64_t v105 = v221;
      (*v104)(v93, v92);
      return v105;
    }
    unint64_t v221 = 0;
    unint64_t v222 = 0xE000000000000000;
    sub_1001C1420(19);
    swift_bridgeObjectRelease();
    unint64_t v221 = v103;
    unint64_t v222 = (unint64_t)v74;
    v229._object = (void *)0x80000001001C57B0;
    v229._uint64_t countAndFlagsBits = 0xD000000000000011;
    sub_1001C0D00(v229);
    unint64_t v129 = v221;
    (*v104)(v93, v92);
    goto LABEL_47;
  }
  if (v76 == enum case for TrustedCloudComputeError.unauthorizedError(_:))
  {
    (*(void (**)(char *, uint64_t))(v69 + 96))(v72, v68);
    uint64_t v100 = v205;
    char v102 = v207;
    uint64_t v101 = v208;
    (*(void (**)(char *, char *, uint64_t))(v205 + 32))(v207, v72, v208);
    id v94 = v206;
    sub_1001BF630();
    uint64_t v95 = sub_1001BF620();
    uint64_t v96 = *(void *)(v95 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v96 + 48))(v94, 1, v95) == 1)
    {
      (*(void (**)(char *, uint64_t))(v100 + 8))(v102, v101);
      return v75;
    }
    unint64_t v127 = v75;
    uint64_t v128 = (void (**)(char *, uint64_t))(v100 + 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v96 + 88))(v94, v95) == enum case for TrustedCloudComputeError.UnauthorizedErrorInfo.Reason.softwareBlocked(_:))
    {
      unint64_t v221 = 0;
      unint64_t v222 = 0xE000000000000000;
      sub_1001C1420(18);
      swift_bridgeObjectRelease();
      unint64_t v221 = v127;
      unint64_t v222 = (unint64_t)v74;
      v228._uint64_t countAndFlagsBits = 0xD000000000000010;
      v228._object = (void *)0x80000001001C59B0;
      sub_1001C0D00(v228);
      unint64_t v105 = v221;
      (*v128)(v102, v101);
      return v105;
    }
    unint64_t v221 = 0;
    unint64_t v222 = 0xE000000000000000;
    sub_1001C1420(19);
    swift_bridgeObjectRelease();
    unint64_t v221 = v127;
    unint64_t v222 = (unint64_t)v74;
    v234._object = (void *)0x80000001001C57B0;
    v234._uint64_t countAndFlagsBits = 0xD000000000000011;
    sub_1001C0D00(v234);
    unint64_t v129 = v221;
    (*v128)(v102, v101);
LABEL_47:
    uint64_t v75 = v129;
    (*(void (**)(char *, uint64_t))(v96 + 8))(v94, v95);
    return v75;
  }
  if (v76 == enum case for TrustedCloudComputeError.serverError(_:))
  {
    long long v107 = v74;
    (*(void (**)(char *, uint64_t))(v69 + 96))(v72, v68);
    long long v109 = v202;
    uint64_t v108 = v203;
    (*(void (**)(char *, char *, uint64_t))(v203 + 32))(v202, v72, v209);
    uint64_t v110 = v197;
    sub_1001BF680();
    BOOL v111 = v198;
    sub_1001BFBA0();
    uint64_t v112 = (uint64_t)v111;
    unint64_t v113 = *(void (**)(char *, uint64_t))(v199 + 8);
    uint64_t v114 = v200;
    v113(v110, v200);
    uint64_t v115 = v201;
    uint64_t v116 = v204;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v201 + 48))(v112, 1, v204) == 1)
    {
      sub_100010360(v112, &qword_10020D868);
      unint64_t v117 = v185;
      sub_1001BF680();
      unint64_t v118 = v188;
      sub_1001BFC20();
      uint64_t v119 = (uint64_t)v118;
      v113(v117, v114);
      uint64_t v120 = v189;
      uint64_t v121 = v118;
      uint64_t v122 = v190;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v189 + 48))(v121, 1, v190) == 1)
      {
        sub_100010360(v119, &qword_10020D860);
        uint64_t v123 = v172;
        sub_1001BF680();
        double v124 = v180;
        sub_1001BFC10();
        v113(v123, v114);
        uint64_t v125 = (uint64_t)v124;
        uint64_t v120 = v181;
        uint64_t v126 = v124;
        uint64_t v122 = v182;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v181 + 48))(v126, 1, v182) == 1)
        {
          sub_100010360(v125, &qword_10020D858);
          (*(void (**)(char *, uint64_t))(v108 + 8))(v109, v209);
          return v75;
        }
        uint64_t v152 = v171;
        (*(void (**)(char *, uint64_t, uint64_t))(v120 + 32))(v171, v125, v122);
        unint64_t v221 = 0;
        unint64_t v222 = 0xE000000000000000;
        v243._uint64_t countAndFlagsBits = v75;
        v243._object = v107;
        sub_1001C0D00(v243);
        swift_bridgeObjectRelease();
        v153._uint64_t countAndFlagsBits = 0x5F707474685FLL;
      }
      else
      {
        uint64_t v152 = v174;
        (*(void (**)(char *, uint64_t, uint64_t))(v120 + 32))(v174, v119, v122);
        unint64_t v221 = 0;
        unint64_t v222 = 0xE000000000000000;
        v239._uint64_t countAndFlagsBits = v75;
        v239._object = v107;
        sub_1001C0D00(v239);
        swift_bridgeObjectRelease();
        v153._uint64_t countAndFlagsBits = 0x5F637072675FLL;
      }
      v153._object = (void *)0xE600000000000000;
      sub_1001C0D00(v153);
      sub_1001C1510();
      uint64_t v75 = v221;
      (*(void (**)(char *, uint64_t))(v120 + 8))(v152, v122);
    }
    else
    {
      uint64_t v139 = v196;
      (*(void (**)(char *, uint64_t, uint64_t))(v115 + 32))(v196, v112, v116);
      uint64_t v140 = (uint64_t *)v186;
      (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v186, v139, v116);
      int v141 = (*(uint64_t (**)(uint64_t *, uint64_t))(v115 + 88))(v140, v116);
      if (v141 == enum case for TC2RopesResponseMetadata.ReceivedErrorCode.errorCode(_:))
      {
        (*(void (**)(uint64_t *, uint64_t))(v115 + 96))(v140, v116);
        uint64_t v142 = v178;
        char v143 = v177;
        uint64_t v144 = v179;
        (*(void (**)(char *, uint64_t *, uint64_t))(v178 + 32))(v177, v140, v179);
        unint64_t v221 = 0;
        unint64_t v222 = 0xE000000000000000;
        v232._uint64_t countAndFlagsBits = v75;
        v232._object = v107;
        sub_1001C0D00(v232);
        swift_bridgeObjectRelease();
        v233._uint64_t countAndFlagsBits = 95;
        v233._object = (void *)0xE100000000000000;
        sub_1001C0D00(v233);
        sub_1001C1510();
        uint64_t v75 = v221;
        (*(void (**)(char *, uint64_t))(v142 + 8))(v143, v144);
        (*(void (**)(char *, uint64_t))(v115 + 8))(v196, v204);
      }
      else
      {
        if (v141 != enum case for TC2RopesResponseMetadata.ReceivedErrorCode.unrecognizedErrorCode(_:))
        {
          unint64_t v221 = 0;
          unint64_t v222 = 0xE000000000000000;
          sub_1001C1420(19);
          swift_bridgeObjectRelease();
          unint64_t v221 = v75;
          unint64_t v222 = (unint64_t)v107;
          v244._object = (void *)0x80000001001C57B0;
          v244._uint64_t countAndFlagsBits = 0xD000000000000011;
          sub_1001C0D00(v244);
          uint64_t v75 = v221;
          uint64_t v160 = *(void (**)(char *, uint64_t))(v115 + 8);
          v160(v139, v116);
          (*(void (**)(char *, uint64_t))(v108 + 8))(v109, v209);
          v160((char *)v140, v116);
          return v75;
        }
        (*(void (**)(uint64_t *, uint64_t))(v115 + 96))(v140, v116);
        uint64_t v159 = *v140;
        unint64_t v221 = v75;
        unint64_t v222 = (unint64_t)v107;
        v240._uint64_t countAndFlagsBits = 95;
        v240._object = (void *)0xE100000000000000;
        sub_1001C0D00(v240);
        uint64_t v219 = v159;
        v241._uint64_t countAndFlagsBits = sub_1001C1780();
        sub_1001C0D00(v241);
        swift_bridgeObjectRelease();
        uint64_t v75 = v221;
        (*(void (**)(char *, uint64_t))(v115 + 8))(v139, v116);
      }
    }
    (*(void (**)(char *, uint64_t))(v108 + 8))(v109, v209);
    return v75;
  }
  if (v76 == enum case for TrustedCloudComputeError.internalError(_:))
  {
    unint64_t v132 = (unint64_t)v74;
    (*(void (**)(char *, uint64_t))(v69 + 96))(v72, v68);
    uint64_t v133 = v192;
    uint64_t v134 = v194;
    uint64_t v135 = v195;
    (*(void (**)(char *, char *, uint64_t))(v192 + 32))(v194, v72, v195);
    uint64_t v136 = (uint64_t)v187;
    sub_1001BF720();
    uint64_t v137 = v191;
    uint64_t v138 = v193;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v191 + 48))(v136, 1, v193) == 1)
    {
      sub_100010360(v136, &qword_10020D850);
      (*(void (**)(char *, uint64_t))(v133 + 8))(v134, v135);
      return v75;
    }
    uint64_t v154 = v184;
    (*(void (**)(char *, uint64_t, uint64_t))(v137 + 32))(v184, v136, v138);
    uint64_t v155 = v183;
    (*(void (**)(char *, char *, uint64_t))(v137 + 16))(v183, v154, v138);
    int v156 = (*(uint64_t (**)(char *, uint64_t))(v137 + 88))(v155, v138);
    if (v156 == enum case for TrustedCloudComputeError.InternalErrorInfo.Reason.xpcConnectionInterrupted(_:))
    {
      unint64_t v221 = 0;
      unint64_t v222 = 0xE000000000000000;
      sub_1001C1420(27);
      swift_bridgeObjectRelease();
      unint64_t v221 = v75;
      unint64_t v222 = v132;
      v157._uint64_t countAndFlagsBits = 0xD000000000000019;
      uint64_t v158 = "_xpcConnectionInterrupted";
    }
    else if (v156 == enum case for TrustedCloudComputeError.InternalErrorInfo.Reason.failedToLoadKeyData(_:))
    {
      unint64_t v221 = 0;
      unint64_t v222 = 0xE000000000000000;
      sub_1001C1420(22);
      swift_bridgeObjectRelease();
      unint64_t v221 = v75;
      unint64_t v222 = v132;
      v157._uint64_t countAndFlagsBits = 0xD000000000000014;
      uint64_t v158 = "_failedToLoadKeyData";
    }
    else if (v156 == enum case for TrustedCloudComputeError.InternalErrorInfo.Reason.failedToFetchPrivateAccessTokens(_:))
    {
      unint64_t v221 = 0;
      unint64_t v222 = 0xE000000000000000;
      sub_1001C1420(35);
      swift_bridgeObjectRelease();
      unint64_t v221 = v75;
      unint64_t v222 = v132;
      v157._uint64_t countAndFlagsBits = 0xD000000000000021;
      uint64_t v158 = "_failedToFetchPrivateAccessTokens";
    }
    else if (v156 == enum case for TrustedCloudComputeError.InternalErrorInfo.Reason.invalidResponseUUID(_:))
    {
      unint64_t v221 = 0;
      unint64_t v222 = 0xE000000000000000;
      sub_1001C1420(22);
      swift_bridgeObjectRelease();
      unint64_t v221 = v75;
      unint64_t v222 = v132;
      v157._uint64_t countAndFlagsBits = 0xD000000000000014;
      uint64_t v158 = "_invalidResponseUUID";
    }
    else if (v156 == enum case for TrustedCloudComputeError.InternalErrorInfo.Reason.failedToValidateAllAttestations(_:))
    {
      unint64_t v221 = 0;
      unint64_t v222 = 0xE000000000000000;
      sub_1001C1420(34);
      swift_bridgeObjectRelease();
      unint64_t v221 = v75;
      unint64_t v222 = v132;
      v157._uint64_t countAndFlagsBits = 0xD000000000000020;
      uint64_t v158 = "_failedToValidateAllAttestations";
    }
    else
    {
      if (v156 != enum case for TrustedCloudComputeError.InternalErrorInfo.Reason.responseSummaryIndicatesFailure(_:))
      {
        unint64_t v161 = v75;
        if (v156 == enum case for TrustedCloudComputeError.InternalErrorInfo.Reason.responseSummaryIndicatesUnauthenticated(_:))
        {
          unint64_t v221 = 0;
          unint64_t v222 = 0xE000000000000000;
          sub_1001C1420(42);
          swift_bridgeObjectRelease();
          unint64_t v221 = v75;
          unint64_t v222 = v132;
          v162._uint64_t countAndFlagsBits = 0xD000000000000028;
          uint64_t v163 = "_responseSummaryIndicatesUnauthenticated";
        }
        else if (v156 == enum case for TrustedCloudComputeError.InternalErrorInfo.Reason.responseSummaryIndicatesInternalError(_:))
        {
          unint64_t v221 = 0;
          unint64_t v222 = 0xE000000000000000;
          sub_1001C1420(40);
          swift_bridgeObjectRelease();
          unint64_t v221 = v75;
          unint64_t v222 = v132;
          v162._uint64_t countAndFlagsBits = 0xD000000000000026;
          uint64_t v163 = "_responseSummaryIndicatesInternalError";
        }
        else if (v156 == enum case for TrustedCloudComputeError.InternalErrorInfo.Reason.responseSummaryIndicatesInvalidRequest(_:))
        {
          unint64_t v221 = 0;
          unint64_t v222 = 0xE000000000000000;
          sub_1001C1420(41);
          swift_bridgeObjectRelease();
          unint64_t v221 = v75;
          unint64_t v222 = v132;
          v162._uint64_t countAndFlagsBits = 0xD000000000000027;
          uint64_t v163 = "_responseSummaryIndicatesInvalidRequest";
        }
        else if (v156 == enum case for TrustedCloudComputeError.InternalErrorInfo.Reason.missingAttestationBundle(_:))
        {
          unint64_t v221 = 0;
          unint64_t v222 = 0xE000000000000000;
          sub_1001C1420(27);
          swift_bridgeObjectRelease();
          unint64_t v221 = v75;
          unint64_t v222 = v132;
          v162._uint64_t countAndFlagsBits = 0xD000000000000019;
          uint64_t v163 = "_missingAttestationBundle";
        }
        else
        {
          if (v156 != enum case for TrustedCloudComputeError.InternalErrorInfo.Reason.invalidAttestationBundle(_:))
          {
            uint64_t v164 = (void (**)(char *, uint64_t))(v191 + 8);
            uint64_t v165 = (void (**)(char *, uint64_t))(v192 + 8);
            unint64_t v221 = 0;
            unint64_t v222 = 0xE000000000000000;
            if (v156 == enum case for TrustedCloudComputeError.InternalErrorInfo.Reason.routingHintMismatch(_:))
            {
              sub_1001C1420(22);
              swift_bridgeObjectRelease();
              unint64_t v221 = v161;
              unint64_t v222 = v132;
              v246._uint64_t countAndFlagsBits = 0xD000000000000014;
              v246._object = (void *)0x80000001001C57D0;
              sub_1001C0D00(v246);
              unint64_t v166 = v221;
              (*v164)(v184, v193);
              (*v165)(v194, v195);
              return v166;
            }
            else
            {
              sub_1001C1420(19);
              swift_bridgeObjectRelease();
              unint64_t v221 = v161;
              unint64_t v222 = v132;
              v247._object = (void *)0x80000001001C57B0;
              v247._uint64_t countAndFlagsBits = 0xD000000000000011;
              sub_1001C0D00(v247);
              unint64_t v167 = v221;
              uint64_t v168 = *v164;
              uint64_t v169 = v193;
              (*v164)(v184, v193);
              (*v165)(v194, v195);
              uint64_t v75 = v167;
              v168(v183, v169);
            }
            return v75;
          }
          unint64_t v221 = 0;
          unint64_t v222 = 0xE000000000000000;
          sub_1001C1420(27);
          swift_bridgeObjectRelease();
          unint64_t v221 = v75;
          unint64_t v222 = v132;
          v162._uint64_t countAndFlagsBits = 0xD000000000000019;
          uint64_t v163 = "_invalidAttestationBundle";
        }
        v162._object = (void *)((unint64_t)(v163 - 32) | 0x8000000000000000);
        sub_1001C0D00(v162);
        uint64_t v75 = v221;
        (*(void (**)(char *, uint64_t))(v191 + 8))(v184, v193);
        (*(void (**)(char *, uint64_t))(v192 + 8))(v194, v195);
        return v75;
      }
      unint64_t v221 = 0;
      unint64_t v222 = 0xE000000000000000;
      sub_1001C1420(34);
      swift_bridgeObjectRelease();
      unint64_t v221 = v75;
      unint64_t v222 = v132;
      v157._uint64_t countAndFlagsBits = 0xD000000000000020;
      uint64_t v158 = "_responseSummaryIndicatesFailure";
    }
    v157._object = (void *)((unint64_t)(v158 - 32) | 0x8000000000000000);
    sub_1001C0D00(v157);
    uint64_t v75 = v221;
    (*(void (**)(char *, uint64_t))(v137 + 8))(v154, v138);
    (*(void (**)(char *, uint64_t))(v133 + 8))(v134, v135);
    return v75;
  }
  if (v76 != enum case for TrustedCloudComputeError.networkError(_:))
  {
    unint64_t v221 = 0;
    unint64_t v222 = 0xE000000000000000;
    sub_1001C1420(19);
    swift_bridgeObjectRelease();
    unint64_t v221 = v75;
    unint64_t v222 = (unint64_t)v74;
    v242._object = (void *)0x80000001001C57B0;
    v242._uint64_t countAndFlagsBits = 0xD000000000000011;
    sub_1001C0D00(v242);
    uint64_t v75 = v221;
    (*(void (**)(char *, uint64_t))(v69 + 8))(v72, v68);
    return v75;
  }
  (*(void (**)(char *, uint64_t))(v69 + 96))(v72, v68);
  uint64_t v146 = v175;
  uint64_t v147 = v173;
  uint64_t v148 = v176;
  (*(void (**)(char *, char *, uint64_t))(v175 + 32))(v173, v72, v176);
  unint64_t v221 = v75;
  unint64_t v222 = (unint64_t)v74;
  v236._uint64_t countAndFlagsBits = 95;
  v236._object = (void *)0xE100000000000000;
  sub_1001C0D00(v236);
  uint64_t v219 = sub_1001BF6C0();
  unint64_t v220 = v149;
  v237._uint64_t countAndFlagsBits = sub_1001C0D40();
  sub_1001C0D00(v237);
  swift_bridgeObjectRelease();
  v238._uint64_t countAndFlagsBits = 95;
  v238._object = (void *)0xE100000000000000;
  sub_1001C0D00(v238);
  uint64_t result = sub_1001BF6A0();
  if ((result & 0x8000000000000000) == 0)
  {
    uint64_t v219 = result;
    v150._uint64_t countAndFlagsBits = sub_1001C1780();
    object = v150._object;
LABEL_66:
    v150._object = object;
    sub_1001C0D00(v150);
    swift_bridgeObjectRelease();
    uint64_t v75 = v221;
    (*(void (**)(char *, uint64_t))(v146 + 8))(v147, v148);
    return v75;
  }
  uint64_t v219 = 78;
  unint64_t v220 = 0xE100000000000000;
  if (!__OFSUB__(0, result))
  {
    uint64_t v218 = -result;
    v245._uint64_t countAndFlagsBits = sub_1001C1780();
    sub_1001C0D00(v245);
    swift_bridgeObjectRelease();
    v150._uint64_t countAndFlagsBits = v219;
    object = (void *)v220;
    goto LABEL_66;
  }
  __break(1u);
  return result;
}

uint64_t sub_10014BEB4(void (*a1)(uint64_t, uint64_t))
{
  uint64_t v3 = swift_isaMask & *v1;
  uint64_t v4 = sub_1001BF8D0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_10014C0E4(0) & 1) == 0 && (sub_10014C0E4(5) & 1) == 0) {
    return ((uint64_t (*)(void, unint64_t))a1)(0, 0xE000000000000000);
  }
  uint64_t v9 = (void *)((char *)v1 + *(void *)((swift_isaMask & *v1) + 0x78));
  uint64_t v19 = a1;
  uint64_t v10 = (void (*)(char *, uint64_t, uint64_t))v9[3];
  uint64_t v11 = v9[4];
  sub_10000D934(v9, (uint64_t)v10);
  uint64_t v12 = (char *)v1 + *(void *)((swift_isaMask & *v1) + 0x80);
  long long v18 = *(_OWORD *)(v3 + 80);
  long long v21 = v18;
  uint64_t v13 = sub_10000395C(v20);
  (*(void (**)(uint64_t *, char *))(*(void *)(v18 - 8) + 16))(v13, v12);
  TC2Configuration.environment(systemInfo:)((uint64_t)v20, v10, v11, (uint64_t)v8);
  sub_100003E90((uint64_t)v20);
  uint64_t v14 = sub_1001BF8A0();
  uint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  v19(v14, v16);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10014C0E4(char a1)
{
  uint64_t v3 = *(void **)((char *)v1 + *(void *)((swift_isaMask & *v1) + 0x70));
  uint64_t v4 = 0xD000000000000023;
  NSString v5 = sub_1001C0BE0();
  swift_bridgeObjectRelease();
  id v6 = [v3 valueForEntitlement:v5];

  if (!v6)
  {
    uint64_t v13 = sub_1001C0330();
    os_log_type_t v14 = sub_1001C1200();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(void *)&v33[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315138;
      unint64_t v16 = 0x80000001001C2600;
      switch(a1)
      {
        case 0:
          goto LABEL_19;
        case 1:
          uint64_t v4 = 0xD000000000000026;
          uint64_t v17 = "com.apple.privatecloudcompute.requests";
          goto LABEL_18;
        case 2:
          uint64_t v23 = "com.apple.privatecloudcompute.prefetchRequest";
          goto LABEL_15;
        case 3:
          uint64_t v23 = "com.apple.privatecloudcompute.knownRateLimits";
LABEL_15:
          unint64_t v16 = (unint64_t)(v23 - 32) | 0x8000000000000000;
          uint64_t v4 = 0xD00000000000002DLL;
          goto LABEL_19;
        case 4:
          uint64_t v4 = 0xD000000000000036;
          uint64_t v17 = "com.apple.privatecloudcompute.bundleIdentifierOverride";
          goto LABEL_18;
        case 5:
          uint64_t v4 = 0xD00000000000002FLL;
          uint64_t v17 = "com.apple.privatecloudcompute.serverEnvironment";
LABEL_18:
          unint64_t v16 = (unint64_t)(v17 - 32) | 0x8000000000000000;
LABEL_19:
          *(void *)&v32[0] = sub_1000DF238(v4, v16, (uint64_t *)v33);
          sub_1001C1310();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v13, v14, "entitlement not present: %s", v15, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
          break;
        default:
LABEL_39:
          JUMPOUT(0);
      }
    }

    return 0;
  }
  sub_1001C13C0();
  swift_unknownObjectRelease();
  sub_10015C8E8(v32, v33);
  sub_1000D8308((uint64_t)v33, (uint64_t)v32);
  if (!swift_dynamicCast())
  {
    sub_10015C8E8(v32, v31);
    sub_1000D8308((uint64_t)v31, (uint64_t)v30);
    long long v18 = sub_1001C0330();
    os_log_type_t v19 = sub_1001C1200();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136315394;
      unint64_t v21 = 0x80000001001C2600;
      switch(a1)
      {
        case 0:
          goto LABEL_35;
        case 1:
          uint64_t v4 = 0xD000000000000026;
          uint64_t v22 = "com.apple.privatecloudcompute.requests";
          goto LABEL_34;
        case 2:
          uint64_t v25 = "com.apple.privatecloudcompute.prefetchRequest";
          goto LABEL_31;
        case 3:
          uint64_t v25 = "com.apple.privatecloudcompute.knownRateLimits";
LABEL_31:
          unint64_t v21 = (unint64_t)(v25 - 32) | 0x8000000000000000;
          uint64_t v4 = 0xD00000000000002DLL;
          goto LABEL_35;
        case 4:
          uint64_t v4 = 0xD000000000000036;
          uint64_t v22 = "com.apple.privatecloudcompute.bundleIdentifierOverride";
          goto LABEL_34;
        case 5:
          uint64_t v4 = 0xD00000000000002FLL;
          uint64_t v22 = "com.apple.privatecloudcompute.serverEnvironment";
LABEL_34:
          unint64_t v21 = (unint64_t)(v22 - 32) | 0x8000000000000000;
LABEL_35:
          sub_1000DF238(v4, v21, &v29);
          sub_1001C1310();
          swift_bridgeObjectRelease();
          *(_WORD *)(v20 + 12) = 2080;
          sub_10000D934(v30, v30[3]);
          swift_getDynamicType();
          uint64_t v26 = sub_1001C1A20();
          sub_1000DF238(v26, v27, &v29);
          sub_1001C1310();
          swift_bridgeObjectRelease();
          sub_100003E90((uint64_t)v30);
          _os_log_impl((void *)&_mh_execute_header, v18, v19, "entitlement is wrong type: %s = %s", (uint8_t *)v20, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          goto LABEL_36;
        default:
          goto LABEL_39;
      }
    }

    sub_100003E90((uint64_t)v30);
LABEL_36:
    sub_100003E90((uint64_t)v31);
    sub_100003E90((uint64_t)v33);
    return 0;
  }
  uint64_t v7 = v29;
  uint64_t v8 = sub_1001C0330();
  os_log_type_t v9 = sub_1001C1200();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    *(void *)&v31[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315394;
    unint64_t v11 = 0x80000001001C2600;
    switch(a1)
    {
      case 0:
        goto LABEL_27;
      case 1:
        uint64_t v4 = 0xD000000000000026;
        uint64_t v12 = "com.apple.privatecloudcompute.requests";
        goto LABEL_26;
      case 2:
        uint64_t v24 = "com.apple.privatecloudcompute.prefetchRequest";
        goto LABEL_23;
      case 3:
        uint64_t v24 = "com.apple.privatecloudcompute.knownRateLimits";
LABEL_23:
        unint64_t v11 = (unint64_t)(v24 - 32) | 0x8000000000000000;
        uint64_t v4 = 0xD00000000000002DLL;
        goto LABEL_27;
      case 4:
        uint64_t v4 = 0xD000000000000036;
        uint64_t v12 = "com.apple.privatecloudcompute.bundleIdentifierOverride";
        goto LABEL_26;
      case 5:
        uint64_t v4 = 0xD00000000000002FLL;
        uint64_t v12 = "com.apple.privatecloudcompute.serverEnvironment";
LABEL_26:
        unint64_t v11 = (unint64_t)(v12 - 32) | 0x8000000000000000;
LABEL_27:
        HIDWORD(v30[0]) = (unint64_t)sub_1000DF238(v4, v11, (uint64_t *)v31) >> 32;
        sub_1001C1310();
        swift_bridgeObjectRelease();
        *(_WORD *)(v10 + 12) = 1024;
        LODWORD(v30[0]) = v7;
        sub_1001C1310();
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "entitlement observed: %s = %{BOOL}d", (uint8_t *)v10, 0x12u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        break;
      default:
        goto LABEL_39;
    }
  }

  sub_100003E90((uint64_t)v33);
  sub_100003E90((uint64_t)v32);
  return v7;
}

void sub_10014C860(void *a1, int a2, void *aBlock)
{
  NSString v5 = _Block_copy(aBlock);
  id v4 = a1;
  sub_10014BEB4((void (*)(uint64_t, uint64_t))sub_100162ADC);
  _Block_release(v5);
}

uint64_t sub_10014C8D0(uint64_t a1, void *a2, void (*a3)(void, void))
{
  sub_1001C1420(17);
  swift_bridgeObjectRelease();
  v11[0] = 0x64656C626D696874;
  v11[1] = 0xEF203A6F68634520;
  v12._uint64_t countAndFlagsBits = a1;
  v12._object = a2;
  sub_1001C0D00(v12);
  swift_bridgeObjectRetain_n();
  id v6 = sub_1001C0330();
  os_log_type_t v7 = sub_1001C1200();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v10 = a3;
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    v11[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    swift_bridgeObjectRetain();
    sub_1000DF238(a1, (unint64_t)a2, v11);
    sub_1001C1310();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "echo: %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    a3 = v10;
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  a3(0x64656C626D696874, 0xEF203A6F68634520);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10014CAF0(void *a1, int a2, int a3, void *aBlock)
{
  NSString v5 = _Block_copy(aBlock);
  uint64_t v6 = sub_1001C0BF0();
  uint64_t v8 = v7;
  id v9 = a1;
  sub_10014C8D0(v6, v8, sub_1001629F4);
  _Block_release(v5);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10014CB84(uint64_t a1, unint64_t a2, uint64_t (*a3)(), uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(char *, uint64_t), void (*a9)(char *, char *, uint64_t), uint64_t a10, void (*a11)(uint64_t, void, unint64_t), uint64_t a12)
{
  uint64_t v28 = a8;
  uint64_t v26 = a6;
  uint64_t v27 = a7;
  uint64_t v29 = a12;
  uint64_t v30 = a11;
  uint64_t v17 = sub_1001BF810();
  uint64_t v25 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17, v18);
  unint64_t v21 = (char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v22);
  sub_10014CDD4(a1, a2, a3, a4, a5, v26, v27, v28, a9, a10, (uint64_t)v21);
  uint64_t v23 = swift_unknownObjectRetain();
  v30(v23, 0, 0xF000000000000000);
  return swift_unknownObjectRelease_n();
}

void sub_10014CDD4(uint64_t a1, unint64_t a2, uint64_t (*a3)(), uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(char *, uint64_t), void (*a9)(char *, char *, uint64_t), uint64_t a10, uint64_t a11)
{
  unint64_t v42 = a5;
  uint64_t v40 = a3;
  uint64_t v41 = a4;
  unint64_t v46 = a2;
  uint64_t v44 = a1;
  uint64_t v15 = sub_100003918(&qword_100208C60);
  __chkstk_darwin(v15 - 8, v16);
  uint64_t v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1001BF950();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19, v21);
  uint64_t v23 = (char *)&v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_10014C0E4(1) & 1) == 0) {
    goto LABEL_6;
  }
  uint64_t v35 = a6;
  uint64_t v36 = a7;
  uint64_t v37 = a8;
  uint64_t v38 = v20;
  uint64_t v39 = a11;
  uint64_t v24 = *(void **)((char *)v11 + *(void *)((swift_isaMask & *v11) + 0x70));
  [v24 auditToken];
  uint64_t v25 = sub_10014D768();
  uint64_t v27 = v26;
  char v28 = sub_10014C0E4(4);
  [v24 auditToken];
  if (v27)
  {
    uint64_t v29 = (void *)((char *)v11 + *(void *)((swift_isaMask & *v11) + 0x68));
    uint64_t v30 = sub_10000D934(v29, v29[3]);
    uint64_t v31 = *v30;
    uint64_t v32 = *v30 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_structuredRequestFactoriesBySetup;
    os_unfair_lock_lock((os_unfair_lock_t)v32);
    uint64_t v33 = v43;
    sub_1000AA074((uint64_t *)(v32 + 8), v25, v27, v28 & 1, v31, &v45);
    if (v33)
    {
      os_unfair_lock_unlock((os_unfair_lock_t)v32);
      __break(1u);
    }
    else
    {
      os_unfair_lock_unlock((os_unfair_lock_t)v32);
      swift_bridgeObjectRelease();
      sub_100007B14(v44, v46);
      sub_1001627A0(&qword_10020E088, (void (*)(uint64_t))&type metadata accessor for TC2RequestParameters);
      sub_1001627A0(&qword_10020E090, (void (*)(uint64_t))&type metadata accessor for TC2RequestParameters);
      sub_1001BFD10();
      uint64_t v34 = v38;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v18, 1, v19) == 1)
      {
        sub_100010360((uint64_t)v18, &qword_100208C60);
        sub_1001BF800();
        sub_1001BF810();
        sub_1001627A0(&qword_10020D938, (void (*)(uint64_t))&type metadata accessor for TrustedCloudComputeError);
        swift_willThrowTypedImpl();
        swift_release();
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v23, v18, v19);
        LOBYTE(v45) = 1;
        if (sub_10014D92C(v40, (uint64_t)v23, v41, v42, v35, v36, v37, a9, a10, 0x100000000uLL))
        {
          (*(void (**)(char *, uint64_t))(v34 + 8))(v23, v19);
          swift_release();
        }
        else
        {
          sub_1001BF800();
          sub_1001BF810();
          sub_1001627A0(&qword_10020D938, (void (*)(uint64_t))&type metadata accessor for TrustedCloudComputeError);
          swift_willThrowTypedImpl();
          swift_release();
          (*(void (**)(char *, uint64_t))(v34 + 8))(v23, v19);
        }
      }
    }
  }
  else
  {
LABEL_6:
    sub_1001BF800();
    sub_1001BF810();
    sub_1001627A0(&qword_10020D938, (void (*)(uint64_t))&type metadata accessor for TrustedCloudComputeError);
    swift_willThrowTypedImpl();
  }
}

uint64_t sub_10014D3D0(void *a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6, void (*a7)(char *, uint64_t), void *a8, const void *a9)
{
  uint64_t v16 = sub_100003918(qword_100208CD0);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v51 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1001BF310();
  uint64_t v57 = *(void *)(v19 - 8);
  uint64_t v58 = v19;
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (uint64_t (*)())((char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v55 = _Block_copy(a9);
  id v23 = a3;
  id v24 = a4;
  id v56 = a1;
  id v25 = a5;
  uint64_t v49 = (uint64_t)a6;
  id v26 = a6;
  uint64_t v48 = a7;
  uint64_t v27 = a7;
  uint64_t v47 = a8;
  id v28 = a8;
  uint64_t v29 = sub_1001BF180();
  unint64_t v53 = v30;
  uint64_t v54 = v29;

  uint64_t v52 = v22;
  sub_1001BF2E0();

  if (v25)
  {
    uint64_t v31 = sub_1001C0BF0();
    unint64_t v50 = v32;

    uint64_t v33 = (uint64_t)v51;
    if (v26) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v31 = 0;
    unint64_t v50 = 0;
    uint64_t v33 = (uint64_t)v51;
    if (v26)
    {
LABEL_3:
      uint64_t v34 = sub_1001C0BF0();
      uint64_t v49 = v35;

      if (v27) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t v48 = 0;
      uint64_t v37 = 0;
      if (v28) {
        goto LABEL_5;
      }
LABEL_9:
      uint64_t v38 = 1;
      goto LABEL_10;
    }
  }
  uint64_t v34 = 0;
  uint64_t v49 = 0;
  if (!v27) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v48 = (void (*)(char *, uint64_t))sub_1001C0BF0();
  uint64_t v37 = v36;

  if (!v28) {
    goto LABEL_9;
  }
LABEL_5:
  sub_1001BF2E0();

  uint64_t v38 = 0;
LABEL_10:
  uint64_t v39 = v57;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 56))(v33, v38, 1, v58);
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = v55;
  unint64_t v46 = v37;
  uint64_t v41 = v54;
  uint64_t v43 = v52;
  unint64_t v42 = v53;
  uint64_t v44 = v56;
  sub_10014CB84(v54, v53, v52, v31, v50, v34, v49, v48, v46, v33, sub_10015D45C, v40);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10000792C(v41, v42);

  sub_100010360(v33, qword_100208CD0);
  return (*(uint64_t (**)(uint64_t (*)(), uint64_t))(v39 + 8))(v43, v58);
}

void sub_10014D6EC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a3 >> 60 == 15) {
    Class isa = 0;
  }
  else {
    Class isa = sub_1001BF160().super.isa;
  }
  Class v7 = isa;
  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a4, a1);
}

uint64_t sub_10014D768()
{
  if (CPCopyBundleIdentifierAndTeamFromAuditToken())
  {
    uint64_t v0 = sub_1001C0330();
    os_log_type_t v1 = sub_1001C11F0();
    if (os_log_type_enabled(v0, v1))
    {
      uint64_t v2 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v2 = 0;
      uint64_t v3 = "could not retain client bundle identifier";
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v0 = sub_1001C0330();
    os_log_type_t v1 = sub_1001C11F0();
    if (os_log_type_enabled(v0, v1))
    {
      uint64_t v2 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v2 = 0;
      uint64_t v3 = "could not get client bundle identifier";
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v0, v1, v3, v2, 2u);
      swift_slowDealloc();
    }
  }

  return 0;
}

uint64_t sub_10014D92C(uint64_t (*a1)(), uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(char *, uint64_t), void (*a8)(char *, char *, uint64_t), uint64_t a9, unint64_t a10)
{
  uint64_t v11 = v10;
  uint64_t v209 = a7;
  uint64_t v210 = a8;
  uint64_t v217 = a5;
  uint64_t v214 = a3;
  uint64_t v203 = a1;
  uint64_t v15 = sub_100003918(&qword_10020C3B0);
  __chkstk_darwin(v15 - 8, v16);
  uint64_t v18 = (char *)&v176 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100003918(qword_100208000);
  uint64_t v193 = *(void *)(v19 - 8);
  uint64_t v194 = v19;
  __chkstk_darwin(v19, v20);
  uint64_t v196 = (char *)&v176 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1001C14E0();
  uint64_t v190 = *(void *)(v22 - 8);
  uint64_t v191 = v22;
  __chkstk_darwin(v22, v23);
  uint64_t v195 = (char *)&v176 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for TC2CloudAttestationVerifier();
  __chkstk_darwin(v25 - 8, v26);
  uint64_t v204 = (uint64_t)&v176 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1001BF950();
  uint64_t v205 = *(void *)(v28 - 8);
  __chkstk_darwin(v28, v29);
  uint64_t v197 = v30;
  uint64_t v212 = (uint64_t)&v176 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = type metadata accessor for IncomingUserDataReader.State(0);
  __chkstk_darwin(v189, v31);
  uint64_t v184 = (char *)&v176 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v188 = sub_100003918(&qword_10020DCC0);
  __chkstk_darwin(v188, v33);
  uint64_t v183 = (char *)&v176 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = sub_1001BF8E0();
  uint64_t v187 = *(void *)(v182 - 8);
  __chkstk_darwin(v182, v35);
  uint64_t v186 = (char *)&v176 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1001BF310();
  uint64_t v215 = *(void *)(v37 - 8);
  uint64_t v39 = __chkstk_darwin(v37, v38);
  uint64_t v202 = (uint64_t)&v176 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __chkstk_darwin(v39, v41);
  uint64_t v211 = (char *)&v176 - v43;
  uint64_t v45 = __chkstk_darwin(v42, v44);
  uint64_t v201 = (char *)&v176 - v46;
  uint64_t v48 = __chkstk_darwin(v45, v47);
  uint64_t v199 = ((char *)&v176 - v49);
  uint64_t v51 = __chkstk_darwin(v48, v50);
  os_log_t v185 = (os_log_t)((char *)&v176 - v52);
  uint64_t v192 = v53;
  __chkstk_darwin(v51, v54);
  uint64_t v216 = (char *)&v176 - v55;
  uint64_t v56 = sub_100003918(qword_100208CD0);
  __chkstk_darwin(v56 - 8, v57);
  uint64_t v207 = (char *)&v176 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_100003918(&qword_10020E098);
  __chkstk_darwin(v59 - 8, v60);
  uint64_t v208 = (uint64_t)&v176 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for TrustedRequestConfiguration();
  uint64_t v64 = __chkstk_darwin(v62, v63);
  uint64_t v66 = __chkstk_darwin(v64, v65);
  uint64_t v71 = *(void *)v11;
  unint64_t v72 = (uint64_t *)(v11 + *(void *)(*(void *)v11 + 272));
  uint64_t v73 = *v72;
  unint64_t v74 = v72[1];
  uint64_t v221 = *v72;
  unint64_t v222 = v74;
  if (a4)
  {
    if ((*(unsigned char *)(v11 + *(void *)(v71 + 280)) & 1) == 0)
    {
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      swift_bridgeObjectRetain();
      uint64_t v82 = sub_1001C0330();
      os_log_type_t v92 = sub_1001C11F0();
      if (os_log_type_enabled(v82, v92))
      {
        uint64_t v93 = swift_slowAlloc();
        *(void *)&v223[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v93 = 136315650;
        swift_bridgeObjectRetain();
        uint64_t v219 = sub_1000DF238(v73, v74, (uint64_t *)v223);
        sub_1001C1310();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v93 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v219 = sub_1000DF238(v214, a4, (uint64_t *)v223);
        sub_1001C1310();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v93 + 22) = 2080;
        uint64_t v219 = sub_1000DF238(0xD000000000000036, 0x80000001001C26C0, (uint64_t *)v223);
        sub_1001C1310();
        _os_log_impl((void *)&_mh_execute_header, v82, v92, "client not allowed to override %s with %s. Need entitlement %s", (uint8_t *)v93, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
LABEL_21:
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_release_n();
      }
LABEL_25:

      return 0;
    }
    uint64_t v181 = v66;
    uint64_t v177 = v70;
    uint64_t v198 = v69;
    uint64_t v200 = v68;
    uint64_t v206 = (uint64_t)&v176 - v67;
    uint64_t v213 = v37;
    uint64_t v179 = a2;
    uint64_t v73 = v214;
    uint64_t v221 = v214;
    unint64_t v222 = a4;
    unint64_t v74 = a4;
  }
  else
  {
    uint64_t v181 = v66;
    uint64_t v177 = v70;
    uint64_t v198 = v69;
    uint64_t v200 = v68;
    uint64_t v206 = (uint64_t)&v176 - v67;
    uint64_t v213 = v37;
    uint64_t v179 = a2;
    swift_bridgeObjectRetain();
  }
  uint64_t v178 = v28;
  uint64_t v75 = *(void *)(v11 + qword_100220098);
  swift_bridgeObjectRetain();
  int v76 = TC2ServerDrivenConfiguration.blockedBundleIds.getter();
  uint64_t v77 = v76[2];
  char v180 = v18;
  if (v77)
  {
    uint64_t v214 = v11;
    uint64_t v78 = v76 + 5;
    while (1)
    {
      uint64_t v79 = *(v78 - 1);
      uint64_t v80 = *v78;
      BOOL v81 = v79 == v73 && v80 == v74;
      if (v81 || (sub_1001C1840() & 1) != 0 || a6 && (v79 == v217 && v80 == a6 || (sub_1001C1840() & 1) != 0)) {
        break;
      }
      v78 += 2;
      if (!--v77)
      {
        swift_bridgeObjectRelease();
        uint64_t v11 = v214;
        goto LABEL_27;
      }
    }
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v82 = sub_1001C0330();
    os_log_type_t v83 = sub_1001C11F0();
    if (os_log_type_enabled(v82, v83))
    {
      uint64_t v84 = swift_slowAlloc();
      v218[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v84 = 136315650;
      swift_bridgeObjectRetain();
      uint64_t v85 = sub_1001C0E00();
      unint64_t v87 = v86;
      swift_bridgeObjectRelease();
      *(void *)&v223[0] = sub_1000DF238(v85, v87, v218);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v84 + 12) = 2080;
      swift_beginAccess();
      uint64_t v89 = v221;
      unint64_t v88 = v222;
      swift_bridgeObjectRetain();
      uint64_t v219 = sub_1000DF238(v89, v88, v218);
      sub_1001C1310();
      swift_bridgeObjectRelease();
      *(_WORD *)(v84 + 22) = 2080;
      uint64_t v219 = v217;
      uint64_t v220 = a6;
      swift_bridgeObjectRetain();
      sub_100003918(&qword_100207DB8);
      uint64_t v90 = sub_1001C0C40();
      uint64_t v219 = sub_1000DF238(v90, v91, v218);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v82, v83, "bundleId blocked by server, exiting trusted request with blockedBundleIds=%s, bundleId=%s, and originatingBundleId=%s", (uint8_t *)v84, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      goto LABEL_21;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    goto LABEL_25;
  }
  swift_bridgeObjectRelease();
LABEL_27:
  uint64_t v94 = (uint64_t)v207;
  sub_10003282C(a9, (uint64_t)v207, qword_100208CD0);
  sub_100032890(v11 + qword_100220090, (uint64_t)&v219);
  uint64_t v95 = (_OWORD *)(v11 + *(void *)(*(void *)v11 + 216));
  long long v96 = v95[9];
  v223[8] = v95[8];
  v223[9] = v96;
  v223[10] = v95[10];
  long long v97 = v95[5];
  v223[4] = v95[4];
  v223[5] = v97;
  long long v98 = v95[7];
  v223[6] = v95[6];
  v223[7] = v98;
  long long v99 = v95[1];
  v223[0] = *v95;
  v223[1] = v99;
  long long v100 = v95[3];
  v223[2] = v95[2];
  v223[3] = v100;
  swift_bridgeObjectRetain();
  sub_100016110((uint64_t)v223);
  uint64_t v101 = (uint64_t)v210;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v173 = v75;
  uint64_t v102 = v208;
  sub_100146F5C(v73, v74, v217, a6, (uint64_t)v209, v101, v94, &v219, v208, v173, (char *)(a10 | ((HIDWORD(a10) & 1) << 32)), (uint64_t)v223);
  uint64_t v103 = v213;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v198 + 56))(v102, 0, 1, v181);
  sub_1001627E8(v102, v206, (uint64_t (*)(void))type metadata accessor for TrustedRequestConfiguration);
  long long v106 = v216;
  sub_1001BF300();
  uint64_t v107 = v215 + 16;
  uint64_t v108 = *(void (**)(os_log_t, char *, uint64_t))(v215 + 16);
  os_log_t v109 = v185;
  v108(v185, v106, v103);
  uint64_t v110 = v199;
  uint64_t v217 = v107;
  uint64_t v210 = (void (*)(char *, char *, uint64_t))v108;
  v108(v199, (char *)v203, v103);
  BOOL v111 = sub_1001C0330();
  os_log_type_t v112 = sub_1001C1200();
  int v113 = v112;
  if (os_log_type_enabled(v111, v112))
  {
    uint64_t v114 = swift_slowAlloc();
    uint64_t v208 = swift_slowAlloc();
    uint64_t v219 = v208;
    *(_DWORD *)uint64_t v114 = 136315394;
    sub_1001627A0(qword_100207DC0, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v214 = v11;
    LODWORD(v207) = v113;
    uint64_t v115 = sub_1001C1780();
    v218[0] = sub_1000DF238(v115, v116, &v219);
    uint64_t v117 = v103;
    sub_1001C1310();
    swift_bridgeObjectRelease();
    unint64_t v118 = *(void (**)(os_log_t, uint64_t))(v215 + 8);
    v118(v109, v103);
    *(_WORD *)(v114 + 12) = 2080;
    os_log_t v185 = v111;
    uint64_t v119 = v199;
    uint64_t v11 = v214;
    uint64_t v120 = sub_1001C1780();
    v218[0] = sub_1000DF238(v120, v121, &v219);
    sub_1001C1310();
    swift_bridgeObjectRelease();
    uint64_t v209 = (void (*)(char *, uint64_t))v118;
    v118(v119, v103);
    uint64_t v122 = v216;
    os_log_t v123 = v185;
    _os_log_impl((void *)&_mh_execute_header, v185, (os_log_type_t)v207, "server id=%s set for request against client id=%s", (uint8_t *)v114, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v125 = v183;
    uint64_t v124 = (uint64_t)v184;
    uint64_t v126 = v182;
  }
  else
  {

    unint64_t v127 = *(void (**)(os_log_t, uint64_t))(v215 + 8);
    v127(v109, v103);
    uint64_t v209 = (void (*)(char *, uint64_t))v127;
    v127(v110, v103);
    uint64_t v125 = v183;
    uint64_t v124 = (uint64_t)v184;
    uint64_t v126 = v182;
    uint64_t v122 = v106;
    uint64_t v117 = v103;
  }
  uint64_t v207 = (char *)[objc_allocWithZone((Class)type metadata accessor for OutgoingUserDataWriter(0)) init];
  v210(v201, v122, v117);
  type metadata accessor for IncomingUserDataReader(0);
  uint64_t v214 = swift_allocObject();
  uint64_t v128 = v186;
  uint64_t v129 = v187;
  (*(void (**)(char *, void, uint64_t))(v187 + 104))(v186, enum case for TC2LogCategory.trustedRequest(_:), v126);
  sub_1001BFDD0();
  (*(void (**)(char *, uint64_t))(v129 + 8))(v128, v126);
  v218[0] = *(void *)sub_1001BF600();
  uint64_t v130 = v218[0];
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (*(uint64_t *)(v130 + 16) < 4 || (isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_1000A3E24(4, 1);
    uint64_t v130 = v218[0];
  }
  uint64_t v132 = v124 + *(int *)(sub_100003918(&qword_10020DCD8) + 64);
  *(void *)uint64_t v124 = v130;
  *(unsigned char *)(v124 + 8) = 0;
  uint64_t v133 = sub_100003918(&qword_100208640);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v133 - 8) + 56))(v132, 1, 1, v133);
  swift_storeEnumTagMultiPayload();
  _DWORD *v125 = 0;
  uint64_t v134 = (char *)v125 + *(int *)(v188 + 28);
  swift_retain();
  uint64_t v135 = sub_100003918(&qword_10020E0A0);
  bzero(v134, *(void *)(*(void *)(v135 - 8) + 64));
  sub_1001627E8(v124, (uint64_t)v134, type metadata accessor for IncomingUserDataReader.State);
  uint64_t v136 = v214;
  sub_10002C318((uint64_t)v125, v214 + OBJC_IVAR____TtC20privatecloudcomputed22IncomingUserDataReader_stateLock, &qword_10020DCC0);
  sub_1001627A0(qword_100207DC0, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v137 = v201;
  uint64_t v219 = sub_1001C1780();
  uint64_t v220 = v138;
  v224._uint64_t countAndFlagsBits = 58;
  v224._object = (void *)0xE100000000000000;
  sub_1001C0D00(v224);
  uint64_t v139 = v219;
  uint64_t v140 = v220;
  uint64_t v208 = v215 + 8;
  v209(v137, v117);
  swift_release();
  int v141 = (uint64_t *)(v136 + OBJC_IVAR____TtC20privatecloudcomputed22IncomingUserDataReader_logPrefix);
  *int v141 = v139;
  v141[1] = v140;
  uint64_t v142 = (void (*)(uint64_t, char *, uint64_t))v210;
  v210(v211, (char *)v203, v117);
  v142(v202, v216, v117);
  uint64_t v203 = type metadata accessor for TrustedRequestConfiguration;
  sub_100161F3C(v206, v200, (uint64_t (*)(void))type metadata accessor for TrustedRequestConfiguration);
  char v143 = *(char **)(v205 + 16);
  uint64_t v199 = (v205 + 16);
  uint64_t v201 = v143;
  ((void (*)(uint64_t, uint64_t, uint64_t))v143)(v212, v179, v178);
  uint64_t v144 = *(void *)(v11 + *(void *)(*(void *)v11 + 232));
  sub_100161F3C(v11 + *(void *)(*(void *)v11 + 240), v204, (uint64_t (*)(void))type metadata accessor for TC2CloudAttestationVerifier);
  uint64_t v145 = *(void *)(*(void *)v11 + 248);
  uint64_t v146 = *(void *)v11;
  uint64_t v213 = v117;
  uint64_t v147 = *(void *)(v11 + v145);
  uint64_t v148 = *(void *)(v11 + *(void *)(v146 + 256));
  unint64_t v149 = v195;
  (*(void (**)(char *, uint64_t, uint64_t))(v190 + 16))(v195, v11 + *(void *)(v146 + 264), v191);
  Swift::String v150 = v196;
  (*(void (**)(char *, uint64_t, uint64_t))(v193 + 16))(v196, v11 + *(void *)(*(void *)v11 + 296), v194);
  sub_100003918(&qword_10020E0A8);
  swift_allocObject();
  sub_100016110((uint64_t)v223);
  uint64_t v151 = v144;
  swift_retain();
  uint64_t v152 = v147;
  uint64_t v189 = v147;
  swift_retain();
  swift_retain();
  Swift::String v153 = v207;
  swift_retain();
  uint64_t v174 = (uint64_t)v149;
  uint64_t v175 = (uint64_t)v150;
  uint64_t v172 = v152;
  uint64_t v154 = (uint64_t)v211;
  uint64_t v155 = v212;
  uint64_t v156 = v200;
  uint64_t v207 = v153;
  uint64_t v204 = sub_100159088((uint64_t)v211, v202, v200, v212, v153, v136, v151, v204, v172, v223, v148, v174, v175);
  swift_release();
  sub_1000161E0((uint64_t)v223);

  swift_release();
  swift_release();
  swift_release();
  uint64_t v157 = sub_1001C0FC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v157 - 8) + 56))(v180, 1, 1, v157);
  sub_100161F3C(v206, v156, (uint64_t (*)(void))v203);
  uint64_t v158 = v178;
  ((void (*)(uint64_t, uint64_t, uint64_t))v201)(v155, v179, v178);
  v210((char *)v154, v216, v213);
  unint64_t v159 = (*(unsigned __int8 *)(v198 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v198 + 80);
  uint64_t v160 = v205;
  unint64_t v161 = (v177 + *(unsigned __int8 *)(v205 + 80) + v159) & ~(unint64_t)*(unsigned __int8 *)(v205 + 80);
  uint64_t v162 = v215;
  unint64_t v163 = (v197 + *(unsigned __int8 *)(v215 + 80) + v161) & ~(unint64_t)*(unsigned __int8 *)(v215 + 80);
  uint64_t v164 = (char *)swift_allocObject();
  *((void *)v164 + 2) = 0;
  *((void *)v164 + 3) = 0;
  uint64_t v165 = v204;
  *((void *)v164 + 4) = v11;
  *((void *)v164 + 5) = v165;
  sub_1001627E8(v200, (uint64_t)&v164[v159], (uint64_t (*)(void))type metadata accessor for TrustedRequestConfiguration);
  (*(void (**)(char *, uint64_t, uint64_t))(v160 + 32))(&v164[v161], v212, v158);
  unint64_t v166 = *(void (**)(char *, uint64_t, uint64_t))(v162 + 32);
  uint64_t v167 = (uint64_t)v211;
  uint64_t v168 = v213;
  v166(&v164[v163], (uint64_t)v211, v213);
  swift_retain();
  swift_retain();
  uint64_t v169 = sub_1001536F4((uint64_t)v180, (uint64_t)&unk_10020E0B8, (uint64_t)v164);
  uint64_t v170 = v216;
  v210((char *)v167, v216, v168);
  type metadata accessor for TrustedRequestXPCProxy();
  swift_allocObject();
  uint64_t v171 = v207;
  uint64_t v104 = sub_1001A3D94(v167, v207, v214, v169);
  swift_release();

  swift_release();
  swift_release();
  v209(v170, v168);
  sub_10016290C(v206, (uint64_t (*)(void))type metadata accessor for TrustedRequestConfiguration);
  swift_bridgeObjectRelease();
  return v104;
}

uint64_t sub_10014EFC0(uint64_t (*a1)(uint64_t, unint64_t))
{
  uint64_t v3 = sub_1001BFCF0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  Class v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_10014C0E4(0) & 1) == 0) {
    return a1(0, 0xF000000000000000);
  }
  uint64_t v8 = (void *)((char *)v1 + *(void *)((swift_isaMask & *v1) + 0x68));
  id v9 = (os_unfair_lock_s *)(*sub_10000D934(v8, v8[3])
                          + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_structuredRequestFactoriesBySetup);
  os_unfair_lock_lock(v9);
  uint64_t v10 = swift_bridgeObjectRetain();
  sub_1001257F4(v10);
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v9);
  sub_1001BFCE0();
  sub_1001627A0(&qword_10020E058, (void (*)(uint64_t))&type metadata accessor for TC2TrustedRequestFactoriesMetadata);
  sub_1001627A0(&qword_10020E060, (void (*)(uint64_t))&type metadata accessor for TC2TrustedRequestFactoriesMetadata);
  uint64_t v11 = sub_1001BFD00();
  unint64_t v13 = v12;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  a1(v11, v13);
  return sub_10000792C(v11, v13);
}

uint64_t sub_10014F1DC(void *a1, int a2, void *a3)
{
  return sub_100151BAC(a1, a2, a3, (uint64_t)&unk_100200350, (uint64_t)sub_100162A68, (void (*)(uint64_t, uint64_t))sub_10014EFC0);
}

uint64_t sub_10014F210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, unint64_t), uint64_t a5)
{
  uint64_t v11 = sub_100003918(&qword_10020C3B0);
  __chkstk_darwin(v11 - 8, v12);
  os_log_type_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_10014C0E4(2) & 1) == 0) {
    return a4(0, 0xF000000000000000);
  }
  uint64_t v15 = sub_1001C0FC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = 0;
  v16[3] = 0;
  v16[4] = v5;
  v16[5] = a1;
  v16[6] = a2;
  v16[7] = a3;
  v16[8] = a4;
  v16[9] = a5;
  id v17 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1001A1CC0((uint64_t)v14, (uint64_t)&unk_10020E050, (uint64_t)v16);
  return swift_release();
}

uint64_t sub_10014F370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[6] = a8;
  v8[7] = v10;
  v8[4] = a6;
  v8[5] = a7;
  v8[2] = a4;
  v8[3] = a5;
  return _swift_task_switch(sub_10014F3A0, 0, 0);
}

uint64_t sub_10014F3A0()
{
  os_log_type_t v1 = (void *)(v0[2] + *(void *)((swift_isaMask & *(void *)v0[2]) + 0x68));
  sub_10000D934(v1, v1[3]);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[8] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10014F470;
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[3];
  return sub_10017D28C(v5, v3, v4);
}

uint64_t sub_10014F470(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 72) = a1;
  *(void *)(v3 + 80) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_10014F570, 0, 0);
}

uint64_t sub_10014F570()
{
  uint64_t v2 = *(void *)(v0 + 72);
  unint64_t v1 = *(void *)(v0 + 80);
  (*(void (**)(uint64_t, unint64_t))(v0 + 48))(v2, v1);
  sub_100007918(v2, v1);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_10014F5F4(void *a1, int a2, int a3, int a4, void *aBlock)
{
  uint64_t v6 = _Block_copy(aBlock);
  uint64_t v7 = sub_1001C0BF0();
  uint64_t v9 = v8;
  uint64_t v10 = sub_1001C0B80();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v6;
  id v12 = a1;
  sub_10014F210(v7, v9, v10, (uint64_t (*)(void, unint64_t))sub_100162A68, v11);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_10014F6E0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t))
{
  uint64_t v15 = sub_10014C0E4(2);
  if (v15)
  {
    [*(id *)((char *)v8 + *(void *)((swift_isaMask & *v8) + 0x70)) auditToken];
    uint64_t v16 = sub_10014D768();
    uint64_t v18 = v17;
    uint64_t v15 = sub_10014C0E4(4);
    if (v18)
    {
      if ((v15 & (a5 != 0)) == 1)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v18 = a5;
      }
      else
      {
        a4 = v16;
      }
      uint64_t v19 = (void *)((char *)v8 + *(void *)((swift_isaMask & *v8) + 0x68));
      sub_10000D934(v19, v19[3]);
      sub_10017D658(a1, a2, a3, a4, v18, a6, a7);
      uint64_t v15 = swift_bridgeObjectRelease();
    }
  }
  return a8(v15);
}

uint64_t sub_10014F83C(void *a1, int a2, int a3, int a4, uint64_t a5, int a6, void *aBlock)
{
  uint64_t v9 = _Block_copy(aBlock);
  uint64_t v10 = sub_1001C0BF0();
  unint64_t v12 = v11;
  uint64_t v13 = sub_1001C0B80();
  if (a5)
  {
    uint64_t v14 = sub_1001C0BF0();
    a5 = v15;
  }
  else
  {
    uint64_t v14 = 0;
  }
  uint64_t v16 = sub_1001C0BF0();
  uint64_t v18 = v17;
  *(void *)(swift_allocObject() + 16) = v9;
  id v19 = a1;
  sub_10014F6E0(v10, v12, v13, v14, a5, v16, v18, (uint64_t (*)(uint64_t))sub_100162AB8);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10014F990(uint64_t (*a1)(void *), uint64_t a2)
{
  uint64_t v5 = sub_100003918(&qword_10020C3B0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_10014C0E4(0) & 1) == 0) {
    return a1(_swiftEmptyArrayStorage);
  }
  uint64_t v9 = sub_1001C0FC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v2;
  v10[5] = a1;
  _OWORD v10[6] = a2;
  id v11 = v2;
  swift_retain();
  sub_1001A1CC0((uint64_t)v8, (uint64_t)&unk_10020E040, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_10014FAC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return _swift_task_switch(sub_10014FAEC, 0, 0);
}

uint64_t sub_10014FAEC()
{
  unint64_t v1 = (void *)(*(void *)(v0 + 16) + *(void *)((swift_isaMask & **(void **)(v0 + 16)) + 0x68));
  sub_10000D934(v1, v1[3]);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10014FBB0;
  return sub_100195214();
}

uint64_t sub_10014FBB0(uint64_t a1)
{
  *(void *)(*(void *)v1 + 48) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10014FCB0, 0, 0);
}

uint64_t sub_10014FCB0()
{
  (*(void (**)(void))(v0 + 24))(*(void *)(v0 + 48));
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10014FD24(void *a1, int a2, void *a3)
{
  return sub_100151BAC(a1, a2, a3, (uint64_t)&unk_100200288, (uint64_t)sub_10015D068, (void (*)(uint64_t, uint64_t))sub_10014F990);
}

uint64_t sub_10014FD58(void (*a1)(void), uint64_t a2)
{
  return sub_10014FDBC(a1, a2, (void (*)(void))sub_100195BDC);
}

uint64_t sub_10014FD70(void *a1, int a2, void *a3)
{
  return sub_10014FEB0(a1, a2, a3, (uint64_t)&unk_100200260, (void (*)(void))sub_10015D068, (void (*)(void))sub_100195BDC);
}

uint64_t sub_10014FDA4(void (*a1)(void), uint64_t a2)
{
  return sub_10014FDBC(a1, a2, (void (*)(void))sub_10019614C);
}

uint64_t sub_10014FDBC(void (*a1)(void), uint64_t a2, void (*a3)(void))
{
  if ((sub_10014C0E4(0) & 1) == 0) {
    return ((uint64_t (*)(void *))a1)(_swiftEmptyArrayStorage);
  }
  uint64_t v6 = (void *)((char *)v3 + *(void *)((swift_isaMask & *v3) + 0x68));
  sub_10000D934(v6, v6[3]);
  a3();
  a1();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10014FE7C(void *a1, int a2, void *a3)
{
  return sub_10014FEB0(a1, a2, a3, (uint64_t)&unk_100200238, (void (*)(void))sub_10015D068, (void (*)(void))sub_10019614C);
}

uint64_t sub_10014FEB0(void *a1, int a2, void *aBlock, uint64_t a4, void (*a5)(void), void (*a6)(void))
{
  uint64_t v9 = _Block_copy(aBlock);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  id v11 = a1;
  sub_10014FDBC(a5, v10, a6);

  return swift_release();
}

uint64_t sub_10014FF44(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v5 = sub_100003918(&qword_10020C3B0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_10014C0E4(0) & 1) == 0) {
    return a1(0);
  }
  uint64_t v9 = sub_1001C0FC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v2;
  v10[5] = a1;
  _OWORD v10[6] = a2;
  id v11 = v2;
  swift_retain();
  sub_1001A1CC0((uint64_t)v8, (uint64_t)&unk_10020E030, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_100150078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return _swift_task_switch(sub_10015009C, 0, 0);
}

uint64_t sub_10015009C()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 16) + *(void *)((swift_isaMask & **(void **)(v0 + 16)) + 0x68));
  sub_10000D934(v1, v1[3]);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100150160;
  return sub_100196710();
}

uint64_t sub_100150160(char a1)
{
  *(unsigned char *)(*(void *)v1 + 48) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100150260, 0, 0);
}

uint64_t sub_100150260()
{
  (*(void (**)(void))(v0 + 24))(*(unsigned __int8 *)(v0 + 48));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001502C8(void *a1, int a2, void *a3)
{
  return sub_100151BAC(a1, a2, a3, (uint64_t)&unk_1002001E8, (uint64_t)sub_1000D6618, (void (*)(uint64_t, uint64_t))sub_10014FF44);
}

uint64_t sub_1001502FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t (*a6)(void, unint64_t), uint64_t a7)
{
  uint64_t v15 = sub_100003918(&qword_10020C3B0);
  __chkstk_darwin(v15 - 8, v16);
  uint64_t v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_10014C0E4(3) & 1) == 0) {
    return a6(0, 0xF000000000000000);
  }
  char v19 = sub_10014C0E4(4);
  uint64_t v31 = a6;
  if (v19)
  {
    uint64_t v20 = a2;
    if (a2)
    {
LABEL_11:
      uint64_t v26 = sub_1001C0FC0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v18, 1, 1, v26);
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = 0;
      *(void *)(v27 + 24) = 0;
      *(unsigned char *)(v27 + 32) = a5 & 1;
      *(void *)(v27 + 40) = v7;
      *(void *)(v27 + 48) = a1;
      *(void *)(v27 + 56) = v20;
      *(void *)(v27 + 64) = a3;
      uint64_t v28 = v31;
      *(void *)(v27 + 72) = a4;
      *(void *)(v27 + 80) = v28;
      *(void *)(v27 + 88) = a7;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v29 = v7;
      sub_1001A1CC0((uint64_t)v18, (uint64_t)&unk_10020E020, v27);
      return swift_release();
    }
LABEL_10:
    [*(id *)((char *)v7 + *(void *)((swift_isaMask & *v7) + 0x70)) auditToken];
    a1 = sub_10014D768();
    uint64_t v20 = v25;
    goto LABEL_11;
  }
  if (!a2) {
    goto LABEL_10;
  }
  uint64_t v22 = sub_1001C0330();
  os_log_type_t v23 = sub_1001C1200();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "attempt to set bundleIdentifierOverride without entitlement rejected", v24, 2u);
    swift_slowDealloc();
  }

  return v31(0, 0xF000000000000000);
}

uint64_t sub_10015059C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 104) = v13;
  *(_OWORD *)(v8 + 88) = v12;
  *(void *)(v8 + 72) = a7;
  *(void *)(v8 + 80) = a8;
  *(void *)(v8 + 56) = a5;
  *(void *)(v8 + 64) = a6;
  *(unsigned char *)(v8 + 192) = a4;
  uint64_t v9 = sub_1001BF2C0();
  *(void *)(v8 + 112) = v9;
  *(void *)(v8 + 120) = *(void *)(v9 - 8);
  *(void *)(v8 + 128) = swift_task_alloc();
  return _swift_task_switch(sub_100150678, 0, 0);
}

uint64_t sub_100150678()
{
  int v1 = *(unsigned __int8 *)(v0 + 192);
  uint64_t v2 = (void *)(*(void *)(v0 + 56) + *(void *)((swift_isaMask & **(void **)(v0 + 56)) + 0x68));
  uint64_t v3 = sub_10000D934(v2, v2[3]);
  *(void *)(v0 + 136) = v3;
  if (v1 == 1)
  {
    uint64_t v4 = *(void *)(*v3 + OBJC_IVAR____TtC20privatecloudcomputed9TC2Daemon_rateLimiter);
    *(void *)(v0 + 144) = v4;
    _s20privatecloudcomputed8LRUCacheC10addToCache3now5valueSb10Foundation4DateV_xtFfA__0();
    uint64_t v5 = sub_100150778;
    uint64_t v6 = v4;
  }
  else
  {
    uint64_t v6 = *(void *)(*(void *)(v0 + 56) + *(void *)((swift_isaMask & **(void **)(v0 + 56)) + 0x88));
    *(void *)(v0 + 160) = v6;
    uint64_t v5 = sub_100150A40;
  }
  return _swift_task_switch(v5, v6, 0);
}

uint64_t sub_100150778()
{
  uint64_t v1 = v0[18];
  uint64_t v3 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v11 = v0[14];
  uint64_t v5 = v0[10];
  uint64_t v4 = v0[11];
  uint64_t v7 = v0[8];
  uint64_t v6 = v0[9];
  swift_beginAccess();
  uint64_t v8 = sub_100032154(v2, v7, v6, v5, v4);
  swift_endAccess();
  uint64_t v9 = swift_task_alloc();
  *(void *)(v9 + 16) = v1;
  *(void *)(v9 + 24) = v2;
  v0[19] = sub_10009F110((void (*)(uint64_t))sub_1000A021C, v9, (uint64_t)v8);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v11);
  return _swift_task_switch(sub_1001508C4, 0, 0);
}

uint64_t sub_1001508C4()
{
  *(void *)(v0 + 48) = *(void *)(v0 + 152);
  sub_100003918(&qword_10020BFE8);
  sub_100016710(&qword_10020BFF0, &qword_10020BFE8);
  sub_10015CF1C(&qword_10020BFF8, &qword_10020C000);
  sub_10015CF1C(&qword_10020C008, &qword_10020C010);
  uint64_t v1 = sub_1001BFD00();
  unint64_t v3 = v2;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, unint64_t))(v0 + 96))(v1, v3);
  sub_100007918(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100150A40()
{
  char v1 = sub_100146BA8();
  unint64_t v2 = (void *)swift_task_alloc();
  v0[21] = v2;
  *unint64_t v2 = v0;
  v2[1] = sub_100150AF8;
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[11];
  uint64_t v6 = v0[8];
  uint64_t v5 = v0[9];
  return sub_10009F31C(v6, v5, v3, v4, v1 & 1);
}

uint64_t sub_100150AF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 176) = a1;
  *(void *)(v3 + 184) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_100150BF8, 0, 0);
}

uint64_t sub_100150BF8()
{
  uint64_t v2 = *(void *)(v0 + 176);
  unint64_t v1 = *(void *)(v0 + 184);
  (*(void (**)(uint64_t, unint64_t))(v0 + 96))(v2, v1);
  sub_100007918(v2, v1);
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100150C88(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  return sub_100151138(a1, a2, a3, a4, a5, a6, (int)&unk_100200198, (uint64_t)sub_100162A68, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1001502FC);
}

uint64_t sub_100150CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t (*a6)(void, unint64_t), uint64_t a7)
{
  uint64_t v15 = sub_100003918(&qword_10020C3B0);
  __chkstk_darwin(v15 - 8, v16);
  uint64_t v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_10014C0E4(0) & 1) == 0) {
    return a6(0, 0xF000000000000000);
  }
  uint64_t v19 = sub_1001C0FC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = 0;
  *(void *)(v20 + 24) = 0;
  *(void *)(v20 + 32) = v7;
  *(void *)(v20 + 40) = a1;
  *(void *)(v20 + 48) = a2;
  *(void *)(v20 + 56) = a3;
  *(void *)(v20 + 64) = a4;
  *(unsigned char *)(v20 + 72) = a5 & 1;
  *(void *)(v20 + 80) = a6;
  *(void *)(v20 + 88) = a7;
  swift_bridgeObjectRetain();
  swift_retain();
  id v21 = v7;
  swift_bridgeObjectRetain();
  sub_1001A1CC0((uint64_t)v18, (uint64_t)&unk_10020E010, v20);
  return swift_release();
}

uint64_t sub_100150E54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 56) = v11;
  *(void *)(v8 + 64) = v12;
  *(unsigned char *)(v8 + 96) = v10;
  *(void *)(v8 + 40) = a7;
  *(void *)(v8 + 48) = a8;
  *(void *)(v8 + 24) = a5;
  *(void *)(v8 + 32) = a6;
  *(void *)(v8 + 16) = a4;
  return _swift_task_switch(sub_100150E90, 0, 0);
}

uint64_t sub_100150E90()
{
  unint64_t v1 = (void *)(*(void *)(v0 + 16) + *(void *)((swift_isaMask & **(void **)(v0 + 16)) + 0x68));
  sub_10000D934(v1, v1[3]);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100150F64;
  char v3 = *(unsigned char *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 48);
  uint64_t v7 = *(void *)(v0 + 24);
  uint64_t v6 = *(void *)(v0 + 32);
  return sub_10009F31C(v7, v6, v4, v5, v3);
}

uint64_t sub_100150F64(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 80) = a1;
  *(void *)(v3 + 88) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_100151064, 0, 0);
}

uint64_t sub_100151064()
{
  uint64_t v2 = *(void *)(v0 + 80);
  unint64_t v1 = *(void *)(v0 + 88);
  (*(void (**)(uint64_t, unint64_t))(v0 + 56))(v2, v1);
  sub_100007918(v2, v1);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1001510E8(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  return sub_100151138(a1, a2, a3, a4, a5, a6, (int)&unk_100200148, (uint64_t)sub_10015CC88, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100150CD8);
}

uint64_t sub_100151138(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, void *aBlock, int a7, uint64_t a8, void (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v14 = _Block_copy(aBlock);
  if (a3)
  {
    uint64_t v15 = sub_1001C0BF0();
    a3 = v16;
    if (a4)
    {
LABEL_3:
      uint64_t v17 = sub_1001C0BF0();
      a4 = v18;
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v15 = 0;
    if (a4) {
      goto LABEL_3;
    }
  }
  uint64_t v17 = 0;
LABEL_6:
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v14;
  id v20 = a1;
  a9(v15, a3, v17, a4, a5, a8, v19);

  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100151244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(void), double a9, double a10, double a11, uint64_t a12)
{
  uint64_t v35 = a5;
  uint64_t v23 = sub_100003918(&qword_10020C3B0);
  __chkstk_darwin(v23 - 8, v24);
  uint64_t v26 = (char *)&v34 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_10014C0E4(0) & 1) == 0) {
    return a8();
  }
  uint64_t v27 = sub_1001C0FC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 1, 1, v27);
  uint64_t v28 = swift_allocObject();
  uint64_t v29 = a7;
  uint64_t v30 = v28;
  *(void *)(v28 + 16) = 0;
  *(void *)(v28 + 24) = 0;
  *(void *)(v28 + 32) = v12;
  *(void *)(v28 + 40) = a1;
  *(void *)(v28 + 48) = a2;
  *(void *)(v28 + 56) = a3;
  uint64_t v31 = v35;
  *(void *)(v28 + 64) = a4;
  *(void *)(v28 + 72) = v31;
  *(void *)(v28 + 80) = a6;
  *(void *)(v28 + 88) = v29;
  *(double *)(v28 + 96) = a9;
  *(double *)(v28 + 104) = a10;
  *(double *)(v28 + 112) = a11;
  *(void *)(v28 + 120) = a8;
  *(void *)(v28 + 128) = a12;
  swift_bridgeObjectRetain();
  swift_retain();
  id v32 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001A1CC0((uint64_t)v26, (uint64_t)&unk_10020E000, v30);
  return swift_release();
}

uint64_t sub_1001513F4(double a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)(v11 + 104) = v15;
  *(void *)(v11 + 112) = v16;
  *(double *)(v11 + 88) = a2;
  *(double *)(v11 + 96) = a3;
  *(double *)(v11 + 80) = a1;
  *(void *)(v11 + 72) = v14;
  *(_OWORD *)(v11 + 56) = v13;
  *(void *)(v11 + 40) = a10;
  *(void *)(v11 + 48) = a11;
  *(void *)(v11 + 24) = a8;
  *(void *)(v11 + 32) = a9;
  *(void *)(v11 + 16) = a7;
  return _swift_task_switch(sub_100151440, 0, 0);
}

uint64_t sub_100151440()
{
  unint64_t v1 = (void *)(*((void *)v0 + 2) + *(void *)((swift_isaMask & **((void **)v0 + 2)) + 0x68));
  sub_10000D934(v1, v1[3]);
  uint64_t v2 = (void *)swift_task_alloc();
  *((void *)v0 + 15) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100151520;
  double v3 = v0[11];
  double v4 = v0[12];
  double v5 = v0[10];
  uint64_t v6 = *((void *)v0 + 8);
  uint64_t v7 = *((void *)v0 + 9);
  uint64_t v8 = *((void *)v0 + 6);
  uint64_t v9 = *((void *)v0 + 7);
  uint64_t v10 = *((void *)v0 + 4);
  uint64_t v11 = *((void *)v0 + 5);
  uint64_t v12 = *((void *)v0 + 3);
  return sub_10009FD04(v12, v10, v11, v8, v9, v6, v7, v5, v3, v4);
}

uint64_t sub_100151520()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10015161C, 0, 0);
}

uint64_t sub_10015161C()
{
  (*(void (**)(void))(v0 + 104))();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100151680(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *aBlock, double a8, double a9, double a10)
{
  uint64_t v18 = _Block_copy(aBlock);
  if (a3)
  {
    a3 = sub_1001C0BF0();
    uint64_t v20 = v19;
    if (a4) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v21 = 0;
    if (a5) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  uint64_t v20 = 0;
  if (!a4) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v21 = sub_1001C0BF0();
  a4 = v22;
  if (a5)
  {
LABEL_4:
    uint64_t v23 = sub_1001C0BF0();
    a5 = v24;
    goto LABEL_8;
  }
LABEL_7:
  uint64_t v23 = 0;
LABEL_8:
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v18;
  id v26 = a1;
  sub_100151244(a3, v20, v21, a4, v23, a5, a6, sub_100162AB8, a8, a9, a10, v25);

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001517F0(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v5 = sub_100003918(&qword_10020C3B0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_10014C0E4(0) & 1) == 0) {
    return a1();
  }
  uint64_t v9 = sub_1001C0FC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v2;
  v10[5] = a1;
  _OWORD v10[6] = a2;
  id v11 = v2;
  swift_retain();
  sub_1001A1CC0((uint64_t)v8, (uint64_t)&unk_10020DFF0, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_100151920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return _swift_task_switch(sub_100151944, 0, 0);
}

uint64_t sub_100151944()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 16) + *(void *)((swift_isaMask & **(void **)(v0 + 16)) + 0x68));
  sub_10000D934(v1, v1[3]);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100151A18;
  return sub_1000985FC();
}

uint64_t sub_100151A18()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100151B14, 0, 0);
}

uint64_t sub_100151B14()
{
  (*(void (**)(void))(v0 + 24))();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100151B78(void *a1, int a2, void *a3)
{
  return sub_100151BAC(a1, a2, a3, (uint64_t)&unk_1002000A8, (uint64_t)sub_10015CA68, (void (*)(uint64_t, uint64_t))sub_1001517F0);
}

uint64_t sub_100151BAC(void *a1, int a2, void *aBlock, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t))
{
  uint64_t v9 = _Block_copy(aBlock);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  id v11 = a1;
  a6(a5, v10);

  return swift_release();
}

uint64_t sub_100151C40(uint64_t (*a1)(void, unint64_t), uint64_t a2)
{
  return sub_100151F40(a1, a2, (uint64_t)&unk_100200080, (uint64_t)&unk_10020DFE0);
}

uint64_t sub_100151C60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return _swift_task_switch(sub_100151C84, 0, 0);
}

uint64_t sub_100151C84()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 16) + *(void *)((swift_isaMask & **(void **)(v0 + 16)) + 0x68));
  sub_10000D934(v1, v1[3]);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100151D48;
  return sub_100013FF0();
}

uint64_t sub_100151D48(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 48) = a1;
  *(void *)(v3 + 56) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_100162AD8, 0, 0);
}

uint64_t sub_100151E48(void *a1, int a2, void *a3)
{
  return sub_100151E84(a1, a2, a3, (uint64_t)&unk_100200058, (uint64_t (*)(void, unint64_t))sub_10015C7B4, (uint64_t)&unk_100200080, (uint64_t)&unk_10020DFE0);
}

uint64_t sub_100151E84(void *a1, int a2, void *aBlock, uint64_t a4, uint64_t (*a5)(void, unint64_t), uint64_t a6, uint64_t a7)
{
  id v11 = _Block_copy(aBlock);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  id v13 = a1;
  sub_100151F40(a5, v12, a6, a7);

  return swift_release();
}

uint64_t sub_100151F20(uint64_t (*a1)(void, unint64_t), uint64_t a2)
{
  return sub_100151F40(a1, a2, (uint64_t)&unk_100200030, (uint64_t)&unk_10020DFD0);
}

uint64_t sub_100151F40(uint64_t (*a1)(void, unint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_100003918(&qword_10020C3B0);
  __chkstk_darwin(v8 - 8, v9);
  id v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_10014C0E4(0) & 1) == 0) {
    return a1(0, 0xC000000000000000);
  }
  uint64_t v12 = sub_1001C0FC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  id v13 = (void *)swift_allocObject();
  v13[2] = 0;
  v13[3] = 0;
  void v13[4] = v4;
  v13[5] = a1;
  v13[6] = a2;
  id v14 = v4;
  swift_retain();
  sub_1001A1CC0((uint64_t)v11, a4, (uint64_t)v13);
  return swift_release();
}

uint64_t sub_10015206C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return _swift_task_switch(sub_100152090, 0, 0);
}

uint64_t sub_100152090()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 16) + *(void *)((swift_isaMask & **(void **)(v0 + 16)) + 0x68));
  sub_10000D934(v1, v1[3]);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100152154;
  return sub_100014BEC();
}

uint64_t sub_100152154(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 48) = a1;
  *(void *)(v3 + 56) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_100152254, 0, 0);
}

uint64_t sub_100152254()
{
  uint64_t v2 = *(void *)(v0 + 48);
  unint64_t v1 = *(void *)(v0 + 56);
  (*(void (**)(uint64_t, unint64_t))(v0 + 24))(v2, v1);
  sub_10000792C(v2, v1);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1001522D8(void *a1, int a2, void *a3)
{
  return sub_100151E84(a1, a2, a3, (uint64_t)&unk_100200008, (uint64_t (*)(void, unint64_t))sub_10015C7B4, (uint64_t)&unk_100200030, (uint64_t)&unk_10020DFD0);
}

uint64_t sub_100152314(uint64_t a1, unint64_t a2, uint64_t (*a3)(void, unint64_t), uint64_t a4)
{
  uint64_t v9 = sub_100003918(&qword_10020C3B0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_10014C0E4(0) & 1) == 0) {
    return a3(0, 0xC000000000000000);
  }
  uint64_t v13 = sub_1001C0FC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  id v14 = (void *)swift_allocObject();
  v14[2] = 0;
  v14[3] = 0;
  v14[4] = v4;
  v14[5] = a1;
  v14[6] = a2;
  v14[7] = a3;
  v14[8] = a4;
  id v15 = v4;
  sub_100007B14(a1, a2);
  swift_retain();
  sub_1001A1CC0((uint64_t)v12, (uint64_t)&unk_10020DFC0, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_10015246C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  return _swift_task_switch(sub_100152494, 0, 0);
}

uint64_t sub_100152494()
{
  unint64_t v1 = (void *)(v0[2] + *(void *)((swift_isaMask & *(void *)v0[2]) + 0x68));
  sub_10000D934(v1, v1[3]);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[7] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100152560;
  uint64_t v4 = v0[3];
  uint64_t v3 = v0[4];
  return sub_100014F88(v4, v3);
}

uint64_t sub_100152560(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 64) = a1;
  *(void *)(v3 + 72) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_100152660, 0, 0);
}

uint64_t sub_100152660()
{
  uint64_t v2 = *(void *)(v0 + 64);
  unint64_t v1 = *(void *)(v0 + 72);
  (*(void (**)(uint64_t, unint64_t))(v0 + 40))(v2, v1);
  sub_10000792C(v2, v1);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

void sub_1001526E4(void *a1, int a2, void *a3, void *aBlock)
{
  uint64_t v6 = _Block_copy(aBlock);
  id v7 = a3;
  id v12 = a1;
  uint64_t v8 = sub_1001BF180();
  unint64_t v10 = v9;

  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v6;
  sub_100152314(v8, v10, (uint64_t (*)(void, unint64_t))sub_10015C7B4, v11);
  swift_release();
  sub_10000792C(v8, v10);
}

void sub_1001527BC()
{
}

uint64_t sub_100152800(char *a1)
{
  uint64_t v2 = swift_isaMask & *(void *)a1;
  uint64_t v3 = &a1[*(void *)(v2 + 0x60)];
  uint64_t v4 = sub_1001C0340();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  sub_100003E90((uint64_t)&a1[*(void *)((swift_isaMask & *(void *)a1) + 0x68)]);

  sub_100003E90((uint64_t)&a1[*(void *)((swift_isaMask & *(void *)a1) + 0x78)]);
  (*(void (**)(char *))(*(void *)(*(void *)(v2 + 80) - 8) + 8))(&a1[*(void *)((swift_isaMask & *(void *)a1)
                                                                                                 + 0x80)]);
  return swift_release();
}

uint64_t type metadata accessor for TC2DaemonHost()
{
  return sub_10000E738();
}

void *sub_10015299C(void *result)
{
  uint64_t v1 = *(void *)(*result + 16);
  uint64_t v2 = *(void *)(result[1] + 24);
  BOOL v3 = __OFADD__(v1, v2);
  uint64_t v4 = v1 + v2;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    sub_1000E42BC(0, v4 & ~(v4 >> 63), 0, (unint64_t)_swiftEmptyArrayStorage);
    uint64_t v5 = swift_bridgeObjectRetain();
    uint64_t v6 = sub_10011A5D8(v5);
    swift_bridgeObjectRelease();
    sub_1000D0680((uint64_t)v6);
    uint64_t v7 = swift_retain();
    sub_1000D0824(v7);
    return (void *)sub_1001BFCA0();
  }
  return result;
}

uint64_t sub_100152A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  uint64_t v9 = sub_1001BF2C0();
  v8[7] = v9;
  v8[8] = *(void *)(v9 - 8);
  v8[9] = swift_task_alloc();
  sub_100003918(&qword_100208C60);
  v8[10] = swift_task_alloc();
  uint64_t v10 = sub_1001BF950();
  v8[11] = v10;
  v8[12] = *(void *)(v10 - 8);
  v8[13] = swift_task_alloc();
  v8[14] = type metadata accessor for ThimbledEvent();
  v8[15] = swift_task_alloc();
  uint64_t v11 = sub_100003918(&qword_100208A00);
  unsigned char v8[16] = v11;
  v8[17] = *(void *)(v11 - 8);
  v8[18] = swift_task_alloc();
  return _swift_task_switch(sub_100152C40, 0, 0);
}

uint64_t sub_100152C40()
{
  uint64_t v45 = v0;
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v38 = v3;
  uint64_t v40 = *(void *)(v0 + 96);
  uint64_t v41 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v39 = *(void *)(v0 + 80);
  uint64_t v6 = *(void *)(v0 + 24);
  *(void *)(v0 + 152) = *(void *)(**(void **)(v0 + 16) + 296);
  swift_storeEnumTagMultiPayload();
  *(void *)(v0 + 160) = sub_100003918(qword_100208000);
  sub_1001C0FE0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
  *(void *)(v0 + 168) = v7;
  *(void *)(v0 + 176) = (v1 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v7(v2, v3);
  uint64_t v8 = (void *)(v4 + *(int *)(sub_100003918(&qword_10020C498) + 48));
  uint64_t v9 = *(void *)(v6 + *(void *)(*(void *)v6 + 344));
  uint64_t v10 = v9 + *(void *)(*(void *)v9 + 296);
  uint64_t v11 = sub_1001BF310();
  *(void *)(v0 + 184) = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  *(void *)(v0 + 192) = v13;
  *(void *)(v0 + 200) = (v12 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v13(v4, v10, v11);
  uint64_t v14 = *(void *)(v5 + 80);
  *uint64_t v8 = *(void *)(v5 + 72);
  v8[1] = v14;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1001C0FE0();
  v7(v2, v38);
  sub_1000238F4(v39);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v39, 1, v41) == 1)
  {
    sub_100010360(*(void *)(v0 + 80), &qword_100208C60);
    char v15 = 0;
  }
  else
  {
    uint64_t v16 = *(void *)(v0 + 104);
    uint64_t v17 = *(void *)(v0 + 72);
    uint64_t v18 = *(void *)(v0 + 16);
    (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 96) + 32))(v16, *(void *)(v0 + 80), *(void *)(v0 + 88));
    uint64_t v19 = *(void *)(v18 + *(void *)(*(void *)v18 + 288));
    _s20privatecloudcomputed8LRUCacheC10addToCache3now5valueSb10Foundation4DateV_xtFfA__0();
    uint64_t v20 = *(void *)(v19 + 16);
    uint64_t v21 = (void *)swift_task_alloc();
    v21[2] = v19;
    void v21[3] = v17;
    void v21[4] = v16;
    void v21[5] = v20;
    uint64_t v22 = v19 + qword_100208340;
    os_unfair_lock_lock((os_unfair_lock_t)(v19 + qword_100208340));
    sub_10015D970((unint64_t *)(v22 + 8), v44);
    os_unfair_lock_unlock((os_unfair_lock_t)v22);
    uint64_t v23 = *(void *)(v0 + 96);
    uint64_t v42 = *(void *)(v0 + 104);
    uint64_t v24 = *(void *)(v0 + 88);
    uint64_t v26 = *(void *)(v0 + 64);
    uint64_t v25 = *(void *)(v0 + 72);
    uint64_t v27 = *(void *)(v0 + 56);
    swift_task_dealloc();
    char v28 = v44[0];
    sub_100138C50(v25);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v42, v24);
    char v15 = v28 ^ 1;
  }
  *(unsigned char *)(v0 + 224) = v15 & 1;
  sub_1001BF860();
  sub_1001C0C60();
  swift_bridgeObjectRelease();
  int v29 = os_variant_allows_internal_security_policies();
  swift_release();
  if (v29)
  {
    uint64_t v30 = *(void *)(v0 + 48);
    uint64_t v32 = *(void *)(v0 + 16);
    uint64_t v31 = *(void *)(v0 + 24);
    uint64_t v33 = swift_task_alloc();
    *(void *)(v33 + 16) = v30;
    *(void *)(v33 + 24) = v31;
    uint64_t v34 = (os_unfair_lock_s *)(v32 + *(void *)(*(void *)v32 + 304));
    os_unfair_lock_lock(v34);
    sub_10015D944((uint64_t)&v34[2], v35);
    os_unfair_lock_unlock(v34);
    swift_task_dealloc();
  }
  uint64_t v43 = (uint64_t (__cdecl *)())((char *)&dword_10020E0C0 + dword_10020E0C0);
  uint64_t v36 = (void *)swift_task_alloc();
  *(void *)(v0 + 208) = v36;
  *uint64_t v36 = v0;
  v36[1] = sub_10015306C;
  return v43();
}

uint64_t sub_10015306C()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100153400;
  }
  else {
    uint64_t v2 = sub_100153180;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100153180()
{
  if (*(unsigned char *)(v0 + 224) == 1)
  {
    uint64_t v1 = sub_1001C0330();
    os_log_type_t v2 = sub_1001C1200();
    if (os_log_type_enabled(v1, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, v2, "need to prefetch attestations for this workload", v3, 2u);
      swift_slowDealloc();
    }
    uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v0 + 168);
    uint64_t v4 = *(void *)(v0 + 144);
    uint64_t v5 = *(void *)(v0 + 120);
    uint64_t v23 = *(void *)(v0 + 128);
    uint64_t v7 = *(void *)(v0 + 88);
    uint64_t v6 = *(void *)(v0 + 96);
    uint64_t v8 = *(void *)(v0 + 40);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v8, v7);
    swift_storeEnumTagMultiPayload();
    sub_1001C0FE0();
    v24(v4, v23);
  }
  uint64_t v9 = *(void *)(v0 + 184);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 192);
  uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v0 + 168);
  uint64_t v10 = *(void *)(v0 + 144);
  uint64_t v11 = *(void *)(v0 + 120);
  uint64_t v21 = *(void *)(v0 + 128);
  uint64_t v12 = *(void *)(v0 + 96);
  uint64_t v13 = *(void *)(v0 + 88);
  uint64_t v14 = *(void *)(v0 + 16);
  uint64_t v15 = *(void *)(v0 + 40);
  uint64_t v16 = *(void *)(v0 + 48);
  uint64_t v17 = v11 + *(int *)(sub_100003918(&qword_10020C400) + 48);
  v20(v11, v16, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v17, v15, v13);
  swift_storeEnumTagMultiPayload();
  sub_1001C0FE0();
  v22(v10, v21);
  sub_100153608(v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_100153400()
{
  sub_100153608(*(void *)(v0 + 16));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001534B0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001BF310();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a2, v6);
  uint64_t v11 = *(void *)(a3 + *(void *)(*(void *)a3 + 344));
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = *a1;
  *a1 = 0x8000000000000000;
  sub_1000EB6D8(v11, (uint64_t)v10, isUniquelyReferenced_nonNull_native);
  *a1 = v15;
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

void sub_100153608(uint64_t a1)
{
  sub_1001BF860();
  sub_1001C0C60();
  swift_bridgeObjectRelease();
  int v2 = os_variant_allows_internal_security_policies();
  uint64_t v3 = swift_release();
  if (v2)
  {
    __chkstk_darwin(v3, v4);
    uint64_t v5 = (os_unfair_lock_s *)(a1 + *(void *)(*(void *)a1 + 304));
    os_unfair_lock_lock(v5);
    sub_10015DA84((uint64_t)&v5[2], v6);
    os_unfair_lock_unlock(v5);
    os_unfair_lock_lock(v5);
    sub_100156A4C((uint64_t)&v5[2]);
    os_unfair_lock_unlock(v5);
  }
}

uint64_t sub_1001536F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1001C0FC0();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1001C0FB0();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_100010360(a1, &qword_10020C3B0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1001C0EA0();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_10015387C(uint64_t a1)
{
  uint64_t v54 = a1;
  uint64_t v1 = sub_1001BF8E0();
  uint64_t v48 = *(void *)(v1 - 8);
  uint64_t v49 = v1;
  __chkstk_darwin(v1, v2);
  uint64_t v47 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1001C0340();
  uint64_t v44 = *(void *)(v4 - 8);
  uint64_t v45 = v4;
  __chkstk_darwin(v4, v5);
  uint64_t v50 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1001C0C30();
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v46 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1001BFC80();
  uint64_t v52 = *(void *)(v10 - 8);
  uint64_t v53 = v10;
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1001BFB00();
  uint64_t v51 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1001BEDD0();
  __chkstk_darwin(v18, v19);
  sub_1001BEE10();
  swift_allocObject();
  uint64_t v20 = sub_1001BEE00();
  sub_100003918(&qword_10020E0F8);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1001CD7F0;
  sub_1001BEDC0();
  uint64_t v22 = v20;
  uint64_t v23 = v14;
  sub_1001BEDB0();
  uint64_t v56 = v21;
  sub_1001627A0(&qword_10020E100, (void (*)(uint64_t))&type metadata accessor for JSONEncoder.OutputFormatting);
  sub_100003918(&qword_10020E108);
  sub_100016710(&qword_10020E110, &qword_10020E108);
  sub_1001C13D0();
  sub_1001BEDE0();
  (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v13, v54, v53);
  sub_1001BFB10();
  sub_1001627A0(&qword_10020E118, (void (*)(uint64_t))&type metadata accessor for TrustedRequestLogEntry);
  uint64_t v28 = sub_1001BEDF0();
  unint64_t v30 = v29;
  uint64_t v32 = v47;
  uint64_t v31 = v48;
  uint64_t v33 = v49;
  uint64_t v34 = v50;
  (*(void (**)(char *, uint64_t))(v51 + 8))(v17, v23);
  sub_1001C0C20();
  uint64_t v35 = sub_1001C0C10();
  if (v36)
  {
    uint64_t v37 = v35;
    unint64_t v38 = v36;
    (*(void (**)(char *, void, uint64_t))(v31 + 104))(v32, enum case for TC2LogCategory.requestLog(_:), v33);
    sub_1001BFDD0();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v33);
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_1001C0330();
    os_log_type_t v40 = sub_1001C1200();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = swift_slowAlloc();
      uint64_t v54 = v22;
      uint64_t v42 = (uint8_t *)v41;
      uint64_t v56 = swift_slowAlloc();
      *(_DWORD *)uint64_t v42 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v55 = sub_1000DF238(v37, v38, &v56);
      sub_1001C1310();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "%s", v42, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      sub_10000792C(v28, v30);

      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v50, v45);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_10000792C(v28, v30);

      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v34, v45);
    }
  }
  else
  {
    sub_10000792C(v28, v30);
    uint64_t v24 = sub_1001C0330();
    os_log_type_t v25 = sub_1001C11F0();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "unable to encode and log request", v26, 2u);
      swift_slowDealloc();
    }

    return swift_release();
  }
}

uint64_t sub_100153FCC(uint64_t a1)
{
  uint64_t v2 = sub_100003918(&qword_10020CD20);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1001BF2C0();
  uint64_t v6 = *(void *)(v61 - 8);
  __chkstk_darwin(v61, v7);
  uint64_t v60 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1001BFC80();
  uint64_t v62 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9, v10);
  uint64_t v53 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11, v13);
  uint64_t v52 = (char *)&v51 - v15;
  uint64_t v17 = __chkstk_darwin(v14, v16);
  uint64_t v59 = (char *)&v51 - v18;
  uint64_t v20 = __chkstk_darwin(v17, v19);
  uint64_t v58 = (char *)&v51 - v21;
  uint64_t result = __chkstk_darwin(v20, v22);
  uint64_t v63 = (char *)&v51 - v24;
  os_log_type_t v25 = *(char **)(a1 + 8);
  uint64_t v64 = (char **)(a1 + 8);
  uint64_t v26 = *((void *)v25 + 3);
  if (v26)
  {
    uint64_t v27 = v63;
    uint64_t v57 = v62 + 16;
    uint64_t v56 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v54 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v62 + 56);
    uint64_t v55 = (uint64_t (**)(char *, uint64_t))(v62 + 8);
    while (1)
    {
      uint64_t v29 = v26 - 1;
      if (__OFSUB__(v26, 1)) {
        break;
      }
      if (v29 < 0) {
        goto LABEL_22;
      }
      if (v29 >= v26) {
        goto LABEL_23;
      }
      uint64_t v30 = v62;
      uint64_t v31 = *((void *)v25 + 4) + v29;
      uint64_t v32 = *((void *)v25 + 2);
      if (v31 < v32) {
        uint64_t v32 = 0;
      }
      unint64_t v33 = (*(unsigned __int8 *)(v62 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
      uint64_t v34 = *(void *)(v62 + 72);
      uint64_t v35 = v59;
      (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v59, &v25[v33 + (v31 - v32) * v34], v9);
      unint64_t v36 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
      uint64_t v37 = v58;
      v36(v58, v35, v9);
      v36(v27, v37, v9);
      unint64_t v38 = v60;
      sub_1001BFC70();
      sub_1001BF270();
      double v40 = v39;
      (*v56)(v38, v61);
      if (v40 >= -300.0) {
        return (*v55)(v63, v9);
      }
      if (*((void *)*v64 + 3))
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0) {
          uint64_t result = sub_1000F8490();
        }
        uint64_t v41 = *v64;
        uint64_t v42 = *((void *)*v64 + 3);
        BOOL v43 = __OFSUB__(v42, 1);
        uint64_t v44 = v42 - 1;
        if (v43) {
          goto LABEL_24;
        }
        uint64_t v45 = v41[4] + v44;
        uint64_t v46 = v41[2];
        if (v45 < v46) {
          uint64_t v46 = 0;
        }
        uint64_t v47 = v53;
        uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v36)(v53, (char *)v41 + v33 + (v45 - v46) * v34, v9);
        uint64_t v48 = v41[3];
        BOOL v43 = __OFSUB__(v48, 1);
        uint64_t v49 = v48 - 1;
        if (v43) {
          goto LABEL_25;
        }
        v41[3] = v49;
        uint64_t v50 = v52;
        v36(v52, v47, v9);
        v36(v5, v50, v9);
        uint64_t v28 = 0;
      }
      else
      {
        uint64_t v28 = 1;
      }
      (*v54)(v5, v28, 1, v9);
      sub_100010360((uint64_t)v5, &qword_10020CD20);
      uint64_t result = (*v55)(v63, v9);
      os_log_type_t v25 = *v64;
      uint64_t v26 = *((void *)*v64 + 3);
      if (!v26) {
        return result;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
  }
  return result;
}

uint64_t sub_100154460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  return _swift_task_switch(sub_10015448C, 0, 0);
}

uint64_t sub_10015448C()
{
  uint64_t v3 = (uint64_t (*)(uint64_t))((char *)&dword_10020EE28 + dword_10020EE28);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v1;
  void *v1 = v0;
  v1[1] = sub_100154534;
  return v3((uint64_t)v3);
}

uint64_t sub_100154534()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100154954;
  }
  else {
    uint64_t v2 = sub_100154648;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100154648()
{
  uint64_t v2 = v0[3];
  unint64_t v1 = v0[4];
  sub_1001C0650();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_100007B14(v2, v1);
  uint64_t v3 = sub_1001C05C0();
  v0[12] = v3;
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = v0[9];
    sub_1000376D4(0, (unint64_t *)&qword_10020C380);
    uint64_t v6 = sub_1001C1240();
    v0[13] = v6;
    uint64_t v7 = v5 + *(int *)(type metadata accessor for NWAsyncConnection.OHTTPStreamFactory(0) + 28);
    uint64_t v8 = (void *)swift_task_alloc();
    v0[14] = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_10015481C;
    uint64_t v9 = v0[7];
    uint64_t v10 = v0[8];
    return sub_10019F618(v4, v6, v7, 0, (uint64_t)(v0 + 2), v9, v10);
  }
  else
  {
    sub_100160C20();
    swift_allocError();
    swift_willThrow();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
}

uint64_t sub_10015481C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 120) = v1;
  swift_task_dealloc();

  if (v1)
  {
    uint64_t v5 = sub_1001549D4;
  }
  else
  {
    *(void *)(v4 + 128) = a1;
    uint64_t v5 = sub_10015496C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100154954()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10015496C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 128);
  return v1(v2);
}

uint64_t sub_1001549D4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100154A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[9] = a6;
  v7[10] = v6;
  v7[7] = a4;
  v7[8] = a5;
  v7[5] = a2;
  v7[6] = a3;
  v7[4] = a1;
  return _swift_task_switch(sub_100154A64, 0, 0);
}

uint64_t sub_100154A64()
{
  uint64_t v3 = (uint64_t (*)(uint64_t))((char *)&dword_10020EE28 + dword_10020EE28);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v1;
  void *v1 = v0;
  v1[1] = sub_100154B0C;
  return v3((uint64_t)v3);
}

uint64_t sub_100154B0C()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100154F10;
  }
  else {
    uint64_t v2 = sub_100154C20;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100154C20()
{
  uint64_t v2 = v0[6];
  unint64_t v1 = v0[7];
  sub_1001C0650();
  v0[2] = v2;
  v0[3] = v1;
  swift_retain();
  sub_100007B14(v2, v1);
  uint64_t v3 = sub_1001C05D0();
  v0[13] = v3;
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = v0[10];
    sub_1000376D4(0, (unint64_t *)&qword_10020C380);
    uint64_t v6 = sub_1001C1240();
    v0[14] = v6;
    uint64_t v7 = v5 + *(int *)(type metadata accessor for NWAsyncConnection.OHTTPStreamFactory(0) + 28);
    uint64_t v8 = (void *)swift_task_alloc();
    v0[15] = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_100154DEC;
    uint64_t v9 = v0[8];
    uint64_t v10 = v0[9];
    uint64_t v11 = v0[4];
    return sub_10019857C(v11, v4, v6, v7, 0, (uint64_t)(v0 + 2), v9, v10);
  }
  else
  {
    sub_100160C20();
    swift_allocError();
    swift_willThrow();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_100154DEC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();

  if (v0) {
    uint64_t v3 = sub_100154F8C;
  }
  else {
    uint64_t v3 = sub_100154F28;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100154F10()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100154F28()
{
  swift_release();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100154F8C()
{
  swift_release();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100154FF0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  *(void *)(v4 + 16) = a3;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)a4 + *a4);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v7;
  *uint64_t v7 = v4;
  v7[1] = sub_1000A0884;
  return v9(a1, a2, v4 + 16);
}

uint64_t sub_1001550E8(uint64_t *a1, uint64_t a2, char *a3)
{
  uint64_t v126 = a3;
  uint64_t v118 = sub_1001BF2C0();
  uint64_t v5 = *(void (***)(char *, uint64_t))(v118 - 8);
  uint64_t v7 = __chkstk_darwin(v118, v6);
  uint64_t v117 = (char *)v105 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v9);
  unint64_t v116 = (char *)v105 - v10;
  uint64_t v121 = sub_100003918(&qword_10020E0E0);
  uint64_t v114 = *(unsigned int (***)(uint64_t *, uint64_t, uint64_t))(v121 - 8);
  __chkstk_darwin(v121, v11);
  BOOL v111 = (char *)v105 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100003918(&qword_10020E0E8);
  uint64_t v15 = __chkstk_darwin(v13 - 8, v14);
  uint64_t v120 = (void *)((char *)v105 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15, v17);
  uint64_t v119 = (void *)((char *)v105 - v18);
  uint64_t v19 = sub_100003918(&qword_10020CD20);
  __chkstk_darwin(v19 - 8, v20);
  uint64_t v115 = (void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))((char *)v105 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = sub_1001BFC80();
  uint64_t v23 = *(char **)(v22 - 8);
  uint64_t v25 = __chkstk_darwin(v22, v24);
  uint64_t v27 = (char *)v105 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v25, v28);
  uint64_t v110 = (char *)v105 - v30;
  uint64_t v32 = __chkstk_darwin(v29, v31);
  os_log_t v109 = (char *)v105 - v33;
  uint64_t v35 = __chkstk_darwin(v32, v34);
  uint64_t v37 = (void (**)(char *, char *, uint64_t))((char *)v105 - v36);
  uint64_t v39 = __chkstk_darwin(v35, v38);
  int v113 = (char *)v105 - v40;
  __chkstk_darwin(v39, v41);
  uint64_t v122 = (uint64_t)v105 - v42;
  swift_bridgeObjectRetain();
  unint64_t v43 = sub_100169EB4(a2);
  char v45 = v44;
  uint64_t result = swift_bridgeObjectRelease();
  if ((v45 & 1) == 0) {
    return result;
  }
  os_log_type_t v112 = v5;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v48 = *a1;
  uint64_t v123 = *a1;
  *a1 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_37:
    sub_1000EE010();
    uint64_t v48 = v123;
  }
  uint64_t v49 = *(void *)(v48 + 48);
  uint64_t v50 = sub_1001BF310();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v50 - 8) + 8))(v49 + *(void *)(*(void *)(v50 - 8) + 72) * v43, v50);
  uint64_t v51 = *(void *)(*(void *)(v48 + 56) + 8 * v43);
  sub_10018EE7C(v43, v48);
  *a1 = v48;
  swift_bridgeObjectRelease();
  uint64_t v52 = v122;
  sub_10013AAB8(v122);
  sub_10015387C(v52);
  uint64_t v55 = a1[1];
  uint64_t v54 = a1 + 1;
  uint64_t v53 = v55;
  uint64_t v56 = *(void *)(v55 + 24);
  if (v56 < 5) {
    goto LABEL_11;
  }
  uint64_t v126 = v27;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0) {
    uint64_t result = sub_1000F8490();
  }
  uint64_t v57 = (char *)*v54;
  uint64_t v58 = *(void *)(*v54 + 24);
  BOOL v59 = __OFSUB__(v58, 1);
  uint64_t v60 = v58 - 1;
  if (v59)
  {
    __break(1u);
  }
  else
  {
    uint64_t v61 = (uint64_t (*)(char *, char *, uint64_t))*((void *)v23 + 4);
    uint64_t v62 = *((void *)v57 + 4) + v60;
    uint64_t v63 = *((void *)v57 + 2);
    if (v62 < v63) {
      uint64_t v63 = 0;
    }
    uint64_t v64 = v37;
    uint64_t result = v61((char *)v37, &v57[((v23[80] + 40) & ~(unint64_t)v23[80])+ (v62 - v63) * *((void *)v23 + 9)], v22);
    uint64_t v65 = *((void *)v57 + 3);
    BOOL v59 = __OFSUB__(v65, 1);
    uint64_t v66 = v65 - 1;
    if (!v59)
    {
      *((void *)v57 + 3) = v66;
      uint64_t v67 = v113;
      v61(v113, (char *)v64, v22);
      uint64_t v68 = (uint64_t)v115;
      v61((char *)v115, v67, v22);
      (*((void (**)(uint64_t, void, uint64_t, uint64_t))v23 + 7))(v68, 0, 1, v22);
      sub_100010360(v68, &qword_10020CD20);
      uint64_t v53 = *v54;
      uint64_t v56 = *(void *)(*v54 + 24);
      uint64_t v27 = v126;
LABEL_11:
      if (!v56)
      {
        char v93 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v94 = *v54;
        if (*(uint64_t *)(*v54 + 16) < 1 || (v93 & 1) == 0)
        {
          sub_1000A3FF4(1, 0);
          uint64_t v94 = *v54;
        }
        uint64_t v95 = v122;
        sub_1000A4510((void *)(v94 + 16), v94 + ((v23[80] + 40) & ~(unint64_t)v23[80]), v122);
        swift_release();
        return (*((uint64_t (**)(uint64_t, uint64_t))v23 + 1))(v95, v22);
      }
      v105[1] = v51;
      long long v106 = v54;
      uint64_t v69 = *(void *)(v53 + 32);
      uint64_t v70 = v69 + v56;
      if (*(void *)(v53 + 16) >= v70) {
        uint64_t v71 = v70;
      }
      else {
        uint64_t v71 = *(void *)(v53 + 16);
      }
      unint64_t v72 = v114;
      uint64_t v107 = v23 + 16;
      uint64_t v108 = v23;
      uint64_t v123 = v53;
      uint64_t v124 = v69;
      uint64_t v125 = v71;
      uint64_t v37 = (void (**)(char *, char *, uint64_t))(v23 + 32);
      v114 += 6;
      uint64_t v115 = (void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v72 + 7);
      ++v112;
      int v113 = v23 + 8;
      uint64_t v73 = swift_retain();
      uint64_t v126 = 0;
      while (1)
      {
        a1 = v120;
        uint64_t v74 = v121;
        if (v69 == v71)
        {
          if ((sub_1000A3AD8(v73) & 1) == 0)
          {
            uint64_t v82 = 1;
            goto LABEL_22;
          }
          uint64_t v69 = v124;
        }
        uint64_t v23 = v27;
        uint64_t v124 = v69 + 1;
        uint64_t v75 = v108;
        int v76 = v110;
        (*((void (**)(char *, unint64_t, uint64_t))v108 + 2))(v110, v123+ ((v108[80] + 40) & ~(unint64_t)v108[80])+ *((void *)v108 + 9) * v69, v22);
        unint64_t v43 = *((void *)v75 + 4);
        uint64_t v77 = v22;
        uint64_t v78 = v109;
        ((void (*)(char *, char *, uint64_t))v43)(v109, v76, v77);
        uint64_t v79 = &v111[*(int *)(v74 + 48)];
        uint64_t v80 = v78;
        uint64_t v22 = v77;
        ((void (*)(char *, char *, uint64_t))v43)(v79, v80, v77);
        uint64_t v27 = v126 + 1;
        if (__OFADD__(v126, 1))
        {
          __break(1u);
          goto LABEL_37;
        }
        BOOL v81 = (char *)a1 + *(int *)(v74 + 48);
        *a1 = (uint64_t)v126;
        ((void (*)(char *, char *, uint64_t))v43)(v81, v79, v77);
        uint64_t v82 = 0;
        uint64_t v126 = v27;
        uint64_t v27 = v23;
LABEL_22:
        (*v115)(a1, v82, 1, v74);
        os_log_type_t v83 = v119;
        sub_10002C318((uint64_t)a1, (uint64_t)v119, &qword_10020E0E8);
        if ((*v114)(v83, 1, v74) == 1)
        {
          swift_release();
          long long v96 = v106;
          uint64_t result = *v106;
          uint64_t v97 = *(void *)(*v106 + 24);
          Swift::Int v98 = v97 + 1;
          if (__OFADD__(v97, 1)) {
            goto LABEL_40;
          }
          char v99 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v100 = *v96;
          uint64_t v101 = v108;
          if (*(void *)(*v96 + 16) < v98 || (v99 & 1) == 0)
          {
            sub_1000A3FF4(v98, 0);
            uint64_t v100 = *v96;
          }
          uint64_t v102 = v122;
          sub_1000A4510((void *)(v100 + 16), v100 + ((v101[80] + 40) & ~(unint64_t)v101[80]), v122);
          swift_release();
          return (*((uint64_t (**)(uint64_t, uint64_t))v101 + 1))(v102, v22);
        }
        uint64_t v84 = *v83;
        (*v37)(v27, (char *)v83 + *(int *)(v74 + 48), v22);
        uint64_t v85 = v116;
        sub_1001BFC70();
        unint64_t v86 = v117;
        sub_1001BFC70();
        char v87 = sub_1001BF230();
        unint64_t v88 = v27;
        uint64_t v89 = *v112;
        uint64_t v90 = v86;
        uint64_t v91 = v22;
        uint64_t v92 = v118;
        (*v112)(v90, v118);
        v89(v85, v92);
        if (v87)
        {
          uint64_t v103 = v122;
          sub_100155A20(v122, v84);
          swift_release();
          uint64_t v104 = *(uint64_t (**)(uint64_t, uint64_t))v113;
          (*(void (**)(char *, uint64_t))v113)(v88, v91);
          swift_release();
          return v104(v103, v91);
        }
        uint64_t v73 = (*(uint64_t (**)(char *, uint64_t))v113)(v88, v91);
        uint64_t v69 = v124;
        uint64_t v71 = v125;
        uint64_t v22 = v91;
        uint64_t v27 = v88;
      }
    }
  }
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_100155A20(uint64_t result, uint64_t a2)
{
  if (a2 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v3 = a2;
  uint64_t v4 = result;
  uint64_t result = *v2;
  uint64_t v5 = *(void *)(*v2 + 24);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  Swift::Int v6 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = (void *)*v2;
  if (*(void *)(*v2 + 16) < v6 || (isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_1000A3FF4(v6, 0);
    uint64_t v8 = (void *)*v2;
  }
  uint64_t v9 = v8 + 2;
  uint64_t result = sub_1001BFC80();
  uint64_t v10 = result;
  uint64_t v11 = *(void *)(result - 8);
  uint64_t v12 = v11;
  unint64_t v13 = (unint64_t)v8
      + ((*(unsigned __int8 *)(v11 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  if (v3)
  {
    if (v8[3] == v3)
    {
      sub_100155CAC(v4, v8 + 2, v13);
LABEL_19:
      swift_retain();
      return swift_release();
    }
    goto LABEL_14;
  }
  uint64_t v14 = v8[4];
  if (!v14)
  {
    uint64_t v3 = *v9 - 1;
    if (__OFSUB__(*v9, 1))
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    goto LABEL_17;
  }
  uint64_t v3 = v14 - 1;
  if (!__OFSUB__(v14, 1))
  {
LABEL_17:
    uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v11 + 16))(v13 + v3 * *(void *)(v11 + 72), v4, result);
    v8[4] = v3;
    uint64_t v15 = v8[3];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (!v16)
    {
      v8[3] = v17;
      goto LABEL_19;
    }
    goto LABEL_24;
  }
  __break(1u);
LABEL_14:
  swift_retain();
  sub_100156068(1uLL, v3, v8 + 2, v13, (uint64_t)&v18);
  long long v19 = v18;
  sub_10002C318((uint64_t)&v19, (uint64_t)v20, &qword_10020E0F0);
  sub_10002C318((uint64_t)v20, (uint64_t)&v21, &qword_10020E0F0);
  uint64_t result = v21;
  if (v21)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v21, v4, v10);
    return swift_release();
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_100155C08@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (result) {
    *a2 = result;
  }
  else {
    __break(1u);
  }
  return result;
}

char *sub_100155C18()
{
  return &v1;
}

void sub_100155C28(uint8_t *a1, uint32_t a2, NSObject *a3, os_signpost_type_t a4, uint64_t a5, const char *a6, const char *a7)
{
  os_signpost_id_t v13 = sub_1001C0290();
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, a3, a4, v13, a6, a7, a1, a2);
}

uint64_t sub_100155CAC(uint64_t result, void *a2, uint64_t a3)
{
  uint64_t v3 = a2[1];
  uint64_t v4 = a2[2];
  uint64_t v5 = v4 + v3;
  if (!__OFADD__(v4, v3))
  {
    uint64_t v8 = result;
    if ((v3 & 0x8000000000000000) == 0)
    {
      BOOL v9 = __OFSUB__(v5, *a2);
      if (v5 < *a2 || (v5 -= *a2, !v9))
      {
LABEL_9:
        uint64_t v10 = sub_1001BFC80();
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(a3 + *(void *)(*(void *)(v10 - 8) + 72) * v5, v8, v10);
        uint64_t v11 = a2[1];
        BOOL v9 = __OFADD__(v11, 1);
        uint64_t v12 = v11 + 1;
        if (!v9)
        {
          a2[1] = v12;
          return result;
        }
        goto LABEL_12;
      }
      __break(1u);
    }
    if (v5 < 0)
    {
      BOOL v9 = __OFADD__(v5, *a2);
      v5 += *a2;
      if (v9) {
        goto LABEL_13;
      }
    }
    goto LABEL_9;
  }
  __break(1u);
LABEL_12:
  __break(1u);
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_100155D70(uint64_t *a1)
{
  uint64_t v2 = *a1;
  unint64_t v1 = a1[1];
  switch(v1 >> 62)
  {
    case 1uLL:
      uint64_t v6 = v1 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)a1 = xmmword_1001CB200;
      uint64_t v7 = v2 >> 32;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_13;
      }
      if (v7 < (int)v2) {
        goto LABEL_22;
      }
      if (sub_1001BEE60() && __OFSUB__((int)v2, sub_1001BEE90())) {
        goto LABEL_23;
      }
      sub_1001BEEA0();
      swift_allocObject();
      uint64_t v14 = sub_1001BEE50();
      swift_release();
      uint64_t v6 = v14;
LABEL_13:
      if (v7 < (int)v2) {
        goto LABEL_20;
      }
      uint64_t v15 = sub_1001BEE60();
      if (!v15) {
        goto LABEL_25;
      }
      uint64_t v16 = v15;
      uint64_t v17 = sub_1001BEE90();
      if (__OFSUB__((int)v2, v17)) {
        goto LABEL_21;
      }
      long long v18 = (void *)(v16 + (int)v2 - v17);
      sub_1001BEE80();
      uint64_t result = SecRandomCopyBytes(kSecRandomDefault, 0x10uLL, v18);
      unint64_t v13 = v6 | 0x4000000000000000;
      *a1 = v2;
      break;
    case 2uLL:
      *(void *)&long long bytes = *a1;
      *((void *)&bytes + 1) = v1 & 0x3FFFFFFFFFFFFFFFLL;
      sub_1001BF0C0();
      uint64_t v8 = *(void *)(bytes + 16);
      uint64_t v9 = sub_1001BEE60();
      if (!v9)
      {
        __break(1u);
LABEL_25:
        __break(1u);
        JUMPOUT(0x100156058);
      }
      uint64_t v10 = v9;
      uint64_t v11 = sub_1001BEE90();
      if (__OFSUB__(v8, v11))
      {
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
      }
      uint64_t v12 = (void *)(v10 + v8 - v11);
      sub_1001BEE80();
      uint64_t result = SecRandomCopyBytes(kSecRandomDefault, 0x10uLL, v12);
      unint64_t v13 = *((void *)&bytes + 1) | 0x8000000000000000;
      *a1 = bytes;
      break;
    case 3uLL:
      *(void *)((char *)&bytes + 7) = 0;
      *(void *)&long long bytes = 0;
      return SecRandomCopyBytes(kSecRandomDefault, 0x10uLL, &bytes);
    default:
      LOWORD(bytes) = *a1;
      BYTE2(bytes) = BYTE2(v2);
      BYTE3(bytes) = BYTE3(v2);
      BYTE4(bytes) = BYTE4(v2);
      BYTE5(bytes) = BYTE5(v2);
      BYTE6(bytes) = BYTE6(v2);
      BYTE7(bytes) = HIBYTE(v2);
      WORD4(bytes) = v1;
      BYTE10(bytes) = BYTE2(v1);
      BYTE11(bytes) = BYTE3(v1);
      BYTE12(bytes) = BYTE4(v1);
      BYTE13(bytes) = BYTE5(v1);
      BYTE14(bytes) = BYTE6(v1);
      uint64_t result = SecRandomCopyBytes(kSecRandomDefault, 0x10uLL, &bytes);
      unint64_t v5 = DWORD2(bytes) | ((unint64_t)BYTE12(bytes) << 32) | ((unint64_t)BYTE13(bytes) << 40) | ((unint64_t)BYTE14(bytes) << 48);
      *a1 = bytes;
      a1[1] = v5;
      return result;
  }
  a1[1] = v13;
  return result;
}

unint64_t sub_100156068@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7 = a3[1];
  uint64_t v8 = v7 - a2;
  if (__OFSUB__(v7, a2))
  {
    __break(1u);
LABEL_170:
    __break(1u);
    goto LABEL_171;
  }
  uint64_t v11 = a2;
  uint64_t v12 = result;
  uint64_t v13 = a3[2];
  if (v8 <= a2) {
    goto LABEL_10;
  }
  uint64_t v5 = -(uint64_t)result;
  if (__OFSUB__(0, result)) {
    goto LABEL_170;
  }
  uint64_t v14 = v13 - result;
  if (__OFADD__(v13, v5))
  {
LABEL_171:
    __break(1u);
    goto LABEL_172;
  }
  if (v5 < 0)
  {
LABEL_25:
    uint64_t v7 = *a3;
    if (v14 < 0)
    {
      BOOL v15 = __OFADD__(v14, v7);
      v14 += v7;
      if (v15) {
        goto LABEL_188;
      }
    }
LABEL_27:
    uint64_t v19 = v13 + a2;
    if (v13 + a2 >= v7) {
      uint64_t v20 = v7;
    }
    else {
      uint64_t v20 = 0;
    }
    uint64_t v8 = v19 - v20;
    uint64_t v21 = v19 - v20 + v5;
    if (!__OFADD__(v19 - v20, v5))
    {
      if (v5 < 0) {
        goto LABEL_47;
      }
      BOOL v22 = __OFSUB__(v21, v7);
      if (v21 < v7) {
        goto LABEL_49;
      }
      v21 -= v7;
      if (!v22) {
        goto LABEL_49;
      }
      __break(1u);
      goto LABEL_36;
    }
LABEL_175:
    __break(1u);
LABEL_176:
    __break(1u);
LABEL_177:
    __break(1u);
LABEL_178:
    __break(1u);
    goto LABEL_179;
  }
  uint64_t v7 = *a3;
  BOOL v15 = __OFSUB__(v14, *a3);
  if (v14 < *a3) {
    goto LABEL_27;
  }
  v14 -= *a3;
  if (!v15) {
    goto LABEL_27;
  }
  __break(1u);
LABEL_10:
  uint64_t v63 = a5;
  a5 = v13 + v7;
  if (__OFADD__(v13, v7))
  {
LABEL_172:
    __break(1u);
    goto LABEL_173;
  }
  if ((v7 & 0x8000000000000000) == 0)
  {
    BOOL v16 = __OFSUB__(a5, *a3);
    if (a5 < *a3) {
      goto LABEL_18;
    }
    a5 -= *a3;
    if (!v16) {
      goto LABEL_18;
    }
    __break(1u);
  }
  if (a5 < 0)
  {
    BOOL v15 = __OFADD__(a5, *a3);
    a5 += *a3;
    if (v15) {
      goto LABEL_187;
    }
  }
LABEL_18:
  BOOL v15 = __OFADD__(v7, result);
  unint64_t v17 = v7 + result;
  if (v15)
  {
LABEL_173:
    __break(1u);
    goto LABEL_174;
  }
  uint64_t v14 = v13 + v17;
  if (__OFADD__(v13, v17))
  {
LABEL_174:
    __break(1u);
    goto LABEL_175;
  }
  if ((v17 & 0x8000000000000000) == 0)
  {
    uint64_t v7 = *a3;
    BOOL v18 = __OFSUB__(v14, *a3);
    if (v14 < *a3) {
      goto LABEL_38;
    }
    v14 -= *a3;
    if (!v18) {
      goto LABEL_38;
    }
    __break(1u);
    goto LABEL_25;
  }
LABEL_36:
  uint64_t v7 = *a3;
  if (v14 < 0)
  {
    BOOL v15 = __OFADD__(v14, v7);
    v14 += v7;
    if (v15) {
      goto LABEL_189;
    }
  }
LABEL_38:
  uint64_t v23 = v13 + a2;
  if (v13 + a2 >= v7) {
    uint64_t v24 = v7;
  }
  else {
    uint64_t v24 = 0;
  }
  uint64_t v21 = v23 - v24;
  uint64_t v11 = v23 - v24 + result;
  if (__OFADD__(v23 - v24, result)) {
    goto LABEL_176;
  }
  if ((result & 0x8000000000000000) == 0)
  {
    BOOL v25 = __OFSUB__(v11, v7);
    if (v11 < v7) {
      goto LABEL_75;
    }
    v11 -= v7;
    if (!v25) {
      goto LABEL_75;
    }
    __break(1u);
LABEL_47:
    if (v21 < 0)
    {
      BOOL v15 = __OFADD__(v21, v7);
      v21 += v7;
      if (v15) {
        goto LABEL_190;
      }
    }
LABEL_49:
    if (v8 <= 0) {
      uint64_t v26 = v7;
    }
    else {
      uint64_t v26 = v8;
    }
    if (v21 <= 0) {
      uint64_t v27 = v7;
    }
    else {
      uint64_t v27 = v21;
    }
    if (v26 >= v13)
    {
      if (v27 < v14)
      {
        uint64_t v32 = a5;
        uint64_t v33 = v7 - v14;
        if (__OFSUB__(v7, v14))
        {
LABEL_180:
          __break(1u);
          goto LABEL_181;
        }
        if (v33 > 0)
        {
          uint64_t v34 = *(void *)(*(void *)(sub_1001BFC80() - 8) + 72);
          uint64_t result = a4 + v34 * v14;
          if (v34 * v14 < v34 * v13 || result >= a4 + v34 * v13 + v34 * v33)
          {
            uint64_t result = swift_arrayInitWithTakeFrontToBack();
          }
          else if (v34 * v14 != v34 * v13)
          {
            uint64_t result = swift_arrayInitWithTakeBackToFront();
          }
        }
        a5 = v32;
        if (v21 < 1) {
          goto LABEL_136;
        }
LABEL_131:
        uint64_t result = sub_1001BFC80();
        uint64_t v51 = *(void *)(*(void *)(result - 8) + 72);
        if (v51 * v12 <= 0 && a4 + v51 * v12 + v51 * v21 > a4)
        {
          if (!(v51 * v12)) {
            goto LABEL_136;
          }
          goto LABEL_134;
        }
LABEL_135:
        uint64_t result = swift_arrayInitWithTakeFrontToBack();
LABEL_136:
        a3[2] = v14;
        uint64_t v52 = a3[1];
        BOOL v15 = __OFADD__(v52, v12);
        uint64_t v53 = v52 + v12;
        if (!v15)
        {
          a3[1] = v53;
          if (v8 <= 0) {
            uint64_t v54 = *a3;
          }
          else {
            uint64_t v54 = v8;
          }
LABEL_168:
          uint64_t result = sub_1001568A0(v21, v54, a3, a4, (uint64_t)v64);
          char v61 = v65;
          long long v62 = v64[1];
          *(_OWORD *)a5 = v64[0];
          *(_OWORD *)(a5 + 16) = v62;
          *(unsigned char *)(a5 + 32) = v61;
          return result;
        }
        goto LABEL_177;
      }
      if (v11 <= 0) {
        goto LABEL_136;
      }
      uint64_t v42 = *(void *)(*(void *)(sub_1001BFC80() - 8) + 72);
      uint64_t result = a4 + v42 * v14;
      if (v42 * v14 < v42 * v13 || result >= a4 + v42 * v13 + v42 * v11) {
        goto LABEL_135;
      }
      if (v42 * v14 == v42 * v13) {
        goto LABEL_136;
      }
    }
    else
    {
      uint64_t v28 = a5;
      uint64_t v29 = v7 - v13;
      BOOL v30 = __OFSUB__(v7, v13);
      if (v27 < v14)
      {
        if (v30)
        {
LABEL_179:
          __break(1u);
          goto LABEL_180;
        }
        if (v29 > 0)
        {
          uint64_t v31 = *(void *)(*(void *)(sub_1001BFC80() - 8) + 72);
          uint64_t result = a4 + v31 * v14;
          if (v31 * v14 < v31 * v13 || result >= a4 + v31 * v13 + v31 * v29)
          {
            uint64_t result = swift_arrayInitWithTakeFrontToBack();
          }
          else if (v31 * v14 != v31 * v13)
          {
            uint64_t result = swift_arrayInitWithTakeBackToFront();
          }
        }
        a5 = v28;
        if (v12 >= 1)
        {
          uint64_t v45 = *a3 + v5;
          uint64_t v46 = *(void *)(*(void *)(sub_1001BFC80() - 8) + 72);
          uint64_t v47 = v46 * v45;
          uint64_t result = a4 + v46 * v45;
          if (v46 * v45 < 0 || v47 >= v46 * v12)
          {
            uint64_t result = swift_arrayInitWithTakeFrontToBack();
          }
          else if (v47)
          {
            uint64_t result = swift_arrayInitWithTakeBackToFront();
          }
        }
        if (v21 < 1) {
          goto LABEL_136;
        }
        goto LABEL_131;
      }
      if (v30)
      {
LABEL_182:
        __break(1u);
LABEL_183:
        __break(1u);
        goto LABEL_184;
      }
      if (v29 > 0)
      {
        uint64_t v41 = *(void *)(*(void *)(sub_1001BFC80() - 8) + 72);
        uint64_t result = a4 + v41 * v14;
        if (v41 * v14 < v41 * v13 || result >= a4 + v41 * v13 + v41 * v29)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else if (v41 * v14 != v41 * v13)
        {
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
      }
      a5 = v28;
      if (v8 < 1) {
        goto LABEL_136;
      }
      uint64_t v48 = *a3 + v5;
      uint64_t v49 = *(void *)(*(void *)(sub_1001BFC80() - 8) + 72);
      uint64_t v50 = v49 * v48;
      uint64_t result = a4 + v49 * v48;
      if (v49 * v48 < 0 || v50 >= v49 * v8) {
        goto LABEL_135;
      }
      if (!v50) {
        goto LABEL_136;
      }
    }
LABEL_134:
    uint64_t result = swift_arrayInitWithTakeBackToFront();
    goto LABEL_136;
  }
  if (v11 < 0)
  {
    BOOL v15 = __OFADD__(v11, v7);
    v11 += v7;
    if (v15) {
      goto LABEL_191;
    }
  }
LABEL_75:
  if (a5 <= 0) {
    uint64_t v35 = v7;
  }
  else {
    uint64_t v35 = a5;
  }
  if (v14 <= 0) {
    uint64_t v36 = v7;
  }
  else {
    uint64_t v36 = v14;
  }
  if (v35 >= v21)
  {
    if (v36 >= v11)
    {
      a5 = v63;
      if (v8 <= 0) {
        goto LABEL_164;
      }
      goto LABEL_159;
    }
    a5 = v63;
    if (__OFSUB__(0, result))
    {
LABEL_181:
      __break(1u);
      goto LABEL_182;
    }
    if (v14 <= 0) {
      goto LABEL_152;
    }
    unint64_t v39 = v7 - result;
    uint64_t result = sub_1001BFC80();
    uint64_t v40 = *(void *)(*(void *)(result - 8) + 72);
    if ((uint64_t)(v40 * v39) <= 0 && a4 + v40 * v39 + v40 * v14 > a4)
    {
      if (v40 * v39) {
        uint64_t result = swift_arrayInitWithTakeBackToFront();
      }
LABEL_152:
      BOOL v15 = __OFSUB__(v8, v14);
      v8 -= v14;
      if (v15)
      {
LABEL_184:
        __break(1u);
LABEL_185:
        __break(1u);
        goto LABEL_186;
      }
      if (v8 < 1) {
        goto LABEL_164;
      }
LABEL_159:
      uint64_t v58 = *(void *)(*(void *)(sub_1001BFC80() - 8) + 72);
      uint64_t result = a4 + v58 * v11;
      if (v58 * v11 < v58 * v21 || result >= a4 + v58 * v21 + v58 * v8)
      {
        uint64_t result = swift_arrayInitWithTakeFrontToBack();
      }
      else if (v58 * v11 != v58 * v21)
      {
        uint64_t result = swift_arrayInitWithTakeBackToFront();
      }
LABEL_164:
      uint64_t v59 = a3[1];
      BOOL v15 = __OFADD__(v59, v12);
      uint64_t v60 = v59 + v12;
      if (!v15)
      {
        a3[1] = v60;
        if (v11 <= 0) {
          uint64_t v54 = *a3;
        }
        else {
          uint64_t v54 = v11;
        }
        goto LABEL_168;
      }
      goto LABEL_178;
    }
LABEL_151:
    uint64_t result = swift_arrayInitWithTakeFrontToBack();
    goto LABEL_152;
  }
  if (v36 >= v11)
  {
    if (a5 > 0)
    {
      uint64_t v43 = *(void *)(*(void *)(sub_1001BFC80() - 8) + 72);
      uint64_t v44 = v43 * v12;
      uint64_t result = a4 + v43 * v12;
      if (v43 * v12 < 0 || v44 >= v43 * a5)
      {
        uint64_t result = swift_arrayInitWithTakeFrontToBack();
      }
      else if (v44)
      {
        uint64_t result = swift_arrayInitWithTakeBackToFront();
      }
    }
    uint64_t v8 = *a3 - v21;
    if (!__OFSUB__(*a3, v21)) {
      goto LABEL_158;
    }
    __break(1u);
    goto LABEL_151;
  }
  if (a5 > 0)
  {
    uint64_t v37 = *(void *)(*(void *)(sub_1001BFC80() - 8) + 72);
    uint64_t v38 = v37 * v12;
    uint64_t result = a4 + v37 * v12;
    if (v37 * v12 < 0 || v38 >= v37 * a5)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v38)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
  }
  if (__OFSUB__(0, v12)) {
    goto LABEL_183;
  }
  if (v12 >= 1)
  {
    uint64_t v55 = *a3 - v12;
    uint64_t result = sub_1001BFC80();
    uint64_t v56 = *(void *)(*(void *)(result - 8) + 72);
    if (v56 * v55 > 0 || a4 + v56 * v55 + v56 * v12 <= a4)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v56 * v55)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
  }
  uint64_t v57 = v8 - v12;
  if (__OFSUB__(v8, v12)) {
    goto LABEL_185;
  }
  uint64_t v8 = v57 - a5;
  if (!__OFSUB__(v57, a5))
  {
LABEL_158:
    a5 = v63;
    if (v8 < 1) {
      goto LABEL_164;
    }
    goto LABEL_159;
  }
LABEL_186:
  __break(1u);
LABEL_187:
  __break(1u);
LABEL_188:
  __break(1u);
LABEL_189:
  __break(1u);
LABEL_190:
  __break(1u);
LABEL_191:
  __break(1u);
  return result;
}