uint64_t TrustedCloudComputeError.RateLimitInfo.bundleID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrustedCloudComputeError.RateLimitInfo.bundleID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*TrustedCloudComputeError.RateLimitInfo.bundleID.modify())()
{
  return nullsub_1;
}

uint64_t TrustedCloudComputeError.RateLimitInfo.featureID.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrustedCloudComputeError.RateLimitInfo.featureID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*TrustedCloudComputeError.RateLimitInfo.featureID.modify())()
{
  return nullsub_1;
}

uint64_t TrustedCloudComputeError.RateLimitInfo.workloadType.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrustedCloudComputeError.RateLimitInfo.workloadType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*TrustedCloudComputeError.RateLimitInfo.workloadType.modify())()
{
  return nullsub_1;
}

uint64_t TrustedCloudComputeError.RateLimitInfo.workloadTags.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TrustedCloudComputeError.RateLimitInfo.workloadTags.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = a1;
  return result;
}

uint64_t (*TrustedCloudComputeError.RateLimitInfo.workloadTags.modify())()
{
  return nullsub_1;
}

uint64_t TrustedCloudComputeError.RateLimitInfo.WorkloadTag.key.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrustedCloudComputeError.RateLimitInfo.WorkloadTag.key.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*TrustedCloudComputeError.RateLimitInfo.WorkloadTag.key.modify())()
{
  return nullsub_1;
}

uint64_t TrustedCloudComputeError.RateLimitInfo.WorkloadTag.value.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrustedCloudComputeError.RateLimitInfo.WorkloadTag.value.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*TrustedCloudComputeError.RateLimitInfo.WorkloadTag.value.modify())()
{
  return nullsub_1;
}

PrivateCloudCompute::TrustedCloudComputeError::RateLimitInfo::WorkloadTag __swiftcall TrustedCloudComputeError.RateLimitInfo.WorkloadTag.init(key:value:)(Swift::String key, Swift::String value)
{
  Swift::String *v2 = key;
  v2[1] = value;
  result.value = value;
  result.key = key;
  return result;
}

uint64_t sub_25A66A748()
{
  if (*v0) {
    return 0x65756C6176;
  }
  else {
    return 7955819;
  }
}

uint64_t sub_25A66A778@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25A682E88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25A66A7A0()
{
  return 0;
}

void sub_25A66A7AC(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_25A66A7B8(uint64_t a1)
{
  unint64_t v2 = sub_25A66AA30();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A66A7F4(uint64_t a1)
{
  unint64_t v2 = sub_25A66AA30();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TrustedCloudComputeError.RateLimitInfo.WorkloadTag.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44B8A0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388]();
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  v10[1] = *(void *)(v1 + 24);
  v10[2] = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A66AA30();
  sub_25A6C7B00();
  char v12 = 0;
  uint64_t v8 = v10[3];
  sub_25A6C7960();
  if (!v8)
  {
    char v11 = 1;
    sub_25A6C7960();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_25A66AA30()
{
  unint64_t result = qword_26A44B8A8;
  if (!qword_26A44B8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44B8A8);
  }
  return result;
}

uint64_t TrustedCloudComputeError.RateLimitInfo.WorkloadTag.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44B8B0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A66AA30();
  sub_25A6C7AF0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v20 = 0;
  uint64_t v9 = sub_25A6C7890();
  uint64_t v11 = v10;
  char v19 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_25A6C7890();
  uint64_t v14 = v13;
  v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v18 = v12;
  v15(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v18;
  a2[3] = v14;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_25A66ACD8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return TrustedCloudComputeError.RateLimitInfo.WorkloadTag.init(from:)(a1, a2);
}

uint64_t sub_25A66ACF0(void *a1)
{
  return TrustedCloudComputeError.RateLimitInfo.WorkloadTag.encode(to:)(a1);
}

uint64_t TrustedCloudComputeError.RateLimitInfo.count.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t TrustedCloudComputeError.RateLimitInfo.count.setter(uint64_t result)
{
  *(void *)(v1 + 56) = result;
  return result;
}

uint64_t (*TrustedCloudComputeError.RateLimitInfo.count.modify())()
{
  return nullsub_1;
}

double TrustedCloudComputeError.RateLimitInfo.duration.getter()
{
  return *(double *)(v0 + 64);
}

void TrustedCloudComputeError.RateLimitInfo.duration.setter(double a1)
{
  *(double *)(v1 + 64) = a1;
}

uint64_t (*TrustedCloudComputeError.RateLimitInfo.duration.modify())()
{
  return nullsub_1;
}

uint64_t TrustedCloudComputeError.RateLimitInfo.retryAfterDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TrustedCloudComputeError.RateLimitInfo(0) + 40);
  uint64_t v4 = sub_25A6C73A0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for TrustedCloudComputeError.RateLimitInfo(uint64_t a1)
{
  return sub_25A675B1C(a1, qword_26B3294E8);
}

uint64_t TrustedCloudComputeError.RateLimitInfo.retryAfterDate.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TrustedCloudComputeError.RateLimitInfo(0) + 40);
  uint64_t v4 = sub_25A6C73A0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*TrustedCloudComputeError.RateLimitInfo.retryAfterDate.modify())()
{
  return nullsub_1;
}

uint64_t TrustedCloudComputeError.RateLimitInfo.init(bundleID:featureID:workloadType:workloadTags:count:duration:retryAfterDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, uint64_t a11)
{
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(double *)(a9 + 64) = a10;
  uint64_t v11 = a9 + *(int *)(type metadata accessor for TrustedCloudComputeError.RateLimitInfo(0) + 40);
  uint64_t v12 = sub_25A6C73A0();
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32);
  return v13(v11, a11, v12);
}

uint64_t TrustedCloudComputeError.RateLimitInfo.init(retryAfter:retryAfterDate:)@<X0>(double a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(_OWORD *)(a4 + 16) = 0u;
  *(_OWORD *)(a4 + 32) = 0u;
  *(_OWORD *)a4 = 0u;
  *(void *)(a4 + 48) = MEMORY[0x263F8EE78];
  *(void *)(a4 + 56) = 0;
  if (a2) {
    a1 = 0.0;
  }
  *(double *)(a4 + 64) = a1;
  uint64_t v6 = a4 + *(int *)(type metadata accessor for TrustedCloudComputeError.RateLimitInfo(0) + 40);
  uint64_t v7 = sub_25A6C73A0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32);
  return v8(v6, a3, v7);
}

uint64_t sub_25A66AFF8()
{
  uint64_t result = 0x4449656C646E7562;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x4965727574616566;
      break;
    case 2:
    case 3:
      uint64_t result = 0x64616F6C6B726F77;
      break;
    case 4:
      uint64_t result = 0x746E756F63;
      break;
    case 5:
      uint64_t result = 0x6E6F697461727564;
      break;
    case 6:
      uint64_t result = 0x7466417972746572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25A66B0E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25A682F64(a1, a2);
  *a3 = result;
  return result;
}

void sub_25A66B108(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_25A66B114(uint64_t a1)
{
  unint64_t v2 = sub_25A66B460();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A66B150(uint64_t a1)
{
  unint64_t v2 = sub_25A66B460();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TrustedCloudComputeError.RateLimitInfo.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44B8B8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A66B460();
  sub_25A6C7B00();
  char v14 = 0;
  sub_25A6C7920();
  if (!v2)
  {
    char v13 = 1;
    sub_25A6C7920();
    char v12 = 2;
    sub_25A6C7920();
    uint64_t v11 = *(void *)(v3 + 48);
    v10[15] = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A44B8C8);
    sub_25A66B9EC(&qword_26A44B8D0, (void (*)(void))sub_25A66B4FC);
    sub_25A6C79B0();
    v10[14] = 4;
    sub_25A6C79A0();
    v10[13] = 5;
    sub_25A6C7980();
    type metadata accessor for TrustedCloudComputeError.RateLimitInfo(0);
    v10[12] = 6;
    sub_25A6C73A0();
    sub_25A66BAB0(&qword_26B329B28, MEMORY[0x263F07490]);
    sub_25A6C79B0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_25A66B460()
{
  unint64_t result = qword_26A44B8C0;
  if (!qword_26A44B8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44B8C0);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_25A66B4FC()
{
  unint64_t result = qword_26A44B8D8;
  if (!qword_26A44B8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44B8D8);
  }
  return result;
}

uint64_t TrustedCloudComputeError.RateLimitInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v4 = sub_25A6C73A0();
  uint64_t v23 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44B8E0);
  uint64_t v25 = *(void *)(v7 - 8);
  uint64_t v26 = v7;
  MEMORY[0x270FA5388]();
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TrustedCloudComputeError.RateLimitInfo(0);
  MEMORY[0x270FA5388]();
  char v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_OWORD *)v12 + 1) = 0u;
  *((_OWORD *)v12 + 2) = 0u;
  *(_OWORD *)char v12 = 0u;
  uint64_t v13 = a1[3];
  v28 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_25A66B460();
  v27 = v9;
  sub_25A6C7AF0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = v25;
    uint64_t v15 = v26;
    char v36 = 0;
    *(void *)char v12 = sub_25A6C7850();
    *((void *)v12 + 1) = v16;
    char v35 = 1;
    *((void *)v12 + 2) = sub_25A6C7850();
    *((void *)v12 + 3) = v17;
    char v34 = 2;
    *((void *)v12 + 4) = sub_25A6C7850();
    *((void *)v12 + 5) = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A44B8C8);
    char v33 = 3;
    sub_25A66B9EC(&qword_26A44B8E8, (void (*)(void))sub_25A66BA5C);
    sub_25A6C78E0();
    *((void *)v12 + 6) = v29;
    char v32 = 4;
    *((void *)v12 + 7) = sub_25A6C78D0();
    char v31 = 5;
    sub_25A6C78B0();
    *((void *)v12 + 8) = v19;
    char v30 = 6;
    sub_25A66BAB0(&qword_26A44B8F8, MEMORY[0x263F07490]);
    char v20 = v27;
    sub_25A6C78E0();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v15);
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(&v12[*(int *)(v10 + 40)], v6, v4);
    sub_25A66D214((uint64_t)v12, v24, type metadata accessor for TrustedCloudComputeError.RateLimitInfo);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    return sub_25A66D27C((uint64_t)v12, type metadata accessor for TrustedCloudComputeError.RateLimitInfo);
  }
}

uint64_t sub_25A66B9EC(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A44B8C8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25A66BA5C()
{
  unint64_t result = qword_26A44B8F0;
  if (!qword_26A44B8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44B8F0);
  }
  return result;
}

uint64_t sub_25A66BAB0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25A66BAF8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TrustedCloudComputeError.RateLimitInfo.init(from:)(a1, a2);
}

uint64_t sub_25A66BB10(void *a1)
{
  return TrustedCloudComputeError.RateLimitInfo.encode(to:)(a1);
}

uint64_t (*TrustedCloudComputeError.AvailabilityInfo.reason.modify())()
{
  return nullsub_1;
}

uint64_t TrustedCloudComputeError.AvailabilityInfo.retryAfterDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_25A66D35C(type metadata accessor for TrustedCloudComputeError.AvailabilityInfo, a1);
}

uint64_t type metadata accessor for TrustedCloudComputeError.AvailabilityInfo(uint64_t a1)
{
  return sub_25A675B1C(a1, (uint64_t *)&unk_26B329B60);
}

uint64_t TrustedCloudComputeError.AvailabilityInfo.retryAfterDate.setter(uint64_t a1)
{
  return sub_25A66D414(a1, type metadata accessor for TrustedCloudComputeError.AvailabilityInfo);
}

uint64_t (*TrustedCloudComputeError.AvailabilityInfo.retryAfterDate.modify())()
{
  return nullsub_1;
}

uint64_t TrustedCloudComputeError.AvailabilityInfo.init(reason:retryAfterDate:)@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_25A66D4F0(a1, a2, type metadata accessor for TrustedCloudComputeError.AvailabilityInfo, a3);
}

unint64_t sub_25A66BBF8()
{
  unint64_t result = 0x576E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x7375427365646F6ELL;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25A66BCA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25A68329C(a1, a2);
  *a3 = result;
  return result;
}

void sub_25A66BCCC(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_25A66BCD8(uint64_t a1)
{
  unint64_t v2 = sub_25A66C388();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A66BD14(uint64_t a1)
{
  unint64_t v2 = sub_25A66C388();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25A66BD50()
{
  return 0;
}

void sub_25A66BD5C(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_25A66BD68(uint64_t a1)
{
  unint64_t v2 = sub_25A66C484();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A66BDA4(uint64_t a1)
{
  unint64_t v2 = sub_25A66C484();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25A66BDE0(uint64_t a1)
{
  unint64_t v2 = sub_25A66C3DC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A66BE1C(uint64_t a1)
{
  unint64_t v2 = sub_25A66C3DC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25A66BE58(uint64_t a1)
{
  unint64_t v2 = sub_25A66C430();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A66BE94(uint64_t a1)
{
  unint64_t v2 = sub_25A66C430();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25A66BED0(uint64_t a1)
{
  unint64_t v2 = sub_25A66C4D8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A66BF0C(uint64_t a1)
{
  unint64_t v2 = sub_25A66C4D8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TrustedCloudComputeError.AvailabilityInfo.Reason.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44B900);
  uint64_t v30 = *(void *)(v3 - 8);
  uint64_t v31 = v3;
  MEMORY[0x270FA5388]();
  uint64_t v29 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44B908);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x270FA5388]();
  uint64_t v26 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44B910);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  MEMORY[0x270FA5388]();
  uint64_t v23 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44B918);
  uint64_t v21 = *(void *)(v9 - 8);
  uint64_t v22 = v9;
  MEMORY[0x270FA5388]();
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44B920);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A66C388();
  sub_25A6C7B00();
  switch(v16)
  {
    case 1:
      char v33 = 1;
      sub_25A66C484();
      uint64_t v17 = v23;
      sub_25A6C7910();
      uint64_t v19 = v24;
      uint64_t v18 = v25;
      goto LABEL_6;
    case 2:
      char v34 = 2;
      sub_25A66C430();
      uint64_t v17 = v26;
      sub_25A6C7910();
      uint64_t v19 = v27;
      uint64_t v18 = v28;
      goto LABEL_6;
    case 3:
      char v35 = 3;
      sub_25A66C3DC();
      uint64_t v17 = v29;
      sub_25A6C7910();
      uint64_t v19 = v30;
      uint64_t v18 = v31;
LABEL_6:
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      break;
    default:
      char v32 = 0;
      sub_25A66C4D8();
      sub_25A6C7910();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v22);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

unint64_t sub_25A66C388()
{
  unint64_t result = qword_26A44B928;
  if (!qword_26A44B928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44B928);
  }
  return result;
}

unint64_t sub_25A66C3DC()
{
  unint64_t result = qword_26A44B930;
  if (!qword_26A44B930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44B930);
  }
  return result;
}

unint64_t sub_25A66C430()
{
  unint64_t result = qword_26A44B938;
  if (!qword_26A44B938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44B938);
  }
  return result;
}

unint64_t sub_25A66C484()
{
  unint64_t result = qword_26A44B940;
  if (!qword_26A44B940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44B940);
  }
  return result;
}

unint64_t sub_25A66C4D8()
{
  unint64_t result = qword_26A44B948;
  if (!qword_26A44B948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44B948);
  }
  return result;
}

uint64_t TrustedCloudComputeError.AvailabilityInfo.Reason.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  v47 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44B950);
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  MEMORY[0x270FA5388]();
  v48 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44B958);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  uint64_t v45 = v6;
  MEMORY[0x270FA5388]();
  v46 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44B960);
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  MEMORY[0x270FA5388]();
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44B968);
  uint64_t v41 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44B970);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1[3];
  v51 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_25A66C388();
  uint64_t v19 = v52;
  sub_25A6C7AF0();
  if (v19) {
    goto LABEL_7;
  }
  uint64_t v39 = v11;
  v40 = v10;
  uint64_t v52 = 0;
  uint64_t v21 = v48;
  uint64_t v20 = v49;
  uint64_t v22 = v50;
  uint64_t v23 = v17;
  uint64_t v24 = sub_25A6C7900();
  if (*(void *)(v24 + 16) != 1)
  {
    uint64_t v27 = sub_25A6C7780();
    swift_allocError();
    uint64_t v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A44B978);
    *uint64_t v29 = &type metadata for TrustedCloudComputeError.AvailabilityInfo.Reason;
    sub_25A6C7840();
    sub_25A6C7770();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v29, *MEMORY[0x263F8DCB0], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
LABEL_7:
    uint64_t v30 = (uint64_t)v51;
    return __swift_destroy_boxed_opaque_existential_1(v30);
  }
  char v25 = *(unsigned char *)(v24 + 32);
  switch(v25)
  {
    case 1:
      char v54 = 1;
      sub_25A66C484();
      char v32 = v40;
      uint64_t v33 = v52;
      sub_25A6C7830();
      if (v33) {
        goto LABEL_12;
      }
      uint64_t v35 = v42;
      uint64_t v34 = v43;
      goto LABEL_16;
    case 2:
      char v55 = 2;
      sub_25A66C430();
      char v32 = v46;
      uint64_t v36 = v52;
      sub_25A6C7830();
      if (v36) {
        goto LABEL_12;
      }
      uint64_t v34 = v44;
      uint64_t v35 = v45;
LABEL_16:
      (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
      goto LABEL_17;
    case 3:
      char v56 = 3;
      sub_25A66C3DC();
      uint64_t v37 = v52;
      sub_25A6C7830();
      if (v37)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        uint64_t v30 = (uint64_t)v51;
        return __swift_destroy_boxed_opaque_existential_1(v30);
      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v22);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      v38 = v47;
      goto LABEL_19;
    default:
      char v53 = 0;
      sub_25A66C4D8();
      uint64_t v26 = v52;
      sub_25A6C7830();
      if (v26)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v39);
LABEL_17:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      v38 = v47;
LABEL_19:
      unsigned char *v38 = v25;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v30);
}

uint64_t sub_25A66CB64@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return TrustedCloudComputeError.AvailabilityInfo.Reason.init(from:)(a1, a2);
}

uint64_t sub_25A66CB7C(void *a1)
{
  return TrustedCloudComputeError.AvailabilityInfo.Reason.encode(to:)(a1);
}

uint64_t sub_25A66CB94(uint64_t a1)
{
  unint64_t v2 = sub_25A66CDDC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A66CBD0(uint64_t a1)
{
  unint64_t v2 = sub_25A66CDDC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TrustedCloudComputeError.AvailabilityInfo.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44B980);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A66CDDC();
  sub_25A6C7B00();
  v10[15] = *v3;
  v10[14] = 0;
  sub_25A66CE30();
  sub_25A6C7950();
  if (!v2)
  {
    type metadata accessor for TrustedCloudComputeError.AvailabilityInfo(0);
    v10[13] = 1;
    sub_25A6C73A0();
    sub_25A66BAB0(&qword_26B329B28, MEMORY[0x263F07490]);
    sub_25A6C79B0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_25A66CDDC()
{
  unint64_t result = qword_26A44B988;
  if (!qword_26A44B988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44B988);
  }
  return result;
}

unint64_t sub_25A66CE30()
{
  unint64_t result = qword_26A44B990;
  if (!qword_26A44B990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44B990);
  }
  return result;
}

uint64_t TrustedCloudComputeError.AvailabilityInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v25 = sub_25A6C73A0();
  uint64_t v23 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44B998);
  uint64_t v24 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TrustedCloudComputeError.AvailabilityInfo(0);
  MEMORY[0x270FA5388]();
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A66CDDC();
  sub_25A6C7AF0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v21 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v24;
  uint64_t v12 = v25;
  char v28 = 0;
  sub_25A66D1C0();
  uint64_t v14 = v26;
  sub_25A6C7880();
  uint64_t v20 = v11;
  *uint64_t v11 = v29;
  char v27 = 1;
  sub_25A66BAB0(&qword_26A44B8F8, MEMORY[0x263F07490]);
  uint64_t v15 = v5;
  sub_25A6C78E0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v14);
  uint64_t v16 = v22;
  uint64_t v17 = (uint64_t)v20;
  (*(void (**)(unsigned char *, char *, uint64_t))(v23 + 32))(&v20[*(int *)(v21 + 20)], v15, v12);
  sub_25A66D214(v17, v16, type metadata accessor for TrustedCloudComputeError.AvailabilityInfo);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_25A66D27C(v17, type metadata accessor for TrustedCloudComputeError.AvailabilityInfo);
}

unint64_t sub_25A66D1C0()
{
  unint64_t result = qword_26A44B9A0;
  if (!qword_26A44B9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44B9A0);
  }
  return result;
}

uint64_t sub_25A66D214(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25A66D27C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25A66D2DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TrustedCloudComputeError.AvailabilityInfo.init(from:)(a1, a2);
}

uint64_t sub_25A66D2F4(void *a1)
{
  return TrustedCloudComputeError.AvailabilityInfo.encode(to:)(a1);
}

void TrustedCloudComputeError.TimeoutErrorInfo.reason.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *TrustedCloudComputeError.TimeoutErrorInfo.reason.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*TrustedCloudComputeError.TimeoutErrorInfo.reason.modify())()
{
  return nullsub_1;
}

uint64_t TrustedCloudComputeError.TimeoutErrorInfo.retryAfterDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_25A66D35C(type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo, a1);
}

uint64_t sub_25A66D35C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 20);
  uint64_t v5 = sub_25A6C73A0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo(uint64_t a1)
{
  return sub_25A675B1C(a1, (uint64_t *)&unk_26B329B50);
}

uint64_t TrustedCloudComputeError.TimeoutErrorInfo.retryAfterDate.setter(uint64_t a1)
{
  return sub_25A66D414(a1, type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo);
}

uint64_t sub_25A66D414(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 20);
  uint64_t v5 = sub_25A6C73A0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*TrustedCloudComputeError.TimeoutErrorInfo.retryAfterDate.modify())()
{
  return nullsub_1;
}

uint64_t TrustedCloudComputeError.TimeoutErrorInfo.init(reason:retryAfterDate:)@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_25A66D4F0(a1, a2, type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo, a3);
}

uint64_t sub_25A66D4F0@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X2>, unsigned char *a4@<X8>)
{
  *a4 = *a1;
  uint64_t v5 = &a4[*(int *)(a3(0) + 20)];
  uint64_t v6 = sub_25A6C73A0();
  uint64_t v7 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  return v7(v5, a2, v6);
}

BOOL static TrustedCloudComputeError.TimeoutErrorInfo.Reason.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t TrustedCloudComputeError.TimeoutErrorInfo.Reason.hash(into:)()
{
  return sub_25A6C7AB0();
}

unint64_t sub_25A66D5BC()
{
  if (*v0) {
    return 0xD000000000000014;
  }
  else {
    return 0xD000000000000013;
  }
}

uint64_t sub_25A66D5F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25A68347C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25A66D620(uint64_t a1)
{
  unint64_t v2 = sub_25A66DA2C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A66D65C(uint64_t a1)
{
  unint64_t v2 = sub_25A66DA2C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25A66D698(uint64_t a1)
{
  unint64_t v2 = sub_25A66DA80();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A66D6D4(uint64_t a1)
{
  unint64_t v2 = sub_25A66DA80();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25A66D710(uint64_t a1)
{
  unint64_t v2 = sub_25A66DAD4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A66D74C(uint64_t a1)
{
  unint64_t v2 = sub_25A66DAD4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TrustedCloudComputeError.TimeoutErrorInfo.Reason.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44B9A8);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x270FA5388]();
  uint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44B9B0);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x270FA5388]();
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44B9B8);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A66DA2C();
  sub_25A6C7B00();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_25A66DA80();
    uint64_t v14 = v18;
    sub_25A6C7910();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_25A66DAD4();
    sub_25A6C7910();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

unint64_t sub_25A66DA2C()
{
  unint64_t result = qword_26A44B9C0;
  if (!qword_26A44B9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44B9C0);
  }
  return result;
}

unint64_t sub_25A66DA80()
{
  unint64_t result = qword_26A44B9C8;
  if (!qword_26A44B9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44B9C8);
  }
  return result;
}

unint64_t sub_25A66DAD4()
{
  unint64_t result = qword_26A44B9D0;
  if (!qword_26A44B9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44B9D0);
  }
  return result;
}

uint64_t TrustedCloudComputeError.TimeoutErrorInfo.Reason.hashValue.getter()
{
  return sub_25A6C7AE0();
}

uint64_t TrustedCloudComputeError.TimeoutErrorInfo.Reason.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44B9D8);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44B9E0);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44B9E8);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A66DA2C();
  uint64_t v11 = v32;
  sub_25A6C7AF0();
  if (v11) {
    goto LABEL_6;
  }
  char v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  uint64_t v14 = v10;
  uint64_t v15 = sub_25A6C7900();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_25A6C7780();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A44B978);
    *char v22 = &type metadata for TrustedCloudComputeError.TimeoutErrorInfo.Reason;
    sub_25A6C7840();
    sub_25A6C7770();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x263F8DCB0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_25A66DA80();
    uint64_t v18 = v14;
    sub_25A6C7830();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_25A66DAD4();
    sub_25A6C7830();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

BOOL sub_25A66DFC8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_25A66DFE0()
{
  return sub_25A6C7AB0();
}

uint64_t sub_25A66E00C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return TrustedCloudComputeError.TimeoutErrorInfo.Reason.init(from:)(a1, a2);
}

uint64_t sub_25A66E024(void *a1)
{
  return TrustedCloudComputeError.TimeoutErrorInfo.Reason.encode(to:)(a1);
}

uint64_t sub_25A66E03C()
{
  if (*v0) {
    return 0x7466417972746572;
  }
  else {
    return 0x6E6F73616572;
  }
}

uint64_t sub_25A66E080@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25A683568(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25A66E0A8(uint64_t a1)
{
  unint64_t v2 = sub_25A66E2F0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A66E0E4(uint64_t a1)
{
  unint64_t v2 = sub_25A66E2F0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TrustedCloudComputeError.TimeoutErrorInfo.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44B9F0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A66E2F0();
  sub_25A6C7B00();
  v10[15] = *v3;
  v10[14] = 0;
  sub_25A66E344();
  sub_25A6C7950();
  if (!v2)
  {
    type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo(0);
    v10[13] = 1;
    sub_25A6C73A0();
    sub_25A66BAB0(&qword_26B329B28, MEMORY[0x263F07490]);
    sub_25A6C79B0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_25A66E2F0()
{
  unint64_t result = qword_26A44B9F8;
  if (!qword_26A44B9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44B9F8);
  }
  return result;
}

unint64_t sub_25A66E344()
{
  unint64_t result = qword_26A44BA00;
  if (!qword_26A44BA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BA00);
  }
  return result;
}

uint64_t TrustedCloudComputeError.TimeoutErrorInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v25 = sub_25A6C73A0();
  uint64_t v23 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BA08);
  uint64_t v24 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo(0);
  MEMORY[0x270FA5388]();
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A66E2F0();
  sub_25A6C7AF0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v21 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v24;
  uint64_t v12 = v25;
  char v28 = 0;
  sub_25A66E6D4();
  uint64_t v14 = v26;
  sub_25A6C7880();
  uint64_t v20 = v11;
  *uint64_t v11 = v29;
  char v27 = 1;
  sub_25A66BAB0(&qword_26A44B8F8, MEMORY[0x263F07490]);
  uint64_t v15 = v5;
  sub_25A6C78E0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v14);
  uint64_t v16 = v22;
  uint64_t v17 = (uint64_t)v20;
  (*(void (**)(unsigned char *, char *, uint64_t))(v23 + 32))(&v20[*(int *)(v21 + 20)], v15, v12);
  sub_25A66D214(v17, v16, type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_25A66D27C(v17, type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo);
}

unint64_t sub_25A66E6D4()
{
  unint64_t result = qword_26A44BA10;
  if (!qword_26A44BA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BA10);
  }
  return result;
}

uint64_t sub_25A66E728@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TrustedCloudComputeError.TimeoutErrorInfo.init(from:)(a1, a2);
}

uint64_t sub_25A66E740(void *a1)
{
  return TrustedCloudComputeError.TimeoutErrorInfo.encode(to:)(a1);
}

uint64_t (*TrustedCloudComputeError.InvalidRequestErrorInfo.reason.modify())()
{
  return nullsub_1;
}

uint64_t static TrustedCloudComputeError.InvalidRequestErrorInfo.Reason.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_25A66E780()
{
  return 1;
}

uint64_t sub_25A66E790()
{
  return 0x5764696C61766E69;
}

uint64_t sub_25A66E7B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x5764696C61766E69 && a2 == 0xEF64616F6C6B726FLL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_25A6C7A00();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_25A66E870(uint64_t a1)
{
  unint64_t v2 = sub_25A66EB30();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A66E8AC(uint64_t a1)
{
  unint64_t v2 = sub_25A66EB30();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25A66E8E8(uint64_t a1)
{
  unint64_t v2 = sub_25A66EB84();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A66E924(uint64_t a1)
{
  unint64_t v2 = sub_25A66EB84();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TrustedCloudComputeError.InvalidRequestErrorInfo.Reason.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BA18);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388]();
  char v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BA20);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A66EB30();
  sub_25A6C7B00();
  sub_25A66EB84();
  sub_25A6C7910();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_25A66EB30()
{
  unint64_t result = qword_26A44BA28;
  if (!qword_26A44BA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BA28);
  }
  return result;
}

unint64_t sub_25A66EB84()
{
  unint64_t result = qword_26A44BA30;
  if (!qword_26A44BA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BA30);
  }
  return result;
}

uint64_t TrustedCloudComputeError.InvalidRequestErrorInfo.Reason.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BA38);
  uint64_t v16 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388]();
  char v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BA40);
  uint64_t v6 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A66EB30();
  sub_25A6C7AF0();
  if (!v1)
  {
    uint64_t v9 = v16;
    uint64_t v15 = v6;
    if (*(void *)(sub_25A6C7900() + 16) == 1)
    {
      sub_25A66EB84();
      sub_25A6C7830();
      uint64_t v10 = v15;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v3);
    }
    else
    {
      uint64_t v11 = sub_25A6C7780();
      swift_allocError();
      uint64_t v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A44B978);
      *uint64_t v13 = &type metadata for TrustedCloudComputeError.InvalidRequestErrorInfo.Reason;
      sub_25A6C7840();
      sub_25A6C7770();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x263F8DCB0], v11);
      swift_willThrow();
      uint64_t v10 = v15;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_25A66EEC4(void *a1)
{
  return TrustedCloudComputeError.InvalidRequestErrorInfo.Reason.init(from:)(a1);
}

uint64_t sub_25A66EEDC(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BA18);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388]();
  char v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BA20);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A66EB30();
  sub_25A6C7B00();
  sub_25A66EB84();
  sub_25A6C7910();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_25A66F0AC()
{
  return 0x6E6F73616572;
}

uint64_t sub_25A66F0C4(uint64_t a1)
{
  unint64_t v2 = sub_25A66F284();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A66F100(uint64_t a1)
{
  unint64_t v2 = sub_25A66F284();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TrustedCloudComputeError.InvalidRequestErrorInfo.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BA48);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A66F284();
  sub_25A6C7B00();
  char v10 = v7;
  sub_25A66F2D8();
  sub_25A6C7950();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_25A66F284()
{
  unint64_t result = qword_26A44BA50;
  if (!qword_26A44BA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BA50);
  }
  return result;
}

unint64_t sub_25A66F2D8()
{
  unint64_t result = qword_26A44BA58;
  if (!qword_26A44BA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BA58);
  }
  return result;
}

uint64_t TrustedCloudComputeError.InvalidRequestErrorInfo.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BA60);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A66F284();
  sub_25A6C7AF0();
  if (!v2)
  {
    sub_25A66F494();
    sub_25A6C7880();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_25A66F494()
{
  unint64_t result = qword_26A44BA68;
  if (!qword_26A44BA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BA68);
  }
  return result;
}

uint64_t sub_25A66F4E8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return TrustedCloudComputeError.InvalidRequestErrorInfo.init(from:)(a1, a2);
}

uint64_t sub_25A66F500(void *a1)
{
  return TrustedCloudComputeError.InvalidRequestErrorInfo.encode(to:)(a1);
}

void TrustedCloudComputeError.UnauthorizedErrorInfo.reason.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *TrustedCloudComputeError.UnauthorizedErrorInfo.reason.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*TrustedCloudComputeError.UnauthorizedErrorInfo.reason.modify())()
{
  return nullsub_1;
}

unsigned char *TrustedCloudComputeError.UnauthorizedErrorInfo.init(reason:)@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t static TrustedCloudComputeError.UnauthorizedErrorInfo.Reason.== infix(_:_:)()
{
  return 1;
}

uint64_t TrustedCloudComputeError.UnauthorizedErrorInfo.Reason.hash(into:)()
{
  return sub_25A6C7AB0();
}

uint64_t sub_25A66F58C()
{
  return 0x6572617774666F73;
}

uint64_t sub_25A66F5B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6572617774666F73 && a2 == 0xEF64656B636F6C42)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_25A6C7A00();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_25A66F66C(uint64_t a1)
{
  unint64_t v2 = sub_25A66F95C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A66F6A8(uint64_t a1)
{
  unint64_t v2 = sub_25A66F95C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25A66F6E4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_25A66F714(uint64_t a1)
{
  unint64_t v2 = sub_25A66F9B0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A66F750(uint64_t a1)
{
  unint64_t v2 = sub_25A66F9B0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TrustedCloudComputeError.UnauthorizedErrorInfo.Reason.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BA70);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388]();
  char v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BA78);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A66F95C();
  sub_25A6C7B00();
  sub_25A66F9B0();
  sub_25A6C7910();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_25A66F95C()
{
  unint64_t result = qword_26A44BA80;
  if (!qword_26A44BA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BA80);
  }
  return result;
}

unint64_t sub_25A66F9B0()
{
  unint64_t result = qword_26A44BA88;
  if (!qword_26A44BA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BA88);
  }
  return result;
}

uint64_t _s19PrivateCloudCompute07TrustedbC5ErrorO014InvalidRequestE4InfoV6ReasonO9hashValueSivg_0()
{
  return sub_25A6C7AE0();
}

uint64_t TrustedCloudComputeError.UnauthorizedErrorInfo.Reason.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BA90);
  uint64_t v16 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388]();
  char v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BA98);
  uint64_t v6 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A66F95C();
  sub_25A6C7AF0();
  if (!v1)
  {
    uint64_t v9 = v16;
    uint64_t v15 = v6;
    if (*(void *)(sub_25A6C7900() + 16) == 1)
    {
      sub_25A66F9B0();
      sub_25A6C7830();
      uint64_t v10 = v15;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v3);
    }
    else
    {
      uint64_t v11 = sub_25A6C7780();
      swift_allocError();
      uint64_t v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A44B978);
      *uint64_t v13 = &type metadata for TrustedCloudComputeError.UnauthorizedErrorInfo.Reason;
      sub_25A6C7840();
      sub_25A6C7770();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x263F8DCB0], v11);
      swift_willThrow();
      uint64_t v10 = v15;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_25A66FD34(void *a1)
{
  return TrustedCloudComputeError.UnauthorizedErrorInfo.Reason.init(from:)(a1);
}

uint64_t sub_25A66FD4C(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BA70);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388]();
  char v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BA78);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A66F95C();
  sub_25A6C7B00();
  sub_25A66F9B0();
  sub_25A6C7910();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_25A66FF1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6E6F73616572 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_25A6C7A00();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_25A66FFAC(uint64_t a1)
{
  unint64_t v2 = sub_25A67016C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A66FFE8(uint64_t a1)
{
  unint64_t v2 = sub_25A67016C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TrustedCloudComputeError.UnauthorizedErrorInfo.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BAA0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A67016C();
  sub_25A6C7B00();
  char v10 = v7;
  sub_25A6701C0();
  sub_25A6C7950();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_25A67016C()
{
  unint64_t result = qword_26A44BAA8;
  if (!qword_26A44BAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BAA8);
  }
  return result;
}

unint64_t sub_25A6701C0()
{
  unint64_t result = qword_26A44BAB0;
  if (!qword_26A44BAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BAB0);
  }
  return result;
}

uint64_t TrustedCloudComputeError.UnauthorizedErrorInfo.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BAB8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A67016C();
  sub_25A6C7AF0();
  if (!v2)
  {
    sub_25A67037C();
    sub_25A6C7880();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_25A67037C()
{
  unint64_t result = qword_26A44BAC0;
  if (!qword_26A44BAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BAC0);
  }
  return result;
}

uint64_t sub_25A6703D0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return TrustedCloudComputeError.UnauthorizedErrorInfo.init(from:)(a1, a2);
}

uint64_t sub_25A6703E8(void *a1)
{
  return TrustedCloudComputeError.UnauthorizedErrorInfo.encode(to:)(a1);
}

uint64_t TrustedCloudComputeError.ServerErrorInfo.responseMetadata.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_25A66D214(v1, a1, (uint64_t (*)(void))type metadata accessor for TC2RopesResponseMetadata);
}

uint64_t TrustedCloudComputeError.ServerErrorInfo.responseMetadata.setter(uint64_t a1)
{
  return sub_25A67043C(a1, v1);
}

uint64_t sub_25A67043C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TC2RopesResponseMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*TrustedCloudComputeError.ServerErrorInfo.responseMetadata.modify())()
{
  return nullsub_1;
}

uint64_t TrustedCloudComputeError.ServerErrorInfo.retryable.getter()
{
  return *(unsigned __int8 *)(v0
                            + *(int *)(type metadata accessor for TrustedCloudComputeError.ServerErrorInfo(0) + 20));
}

uint64_t type metadata accessor for TrustedCloudComputeError.ServerErrorInfo(uint64_t a1)
{
  return sub_25A675B1C(a1, (uint64_t *)&unk_26B329B40);
}

uint64_t TrustedCloudComputeError.ServerErrorInfo.retryable.setter(char a1)
{
  uint64_t result = type metadata accessor for TrustedCloudComputeError.ServerErrorInfo(0);
  *(unsigned char *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*TrustedCloudComputeError.ServerErrorInfo.retryable.modify())()
{
  return nullsub_1;
}

uint64_t TrustedCloudComputeError.ServerErrorInfo.retryAfterDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TrustedCloudComputeError.ServerErrorInfo(0) + 24);
  return sub_25A6705C0(v3, a1);
}

uint64_t sub_25A6705C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BAC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t TrustedCloudComputeError.ServerErrorInfo.retryAfterDate.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TrustedCloudComputeError.ServerErrorInfo(0) + 24);
  return sub_25A67066C(a1, v3);
}

uint64_t sub_25A67066C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BAC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*TrustedCloudComputeError.ServerErrorInfo.retryAfterDate.modify())()
{
  return nullsub_1;
}

uint64_t TrustedCloudComputeError.ServerErrorInfo.init(responseMetadata:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BAC8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TrustedCloudComputeError.ServerErrorInfo(0);
  uint64_t v8 = a2 + *(int *)(v7 + 24);
  uint64_t v9 = sub_25A6C73A0();
  uint64_t v10 = *(void *)(v9 - 8);
  char v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v11(v8, 1, 1, v9);
  sub_25A66D214((uint64_t)a1, a2, (uint64_t (*)(void))type metadata accessor for TC2RopesResponseMetadata);
  if (a1[64] == 1)
  {
    if (a1[16] & 1) == 0 && (unsigned int v12 = a1[8] - 17, v12 < 0x15) && ((0x1E19CBu >> v12))
    {
      LOBYTE(v14) = 1;
    }
    else
    {
      unsigned int v13 = a1[1];
      if (v13 > 0xE || (LOBYTE(v14) = 1, ((1 << v13) & 0x4110) == 0))
      {
        unsigned int v15 = *a1;
        BOOL v16 = v15 >= 0x2D;
        unint64_t v14 = (0x108002000000uLL >> v15) & 1;
        if (v16) {
          LOBYTE(v14) = 0;
        }
      }
    }
    *(unsigned char *)(a2 + *(int *)(v7 + 20)) = v14;
    uint64_t v17 = type metadata accessor for TC2RopesResponseMetadata();
    (*(void (**)(char *, unsigned __int8 *, uint64_t))(v10 + 16))(v6, &a1[*(int *)(v17 + 60)], v9);
  }
  else
  {
    *(unsigned char *)(a2 + *(int *)(v7 + 20)) = 1;
    type metadata accessor for TC2RopesResponseMetadata();
    sub_25A6C7360();
  }
  sub_25A66D27C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for TC2RopesResponseMetadata);
  v11((uint64_t)v6, 0, 1, v9);
  return sub_25A67066C((uint64_t)v6, v8);
}

BOOL sub_25A670960(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unint64_t sub_25A670974()
{
  uint64_t v1 = 0x6C62617972746572;
  if (*v0 != 1) {
    uint64_t v1 = 0x7466417972746572;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_25A6709E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25A683678(a1, a2);
  *a3 = result;
  return result;
}

void sub_25A670A0C(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_25A670A18(uint64_t a1)
{
  unint64_t v2 = sub_25A670CC0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A670A54(uint64_t a1)
{
  unint64_t v2 = sub_25A670CC0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TrustedCloudComputeError.ServerErrorInfo.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BAD0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A670CC0();
  sub_25A6C7B00();
  v8[15] = 0;
  type metadata accessor for TC2RopesResponseMetadata();
  sub_25A66BAB0(&qword_26A44BAE0, (void (*)(uint64_t))type metadata accessor for TC2RopesResponseMetadata);
  sub_25A6C79B0();
  if (!v1)
  {
    type metadata accessor for TrustedCloudComputeError.ServerErrorInfo(0);
    v8[14] = 1;
    sub_25A6C7970();
    v8[13] = 2;
    sub_25A6C73A0();
    sub_25A66BAB0(&qword_26B329B28, MEMORY[0x263F07490]);
    sub_25A6C7950();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_25A670CC0()
{
  unint64_t result = qword_26A44BAD8;
  if (!qword_26A44BAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BAD8);
  }
  return result;
}

uint64_t TrustedCloudComputeError.ServerErrorInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BAC8);
  MEMORY[0x270FA5388]();
  uint64_t v22 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TC2RopesResponseMetadata();
  MEMORY[0x270FA5388]();
  uint64_t v24 = (uint64_t)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BAE8);
  uint64_t v23 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TrustedCloudComputeError.ServerErrorInfo(0);
  uint64_t v8 = MEMORY[0x270FA5388]();
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t)&v10[*(int *)(v8 + 24)];
  uint64_t v12 = sub_25A6C73A0();
  unsigned int v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
  uint64_t v26 = v11;
  v13(v11, 1, 1, v12);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A670CC0();
  uint64_t v14 = v27;
  sub_25A6C7AF0();
  if (v14)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_25A671154(v26);
  }
  else
  {
    uint64_t v15 = v23;
    char v30 = 0;
    sub_25A66BAB0(&qword_26A44BAF0, (void (*)(uint64_t))type metadata accessor for TC2RopesResponseMetadata);
    sub_25A6C78E0();
    uint64_t v16 = (uint64_t)v10;
    sub_25A675CF8(v24, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for TC2RopesResponseMetadata);
    char v29 = 1;
    v10[*(int *)(v7 + 20)] = sub_25A6C78A0() & 1;
    char v28 = 2;
    sub_25A66BAB0(&qword_26A44B8F8, MEMORY[0x263F07490]);
    uint64_t v17 = (uint64_t)v22;
    uint64_t v18 = v25;
    sub_25A6C7880();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v6, v18);
    sub_25A67066C(v17, v26);
    sub_25A66D214(v16, v21, type metadata accessor for TrustedCloudComputeError.ServerErrorInfo);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_25A66D27C(v16, type metadata accessor for TrustedCloudComputeError.ServerErrorInfo);
  }
}

uint64_t sub_25A671154(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BAC8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25A6711B4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TrustedCloudComputeError.ServerErrorInfo.init(from:)(a1, a2);
}

uint64_t sub_25A6711CC(void *a1)
{
  return TrustedCloudComputeError.ServerErrorInfo.encode(to:)(a1);
}

uint64_t TrustedCloudComputeError.InternalErrorInfo.message.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrustedCloudComputeError.InternalErrorInfo.message.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*TrustedCloudComputeError.InternalErrorInfo.message.modify())()
{
  return nullsub_1;
}

void TrustedCloudComputeError.InternalErrorInfo.reason.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

unsigned char *TrustedCloudComputeError.InternalErrorInfo.reason.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 16) = *result;
  return result;
}

uint64_t (*TrustedCloudComputeError.InternalErrorInfo.reason.modify())()
{
  return nullsub_1;
}

PrivateCloudCompute::TrustedCloudComputeError::InternalErrorInfo __swiftcall TrustedCloudComputeError.InternalErrorInfo.init(message:)(Swift::String message)
{
  *(Swift::String *)uint64_t v1 = message;
  *(unsigned char *)(v1 + 16) = 12;
  result.message = message;
  return result;
}

PrivateCloudCompute::TrustedCloudComputeError::InternalErrorInfo __swiftcall TrustedCloudComputeError.InternalErrorInfo.init(message:reason:)(Swift::String message, PrivateCloudCompute::TrustedCloudComputeError::InternalErrorInfo::Reason reason)
{
  char v3 = *(unsigned char *)reason;
  *(Swift::String *)uint64_t v2 = message;
  *(unsigned char *)(v2 + 16) = v3;
  result.message = message;
  result.reason.value = reason;
  return result;
}

BOOL static TrustedCloudComputeError.InternalErrorInfo.Reason.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TrustedCloudComputeError.InternalErrorInfo.Reason.hash(into:)()
{
  return sub_25A6C7AB0();
}

unint64_t sub_25A671304(char a1)
{
  unint64_t result = 0xD000000000000018;
  switch(a1)
  {
    case 1:
    case 3:
    case 11:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
      unint64_t result = 0xD000000000000020;
      break;
    case 4:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 5:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000027;
      break;
    case 7:
      unint64_t result = 0xD000000000000025;
      break;
    case 8:
      unint64_t result = 0xD000000000000026;
      break;
    case 9:
      unint64_t result = 0xD000000000000018;
      break;
    case 10:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_25A671434()
{
  return sub_25A671304(*v0);
}

uint64_t sub_25A67143C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25A6837FC(a1, a2);
  *a3 = result;
  return result;
}

void sub_25A671464(unsigned char *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_25A671470(uint64_t a1)
{
  unint64_t v2 = sub_25A6725AC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A6714AC(uint64_t a1)
{
  unint64_t v2 = sub_25A6725AC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25A6714E8(uint64_t a1)
{
  unint64_t v2 = sub_25A6728F4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A671524(uint64_t a1)
{
  unint64_t v2 = sub_25A6728F4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25A671560(uint64_t a1)
{
  unint64_t v2 = sub_25A672948();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A67159C(uint64_t a1)
{
  unint64_t v2 = sub_25A672948();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25A6715D8(uint64_t a1)
{
  unint64_t v2 = sub_25A67284C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A671614(uint64_t a1)
{
  unint64_t v2 = sub_25A67284C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25A671650(uint64_t a1)
{
  unint64_t v2 = sub_25A672654();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A67168C(uint64_t a1)
{
  unint64_t v2 = sub_25A672654();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25A6716C8(uint64_t a1)
{
  unint64_t v2 = sub_25A6728A0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A671704(uint64_t a1)
{
  unint64_t v2 = sub_25A6728A0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25A671740(uint64_t a1)
{
  unint64_t v2 = sub_25A6726A8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A67177C(uint64_t a1)
{
  unint64_t v2 = sub_25A6726A8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25A6717B8(uint64_t a1)
{
  unint64_t v2 = sub_25A6727F8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A6717F4(uint64_t a1)
{
  unint64_t v2 = sub_25A6727F8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25A671830(uint64_t a1)
{
  unint64_t v2 = sub_25A672750();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A67186C(uint64_t a1)
{
  unint64_t v2 = sub_25A672750();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25A6718A8(uint64_t a1)
{
  unint64_t v2 = sub_25A6726FC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A6718E4(uint64_t a1)
{
  unint64_t v2 = sub_25A6726FC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25A671920(uint64_t a1)
{
  unint64_t v2 = sub_25A6727A4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A67195C(uint64_t a1)
{
  unint64_t v2 = sub_25A6727A4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25A671998(uint64_t a1)
{
  unint64_t v2 = sub_25A672600();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A6719D4(uint64_t a1)
{
  unint64_t v2 = sub_25A672600();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25A671A10(uint64_t a1)
{
  unint64_t v2 = sub_25A67299C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A671A4C(uint64_t a1)
{
  unint64_t v2 = sub_25A67299C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TrustedCloudComputeError.InternalErrorInfo.Reason.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BAF8);
  uint64_t v73 = *(void *)(v4 - 8);
  uint64_t v74 = v4;
  MEMORY[0x270FA5388]();
  v72 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BB00);
  uint64_t v70 = *(void *)(v6 - 8);
  uint64_t v71 = v6;
  MEMORY[0x270FA5388]();
  v69 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BB08);
  uint64_t v67 = *(void *)(v8 - 8);
  uint64_t v68 = v8;
  MEMORY[0x270FA5388]();
  v66 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BB10);
  uint64_t v64 = *(void *)(v10 - 8);
  uint64_t v65 = v10;
  MEMORY[0x270FA5388]();
  v63 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BB18);
  uint64_t v61 = *(void *)(v12 - 8);
  uint64_t v62 = v12;
  MEMORY[0x270FA5388]();
  v60 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BB20);
  uint64_t v58 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388]();
  v57 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BB28);
  uint64_t v55 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388]();
  char v54 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BB30);
  uint64_t v52 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388]();
  v51 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BB38);
  uint64_t v49 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388]();
  v48 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BB40);
  uint64_t v46 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v45 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BB48);
  uint64_t v44 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v21 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BB50);
  uint64_t v43 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v24 = (char *)&v43 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BB58);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v76 = v25;
  uint64_t v77 = v26;
  MEMORY[0x270FA5388]();
  char v28 = (char *)&v43 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A6725AC();
  v75 = v28;
  sub_25A6C7B00();
  switch(v29)
  {
    case 1:
      char v79 = 1;
      sub_25A672948();
      char v34 = v75;
      uint64_t v33 = v76;
      sub_25A6C7910();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v21, v19);
      goto LABEL_15;
    case 2:
      char v80 = 2;
      sub_25A6728F4();
      uint64_t v35 = v45;
      char v34 = v75;
      uint64_t v33 = v76;
      sub_25A6C7910();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v35, v47);
      goto LABEL_15;
    case 3:
      char v81 = 3;
      sub_25A6728A0();
      uint64_t v36 = v48;
      char v34 = v75;
      uint64_t v33 = v76;
      sub_25A6C7910();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v36, v50);
      goto LABEL_15;
    case 4:
      char v82 = 4;
      sub_25A67284C();
      uint64_t v37 = v51;
      char v34 = v75;
      uint64_t v33 = v76;
      sub_25A6C7910();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v37, v53);
      goto LABEL_15;
    case 5:
      char v83 = 5;
      sub_25A6727F8();
      v38 = v54;
      char v34 = v75;
      uint64_t v33 = v76;
      sub_25A6C7910();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v38, v56);
      goto LABEL_15;
    case 6:
      char v84 = 6;
      sub_25A6727A4();
      uint64_t v39 = v57;
      char v34 = v75;
      uint64_t v33 = v76;
      sub_25A6C7910();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v39, v59);
      goto LABEL_15;
    case 7:
      char v85 = 7;
      sub_25A672750();
      v40 = v60;
      char v34 = v75;
      uint64_t v33 = v76;
      sub_25A6C7910();
      uint64_t v42 = v61;
      uint64_t v41 = v62;
      goto LABEL_14;
    case 8:
      char v86 = 8;
      sub_25A6726FC();
      v40 = v63;
      char v34 = v75;
      uint64_t v33 = v76;
      sub_25A6C7910();
      uint64_t v42 = v64;
      uint64_t v41 = v65;
      goto LABEL_14;
    case 9:
      char v87 = 9;
      sub_25A6726A8();
      v40 = v66;
      char v34 = v75;
      uint64_t v33 = v76;
      sub_25A6C7910();
      uint64_t v42 = v67;
      uint64_t v41 = v68;
      goto LABEL_14;
    case 10:
      char v88 = 10;
      sub_25A672654();
      v40 = v69;
      char v34 = v75;
      uint64_t v33 = v76;
      sub_25A6C7910();
      uint64_t v42 = v70;
      uint64_t v41 = v71;
      goto LABEL_14;
    case 11:
      char v89 = 11;
      sub_25A672600();
      v40 = v72;
      char v34 = v75;
      uint64_t v33 = v76;
      sub_25A6C7910();
      uint64_t v42 = v73;
      uint64_t v41 = v74;
LABEL_14:
      (*(void (**)(char *, uint64_t))(v42 + 8))(v40, v41);
LABEL_15:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v34, v33);
      break;
    default:
      char v78 = 0;
      sub_25A67299C();
      char v30 = v75;
      uint64_t v31 = v76;
      sub_25A6C7910();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v24, v22);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v30, v31);
      break;
  }
  return result;
}

unint64_t sub_25A6725AC()
{
  unint64_t result = qword_26A44BB60;
  if (!qword_26A44BB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BB60);
  }
  return result;
}

unint64_t sub_25A672600()
{
  unint64_t result = qword_26A44BB68;
  if (!qword_26A44BB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BB68);
  }
  return result;
}

unint64_t sub_25A672654()
{
  unint64_t result = qword_26A44BB70;
  if (!qword_26A44BB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BB70);
  }
  return result;
}

unint64_t sub_25A6726A8()
{
  unint64_t result = qword_26A44BB78;
  if (!qword_26A44BB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BB78);
  }
  return result;
}

unint64_t sub_25A6726FC()
{
  unint64_t result = qword_26A44BB80;
  if (!qword_26A44BB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BB80);
  }
  return result;
}

unint64_t sub_25A672750()
{
  unint64_t result = qword_26A44BB88;
  if (!qword_26A44BB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BB88);
  }
  return result;
}

unint64_t sub_25A6727A4()
{
  unint64_t result = qword_26A44BB90;
  if (!qword_26A44BB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BB90);
  }
  return result;
}

unint64_t sub_25A6727F8()
{
  unint64_t result = qword_26A44BB98;
  if (!qword_26A44BB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BB98);
  }
  return result;
}

unint64_t sub_25A67284C()
{
  unint64_t result = qword_26A44BBA0;
  if (!qword_26A44BBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BBA0);
  }
  return result;
}

unint64_t sub_25A6728A0()
{
  unint64_t result = qword_26A44BBA8;
  if (!qword_26A44BBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BBA8);
  }
  return result;
}

unint64_t sub_25A6728F4()
{
  unint64_t result = qword_26A44BBB0;
  if (!qword_26A44BBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BBB0);
  }
  return result;
}

unint64_t sub_25A672948()
{
  unint64_t result = qword_26A44BBB8;
  if (!qword_26A44BBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BBB8);
  }
  return result;
}

unint64_t sub_25A67299C()
{
  unint64_t result = qword_26A44BBC0;
  if (!qword_26A44BBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BBC0);
  }
  return result;
}

uint64_t _s19PrivateCloudCompute07TrustedbC5ErrorO16AvailabilityInfoV6ReasonO9hashValueSivg_0()
{
  return sub_25A6C7AE0();
}

uint64_t TrustedCloudComputeError.InternalErrorInfo.Reason.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  char v82 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BBC8);
  uint64_t v73 = *(void *)(v3 - 8);
  uint64_t v74 = v3;
  MEMORY[0x270FA5388]();
  char v85 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BBD0);
  uint64_t v71 = *(void *)(v5 - 8);
  uint64_t v72 = v5;
  MEMORY[0x270FA5388]();
  char v81 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BBD8);
  uint64_t v69 = *(void *)(v7 - 8);
  uint64_t v70 = v7;
  MEMORY[0x270FA5388]();
  char v80 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BBE0);
  uint64_t v52 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388]();
  char v79 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BBE8);
  uint64_t v67 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388]();
  char v78 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BBF0);
  uint64_t v65 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388]();
  v75 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BBF8);
  uint64_t v64 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388]();
  char v84 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BC00);
  uint64_t v61 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388]();
  char v83 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BC08);
  uint64_t v59 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v77 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BC10);
  uint64_t v57 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v76 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BC18);
  uint64_t v55 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BC20);
  uint64_t v54 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BC28);
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v24 = (char *)&v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1[3];
  char v86 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v25);
  sub_25A6725AC();
  uint64_t v26 = v87;
  sub_25A6C7AF0();
  if (v26) {
    goto LABEL_6;
  }
  v51 = v20;
  uint64_t v50 = v18;
  uint64_t v27 = v83;
  char v28 = v84;
  uint64_t v29 = v85;
  uint64_t v87 = v22;
  char v30 = v24;
  uint64_t v31 = sub_25A6C7900();
  if (*(void *)(v31 + 16) != 1)
  {
    uint64_t v37 = sub_25A6C7780();
    swift_allocError();
    uint64_t v39 = v38;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A44B978);
    *uint64_t v39 = &type metadata for TrustedCloudComputeError.InternalErrorInfo.Reason;
    sub_25A6C7840();
    sub_25A6C7770();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v37 - 8) + 104))(v39, *MEMORY[0x263F8DCB0], v37);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v87 + 8))(v30, v21);
LABEL_6:
    uint64_t v40 = (uint64_t)v86;
    return __swift_destroy_boxed_opaque_existential_1(v40);
  }
  char v32 = *(unsigned char *)(v31 + 32);
  switch(v32)
  {
    case 1:
      v88[5] = 1;
      sub_25A672948();
      sub_25A6C7830();
      char v34 = *(void (**)(char *, uint64_t))(v55 + 8);
      uint64_t v35 = v17;
      uint64_t v36 = (char **)v88;
      goto LABEL_16;
    case 2:
      v88[6] = 2;
      sub_25A6728F4();
      uint64_t v42 = v76;
      sub_25A6C7830();
      char v34 = *(void (**)(char *, uint64_t))(v57 + 8);
      uint64_t v35 = v42;
      uint64_t v36 = (char **)&v89;
      goto LABEL_16;
    case 3:
      v88[7] = 3;
      sub_25A6728A0();
      uint64_t v43 = v77;
      sub_25A6C7830();
      char v34 = *(void (**)(char *, uint64_t))(v59 + 8);
      uint64_t v35 = v43;
      uint64_t v36 = (char **)&v98;
      goto LABEL_16;
    case 4:
      char v90 = 4;
      sub_25A67284C();
      sub_25A6C7830();
      char v34 = *(void (**)(char *, uint64_t))(v61 + 8);
      uint64_t v35 = v27;
      uint64_t v36 = (char **)&v99;
      goto LABEL_16;
    case 5:
      char v91 = 5;
      sub_25A6727F8();
      sub_25A6C7830();
      char v34 = *(void (**)(char *, uint64_t))(v64 + 8);
      uint64_t v35 = v28;
      uint64_t v36 = (char **)&v100;
      goto LABEL_16;
    case 6:
      char v92 = 6;
      sub_25A6727A4();
      uint64_t v44 = v75;
      sub_25A6C7830();
      char v34 = *(void (**)(char *, uint64_t))(v65 + 8);
      uint64_t v35 = v44;
      uint64_t v36 = (char **)&v101;
      goto LABEL_16;
    case 7:
      char v93 = 7;
      sub_25A672750();
      uint64_t v45 = v78;
      sub_25A6C7830();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v45, v68);
      goto LABEL_21;
    case 8:
      char v94 = 8;
      sub_25A6726FC();
      uint64_t v46 = v79;
      sub_25A6C7830();
      char v34 = *(void (**)(char *, uint64_t))(v52 + 8);
      uint64_t v35 = v46;
      uint64_t v36 = &v85;
      goto LABEL_16;
    case 9:
      char v95 = 9;
      sub_25A6726A8();
      v48 = v80;
      sub_25A6C7830();
      uint64_t v49 = v69;
      uint64_t v47 = v70;
      goto LABEL_19;
    case 10:
      char v96 = 10;
      sub_25A672654();
      v48 = v81;
      sub_25A6C7830();
      uint64_t v49 = v71;
      uint64_t v47 = v72;
LABEL_19:
      char v34 = *(void (**)(char *, uint64_t))(v49 + 8);
      uint64_t v35 = v48;
      goto LABEL_20;
    case 11:
      char v97 = 11;
      sub_25A672600();
      sub_25A6C7830();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v29, v74);
      goto LABEL_21;
    default:
      v88[4] = 0;
      sub_25A67299C();
      uint64_t v33 = v51;
      sub_25A6C7830();
      char v34 = *(void (**)(char *, uint64_t))(v54 + 8);
      uint64_t v35 = v33;
      uint64_t v36 = &v82;
LABEL_16:
      uint64_t v47 = (uint64_t)*(v36 - 32);
LABEL_20:
      v34(v35, v47);
LABEL_21:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v87 + 8))(v30, v21);
      uint64_t v40 = (uint64_t)v86;
      *char v82 = v32;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v40);
}

uint64_t sub_25A67370C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return TrustedCloudComputeError.InternalErrorInfo.Reason.init(from:)(a1, a2);
}

uint64_t sub_25A673724(void *a1)
{
  return TrustedCloudComputeError.InternalErrorInfo.Reason.encode(to:)(a1);
}

uint64_t sub_25A67373C()
{
  return sub_25A6C7AE0();
}

uint64_t sub_25A673780()
{
  if (*v0) {
    return 0x6E6F73616572;
  }
  else {
    return 0x6567617373656DLL;
  }
}

uint64_t sub_25A6737B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25A683C3C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25A6737E0(uint64_t a1)
{
  unint64_t v2 = sub_25A6739E8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A67381C(uint64_t a1)
{
  unint64_t v2 = sub_25A6739E8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TrustedCloudComputeError.InternalErrorInfo.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BC30);
  uint64_t v9 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v10 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A6739E8();
  sub_25A6C7B00();
  char v13 = 0;
  sub_25A6C7960();
  if (!v2)
  {
    char v12 = v10;
    char v11 = 1;
    sub_25A673A3C();
    sub_25A6C7950();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v6, v4);
}

unint64_t sub_25A6739E8()
{
  unint64_t result = qword_26A44BC38;
  if (!qword_26A44BC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BC38);
  }
  return result;
}

unint64_t sub_25A673A3C()
{
  unint64_t result = qword_26A44BC40;
  if (!qword_26A44BC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BC40);
  }
  return result;
}

uint64_t TrustedCloudComputeError.InternalErrorInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BC48);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A6739E8();
  sub_25A6C7AF0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v17 = 0;
  uint64_t v9 = sub_25A6C7890();
  uint64_t v11 = v10;
  char v15 = 1;
  sub_25A673C8C();
  swift_bridgeObjectRetain();
  sub_25A6C7880();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v12 = v16;
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(unsigned char *)(a2 + 16) = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

unint64_t sub_25A673C8C()
{
  unint64_t result = qword_26A44BC50;
  if (!qword_26A44BC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BC50);
  }
  return result;
}

uint64_t sub_25A673CE0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TrustedCloudComputeError.InternalErrorInfo.init(from:)(a1, a2);
}

uint64_t sub_25A673CF8(void *a1)
{
  return TrustedCloudComputeError.InternalErrorInfo.encode(to:)(a1);
}

uint64_t TrustedCloudComputeError.NetworkErrorInfo.domain.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrustedCloudComputeError.NetworkErrorInfo.domain.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*TrustedCloudComputeError.NetworkErrorInfo.domain.modify())()
{
  return nullsub_1;
}

uint64_t TrustedCloudComputeError.NetworkErrorInfo.code.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t TrustedCloudComputeError.NetworkErrorInfo.code.setter(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t (*TrustedCloudComputeError.NetworkErrorInfo.code.modify())()
{
  return nullsub_1;
}

uint64_t TrustedCloudComputeError.NetworkErrorInfo.message.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrustedCloudComputeError.NetworkErrorInfo.message.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*TrustedCloudComputeError.NetworkErrorInfo.message.modify())()
{
  return nullsub_1;
}

void __swiftcall TrustedCloudComputeError.NetworkErrorInfo.init(domain:code:message:)(PrivateCloudCompute::TrustedCloudComputeError::NetworkErrorInfo *__return_ptr retstr, Swift::String domain, Swift::Int code, Swift::String message)
{
  retstr->domain = domain;
  retstr->code = code;
  retstr->message = message;
}

uint64_t sub_25A673E60()
{
  uint64_t v1 = 1701080931;
  if (*v0 != 1) {
    uint64_t v1 = 0x6567617373656DLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E69616D6F64;
  }
}

uint64_t sub_25A673EB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25A683D28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25A673ED8(uint64_t a1)
{
  unint64_t v2 = sub_25A674100();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A673F14(uint64_t a1)
{
  unint64_t v2 = sub_25A674100();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TrustedCloudComputeError.NetworkErrorInfo.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BC58);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  v10[1] = v1[3];
  v10[2] = v7;
  v10[0] = v1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A674100();
  sub_25A6C7B00();
  char v13 = 0;
  uint64_t v8 = v10[3];
  sub_25A6C7960();
  if (!v8)
  {
    char v12 = 1;
    sub_25A6C7990();
    char v11 = 2;
    sub_25A6C7960();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_25A674100()
{
  unint64_t result = qword_26A44BC60;
  if (!qword_26A44BC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BC60);
  }
  return result;
}

uint64_t TrustedCloudComputeError.NetworkErrorInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BC68);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A674100();
  sub_25A6C7AF0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v22 = 0;
  uint64_t v9 = sub_25A6C7890();
  uint64_t v11 = v10;
  char v21 = 1;
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_25A6C78C0();
  char v20 = 2;
  uint64_t v12 = sub_25A6C7890();
  uint64_t v15 = v14;
  char v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v18 = v12;
  v16(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  uint64_t v17 = v18;
  a2[2] = v19;
  a2[3] = v17;
  a2[4] = v15;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_25A674388(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
      unint64_t result = 0x4574756F656D6974;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0x7245726576726573;
      break;
    case 6:
      unint64_t result = 0x6C616E7265746E69;
      break;
    case 7:
      unint64_t result = 0x456B726F7774656ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25A6744A8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return TrustedCloudComputeError.NetworkErrorInfo.init(from:)(a1, a2);
}

uint64_t sub_25A6744C0(void *a1)
{
  return TrustedCloudComputeError.NetworkErrorInfo.encode(to:)(a1);
}

unint64_t sub_25A6744D8()
{
  return sub_25A674388(*v0);
}

uint64_t sub_25A6744E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25A683E68(a1, a2);
  *a3 = result;
  return result;
}

void sub_25A674508(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_25A674514(uint64_t a1)
{
  unint64_t v2 = sub_25A675B54();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A674550(uint64_t a1)
{
  unint64_t v2 = sub_25A675B54();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_25A67458C()
{
  return 0xD000000000000010;
}

uint64_t sub_25A6745A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25A6841F4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_25A6745D4(uint64_t a1)
{
  unint64_t v2 = sub_25A675F58();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A674610(uint64_t a1)
{
  unint64_t v2 = sub_25A675F58();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25A67464C()
{
  return 0x696D694C65746172;
}

uint64_t sub_25A674670@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x696D694C65746172 && a2 == 0xED00006F666E4974)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_25A6C7A00();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_25A67472C(uint64_t a1)
{
  unint64_t v2 = sub_25A675FAC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A674768(uint64_t a1)
{
  unint64_t v2 = sub_25A675FAC();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_25A6747A4()
{
  return 0xD000000000000011;
}

uint64_t sub_25A6747C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25A68427C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_25A6747EC(uint64_t a1)
{
  unint64_t v2 = sub_25A675C50();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A674828(uint64_t a1)
{
  unint64_t v2 = sub_25A675C50();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_25A674864()
{
  return 0xD000000000000017;
}

uint64_t sub_25A674880@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25A684304(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_25A6748AC(uint64_t a1)
{
  unint64_t v2 = sub_25A675E5C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A6748E8(uint64_t a1)
{
  unint64_t v2 = sub_25A675E5C();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_25A674924()
{
  return 0xD000000000000010;
}

uint64_t sub_25A674940@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25A68438C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_25A67496C(uint64_t a1)
{
  unint64_t v2 = sub_25A675BA8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A6749A8(uint64_t a1)
{
  unint64_t v2 = sub_25A675BA8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25A6749E4()
{
  return 0x7245726576726573;
}

uint64_t sub_25A674A08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7245726576726573 && a2 == 0xEF6F666E49726F72)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_25A6C7A00();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_25A674AC4(uint64_t a1)
{
  unint64_t v2 = sub_25A675D60();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A674B00(uint64_t a1)
{
  unint64_t v2 = sub_25A675D60();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_25A674B3C()
{
  return 0xD000000000000010;
}

uint64_t sub_25A674B58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25A684414(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_25A674B84(uint64_t a1)
{
  unint64_t v2 = sub_25A675F04();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A674BC0(uint64_t a1)
{
  unint64_t v2 = sub_25A675F04();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25A674BFC()
{
  return sub_25A6C7AB0();
}

uint64_t sub_25A674C24()
{
  return sub_25A6C7AE0();
}

unint64_t sub_25A674C64()
{
  return 0xD000000000000015;
}

uint64_t sub_25A674C80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25A68449C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_25A674CAC(uint64_t a1)
{
  unint64_t v2 = sub_25A675DB4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A674CE8(uint64_t a1)
{
  unint64_t v2 = sub_25A675DB4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TrustedCloudComputeError.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BC70);
  uint64_t v92 = *(void *)(v2 - 8);
  uint64_t v93 = v2;
  MEMORY[0x270FA5388](v2);
  char v91 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BC78);
  uint64_t v89 = *(void *)(v4 - 8);
  uint64_t v90 = v4;
  MEMORY[0x270FA5388](v4);
  char v88 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BC80);
  uint64_t v86 = *(void *)(v6 - 8);
  uint64_t v87 = v6;
  MEMORY[0x270FA5388](v6);
  char v85 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = type metadata accessor for TrustedCloudComputeError.ServerErrorInfo(0);
  MEMORY[0x270FA5388](v83);
  uint64_t v84 = (uint64_t)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BC88);
  uint64_t v81 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  char v80 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BC90);
  uint64_t v78 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  uint64_t v77 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BC98);
  uint64_t v75 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  uint64_t v74 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo(0);
  MEMORY[0x270FA5388](v72);
  uint64_t v73 = (uint64_t)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BCA0);
  uint64_t v70 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v71);
  uint64_t v69 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = type metadata accessor for TrustedCloudComputeError.AvailabilityInfo(0);
  MEMORY[0x270FA5388](v67);
  uint64_t v68 = (uint64_t)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BCA8);
  uint64_t v65 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  char v16 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for TrustedCloudComputeError.RateLimitInfo(0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for TrustedCloudComputeError(0);
  MEMORY[0x270FA5388](v20);
  char v22 = (char *)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BCB0);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v95 = v23;
  uint64_t v96 = v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A675B54();
  char v94 = v26;
  sub_25A6C7B00();
  sub_25A66D214(v102, (uint64_t)v22, type metadata accessor for TrustedCloudComputeError);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v31 = v68;
      sub_25A675CF8((uint64_t)v22, v68, type metadata accessor for TrustedCloudComputeError.AvailabilityInfo);
      LOBYTE(v97) = 1;
      sub_25A675F58();
      char v32 = v69;
      char v34 = v94;
      uint64_t v33 = v95;
      sub_25A6C7910();
      sub_25A66BAB0(&qword_26A44BD28, (void (*)(uint64_t))type metadata accessor for TrustedCloudComputeError.AvailabilityInfo);
      uint64_t v35 = v71;
      sub_25A6C79B0();
      (*(void (**)(char *, uint64_t))(v70 + 8))(v32, v35);
      uint64_t v36 = type metadata accessor for TrustedCloudComputeError.AvailabilityInfo;
      goto LABEL_9;
    case 2u:
      uint64_t v31 = v73;
      sub_25A675CF8((uint64_t)v22, v73, type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo);
      LOBYTE(v97) = 2;
      sub_25A675F04();
      uint64_t v37 = v74;
      char v34 = v94;
      uint64_t v33 = v95;
      sub_25A6C7910();
      sub_25A66BAB0(&qword_26A44BD18, (void (*)(uint64_t))type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo);
      uint64_t v38 = v76;
      sub_25A6C79B0();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v37, v38);
      uint64_t v36 = type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo;
      goto LABEL_9;
    case 3u:
      char v39 = *v22;
      LOBYTE(v97) = 3;
      sub_25A675E5C();
      uint64_t v40 = v77;
      uint64_t v42 = v94;
      uint64_t v41 = v95;
      sub_25A6C7910();
      LOBYTE(v97) = v39;
      sub_25A675EB0();
      uint64_t v43 = v79;
      sub_25A6C79B0();
      uint64_t v44 = &v103;
      goto LABEL_7;
    case 4u:
      char v45 = *v22;
      LOBYTE(v97) = 4;
      sub_25A675DB4();
      uint64_t v40 = v80;
      uint64_t v42 = v94;
      uint64_t v41 = v95;
      sub_25A6C7910();
      LOBYTE(v97) = v45;
      sub_25A675E08();
      uint64_t v43 = v82;
      sub_25A6C79B0();
      uint64_t v44 = &v104;
LABEL_7:
      (*(void (**)(char *, uint64_t))(*(v44 - 32) + 8))(v40, v43);
      return (*(uint64_t (**)(char *, uint64_t))(v96 + 8))(v42, v41);
    case 5u:
      uint64_t v31 = v84;
      sub_25A675CF8((uint64_t)v22, v84, type metadata accessor for TrustedCloudComputeError.ServerErrorInfo);
      LOBYTE(v97) = 5;
      sub_25A675D60();
      uint64_t v46 = v85;
      char v34 = v94;
      uint64_t v33 = v95;
      sub_25A6C7910();
      sub_25A66BAB0(&qword_26A44BCE8, (void (*)(uint64_t))type metadata accessor for TrustedCloudComputeError.ServerErrorInfo);
      uint64_t v47 = v87;
      sub_25A6C79B0();
      (*(void (**)(char *, uint64_t))(v86 + 8))(v46, v47);
      uint64_t v36 = type metadata accessor for TrustedCloudComputeError.ServerErrorInfo;
LABEL_9:
      sub_25A66D27C(v31, v36);
      return (*(uint64_t (**)(char *, uint64_t))(v96 + 8))(v34, v33);
    case 6u:
      uint64_t v49 = *(void *)v22;
      uint64_t v48 = *((void *)v22 + 1);
      char v50 = v22[16];
      LOBYTE(v97) = 6;
      sub_25A675C50();
      v51 = v88;
      uint64_t v53 = v94;
      uint64_t v52 = v95;
      sub_25A6C7910();
      uint64_t v97 = v49;
      uint64_t v98 = v48;
      LOBYTE(v99) = v50;
      sub_25A675CA4();
      uint64_t v54 = v90;
      sub_25A6C79B0();
      (*(void (**)(char *, uint64_t))(v89 + 8))(v51, v54);
      (*(void (**)(char *, uint64_t))(v96 + 8))(v53, v52);
      goto LABEL_12;
    case 7u:
      uint64_t v56 = *(void *)v22;
      uint64_t v55 = *((void *)v22 + 1);
      uint64_t v57 = *((void *)v22 + 2);
      uint64_t v58 = *((void *)v22 + 3);
      uint64_t v59 = *((void *)v22 + 4);
      LOBYTE(v97) = 7;
      sub_25A675BA8();
      uint64_t v60 = v91;
      uint64_t v62 = v94;
      uint64_t v61 = v95;
      sub_25A6C7910();
      uint64_t v97 = v56;
      uint64_t v98 = v55;
      uint64_t v99 = v57;
      uint64_t v100 = v58;
      uint64_t v101 = v59;
      sub_25A675BFC();
      uint64_t v63 = v93;
      sub_25A6C79B0();
      (*(void (**)(char *, uint64_t))(v92 + 8))(v60, v63);
      (*(void (**)(char *, uint64_t))(v96 + 8))(v62, v61);
      swift_bridgeObjectRelease();
LABEL_12:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      sub_25A675CF8((uint64_t)v22, (uint64_t)v19, type metadata accessor for TrustedCloudComputeError.RateLimitInfo);
      LOBYTE(v97) = 0;
      sub_25A675FAC();
      uint64_t v27 = v94;
      uint64_t v28 = v95;
      sub_25A6C7910();
      sub_25A66BAB0(&qword_26A44BD38, (void (*)(uint64_t))type metadata accessor for TrustedCloudComputeError.RateLimitInfo);
      uint64_t v29 = v66;
      sub_25A6C79B0();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v16, v29);
      sub_25A66D27C((uint64_t)v19, type metadata accessor for TrustedCloudComputeError.RateLimitInfo);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v96 + 8))(v27, v28);
      break;
  }
  return result;
}

uint64_t type metadata accessor for TrustedCloudComputeError(uint64_t a1)
{
  return sub_25A675B1C(a1, (uint64_t *)&unk_26B329B70);
}

uint64_t sub_25A675B1C(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_25A675B54()
{
  unint64_t result = qword_26A44BCB8;
  if (!qword_26A44BCB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BCB8);
  }
  return result;
}

unint64_t sub_25A675BA8()
{
  unint64_t result = qword_26A44BCC0;
  if (!qword_26A44BCC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BCC0);
  }
  return result;
}

unint64_t sub_25A675BFC()
{
  unint64_t result = qword_26A44BCC8;
  if (!qword_26A44BCC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BCC8);
  }
  return result;
}

unint64_t sub_25A675C50()
{
  unint64_t result = qword_26A44BCD0;
  if (!qword_26A44BCD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BCD0);
  }
  return result;
}

unint64_t sub_25A675CA4()
{
  unint64_t result = qword_26A44BCD8;
  if (!qword_26A44BCD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BCD8);
  }
  return result;
}

uint64_t sub_25A675CF8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_25A675D60()
{
  unint64_t result = qword_26A44BCE0;
  if (!qword_26A44BCE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BCE0);
  }
  return result;
}

unint64_t sub_25A675DB4()
{
  unint64_t result = qword_26A44BCF0;
  if (!qword_26A44BCF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BCF0);
  }
  return result;
}

unint64_t sub_25A675E08()
{
  unint64_t result = qword_26A44BCF8;
  if (!qword_26A44BCF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BCF8);
  }
  return result;
}

unint64_t sub_25A675E5C()
{
  unint64_t result = qword_26A44BD00;
  if (!qword_26A44BD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BD00);
  }
  return result;
}

unint64_t sub_25A675EB0()
{
  unint64_t result = qword_26A44BD08;
  if (!qword_26A44BD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BD08);
  }
  return result;
}

unint64_t sub_25A675F04()
{
  unint64_t result = qword_26A44BD10;
  if (!qword_26A44BD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BD10);
  }
  return result;
}

unint64_t sub_25A675F58()
{
  unint64_t result = qword_26A44BD20;
  if (!qword_26A44BD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BD20);
  }
  return result;
}

unint64_t sub_25A675FAC()
{
  unint64_t result = qword_26A44BD30;
  if (!qword_26A44BD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BD30);
  }
  return result;
}

uint64_t TrustedCloudComputeError.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v118 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BD40);
  uint64_t v110 = *(void *)(v3 - 8);
  uint64_t v111 = v3;
  ((void (*)(void))MEMORY[0x270FA5388])();
  v124 = (char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BD48);
  uint64_t v108 = *(void *)(v109 - 8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  v117 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BD50);
  uint64_t v106 = *(void *)(v107 - 8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  v116 = (char *)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BD58);
  uint64_t v104 = *(void *)(v105 - 8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  v123 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BD60);
  uint64_t v102 = *(void *)(v103 - 8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  v115 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BD68);
  uint64_t v100 = *(void *)(v101 - 8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  v114 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BD70);
  uint64_t v98 = *(void *)(v99 - 8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  v113 = (char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BD78);
  uint64_t v96 = *(void *)(v97 - 8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  v112 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BD80);
  uint64_t v119 = *(void *)(v122 - 8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  uint64_t v13 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = type metadata accessor for TrustedCloudComputeError(0);
  uint64_t v14 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  char v94 = (uint64_t *)((char *)&v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v93 = (uint64_t *)((char *)&v86 - v17);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v95 = (char *)&v86 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v92 = (char *)&v86 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v86 - v23;
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  uint64_t v27 = (char *)&v86 - v26;
  uint64_t v28 = MEMORY[0x270FA5388](v25);
  char v30 = (char *)&v86 - v29;
  uint64_t v31 = MEMORY[0x270FA5388](v28);
  uint64_t v33 = (char *)&v86 - v32;
  MEMORY[0x270FA5388](v31);
  uint64_t v35 = (char *)&v86 - v34;
  uint64_t v36 = a1[3];
  v125 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v36);
  sub_25A675B54();
  v121 = v13;
  uint64_t v37 = v130;
  sub_25A6C7AF0();
  if (v37)
  {
LABEL_22:
    uint64_t v50 = (uint64_t)v125;
    return __swift_destroy_boxed_opaque_existential_1(v50);
  }
  char v88 = v33;
  uint64_t v89 = v30;
  uint64_t v87 = v24;
  uint64_t v90 = v27;
  uint64_t v130 = 0;
  uint64_t v38 = v123;
  char v39 = v124;
  uint64_t v40 = v120;
  char v91 = v35;
  uint64_t v42 = v121;
  uint64_t v41 = v122;
  uint64_t v43 = sub_25A6C7900();
  uint64_t v44 = v43;
  if (*(void *)(v43 + 16) != 1)
  {
    uint64_t v51 = sub_25A6C7780();
    swift_allocError();
    uint64_t v53 = v52;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A44B978);
    *uint64_t v53 = v40;
    sub_25A6C7840();
    sub_25A6C7770();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v51 - 8) + 104))(v53, *MEMORY[0x263F8DCB0], v51);
    swift_willThrow();
LABEL_21:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v119 + 8))(v42, v41);
    goto LABEL_22;
  }
  switch(*(unsigned char *)(v43 + 32))
  {
    case 1:
      LOBYTE(v126) = 1;
      sub_25A675F58();
      uint64_t v54 = v113;
      uint64_t v55 = v130;
      sub_25A6C7830();
      if (v55) {
        goto LABEL_21;
      }
      type metadata accessor for TrustedCloudComputeError.AvailabilityInfo(0);
      sub_25A66BAB0(&qword_26A44BDB8, (void (*)(uint64_t))type metadata accessor for TrustedCloudComputeError.AvailabilityInfo);
      uint64_t v47 = (uint64_t)v89;
      uint64_t v56 = v99;
      sub_25A6C78E0();
      (*(void (**)(char *, uint64_t))(v98 + 8))(v54, v56);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v119 + 8))(v42, v41);
      uint64_t v50 = (uint64_t)v125;
      goto LABEL_9;
    case 2:
      LOBYTE(v126) = 2;
      sub_25A675F04();
      uint64_t v58 = v114;
      uint64_t v59 = v130;
      sub_25A6C7830();
      if (v59) {
        goto LABEL_21;
      }
      type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo(0);
      sub_25A66BAB0(&qword_26A44BDB0, (void (*)(uint64_t))type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo);
      uint64_t v60 = v90;
      uint64_t v61 = v101;
      sub_25A6C78E0();
      (*(void (**)(char *, uint64_t))(v100 + 8))(v58, v61);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v119 + 8))(v42, v41);
      goto LABEL_25;
    case 3:
      LOBYTE(v126) = 3;
      sub_25A675E5C();
      uint64_t v62 = v115;
      uint64_t v63 = v130;
      sub_25A6C7830();
      if (v63) {
        goto LABEL_21;
      }
      sub_25A677234();
      uint64_t v64 = v103;
      sub_25A6C78E0();
      uint64_t v65 = v119;
      (*(void (**)(char *, uint64_t))(v102 + 8))(v62, v64);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v42, v41);
      uint64_t v66 = v87;
      *uint64_t v87 = v126;
      goto LABEL_26;
    case 4:
      LOBYTE(v126) = 4;
      sub_25A675DB4();
      uint64_t v67 = v130;
      sub_25A6C7830();
      if (v67) {
        goto LABEL_21;
      }
      sub_25A6771E0();
      uint64_t v68 = v105;
      sub_25A6C78E0();
      uint64_t v69 = v119;
      (*(void (**)(char *, uint64_t))(v104 + 8))(v38, v68);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v42, v41);
      uint64_t v66 = v92;
      *uint64_t v92 = v126;
      goto LABEL_26;
    case 5:
      LOBYTE(v126) = 5;
      sub_25A675D60();
      uint64_t v70 = v116;
      uint64_t v71 = v130;
      sub_25A6C7830();
      if (v71) {
        goto LABEL_21;
      }
      uint64_t v130 = v44;
      type metadata accessor for TrustedCloudComputeError.ServerErrorInfo(0);
      sub_25A66BAB0(&qword_26A44BD98, (void (*)(uint64_t))type metadata accessor for TrustedCloudComputeError.ServerErrorInfo);
      uint64_t v60 = v95;
      uint64_t v72 = v107;
      sub_25A6C78E0();
      (*(void (**)(char *, uint64_t))(v106 + 8))(v70, v72);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v119 + 8))(v42, v41);
LABEL_25:
      swift_storeEnumTagMultiPayload();
      uint64_t v81 = (uint64_t)v60;
      goto LABEL_27;
    case 6:
      LOBYTE(v126) = 6;
      sub_25A675C50();
      uint64_t v73 = v117;
      uint64_t v74 = v130;
      sub_25A6C7830();
      if (v74) {
        goto LABEL_21;
      }
      sub_25A67718C();
      uint64_t v75 = v109;
      sub_25A6C78E0();
      uint64_t v76 = v119;
      (*(void (**)(char *, uint64_t))(v108 + 8))(v73, v75);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v76 + 8))(v42, v41);
      uint64_t v82 = v127;
      char v83 = v128;
      uint64_t v66 = v93;
      *uint64_t v93 = v126;
      *((void *)v66 + 1) = v82;
      v66[16] = v83;
      goto LABEL_26;
    case 7:
      LOBYTE(v126) = 7;
      sub_25A675BA8();
      uint64_t v77 = v130;
      sub_25A6C7830();
      if (v77) {
        goto LABEL_21;
      }
      sub_25A677138();
      uint64_t v79 = v111;
      sub_25A6C78E0();
      uint64_t v80 = v119;
      (*(void (**)(char *, uint64_t))(v110 + 8))(v39, v79);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v80 + 8))(v42, v41);
      uint64_t v84 = v127;
      uint64_t v85 = v129;
      uint64_t v66 = v94;
      *char v94 = v126;
      *((void *)v66 + 1) = v84;
      *((_OWORD *)v66 + 1) = v128;
      *((void *)v66 + 4) = v85;
LABEL_26:
      swift_storeEnumTagMultiPayload();
      uint64_t v81 = (uint64_t)v66;
LABEL_27:
      uint64_t v57 = (uint64_t)v91;
      sub_25A675CF8(v81, (uint64_t)v91, type metadata accessor for TrustedCloudComputeError);
      uint64_t v50 = (uint64_t)v125;
      break;
    default:
      LOBYTE(v126) = 0;
      sub_25A675FAC();
      char v45 = v112;
      uint64_t v46 = v130;
      sub_25A6C7830();
      if (v46) {
        goto LABEL_21;
      }
      type metadata accessor for TrustedCloudComputeError.RateLimitInfo(0);
      sub_25A66BAB0(&qword_26A44BDC0, (void (*)(uint64_t))type metadata accessor for TrustedCloudComputeError.RateLimitInfo);
      uint64_t v47 = (uint64_t)v88;
      uint64_t v48 = v45;
      uint64_t v49 = v97;
      sub_25A6C78E0();
      (*(void (**)(char *, uint64_t))(v96 + 8))(v48, v49);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v119 + 8))(v42, v41);
      uint64_t v50 = (uint64_t)v125;
LABEL_9:
      swift_storeEnumTagMultiPayload();
      uint64_t v57 = (uint64_t)v91;
      sub_25A675CF8(v47, (uint64_t)v91, type metadata accessor for TrustedCloudComputeError);
      break;
  }
  sub_25A675CF8(v57, v118, type metadata accessor for TrustedCloudComputeError);
  return __swift_destroy_boxed_opaque_existential_1(v50);
}

unint64_t sub_25A677138()
{
  unint64_t result = qword_26A44BD88;
  if (!qword_26A44BD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BD88);
  }
  return result;
}

unint64_t sub_25A67718C()
{
  unint64_t result = qword_26A44BD90;
  if (!qword_26A44BD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BD90);
  }
  return result;
}

unint64_t sub_25A6771E0()
{
  unint64_t result = qword_26A44BDA0;
  if (!qword_26A44BDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BDA0);
  }
  return result;
}

unint64_t sub_25A677234()
{
  unint64_t result = qword_26A44BDA8;
  if (!qword_26A44BDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BDA8);
  }
  return result;
}

uint64_t sub_25A677298@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TrustedCloudComputeError.init(from:)(a1, a2);
}

uint64_t sub_25A6772B0(void *a1)
{
  return TrustedCloudComputeError.encode(to:)(a1);
}

uint64_t TrustedCloudComputeError.init(file:line:)@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000014;
  *(void *)(a1 + 8) = 0x800000025A6CF320;
  *(unsigned char *)(a1 + 16) = 12;
  type metadata accessor for TrustedCloudComputeError(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t TrustedCloudComputeError.init(file:line:message:)@<X0>(uint64_t a1@<X4>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(unsigned char *)(a3 + 16) = 12;
  type metadata accessor for TrustedCloudComputeError(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t static TrustedCloudComputeError.xpcConnectionInterrupted.getter@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000016;
  *(void *)(a1 + 8) = 0x800000025A6CF340;
  *(unsigned char *)(a1 + 16) = 0;
  type metadata accessor for TrustedCloudComputeError(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t TrustedCloudComputeError.init(responseMetadata:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v78 = a1;
  uint64_t v73 = type metadata accessor for TC2RopesResponseMetadata();
  MEMORY[0x270FA5388](v73);
  uint64_t v77 = (unsigned __int8 *)v70 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for TrustedCloudComputeError.RateLimitInfo(0);
  MEMORY[0x270FA5388](v71);
  uint64_t v72 = (char *)v70 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_25A6C73A0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v74 = v3;
  uint64_t v75 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)v70 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)v70 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)v70 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)v70 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v22 = (char *)v70 - v21;
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v25 = (char *)v70 - v24;
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v28 = (char *)v70 - v27;
  MEMORY[0x270FA5388](v26);
  char v30 = (char *)v70 - v29;
  uint64_t v31 = type metadata accessor for TrustedCloudComputeError(0);
  MEMORY[0x270FA5388](v31);
  uint64_t v76 = (char *)v70 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v32 + 16))
  {
LABEL_4:
    uint64_t v38 = v32;
    char v39 = v77;
    sub_25A66D214(v32, (uint64_t)v77, (uint64_t (*)(void))type metadata accessor for TC2RopesResponseMetadata);
    TrustedCloudComputeError.ServerErrorInfo.init(responseMetadata:)(v39, v78);
    sub_25A66D27C(v38, (uint64_t (*)(void))type metadata accessor for TC2RopesResponseMetadata);
    return swift_storeEnumTagMultiPayload();
  }
  else
  {
    int v34 = *(unsigned __int8 *)(v32 + 8) - 2;
    v70[1] = v31;
    switch(v34)
    {
      case 0:
        uint64_t v35 = v32;
        uint64_t v36 = v76;
        *uint64_t v76 = 0;
        uint64_t v37 = v78;
        goto LABEL_43;
      case 15:
        if (*(unsigned char *)(v32 + 64))
        {
          uint64_t v41 = v74;
          uint64_t v35 = v32;
          uint64_t v42 = v75;
          (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v13, v32 + *(int *)(v73 + 60), v74);
          uint64_t v43 = v77;
          uint64_t v37 = v78;
          uint64_t v36 = v76;
        }
        else
        {
          uint64_t v35 = v32;
          sub_25A6C7360();
          uint64_t v43 = v77;
          uint64_t v37 = v78;
          uint64_t v42 = v75;
          uint64_t v36 = v76;
          uint64_t v41 = v74;
        }
        *uint64_t v36 = 0;
        uint64_t v60 = type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo(0);
        (*(void (**)(unsigned char *, char *, uint64_t))(v42 + 32))(&v36[*(int *)(v60 + 20)], v13, v41);
        goto LABEL_44;
      case 16:
        if (*(unsigned char *)(v32 + 64))
        {
          uint64_t v44 = v74;
          uint64_t v35 = v32;
          uint64_t v45 = v75;
          (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v10, v32 + *(int *)(v73 + 60), v74);
          uint64_t v43 = v77;
          uint64_t v37 = v78;
          uint64_t v36 = v76;
        }
        else
        {
          uint64_t v35 = v32;
          sub_25A6C7360();
          uint64_t v43 = v77;
          uint64_t v37 = v78;
          uint64_t v45 = v75;
          uint64_t v36 = v76;
          uint64_t v44 = v74;
        }
        *uint64_t v36 = 1;
        uint64_t v61 = type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo(0);
        (*(void (**)(unsigned char *, char *, uint64_t))(v45 + 32))(&v36[*(int *)(v61 + 20)], v10, v44);
        goto LABEL_44;
      case 18:
        if (*(unsigned char *)(v32 + 64))
        {
          uint64_t v46 = v74;
          uint64_t v35 = v32;
          uint64_t v47 = v75;
          (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v30, v32 + *(int *)(v73 + 60), v74);
          uint64_t v48 = 0;
          uint64_t v43 = v77;
          uint64_t v37 = v78;
        }
        else
        {
          uint64_t v48 = *(void *)(v32 + 56);
          uint64_t v35 = v32;
          sub_25A6C7360();
          uint64_t v43 = v77;
          uint64_t v37 = v78;
          uint64_t v46 = v74;
          uint64_t v47 = v75;
        }
        uint64_t v62 = (uint64_t)v72;
        *((_OWORD *)v72 + 1) = 0u;
        *(_OWORD *)(v62 + 32) = 0u;
        *(_OWORD *)uint64_t v62 = 0u;
        *(void *)(v62 + 48) = MEMORY[0x263F8EE78];
        *(void *)(v62 + 56) = 0;
        *(void *)(v62 + 64) = v48;
        (*(void (**)(uint64_t, char *, uint64_t))(v47 + 32))(v62 + *(int *)(v71 + 40), v30, v46);
        uint64_t v36 = v76;
        sub_25A675CF8(v62, (uint64_t)v76, type metadata accessor for TrustedCloudComputeError.RateLimitInfo);
        goto LABEL_44;
      case 21:
        if (*(unsigned char *)(v32 + 64))
        {
          uint64_t v49 = v74;
          uint64_t v35 = v32;
          uint64_t v50 = v75;
          (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v28, v32 + *(int *)(v73 + 60), v74);
          uint64_t v43 = v77;
          uint64_t v37 = v78;
          uint64_t v36 = v76;
        }
        else
        {
          uint64_t v35 = v32;
          sub_25A6C7360();
          uint64_t v43 = v77;
          uint64_t v37 = v78;
          uint64_t v50 = v75;
          uint64_t v36 = v76;
          uint64_t v49 = v74;
        }
        *uint64_t v36 = 0;
        uint64_t v63 = &v36[*(int *)(type metadata accessor for TrustedCloudComputeError.AvailabilityInfo(0) + 20)];
        uint64_t v64 = *(void (**)(unsigned char *, char *, uint64_t))(v50 + 32);
        uint64_t v65 = v28;
        goto LABEL_35;
      case 22:
        if (*(unsigned char *)(v32 + 64))
        {
          uint64_t v51 = v74;
          uint64_t v35 = v32;
          uint64_t v52 = v75;
          (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v25, v32 + *(int *)(v73 + 60), v74);
          uint64_t v36 = v76;
          uint64_t v43 = v77;
        }
        else
        {
          uint64_t v35 = v32;
          sub_25A6C7360();
          uint64_t v36 = v76;
          uint64_t v43 = v77;
          uint64_t v51 = v74;
          uint64_t v52 = v75;
        }
        *uint64_t v36 = 1;
        uint64_t v66 = type metadata accessor for TrustedCloudComputeError.AvailabilityInfo(0);
        (*(void (**)(unsigned char *, char *, uint64_t))(v52 + 32))(&v36[*(int *)(v66 + 20)], v25, v51);
        uint64_t v37 = v78;
        goto LABEL_44;
      case 23:
        if (*(unsigned char *)(v32 + 64))
        {
          uint64_t v49 = v74;
          uint64_t v35 = v32;
          uint64_t v53 = v75;
          (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v22, v32 + *(int *)(v73 + 60), v74);
          uint64_t v43 = v77;
          uint64_t v37 = v78;
          uint64_t v36 = v76;
        }
        else
        {
          uint64_t v35 = v32;
          sub_25A6C7360();
          uint64_t v43 = v77;
          uint64_t v37 = v78;
          uint64_t v53 = v75;
          uint64_t v36 = v76;
          uint64_t v49 = v74;
        }
        *uint64_t v36 = 2;
        uint64_t v63 = &v36[*(int *)(type metadata accessor for TrustedCloudComputeError.AvailabilityInfo(0) + 20)];
        uint64_t v64 = *(void (**)(unsigned char *, char *, uint64_t))(v53 + 32);
        uint64_t v65 = v22;
LABEL_35:
        uint64_t v67 = v49;
        goto LABEL_40;
      case 26:
        if (*(unsigned char *)(v32 + 64))
        {
          uint64_t v54 = v74;
          uint64_t v35 = v32;
          uint64_t v55 = v75;
          (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v7, v32 + *(int *)(v73 + 60), v74);
          uint64_t v43 = v77;
          uint64_t v37 = v78;
          uint64_t v36 = v76;
        }
        else
        {
          uint64_t v35 = v32;
          sub_25A6C7360();
          uint64_t v43 = v77;
          uint64_t v37 = v78;
          uint64_t v55 = v75;
          uint64_t v36 = v76;
          uint64_t v54 = v74;
        }
        *uint64_t v36 = 2;
        uint64_t v68 = type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo(0);
        (*(void (**)(unsigned char *, char *, uint64_t))(v55 + 32))(&v36[*(int *)(v68 + 20)], v7, v54);
        goto LABEL_44;
      case 27:
        uint64_t v37 = v78;
        uint64_t v58 = v75;
        uint64_t v36 = v76;
        uint64_t v59 = v74;
        uint64_t v35 = v32;
        if (*(unsigned char *)(v32 + 64)) {
          (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v16, v32 + *(int *)(v73 + 60), v74);
        }
        else {
          sub_25A6C7360();
        }
        *uint64_t v36 = 4;
        uint64_t v69 = type metadata accessor for TrustedCloudComputeError.AvailabilityInfo(0);
        (*(void (**)(unsigned char *, char *, uint64_t))(v58 + 32))(&v36[*(int *)(v69 + 20)], v16, v59);
LABEL_43:
        uint64_t v43 = v77;
        goto LABEL_44;
      case 32:
        if (*(unsigned char *)(v32 + 64))
        {
          uint64_t v56 = v74;
          uint64_t v35 = v32;
          uint64_t v57 = v75;
          (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v19, v32 + *(int *)(v73 + 60), v74);
          uint64_t v43 = v77;
          uint64_t v37 = v78;
          uint64_t v36 = v76;
        }
        else
        {
          uint64_t v35 = v32;
          sub_25A6C7360();
          uint64_t v43 = v77;
          uint64_t v37 = v78;
          uint64_t v57 = v75;
          uint64_t v36 = v76;
          uint64_t v56 = v74;
        }
        *uint64_t v36 = 3;
        uint64_t v63 = &v36[*(int *)(type metadata accessor for TrustedCloudComputeError.AvailabilityInfo(0) + 20)];
        uint64_t v64 = *(void (**)(unsigned char *, char *, uint64_t))(v57 + 32);
        uint64_t v65 = v19;
        uint64_t v67 = v56;
LABEL_40:
        v64(v63, v65, v67);
LABEL_44:
        swift_storeEnumTagMultiPayload();
        sub_25A66D214(v35, (uint64_t)v43, (uint64_t (*)(void))type metadata accessor for TC2RopesResponseMetadata);
        TrustedCloudComputeError.ServerErrorInfo.init(responseMetadata:)(v43, v37);
        sub_25A66D27C(v35, (uint64_t (*)(void))type metadata accessor for TC2RopesResponseMetadata);
        swift_storeEnumTagMultiPayload();
        uint64_t result = sub_25A66D27C((uint64_t)v36, type metadata accessor for TrustedCloudComputeError);
        break;
      default:
        goto LABEL_4;
    }
  }
  return result;
}

uint64_t TrustedCloudComputeError.retryable.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TrustedCloudComputeError.ServerErrorInfo(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TrustedCloudComputeError(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25A66D214(v1, (uint64_t)v7, type metadata accessor for TrustedCloudComputeError);
  uint64_t v8 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v9 = type metadata accessor for TrustedCloudComputeError.AvailabilityInfo;
      goto LABEL_6;
    case 2u:
      uint64_t v9 = type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo;
      goto LABEL_6;
    case 3u:
    case 4u:
      return v8;
    case 5u:
      sub_25A675CF8((uint64_t)v7, (uint64_t)v4, type metadata accessor for TrustedCloudComputeError.ServerErrorInfo);
      uint64_t v8 = v4[*(int *)(v2 + 20)];
      sub_25A66D27C((uint64_t)v4, type metadata accessor for TrustedCloudComputeError.ServerErrorInfo);
      return v8;
    case 6u:
    case 7u:
      sub_25A66D27C((uint64_t)v7, type metadata accessor for TrustedCloudComputeError);
      return 0;
    default:
      uint64_t v9 = type metadata accessor for TrustedCloudComputeError.RateLimitInfo;
LABEL_6:
      sub_25A66D27C((uint64_t)v7, v9);
      return 1;
  }
}

uint64_t TrustedCloudComputeError.retryAfterDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v23 = type metadata accessor for TrustedCloudComputeError.ServerErrorInfo(0);
  MEMORY[0x270FA5388](v23);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TrustedCloudComputeError.AvailabilityInfo(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TrustedCloudComputeError.RateLimitInfo(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TrustedCloudComputeError(0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25A66D214(v1, (uint64_t)v15, type metadata accessor for TrustedCloudComputeError);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_25A675CF8((uint64_t)v15, (uint64_t)v9, type metadata accessor for TrustedCloudComputeError.AvailabilityInfo);
      uint64_t v22 = &v9[*(int *)(v7 + 20)];
      goto LABEL_7;
    case 2u:
      sub_25A675CF8((uint64_t)v15, (uint64_t)v6, type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo);
      uint64_t v22 = &v6[*(int *)(v4 + 20)];
LABEL_7:
      uint64_t v19 = sub_25A6C73A0();
      uint64_t v20 = *(void *)(v19 - 8);
      uint64_t v21 = v24;
      (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v24, v22, v19);
      goto LABEL_8;
    case 3u:
    case 4u:
      goto LABEL_3;
    case 5u:
      sub_25A675CF8((uint64_t)v15, (uint64_t)v3, type metadata accessor for TrustedCloudComputeError.ServerErrorInfo);
      sub_25A6705C0((uint64_t)&v3[*(int *)(v23 + 24)], v24);
      return sub_25A66D27C((uint64_t)v3, type metadata accessor for TrustedCloudComputeError.ServerErrorInfo);
    case 6u:
    case 7u:
      sub_25A66D27C((uint64_t)v15, type metadata accessor for TrustedCloudComputeError);
LABEL_3:
      uint64_t v16 = sub_25A6C73A0();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v24, 1, 1, v16);
      break;
    default:
      sub_25A675CF8((uint64_t)v15, (uint64_t)v12, type metadata accessor for TrustedCloudComputeError.RateLimitInfo);
      uint64_t v18 = &v12[*(int *)(v10 + 40)];
      uint64_t v19 = sub_25A6C73A0();
      uint64_t v20 = *(void *)(v19 - 8);
      uint64_t v21 = v24;
      (*(void (**)(uint64_t, char *, uint64_t))(v20 + 16))(v24, v18, v19);
      sub_25A66D27C((uint64_t)v12, type metadata accessor for TrustedCloudComputeError.RateLimitInfo);
LABEL_8:
      uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56))(v21, 0, 1, v19);
      break;
  }
  return result;
}

uint64_t TrustedCloudComputeError.description.getter()
{
  uint64_t countAndFlagsBits = TrustedCloudComputeError.errorCaseString()()._countAndFlagsBits;
  sub_25A67892C();
  sub_25A678DB8();
  if (v1)
  {
    sub_25A6C74F0();
    sub_25A6C74F0();
    swift_bridgeObjectRelease();
  }
  sub_25A6C74F0();
  sub_25A6C74F0();
  swift_bridgeObjectRelease();
  return countAndFlagsBits;
}

Swift::String __swiftcall TrustedCloudComputeError.errorCaseString()()
{
  uint64_t v1 = type metadata accessor for TrustedCloudComputeError(0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25A66D214(v0, (uint64_t)v3, type metadata accessor for TrustedCloudComputeError);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = 0xD000000000000013;
  uint64_t v6 = (void *)0x800000025A6CF380;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      sub_25A66D27C((uint64_t)v3, type metadata accessor for TrustedCloudComputeError.AvailabilityInfo);
      uint64_t v5 = 0xD000000000000017;
      uint64_t v7 = "DeniedDueToAvailability";
      goto LABEL_4;
    case 2:
      sub_25A66D27C((uint64_t)v3, type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo);
      uint64_t v5 = 0x4574756F656D6954;
      goto LABEL_10;
    case 3:
      break;
    case 4:
      uint64_t v6 = (void *)0x800000025A6CF360;
      uint64_t v5 = 0xD000000000000011;
      break;
    case 5:
      sub_25A66D27C((uint64_t)v3, type metadata accessor for TrustedCloudComputeError.ServerErrorInfo);
      uint64_t v6 = (void *)0xEB00000000726F72;
      uint64_t v5 = 0x7245726576726553;
      break;
    case 6:
      sub_25A66D27C((uint64_t)v3, type metadata accessor for TrustedCloudComputeError);
      uint64_t v6 = (void *)0xED0000726F727245;
      uint64_t v5 = 0x6C616E7265746E49;
      break;
    case 7:
      sub_25A66D27C((uint64_t)v3, type metadata accessor for TrustedCloudComputeError);
      uint64_t v5 = 0x456B726F7774654ELL;
LABEL_10:
      uint64_t v6 = (void *)0xEC000000726F7272;
      break;
    default:
      sub_25A66D27C((uint64_t)v3, type metadata accessor for TrustedCloudComputeError.RateLimitInfo);
      uint64_t v5 = 0xD000000000000014;
      uint64_t v7 = "DeniedDueToRateLimit";
LABEL_4:
      uint64_t v6 = (void *)((unint64_t)(v7 - 32) | 0x8000000000000000);
      break;
  }
  result._object = v6;
  result._uint64_t countAndFlagsBits = v5;
  return result;
}

uint64_t sub_25A67892C()
{
  uint64_t v1 = type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (unsigned __int8 *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TrustedCloudComputeError.AvailabilityInfo(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TrustedCloudComputeError.RateLimitInfo(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TrustedCloudComputeError(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (uint64_t *)((char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_25A66D214(v0, (uint64_t)v12, type metadata accessor for TrustedCloudComputeError);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_25A675CF8((uint64_t)v12, (uint64_t)v6, type metadata accessor for TrustedCloudComputeError.AvailabilityInfo);
      unint64_t v13 = 0xD00000000000001ALL;
      switch(*v6)
      {
        case 1:
          unint64_t v13 = 0xD000000000000012;
          break;
        case 2:
          unint64_t v13 = 0x7562207365646F6ELL;
          break;
        case 3:
          unint64_t v13 = 0xD000000000000018;
          break;
        case 4:
          break;
        default:
          unint64_t v13 = 0xD000000000000010;
          break;
      }
      uint64_t v14 = type metadata accessor for TrustedCloudComputeError.AvailabilityInfo;
      uint64_t v15 = (uint64_t)v6;
      goto LABEL_24;
    case 2u:
      sub_25A675CF8((uint64_t)v12, (uint64_t)v3, type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo);
      int v16 = *v3;
      unint64_t v17 = 0xD000000000000020;
      if (v16) {
        unint64_t v17 = 0xD000000000000022;
      }
      if (v16 == 2) {
        unint64_t v13 = 0xD000000000000015;
      }
      else {
        unint64_t v13 = v17;
      }
      uint64_t v14 = type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo;
      uint64_t v15 = (uint64_t)v3;
      goto LABEL_24;
    case 3u:
      if (*(unsigned char *)v12) {
        return 0x2064696C61766E69;
      }
      else {
        return 0xD000000000000010;
      }
    case 4u:
      if (*(unsigned char *)v12) {
        return 0x726F687475616E75;
      }
      else {
        return 0xD000000000000021;
      }
    case 5u:
      sub_25A66D27C((uint64_t)v12, type metadata accessor for TrustedCloudComputeError.ServerErrorInfo);
      return 0xD000000000000015;
    case 6u:
      return *v12;
    case 7u:
      unint64_t v13 = v12[3];
      swift_bridgeObjectRelease();
      return v13;
    default:
      sub_25A675CF8((uint64_t)v12, (uint64_t)v9, type metadata accessor for TrustedCloudComputeError.RateLimitInfo);
      unint64_t v13 = TrustedCloudComputeError.RateLimitInfo.message.getter();
      uint64_t v14 = type metadata accessor for TrustedCloudComputeError.RateLimitInfo;
      uint64_t v15 = (uint64_t)v9;
LABEL_24:
      sub_25A66D27C(v15, v14);
      return v13;
  }
}

uint64_t sub_25A678DB8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TrustedCloudComputeError.ServerErrorInfo(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TrustedCloudComputeError.AvailabilityInfo(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TrustedCloudComputeError.RateLimitInfo(0);
  MEMORY[0x270FA5388](v11 - 8);
  unint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TrustedCloudComputeError(0);
  MEMORY[0x270FA5388](v14);
  int v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25A66D214(v1, (uint64_t)v16, type metadata accessor for TrustedCloudComputeError);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_25A675CF8((uint64_t)v16, (uint64_t)v10, type metadata accessor for TrustedCloudComputeError.AvailabilityInfo);
      uint64_t v17 = TrustedCloudComputeError.AvailabilityInfo.description.getter();
      sub_25A66D27C((uint64_t)v10, type metadata accessor for TrustedCloudComputeError.AvailabilityInfo);
      return v17;
    case 2u:
      sub_25A675CF8((uint64_t)v16, (uint64_t)v7, type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo);
      uint64_t v17 = TrustedCloudComputeError.TimeoutErrorInfo.description.getter();
      sub_25A66D27C((uint64_t)v7, type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo);
      return v17;
    case 3u:
      LOBYTE(v25) = *v16;
      return TrustedCloudComputeError.InvalidRequestErrorInfo.description.getter();
    case 4u:
      LOBYTE(v25) = *v16;
      return TrustedCloudComputeError.UnauthorizedErrorInfo.description.getter();
    case 5u:
      sub_25A675CF8((uint64_t)v16, (uint64_t)v4, type metadata accessor for TrustedCloudComputeError.ServerErrorInfo);
      uint64_t v17 = TrustedCloudComputeError.ServerErrorInfo.description.getter();
      sub_25A66D27C((uint64_t)v4, type metadata accessor for TrustedCloudComputeError.ServerErrorInfo);
      return v17;
    case 6u:
      uint64_t v19 = *((void *)v16 + 1);
      char v20 = v16[16];
      uint64_t v25 = *(void *)v16;
      uint64_t v26 = v19;
      LOBYTE(v27) = v20;
      uint64_t v17 = TrustedCloudComputeError.InternalErrorInfo.description.getter();
      goto LABEL_11;
    case 7u:
      uint64_t v21 = *((void *)v16 + 1);
      uint64_t v22 = *((void *)v16 + 4);
      uint64_t v25 = *(void *)v16;
      uint64_t v26 = v21;
      long long v27 = *((_OWORD *)v16 + 1);
      uint64_t v28 = v22;
      uint64_t v17 = TrustedCloudComputeError.NetworkErrorInfo.description.getter();
      swift_bridgeObjectRelease();
LABEL_11:
      swift_bridgeObjectRelease();
      break;
    default:
      sub_25A675CF8((uint64_t)v16, (uint64_t)v13, type metadata accessor for TrustedCloudComputeError.RateLimitInfo);
      uint64_t v17 = TrustedCloudComputeError.RateLimitInfo.description.getter();
      sub_25A66D27C((uint64_t)v13, type metadata accessor for TrustedCloudComputeError.RateLimitInfo);
      break;
  }
  return v17;
}

unint64_t TrustedCloudComputeError.RateLimitInfo.message.getter()
{
  if (!*(void *)(v0 + 56)) {
    return 0xD00000000000003ALL;
  }
  sub_25A6C7740();
  sub_25A6C74F0();
  sub_25A6C79D0();
  sub_25A6C74F0();
  swift_bridgeObjectRelease();
  sub_25A6C74F0();
  sub_25A6C7650();
  sub_25A6C74F0();
  return 0;
}

unint64_t TrustedCloudComputeError.AvailabilityInfo.message.getter()
{
  unint64_t result = 0xD000000000000010;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0x7562207365646F6ELL;
      break;
    case 3:
      unint64_t result = 0xD000000000000018;
      break;
    case 4:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t TrustedCloudComputeError.TimeoutErrorInfo.message.getter()
{
  int v1 = *v0;
  unint64_t v2 = 0xD000000000000020;
  if (v1) {
    unint64_t v2 = 0xD000000000000022;
  }
  if (v1 == 2) {
    return 0xD000000000000015;
  }
  else {
    return v2;
  }
}

uint64_t TrustedCloudComputeError.InvalidRequestErrorInfo.message.getter()
{
  if (*v0) {
    return 0x2064696C61766E69;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t TrustedCloudComputeError.UnauthorizedErrorInfo.message.getter()
{
  if (*v0) {
    return 0x726F687475616E75;
  }
  else {
    return 0xD000000000000021;
  }
}

unint64_t TrustedCloudComputeError.ServerErrorInfo.message.getter()
{
  return 0xD000000000000015;
}

uint64_t TrustedCloudComputeError.RateLimitInfo.description.getter()
{
  int v1 = v0;
  uint64_t v2 = sub_25A6C7340();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v73 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25A6C7320();
  uint64_t v70 = *(void *)(v5 - 8);
  uint64_t v71 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v72 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25A6C7300();
  uint64_t v67 = *(void *)(v7 - 8);
  uint64_t v68 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v69 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25A6C7310();
  uint64_t v60 = *(void *)(v9 - 8);
  uint64_t v61 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v66 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_25A6C7400();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v63 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_25A6C7350();
  uint64_t v64 = *(void *)(v13 - 8);
  uint64_t v65 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v62 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!v0[1])
  {
    uint64_t v17 = (void *)MEMORY[0x263F8EE78];
    if (!v0[3]) {
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  strcpy((char *)v75, "bundleID=");
  WORD1(v75[1]) = 0;
  HIDWORD(v75[1]) = -385875968;
  sub_25A6C74F0();
  uint64_t v15 = v75[0];
  uint64_t v16 = v75[1];
  uint64_t v17 = sub_25A67B834(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v19 = v17[2];
  unint64_t v18 = v17[3];
  if (v19 >= v18 >> 1) {
    uint64_t v17 = sub_25A67B834((void *)(v18 > 1), v19 + 1, 1, v17);
  }
  v17[2] = v19 + 1;
  char v20 = &v17[2 * v19];
  v20[4] = v15;
  v20[5] = v16;
  if (v1[3])
  {
LABEL_7:
    strcpy((char *)v75, "featureID=");
    BYTE3(v75[1]) = 0;
    HIDWORD(v75[1]) = -369098752;
    sub_25A6C74F0();
    uint64_t v21 = v75[0];
    uint64_t v22 = v75[1];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v17 = sub_25A67B834(0, v17[2] + 1, 1, v17);
    }
    unint64_t v24 = v17[2];
    unint64_t v23 = v17[3];
    if (v24 >= v23 >> 1) {
      uint64_t v17 = sub_25A67B834((void *)(v23 > 1), v24 + 1, 1, v17);
    }
    v17[2] = v24 + 1;
    uint64_t v25 = &v17[2 * v24];
    v25[4] = v21;
    v25[5] = v22;
  }
LABEL_12:
  if (v1[5])
  {
    strcpy((char *)v75, "workloadType=");
    HIWORD(v75[1]) = -4864;
    sub_25A6C74F0();
    uint64_t v26 = v75[0];
    uint64_t v27 = v75[1];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v17 = sub_25A67B834(0, v17[2] + 1, 1, v17);
    }
    unint64_t v29 = v17[2];
    unint64_t v28 = v17[3];
    if (v29 >= v28 >> 1) {
      uint64_t v17 = sub_25A67B834((void *)(v28 > 1), v29 + 1, 1, v17);
    }
    v17[2] = v29 + 1;
    char v30 = &v17[2 * v29];
    v30[4] = v26;
    v30[5] = v27;
  }
  uint64_t v31 = *(void *)(v1[6] + 16);
  if (v31)
  {
    uint64_t v57 = v1;
    uint64_t v58 = v3;
    uint64_t v59 = v2;
    uint64_t v56 = swift_bridgeObjectRetain();
    uint64_t v32 = v56 + 56;
    do
    {
      v75[0] = 0;
      v75[1] = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_25A6C7740();
      swift_bridgeObjectRelease();
      v75[0] = 0x64616F6C6B726F77;
      v75[1] = 0xEF283D6D61726150;
      swift_bridgeObjectRetain();
      sub_25A6C74F0();
      swift_bridgeObjectRelease();
      sub_25A6C74F0();
      swift_bridgeObjectRetain();
      sub_25A6C74F0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      sub_25A6C74F0();
      uint64_t v33 = v75[0];
      uint64_t v34 = v75[1];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v17 = sub_25A67B834(0, v17[2] + 1, 1, v17);
      }
      unint64_t v36 = v17[2];
      unint64_t v35 = v17[3];
      if (v36 >= v35 >> 1) {
        uint64_t v17 = sub_25A67B834((void *)(v35 > 1), v36 + 1, 1, v17);
      }
      v32 += 32;
      v17[2] = v36 + 1;
      uint64_t v37 = &v17[2 * v36];
      v37[4] = v33;
      v37[5] = v34;
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease();
    uint64_t v3 = v58;
    uint64_t v2 = v59;
    int v1 = v57;
  }
  v75[0] = 0x3D746E756F63;
  v75[1] = 0xE600000000000000;
  uint64_t v74 = v1[7];
  sub_25A6C79D0();
  sub_25A6C74F0();
  swift_bridgeObjectRelease();
  uint64_t v38 = v75[0];
  uint64_t v39 = v75[1];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v17 = sub_25A67B834(0, v17[2] + 1, 1, v17);
  }
  unint64_t v41 = v17[2];
  unint64_t v40 = v17[3];
  if (v41 >= v40 >> 1) {
    uint64_t v17 = sub_25A67B834((void *)(v40 > 1), v41 + 1, 1, v17);
  }
  v17[2] = v41 + 1;
  uint64_t v42 = &v17[2 * v41];
  v42[4] = v38;
  v42[5] = v39;
  v75[0] = 0;
  v75[1] = 0xE000000000000000;
  sub_25A6C74F0();
  sub_25A6C7650();
  uint64_t v43 = v75[0];
  uint64_t v44 = v75[1];
  unint64_t v46 = v17[2];
  unint64_t v45 = v17[3];
  if (v46 >= v45 >> 1) {
    uint64_t v17 = sub_25A67B834((void *)(v45 > 1), v46 + 1, 1, v17);
  }
  v17[2] = v46 + 1;
  uint64_t v47 = &v17[2 * v46];
  v47[4] = v43;
  v47[5] = v44;
  type metadata accessor for TrustedCloudComputeError.RateLimitInfo(0);
  sub_25A6C73F0();
  (*(void (**)(char *, void, uint64_t))(v60 + 104))(v66, *MEMORY[0x263F072A0], v61);
  (*(void (**)(char *, void, uint64_t))(v67 + 104))(v69, *MEMORY[0x263F07288], v68);
  (*(void (**)(char *, void, uint64_t))(v70 + 104))(v72, *MEMORY[0x263F072B8], v71);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v73, *MEMORY[0x263F072C8], v2);
  uint64_t v48 = v62;
  sub_25A6C7330();
  sub_25A6C72F0();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v48, v65);
  v75[0] = 0;
  v75[1] = 0xE000000000000000;
  sub_25A6C7740();
  swift_bridgeObjectRelease();
  v75[0] = 0x7466417972746572;
  v75[1] = 0xEF3D657461447265;
  sub_25A6C74F0();
  swift_bridgeObjectRelease();
  uint64_t v49 = v75[0];
  uint64_t v50 = v75[1];
  unint64_t v52 = v17[2];
  unint64_t v51 = v17[3];
  if (v52 >= v51 >> 1) {
    uint64_t v17 = sub_25A67B834((void *)(v51 > 1), v52 + 1, 1, v17);
  }
  v17[2] = v52 + 1;
  uint64_t v53 = &v17[2 * v52];
  v53[4] = v49;
  v53[5] = v50;
  v75[0] = v17;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B32A010);
  sub_25A67B944();
  uint64_t v54 = sub_25A6C7490();
  swift_bridgeObjectRelease();
  return v54;
}

uint64_t TrustedCloudComputeError.AvailabilityInfo.description.getter()
{
  uint64_t v1 = sub_25A6C7340();
  uint64_t v39 = *(void *)(v1 - 8);
  uint64_t v40 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v38 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_25A6C7320();
  uint64_t v35 = *(void *)(v3 - 8);
  uint64_t v36 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v37 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_25A6C7300();
  uint64_t v5 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_25A6C7310();
  uint64_t v8 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_25A6C7400();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v33 = sub_25A6C7350();
  uint64_t v12 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v15 = *v0;
  if (v15 == 4)
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v31 = v0;
    uint64_t v42 = 0;
    unint64_t v43 = 0xE000000000000000;
    sub_25A6C74F0();
    char v41 = v15;
    sub_25A6C77A0();
    unint64_t v29 = v43;
    uint64_t v30 = v42;
    uint64_t v16 = sub_25A67B834(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v18 = v16[2];
    unint64_t v17 = v16[3];
    if (v18 >= v17 >> 1) {
      uint64_t v16 = sub_25A67B834((void *)(v17 > 1), v18 + 1, 1, v16);
    }
    v16[2] = v18 + 1;
    unint64_t v19 = &v16[2 * v18];
    unint64_t v20 = v29;
    v19[4] = v30;
    v19[5] = v20;
  }
  type metadata accessor for TrustedCloudComputeError.AvailabilityInfo(0);
  sub_25A6C73F0();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F072A0], v32);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F07288], v34);
  (*(void (**)(char *, void, uint64_t))(v35 + 104))(v37, *MEMORY[0x263F072B8], v36);
  (*(void (**)(char *, void, uint64_t))(v39 + 104))(v38, *MEMORY[0x263F072C8], v40);
  sub_25A6C7330();
  sub_25A6C72F0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v33);
  uint64_t v42 = 0;
  unint64_t v43 = 0xE000000000000000;
  sub_25A6C7740();
  swift_bridgeObjectRelease();
  uint64_t v42 = 0x7466417972746572;
  unint64_t v43 = 0xEF3D657461447265;
  sub_25A6C74F0();
  swift_bridgeObjectRelease();
  uint64_t v21 = v42;
  unint64_t v22 = v43;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v16 = sub_25A67B834(0, v16[2] + 1, 1, v16);
  }
  unint64_t v24 = v16[2];
  unint64_t v23 = v16[3];
  if (v24 >= v23 >> 1) {
    uint64_t v16 = sub_25A67B834((void *)(v23 > 1), v24 + 1, 1, v16);
  }
  v16[2] = v24 + 1;
  uint64_t v25 = &v16[2 * v24];
  v25[4] = v21;
  v25[5] = v22;
  uint64_t v42 = (uint64_t)v16;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B32A010);
  sub_25A67B944();
  uint64_t v26 = sub_25A6C7490();
  swift_bridgeObjectRelease();
  return v26;
}

uint64_t TrustedCloudComputeError.TimeoutErrorInfo.description.getter()
{
  uint64_t v1 = sub_25A6C7340();
  uint64_t v41 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v40 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_25A6C7320();
  uint64_t v37 = *(void *)(v3 - 8);
  uint64_t v38 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v39 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_25A6C7300();
  uint64_t v5 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_25A6C7310();
  uint64_t v8 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_25A6C7400();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v35 = sub_25A6C7350();
  uint64_t v12 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v15 = *v0;
  if (v15 == 2)
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v32 = v0;
    uint64_t v33 = v1;
    char v17 = v15 & 1;
    uint64_t v43 = 0;
    unint64_t v44 = 0xE000000000000000;
    sub_25A6C74F0();
    char v42 = v17;
    sub_25A6C77A0();
    unint64_t v30 = v44;
    uint64_t v31 = v43;
    uint64_t v16 = sub_25A67B834(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v19 = v16[2];
    unint64_t v18 = v16[3];
    if (v19 >= v18 >> 1) {
      uint64_t v16 = sub_25A67B834((void *)(v18 > 1), v19 + 1, 1, v16);
    }
    v16[2] = v19 + 1;
    unint64_t v20 = &v16[2 * v19];
    unint64_t v21 = v30;
    v20[4] = v31;
    v20[5] = v21;
    uint64_t v1 = v33;
  }
  type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo(0);
  sub_25A6C73F0();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F072A0], v34);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F07288], v36);
  (*(void (**)(char *, void, uint64_t))(v37 + 104))(v39, *MEMORY[0x263F072B8], v38);
  (*(void (**)(char *, void, uint64_t))(v41 + 104))(v40, *MEMORY[0x263F072C8], v1);
  sub_25A6C7330();
  sub_25A6C72F0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v35);
  uint64_t v43 = 0;
  unint64_t v44 = 0xE000000000000000;
  sub_25A6C7740();
  swift_bridgeObjectRelease();
  uint64_t v43 = 0x7466417972746572;
  unint64_t v44 = 0xEF3D657461447265;
  sub_25A6C74F0();
  swift_bridgeObjectRelease();
  uint64_t v22 = v43;
  unint64_t v23 = v44;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v16 = sub_25A67B834(0, v16[2] + 1, 1, v16);
  }
  unint64_t v25 = v16[2];
  unint64_t v24 = v16[3];
  if (v25 >= v24 >> 1) {
    uint64_t v16 = sub_25A67B834((void *)(v24 > 1), v25 + 1, 1, v16);
  }
  v16[2] = v25 + 1;
  uint64_t v26 = &v16[2 * v25];
  v26[4] = v22;
  v26[5] = v23;
  uint64_t v43 = (uint64_t)v16;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B32A010);
  sub_25A67B944();
  uint64_t v27 = sub_25A6C7490();
  swift_bridgeObjectRelease();
  return v27;
}

uint64_t TrustedCloudComputeError.InvalidRequestErrorInfo.description.getter()
{
  return sub_25A67A93C();
}

uint64_t TrustedCloudComputeError.UnauthorizedErrorInfo.description.getter()
{
  return sub_25A67A93C();
}

uint64_t sub_25A67A93C()
{
  if ((*v0 & 1) == 0)
  {
    sub_25A6C74F0();
    sub_25A6C77A0();
    uint64_t v1 = sub_25A67B834(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v3 = v1[2];
    unint64_t v2 = v1[3];
    if (v3 >= v2 >> 1) {
      uint64_t v1 = sub_25A67B834((void *)(v2 > 1), v3 + 1, 1, v1);
    }
    v1[2] = v3 + 1;
    uint64_t v4 = &v1[2 * v3];
    v4[4] = 0;
    v4[5] = 0xE000000000000000;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B32A010);
  sub_25A67B944();
  uint64_t v5 = sub_25A6C7490();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t TrustedCloudComputeError.ServerErrorInfo.description.getter()
{
  uint64_t v86 = sub_25A6C7340();
  uint64_t v75 = *(void *)(v86 - 8);
  MEMORY[0x270FA5388](v86);
  uint64_t v74 = (char *)&v69 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_25A6C7320();
  uint64_t v71 = *(void *)(v72 - 8);
  MEMORY[0x270FA5388](v72);
  uint64_t v73 = (char *)&v69 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_25A6C7300();
  uint64_t v83 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_25A6C7310();
  uint64_t v76 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78);
  uint64_t v79 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25A6C7400();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v77 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25A6C7350();
  uint64_t v81 = *(void *)(v9 - 8);
  uint64_t v82 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v80 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_25A6C73A0();
  uint64_t v87 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  char v88 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *v0;
  uint64_t v84 = v3;
  uint64_t v85 = v5;
  uint64_t v69 = v13;
  if (v13 == 47)
  {
    uint64_t v14 = (void *)MEMORY[0x263F8EE78];
  }
  else
  {
    v90[0] = 0;
    v90[1] = 0xE000000000000000;
    sub_25A6C7740();
    sub_25A6C74F0();
    LOBYTE(v89) = v13;
    sub_25A6C77A0();
    uint64_t v15 = v90[0];
    uint64_t v16 = v90[1];
    uint64_t v14 = sub_25A67B834(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v18 = v14[2];
    unint64_t v17 = v14[3];
    if (v18 >= v17 >> 1) {
      uint64_t v14 = sub_25A67B834((void *)(v17 > 1), v18 + 1, 1, v14);
    }
    v14[2] = v18 + 1;
    unint64_t v19 = &v14[2 * v18];
    v19[4] = v15;
    v19[5] = v16;
  }
  unsigned int v20 = v0[1];
  if (v20 != 17)
  {
    v90[0] = 0;
    v90[1] = 0xE000000000000000;
    sub_25A6C74F0();
    LOBYTE(v89) = v20;
    sub_25A6C77A0();
    uint64_t v21 = v90[0];
    uint64_t v22 = v90[1];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v14 = sub_25A67B834(0, v14[2] + 1, 1, v14);
    }
    unint64_t v24 = v14[2];
    unint64_t v23 = v14[3];
    if (v24 >= v23 >> 1) {
      uint64_t v14 = sub_25A67B834((void *)(v23 > 1), v24 + 1, 1, v14);
    }
    v14[2] = v24 + 1;
    unint64_t v25 = &v14[2 * v24];
    v25[4] = v21;
    v25[5] = v22;
  }
  uint64_t v26 = *((void *)v0 + 1);
  int v27 = v0[16];
  if (v27 == 255)
  {
    uint64_t v28 = *((void *)v0 + 1);
    if (!*((void *)v0 + 4)) {
      goto LABEL_28;
    }
    goto LABEL_23;
  }
  if (v27)
  {
    strcpy((char *)v90, "error-code=");
    HIDWORD(v90[1]) = -352321536;
    LOBYTE(v28) = v26;
    uint64_t v89 = v26;
    sub_25A6C79D0();
    sub_25A6C74F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v90[0] = 0;
    v90[1] = 0xE000000000000000;
    sub_25A6C74F0();
    LOBYTE(v28) = v26;
    LOBYTE(v89) = v26;
    sub_25A6C77A0();
  }
  uint64_t v30 = v90[0];
  uint64_t v29 = v90[1];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v14 = sub_25A67B834(0, v14[2] + 1, 1, v14);
  }
  unint64_t v32 = v14[2];
  unint64_t v31 = v14[3];
  if (v32 >= v31 >> 1) {
    uint64_t v14 = sub_25A67B834((void *)(v31 > 1), v32 + 1, 1, v14);
  }
  v14[2] = v32 + 1;
  uint64_t v33 = &v14[2 * v32];
  v33[4] = v30;
  v33[5] = v29;
  if (*((void *)v0 + 4))
  {
LABEL_23:
    strcpy((char *)v90, "description=");
    BYTE5(v90[1]) = 0;
    HIWORD(v90[1]) = -5120;
    sub_25A6C74F0();
    uint64_t v34 = v90[0];
    uint64_t v35 = v90[1];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v14 = sub_25A67B834(0, v14[2] + 1, 1, v14);
    }
    unint64_t v37 = v14[2];
    unint64_t v36 = v14[3];
    if (v37 >= v36 >> 1) {
      uint64_t v14 = sub_25A67B834((void *)(v36 > 1), v37 + 1, 1, v14);
    }
    v14[2] = v37 + 1;
    uint64_t v38 = &v14[2 * v37];
    v38[4] = v34;
    v38[5] = v35;
  }
LABEL_28:
  if (*((void *)v0 + 6))
  {
    v90[0] = 0x3D6573756163;
    v90[1] = 0xE600000000000000;
    sub_25A6C74F0();
    uint64_t v39 = v90[0];
    uint64_t v40 = v90[1];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v14 = sub_25A67B834(0, v14[2] + 1, 1, v14);
    }
    unint64_t v42 = v14[2];
    unint64_t v41 = v14[3];
    if (v42 >= v41 >> 1) {
      uint64_t v14 = sub_25A67B834((void *)(v41 > 1), v42 + 1, 1, v14);
    }
    v14[2] = v42 + 1;
    uint64_t v43 = &v14[2 * v42];
    v43[4] = v39;
    v43[5] = v40;
  }
  int v44 = v0[64];
  if (v44 != 1
    || (v27 & 1) == 0 && v28 <= 0x25u && ((1 << v28) & 0x3C33960000) != 0
    || v20 <= 0xE && ((1 << v20) & 0x4110) != 0
    || v69 <= 0x2C && ((1 << v69) & 0x108002000000) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v14 = sub_25A67B834(0, v14[2] + 1, 1, v14);
    }
    uint64_t v51 = v87;
    uint64_t v50 = v88;
    unint64_t v53 = v14[2];
    unint64_t v52 = v14[3];
    if (v53 >= v52 >> 1) {
      uint64_t v14 = sub_25A67B834((void *)(v52 > 1), v53 + 1, 1, v14);
    }
    v14[2] = v53 + 1;
    uint64_t v54 = (char *)&v14[2 * v53];
    strcpy(v54 + 32, "retryable=yes");
    *((_WORD *)v54 + 23) = -4864;
    uint64_t v55 = &v0[*(int *)(type metadata accessor for TC2RopesResponseMetadata() + 60)];
    uint64_t v70 = v11;
    if (v44) {
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v51 + 16))(v50, v55, v11);
    }
    else {
      sub_25A6C7360();
    }
    uint64_t v57 = v74;
    uint64_t v56 = v75;
    uint64_t v58 = v73;
    uint64_t v59 = v72;
    uint64_t v60 = v71;
    sub_25A6C73F0();
    (*(void (**)(char *, void, uint64_t))(v76 + 104))(v79, *MEMORY[0x263F072A0], v78);
    (*(void (**)(char *, void, uint64_t))(v83 + 104))(v85, *MEMORY[0x263F07288], v84);
    (*(void (**)(char *, void, uint64_t))(v60 + 104))(v58, *MEMORY[0x263F072B8], v59);
    (*(void (**)(char *, void, uint64_t))(v56 + 104))(v57, *MEMORY[0x263F072C8], v86);
    uint64_t v61 = v80;
    sub_25A6C7330();
    uint64_t v62 = v88;
    sub_25A6C72F0();
    (*(void (**)(char *, uint64_t))(v81 + 8))(v61, v82);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v62, v70);
    v90[0] = 0;
    v90[1] = 0xE000000000000000;
    sub_25A6C7740();
    swift_bridgeObjectRelease();
    v90[0] = 0x7466417972746572;
    v90[1] = 0xEF3D657461447265;
    sub_25A6C74F0();
    swift_bridgeObjectRelease();
    uint64_t v63 = v90[0];
    unint64_t v49 = v90[1];
    unint64_t v65 = v14[2];
    unint64_t v64 = v14[3];
    if (v65 >= v64 >> 1) {
      uint64_t v14 = sub_25A67B834((void *)(v64 > 1), v65 + 1, 1, v14);
    }
    v14[2] = v65 + 1;
    uint64_t v66 = &v14[2 * v65];
    v66[4] = v63;
    uint64_t v48 = v66 + 4;
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v14 = sub_25A67B834(0, v14[2] + 1, 1, v14);
    }
    unint64_t v46 = v14[2];
    unint64_t v45 = v14[3];
    if (v46 >= v45 >> 1) {
      uint64_t v14 = sub_25A67B834((void *)(v45 > 1), v46 + 1, 1, v14);
    }
    v14[2] = v46 + 1;
    uint64_t v47 = &v14[2 * v46];
    v47[4] = 0x6C62617972746572;
    uint64_t v48 = v47 + 4;
    unint64_t v49 = 0xEC0000006F6E3D65;
  }
  v48[1] = v49;
  v90[0] = v14;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B32A010);
  sub_25A67B944();
  uint64_t v67 = sub_25A6C7490();
  swift_bridgeObjectRelease();
  return v67;
}

uint64_t TrustedCloudComputeError.InternalErrorInfo.description.getter()
{
  if (*(unsigned char *)(v0 + 16) != 12)
  {
    sub_25A6C74F0();
    sub_25A6C77A0();
    uint64_t v1 = sub_25A67B834(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v3 = v1[2];
    unint64_t v2 = v1[3];
    if (v3 >= v2 >> 1) {
      uint64_t v1 = sub_25A67B834((void *)(v2 > 1), v3 + 1, 1, v1);
    }
    v1[2] = v3 + 1;
    uint64_t v4 = &v1[2 * v3];
    v4[4] = 0;
    v4[5] = 0xE000000000000000;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B32A010);
  sub_25A67B944();
  uint64_t v5 = sub_25A6C7490();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t TrustedCloudComputeError.NetworkErrorInfo.description.getter()
{
  return 0x3D6E69616D6F64;
}

void *sub_25A67B834(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C160);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_25A684524(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_25A67B944()
{
  unint64_t result = qword_26B329C98;
  if (!qword_26B329C98)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B32A010);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B329C98);
  }
  return result;
}

unint64_t sub_25A67B9A4()
{
  unint64_t result = qword_26A44BDC8;
  if (!qword_26A44BDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BDC8);
  }
  return result;
}

unint64_t sub_25A67B9FC()
{
  unint64_t result = qword_26A44BDD0;
  if (!qword_26A44BDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BDD0);
  }
  return result;
}

unint64_t sub_25A67BA54()
{
  unint64_t result = qword_26A44BDD8;
  if (!qword_26A44BDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BDD8);
  }
  return result;
}

unint64_t sub_25A67BAAC()
{
  unint64_t result = qword_26A44BDE0;
  if (!qword_26A44BDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BDE0);
  }
  return result;
}

unint64_t sub_25A67BB04()
{
  unint64_t result = qword_26A44BDE8;
  if (!qword_26A44BDE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BDE8);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for TrustedCloudComputeError(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v7;
        uint64_t v8 = *((void *)a2 + 3);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = v8;
        uint64_t v9 = *((void *)a2 + 5);
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *((void *)a1 + 5) = v9;
        *((void *)a1 + 6) = *((void *)a2 + 6);
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
        uint64_t v10 = *(int *)(type metadata accessor for TrustedCloudComputeError.RateLimitInfo(0) + 40);
        int64_t v11 = &a1[v10];
        unint64_t v45 = &a2[v10];
        uint64_t v12 = sub_25A6C73A0();
        uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v13(v11, v45, v12);
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        *a1 = *a2;
        uint64_t v16 = *(int *)(type metadata accessor for TrustedCloudComputeError.AvailabilityInfo(0) + 20);
        unint64_t v17 = &a1[v16];
        unint64_t v18 = &a2[v16];
        uint64_t v19 = sub_25A6C73A0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        *a1 = *a2;
        uint64_t v20 = *(int *)(type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo(0) + 20);
        uint64_t v21 = &a1[v20];
        uint64_t v22 = &a2[v20];
        uint64_t v23 = sub_25A6C73A0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        *(_WORD *)a1 = *(_WORD *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        a1[16] = a2[16];
        uint64_t v24 = *((void *)a2 + 4);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        *((void *)a1 + 4) = v24;
        uint64_t v25 = *((void *)a2 + 6);
        *((void *)a1 + 5) = *((void *)a2 + 5);
        *((void *)a1 + 6) = v25;
        *((void *)a1 + 7) = *((void *)a2 + 7);
        a1[64] = a2[64];
        uint64_t v26 = *((void *)a2 + 10);
        *((void *)a1 + 9) = *((void *)a2 + 9);
        *((void *)a1 + 10) = v26;
        uint64_t v27 = *((void *)a2 + 12);
        *((void *)a1 + 11) = *((void *)a2 + 11);
        *((void *)a1 + 12) = v27;
        uint64_t v28 = *((void *)a2 + 14);
        *((void *)a1 + 13) = *((void *)a2 + 13);
        *((void *)a1 + 14) = v28;
        uint64_t v29 = *((void *)a2 + 16);
        *((void *)a1 + 15) = *((void *)a2 + 15);
        *((void *)a1 + 16) = v29;
        uint64_t v30 = *((void *)a2 + 18);
        *((void *)a1 + 17) = *((void *)a2 + 17);
        *((void *)a1 + 18) = v30;
        uint64_t v31 = *(int *)(type metadata accessor for TC2RopesResponseMetadata() + 60);
        uint64_t v43 = &a2[v31];
        int v44 = &a1[v31];
        uint64_t v32 = sub_25A6C73A0();
        uint64_t v33 = *(void *)(v32 - 8);
        uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v35 = v33;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v34(v44, v43, v32);
        uint64_t v36 = type metadata accessor for TrustedCloudComputeError.ServerErrorInfo(0);
        a1[*(int *)(v36 + 20)] = a2[*(int *)(v36 + 20)];
        uint64_t v37 = *(int *)(v36 + 24);
        uint64_t v38 = &a1[v37];
        uint64_t v39 = &a2[v37];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v39, 1, v32))
        {
          uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BAC8);
          memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
        }
        else
        {
          v34(v38, v39, v32);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v38, 0, 1, v32);
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        uint64_t v41 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v41;
        a1[16] = a2[16];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        uint64_t v42 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v42;
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((void *)a1 + 4) = *((void *)a2 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for TrustedCloudComputeError(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = *(int *)(type metadata accessor for TrustedCloudComputeError.RateLimitInfo(0) + 40);
      goto LABEL_6;
    case 1:
      uint64_t v4 = type metadata accessor for TrustedCloudComputeError.AvailabilityInfo(0);
      goto LABEL_5;
    case 2:
      uint64_t v4 = type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo(0);
LABEL_5:
      uint64_t v3 = *(int *)(v4 + 20);
LABEL_6:
      uint64_t v5 = a1 + v3;
      uint64_t v6 = sub_25A6C73A0();
      uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
      return v7(v5, v6);
    case 5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v8 = a1 + *(int *)(type metadata accessor for TC2RopesResponseMetadata() + 60);
      uint64_t v9 = sub_25A6C73A0();
      uint64_t v10 = *(void *)(v9 - 8);
      uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
      v12(v8, v9);
      uint64_t v11 = a1 + *(int *)(type metadata accessor for TrustedCloudComputeError.ServerErrorInfo(0) + 24);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v11, 1, v9);
      if (!result)
      {
        return ((uint64_t (*)(uint64_t, uint64_t))v12)(v11, v9);
      }
      return result;
    case 6:
      goto LABEL_12;
    case 7:
      swift_bridgeObjectRelease();
LABEL_12:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

char *initializeWithCopy for TrustedCloudComputeError(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v6;
      uint64_t v7 = *((void *)a2 + 3);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = v7;
      uint64_t v8 = *((void *)a2 + 5);
      *((void *)a1 + 4) = *((void *)a2 + 4);
      *((void *)a1 + 5) = v8;
      *((void *)a1 + 6) = *((void *)a2 + 6);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      uint64_t v9 = *(int *)(type metadata accessor for TrustedCloudComputeError.RateLimitInfo(0) + 40);
      uint64_t v10 = &a1[v9];
      uint64_t v43 = &a2[v9];
      uint64_t v11 = sub_25A6C73A0();
      uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12(v10, v43, v11);
      goto LABEL_11;
    case 1u:
      *a1 = *a2;
      uint64_t v13 = *(int *)(type metadata accessor for TrustedCloudComputeError.AvailabilityInfo(0) + 20);
      uint64_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      uint64_t v16 = sub_25A6C73A0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
      goto LABEL_11;
    case 2u:
      *a1 = *a2;
      uint64_t v17 = *(int *)(type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo(0) + 20);
      unint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      uint64_t v20 = sub_25A6C73A0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
      goto LABEL_11;
    case 5u:
      *(_WORD *)a1 = *(_WORD *)a2;
      *((void *)a1 + 1) = *((void *)a2 + 1);
      a1[16] = a2[16];
      uint64_t v21 = *((void *)a2 + 4);
      *((void *)a1 + 3) = *((void *)a2 + 3);
      *((void *)a1 + 4) = v21;
      uint64_t v22 = *((void *)a2 + 6);
      *((void *)a1 + 5) = *((void *)a2 + 5);
      *((void *)a1 + 6) = v22;
      *((void *)a1 + 7) = *((void *)a2 + 7);
      a1[64] = a2[64];
      uint64_t v23 = *((void *)a2 + 10);
      *((void *)a1 + 9) = *((void *)a2 + 9);
      *((void *)a1 + 10) = v23;
      uint64_t v24 = *((void *)a2 + 12);
      *((void *)a1 + 11) = *((void *)a2 + 11);
      *((void *)a1 + 12) = v24;
      uint64_t v25 = *((void *)a2 + 14);
      *((void *)a1 + 13) = *((void *)a2 + 13);
      *((void *)a1 + 14) = v25;
      uint64_t v26 = *((void *)a2 + 16);
      *((void *)a1 + 15) = *((void *)a2 + 15);
      *((void *)a1 + 16) = v26;
      uint64_t v27 = *((void *)a2 + 18);
      *((void *)a1 + 17) = *((void *)a2 + 17);
      *((void *)a1 + 18) = v27;
      uint64_t v28 = *(int *)(type metadata accessor for TC2RopesResponseMetadata() + 60);
      uint64_t v41 = &a2[v28];
      uint64_t v42 = &a1[v28];
      uint64_t v29 = sub_25A6C73A0();
      uint64_t v30 = *(void *)(v29 - 8);
      uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v32 = v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v31(v42, v41, v29);
      uint64_t v33 = type metadata accessor for TrustedCloudComputeError.ServerErrorInfo(0);
      a1[*(int *)(v33 + 20)] = a2[*(int *)(v33 + 20)];
      uint64_t v34 = *(int *)(v33 + 24);
      uint64_t v35 = &a1[v34];
      uint64_t v36 = &a2[v34];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v36, 1, v29))
      {
        uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BAC8);
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        v31(v35, v36, v29);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v35, 0, 1, v29);
      }
      goto LABEL_11;
    case 6u:
      uint64_t v38 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v38;
      a1[16] = a2[16];
      swift_bridgeObjectRetain();
      goto LABEL_11;
    case 7u:
      uint64_t v39 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v39;
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      *((void *)a1 + 4) = *((void *)a2 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_11:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithCopy for TrustedCloudComputeError(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25A66D27C((uint64_t)a1, type metadata accessor for TrustedCloudComputeError);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        uint64_t v6 = *(int *)(type metadata accessor for TrustedCloudComputeError.RateLimitInfo(0) + 40);
        uint64_t v7 = (char *)a1 + v6;
        uint64_t v33 = (char *)a2 + v6;
        uint64_t v8 = sub_25A6C73A0();
        uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v9(v7, v33, v8);
        goto LABEL_12;
      case 1u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v10 = *(int *)(type metadata accessor for TrustedCloudComputeError.AvailabilityInfo(0) + 20);
        uint64_t v11 = (char *)a1 + v10;
        uint64_t v12 = (char *)a2 + v10;
        uint64_t v13 = sub_25A6C73A0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
        goto LABEL_12;
      case 2u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v14 = *(int *)(type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo(0) + 20);
        uint64_t v15 = (char *)a1 + v14;
        uint64_t v16 = (char *)a2 + v14;
        uint64_t v17 = sub_25A6C73A0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
        goto LABEL_12;
      case 5u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *((unsigned char *)a1 + 1) = *((unsigned char *)a2 + 1);
        uint64_t v18 = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        a1[1] = v18;
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        uint64_t v19 = a2[7];
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
        a1[7] = v19;
        a1[9] = a2[9];
        a1[10] = a2[10];
        a1[11] = a2[11];
        a1[12] = a2[12];
        a1[13] = a2[13];
        a1[14] = a2[14];
        a1[15] = a2[15];
        a1[16] = a2[16];
        a1[17] = a2[17];
        a1[18] = a2[18];
        uint64_t v20 = *(int *)(type metadata accessor for TC2RopesResponseMetadata() + 60);
        uint64_t v31 = (char *)a2 + v20;
        uint64_t v32 = (char *)a1 + v20;
        uint64_t v21 = sub_25A6C73A0();
        uint64_t v22 = *(void *)(v21 - 8);
        uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v24 = v22;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v23(v32, v31, v21);
        uint64_t v25 = type metadata accessor for TrustedCloudComputeError.ServerErrorInfo(0);
        *((unsigned char *)a1 + *(int *)(v25 + 20)) = *((unsigned char *)a2 + *(int *)(v25 + 20));
        uint64_t v26 = *(int *)(v25 + 24);
        uint64_t v27 = (char *)a1 + v26;
        uint64_t v28 = (char *)a2 + v26;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v28, 1, v21))
        {
          uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BAC8);
          memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
          v23(v27, v28, v21);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v27, 0, 1, v21);
        }
        goto LABEL_12;
      case 6u:
        *a1 = *a2;
        a1[1] = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        swift_bridgeObjectRetain();
        goto LABEL_12;
      case 7u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_12:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_OWORD *initializeWithTake for TrustedCloudComputeError(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      long long v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      long long v7 = a2[3];
      a1[2] = a2[2];
      a1[3] = v7;
      *((void *)a1 + 8) = *((void *)a2 + 8);
      uint64_t v8 = *(int *)(type metadata accessor for TrustedCloudComputeError.RateLimitInfo(0) + 40);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_25A6C73A0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      goto LABEL_9;
    case 1u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v12 = *(int *)(type metadata accessor for TrustedCloudComputeError.AvailabilityInfo(0) + 20);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = sub_25A6C73A0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      goto LABEL_9;
    case 2u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v16 = *(int *)(type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo(0) + 20);
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = sub_25A6C73A0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
      goto LABEL_9;
    case 5u:
      *(_WORD *)a1 = *(_WORD *)a2;
      *((void *)a1 + 1) = *((void *)a2 + 1);
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      *((void *)a1 + 7) = *((void *)a2 + 7);
      *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
      *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
      *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
      *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
      *(_OWORD *)((char *)a1 + 120) = *(_OWORD *)((char *)a2 + 120);
      *(_OWORD *)((char *)a1 + 136) = *(_OWORD *)((char *)a2 + 136);
      uint64_t v20 = *(int *)(type metadata accessor for TC2RopesResponseMetadata() + 60);
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      uint64_t v23 = sub_25A6C73A0();
      uint64_t v24 = *(void *)(v23 - 8);
      uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
      v25(v21, v22, v23);
      uint64_t v26 = type metadata accessor for TrustedCloudComputeError.ServerErrorInfo(0);
      *((unsigned char *)a1 + *(int *)(v26 + 20)) = *((unsigned char *)a2 + *(int *)(v26 + 20));
      uint64_t v27 = *(int *)(v26 + 24);
      uint64_t v28 = (char *)a1 + v27;
      uint64_t v29 = (char *)a2 + v27;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v29, 1, v23))
      {
        uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BAC8);
        memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        v25(v28, v29, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v28, 0, 1, v23);
      }
LABEL_9:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *assignWithTake for TrustedCloudComputeError(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25A66D27C((uint64_t)a1, type metadata accessor for TrustedCloudComputeError);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        long long v6 = a2[1];
        *a1 = *a2;
        a1[1] = v6;
        long long v7 = a2[3];
        a1[2] = a2[2];
        a1[3] = v7;
        *((void *)a1 + 8) = *((void *)a2 + 8);
        uint64_t v8 = *(int *)(type metadata accessor for TrustedCloudComputeError.RateLimitInfo(0) + 40);
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = sub_25A6C73A0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
        goto LABEL_10;
      case 1u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v12 = *(int *)(type metadata accessor for TrustedCloudComputeError.AvailabilityInfo(0) + 20);
        uint64_t v13 = (char *)a1 + v12;
        uint64_t v14 = (char *)a2 + v12;
        uint64_t v15 = sub_25A6C73A0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
        goto LABEL_10;
      case 2u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v16 = *(int *)(type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo(0) + 20);
        uint64_t v17 = (char *)a1 + v16;
        uint64_t v18 = (char *)a2 + v16;
        uint64_t v19 = sub_25A6C73A0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
        goto LABEL_10;
      case 5u:
        *(_WORD *)a1 = *(_WORD *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        *((void *)a1 + 7) = *((void *)a2 + 7);
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
        *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
        *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
        *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
        *(_OWORD *)((char *)a1 + 120) = *(_OWORD *)((char *)a2 + 120);
        *(_OWORD *)((char *)a1 + 136) = *(_OWORD *)((char *)a2 + 136);
        uint64_t v20 = *(int *)(type metadata accessor for TC2RopesResponseMetadata() + 60);
        uint64_t v21 = (char *)a1 + v20;
        uint64_t v22 = (char *)a2 + v20;
        uint64_t v23 = sub_25A6C73A0();
        uint64_t v24 = *(void *)(v23 - 8);
        uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
        v25(v21, v22, v23);
        uint64_t v26 = type metadata accessor for TrustedCloudComputeError.ServerErrorInfo(0);
        *((unsigned char *)a1 + *(int *)(v26 + 20)) = *((unsigned char *)a2 + *(int *)(v26 + 20));
        uint64_t v27 = *(int *)(v26 + 24);
        uint64_t v28 = (char *)a1 + v27;
        uint64_t v29 = (char *)a2 + v27;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v29, 1, v23))
        {
          uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BAC8);
          memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
        }
        else
        {
          v25(v28, v29, v23);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v28, 0, 1, v23);
        }
LABEL_10:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for TrustedCloudComputeError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for TrustedCloudComputeError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_25A67D3BC()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_25A67D3CC()
{
  uint64_t result = type metadata accessor for TrustedCloudComputeError.RateLimitInfo(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TrustedCloudComputeError.AvailabilityInfo(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo(319);
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for TrustedCloudComputeError.ServerErrorInfo(319);
        if (v4 <= 0x3F)
        {
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for TrustedCloudComputeError.RateLimitInfo(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (void *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    uint64_t v7 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v7;
    *(void *)(a1 + 48) = a2[6];
    uint64_t v8 = *(int *)(a3 + 40);
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    uint64_t v11 = sub_25A6C73A0();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
  }
  return v3;
}

uint64_t destroy for TrustedCloudComputeError.RateLimitInfo(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = sub_25A6C73A0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for TrustedCloudComputeError.RateLimitInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v7 = *(int *)(a3 + 40);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v10 = sub_25A6C73A0();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  return a1;
}

void *assignWithCopy for TrustedCloudComputeError.RateLimitInfo(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_25A6C73A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for TrustedCloudComputeError.RateLimitInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_25A6C73A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  return a1;
}

void *assignWithTake for TrustedCloudComputeError.RateLimitInfo(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  uint64_t v9 = *(int *)(a3 + 40);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_25A6C73A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrustedCloudComputeError.RateLimitInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25A67DA2C);
}

uint64_t sub_25A67DA2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 48);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_25A6C73A0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for TrustedCloudComputeError.RateLimitInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25A67DAF0);
}

uint64_t sub_25A67DAF0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 48) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_25A6C73A0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_25A67DB98()
{
  uint64_t result = sub_25A6C73A0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for TrustedCloudComputeError.RateLimitInfo.WorkloadTag()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for TrustedCloudComputeError.RateLimitInfo.WorkloadTag(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for TrustedCloudComputeError.RateLimitInfo.WorkloadTag(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void *assignWithTake for TrustedCloudComputeError.RateLimitInfo.WorkloadTag(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TrustedCloudComputeError.RateLimitInfo.WorkloadTag(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TrustedCloudComputeError.RateLimitInfo.WorkloadTag(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.RateLimitInfo.WorkloadTag()
{
  return &type metadata for TrustedCloudComputeError.RateLimitInfo.WorkloadTag;
}

uint64_t getEnumTagSinglePayload for TrustedCloudComputeError.AvailabilityInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25A67DE54);
}

uint64_t sub_25A67DE54(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 251)
  {
    if (*a1 <= 4u) {
      int v4 = 4;
    }
    else {
      int v4 = *a1;
    }
    unsigned int v5 = v4 - 4;
    if (*a1 >= 4u) {
      return v5;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v9 = sub_25A6C73A0();
    uint64_t v10 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = &a1[*(int *)(a3 + 20)];
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for TrustedCloudComputeError.AvailabilityInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25A67DF1C);
}

unsigned char *sub_25A67DF1C(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  unsigned int v5 = result;
  if (a3 == 251)
  {
    *__n128 result = a2 + 4;
  }
  else
  {
    uint64_t v7 = sub_25A6C73A0();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_25A67DFC0()
{
  return sub_25A67E4A4();
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.AvailabilityInfo.Reason()
{
  return &type metadata for TrustedCloudComputeError.AvailabilityInfo.Reason;
}

uint64_t *_s19PrivateCloudCompute24TrustedCloudComputeErrorO16AvailabilityInfoVwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  long long v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *long long v3 = *a2;
    long long v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_25A6C73A0();
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t _s19PrivateCloudCompute24TrustedCloudComputeErrorO16AvailabilityInfoVwxx_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_25A6C73A0();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

unsigned char *_s19PrivateCloudCompute24TrustedCloudComputeErrorO16AvailabilityInfoVwcp_0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_25A6C73A0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

unsigned char *_s19PrivateCloudCompute24TrustedCloudComputeErrorO16AvailabilityInfoVwca_0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_25A6C73A0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

unsigned char *_s19PrivateCloudCompute24TrustedCloudComputeErrorO16AvailabilityInfoVwtk_0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_25A6C73A0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

unsigned char *_s19PrivateCloudCompute24TrustedCloudComputeErrorO16AvailabilityInfoVwta_0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_25A6C73A0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrustedCloudComputeError.TimeoutErrorInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25A67E32C);
}

uint64_t sub_25A67E32C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 253)
  {
    if (*a1 <= 2u) {
      int v4 = 2;
    }
    else {
      int v4 = *a1;
    }
    unsigned int v5 = v4 - 2;
    if (*a1 >= 2u) {
      return v5;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v9 = sub_25A6C73A0();
    uint64_t v10 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = &a1[*(int *)(a3 + 20)];
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for TrustedCloudComputeError.TimeoutErrorInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25A67E3F4);
}

unsigned char *sub_25A67E3F4(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  unsigned int v5 = result;
  if (a3 == 253)
  {
    *__n128 result = a2 + 2;
  }
  else
  {
    uint64_t v7 = sub_25A6C73A0();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_25A67E498()
{
  return sub_25A67E4A4();
}

uint64_t sub_25A67E4A4()
{
  uint64_t result = sub_25A6C73A0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo.Reason()
{
  return &type metadata for TrustedCloudComputeError.TimeoutErrorInfo.Reason;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.InvalidRequestErrorInfo()
{
  return &type metadata for TrustedCloudComputeError.InvalidRequestErrorInfo;
}

uint64_t sub_25A67E568()
{
  return 0;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.InvalidRequestErrorInfo.Reason()
{
  return &type metadata for TrustedCloudComputeError.InvalidRequestErrorInfo.Reason;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.UnauthorizedErrorInfo()
{
  return &type metadata for TrustedCloudComputeError.UnauthorizedErrorInfo;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.UnauthorizedErrorInfo.Reason()
{
  return &type metadata for TrustedCloudComputeError.UnauthorizedErrorInfo.Reason;
}

void *initializeBufferWithCopyOfBuffer for TrustedCloudComputeError.ServerErrorInfo(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *int v4 = *a2;
    int v4 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v7 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v7;
    uint64_t v8 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v8;
    *(void *)(a1 + 56) = a2[7];
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    uint64_t v9 = a2[10];
    *(void *)(a1 + 72) = a2[9];
    *(void *)(a1 + 80) = v9;
    uint64_t v10 = a2[12];
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = v10;
    uint64_t v11 = a2[14];
    *(void *)(a1 + 104) = a2[13];
    *(void *)(a1 + 112) = v11;
    uint64_t v12 = a2[16];
    *(void *)(a1 + 120) = a2[15];
    *(void *)(a1 + 128) = v12;
    uint64_t v13 = a2[18];
    *(void *)(a1 + 136) = a2[17];
    *(void *)(a1 + 144) = v13;
    uint64_t v14 = *(int *)(type metadata accessor for TC2RopesResponseMetadata() + 60);
    uint64_t v24 = (uint64_t)a2 + v14;
    uint64_t v25 = (char *)v4 + v14;
    uint64_t v15 = sub_25A6C73A0();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23(v25, v24, v15);
    uint64_t v17 = *(int *)(a3 + 24);
    *((unsigned char *)v4 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    uint64_t v18 = (char *)v4 + v17;
    uint64_t v19 = (char *)a2 + v17;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v19, 1, v15))
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BAC8);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      v23(v18, (uint64_t)v19, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v18, 0, 1, v15);
    }
  }
  return v4;
}

uint64_t destroy for TrustedCloudComputeError.ServerErrorInfo(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(type metadata accessor for TC2RopesResponseMetadata() + 60);
  uint64_t v5 = sub_25A6C73A0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v9(v4, v5);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v7, v5);
  }
  return result;
}

uint64_t initializeWithCopy for TrustedCloudComputeError.ServerErrorInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  uint64_t v9 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v9;
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  uint64_t v11 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v11;
  uint64_t v12 = *(int *)(type metadata accessor for TC2RopesResponseMetadata() + 60);
  uint64_t v22 = (const void *)(a2 + v12);
  uint64_t v23 = (void *)(a1 + v12);
  uint64_t v13 = sub_25A6C73A0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void (**)(void *, const void *, uint64_t))(v14 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15(v23, v22, v13);
  uint64_t v17 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v19, 1, v13))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BAC8);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    v15(v18, v19, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v18, 0, 1, v13);
  }
  return a1;
}

uint64_t assignWithCopy for TrustedCloudComputeError.ServerErrorInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v6 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v7;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(type metadata accessor for TC2RopesResponseMetadata() + 60);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_25A6C73A0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void (**)(void *, const void *, uint64_t))(v12 + 24);
  v13(v9, v10, v11);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  uint64_t v17 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  LODWORD(v9) = v17((const void *)(a1 + v14), 1, v11);
  int v18 = v17(v16, 1, v11);
  if (!v9)
  {
    if (!v18)
    {
      v13(v15, v16, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v15, v11);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BAC8);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v15, v16, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
  return a1;
}

uint64_t initializeWithTake for TrustedCloudComputeError.ServerErrorInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  uint64_t v6 = *(int *)(type metadata accessor for TC2RopesResponseMetadata() + 60);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_25A6C73A0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(void *, const void *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  uint64_t v12 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v14, 1, v9))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BAC8);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  return a1;
}

uint64_t assignWithTake for TrustedCloudComputeError.ServerErrorInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(int *)(type metadata accessor for TC2RopesResponseMetadata() + 60);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  uint64_t v16 = sub_25A6C73A0();
  uint64_t v17 = *(void *)(v16 - 8);
  int v18 = *(void (**)(void *, const void *, uint64_t))(v17 + 40);
  v18(v14, v15, v16);
  uint64_t v19 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (const void *)(a2 + v19);
  uint64_t v22 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v17 + 48);
  LODWORD(v14) = v22((const void *)(a1 + v19), 1, v16);
  int v23 = v22(v21, 1, v16);
  if (!v14)
  {
    if (!v23)
    {
      v18(v20, v21, v16);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v20, v16);
    goto LABEL_6;
  }
  if (v23)
  {
LABEL_6:
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BAC8);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v20, v21, v16);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrustedCloudComputeError.ServerErrorInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25A67F230);
}

uint64_t sub_25A67F230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TC2RopesResponseMetadata();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 254)
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BAC8);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for TrustedCloudComputeError.ServerErrorInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25A67F380);
}

uint64_t sub_25A67F380(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for TC2RopesResponseMetadata();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 254)
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BAC8);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_25A67F4AC()
{
  type metadata accessor for TC2RopesResponseMetadata();
  if (v0 <= 0x3F)
  {
    sub_25A67F57C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_25A67F57C()
{
  if (!qword_26B329B30)
  {
    sub_25A6C73A0();
    unint64_t v0 = sub_25A6C76D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B329B30);
    }
  }
}

uint64_t destroy for TrustedCloudComputeError.InternalErrorInfo()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s19PrivateCloudCompute24TrustedCloudComputeErrorO17InternalErrorInfoVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TrustedCloudComputeError.InternalErrorInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for TrustedCloudComputeError.InternalErrorInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrustedCloudComputeError.InternalErrorInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TrustedCloudComputeError.InternalErrorInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.InternalErrorInfo()
{
  return &type metadata for TrustedCloudComputeError.InternalErrorInfo;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.InternalErrorInfo.Reason()
{
  return &type metadata for TrustedCloudComputeError.InternalErrorInfo.Reason;
}

uint64_t initializeBufferWithCopyOfBuffer for TrustedCloudComputeError.NetworkErrorInfo(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for TrustedCloudComputeError.NetworkErrorInfo()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TrustedCloudComputeError.NetworkErrorInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for TrustedCloudComputeError.NetworkErrorInfo(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for TrustedCloudComputeError.NetworkErrorInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TrustedCloudComputeError.NetworkErrorInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TrustedCloudComputeError.NetworkErrorInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.NetworkErrorInfo()
{
  return &type metadata for TrustedCloudComputeError.NetworkErrorInfo;
}

uint64_t getEnumTagSinglePayload for TrustedCloudComputeError.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TrustedCloudComputeError.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *__n128 result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A67FB04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.CodingKeys()
{
  return &type metadata for TrustedCloudComputeError.CodingKeys;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.DeniedDueToRateLimitCodingKeys()
{
  return &type metadata for TrustedCloudComputeError.DeniedDueToRateLimitCodingKeys;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.DeniedDueToAvailabilityCodingKeys()
{
  return &type metadata for TrustedCloudComputeError.DeniedDueToAvailabilityCodingKeys;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.TimeoutErrorCodingKeys()
{
  return &type metadata for TrustedCloudComputeError.TimeoutErrorCodingKeys;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.InvalidRequestErrorCodingKeys()
{
  return &type metadata for TrustedCloudComputeError.InvalidRequestErrorCodingKeys;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.UnauthorizedErrorCodingKeys()
{
  return &type metadata for TrustedCloudComputeError.UnauthorizedErrorCodingKeys;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.ServerErrorCodingKeys()
{
  return &type metadata for TrustedCloudComputeError.ServerErrorCodingKeys;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.InternalErrorCodingKeys()
{
  return &type metadata for TrustedCloudComputeError.InternalErrorCodingKeys;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.NetworkErrorCodingKeys()
{
  return &type metadata for TrustedCloudComputeError.NetworkErrorCodingKeys;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.NetworkErrorInfo.CodingKeys()
{
  return &type metadata for TrustedCloudComputeError.NetworkErrorInfo.CodingKeys;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.InternalErrorInfo.CodingKeys()
{
  return &type metadata for TrustedCloudComputeError.InternalErrorInfo.CodingKeys;
}

uint64_t getEnumTagSinglePayload for TC2RopesResponseMetadata.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s19PrivateCloudCompute24TrustedCloudComputeErrorO17InternalErrorInfoV6ReasonOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *__n128 result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A67FD40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.InternalErrorInfo.Reason.CodingKeys()
{
  return &type metadata for TrustedCloudComputeError.InternalErrorInfo.Reason.CodingKeys;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.InternalErrorInfo.Reason.XpcConnectionInterruptedCodingKeys()
{
  return &type metadata for TrustedCloudComputeError.InternalErrorInfo.Reason.XpcConnectionInterruptedCodingKeys;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.InternalErrorInfo.Reason.FailedToLoadKeyDataCodingKeys()
{
  return &type metadata for TrustedCloudComputeError.InternalErrorInfo.Reason.FailedToLoadKeyDataCodingKeys;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.InternalErrorInfo.Reason.FailedToFetchPrivateAccessTokensCodingKeys()
{
  return &type metadata for TrustedCloudComputeError.InternalErrorInfo.Reason.FailedToFetchPrivateAccessTokensCodingKeys;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.InternalErrorInfo.Reason.InvalidResponseUUIDCodingKeys()
{
  return &type metadata for TrustedCloudComputeError.InternalErrorInfo.Reason.InvalidResponseUUIDCodingKeys;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.InternalErrorInfo.Reason.FailedToValidateAllAttestationsCodingKeys()
{
  return &type metadata for TrustedCloudComputeError.InternalErrorInfo.Reason.FailedToValidateAllAttestationsCodingKeys;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.InternalErrorInfo.Reason.ResponseSummaryIndicatesFailureCodingKeys()
{
  return &type metadata for TrustedCloudComputeError.InternalErrorInfo.Reason.ResponseSummaryIndicatesFailureCodingKeys;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.InternalErrorInfo.Reason.ResponseSummaryIndicatesUnauthenticatedCodingKeys()
{
  return &type metadata for TrustedCloudComputeError.InternalErrorInfo.Reason.ResponseSummaryIndicatesUnauthenticatedCodingKeys;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.InternalErrorInfo.Reason.ResponseSummaryIndicatesInternalErrorCodingKeys()
{
  return &type metadata for TrustedCloudComputeError.InternalErrorInfo.Reason.ResponseSummaryIndicatesInternalErrorCodingKeys;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.InternalErrorInfo.Reason.ResponseSummaryIndicatesInvalidRequestCodingKeys()
{
  return &type metadata for TrustedCloudComputeError.InternalErrorInfo.Reason.ResponseSummaryIndicatesInvalidRequestCodingKeys;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.InternalErrorInfo.Reason.MissingAttestationBundleCodingKeys()
{
  return &type metadata for TrustedCloudComputeError.InternalErrorInfo.Reason.MissingAttestationBundleCodingKeys;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.InternalErrorInfo.Reason.InvalidAttestationBundleCodingKeys()
{
  return &type metadata for TrustedCloudComputeError.InternalErrorInfo.Reason.InvalidAttestationBundleCodingKeys;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.InternalErrorInfo.Reason.RoutingHintMismatchCodingKeys()
{
  return &type metadata for TrustedCloudComputeError.InternalErrorInfo.Reason.RoutingHintMismatchCodingKeys;
}

uint64_t _s19PrivateCloudCompute24TrustedCloudComputeErrorO16NetworkErrorInfoV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s19PrivateCloudCompute24TrustedCloudComputeErrorO16NetworkErrorInfoV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A67FF94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_25A67FFBC(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_25A67FFC4(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.ServerErrorInfo.CodingKeys()
{
  return &type metadata for TrustedCloudComputeError.ServerErrorInfo.CodingKeys;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.UnauthorizedErrorInfo.CodingKeys()
{
  return &type metadata for TrustedCloudComputeError.UnauthorizedErrorInfo.CodingKeys;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.UnauthorizedErrorInfo.Reason.CodingKeys()
{
  return &type metadata for TrustedCloudComputeError.UnauthorizedErrorInfo.Reason.CodingKeys;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.UnauthorizedErrorInfo.Reason.SoftwareBlockedCodingKeys()
{
  return &type metadata for TrustedCloudComputeError.UnauthorizedErrorInfo.Reason.SoftwareBlockedCodingKeys;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.InvalidRequestErrorInfo.CodingKeys()
{
  return &type metadata for TrustedCloudComputeError.InvalidRequestErrorInfo.CodingKeys;
}

uint64_t getEnumTagSinglePayload for Prefetch.Response.Node.ValidationResult.InvalidCodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s19PrivateCloudCompute24TrustedCloudComputeErrorO23InvalidRequestErrorInfoV6ReasonOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25A680108);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.InvalidRequestErrorInfo.Reason.CodingKeys()
{
  return &type metadata for TrustedCloudComputeError.InvalidRequestErrorInfo.Reason.CodingKeys;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.InvalidRequestErrorInfo.Reason.InvalidWorkloadCodingKeys()
{
  return &type metadata for TrustedCloudComputeError.InvalidRequestErrorInfo.Reason.InvalidWorkloadCodingKeys;
}

unsigned char *sub_25A680150(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo.CodingKeys()
{
  return &type metadata for TrustedCloudComputeError.TimeoutErrorInfo.CodingKeys;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo.Reason.CodingKeys()
{
  return &type metadata for TrustedCloudComputeError.TimeoutErrorInfo.Reason.CodingKeys;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo.Reason.SetupRequestTimeoutCodingKeys()
{
  return &type metadata for TrustedCloudComputeError.TimeoutErrorInfo.Reason.SetupRequestTimeoutCodingKeys;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo.Reason.DecryptionKeyTimeoutCodingKeys()
{
  return &type metadata for TrustedCloudComputeError.TimeoutErrorInfo.Reason.DecryptionKeyTimeoutCodingKeys;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.AvailabilityInfo.CodingKeys()
{
  return &type metadata for TrustedCloudComputeError.AvailabilityInfo.CodingKeys;
}

uint64_t getEnumTagSinglePayload for TC2RequestState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s19PrivateCloudCompute24TrustedCloudComputeErrorO16AvailabilityInfoV6ReasonOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A680308);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.AvailabilityInfo.Reason.CodingKeys()
{
  return &type metadata for TrustedCloudComputeError.AvailabilityInfo.Reason.CodingKeys;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.AvailabilityInfo.Reason.UnknownWorkloadCodingKeys()
{
  return &type metadata for TrustedCloudComputeError.AvailabilityInfo.Reason.UnknownWorkloadCodingKeys;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.AvailabilityInfo.Reason.NoNodesAvailableCodingKeys()
{
  return &type metadata for TrustedCloudComputeError.AvailabilityInfo.Reason.NoNodesAvailableCodingKeys;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.AvailabilityInfo.Reason.NodesBusyCodingKeys()
{
  return &type metadata for TrustedCloudComputeError.AvailabilityInfo.Reason.NodesBusyCodingKeys;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.AvailabilityInfo.Reason.NodeAttestationChangedCodingKeys()
{
  return &type metadata for TrustedCloudComputeError.AvailabilityInfo.Reason.NodeAttestationChangedCodingKeys;
}

uint64_t getEnumTagSinglePayload for TrustedCloudComputeError.RateLimitInfo.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TrustedCloudComputeError.RateLimitInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A6804DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.RateLimitInfo.CodingKeys()
{
  return &type metadata for TrustedCloudComputeError.RateLimitInfo.CodingKeys;
}

uint64_t getEnumTagSinglePayload for TrustedCloudComputeRateLimit.WorkloadParameter.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s19PrivateCloudCompute24TrustedCloudComputeErrorO16TimeoutErrorInfoV6ReasonOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A680670);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeError.RateLimitInfo.WorkloadTag.CodingKeys()
{
  return &type metadata for TrustedCloudComputeError.RateLimitInfo.WorkloadTag.CodingKeys;
}

unint64_t sub_25A6806AC()
{
  unint64_t result = qword_26A44BDF0;
  if (!qword_26A44BDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BDF0);
  }
  return result;
}

unint64_t sub_25A680704()
{
  unint64_t result = qword_26A44BDF8;
  if (!qword_26A44BDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BDF8);
  }
  return result;
}

unint64_t sub_25A68075C()
{
  unint64_t result = qword_26A44BE00;
  if (!qword_26A44BE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BE00);
  }
  return result;
}

unint64_t sub_25A6807B4()
{
  unint64_t result = qword_26A44BE08;
  if (!qword_26A44BE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BE08);
  }
  return result;
}

unint64_t sub_25A68080C()
{
  unint64_t result = qword_26A44BE10;
  if (!qword_26A44BE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BE10);
  }
  return result;
}

unint64_t sub_25A680864()
{
  unint64_t result = qword_26A44BE18;
  if (!qword_26A44BE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BE18);
  }
  return result;
}

unint64_t sub_25A6808BC()
{
  unint64_t result = qword_26A44BE20;
  if (!qword_26A44BE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BE20);
  }
  return result;
}

unint64_t sub_25A680914()
{
  unint64_t result = qword_26A44BE28;
  if (!qword_26A44BE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BE28);
  }
  return result;
}

unint64_t sub_25A68096C()
{
  unint64_t result = qword_26A44BE30;
  if (!qword_26A44BE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BE30);
  }
  return result;
}

unint64_t sub_25A6809C4()
{
  unint64_t result = qword_26A44BE38;
  if (!qword_26A44BE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BE38);
  }
  return result;
}

unint64_t sub_25A680A1C()
{
  unint64_t result = qword_26A44BE40;
  if (!qword_26A44BE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BE40);
  }
  return result;
}

unint64_t sub_25A680A74()
{
  unint64_t result = qword_26A44BE48;
  if (!qword_26A44BE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BE48);
  }
  return result;
}

unint64_t sub_25A680ACC()
{
  unint64_t result = qword_26A44BE50;
  if (!qword_26A44BE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BE50);
  }
  return result;
}

unint64_t sub_25A680B24()
{
  unint64_t result = qword_26A44BE58;
  if (!qword_26A44BE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BE58);
  }
  return result;
}

unint64_t sub_25A680B7C()
{
  unint64_t result = qword_26A44BE60;
  if (!qword_26A44BE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BE60);
  }
  return result;
}

unint64_t sub_25A680BD4()
{
  unint64_t result = qword_26A44BE68;
  if (!qword_26A44BE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BE68);
  }
  return result;
}

unint64_t sub_25A680C2C()
{
  unint64_t result = qword_26A44BE70;
  if (!qword_26A44BE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BE70);
  }
  return result;
}

unint64_t sub_25A680C84()
{
  unint64_t result = qword_26A44BE78;
  if (!qword_26A44BE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BE78);
  }
  return result;
}

unint64_t sub_25A680CDC()
{
  unint64_t result = qword_26A44BE80;
  if (!qword_26A44BE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BE80);
  }
  return result;
}

unint64_t sub_25A680D34()
{
  unint64_t result = qword_26A44BE88;
  if (!qword_26A44BE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BE88);
  }
  return result;
}

unint64_t sub_25A680D8C()
{
  unint64_t result = qword_26A44BE90;
  if (!qword_26A44BE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BE90);
  }
  return result;
}

unint64_t sub_25A680DE4()
{
  unint64_t result = qword_26A44BE98;
  if (!qword_26A44BE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BE98);
  }
  return result;
}

unint64_t sub_25A680E3C()
{
  unint64_t result = qword_26A44BEA0;
  if (!qword_26A44BEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BEA0);
  }
  return result;
}

unint64_t sub_25A680E94()
{
  unint64_t result = qword_26A44BEA8;
  if (!qword_26A44BEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BEA8);
  }
  return result;
}

unint64_t sub_25A680EEC()
{
  unint64_t result = qword_26A44BEB0;
  if (!qword_26A44BEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BEB0);
  }
  return result;
}

unint64_t sub_25A680F44()
{
  unint64_t result = qword_26A44BEB8;
  if (!qword_26A44BEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BEB8);
  }
  return result;
}

unint64_t sub_25A680F9C()
{
  unint64_t result = qword_26A44BEC0;
  if (!qword_26A44BEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BEC0);
  }
  return result;
}

unint64_t sub_25A680FF4()
{
  unint64_t result = qword_26A44BEC8;
  if (!qword_26A44BEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BEC8);
  }
  return result;
}

unint64_t sub_25A68104C()
{
  unint64_t result = qword_26A44BED0;
  if (!qword_26A44BED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BED0);
  }
  return result;
}

unint64_t sub_25A6810A4()
{
  unint64_t result = qword_26A44BED8;
  if (!qword_26A44BED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BED8);
  }
  return result;
}

unint64_t sub_25A6810FC()
{
  unint64_t result = qword_26A44BEE0;
  if (!qword_26A44BEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BEE0);
  }
  return result;
}

unint64_t sub_25A681154()
{
  unint64_t result = qword_26A44BEE8;
  if (!qword_26A44BEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BEE8);
  }
  return result;
}

unint64_t sub_25A6811AC()
{
  unint64_t result = qword_26A44BEF0;
  if (!qword_26A44BEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BEF0);
  }
  return result;
}

unint64_t sub_25A681204()
{
  unint64_t result = qword_26A44BEF8;
  if (!qword_26A44BEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BEF8);
  }
  return result;
}

unint64_t sub_25A68125C()
{
  unint64_t result = qword_26A44BF00;
  if (!qword_26A44BF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BF00);
  }
  return result;
}

unint64_t sub_25A6812B4()
{
  unint64_t result = qword_26A44BF08;
  if (!qword_26A44BF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BF08);
  }
  return result;
}

unint64_t sub_25A68130C()
{
  unint64_t result = qword_26A44BF10;
  if (!qword_26A44BF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BF10);
  }
  return result;
}

unint64_t sub_25A681364()
{
  unint64_t result = qword_26A44BF18;
  if (!qword_26A44BF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BF18);
  }
  return result;
}

unint64_t sub_25A6813BC()
{
  unint64_t result = qword_26A44BF20;
  if (!qword_26A44BF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BF20);
  }
  return result;
}

unint64_t sub_25A681414()
{
  unint64_t result = qword_26A44BF28;
  if (!qword_26A44BF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BF28);
  }
  return result;
}

unint64_t sub_25A68146C()
{
  unint64_t result = qword_26A44BF30;
  if (!qword_26A44BF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BF30);
  }
  return result;
}

unint64_t sub_25A6814C4()
{
  unint64_t result = qword_26A44BF38;
  if (!qword_26A44BF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BF38);
  }
  return result;
}

unint64_t sub_25A68151C()
{
  unint64_t result = qword_26A44BF40;
  if (!qword_26A44BF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BF40);
  }
  return result;
}

unint64_t sub_25A681574()
{
  unint64_t result = qword_26A44BF48;
  if (!qword_26A44BF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BF48);
  }
  return result;
}

unint64_t sub_25A6815CC()
{
  unint64_t result = qword_26A44BF50;
  if (!qword_26A44BF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BF50);
  }
  return result;
}

unint64_t sub_25A681624()
{
  unint64_t result = qword_26A44BF58;
  if (!qword_26A44BF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BF58);
  }
  return result;
}

unint64_t sub_25A68167C()
{
  unint64_t result = qword_26A44BF60;
  if (!qword_26A44BF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BF60);
  }
  return result;
}

unint64_t sub_25A6816D4()
{
  unint64_t result = qword_26A44BF68;
  if (!qword_26A44BF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BF68);
  }
  return result;
}

unint64_t sub_25A68172C()
{
  unint64_t result = qword_26A44BF70;
  if (!qword_26A44BF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BF70);
  }
  return result;
}

unint64_t sub_25A681784()
{
  unint64_t result = qword_26A44BF78;
  if (!qword_26A44BF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BF78);
  }
  return result;
}

unint64_t sub_25A6817DC()
{
  unint64_t result = qword_26A44BF80;
  if (!qword_26A44BF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BF80);
  }
  return result;
}

unint64_t sub_25A681834()
{
  unint64_t result = qword_26A44BF88;
  if (!qword_26A44BF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BF88);
  }
  return result;
}

unint64_t sub_25A68188C()
{
  unint64_t result = qword_26A44BF90;
  if (!qword_26A44BF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BF90);
  }
  return result;
}

unint64_t sub_25A6818E4()
{
  unint64_t result = qword_26A44BF98;
  if (!qword_26A44BF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BF98);
  }
  return result;
}

unint64_t sub_25A68193C()
{
  unint64_t result = qword_26A44BFA0;
  if (!qword_26A44BFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BFA0);
  }
  return result;
}

unint64_t sub_25A681994()
{
  unint64_t result = qword_26A44BFA8;
  if (!qword_26A44BFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BFA8);
  }
  return result;
}

unint64_t sub_25A6819EC()
{
  unint64_t result = qword_26A44BFB0;
  if (!qword_26A44BFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BFB0);
  }
  return result;
}

unint64_t sub_25A681A44()
{
  unint64_t result = qword_26A44BFB8;
  if (!qword_26A44BFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BFB8);
  }
  return result;
}

unint64_t sub_25A681A9C()
{
  unint64_t result = qword_26A44BFC0;
  if (!qword_26A44BFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BFC0);
  }
  return result;
}

unint64_t sub_25A681AF4()
{
  unint64_t result = qword_26A44BFC8;
  if (!qword_26A44BFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BFC8);
  }
  return result;
}

unint64_t sub_25A681B4C()
{
  unint64_t result = qword_26A44BFD0;
  if (!qword_26A44BFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BFD0);
  }
  return result;
}

unint64_t sub_25A681BA4()
{
  unint64_t result = qword_26A44BFD8;
  if (!qword_26A44BFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BFD8);
  }
  return result;
}

unint64_t sub_25A681BFC()
{
  unint64_t result = qword_26A44BFE0;
  if (!qword_26A44BFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BFE0);
  }
  return result;
}

unint64_t sub_25A681C54()
{
  unint64_t result = qword_26A44BFE8;
  if (!qword_26A44BFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BFE8);
  }
  return result;
}

unint64_t sub_25A681CAC()
{
  unint64_t result = qword_26A44BFF0;
  if (!qword_26A44BFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BFF0);
  }
  return result;
}

unint64_t sub_25A681D04()
{
  unint64_t result = qword_26A44BFF8;
  if (!qword_26A44BFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44BFF8);
  }
  return result;
}

unint64_t sub_25A681D5C()
{
  unint64_t result = qword_26A44C000;
  if (!qword_26A44C000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C000);
  }
  return result;
}

unint64_t sub_25A681DB4()
{
  unint64_t result = qword_26A44C008;
  if (!qword_26A44C008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C008);
  }
  return result;
}

unint64_t sub_25A681E0C()
{
  unint64_t result = qword_26A44C010;
  if (!qword_26A44C010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C010);
  }
  return result;
}

unint64_t sub_25A681E64()
{
  unint64_t result = qword_26A44C018;
  if (!qword_26A44C018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C018);
  }
  return result;
}

unint64_t sub_25A681EBC()
{
  unint64_t result = qword_26A44C020;
  if (!qword_26A44C020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C020);
  }
  return result;
}

unint64_t sub_25A681F14()
{
  unint64_t result = qword_26A44C028;
  if (!qword_26A44C028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C028);
  }
  return result;
}

unint64_t sub_25A681F6C()
{
  unint64_t result = qword_26A44C030;
  if (!qword_26A44C030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C030);
  }
  return result;
}

unint64_t sub_25A681FC4()
{
  unint64_t result = qword_26A44C038;
  if (!qword_26A44C038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C038);
  }
  return result;
}

unint64_t sub_25A68201C()
{
  unint64_t result = qword_26A44C040;
  if (!qword_26A44C040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C040);
  }
  return result;
}

unint64_t sub_25A682074()
{
  unint64_t result = qword_26A44C048;
  if (!qword_26A44C048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C048);
  }
  return result;
}

unint64_t sub_25A6820CC()
{
  unint64_t result = qword_26A44C050;
  if (!qword_26A44C050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C050);
  }
  return result;
}

unint64_t sub_25A682124()
{
  unint64_t result = qword_26A44C058;
  if (!qword_26A44C058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C058);
  }
  return result;
}

unint64_t sub_25A68217C()
{
  unint64_t result = qword_26A44C060;
  if (!qword_26A44C060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C060);
  }
  return result;
}

unint64_t sub_25A6821D4()
{
  unint64_t result = qword_26A44C068;
  if (!qword_26A44C068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C068);
  }
  return result;
}

unint64_t sub_25A68222C()
{
  unint64_t result = qword_26A44C070;
  if (!qword_26A44C070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C070);
  }
  return result;
}

unint64_t sub_25A682284()
{
  unint64_t result = qword_26A44C078;
  if (!qword_26A44C078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C078);
  }
  return result;
}

unint64_t sub_25A6822DC()
{
  unint64_t result = qword_26A44C080;
  if (!qword_26A44C080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C080);
  }
  return result;
}

unint64_t sub_25A682334()
{
  unint64_t result = qword_26A44C088;
  if (!qword_26A44C088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C088);
  }
  return result;
}

unint64_t sub_25A68238C()
{
  unint64_t result = qword_26A44C090;
  if (!qword_26A44C090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C090);
  }
  return result;
}

unint64_t sub_25A6823E4()
{
  unint64_t result = qword_26A44C098;
  if (!qword_26A44C098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C098);
  }
  return result;
}

unint64_t sub_25A68243C()
{
  unint64_t result = qword_26A44C0A0;
  if (!qword_26A44C0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C0A0);
  }
  return result;
}

unint64_t sub_25A682494()
{
  unint64_t result = qword_26A44C0A8;
  if (!qword_26A44C0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C0A8);
  }
  return result;
}

unint64_t sub_25A6824EC()
{
  unint64_t result = qword_26A44C0B0;
  if (!qword_26A44C0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C0B0);
  }
  return result;
}

unint64_t sub_25A682544()
{
  unint64_t result = qword_26A44C0B8;
  if (!qword_26A44C0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C0B8);
  }
  return result;
}

unint64_t sub_25A68259C()
{
  unint64_t result = qword_26A44C0C0;
  if (!qword_26A44C0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C0C0);
  }
  return result;
}

unint64_t sub_25A6825F4()
{
  unint64_t result = qword_26A44C0C8;
  if (!qword_26A44C0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C0C8);
  }
  return result;
}

unint64_t sub_25A68264C()
{
  unint64_t result = qword_26A44C0D0;
  if (!qword_26A44C0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C0D0);
  }
  return result;
}

unint64_t sub_25A6826A4()
{
  unint64_t result = qword_26A44C0D8;
  if (!qword_26A44C0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C0D8);
  }
  return result;
}

unint64_t sub_25A6826FC()
{
  unint64_t result = qword_26A44C0E0;
  if (!qword_26A44C0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C0E0);
  }
  return result;
}

unint64_t sub_25A682754()
{
  unint64_t result = qword_26A44C0E8;
  if (!qword_26A44C0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C0E8);
  }
  return result;
}

unint64_t sub_25A6827AC()
{
  unint64_t result = qword_26A44C0F0;
  if (!qword_26A44C0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C0F0);
  }
  return result;
}

unint64_t sub_25A682804()
{
  unint64_t result = qword_26A44C0F8;
  if (!qword_26A44C0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C0F8);
  }
  return result;
}

unint64_t sub_25A68285C()
{
  unint64_t result = qword_26A44C100;
  if (!qword_26A44C100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C100);
  }
  return result;
}

unint64_t sub_25A6828B4()
{
  unint64_t result = qword_26A44C108;
  if (!qword_26A44C108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C108);
  }
  return result;
}

unint64_t sub_25A68290C()
{
  unint64_t result = qword_26A44C110;
  if (!qword_26A44C110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C110);
  }
  return result;
}

unint64_t sub_25A682964()
{
  unint64_t result = qword_26A44C118;
  if (!qword_26A44C118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C118);
  }
  return result;
}

unint64_t sub_25A6829BC()
{
  unint64_t result = qword_26A44C120;
  if (!qword_26A44C120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C120);
  }
  return result;
}

unint64_t sub_25A682A14()
{
  unint64_t result = qword_26A44C128;
  if (!qword_26A44C128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C128);
  }
  return result;
}

unint64_t sub_25A682A6C()
{
  unint64_t result = qword_26A44C130;
  if (!qword_26A44C130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C130);
  }
  return result;
}

unint64_t sub_25A682AC4()
{
  unint64_t result = qword_26A44C138;
  if (!qword_26A44C138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C138);
  }
  return result;
}

unint64_t sub_25A682B1C()
{
  unint64_t result = qword_26A44C140;
  if (!qword_26A44C140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C140);
  }
  return result;
}

unint64_t sub_25A682B74()
{
  unint64_t result = qword_26A44C148;
  if (!qword_26A44C148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C148);
  }
  return result;
}

unint64_t sub_25A682BCC()
{
  unint64_t result = qword_26A44C150;
  if (!qword_26A44C150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C150);
  }
  return result;
}

uint64_t sub_25A682C20(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C158);
  uint64_t v10 = *(void *)(type metadata accessor for TrustedRequestHistory.Request() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_25A6C77C0();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for TrustedRequestHistory.Request() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_25A684618(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_25A682E88(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7955819 && a2 == 0xE300000000000000;
  if (v2 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_25A6C7A00();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25A682F64(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4449656C646E7562 && a2 == 0xE800000000000000;
  if (v2 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4965727574616566 && a2 == 0xE900000000000044 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64616F6C6B726F77 && a2 == 0xEC00000065707954 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x64616F6C6B726F77 && a2 == 0xEC00000073676154 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746E756F63 && a2 == 0xE500000000000000 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7466417972746572 && a2 == 0xEE00657461447265)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_25A6C7A00();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_25A68329C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x576E776F6E6B6E75 && a2 == 0xEF64616F6C6B726FLL;
  if (v2 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000025A6CF5D0 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7375427365646F6ELL && a2 == 0xE900000000000079 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000025A6CF5F0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_25A6C7A00();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_25A68347C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x800000025A6CF610 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000025A6CF630)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_25A6C7A00();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25A683568(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F73616572 && a2 == 0xE600000000000000;
  if (v2 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7466417972746572 && a2 == 0xEE00657461447265)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_25A6C7A00();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25A683678(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x800000025A6CF650 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C62617972746572 && a2 == 0xE900000000000065 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7466417972746572 && a2 == 0xEE00657461447265)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_25A6C7A00();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_25A6837FC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x800000025A6CF670 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000025A6CF690 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x800000025A6CF6B0 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000025A6CF6E0 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x800000025A6CF700 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x800000025A6CF720 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000027 && a2 == 0x800000025A6CF740 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x800000025A6CF770 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000026 && a2 == 0x800000025A6CF7A0 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000025A6CF7D0 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000025A6CF7F0 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000025A6CF810)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    char v5 = sub_25A6C7A00();
    swift_bridgeObjectRelease();
    if (v5) {
      return 11;
    }
    else {
      return 12;
    }
  }
}

uint64_t sub_25A683C3C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6567617373656DLL && a2 == 0xE700000000000000;
  if (v2 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F73616572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_25A6C7A00();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25A683D28(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
  if (v2 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701080931 && a2 == 0xE400000000000000 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6567617373656DLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_25A6C7A00();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_25A683E68(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x800000025A6CF830 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000025A6CF850 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4574756F656D6974 && a2 == 0xEC000000726F7272 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000025A6CF870 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000025A6CF890 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7245726576726573 && a2 == 0xEB00000000726F72 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6C616E7265746E69 && a2 == 0xED0000726F727245 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x456B726F7774656ELL && a2 == 0xEC000000726F7272)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v5 = sub_25A6C7A00();
    swift_bridgeObjectRelease();
    if (v5) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_25A6841F4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x800000025A6CF950)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_25A6C7A00();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_25A68427C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x800000025A6CF8D0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_25A6C7A00();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_25A684304(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000017 && a2 == 0x800000025A6CF910)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_25A6C7A00();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_25A68438C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x800000025A6CF8B0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_25A6C7A00();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_25A684414(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x800000025A6CF930)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_25A6C7A00();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_25A68449C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x800000025A6CF8F0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_25A6C7A00();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_25A684524(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_25A6C7810();
  __break(1u);
  return result;
}

uint64_t sub_25A684618(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(type metadata accessor for TrustedRequestHistory.Request() - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_25A6C7810();
  __break(1u);
  return result;
}

uint64_t TC2RopesResponseMetadata.retryable.getter()
{
  if (v0[64] != 1) {
    return 1;
  }
  if ((v0[16] & 1) == 0)
  {
    unsigned int v1 = v0[8] - 17;
    if (v1 < 0x15 && ((0x1E19CBu >> v1) & 1) != 0) {
      return 1;
    }
  }
  unsigned int v2 = v0[1];
  uint64_t result = 1;
  BOOL v4 = v2 > 0xE;
  int v5 = (1 << v2) & 0x4110;
  if (v4 || v5 == 0)
  {
    unsigned int v7 = *v0;
    BOOL v8 = v7 >= 0x2D;
    unint64_t v9 = (0x108002000000uLL >> v7) & 1;
    if (v8) {
      return 0;
    }
    else {
      return v9;
    }
  }
  return result;
}

uint64_t TC2RopesResponseMetadata.retryAfterDate.getter@<X0>(uint64_t a1@<X8>)
{
  if (*(unsigned char *)(v1 + 64))
  {
    uint64_t v3 = v1 + *(int *)(type metadata accessor for TC2RopesResponseMetadata() + 60);
    uint64_t v4 = sub_25A6C73A0();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
    return v5(a1, v3, v4);
  }
  else
  {
    type metadata accessor for TC2RopesResponseMetadata();
    return sub_25A6C7360();
  }
}

uint64_t type metadata accessor for TC2RopesResponseMetadata()
{
  uint64_t result = qword_26B329B80;
  if (!qword_26B329B80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

BOOL TC2RopesResponseMetadata.isError.getter()
{
  uint64_t v1 = type metadata accessor for TC2RopesResponseMetadata();
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v12 - v5;
  int v7 = *v0;
  sub_25A686D90((uint64_t)v0, (uint64_t)&v12 - v5);
  if (v7 != 4)
  {
    sub_25A686DF4((uint64_t)v6);
    sub_25A686D90((uint64_t)v0, (uint64_t)v4);
    goto LABEL_8;
  }
  int v8 = v6[1];
  sub_25A686DF4((uint64_t)v6);
  sub_25A686D90((uint64_t)v0, (uint64_t)v4);
  if (v8)
  {
LABEL_8:
    sub_25A686DF4((uint64_t)v4);
    return 1;
  }
  uint64_t v9 = *((void *)v4 + 1);
  int v10 = v4[16];
  sub_25A686DF4((uint64_t)v4);
  if (v10 == 255) {
    return 1;
  }
  if ((v10 & 1) == 0) {
    uint64_t v9 = qword_25A6CBCE0[(char)v9];
  }
  return v9 != 0;
}

void TC2RopesResponseMetadata.code.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *TC2RopesResponseMetadata.code.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*TC2RopesResponseMetadata.code.modify())()
{
  return nullsub_1;
}

void TC2RopesResponseMetadata.status.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

unsigned char *TC2RopesResponseMetadata.status.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 1) = *result;
  return result;
}

uint64_t (*TC2RopesResponseMetadata.status.modify())()
{
  return nullsub_1;
}

void TC2RopesResponseMetadata.receivedErrorCode.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 16);
  *(void *)a1 = *(void *)(v1 + 8);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t TC2RopesResponseMetadata.receivedErrorCode.setter(uint64_t result)
{
  char v2 = *(unsigned char *)(result + 8);
  *(void *)(v1 + 8) = *(void *)result;
  *(unsigned char *)(v1 + 16) = v2;
  return result;
}

uint64_t (*TC2RopesResponseMetadata.receivedErrorCode.modify())()
{
  return nullsub_1;
}

uint64_t TC2RopesResponseMetadata.errorDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TC2RopesResponseMetadata.errorDescription.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*TC2RopesResponseMetadata.errorDescription.modify())()
{
  return nullsub_1;
}

uint64_t TC2RopesResponseMetadata.cause.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TC2RopesResponseMetadata.cause.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*TC2RopesResponseMetadata.cause.modify())()
{
  return nullsub_1;
}

uint64_t TC2RopesResponseMetadata.retryAfter.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t TC2RopesResponseMetadata.retryAfter.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 56) = result;
  *(unsigned char *)(v2 + 64) = a2 & 1;
  return result;
}

uint64_t (*TC2RopesResponseMetadata.retryAfter.modify())()
{
  return nullsub_1;
}

uint64_t TC2RopesResponseMetadata.ttrTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TC2RopesResponseMetadata.ttrTitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = a2;
  return result;
}

uint64_t (*TC2RopesResponseMetadata.ttrTitle.modify())()
{
  return nullsub_1;
}

uint64_t TC2RopesResponseMetadata.ttrDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TC2RopesResponseMetadata.ttrDescription.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = a2;
  return result;
}

uint64_t (*TC2RopesResponseMetadata.ttrDescription.modify())()
{
  return nullsub_1;
}

uint64_t TC2RopesResponseMetadata.ttrComponentID.getter()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TC2RopesResponseMetadata.ttrComponentID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = a2;
  return result;
}

uint64_t (*TC2RopesResponseMetadata.ttrComponentID.modify())()
{
  return nullsub_1;
}

uint64_t TC2RopesResponseMetadata.ttrComponentName.getter()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TC2RopesResponseMetadata.ttrComponentName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 128) = a2;
  return result;
}

uint64_t (*TC2RopesResponseMetadata.ttrComponentName.modify())()
{
  return nullsub_1;
}

uint64_t TC2RopesResponseMetadata.ttrComponentVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + 136);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TC2RopesResponseMetadata.ttrComponentVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = a2;
  return result;
}

uint64_t (*TC2RopesResponseMetadata.ttrComponentVersion.modify())()
{
  return nullsub_1;
}

uint64_t TC2RopesResponseMetadata.init(now:code:)@<X0>(Swift::Int rawValue@<X1>, uint64_t a2@<X0>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + 1) = 17;
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 16) = -1;
  *(_OWORD *)(a3 + 24) = 0u;
  *(_OWORD *)(a3 + 40) = 0u;
  *(void *)(a3 + 56) = 0;
  *(unsigned char *)(a3 + 64) = 1;
  *(_OWORD *)(a3 + 72) = 0u;
  *(_OWORD *)(a3 + 88) = 0u;
  *(_OWORD *)(a3 + 104) = 0u;
  *(_OWORD *)(a3 + 120) = 0u;
  *(_OWORD *)(a3 + 136) = 0u;
  TC2RopesResponseMetadata.Code.init(rawValue:)(rawValue);
  *(unsigned char *)a3 = v9;
  uint64_t v5 = a3 + *(int *)(type metadata accessor for TC2RopesResponseMetadata() + 60);
  uint64_t v6 = sub_25A6C73A0();
  int v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  return v7(v5, a2, v6);
}

PrivateCloudCompute::TC2RopesResponseMetadata::Code_optional __swiftcall TC2RopesResponseMetadata.Code.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 0;
  char v3 = 29;
  switch(rawValue)
  {
    case 100:
      goto LABEL_31;
    case 101:
      char v2 = 1;
      goto LABEL_31;
    case 102:
      char v2 = 2;
      goto LABEL_31;
    case 103:
      char v2 = 3;
      goto LABEL_31;
    case 200:
      char v2 = 4;
      goto LABEL_31;
    case 201:
      char v2 = 5;
      goto LABEL_31;
    case 202:
      char v2 = 6;
      goto LABEL_31;
    case 203:
      char v2 = 7;
      goto LABEL_31;
    case 204:
      char v2 = 8;
      goto LABEL_31;
    case 205:
      char v2 = 9;
      goto LABEL_31;
    case 206:
      char v2 = 10;
      goto LABEL_31;
    case 300:
      char v2 = 11;
      goto LABEL_31;
    case 301:
      char v2 = 12;
      goto LABEL_31;
    case 302:
      char v2 = 13;
      goto LABEL_31;
    case 303:
      char v2 = 14;
      goto LABEL_31;
    case 304:
      char v2 = 15;
      goto LABEL_31;
    case 307:
      char v2 = 16;
      goto LABEL_31;
    case 308:
      char v2 = 17;
      goto LABEL_31;
    case 400:
      char v2 = 18;
      goto LABEL_31;
    case 401:
      char v2 = 19;
      goto LABEL_31;
    case 403:
      char v2 = 20;
      goto LABEL_31;
    case 404:
      char v2 = 21;
      goto LABEL_31;
    case 405:
      char v2 = 22;
      goto LABEL_31;
    case 406:
      char v2 = 23;
      goto LABEL_31;
    case 407:
      char v2 = 24;
      goto LABEL_31;
    case 408:
      char v2 = 25;
      goto LABEL_31;
    case 409:
      char v2 = 26;
      goto LABEL_31;
    case 410:
      char v2 = 27;
      goto LABEL_31;
    case 411:
      char v2 = 28;
LABEL_31:
      char v3 = v2;
      goto LABEL_32;
    case 412:
LABEL_32:
      *uint64_t v1 = v3;
      break;
    case 413:
      *uint64_t v1 = 30;
      break;
    case 414:
      *uint64_t v1 = 31;
      break;
    case 415:
      *uint64_t v1 = 32;
      break;
    case 416:
      *uint64_t v1 = 33;
      break;
    case 417:
      *uint64_t v1 = 34;
      break;
    case 421:
      *uint64_t v1 = 35;
      break;
    case 422:
      *uint64_t v1 = 36;
      break;
    case 426:
      *uint64_t v1 = 37;
      break;
    case 428:
      *uint64_t v1 = 38;
      break;
    case 429:
      *uint64_t v1 = 39;
      break;
    case 431:
      *uint64_t v1 = 40;
      break;
    case 500:
      *uint64_t v1 = 41;
      break;
    case 501:
      *uint64_t v1 = 42;
      break;
    case 502:
      *uint64_t v1 = 43;
      break;
    case 503:
      *uint64_t v1 = 44;
      break;
    case 504:
      *uint64_t v1 = 45;
      break;
    case 505:
      *uint64_t v1 = 46;
      break;
    default:
      *uint64_t v1 = 47;
      break;
  }
  return (PrivateCloudCompute::TC2RopesResponseMetadata::Code_optional)rawValue;
}

Swift::Void __swiftcall TC2RopesResponseMetadata.set(value:for:)(Swift::String value, Swift::String a2)
{
  unint64_t object = (unint64_t)value._object;
  uint64_t countAndFlagsBits = value._countAndFlagsBits;
  BOOL v7 = a2._countAndFlagsBits == 0x737574617473 && a2._object == (void *)0xE600000000000000;
  if (v7 || (char v3 = a2._object, v4 = a2._countAndFlagsBits, (sub_25A6C7A00() & 1) != 0))
  {
    uint64_t v8 = HIBYTE(object) & 0xF;
    uint64_t v9 = countAndFlagsBits & 0xFFFFFFFFFFFFLL;
    if ((object & 0x2000000000000000) != 0) {
      uint64_t v10 = HIBYTE(object) & 0xF;
    }
    else {
      uint64_t v10 = countAndFlagsBits & 0xFFFFFFFFFFFFLL;
    }
    if (!v10)
    {
LABEL_54:
      *(unsigned char *)(v2 + 1) = 17;
      return;
    }
    if ((object & 0x1000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      Swift::Int v12 = (Swift::Int)sub_25A6879A0(countAndFlagsBits, object, 10);
      LOBYTE(countAndFlagsBits) = v38;
      swift_bridgeObjectRelease();
      goto LABEL_52;
    }
    if ((object & 0x2000000000000000) == 0)
    {
      if ((countAndFlagsBits & 0x1000000000000000) != 0) {
        unint64_t v11 = (unsigned __int8 *)((object & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        unint64_t v11 = (unsigned __int8 *)sub_25A6C7790();
      }
      Swift::Int v12 = (Swift::Int)sub_25A687A88(v11, v9, 10);
      LOBYTE(countAndFlagsBits) = v13 & 1;
LABEL_52:
      if ((countAndFlagsBits & 1) == 0)
      {
        TC2RopesResponseMetadata.StatusCode.init(rawValue:)(v12);
        *(unsigned char *)(v2 + 1) = v40;
        return;
      }
      goto LABEL_54;
    }
    uint64_t v40 = countAndFlagsBits;
    uint64_t v41 = object & 0xFFFFFFFFFFFFFFLL;
    if (countAndFlagsBits == 43)
    {
      if (!v8)
      {
LABEL_105:
        __break(1u);
LABEL_106:
        if (v4 == 0xD000000000000010 && v3 == (void *)0x800000025A6CFEE0 || (sub_25A6C7A00() & 1) != 0)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v2 + 104) = countAndFlagsBits;
          *(void *)(v2 + 112) = object;
        }
        else if (v4 == 0xD000000000000012 && v3 == (void *)0x800000025A6CFF00 || (sub_25A6C7A00() & 1) != 0)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v2 + 120) = countAndFlagsBits;
          *(void *)(v2 + 128) = object;
        }
        else if (v4 == 0xD000000000000015 && v3 == (void *)0x800000025A6CFF20 || (sub_25A6C7A00() & 1) != 0)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v2 + 136) = countAndFlagsBits;
          *(void *)(v2 + 144) = object;
        }
        return;
      }
      if (v8 != 1 && (BYTE1(countAndFlagsBits) - 48) <= 9u)
      {
        Swift::Int v12 = (BYTE1(countAndFlagsBits) - 48);
        if (v8 == 2) {
          goto LABEL_51;
        }
        if ((BYTE2(countAndFlagsBits) - 48) <= 9u)
        {
          Swift::Int v12 = 10 * (BYTE1(countAndFlagsBits) - 48)
              + (BYTE2(countAndFlagsBits) - 48);
          uint64_t v19 = v8 - 3;
          if (v19)
          {
            uint64_t v20 = (unsigned __int8 *)&v40 + 3;
            while (1)
            {
              unsigned int v21 = *v20 - 48;
              if (v21 > 9) {
                goto LABEL_43;
              }
              uint64_t v22 = 10 * v12;
              if ((unsigned __int128)(v12 * (__int128)10) >> 64 != (10 * v12) >> 63) {
                goto LABEL_43;
              }
              Swift::Int v12 = v22 + v21;
              if (__OFADD__(v22, v21)) {
                goto LABEL_43;
              }
              LOBYTE(countAndFlagsBits) = 0;
              ++v20;
              if (!--v19) {
                goto LABEL_52;
              }
            }
          }
          goto LABEL_51;
        }
      }
    }
    else
    {
      if (countAndFlagsBits == 45)
      {
        if (v8)
        {
          if (v8 == 1 || (BYTE1(countAndFlagsBits) - 48) > 9u) {
            goto LABEL_43;
          }
          if (v8 == 2)
          {
            LOBYTE(countAndFlagsBits) = 0;
            Swift::Int v12 = -(uint64_t)(BYTE1(countAndFlagsBits) - 48);
            goto LABEL_52;
          }
          if ((BYTE2(countAndFlagsBits) - 48) > 9u) {
            goto LABEL_43;
          }
          Swift::Int v12 = -10 * (BYTE1(countAndFlagsBits) - 48)
              - (BYTE2(countAndFlagsBits) - 48);
          uint64_t v27 = v8 - 3;
          if (v27)
          {
            uint64_t v28 = (unsigned __int8 *)&v40 + 3;
            while (1)
            {
              unsigned int v29 = *v28 - 48;
              if (v29 > 9) {
                goto LABEL_43;
              }
              uint64_t v30 = 10 * v12;
              if ((unsigned __int128)(v12 * (__int128)10) >> 64 != (10 * v12) >> 63) {
                goto LABEL_43;
              }
              Swift::Int v12 = v30 - v29;
              if (__OFSUB__(v30, v29)) {
                goto LABEL_43;
              }
              LOBYTE(countAndFlagsBits) = 0;
              ++v28;
              if (!--v27) {
                goto LABEL_52;
              }
            }
          }
LABEL_51:
          LOBYTE(countAndFlagsBits) = 0;
          goto LABEL_52;
        }
        __break(1u);
        goto LABEL_105;
      }
      if (v8 && (countAndFlagsBits - 48) <= 9u)
      {
        Swift::Int v12 = (countAndFlagsBits - 48);
        if (v8 == 1) {
          goto LABEL_51;
        }
        if ((BYTE1(countAndFlagsBits) - 48) <= 9u)
        {
          Swift::Int v12 = 10 * (countAndFlagsBits - 48) + (BYTE1(countAndFlagsBits) - 48);
          uint64_t v23 = v8 - 2;
          if (v23)
          {
            uint64_t v24 = (unsigned __int8 *)&v40 + 2;
            while (1)
            {
              unsigned int v25 = *v24 - 48;
              if (v25 > 9) {
                goto LABEL_43;
              }
              uint64_t v26 = 10 * v12;
              if ((unsigned __int128)(v12 * (__int128)10) >> 64 != (10 * v12) >> 63) {
                goto LABEL_43;
              }
              Swift::Int v12 = v26 + v25;
              if (__OFADD__(v26, v25)) {
                goto LABEL_43;
              }
              LOBYTE(countAndFlagsBits) = 0;
              ++v24;
              if (!--v23) {
                goto LABEL_52;
              }
            }
          }
          goto LABEL_51;
        }
      }
    }
LABEL_43:
    Swift::Int v12 = 0;
    LOBYTE(countAndFlagsBits) = 1;
    goto LABEL_52;
  }
  if (v4 == 0x6F632D726F727265 && v3 == (void *)0xEA00000000006564 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRetain();
    Swift::Int v14 = sub_25A686110(countAndFlagsBits, object);
    if (v15)
    {
      Swift::Int v17 = 0;
      char v18 = -1;
    }
    else
    {
      Swift::Int v16 = v14;
      TC2RopesResponseMetadata.ErrorCode.init(rawValue:)(v14);
      Swift::Int v17 = v40;
      char v18 = v40 == 39;
      if (v40 == 39) {
        Swift::Int v17 = v16;
      }
    }
    *(void *)(v2 + 8) = v17;
    *(unsigned char *)(v2 + 16) = v18;
  }
  else
  {
    if (v4 == 0x7470697263736564 && v3 == (void *)0xEB000000006E6F69 || (sub_25A6C7A00() & 1) != 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v2 + 24) = countAndFlagsBits;
      *(void *)(v2 + 32) = object;
      return;
    }
    if (v4 == 0x6573756163 && v3 == (void *)0xE500000000000000 || (uint64_t v31 = sub_25A6C7A00(), (v31 & 1) != 0))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v2 + 40) = countAndFlagsBits;
      *(void *)(v2 + 48) = object;
      return;
    }
    if (v4 != 0x66612D7972746572 || v3 != (void *)0xEB00000000726574)
    {
      uint64_t v31 = sub_25A6C7A00();
      if ((v31 & 1) == 0)
      {
        if (v4 == 0x6C7469742D727474 && v3 == (void *)0xE900000000000065 || (sub_25A6C7A00() & 1) != 0)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v2 + 72) = countAndFlagsBits;
          *(void *)(v2 + 80) = object;
          return;
        }
        if (v4 == 0x637365642D727474 && v3 == (void *)0xEF6E6F6974706972 || (sub_25A6C7A00() & 1) != 0)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v2 + 88) = countAndFlagsBits;
          *(void *)(v2 + 96) = object;
          return;
        }
        goto LABEL_106;
      }
    }
    uint64_t v42 = 0;
    uint64_t v32 = MEMORY[0x270FA5388](v31);
    if ((object & 0x1000000000000000) != 0
      || !(object & 0x2000000000000000 | countAndFlagsBits & 0x1000000000000000))
    {
      swift_bridgeObjectRetain();
      sub_25A6C7730();
      swift_bridgeObjectRelease();
      char v35 = v40;
    }
    else
    {
      MEMORY[0x270FA5388](v32);
      if ((object & 0x2000000000000000) != 0)
      {
        uint64_t v40 = countAndFlagsBits;
        uint64_t v41 = object & 0xFFFFFFFFFFFFFFLL;
        swift_bridgeObjectRetain();
        char v35 = (countAndFlagsBits >= 0x21u || ((0x100003E01uLL >> countAndFlagsBits) & 1) == 0)
           && (uint64_t v36 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
           && *v36 == 0;
        swift_bridgeObjectRelease();
      }
      else
      {
        if ((countAndFlagsBits & 0x1000000000000000) != 0)
        {
          uint64_t v33 = (object & 0xFFFFFFFFFFFFFFFLL) + 32;
          uint64_t v34 = countAndFlagsBits & 0xFFFFFFFFFFFFLL;
        }
        else
        {
          uint64_t v33 = sub_25A6C7790();
          uint64_t v34 = v39;
        }
        swift_bridgeObjectRetain();
        char v35 = sub_25A6881F0(v33, v34, (void (*)(uint64_t *__return_ptr))sub_25A6882C0);
        swift_bridgeObjectRelease();
      }
    }
    uint64_t v37 = v42;
    if ((v35 & 1) == 0) {
      uint64_t v37 = 0;
    }
    *(void *)(v2 + 56) = v37;
    *(unsigned char *)(v2 + 64) = (v35 & 1) == 0;
  }
}

uint64_t sub_25A686110(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        uint64_t v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v6 = (unsigned __int8 *)sub_25A6C7790();
      }
      uint64_t v7 = (uint64_t)sub_25A687A88(v6, v4, 10);
      char v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3) {
        goto LABEL_50;
      }
      if (v3 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (BYTE1(result) - 48);
      uint64_t v14 = v3 - 2;
      if (v14)
      {
        char v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          unsigned int v16 = *v15 - 48;
          if (v16 > 9) {
            goto LABEL_34;
          }
          uint64_t v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v17 + v16;
          if (__OFADD__(v17, v16)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v15;
          if (!--v14) {
            goto LABEL_37;
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            uint64_t v7 = -(uint64_t)(BYTE1(result) - 48);
            uint64_t v10 = v3 - 2;
            if (v10)
            {
              unint64_t v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                unsigned int v12 = *v11 - 48;
                if (v12 > 9) {
                  goto LABEL_34;
                }
                uint64_t v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
                  goto LABEL_34;
                }
                uint64_t v7 = v13 - v12;
                if (__OFSUB__(v13, v12)) {
                  goto LABEL_34;
                }
                char v9 = 0;
                ++v11;
                if (!--v10) {
                  goto LABEL_37;
                }
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          uint64_t v7 = 0;
          char v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (result - 48);
      uint64_t v18 = v3 - 1;
      if (v18)
      {
        uint64_t v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          unsigned int v20 = *v19 - 48;
          if (v20 > 9) {
            goto LABEL_34;
          }
          uint64_t v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v21 + v20;
          if (__OFADD__(v21, v20)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v19;
          if (!--v18) {
            goto LABEL_37;
          }
        }
      }
    }
LABEL_36:
    char v9 = 0;
    goto LABEL_37;
  }
  uint64_t v7 = (uint64_t)sub_25A6879A0(result, a2, 10);
  char v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if (v9) {
    return 0;
  }
  else {
    return v7;
  }
}

PrivateCloudCompute::TC2RopesResponseMetadata::StatusCode_optional __swiftcall TC2RopesResponseMetadata.StatusCode.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 17;
  if ((unint64_t)rawValue < 0x11) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (PrivateCloudCompute::TC2RopesResponseMetadata::StatusCode_optional)rawValue;
}

PrivateCloudCompute::TC2RopesResponseMetadata::ErrorCode_optional TC2RopesResponseMetadata.ReceivedErrorCode.init(rawValue:)@<W0>(Swift::Int a1@<X0>, uint64_t a2@<X8>)
{
  result.value = TC2RopesResponseMetadata.ErrorCode.init(rawValue:)(a1).value;
  Swift::Int v5 = v6;
  if (v6 == 39) {
    Swift::Int v5 = a1;
  }
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v6 == 39;
  return result;
}

uint64_t TC2RopesResponseMetadata.isAvailabilityConcern.getter()
{
  if ((v0[16] & 1) == 0)
  {
    unsigned int v1 = v0[8] - 20;
    if (v1 < 6 && ((0x39u >> v1) & 1) != 0) {
      return 1;
    }
  }
  int v2 = v0[1];
  if (v2 == 8 || v2 == 14) {
    return 1;
  }
  int v5 = *v0;
  BOOL v7 = v5 == 44 || v5 == 39;
  return v5 != 47 && v7;
}

uint64_t TC2RopesResponseMetadata.StatusCode.rawValue.getter()
{
  return *v0;
}

PrivateCloudCompute::TC2RopesResponseMetadata::StatusCode_optional sub_25A686428(Swift::Int *a1)
{
  return TC2RopesResponseMetadata.StatusCode.init(rawValue:)(*a1);
}

void sub_25A686430(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_25A68643C()
{
  return sub_25A6C75B0();
}

uint64_t sub_25A68649C()
{
  return sub_25A6C7590();
}

PrivateCloudCompute::TC2RopesResponseMetadata::ErrorCode_optional __swiftcall TC2RopesResponseMetadata.ErrorCode.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue <= 2999)
  {
    if (rawValue <= 1999)
    {
      switch(rawValue)
      {
        case 1000:
          *unsigned int v1 = 1;
          break;
        case 1001:
          *unsigned int v1 = 2;
          break;
        case 1002:
          *unsigned int v1 = 3;
          break;
        case 1003:
          *unsigned int v1 = 4;
          break;
        case 1004:
          *unsigned int v1 = 5;
          break;
        case 1005:
          *unsigned int v1 = 6;
          break;
        case 1006:
          *unsigned int v1 = 7;
          break;
        case 1007:
          *unsigned int v1 = 8;
          break;
        case 1008:
          *unsigned int v1 = 9;
          break;
        case 1009:
          *unsigned int v1 = 10;
          break;
        case 1010:
          *unsigned int v1 = 11;
          break;
        case 1011:
          *unsigned int v1 = 12;
          break;
        case 1012:
          *unsigned int v1 = 13;
          break;
        case 1013:
          *unsigned int v1 = 14;
          break;
        case 1014:
          *unsigned int v1 = 15;
          break;
        case 1015:
          *unsigned int v1 = 16;
          break;
        default:
          if (rawValue) {
            goto LABEL_56;
          }
          *unsigned int v1 = 0;
          break;
      }
      return (PrivateCloudCompute::TC2RopesResponseMetadata::ErrorCode_optional)rawValue;
    }
    switch(rawValue)
    {
      case 2000:
        *unsigned int v1 = 17;
        return (PrivateCloudCompute::TC2RopesResponseMetadata::ErrorCode_optional)rawValue;
      case 2001:
        *unsigned int v1 = 18;
        return (PrivateCloudCompute::TC2RopesResponseMetadata::ErrorCode_optional)rawValue;
      case 2002:
        *unsigned int v1 = 19;
        return (PrivateCloudCompute::TC2RopesResponseMetadata::ErrorCode_optional)rawValue;
    }
LABEL_56:
    *unsigned int v1 = 39;
    return (PrivateCloudCompute::TC2RopesResponseMetadata::ErrorCode_optional)rawValue;
  }
  if (rawValue > 5999)
  {
    if (rawValue <= 6999)
    {
      switch(rawValue)
      {
        case 6000:
          *unsigned int v1 = 31;
          return (PrivateCloudCompute::TC2RopesResponseMetadata::ErrorCode_optional)rawValue;
        case 6001:
          *unsigned int v1 = 32;
          return (PrivateCloudCompute::TC2RopesResponseMetadata::ErrorCode_optional)rawValue;
        case 6002:
          *unsigned int v1 = 33;
          return (PrivateCloudCompute::TC2RopesResponseMetadata::ErrorCode_optional)rawValue;
      }
      goto LABEL_56;
    }
    switch(rawValue)
    {
      case 7000:
        *unsigned int v1 = 34;
        break;
      case 7001:
        *unsigned int v1 = 35;
        break;
      case 7002:
        *unsigned int v1 = 36;
        break;
      case 7003:
        *unsigned int v1 = 37;
        break;
      case 7004:
        *unsigned int v1 = 38;
        break;
      default:
        goto LABEL_56;
    }
  }
  else
  {
    if (rawValue <= 4000)
    {
      if (rawValue <= 3001)
      {
        if (rawValue == 3000) {
          *unsigned int v1 = 20;
        }
        else {
          *unsigned int v1 = 21;
        }
        return (PrivateCloudCompute::TC2RopesResponseMetadata::ErrorCode_optional)rawValue;
      }
      if (rawValue == 3002)
      {
        *unsigned int v1 = 22;
        return (PrivateCloudCompute::TC2RopesResponseMetadata::ErrorCode_optional)rawValue;
      }
      if (rawValue == 4000)
      {
        *unsigned int v1 = 23;
        return (PrivateCloudCompute::TC2RopesResponseMetadata::ErrorCode_optional)rawValue;
      }
      goto LABEL_56;
    }
    switch(rawValue)
    {
      case 5002:
        *unsigned int v1 = 26;
        return (PrivateCloudCompute::TC2RopesResponseMetadata::ErrorCode_optional)rawValue;
      case 5003:
        *unsigned int v1 = 27;
        return (PrivateCloudCompute::TC2RopesResponseMetadata::ErrorCode_optional)rawValue;
      case 5004:
        *unsigned int v1 = 28;
        return (PrivateCloudCompute::TC2RopesResponseMetadata::ErrorCode_optional)rawValue;
      case 5005:
      case 5006:
      case 5007:
      case 5009:
      case 5010:
      case 5011:
      case 5012:
        goto LABEL_56;
      case 5008:
        *unsigned int v1 = 29;
        return (PrivateCloudCompute::TC2RopesResponseMetadata::ErrorCode_optional)rawValue;
      case 5013:
        *unsigned int v1 = 30;
        return (PrivateCloudCompute::TC2RopesResponseMetadata::ErrorCode_optional)rawValue;
      default:
        if (rawValue == 4001)
        {
          *unsigned int v1 = 24;
        }
        else
        {
          if (rawValue != 4002) {
            goto LABEL_56;
          }
          *unsigned int v1 = 25;
        }
        break;
    }
  }
  return (PrivateCloudCompute::TC2RopesResponseMetadata::ErrorCode_optional)rawValue;
}

uint64_t TC2RopesResponseMetadata.ReceivedErrorCode.rawValue.getter()
{
  uint64_t result = *v0;
  if ((v0[1] & 1) == 0) {
    return qword_25A6CBE18[(char)result];
  }
  return result;
}

uint64_t TC2RopesResponseMetadata.ErrorCode.rawValue.getter()
{
  return qword_25A6CBE18[*v0];
}

PrivateCloudCompute::TC2RopesResponseMetadata::ErrorCode_optional sub_25A6868B4@<W0>(Swift::Int *a1@<X0>, uint64_t a2@<X8>)
{
  Swift::Int v3 = *a1;
  result.value = TC2RopesResponseMetadata.ErrorCode.init(rawValue:)(*a1).value;
  Swift::Int v5 = v6;
  if (v6 == 39) {
    Swift::Int v5 = v3;
  }
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v6 == 39;
  return result;
}

void sub_25A686908(void *a1@<X8>)
{
  uint64_t v2 = *v1;
  if ((v1[1] & 1) == 0) {
    uint64_t v2 = qword_25A6CBE18[(char)v2];
  }
  *a1 = v2;
}

uint64_t sub_25A68692C()
{
  return sub_25A6C75B0();
}

uint64_t sub_25A68698C()
{
  return sub_25A6C7590();
}

BOOL sub_25A6869DC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if ((a1[1] & 1) == 0) {
    uint64_t v2 = qword_25A6CBE18[(char)v2];
  }
  if ((a2[1] & 1) == 0) {
    uint64_t v3 = qword_25A6CBE18[(char)v3];
  }
  return v2 == v3;
}

BOOL sub_25A686A18(char *a1, char *a2)
{
  return qword_25A6CBE18[*a1] == qword_25A6CBE18[*a2];
}

uint64_t sub_25A686A3C()
{
  return sub_25A6C7AE0();
}

uint64_t sub_25A686A8C()
{
  return sub_25A6C7AB0();
}

uint64_t sub_25A686AC4()
{
  return sub_25A6C7AE0();
}

PrivateCloudCompute::TC2RopesResponseMetadata::ErrorCode_optional sub_25A686B10(Swift::Int *a1)
{
  return TC2RopesResponseMetadata.ErrorCode.init(rawValue:)(*a1);
}

void sub_25A686B18(void *a1@<X8>)
{
  *a1 = qword_25A6CBE18[*v1];
}

uint64_t sub_25A686B30()
{
  return sub_25A6C75B0();
}

uint64_t sub_25A686B90()
{
  return sub_25A6C7590();
}

uint64_t TC2RopesResponseMetadata.Code.rawValue.getter()
{
  return qword_25A6CBF50[*v0];
}

unint64_t sub_25A686BF4(char a1)
{
  unint64_t result = 1701080931;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x737574617473;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
    case 9:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x6573756163;
      break;
    case 5:
      unint64_t result = 0x7466417972746572;
      break;
    case 6:
      unint64_t result = 0x656C746954727474;
      break;
    case 7:
      unint64_t result = 0x7263736544727474;
      break;
    case 8:
      unint64_t result = 0x6F706D6F43727474;
      break;
    case 10:
      unint64_t result = 0xD000000000000013;
      break;
    case 11:
      unint64_t result = 7827310;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_25A686D6C(char *a1, char *a2)
{
  return qword_25A6CBF50[*a1] == qword_25A6CBF50[*a2];
}

uint64_t sub_25A686D90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TC2RopesResponseMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25A686DF4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TC2RopesResponseMetadata();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25A686E50()
{
  return sub_25A6C7AE0();
}

uint64_t sub_25A686EA0()
{
  return sub_25A6C7AB0();
}

uint64_t sub_25A686ED8()
{
  return sub_25A6C7AE0();
}

PrivateCloudCompute::TC2RopesResponseMetadata::Code_optional sub_25A686F24(Swift::Int *a1)
{
  return TC2RopesResponseMetadata.Code.init(rawValue:)(*a1);
}

void sub_25A686F2C(void *a1@<X8>)
{
  *a1 = qword_25A6CBF50[*v1];
}

uint64_t sub_25A686F44()
{
  return sub_25A6C75B0();
}

uint64_t sub_25A686FA4()
{
  return sub_25A6C7590();
}

unint64_t sub_25A686FF4()
{
  return sub_25A686BF4(*v0);
}

uint64_t sub_25A686FFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25A68975C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25A687024(uint64_t a1)
{
  unint64_t v2 = sub_25A688304();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A687060(uint64_t a1)
{
  unint64_t v2 = sub_25A688304();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TC2RopesResponseMetadata.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C168);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A688304();
  sub_25A6C7B00();
  LOBYTE(v11) = *(unsigned char *)v3;
  char v13 = 0;
  sub_25A688358();
  sub_25A6C7950();
  if (!v2)
  {
    LOBYTE(v11) = *(unsigned char *)(v3 + 1);
    char v13 = 1;
    sub_25A6883AC();
    sub_25A6C7950();
    char v9 = *(unsigned char *)(v3 + 16);
    uint64_t v11 = *(void *)(v3 + 8);
    char v12 = v9;
    char v13 = 2;
    sub_25A688400();
    sub_25A6C7950();
    LOBYTE(v11) = 3;
    sub_25A6C7920();
    LOBYTE(v11) = 4;
    sub_25A6C7920();
    LOBYTE(v11) = 5;
    sub_25A6C7930();
    LOBYTE(v11) = 6;
    sub_25A6C7920();
    LOBYTE(v11) = 7;
    sub_25A6C7920();
    LOBYTE(v11) = 8;
    sub_25A6C7920();
    LOBYTE(v11) = 9;
    sub_25A6C7920();
    LOBYTE(v11) = 10;
    sub_25A6C7920();
    type metadata accessor for TC2RopesResponseMetadata();
    LOBYTE(v11) = 11;
    sub_25A6C73A0();
    sub_25A688550(&qword_26B329B28);
    sub_25A6C79B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t TC2RopesResponseMetadata.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v4 = sub_25A6C73A0();
  uint64_t v29 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C190);
  uint64_t v31 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  char v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TC2RopesResponseMetadata();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[1] = 17;
  *((void *)v11 + 1) = 0;
  v11[16] = -1;
  *(_OWORD *)(v11 + 24) = 0u;
  *(_OWORD *)(v11 + 40) = 0u;
  *((void *)v11 + 7) = 0;
  v11[64] = 1;
  *(_OWORD *)(v11 + 72) = 0u;
  *(_OWORD *)(v11 + 88) = 0u;
  *(_OWORD *)(v11 + 104) = 0u;
  *(_OWORD *)(v11 + 120) = 0u;
  *(_OWORD *)(v11 + 136) = 0u;
  uint64_t v12 = a1[3];
  uint64_t v34 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_25A688304();
  uint64_t v32 = v8;
  sub_25A6C7AF0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v27 = v6;
    uint64_t v28 = v4;
    uint64_t v13 = v31;
    char v37 = 0;
    sub_25A688454();
    sub_25A6C7880();
    *uint64_t v11 = v35;
    char v37 = 1;
    sub_25A6884A8();
    sub_25A6C7880();
    v11[1] = v35;
    char v37 = 2;
    sub_25A6884FC();
    sub_25A6C7880();
    char v14 = v36;
    *((void *)v11 + 1) = v35;
    v11[16] = v14;
    LOBYTE(v35) = 3;
    *((void *)v11 + 3) = sub_25A6C7850();
    *((void *)v11 + 4) = v15;
    LOBYTE(v35) = 4;
    *((void *)v11 + 5) = sub_25A6C7850();
    *((void *)v11 + 6) = v16;
    LOBYTE(v35) = 5;
    *((void *)v11 + 7) = sub_25A6C7860();
    v11[64] = v17 & 1;
    LOBYTE(v35) = 6;
    *((void *)v11 + 9) = sub_25A6C7850();
    *((void *)v11 + 10) = v18;
    LOBYTE(v35) = 7;
    *((void *)v11 + 11) = sub_25A6C7850();
    *((void *)v11 + 12) = v19;
    LOBYTE(v35) = 8;
    *((void *)v11 + 13) = sub_25A6C7850();
    *((void *)v11 + 14) = v20;
    LOBYTE(v35) = 9;
    *((void *)v11 + 15) = sub_25A6C7850();
    *((void *)v11 + 16) = v21;
    LOBYTE(v35) = 10;
    *((void *)v11 + 17) = sub_25A6C7850();
    *((void *)v11 + 18) = v22;
    LOBYTE(v35) = 11;
    sub_25A688550(&qword_26A44B8F8);
    uint64_t v23 = v32;
    uint64_t v24 = v33;
    sub_25A6C78E0();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v23, v24);
    uint64_t v25 = (uint64_t)v34;
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(&v11[*(int *)(v9 + 60)], v27, v28);
    sub_25A686D90((uint64_t)v11, v30);
    __swift_destroy_boxed_opaque_existential_1(v25);
    return sub_25A686DF4((uint64_t)v11);
  }
}

uint64_t sub_25A687970@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TC2RopesResponseMetadata.init(from:)(a1, a2);
}

uint64_t sub_25A687988(void *a1)
{
  return TC2RopesResponseMetadata.encode(to:)(a1);
}

unsigned __int8 *sub_25A6879A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_25A6C7560();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_25A687D04();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (unsigned __int8 *)sub_25A6C7790();
  }
LABEL_7:
  uint64_t v11 = sub_25A687A88(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_25A687A88(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_25A687D04()
{
  unint64_t v0 = sub_25A6C7570();
  uint64_t v4 = sub_25A687D84(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_25A687D84(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_25A687EDC(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned int v11 = sub_25A6A62A4(v9, 0);
      unint64_t v12 = sub_25A687FDC((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_25A6C7790();
LABEL_4:
        JUMPOUT(0x2611418A0);
      }
    }
    else
    {
      unsigned int v11 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v13 = MEMORY[0x2611418A0](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x2611418A0]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_25A687EDC(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_25A6A630C(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_25A6A630C(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x270F9D808](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x270F9D808](a1, a2, a3, a4);
}

unint64_t sub_25A687FDC(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_25A6A630C(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_25A6C7540();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_25A6C7790();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_25A6A630C(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_25A6C7510();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_25A6881F0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    a3(&var2);
    if (!v3) {
      char v4 = var2;
    }
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3) {
      char v4 = BYTE1(var2);
    }
  }
  return v4 & 1;
}

unsigned char *sub_25A688250@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  v7 = v6 && (uint64_t result = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

void *sub_25A6882C0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

unint64_t sub_25A688304()
{
  unint64_t result = qword_26A44C170;
  if (!qword_26A44C170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C170);
  }
  return result;
}

unint64_t sub_25A688358()
{
  unint64_t result = qword_26A44C178;
  if (!qword_26A44C178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C178);
  }
  return result;
}

unint64_t sub_25A6883AC()
{
  unint64_t result = qword_26A44C180;
  if (!qword_26A44C180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C180);
  }
  return result;
}

unint64_t sub_25A688400()
{
  unint64_t result = qword_26A44C188;
  if (!qword_26A44C188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C188);
  }
  return result;
}

unint64_t sub_25A688454()
{
  unint64_t result = qword_26A44C198;
  if (!qword_26A44C198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C198);
  }
  return result;
}

unint64_t sub_25A6884A8()
{
  unint64_t result = qword_26A44C1A0;
  if (!qword_26A44C1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C1A0);
  }
  return result;
}

unint64_t sub_25A6884FC()
{
  unint64_t result = qword_26A44C1A8;
  if (!qword_26A44C1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C1A8);
  }
  return result;
}

uint64_t sub_25A688550(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_25A6C73A0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25A688598()
{
  unint64_t result = qword_26A44C1B0;
  if (!qword_26A44C1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C1B0);
  }
  return result;
}

unint64_t sub_25A6885F0()
{
  unint64_t result = qword_26A44C1B8;
  if (!qword_26A44C1B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C1B8);
  }
  return result;
}

unint64_t sub_25A688648()
{
  unint64_t result = qword_26A44C1C0;
  if (!qword_26A44C1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C1C0);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for TC2RopesResponseMetadata(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *unsigned int v3 = *a2;
    unsigned int v3 = (void *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v5 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v5;
    uint64_t v6 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v6;
    *(void *)(a1 + 56) = a2[7];
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    uint64_t v7 = a2[10];
    *(void *)(a1 + 72) = a2[9];
    *(void *)(a1 + 80) = v7;
    uint64_t v8 = a2[12];
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = v8;
    uint64_t v9 = a2[14];
    *(void *)(a1 + 104) = a2[13];
    *(void *)(a1 + 112) = v9;
    uint64_t v10 = a2[16];
    *(void *)(a1 + 120) = a2[15];
    *(void *)(a1 + 128) = v10;
    uint64_t v11 = a2[18];
    uint64_t v12 = *(int *)(a3 + 60);
    uint64_t v17 = a1 + v12;
    uint64_t v18 = (uint64_t)a2 + v12;
    *(void *)(a1 + 136) = a2[17];
    *(void *)(a1 + 144) = v11;
    uint64_t v13 = sub_25A6C73A0();
    uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v17, v18, v13);
  }
  return v3;
}

uint64_t destroy for TC2RopesResponseMetadata(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 60);
  uint64_t v5 = sub_25A6C73A0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for TC2RopesResponseMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  uint64_t v8 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v8;
  uint64_t v9 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v9;
  uint64_t v10 = *(void *)(a2 + 144);
  uint64_t v11 = *(int *)(a3 + 60);
  uint64_t v15 = a1 + v11;
  uint64_t v16 = a2 + v11;
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v10;
  uint64_t v12 = sub_25A6C73A0();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14(v15, v16, v12);
  return a1;
}

uint64_t assignWithCopy for TC2RopesResponseMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v6 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v7;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 60);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_25A6C73A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

uint64_t initializeWithTake for TC2RopesResponseMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  uint64_t v4 = *(int *)(a3 + 60);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  uint64_t v7 = sub_25A6C73A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for TC2RopesResponseMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(int *)(a3 + 60);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_25A6C73A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for TC2RopesResponseMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25A688D8C);
}

uint64_t sub_25A688D8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_25A6C73A0();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 60);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for TC2RopesResponseMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25A688E5C);
}

uint64_t sub_25A688E5C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 32) = a2;
  }
  else
  {
    uint64_t v7 = sub_25A6C73A0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 60);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_25A688F04()
{
  uint64_t result = sub_25A6C73A0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TC2RopesResponseMetadata.StatusCode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF0) {
    goto LABEL_17;
  }
  if (a2 + 16 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 16) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 16;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x11;
  int v8 = v6 - 17;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TC2RopesResponseMetadata.StatusCode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *uint64_t result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A68912CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 16;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TC2RopesResponseMetadata.StatusCode()
{
  return &type metadata for TC2RopesResponseMetadata.StatusCode;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for TC2RopesResponseMetadata.ReceivedErrorCode(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TC2RopesResponseMetadata.ReceivedErrorCode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_25A689204(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_25A68920C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for TC2RopesResponseMetadata.ReceivedErrorCode()
{
  return &type metadata for TC2RopesResponseMetadata.ReceivedErrorCode;
}

uint64_t getEnumTagSinglePayload for TC2RopesResponseMetadata.ErrorCode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xDA) {
    goto LABEL_17;
  }
  if (a2 + 38 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 38) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 38;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 38;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 38;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x27;
  int v8 = v6 - 39;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TC2RopesResponseMetadata.ErrorCode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 38 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 38) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xDA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xD9)
  {
    unsigned int v6 = ((a2 - 218) >> 8) + 1;
    *uint64_t result = a2 + 38;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A689384);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 38;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TC2RopesResponseMetadata.ErrorCode()
{
  return &type metadata for TC2RopesResponseMetadata.ErrorCode;
}

uint64_t getEnumTagSinglePayload for TC2RopesResponseMetadata.Code(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xD2) {
    goto LABEL_17;
  }
  if (a2 + 46 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 46) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 46;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 46;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 46;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x2F;
  int v8 = v6 - 47;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TC2RopesResponseMetadata.Code(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 46 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 46) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xD2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xD1)
  {
    unsigned int v6 = ((a2 - 210) >> 8) + 1;
    *uint64_t result = a2 + 46;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A689518);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 46;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TC2RopesResponseMetadata.Code()
{
  return &type metadata for TC2RopesResponseMetadata.Code;
}

unsigned char *storeEnumTagSinglePayload for TC2RopesResponseMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A68961CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TC2RopesResponseMetadata.CodingKeys()
{
  return &type metadata for TC2RopesResponseMetadata.CodingKeys;
}

unint64_t sub_25A689658()
{
  unint64_t result = qword_26A44C1C8;
  if (!qword_26A44C1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C1C8);
  }
  return result;
}

unint64_t sub_25A6896B0()
{
  unint64_t result = qword_26A44C1D0;
  if (!qword_26A44C1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C1D0);
  }
  return result;
}

unint64_t sub_25A689708()
{
  unint64_t result = qword_26A44C1D8;
  if (!qword_26A44C1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C1D8);
  }
  return result;
}

uint64_t sub_25A68975C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701080931 && a2 == 0xE400000000000000;
  if (v2 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000025A6CFF40 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000025A6CFF60 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6573756163 && a2 == 0xE500000000000000 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7466417972746572 && a2 == 0xEA00000000007265 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656C746954727474 && a2 == 0xE800000000000000 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7263736544727474 && a2 == 0xEE006E6F69747069 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6F706D6F43727474 && a2 == 0xEE004449746E656ELL || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000025A6CFF80 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000025A6CFFA0 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 7827310 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    char v6 = sub_25A6C7A00();
    swift_bridgeObjectRelease();
    if (v6) {
      return 11;
    }
    else {
      return 12;
    }
  }
}

unint64_t sub_25A689C30()
{
  unint64_t result = qword_26A44C1E0;
  if (!qword_26A44C1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C1E0);
  }
  return result;
}

unint64_t sub_25A689C84()
{
  unint64_t result = qword_26A44C1E8;
  if (!qword_26A44C1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C1E8);
  }
  return result;
}

unint64_t sub_25A689CD8()
{
  unint64_t result = qword_26A44C1F0;
  if (!qword_26A44C1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C1F0);
  }
  return result;
}

unint64_t sub_25A689D2C()
{
  unint64_t result = qword_26A44C1F8;
  if (!qword_26A44C1F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C1F8);
  }
  return result;
}

uint64_t sub_25A689D80@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_25A6C7430();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C2C0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25A6C7220();
  swift_allocObject();
  sub_25A6C7210();
  uint64_t v10 = type metadata accessor for TrustedCloudComputeError(0);
  sub_25A68F568(&qword_26A44C2C8, (void (*)(uint64_t))type metadata accessor for TrustedCloudComputeError);
  sub_25A6C7200();
  swift_release();
  uint64_t v11 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  v11(v9, 0, 1, v10);
  sub_25A68F294(a1, a2);
  sub_25A68F930((uint64_t)v9, a3, type metadata accessor for TrustedCloudComputeError);
  return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v11)(a3, 0, 1, v10);
}

uint64_t sub_25A68A1B0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_25A68B310(a1, a2, (void (*)(void))sub_25A68F6B8, a3);
}

uint64_t sub_25A68A1D0(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_25A6C7430();
  MEMORY[0x270FA5388](v4);
  sub_25A6C7220();
  swift_allocObject();
  sub_25A6C7210();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C2D8);
  sub_25A68F614();
  sub_25A6C7200();
  swift_release();
  sub_25A68F294(a1, a2);
  return v6;
}

uint64_t sub_25A68A498@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_25A6C7430();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C2B0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25A6C7220();
  swift_allocObject();
  sub_25A6C7210();
  uint64_t v10 = type metadata accessor for TrustedCloudComputeRateLimit();
  sub_25A68F568(&qword_26A44C2B8, (void (*)(uint64_t))type metadata accessor for TrustedCloudComputeRateLimit);
  sub_25A6C7200();
  swift_release();
  uint64_t v11 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  v11(v9, 0, 1, v10);
  sub_25A68F294(a1, a2);
  sub_25A68F930((uint64_t)v9, a3, (uint64_t (*)(void))type metadata accessor for TrustedCloudComputeRateLimit);
  return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v11)(a3, 0, 1, v10);
}

double sub_25A68A8C8@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_25A6C7430();
  MEMORY[0x270FA5388](v6);
  sub_25A6C7220();
  swift_allocObject();
  sub_25A6C7210();
  sub_25A68F514();
  sub_25A6C7200();
  swift_release();
  sub_25A68F294(a1, a2);
  *(void *)a3 = v8;
  double result = *(double *)&v9;
  *(_OWORD *)(a3 + 8) = v9;
  return result;
}

uint64_t sub_25A68AB98@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v6 = sub_25A6C7430();
  MEMORY[0x270FA5388](v6);
  sub_25A6C7220();
  swift_allocObject();
  sub_25A6C7210();
  sub_25A68F43C();
  sub_25A6C7200();
  swift_release();
  nullsub_1(v14);
  sub_25A68F294(a1, a2);
  sub_25A68F4AC((uint64_t)v14, (uint64_t)v11);
  sub_25A68F4AC((uint64_t)v11, (uint64_t)v12);
  long long v7 = v12[5];
  a3[4] = v12[4];
  a3[5] = v7;
  a3[6] = v13[0];
  *(_OWORD *)((char *)a3 + 105) = *(_OWORD *)((char *)v13 + 9);
  long long v8 = v12[1];
  *a3 = v12[0];
  a3[1] = v8;
  long long v9 = v12[3];
  a3[2] = v12[2];
  a3[3] = v9;
  return nullsub_1(a3);
}

uint64_t sub_25A68AEC0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_25A6C7430();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C288);
  MEMORY[0x270FA5388](v7 - 8);
  long long v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25A6C7220();
  swift_allocObject();
  sub_25A6C7210();
  uint64_t v10 = type metadata accessor for TC2TrustedRequestMetadata(0);
  sub_25A68F568(&qword_26A44C290, (void (*)(uint64_t))type metadata accessor for TC2TrustedRequestMetadata);
  sub_25A6C7200();
  swift_release();
  uint64_t v11 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  v11(v9, 0, 1, v10);
  sub_25A68F294(a1, a2);
  sub_25A68F930((uint64_t)v9, a3, type metadata accessor for TC2TrustedRequestMetadata);
  return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v11)(a3, 0, 1, v10);
}

uint64_t sub_25A68B2F0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_25A68B310(a1, a2, (void (*)(void))sub_25A68F3E8, a3);
}

uint64_t sub_25A68B310@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void (*a3)(void)@<X2>, void *a4@<X8>)
{
  uint64_t v8 = sub_25A6C7430();
  MEMORY[0x270FA5388](v8);
  sub_25A6C7220();
  swift_allocObject();
  sub_25A6C7210();
  a3();
  sub_25A6C7200();
  swift_release();
  uint64_t result = sub_25A68F294(a1, a2);
  *a4 = v10;
  return result;
}

uint64_t sub_25A68B5DC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_25A6C7430();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C270);
  MEMORY[0x270FA5388](v7 - 8);
  long long v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25A6C7220();
  swift_allocObject();
  sub_25A6C7210();
  uint64_t v10 = type metadata accessor for TC2RequestState();
  sub_25A68F568(&qword_26A44C278, (void (*)(uint64_t))type metadata accessor for TC2RequestState);
  sub_25A6C7200();
  swift_release();
  uint64_t v11 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  v11(v9, 0, 1, v10);
  sub_25A68F294(a1, a2);
  sub_25A68F930((uint64_t)v9, a3, (uint64_t (*)(void))type metadata accessor for TC2RequestState);
  return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v11)(a3, 0, 1, v10);
}

uint64_t TC2Client.__allocating_init(userID:)(unint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  type metadata accessor for XPCWrapper();
  swift_allocObject();
  *(void *)(v2 + 16) = sub_25A6A7DF8(a1 | ((HIDWORD(a1) & 1) << 32));
  return v2;
}

uint64_t TC2Client.init(userID:)(unint64_t a1)
{
  uint64_t v2 = v1;
  type metadata accessor for XPCWrapper();
  swift_allocObject();
  *(void *)(v2 + 16) = sub_25A6A7DF8(a1 | ((HIDWORD(a1) & 1) << 32));
  return v2;
}

uint64_t TC2Client.deinit()
{
  sub_25A6A6774();
  swift_release();
  return v0;
}

uint64_t TC2Client.__deallocating_deinit()
{
  sub_25A6A6774();
  swift_release();
  return MEMORY[0x270FA0228](v0, 24, 7);
}

uint64_t sub_25A68BB60()
{
  *(void *)(v1 + 32) = v0;
  return MEMORY[0x270FA2498](sub_25A68BB80, 0, 0);
}

uint64_t sub_25A68BB80()
{
  v0[5] = *(void *)(v0[4] + 16);
  type metadata accessor for XPCWrapper();
  v0[6] = sub_25A68F568(&qword_26B329E70, (void (*)(uint64_t))type metadata accessor for XPCWrapper);
  uint64_t v2 = sub_25A6C75D0();
  v0[7] = v2;
  v0[8] = v1;
  return MEMORY[0x270FA2498](sub_25A68BC44, v2, v1);
}

uint64_t sub_25A68BC44(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, uint64_t (*a6)(uint64_t a1), uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8[5];
  uint64_t v10 = *(void *)(v9 + 16);
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = v8[6];
    *(void *)(v9 + 16) = v10 + 1;
    uint64_t v12 = swift_task_alloc();
    v8[9] = v12;
    *(void *)(v12 + 16) = v9;
    *(void *)(v12 + 24) = v10;
    uint64_t v13 = (void *)swift_task_alloc();
    v8[10] = v13;
    *uint64_t v13 = v8;
    v13[1] = sub_25A68BD60;
    a5 = 0x800000025A6D0280;
    a8 = MEMORY[0x263F8D310];
    a6 = sub_25A68F60C;
    a1 = v8 + 2;
    a2 = v9;
    a3 = v11;
    a4 = 0xD000000000000014;
    a7 = v12;
  }
  return MEMORY[0x270FA2360](a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_25A68BD60()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 56);
    uint64_t v4 = *(void *)(v2 + 64);
    uint64_t v5 = sub_25A68BE94;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 56);
    uint64_t v4 = *(void *)(v2 + 64);
    uint64_t v5 = sub_25A68BE7C;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_25A68BE7C()
{
  return (*(uint64_t (**)(void, void))(v0 + 8))(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_25A68BE94()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void, unint64_t))(v0 + 8);
  return v1(0, 0xE000000000000000);
}

uint64_t TC2Client.requestMetadata()(uint64_t a1)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = v1;
  return MEMORY[0x270FA2498](sub_25A68BF28, 0, 0);
}

uint64_t sub_25A68BF28()
{
  v0[6] = *(void *)(v0[5] + 16);
  type metadata accessor for XPCWrapper();
  v0[7] = sub_25A68F568(&qword_26B329E70, (void (*)(uint64_t))type metadata accessor for XPCWrapper);
  uint64_t v2 = sub_25A6C75D0();
  v0[8] = v2;
  v0[9] = v1;
  return MEMORY[0x270FA2498](sub_25A68BFEC, v2, v1);
}

uint64_t sub_25A68BFEC(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, uint64_t (*a6)(uint64_t a1), uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8[6];
  uint64_t v10 = *(void *)(v9 + 16);
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = v8[7];
    *(void *)(v9 + 16) = v10 + 1;
    uint64_t v12 = swift_task_alloc();
    v8[10] = v12;
    *(void *)(v12 + 16) = v9;
    *(void *)(v12 + 24) = v10;
    uint64_t v13 = (void *)swift_task_alloc();
    v8[11] = v13;
    a8 = __swift_instantiateConcreteTypeFromMangledName(qword_26B329DB8);
    *uint64_t v13 = v8;
    v13[1] = sub_25A68C110;
    a5 = 0x800000025A6CFFC0;
    a6 = sub_25A68F1B0;
    a1 = v8 + 2;
    a2 = v9;
    a3 = v11;
    a4 = 0xD000000000000011;
    a7 = v12;
  }
  return MEMORY[0x270FA2360](a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_25A68C110()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = *(void *)(v2 + 72);
    uint64_t v5 = sub_25A68C2EC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = *(void *)(v2 + 72);
    uint64_t v5 = sub_25A68C22C;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_25A68C22C()
{
  *(_OWORD *)(v0 + 104) = *(_OWORD *)(v0 + 16);
  return MEMORY[0x270FA2498](sub_25A68C250, 0, 0);
}

uint64_t sub_25A68C250()
{
  unint64_t v1 = *(void *)(v0 + 112);
  if (v1 >> 60 == 15) {
    **(void **)(v0 + 32) = 0;
  }
  else {
    sub_25A68B310(*(void *)(v0 + 104), v1, (void (*)(void))sub_25A68F6B8, *(void **)(v0 + 32));
  }
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_25A68C2EC()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25A68C360, 0, 0);
}

uint64_t sub_25A68C360()
{
  **(void **)(v0 + 32) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t TC2Client.prefetch(request:)(uint64_t a1)
{
  *(void *)(v2 + 40) = v1;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)a1;
  *(void *)(v2 + 64) = *(void *)(a1 + 16);
  return MEMORY[0x270FA2498](sub_25A68C3AC, 0, 0);
}

uint64_t sub_25A68C3AC()
{
  uint64_t v1 = *(void *)(v0 + 64);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 48);
  *(void *)(v0 + 32) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  void *v2 = v0;
  v2[1] = sub_25A68C458;
  return sub_25A6A6A08(v0 + 16, v3);
}

uint64_t sub_25A68C458(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 80) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_25A68C594, 0, 0);
  }
  else
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_25A68C594()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t TC2Client.prewarm(request:bundleIdentifier:featureIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 + 40) = a5;
  *(void *)(v6 + 48) = v5;
  *(void *)(v6 + 24) = a3;
  *(void *)(v6 + 32) = a4;
  *(void *)(v6 + 16) = a2;
  *(_OWORD *)(v6 + 56) = *(_OWORD *)a1;
  *(void *)(v6 + 72) = *(void *)(a1 + 16);
  return MEMORY[0x270FA2498](sub_25A68C5E4, 0, 0);
}

uint64_t sub_25A68C5E4()
{
  unint64_t v1 = v0[9];
  v0[10] = *(void *)(v0[6] + 16);
  if (v1) {
    unint64_t v2 = v1;
  }
  else {
    unint64_t v2 = sub_25A68CA18(MEMORY[0x263F8EE78]);
  }
  v0[11] = v2;
  type metadata accessor for XPCWrapper();
  v0[12] = sub_25A68F568(&qword_26B329E70, (void (*)(uint64_t))type metadata accessor for XPCWrapper);
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_25A6C75D0();
  v0[13] = v4;
  v0[14] = v3;
  return MEMORY[0x270FA2498](sub_25A68C6DC, v4, v3);
}

uint64_t sub_25A68C6DC(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, void (*a6)(uint64_t a1), uint64_t a7, uint64_t a8)
{
  uint64_t v9 = *(void *)(v8 + 80);
  uint64_t v10 = *(void *)(v9 + 16);
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v12 = *(void *)(v8 + 88);
    uint64_t v11 = *(void *)(v8 + 96);
    uint64_t v13 = *(void *)(v8 + 40);
    long long v18 = *(_OWORD *)(v8 + 56);
    long long v19 = *(_OWORD *)(v8 + 24);
    uint64_t v14 = *(void *)(v8 + 16);
    *(void *)(v9 + 16) = v10 + 1;
    uint64_t v15 = swift_task_alloc();
    *(void *)(v8 + 120) = v15;
    *(void *)(v15 + 16) = v9;
    *(void *)(v15 + 24) = v10;
    *(_OWORD *)(v15 + 32) = v18;
    *(void *)(v15 + 48) = v12;
    *(void *)(v15 + 56) = v14;
    *(_OWORD *)(v15 + 64) = v19;
    *(void *)(v15 + 80) = v13;
    a1 = (void *)swift_task_alloc();
    *(void *)(v8 + 128) = a1;
    *a1 = v8;
    uint64_t v16 = MEMORY[0x263F8EE60];
    a1[1] = sub_25A68C824;
    a8 = v16 + 8;
    a5 = 0x800000025A6CFFE0;
    a6 = sub_25A68F1B8;
    a2 = v9;
    a3 = v11;
    a4 = 0xD000000000000053;
    a7 = v15;
  }
  return MEMORY[0x270FA2360](a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_25A68C824()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 104);
    uint64_t v4 = *(void *)(v2 + 112);
    uint64_t v5 = sub_25A68C9A0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 104);
    uint64_t v4 = *(void *)(v2 + 112);
    uint64_t v5 = sub_25A68C940;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_25A68C940()
{
  swift_bridgeObjectRelease();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25A68C9A0()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_25A68CA18(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C2E8);
  uint64_t v2 = (void *)sub_25A6C7800();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_25A6AF028(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t TC2Client.prefetchParametersCache()()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x270FA2498](sub_25A68CB5C, 0, 0);
}

uint64_t sub_25A68CB5C()
{
  v0[4] = *(void *)(v0[3] + 16);
  type metadata accessor for XPCWrapper();
  v0[5] = sub_25A68F568(&qword_26B329E70, (void (*)(uint64_t))type metadata accessor for XPCWrapper);
  uint64_t v2 = sub_25A6C75D0();
  v0[6] = v2;
  v0[7] = v1;
  return MEMORY[0x270FA2498](sub_25A68CC20, v2, v1);
}

uint64_t sub_25A68CC20(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, uint64_t (*a6)(uint64_t a1), uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8[4];
  uint64_t v10 = *(void *)(v9 + 16);
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = v8[5];
    *(void *)(v9 + 16) = v10 + 1;
    uint64_t v12 = swift_task_alloc();
    v8[8] = v12;
    *(void *)(v12 + 16) = v9;
    *(void *)(v12 + 24) = v10;
    uint64_t v13 = (void *)swift_task_alloc();
    v8[9] = v13;
    a8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B32A010);
    *uint64_t v13 = v8;
    v13[1] = sub_25A68CD44;
    a5 = 0x800000025A6D0040;
    a6 = sub_25A68F1F0;
    a1 = v8 + 2;
    a2 = v9;
    a3 = v11;
    a4 = 0xD000000000000019;
    a7 = v12;
  }
  return MEMORY[0x270FA2360](a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_25A68CD44()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 48);
    uint64_t v4 = *(void *)(v2 + 56);
    uint64_t v5 = sub_25A68F99C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 48);
    uint64_t v4 = *(void *)(v2 + 56);
    uint64_t v5 = sub_25A68F9A8;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t TC2Client.prefetchParametersCacheSavedState()()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x270FA2498](sub_25A68CE80, 0, 0);
}

uint64_t sub_25A68CE80()
{
  v0[4] = *(void *)(v0[3] + 16);
  type metadata accessor for XPCWrapper();
  v0[5] = sub_25A68F568(&qword_26B329E70, (void (*)(uint64_t))type metadata accessor for XPCWrapper);
  uint64_t v2 = sub_25A6C75D0();
  v0[6] = v2;
  v0[7] = v1;
  return MEMORY[0x270FA2498](sub_25A68CF44, v2, v1);
}

uint64_t sub_25A68CF44(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, uint64_t (*a6)(uint64_t a1), uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8[4];
  uint64_t v10 = *(void *)(v9 + 16);
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = v8[5];
    *(void *)(v9 + 16) = v10 + 1;
    uint64_t v12 = swift_task_alloc();
    v8[8] = v12;
    *(void *)(v12 + 16) = v9;
    *(void *)(v12 + 24) = v10;
    uint64_t v13 = (void *)swift_task_alloc();
    v8[9] = v13;
    a8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B32A010);
    *uint64_t v13 = v8;
    v13[1] = sub_25A68CD44;
    a5 = 0x800000025A6D0060;
    a6 = sub_25A68F1F8;
    a1 = v8 + 2;
    a2 = v9;
    a3 = v11;
    a4 = 0xD000000000000023;
    a7 = v12;
  }
  return MEMORY[0x270FA2360](a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t TC2Client.prefetchCacheReset()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_25A68D088, 0, 0);
}

uint64_t sub_25A68D088()
{
  v0[3] = *(void *)(v0[2] + 16);
  type metadata accessor for XPCWrapper();
  v0[4] = sub_25A68F568(&qword_26B329E70, (void (*)(uint64_t))type metadata accessor for XPCWrapper);
  uint64_t v2 = sub_25A6C75D0();
  v0[5] = v2;
  v0[6] = v1;
  return MEMORY[0x270FA2498](sub_25A68D14C, v2, v1);
}

uint64_t sub_25A68D14C(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, uint64_t (*a6)(uint64_t a1), uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8[3];
  uint64_t v10 = *(void *)(v9 + 16);
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = v8[4];
    *(void *)(v9 + 16) = v10 + 1;
    uint64_t v12 = swift_task_alloc();
    v8[7] = v12;
    *(void *)(v12 + 16) = v9;
    *(void *)(v12 + 24) = v10;
    uint64_t v13 = (void *)swift_task_alloc();
    v8[8] = v13;
    *uint64_t v13 = v8;
    v13[1] = sub_25A68D268;
    a5 = 0x800000025A6D0090;
    a8 = MEMORY[0x263F8D4F8];
    a6 = sub_25A68F200;
    a1 = v8 + 10;
    a2 = v9;
    a3 = v11;
    a4 = 0xD000000000000014;
    a7 = v12;
  }
  return MEMORY[0x270FA2360](a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_25A68D268()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v4 = *(void *)(v2 + 48);
    uint64_t v5 = sub_25A68D39C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v4 = *(void *)(v2 + 48);
    uint64_t v5 = sub_25A68D384;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_25A68D384()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(unsigned __int8 *)(v0 + 80));
}

uint64_t sub_25A68D39C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t TC2Client.prefetchCache()()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x270FA2498](sub_25A68D42C, 0, 0);
}

uint64_t sub_25A68D42C()
{
  v0[4] = *(void *)(v0[3] + 16);
  type metadata accessor for XPCWrapper();
  v0[5] = sub_25A68F568(&qword_26B329E70, (void (*)(uint64_t))type metadata accessor for XPCWrapper);
  uint64_t v2 = sub_25A6C75D0();
  v0[6] = v2;
  v0[7] = v1;
  return MEMORY[0x270FA2498](sub_25A68D4F0, v2, v1);
}

uint64_t sub_25A68D4F0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t (*a6)(uint64_t a1), uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8[4];
  uint64_t v10 = *(void *)(v9 + 16);
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = v8[5];
    *(void *)(v9 + 16) = v10 + 1;
    uint64_t v12 = swift_task_alloc();
    v8[8] = v12;
    *(void *)(v12 + 16) = v9;
    *(void *)(v12 + 24) = v10;
    uint64_t v13 = (void *)swift_task_alloc();
    v8[9] = v13;
    a8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B32A010);
    *uint64_t v13 = v8;
    v13[1] = sub_25A68D61C;
    a6 = sub_25A68F208;
    a1 = v8 + 2;
    a2 = v9;
    a3 = v11;
    a4 = 0x6863746566657270;
    a5 = 0xEF29286568636143;
    a7 = v12;
  }
  return MEMORY[0x270FA2360](a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_25A68D61C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 48);
    uint64_t v4 = *(void *)(v2 + 56);
    uint64_t v5 = sub_25A68D750;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 48);
    uint64_t v4 = *(void *)(v2 + 56);
    uint64_t v5 = sub_25A68D738;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_25A68D738()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_25A68D750()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = MEMORY[0x263F8EE78];
  return v1(v2);
}

uint64_t TC2Client.knownRateLimits(bundleIdentifier:featureIdentifier:skipFetch:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 56) = a4;
  *(void *)(v6 + 64) = v5;
  *(unsigned char *)(v6 + 144) = a5;
  *(void *)(v6 + 40) = a2;
  *(void *)(v6 + 48) = a3;
  *(void *)(v6 + 32) = a1;
  return MEMORY[0x270FA2498](sub_25A68D7F0, 0, 0);
}

uint64_t sub_25A68D7F0()
{
  v0[9] = *(void *)(v0[8] + 16);
  type metadata accessor for XPCWrapper();
  v0[10] = sub_25A68F568(&qword_26B329E70, (void (*)(uint64_t))type metadata accessor for XPCWrapper);
  uint64_t v2 = sub_25A6C75D0();
  v0[11] = v2;
  v0[12] = v1;
  return MEMORY[0x270FA2498](sub_25A68D8B4, v2, v1);
}

uint64_t sub_25A68D8B4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, uint64_t (*a6)(uint64_t a1), uint64_t a7, uint64_t a8)
{
  uint64_t v9 = *(void *)(v8 + 72);
  uint64_t v10 = *(void *)(v9 + 16);
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = *(void *)(v8 + 80);
    char v12 = *(unsigned char *)(v8 + 144);
    uint64_t v14 = *(void *)(v8 + 48);
    uint64_t v13 = *(void *)(v8 + 56);
    long long v18 = *(_OWORD *)(v8 + 32);
    *(void *)(v9 + 16) = v10 + 1;
    uint64_t v15 = swift_task_alloc();
    *(void *)(v8 + 104) = v15;
    *(void *)(v15 + 16) = v9;
    *(void *)(v15 + 24) = v10;
    *(_OWORD *)(v15 + 32) = v18;
    *(void *)(v15 + 48) = v14;
    *(void *)(v15 + 56) = v13;
    *(unsigned char *)(v15 + 64) = v12;
    uint64_t v16 = (void *)swift_task_alloc();
    *(void *)(v8 + 112) = v16;
    a8 = __swift_instantiateConcreteTypeFromMangledName(qword_26B329DB8);
    *uint64_t v16 = v8;
    v16[1] = sub_25A68DA08;
    a5 = 0x800000025A6D00B0;
    a6 = sub_25A68F210;
    a1 = v8 + 16;
    a2 = v9;
    a3 = v11;
    a4 = 0xD00000000000003ELL;
    a7 = v15;
  }
  return MEMORY[0x270FA2360](a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_25A68DA08()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 88);
    uint64_t v4 = *(void *)(v2 + 96);
    uint64_t v5 = sub_25A68F9AC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 88);
    uint64_t v4 = *(void *)(v2 + 96);
    uint64_t v5 = sub_25A68DB24;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_25A68DB24()
{
  *(_OWORD *)(v0 + 128) = *(_OWORD *)(v0 + 16);
  return MEMORY[0x270FA2498](sub_25A68F998, 0, 0);
}

uint64_t TC2Client.listRateLimits(bundleIdentifier:featureIdentifier:fetch:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 56) = a4;
  *(void *)(v6 + 64) = v5;
  *(unsigned char *)(v6 + 144) = a5;
  *(void *)(v6 + 40) = a2;
  *(void *)(v6 + 48) = a3;
  *(void *)(v6 + 32) = a1;
  return MEMORY[0x270FA2498](sub_25A68DB74, 0, 0);
}

uint64_t sub_25A68DB74()
{
  v0[9] = *(void *)(v0[8] + 16);
  type metadata accessor for XPCWrapper();
  v0[10] = sub_25A68F568(&qword_26B329E70, (void (*)(uint64_t))type metadata accessor for XPCWrapper);
  uint64_t v2 = sub_25A6C75D0();
  v0[11] = v2;
  v0[12] = v1;
  return MEMORY[0x270FA2498](sub_25A68DC38, v2, v1);
}

uint64_t sub_25A68DC38(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, uint64_t (*a6)(uint64_t a1), uint64_t a7, uint64_t a8)
{
  uint64_t v9 = *(void *)(v8 + 72);
  uint64_t v10 = *(void *)(v9 + 16);
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = *(void *)(v8 + 80);
    char v12 = *(unsigned char *)(v8 + 144);
    uint64_t v14 = *(void *)(v8 + 48);
    uint64_t v13 = *(void *)(v8 + 56);
    long long v18 = *(_OWORD *)(v8 + 32);
    *(void *)(v9 + 16) = v10 + 1;
    uint64_t v15 = swift_task_alloc();
    *(void *)(v8 + 104) = v15;
    *(void *)(v15 + 16) = v9;
    *(void *)(v15 + 24) = v10;
    *(_OWORD *)(v15 + 32) = v18;
    *(void *)(v15 + 48) = v14;
    *(void *)(v15 + 56) = v13;
    *(unsigned char *)(v15 + 64) = v12;
    uint64_t v16 = (void *)swift_task_alloc();
    *(void *)(v8 + 112) = v16;
    a8 = __swift_instantiateConcreteTypeFromMangledName(qword_26B329DB8);
    *uint64_t v16 = v8;
    v16[1] = sub_25A68DD8C;
    a5 = 0x800000025A6D00F0;
    a6 = sub_25A68F2EC;
    a1 = v8 + 16;
    a2 = v9;
    a3 = v11;
    a4 = 0xD000000000000039;
    a7 = v15;
  }
  return MEMORY[0x270FA2360](a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_25A68DD8C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 88);
    uint64_t v4 = *(void *)(v2 + 96);
    uint64_t v5 = sub_25A68DF7C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 88);
    uint64_t v4 = *(void *)(v2 + 96);
    uint64_t v5 = sub_25A68DEA8;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_25A68DEA8()
{
  *(_OWORD *)(v0 + 128) = *(_OWORD *)(v0 + 16);
  return MEMORY[0x270FA2498](sub_25A68DECC, 0, 0);
}

uint64_t sub_25A68DECC()
{
  unint64_t v1 = v0[17];
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1 >> 60 != 15)
  {
    uint64_t v3 = v0[16];
    sub_25A68F228(v3, v0[17]);
    uint64_t v4 = sub_25A68A1D0(v3, v1);
    sub_25A68F280(v3, v1);
    if (v4) {
      uint64_t v2 = v4;
    }
  }
  uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
  return v5(v2);
}

uint64_t sub_25A68DF7C()
{
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = MEMORY[0x263F8EE78];
  return v1(v2);
}

uint64_t TC2Client.addRateLimit(bundleIdentifier:featureIdentifier:workloadType:count:duration:ttl:jitter:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9, double a10)
{
  *(void *)(v11 + 96) = v10;
  *(double *)(v11 + 80) = a9;
  *(double *)(v11 + 88) = a10;
  *(double *)(v11 + 72) = a8;
  *(void *)(v11 + 56) = a6;
  *(void *)(v11 + 64) = a7;
  *(void *)(v11 + 40) = a4;
  *(void *)(v11 + 48) = a5;
  *(void *)(v11 + 24) = a2;
  *(void *)(v11 + 32) = a3;
  *(void *)(v11 + 16) = a1;
  return MEMORY[0x270FA2498](sub_25A68E028, 0, 0);
}

uint64_t sub_25A68E028()
{
  v0[13] = *(void *)(v0[12] + 16);
  type metadata accessor for XPCWrapper();
  v0[14] = sub_25A68F568(&qword_26B329E70, (void (*)(uint64_t))type metadata accessor for XPCWrapper);
  uint64_t v2 = sub_25A6C75D0();
  v0[15] = v2;
  v0[16] = v1;
  return MEMORY[0x270FA2498](sub_25A68E0EC, v2, v1);
}

uint64_t sub_25A68E0EC(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, void (*a6)(uint64_t a1), uint64_t a7, uint64_t a8)
{
  uint64_t v9 = *(void *)(v8 + 104);
  uint64_t v10 = *(void *)(v9 + 16);
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = *(void *)(v8 + 112);
    uint64_t v12 = *(void *)(v8 + 88);
    uint64_t v13 = *(void *)(v8 + 64);
    long long v19 = *(_OWORD *)(v8 + 48);
    long long v20 = *(_OWORD *)(v8 + 72);
    long long v17 = *(_OWORD *)(v8 + 16);
    long long v18 = *(_OWORD *)(v8 + 32);
    *(void *)(v9 + 16) = v10 + 1;
    uint64_t v14 = swift_task_alloc();
    *(void *)(v8 + 136) = v14;
    *(void *)(v14 + 16) = v9;
    *(void *)(v14 + 24) = v10;
    *(_OWORD *)(v14 + 32) = v17;
    *(_OWORD *)(v14 + 48) = v18;
    *(_OWORD *)(v14 + 64) = v19;
    *(void *)(v14 + 80) = v13;
    *(_OWORD *)(v14 + 88) = v20;
    *(void *)(v14 + 104) = v12;
    a1 = (void *)swift_task_alloc();
    *(void *)(v8 + 144) = a1;
    *a1 = v8;
    uint64_t v15 = MEMORY[0x263F8EE60];
    a1[1] = sub_25A68E24C;
    a8 = v15 + 8;
    a5 = 0x800000025A6D0130;
    a6 = sub_25A68F320;
    a2 = v9;
    a3 = v11;
    a4 = 0xD000000000000058;
    a7 = v14;
  }
  return MEMORY[0x270FA2360](a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_25A68E24C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 120);
    uint64_t v4 = *(void *)(v2 + 128);
    uint64_t v5 = sub_25A68E37C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 120);
    uint64_t v4 = *(void *)(v2 + 128);
    uint64_t v5 = sub_25A68E368;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_25A68E368()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_25A68E37C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t TC2Client.resetRateLimits()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_25A68E408, 0, 0);
}

uint64_t sub_25A68E408()
{
  v0[3] = *(void *)(v0[2] + 16);
  type metadata accessor for XPCWrapper();
  v0[4] = sub_25A68F568(&qword_26B329E70, (void (*)(uint64_t))type metadata accessor for XPCWrapper);
  uint64_t v2 = sub_25A6C75D0();
  v0[5] = v2;
  v0[6] = v1;
  return MEMORY[0x270FA2498](sub_25A68E4CC, v2, v1);
}

uint64_t sub_25A68E4CC(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, uint64_t (*a6)(uint64_t a1), uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8[3];
  uint64_t v10 = *(void *)(v9 + 16);
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = v8[4];
    *(void *)(v9 + 16) = v10 + 1;
    uint64_t v12 = swift_task_alloc();
    v8[7] = v12;
    *(void *)(v12 + 16) = v9;
    *(void *)(v12 + 24) = v10;
    a1 = (void *)swift_task_alloc();
    v8[8] = a1;
    *a1 = v8;
    uint64_t v13 = MEMORY[0x263F8EE60];
    a1[1] = sub_25A68E5D8;
    a8 = v13 + 8;
    a5 = 0x800000025A6D0190;
    a6 = sub_25A68F360;
    a2 = v9;
    a3 = v11;
    a4 = 0xD000000000000011;
    a7 = v12;
  }
  return MEMORY[0x270FA2360](a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_25A68E5D8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v4 = *(void *)(v2 + 48);
    uint64_t v5 = sub_25A68E6F4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v4 = *(void *)(v2 + 48);
    uint64_t v5 = sub_25A68E368;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_25A68E6F4()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t TC2Client.fetchServerDrivenConfiguration()()
{
  *(void *)(v1 + 32) = v0;
  return MEMORY[0x270FA2498](sub_25A68E780, 0, 0);
}

uint64_t sub_25A68E780()
{
  v0[5] = *(void *)(v0[4] + 16);
  type metadata accessor for XPCWrapper();
  v0[6] = sub_25A68F568(&qword_26B329E70, (void (*)(uint64_t))type metadata accessor for XPCWrapper);
  uint64_t v2 = sub_25A6C75D0();
  v0[7] = v2;
  v0[8] = v1;
  return MEMORY[0x270FA2498](sub_25A68E844, v2, v1);
}

uint64_t sub_25A68E844(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, uint64_t (*a6)(uint64_t a1), uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8[5];
  uint64_t v10 = *(void *)(v9 + 16);
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = v8[6];
    *(void *)(v9 + 16) = v10 + 1;
    uint64_t v12 = swift_task_alloc();
    v8[9] = v12;
    *(void *)(v12 + 16) = v9;
    *(void *)(v12 + 24) = v10;
    uint64_t v13 = (void *)swift_task_alloc();
    v8[10] = v13;
    *uint64_t v13 = v8;
    v13[1] = sub_25A68E960;
    a5 = 0x800000025A6D01B0;
    a8 = MEMORY[0x263F06F78];
    a6 = sub_25A68F368;
    a1 = v8 + 2;
    a2 = v9;
    a3 = v11;
    a4 = 0xD000000000000020;
    a7 = v12;
  }
  return MEMORY[0x270FA2360](a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_25A68E960()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 56);
    uint64_t v4 = *(void *)(v2 + 64);
    uint64_t v5 = sub_25A68F9A0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 56);
    uint64_t v4 = *(void *)(v2 + 64);
    uint64_t v5 = sub_25A68F9A4;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t TC2Client.listServerDrivenConfiguration()()
{
  *(void *)(v1 + 32) = v0;
  return MEMORY[0x270FA2498](sub_25A68EA9C, 0, 0);
}

uint64_t sub_25A68EA9C()
{
  v0[5] = *(void *)(v0[4] + 16);
  type metadata accessor for XPCWrapper();
  v0[6] = sub_25A68F568(&qword_26B329E70, (void (*)(uint64_t))type metadata accessor for XPCWrapper);
  uint64_t v2 = sub_25A6C75D0();
  v0[7] = v2;
  v0[8] = v1;
  return MEMORY[0x270FA2498](sub_25A68EB60, v2, v1);
}

uint64_t sub_25A68EB60(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, uint64_t (*a6)(uint64_t a1), uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8[5];
  uint64_t v10 = *(void *)(v9 + 16);
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = v8[6];
    *(void *)(v9 + 16) = v10 + 1;
    uint64_t v12 = swift_task_alloc();
    v8[9] = v12;
    *(void *)(v12 + 16) = v9;
    *(void *)(v12 + 24) = v10;
    uint64_t v13 = (void *)swift_task_alloc();
    v8[10] = v13;
    *uint64_t v13 = v8;
    v13[1] = sub_25A68EC7C;
    a5 = 0x800000025A6D01E0;
    a8 = MEMORY[0x263F06F78];
    a6 = sub_25A68F370;
    a1 = v8 + 2;
    a2 = v9;
    a3 = v11;
    a4 = 0xD00000000000001FLL;
    a7 = v12;
  }
  return MEMORY[0x270FA2360](a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_25A68EC7C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 56);
    uint64_t v4 = *(void *)(v2 + 64);
    uint64_t v5 = sub_25A68ED98;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 56);
    uint64_t v4 = *(void *)(v2 + 64);
    uint64_t v5 = sub_25A68F9A4;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_25A68ED98()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void, unint64_t))(v0 + 8);
  return v1(0, 0xC000000000000000);
}

uint64_t TC2Client.setServerDrivenConfiguration(json:)(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return MEMORY[0x270FA2498](sub_25A68EE30, 0, 0);
}

uint64_t sub_25A68EE30()
{
  v0[7] = *(void *)(v0[6] + 16);
  type metadata accessor for XPCWrapper();
  v0[8] = sub_25A68F568(&qword_26B329E70, (void (*)(uint64_t))type metadata accessor for XPCWrapper);
  uint64_t v2 = sub_25A6C75D0();
  v0[9] = v2;
  v0[10] = v1;
  return MEMORY[0x270FA2498](sub_25A68EEF4, v2, v1);
}

uint64_t sub_25A68EEF4(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, void (*a6)(uint64_t a1), void *a7, uint64_t a8)
{
  uint64_t v9 = v8[7];
  uint64_t v10 = *(void *)(v9 + 16);
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = v8[8];
    uint64_t v13 = v8[4];
    uint64_t v12 = v8[5];
    *(void *)(v9 + 16) = v10 + 1;
    uint64_t v14 = (void *)swift_task_alloc();
    v8[11] = v14;
    v14[2] = v9;
    void v14[3] = v10;
    v14[4] = v13;
    v14[5] = v12;
    uint64_t v15 = (void *)swift_task_alloc();
    v8[12] = v15;
    *uint64_t v15 = v8;
    v15[1] = sub_25A68F020;
    a5 = 0x800000025A6D0200;
    a8 = MEMORY[0x263F06F78];
    a6 = sub_25A68F378;
    a1 = v8 + 2;
    a2 = v9;
    a3 = v11;
    a4 = 0xD000000000000023;
    a7 = v14;
  }
  return MEMORY[0x270FA2360](a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_25A68F020()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 72);
    uint64_t v4 = *(void *)(v2 + 80);
    uint64_t v5 = sub_25A68F13C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 72);
    uint64_t v4 = *(void *)(v2 + 80);
    uint64_t v5 = sub_25A68BE7C;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_25A68F13C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void, unint64_t))(v0 + 8);
  return v1(0, 0xC000000000000000);
}

uint64_t sub_25A68F1B0(uint64_t a1)
{
  return sub_25A6AA4B4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_25A68F1B8(uint64_t a1)
{
  sub_25A6AB040(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void **)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80));
}

uint64_t sub_25A68F1F0(uint64_t a1)
{
  return sub_25A6AB690(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_25A68F1F8(uint64_t a1)
{
  return sub_25A6AB9F8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_25A68F200(uint64_t a1)
{
  return sub_25A6ABC34(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_25A68F208(uint64_t a1)
{
  return sub_25A6AB5F0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_25A68F210(uint64_t a1)
{
  return sub_25A68F304(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_25A6AC1C8);
}

uint64_t sub_25A68F228(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_25A68F280(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_25A68F294(a1, a2);
  }
  return a1;
}

uint64_t sub_25A68F294(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_25A68F2EC(uint64_t a1)
{
  return sub_25A68F304(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_25A6AC218);
}

uint64_t sub_25A68F304(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, void))
{
  return a2(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(unsigned __int8 *)(v2 + 64));
}

void sub_25A68F320(uint64_t a1)
{
  sub_25A6AC4D4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(double *)(v1 + 88), *(double *)(v1 + 96), *(double *)(v1 + 104), *(void *)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 48), *(void **)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80));
}

uint64_t sub_25A68F360(uint64_t a1)
{
  return sub_25A6ACABC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_25A68F368(uint64_t a1)
{
  return sub_25A6ACCC4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_25A68F370(uint64_t a1)
{
  return sub_25A6ACD7C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_25A68F378(uint64_t a1)
{
  sub_25A6AD2F0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t type metadata accessor for TC2Client()
{
  return self;
}

uint64_t method lookup function for TC2Client(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for TC2Client);
}

uint64_t dispatch thunk of TC2Client.__allocating_init(userID:)(unint64_t a1)
{
  return (*(uint64_t (**)(unint64_t))(v1 + 88))(a1 | ((HIDWORD(a1) & 1) << 32));
}

unint64_t sub_25A68F3E8()
{
  unint64_t result = qword_26A44C280;
  if (!qword_26A44C280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C280);
  }
  return result;
}

unint64_t sub_25A68F43C()
{
  unint64_t result = qword_26A44C298;
  if (!qword_26A44C298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C298);
  }
  return result;
}

double sub_25A68F490(_OWORD *a1)
{
  double result = 0.0;
  *(_OWORD *)((char *)a1 + 105) = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_25A68F4AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C2A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_25A68F514()
{
  unint64_t result = qword_26A44C2A8;
  if (!qword_26A44C2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C2A8);
  }
  return result;
}

uint64_t sub_25A68F568(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25A68F5B0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25A68F60C(uint64_t a1)
{
  return sub_25A6A9F04(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_25A68F614()
{
  unint64_t result = qword_26A44C2E0;
  if (!qword_26A44C2E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A44C2D8);
    sub_25A68F568(&qword_26A44C2B8, (void (*)(uint64_t))type metadata accessor for TrustedCloudComputeRateLimit);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C2E0);
  }
  return result;
}

unint64_t sub_25A68F6B8()
{
  unint64_t result = qword_26A44C2F0;
  if (!qword_26A44C2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C2F0);
  }
  return result;
}

unint64_t sub_25A68F70C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B329FC0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B329FD8);
    uint64_t v7 = (void *)sub_25A6C7800();
    uint64_t v8 = (uint64_t)v5 + *(int *)(v2 + 48);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v10 = *(void *)(v3 + 72);
    while (1)
    {
      sub_25A68F8C8(v9, (uint64_t)v5);
      uint64_t v11 = *v5;
      unint64_t result = sub_25A6AF0A0(*v5);
      if (v13) {
        break;
      }
      unint64_t v14 = result;
      *(void *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v7[6] + 8 * result) = v11;
      uint64_t v15 = v7[7];
      uint64_t v16 = type metadata accessor for XPCWrapper.Continuation();
      unint64_t result = sub_25A68F930(v8, v15 + *(void *)(*(void *)(v16 - 8) + 72) * v14, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
      uint64_t v17 = v7[2];
      BOOL v18 = __OFADD__(v17, 1);
      uint64_t v19 = v17 + 1;
      if (v18) {
        goto LABEL_10;
      }
      v7[2] = v19;
      v9 += v10;
      if (!--v6) {
        return (unint64_t)v7;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

uint64_t sub_25A68F8C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B329FC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25A68F930(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t TrustedCloudComputeRateLimit.bundleIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrustedCloudComputeRateLimit.bundleIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*TrustedCloudComputeRateLimit.bundleIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t TrustedCloudComputeRateLimit.featureIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrustedCloudComputeRateLimit.featureIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*TrustedCloudComputeRateLimit.featureIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t TrustedCloudComputeRateLimit.workloadType.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrustedCloudComputeRateLimit.workloadType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*TrustedCloudComputeRateLimit.workloadType.modify())()
{
  return nullsub_1;
}

uint64_t TrustedCloudComputeRateLimit.WorkloadParameter.key.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrustedCloudComputeRateLimit.WorkloadParameter.key.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*TrustedCloudComputeRateLimit.WorkloadParameter.key.modify())()
{
  return nullsub_1;
}

uint64_t TrustedCloudComputeRateLimit.WorkloadParameter.value.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrustedCloudComputeRateLimit.WorkloadParameter.value.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*TrustedCloudComputeRateLimit.WorkloadParameter.value.modify())()
{
  return nullsub_1;
}

PrivateCloudCompute::TrustedCloudComputeRateLimit::WorkloadParameter __swiftcall TrustedCloudComputeRateLimit.WorkloadParameter.init(key:value:)(Swift::String key, Swift::String value)
{
  Swift::String *v2 = key;
  v2[1] = value;
  result.value = value;
  result.key = key;
  return result;
}

uint64_t TrustedCloudComputeRateLimit.WorkloadParameter.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_25A6C74E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_25A6C74E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25A68FCEC(uint64_t a1)
{
  unint64_t v2 = sub_25A69130C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A68FD28(uint64_t a1)
{
  unint64_t v2 = sub_25A69130C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TrustedCloudComputeRateLimit.WorkloadParameter.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C2F8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  v10[1] = *(void *)(v1 + 24);
  v10[2] = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A69130C();
  sub_25A6C7B00();
  char v12 = 0;
  uint64_t v8 = v10[3];
  sub_25A6C7960();
  if (!v8)
  {
    char v11 = 1;
    sub_25A6C7960();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t TrustedCloudComputeRateLimit.WorkloadParameter.hashValue.getter()
{
  return sub_25A6C7AE0();
}

uint64_t TrustedCloudComputeRateLimit.WorkloadParameter.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C308);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A69130C();
  sub_25A6C7AF0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v20 = 0;
  uint64_t v9 = sub_25A6C7890();
  uint64_t v11 = v10;
  char v19 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_25A6C7890();
  uint64_t v14 = v13;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v18 = v12;
  v15(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v18;
  a2[3] = v14;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25A690148@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return TrustedCloudComputeRateLimit.WorkloadParameter.init(from:)(a1, a2);
}

uint64_t sub_25A690160(void *a1)
{
  return TrustedCloudComputeRateLimit.WorkloadParameter.encode(to:)(a1);
}

uint64_t sub_25A690178()
{
  return sub_25A6C7AE0();
}

uint64_t sub_25A6901E0()
{
  sub_25A6C74E0();
  return sub_25A6C74E0();
}

uint64_t sub_25A690230()
{
  return sub_25A6C7AE0();
}

uint64_t TrustedCloudComputeRateLimit.workloadParameters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TrustedCloudComputeRateLimit.workloadParameters.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = a1;
  return result;
}

uint64_t (*TrustedCloudComputeRateLimit.workloadParameters.modify())()
{
  return nullsub_1;
}

uint64_t TrustedCloudComputeRateLimit.count.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t TrustedCloudComputeRateLimit.count.setter(uint64_t result)
{
  *(void *)(v1 + 56) = result;
  return result;
}

uint64_t (*TrustedCloudComputeRateLimit.count.modify())()
{
  return nullsub_1;
}

double TrustedCloudComputeRateLimit.duration.getter()
{
  return *(double *)(v0 + 64);
}

void TrustedCloudComputeRateLimit.duration.setter(double a1)
{
  *(double *)(v1 + 64) = a1;
}

uint64_t (*TrustedCloudComputeRateLimit.duration.modify())()
{
  return nullsub_1;
}

uint64_t TrustedCloudComputeRateLimit.loggedCountSoFar.getter()
{
  return *(void *)(v0 + 72);
}

uint64_t TrustedCloudComputeRateLimit.loggedCountSoFar.setter(uint64_t result)
{
  *(void *)(v1 + 72) = result;
  return result;
}

uint64_t (*TrustedCloudComputeRateLimit.loggedCountSoFar.modify())()
{
  return nullsub_1;
}

uint64_t TrustedCloudComputeRateLimit.ttlExpiration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TrustedCloudComputeRateLimit() + 44);
  uint64_t v4 = sub_25A6C73A0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t TrustedCloudComputeRateLimit.ttlExpiration.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TrustedCloudComputeRateLimit() + 44);
  uint64_t v4 = sub_25A6C73A0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*TrustedCloudComputeRateLimit.ttlExpiration.modify())()
{
  return nullsub_1;
}

uint64_t TrustedCloudComputeRateLimit.init(bundleIdentifier:featureIdentifier:workloadType:workloadParameters:count:duration:jitter:ttlExpiration:loggedCountSoFar:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, uint64_t a11, uint64_t a12)
{
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(double *)(a9 + 64) = a10;
  uint64_t v13 = a9 + *(int *)(type metadata accessor for TrustedCloudComputeRateLimit() + 44);
  uint64_t v14 = sub_25A6C73A0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v13, a11, v14);
  *(void *)(a9 + 72) = a12;
  return result;
}

uint64_t TrustedCloudComputeRateLimit.hash(into:)()
{
  if (v0[1])
  {
    sub_25A6C7AC0();
    swift_bridgeObjectRetain();
    sub_25A6C74E0();
    swift_bridgeObjectRelease();
    if (v0[3]) {
      goto LABEL_3;
    }
LABEL_6:
    sub_25A6C7AC0();
    if (v0[5]) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  sub_25A6C7AC0();
  if (!v0[3]) {
    goto LABEL_6;
  }
LABEL_3:
  sub_25A6C7AC0();
  swift_bridgeObjectRetain();
  sub_25A6C74E0();
  swift_bridgeObjectRelease();
  if (v0[5])
  {
LABEL_4:
    sub_25A6C7AC0();
    swift_bridgeObjectRetain();
    sub_25A6C74E0();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
LABEL_7:
  sub_25A6C7AC0();
LABEL_8:
  uint64_t v1 = v0[6];
  sub_25A6C7AB0();
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = v1 + 56;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_25A6C74E0();
      sub_25A6C74E0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 += 32;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  sub_25A6C7AB0();
  sub_25A6C7AD0();
  sub_25A6C7AB0();
  type metadata accessor for TrustedCloudComputeRateLimit();
  sub_25A6C73A0();
  sub_25A6917C0(&qword_26A44C310, MEMORY[0x263F07490]);
  return sub_25A6C7480();
}

uint64_t sub_25A690770(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (uint64_t *)(a2 + 56);
    for (i = (uint64_t *)(a1 + 56); ; i += 4)
    {
      uint64_t v5 = *(i - 1);
      uint64_t v6 = *i;
      uint64_t v7 = *(v3 - 1);
      uint64_t v8 = *v3;
      BOOL v9 = *(i - 3) == *(v3 - 3) && *(i - 2) == *(v3 - 2);
      if (!v9 && (sub_25A6C7A00() & 1) == 0) {
        break;
      }
      BOOL v10 = v5 == v7 && v6 == v8;
      if (!v10 && (sub_25A6C7A00() & 1) == 0) {
        break;
      }
      v3 += 4;
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

unint64_t sub_25A690838(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x64616F6C6B726F77;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x746E756F63;
      break;
    case 5:
      unint64_t result = 0x6E6F697461727564;
      break;
    case 7:
      unint64_t result = 0x72697078456C7474;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_25A69093C()
{
  return sub_25A690838(*v0);
}

uint64_t sub_25A690944@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25A692378(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25A69096C(uint64_t a1)
{
  unint64_t v2 = sub_25A6914F4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A6909A8(uint64_t a1)
{
  unint64_t v2 = sub_25A6914F4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TrustedCloudComputeRateLimit.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C318);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A6914F4();
  sub_25A6C7B00();
  LOBYTE(v11) = 0;
  sub_25A6C7920();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    sub_25A6C7920();
    LOBYTE(v11) = 2;
    sub_25A6C7920();
    uint64_t v11 = *(void *)(v3 + 48);
    v10[7] = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C328);
    sub_25A69159C(&qword_26A44C330, (void (*)(void))sub_25A691548);
    sub_25A6C79B0();
    LOBYTE(v11) = 4;
    sub_25A6C79A0();
    LOBYTE(v11) = 5;
    sub_25A6C7980();
    LOBYTE(v11) = 6;
    sub_25A6C79A0();
    type metadata accessor for TrustedCloudComputeRateLimit();
    LOBYTE(v11) = 7;
    sub_25A6C73A0();
    sub_25A6917C0(&qword_26B329B28, MEMORY[0x263F07490]);
    sub_25A6C79B0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t TrustedCloudComputeRateLimit.hashValue.getter()
{
  return sub_25A6C7AE0();
}

uint64_t TrustedCloudComputeRateLimit.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v3 = sub_25A6C73A0();
  uint64_t v23 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C340);
  uint64_t v25 = *(void *)(v6 - 8);
  uint64_t v26 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TrustedCloudComputeRateLimit();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_OWORD *)v11 + 1) = 0u;
  *((_OWORD *)v11 + 2) = 0u;
  *(_OWORD *)uint64_t v11 = 0u;
  uint64_t v12 = a1[3];
  unint64_t v27 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_25A6914F4();
  uint64_t v13 = v28;
  sub_25A6C7AF0();
  if (v13)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v22 = v9;
    uint64_t v28 = v3;
    uint64_t v14 = v25;
    uint64_t v15 = v26;
    LOBYTE(v30) = 0;
    *(void *)uint64_t v11 = sub_25A6C7850();
    *((void *)v11 + 1) = v16;
    LOBYTE(v30) = 1;
    *((void *)v11 + 2) = sub_25A6C7850();
    *((void *)v11 + 3) = v17;
    LOBYTE(v30) = 2;
    *((void *)v11 + 4) = sub_25A6C7850();
    *((void *)v11 + 5) = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C328);
    char v29 = 3;
    sub_25A69159C(&qword_26A44C348, (void (*)(void))sub_25A69160C);
    sub_25A6C78E0();
    *((void *)v11 + 6) = v30;
    LOBYTE(v30) = 4;
    *((void *)v11 + 7) = sub_25A6C78D0();
    LOBYTE(v30) = 5;
    sub_25A6C78B0();
    *((void *)v11 + 8) = v19;
    LOBYTE(v30) = 6;
    *((void *)v11 + 9) = sub_25A6C78D0();
    LOBYTE(v30) = 7;
    sub_25A6917C0(&qword_26A44B8F8, MEMORY[0x263F07490]);
    uint64_t v20 = v28;
    sub_25A6C78E0();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(&v11[*(int *)(v22 + 44)], v5, v20);
    sub_25A691660((uint64_t)v11, v24);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    return sub_25A6916C4((uint64_t)v11);
  }
}

uint64_t sub_25A6911B4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TrustedCloudComputeRateLimit.init(from:)(a1, a2);
}

uint64_t sub_25A6911CC(void *a1)
{
  return TrustedCloudComputeRateLimit.encode(to:)(a1);
}

uint64_t sub_25A6911E4()
{
  return sub_25A6C7AE0();
}

uint64_t sub_25A691228()
{
  return sub_25A6C7AE0();
}

uint64_t _s19PrivateCloudCompute07TrustedbC9RateLimitV17WorkloadParameterV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_25A6C7A00(), uint64_t result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_25A6C7A00();
    }
  }
  return result;
}

unint64_t sub_25A69130C()
{
  unint64_t result = qword_26A44C300;
  if (!qword_26A44C300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C300);
  }
  return result;
}

uint64_t type metadata accessor for TrustedCloudComputeRateLimit()
{
  uint64_t result = qword_26A44C368;
  if (!qword_26A44C368) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t _s19PrivateCloudCompute07TrustedbC9RateLimitV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v4)
  {
    if (!v5) {
      return 0;
    }
    BOOL v6 = *(void *)a1 == *(void *)a2 && v4 == v5;
    if (!v6 && (sub_25A6C7A00() & 1) == 0) {
      return 0;
    }
  }
  else if (v5)
  {
    return 0;
  }
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a2 + 24);
  if (v7)
  {
    if (!v8 || (*(void *)(a1 + 16) != *(void *)(a2 + 16) || v7 != v8) && (sub_25A6C7A00() & 1) == 0) {
      return 0;
    }
  }
  else if (v8)
  {
    return 0;
  }
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a2 + 40);
  if (!v9)
  {
    if (!v10) {
      goto LABEL_24;
    }
    return 0;
  }
  if (!v10 || (*(void *)(a1 + 32) != *(void *)(a2 + 32) || v9 != v10) && (sub_25A6C7A00() & 1) == 0) {
    return 0;
  }
LABEL_24:
  if ((sub_25A690770(*(void *)(a1 + 48), *(void *)(a2 + 48)) & 1) == 0
    || *(void *)(a1 + 56) != *(void *)(a2 + 56)
    || *(double *)(a1 + 64) != *(double *)(a2 + 64)
    || *(void *)(a1 + 72) != *(void *)(a2 + 72))
  {
    return 0;
  }
  type metadata accessor for TrustedCloudComputeRateLimit();
  return sub_25A6C7370();
}

unint64_t sub_25A6914F4()
{
  unint64_t result = qword_26A44C320;
  if (!qword_26A44C320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C320);
  }
  return result;
}

unint64_t sub_25A691548()
{
  unint64_t result = qword_26A44C338;
  if (!qword_26A44C338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C338);
  }
  return result;
}

uint64_t sub_25A69159C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A44C328);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25A69160C()
{
  unint64_t result = qword_26A44C350;
  if (!qword_26A44C350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C350);
  }
  return result;
}

uint64_t sub_25A691660(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TrustedCloudComputeRateLimit();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25A6916C4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TrustedCloudComputeRateLimit();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_25A691724()
{
  unint64_t result = qword_26A44C358;
  if (!qword_26A44C358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C358);
  }
  return result;
}

uint64_t sub_25A691778()
{
  return sub_25A6917C0(&qword_26A44C360, (void (*)(uint64_t))type metadata accessor for TrustedCloudComputeRateLimit);
}

uint64_t sub_25A6917C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for TrustedCloudComputeRateLimit(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    uint64_t v7 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v7;
    *(void *)(a1 + 48) = a2[6];
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    uint64_t v8 = *(int *)(a3 + 44);
    uint64_t v9 = (uint64_t)a2 + v8;
    uint64_t v10 = a1 + v8;
    *(void *)(a1 + 72) = a2[9];
    uint64_t v11 = sub_25A6C73A0();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v10, v9, v11);
  }
  return v3;
}

uint64_t destroy for TrustedCloudComputeRateLimit(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 44);
  uint64_t v5 = sub_25A6C73A0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for TrustedCloudComputeRateLimit(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v7 = *(int *)(a3 + 44);
  uint64_t v8 = a2 + v7;
  uint64_t v9 = a1 + v7;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v10 = sub_25A6C73A0();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v9, v8, v10);
  return a1;
}

void *assignWithCopy for TrustedCloudComputeRateLimit(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  uint64_t v6 = *(int *)(a3 + 44);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_25A6C73A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for TrustedCloudComputeRateLimit(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  long long v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = a2[4];
  uint64_t v6 = *(int *)(a3 + 44);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_25A6C73A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  return a1;
}

void *assignWithTake for TrustedCloudComputeRateLimit(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  uint64_t v9 = *(int *)(a3 + 44);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_25A6C73A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrustedCloudComputeRateLimit(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25A691D28);
}

uint64_t sub_25A691D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 48);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_25A6C73A0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 44);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for TrustedCloudComputeRateLimit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25A691DEC);
}

uint64_t sub_25A691DEC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 48) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_25A6C73A0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 44);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_25A691E94()
{
  uint64_t result = sub_25A6C73A0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeRateLimit.WorkloadParameter()
{
  return &type metadata for TrustedCloudComputeRateLimit.WorkloadParameter;
}

unsigned char *storeEnumTagSinglePayload for TrustedCloudComputeRateLimit.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A69202CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeRateLimit.CodingKeys()
{
  return &type metadata for TrustedCloudComputeRateLimit.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for TrustedCloudComputeRateLimit.WorkloadParameter.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A692130);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeRateLimit.WorkloadParameter.CodingKeys()
{
  return &type metadata for TrustedCloudComputeRateLimit.WorkloadParameter.CodingKeys;
}

unint64_t sub_25A69216C()
{
  unint64_t result = qword_26A44C378;
  if (!qword_26A44C378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C378);
  }
  return result;
}

unint64_t sub_25A6921C4()
{
  unint64_t result = qword_26A44C380;
  if (!qword_26A44C380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C380);
  }
  return result;
}

unint64_t sub_25A69221C()
{
  unint64_t result = qword_26A44C388;
  if (!qword_26A44C388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C388);
  }
  return result;
}

unint64_t sub_25A692274()
{
  unint64_t result = qword_26A44C390;
  if (!qword_26A44C390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C390);
  }
  return result;
}

unint64_t sub_25A6922CC()
{
  unint64_t result = qword_26A44C398;
  if (!qword_26A44C398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C398);
  }
  return result;
}

unint64_t sub_25A692324()
{
  unint64_t result = qword_26A44C3A0;
  if (!qword_26A44C3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26A44C3A0);
  }
  return result;
}

uint64_t sub_25A692378(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x800000025A6D02A0 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000025A6D02C0 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64616F6C6B726F77 && a2 == 0xEC00000065707954 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000025A6D02E0 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746E756F63 && a2 == 0xE500000000000000 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000025A6D0300 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x72697078456C7474 && a2 == 0xED00006E6F697461)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v5 = sub_25A6C7A00();
    swift_bridgeObjectRelease();
    if (v5) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t destroy for XPCRequestProxy()
{
  swift_unknownObjectRelease();
  return swift_release();
}

void *_s19PrivateCloudCompute15XPCRequestProxyVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for XPCRequestProxy(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for XPCRequestProxy(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCRequestProxy(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCRequestProxy(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCRequestProxy()
{
  return &type metadata for XPCRequestProxy;
}

uint64_t sub_25A6928B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B329CF8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25A6C7630();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = a1;
  v11[5] = a2;
  v11[6] = a3;
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  swift_unknownObjectRetain();
  swift_retain();
  if (a1 == 1)
  {
    sub_25A692FE4((uint64_t)v8);
  }
  else
  {
    sub_25A6C7620();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (v11[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v12 = sub_25A6C75D0();
      uint64_t v14 = v13;
      swift_unknownObjectRelease();
      if (v14 | v12)
      {
        v16[0] = 0;
        v16[1] = 0;
        v16[2] = v12;
        v16[3] = v14;
      }
    }
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_25A692AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  type metadata accessor for XPCWrapper();
  sub_25A692D3C(&qword_26B329E70, (void (*)(uint64_t))type metadata accessor for XPCWrapper);
  uint64_t v8 = sub_25A6C75D0();
  return MEMORY[0x270FA2498](sub_25A692BA4, v8, v7);
}

uint64_t sub_25A692BA4()
{
  if (*(void *)(v0[10] + 56) == v0[8])
  {
    unint64_t v1 = (void *)v0[9];
    v0[6] = nullsub_1;
    v0[7] = 0;
    v0[2] = MEMORY[0x263EF8330];
    v0[3] = 1107296256;
    v0[4] = sub_25A692D84;
    v0[5] = &block_descriptor;
    unint64_t v2 = _Block_copy(v0 + 2);
    objc_msgSend(v1, sel_cancelWithCompletion_, v2);
    _Block_release(v2);
  }
  else
  {
    type metadata accessor for TrustedCloudComputeError(0);
    sub_25A692D3C(&qword_26A44C3B0, (void (*)(uint64_t))type metadata accessor for TrustedCloudComputeError);
    swift_allocError();
    *(void *)uint64_t v4 = 0xD000000000000016;
    *(void *)(v4 + 8) = 0x800000025A6CF340;
    *(unsigned char *)(v4 + 16) = 0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_25A692D3C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25A692D84(uint64_t a1)
{
  unint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_25A692DE0()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_25A692E28(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_25A692EF0;
  return sub_25A692AE4(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_25A692EF0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_25A692FE4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B329CF8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25A693044()
{
  uint64_t v0 = sub_25A6C7430();
  __swift_allocate_value_buffer(v0, qword_26A44C3C0);
  __swift_project_value_buffer(v0, (uint64_t)qword_26A44C3C0);
  return sub_25A6C7420();
}

PCCServerEnvironment __swiftcall PCCServerEnvironment.init()()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return (PCCServerEnvironment)objc_msgSend(v0, sel_init);
}

id PCCServerEnvironment.init()()
{
  v1.super_class = (Class)PCCServerEnvironment;
  return objc_msgSendSuper2(&v1, sel_init);
}

uint64_t PCCServerEnvironment.selectedEnvironmentName()()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_26A44C3E0 + dword_26A44C3E0);
  objc_super v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *objc_super v1 = v0;
  v1[1] = sub_25A693210;
  return v3();
}

uint64_t sub_25A693210(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = *v3;
  uint64_t v6 = swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
  if (!v2)
  {
    uint64_t v6 = a1;
    uint64_t v7 = a2;
  }
  return v8(v6, v7);
}

uint64_t sub_25A693488(const void *a1)
{
  *(void *)(v1 + 16) = _Block_copy(a1);
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_26A44C3E0 + dword_26A44C3E0);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  void *v2 = v1;
  v2[1] = sub_25A693530;
  return v4();
}

uint64_t sub_25A693530()
{
  uint64_t v2 = v0;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v5 = sub_25A6C7290();

    uint64_t v6 = 0;
    uint64_t v7 = (void *)v5;
  }
  else
  {
    uint64_t v6 = sub_25A6C74A0();
    swift_bridgeObjectRelease();
    uint64_t v5 = 0;
    uint64_t v7 = (void *)v6;
  }
  uint64_t v8 = *(void (***)(void, void, void))(v3 + 16);
  v8[2](v8, v6, v5);

  _Block_release(v8);
  uint64_t v9 = *(uint64_t (**)(void))(v4 + 8);
  return v9();
}

uint64_t sub_25A6936A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_25A69454C;
  return v6();
}

uint64_t sub_25A693770(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_25A69454C;
  return v7();
}

uint64_t sub_25A69383C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25A6C7630();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_25A6C7620();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_25A692FE4(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_25A6C75D0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_25A6939E0(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25A693ABC;
  return v6(a1);
}

uint64_t sub_25A693ABC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_25A693BB4()
{
  return MEMORY[0x270FA2498](sub_25A693BD0, 0, 0);
}

uint64_t sub_25A693BD0()
{
  uint64_t v12 = v0;
  if (os_variant_allows_internal_security_policies())
  {
    type metadata accessor for TC2Client();
    uint64_t inited = swift_initStackObject();
    v0[6] = inited;
    type metadata accessor for XPCWrapper();
    swift_allocObject();
    char v11 = 1;
    *(void *)(inited + 16) = sub_25A6A7DF8(0x100000000);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[7] = v2;
    void *v2 = v0;
    v2[1] = sub_25A693E6C;
    return sub_25A68BB60();
  }
  else
  {
    if (qword_26A44B870 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_25A6C7430();
    __swift_project_value_buffer(v4, (uint64_t)qword_26A44C3C0);
    uint64_t v5 = sub_25A6C7410();
    os_log_type_t v6 = sub_25A6C7670();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v10 = v8;
      *(_DWORD *)uint64_t v7 = 136446210;
      v0[5] = sub_25A6A5940(0x69746375646F7270, 0xEA00000000006E6FLL, &v10);
      sub_25A6C76E0();
      _os_log_impl(&dword_25A668000, v5, v6, "current environment=%{public}s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261142420](v8, -1, -1);
      MEMORY[0x261142420](v7, -1, -1);
    }

    uint64_t v9 = (uint64_t (*)(uint64_t, unint64_t))v0[1];
    return v9(0x69746375646F7270, 0xEA00000000006E6FLL);
  }
}

uint64_t sub_25A693E6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 64) = a1;
  *(void *)(v3 + 72) = a2;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25A693F6C, 0, 0);
}

uint64_t sub_25A693F6C()
{
  unint64_t v1 = v0[9];
  uint64_t v2 = v0[8] & 0xFFFFFFFFFFFFLL;
  if ((v1 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(v1) & 0xF;
  }
  if (v2)
  {
    swift_setDeallocating();
    sub_25A6A6774();
    swift_release();
    uint64_t v3 = v0[8];
    uint64_t v4 = v0[9];
    uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
    return v5(v3, v4);
  }
  else
  {
    swift_bridgeObjectRelease();
    id v7 = objc_allocWithZone(MEMORY[0x263F087E8]);
    uint64_t v8 = (void *)sub_25A6C74A0();
    objc_msgSend(v7, sel_initWithDomain_code_userInfo_, v8, 2001, 0);

    swift_willThrow();
    swift_setDeallocating();
    sub_25A6A6774();
    swift_release();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
}

unint64_t type metadata accessor for PCCServerEnvironment()
{
  unint64_t result = qword_26A44C3E8;
  if (!qword_26A44C3E8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A44C3E8);
  }
  return result;
}

uint64_t sub_25A694100()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25A694140()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_25A69454C;
  uint64_t v4 = (uint64_t (*)(const void *))((char *)&dword_26A44C3F0 + dword_26A44C3F0);
  return v4(v2);
}

uint64_t sub_25A6941F0()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (int *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_25A69454C;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_26A44C400 + dword_26A44C400);
  return v6(v2, v3, v4);
}

uint64_t objectdestroy_6Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25A6942F4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = sub_25A692EF0;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_26A44C410 + dword_26A44C410);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_25A6943C0()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25A6943F8(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_25A692EF0;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_26A44C420 + dword_26A44C420);
  return v6(a1, v4);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

Swift::Int_optional __swiftcall Int.init(defaultsDomain:name:)(Swift::String defaultsDomain, Swift::String name)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  Boolean keyExistsAndHasValidFormat = 0;
  uint64_t v2 = (__CFString *)sub_25A6C74A0();
  swift_bridgeObjectRelease();
  uint64_t v3 = (__CFString *)sub_25A6C74A0();
  swift_bridgeObjectRelease();
  CFIndex AppIntegerValue = CFPreferencesGetAppIntegerValue(v2, v3, &keyExistsAndHasValidFormat);

  Swift::Bool v5 = keyExistsAndHasValidFormat == 0;
  if (keyExistsAndHasValidFormat) {
    Swift::Int v6 = AppIntegerValue;
  }
  else {
    Swift::Int v6 = 0;
  }
  result.value = v6;
  result.is_nil = v5;
  return result;
}

void sub_25A694614(uint64_t a1@<X8>)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  Boolean keyExistsAndHasValidFormat = 0;
  uint64_t v2 = (__CFString *)sub_25A6C74A0();
  swift_bridgeObjectRelease();
  uint64_t v3 = (__CFString *)sub_25A6C74A0();
  swift_bridgeObjectRelease();
  CFIndex AppIntegerValue = CFPreferencesGetAppIntegerValue(v2, v3, &keyExistsAndHasValidFormat);

  BOOL v5 = keyExistsAndHasValidFormat == 0;
  if (keyExistsAndHasValidFormat) {
    CFIndex v6 = AppIntegerValue;
  }
  else {
    CFIndex v6 = 0;
  }
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v5;
}

uint64_t sub_25A6946F0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _sSb19PrivateCloudComputeE14defaultsDomain4nameSbSgSS_SStcfC_0();
  *a1 = result;
  return result;
}

void __swiftcall Float.init(defaultsDomain:name:)(Swift::Float_optional *__return_ptr retstr, Swift::String defaultsDomain, Swift::String name)
{
}

unint64_t sub_25A694744@<X0>(uint64_t a1@<X8>)
{
  unint64_t result = sub_25A694E00();
  *(_DWORD *)a1 = result;
  *(unsigned char *)(a1 + 4) = BYTE4(result) & 1;
  return result;
}

Swift::Double_optional __swiftcall Double.init(defaultsDomain:name:)(Swift::String defaultsDomain, Swift::String name)
{
  char v2 = sub_25A694ED0();
  result.value = v3;
  result.is_nil = v2;
  return result;
}

uint64_t sub_25A694790@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_25A694ED0();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_25A6947C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _sSS19PrivateCloudComputeE14defaultsDomain4nameSSSgSS_SStcfC_0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t Optional<A>.init(defaultsDomain:name:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t sub_25A694820@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v9 + 24);
  Optional<A>.init(defaultsDomain:name:)(v6, v11, v12, v13, v10, v14);
  uint64_t v15 = *(void *)(v10 - 8);
  uint64_t v16 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v10) != 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a3, v8, v10);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(a3, 0, 1, v10);
    uint64_t v16 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a3, v16, 1, a2);
}

Swift::Void __swiftcall String.defaultsWrite(defaultsDomain:name:)(Swift::String defaultsDomain, Swift::String name)
{
  char v2 = (__CFString *)sub_25A6C74A0();
  uint64_t v3 = (void *)sub_25A6C74A0();
  uint64_t v4 = (__CFString *)sub_25A6C74A0();
  CFPreferencesSetAppValue(v2, v3, v4);
}

void sub_25A694A3C()
{
  uint64_t v0 = (__CFString *)sub_25A6C74A0();
  uint64_t v1 = (void *)sub_25A6C74A0();
  char v2 = (__CFString *)sub_25A6C74A0();
  CFPreferencesSetAppValue(v0, v1, v2);
}

void Optional<A>.defaultsWrite(defaultsDomain:name:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *(void *)(a5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v10 + 16);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v16, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, a5);
    uint64_t v17 = (__CFString *)sub_25A6C74A0();
    uint64_t v18 = (__CFString *)sub_25A6C74A0();
    CFPreferencesSetAppValue(v17, 0, v18);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v9, v11);
    uint64_t v19 = (__CFString *)sub_25A6C74A0();
    uint64_t v20 = (const void *)sub_25A6C79F0();
    uint64_t v21 = (__CFString *)sub_25A6C74A0();
    CFPreferencesSetAppValue(v19, v20, v21);

    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t _sSb19PrivateCloudComputeE14defaultsDomain4nameSbSgSS_SStcfC_0()
{
  uint64_t v5 = *MEMORY[0x263EF8340];
  Boolean keyExistsAndHasValidFormat = 0;
  uint64_t v0 = (__CFString *)sub_25A6C74A0();
  swift_bridgeObjectRelease();
  uint64_t v1 = (__CFString *)sub_25A6C74A0();
  swift_bridgeObjectRelease();
  int AppBooleanValue = CFPreferencesGetAppBooleanValue(v0, v1, &keyExistsAndHasValidFormat);

  if (keyExistsAndHasValidFormat) {
    return AppBooleanValue != 0;
  }
  else {
    return 2;
  }
}

unint64_t sub_25A694E00()
{
  uint64_t v0 = (__CFString *)sub_25A6C74A0();
  swift_bridgeObjectRelease();
  uint64_t v1 = (__CFString *)sub_25A6C74A0();
  swift_bridgeObjectRelease();
  CFPropertyListRef v2 = CFPreferencesCopyAppValue(v0, v1);

  if (v2 && swift_dynamicCast())
  {
    unsigned __int8 v3 = 0;
    uint64_t v4 = v6;
  }
  else
  {
    uint64_t v4 = 0;
    unsigned __int8 v3 = 1;
  }
  return v4 | ((unint64_t)v3 << 32);
}

uint64_t sub_25A694ED0()
{
  uint64_t v0 = (__CFString *)sub_25A6C74A0();
  swift_bridgeObjectRelease();
  uint64_t v1 = (__CFString *)sub_25A6C74A0();
  swift_bridgeObjectRelease();
  CFPropertyListRef v2 = CFPreferencesCopyAppValue(v0, v1);

  if (v2 && swift_dynamicCast()) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t _sSS19PrivateCloudComputeE14defaultsDomain4nameSSSgSS_SStcfC_0()
{
  uint64_t v0 = (__CFString *)sub_25A6C74A0();
  swift_bridgeObjectRelease();
  uint64_t v1 = (__CFString *)sub_25A6C74A0();
  swift_bridgeObjectRelease();
  CFPropertyListRef v2 = CFPreferencesCopyAppValue(v0, v1);

  if (v2 && (swift_dynamicCast() & 1) != 0) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t dispatch thunk of DefaultsReadable.init(defaultsDomain:name:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t dispatch thunk of DefaultsWritable.defaultsWrite(defaultsDomain:name:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

const char *PrivateCloudComputeFeatureFlags.domain.getter()
{
  return "PrivateCloudCompute";
}

const char *PrivateCloudComputeFeatureFlags.feature.getter()
{
  if (*v0) {
    return "productionEnvironmentAvailable";
  }
  else {
    return "enforceEnvironment";
  }
}

BOOL static PrivateCloudComputeFeatureFlags.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PrivateCloudComputeFeatureFlags.hash(into:)()
{
  return sub_25A6C7AB0();
}

uint64_t PrivateCloudComputeFeatureFlags.hashValue.getter()
{
  return sub_25A6C7AE0();
}

unint64_t sub_25A695150()
{
  unint64_t result = qword_26A44C430;
  if (!qword_26A44C430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C430);
  }
  return result;
}

const char *sub_25A6951A4()
{
  return "PrivateCloudCompute";
}

const char *sub_25A6951B8()
{
  if (*v0) {
    return "productionEnvironmentAvailable";
  }
  else {
    return "enforceEnvironment";
  }
}

unsigned char *storeEnumTagSinglePayload for PrivateCloudComputeFeatureFlags(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A6952B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PrivateCloudComputeFeatureFlags()
{
  return &type metadata for PrivateCloudComputeFeatureFlags;
}

uint64_t TrustedRequest.init(id:workloadType:workloadParameters:featureIdentifier:sessionIdentifier:bundleIdentifierOverride:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v39 = a8;
  uint64_t v40 = a6;
  uint64_t v33 = a2;
  uint64_t v34 = a7;
  uint64_t v37 = a4;
  uint64_t v38 = a5;
  uint64_t v41 = a1;
  uint64_t v35 = a10;
  uint64_t v36 = a3;
  uint64_t v13 = sub_25A6C73D0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = v16;
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  v17(a9, a1, v13);
  v17((uint64_t)v16, a7, v13);
  uint64_t v18 = (int *)type metadata accessor for TrustedRequest();
  uint64_t v31 = v18[6];
  uint64_t v19 = (void *)(a9 + v18[7]);
  uint64_t v20 = (void *)(a9 + v18[8]);
  *uint64_t v20 = 0;
  v20[1] = 0;
  uint64_t v21 = (void *)(a9 + v18[9]);
  uint64_t v22 = a9 + v18[10];
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v23(v22, 1, 1, v13);
  uint64_t v24 = (void *)(a9 + v18[5]);
  uint64_t v25 = v36;
  *uint64_t v24 = v33;
  v24[1] = v25;
  *(void *)(a9 + v31) = v37;
  uint64_t v26 = v35;
  *uint64_t v19 = v39;
  v19[1] = v26;
  uint64_t v27 = v40;
  *uint64_t v21 = v38;
  v21[1] = v27;
  sub_25A695514(v22);
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v22, v32, v13);
  v23(v22, 0, 1, v13);
  swift_bridgeObjectRelease();
  *uint64_t v20 = 0;
  v20[1] = 0;
  uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v28(v34, v13);
  return ((uint64_t (*)(uint64_t, uint64_t))v28)(v41, v13);
}

uint64_t sub_25A695514(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C438);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_25A695578(char a1)
{
  unint64_t result = 0x64696C6176;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x64696C61766E69;
      break;
    case 2:
      unint64_t result = 0xD000000000000018;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0x6F54797269707865;
      break;
    case 5:
      unint64_t result = 0xD000000000000017;
      break;
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_25A695678()
{
  return sub_25A695578(*v0);
}

uint64_t sub_25A695680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25A69C2AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25A6956A8(uint64_t a1)
{
  unint64_t v2 = sub_25A6994BC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A6956E4(uint64_t a1)
{
  unint64_t v2 = sub_25A6994BC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25A695720(uint64_t a1)
{
  unint64_t v2 = sub_25A6995B8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A69575C(uint64_t a1)
{
  unint64_t v2 = sub_25A6995B8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25A695798()
{
  return 0x726F727265;
}

uint64_t sub_25A6957AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x726F727265 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_25A6C7A00();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_25A69583C(uint64_t a1)
{
  unint64_t v2 = sub_25A6996B4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A695878(uint64_t a1)
{
  unint64_t v2 = sub_25A6996B4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25A6958B4(uint64_t a1)
{
  unint64_t v2 = sub_25A699510();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A6958F0(uint64_t a1)
{
  unint64_t v2 = sub_25A699510();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25A69592C(uint64_t a1)
{
  unint64_t v2 = sub_25A699660();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A695968(uint64_t a1)
{
  unint64_t v2 = sub_25A699660();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25A6959A4()
{
  if (*v0) {
    return 0x797269707865;
  }
  else {
    return 0x654B63696C627570;
  }
}

uint64_t sub_25A6959E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25A69C590(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25A695A08(uint64_t a1)
{
  unint64_t v2 = sub_25A699708();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A695A44(uint64_t a1)
{
  unint64_t v2 = sub_25A699708();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25A695A80(uint64_t a1)
{
  unint64_t v2 = sub_25A699564();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A695ABC(uint64_t a1)
{
  unint64_t v2 = sub_25A699564();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25A695AF8(uint64_t a1)
{
  unint64_t v2 = sub_25A69960C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A695B34(uint64_t a1)
{
  unint64_t v2 = sub_25A69960C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Prefetch.Response.Node.ValidationResult.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B329CE0);
  uint64_t v58 = *(void *)(v2 - 8);
  uint64_t v59 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v57 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B329CE8);
  uint64_t v55 = *(void *)(v4 - 8);
  uint64_t v56 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v54 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B329CD8);
  uint64_t v50 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v48 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B329CB8);
  uint64_t v45 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  int v44 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B329CB0);
  uint64_t v42 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B329CD0);
  uint64_t v41 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B329CC8);
  uint64_t v51 = *(void *)(v13 - 8);
  uint64_t v52 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v47 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_25A6C73A0();
  uint64_t v49 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v61 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Prefetch.Response.Node.ValidationResult(0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (uint64_t *)((char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B329CC0);
  uint64_t v62 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  uint64_t v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A6994BC();
  sub_25A6C7B00();
  sub_25A699AB8(v64, (uint64_t)v18, type metadata accessor for Prefetch.Response.Node.ValidationResult);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      LOBYTE(v66) = 1;
      sub_25A6996B4();
      uint64_t v30 = v65;
      sub_25A6C7910();
      sub_25A6C7960();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v12, v10);
      return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v20, v30);
    case 2u:
      LOBYTE(v66) = 2;
      sub_25A699660();
      uint64_t v31 = v65;
      sub_25A6C7910();
      uint64_t v32 = *(void (**)(char *, uint64_t))(v42 + 8);
      uint64_t v33 = v9;
      uint64_t v34 = &v69;
      goto LABEL_7;
    case 3u:
      LOBYTE(v66) = 3;
      sub_25A69960C();
      uint64_t v35 = v44;
      uint64_t v31 = v65;
      sub_25A6C7910();
      uint64_t v32 = *(void (**)(char *, uint64_t))(v45 + 8);
      uint64_t v33 = v35;
      uint64_t v34 = &v70;
LABEL_7:
      uint64_t v36 = *(v34 - 32);
      goto LABEL_12;
    case 4u:
      LOBYTE(v66) = 4;
      sub_25A6995B8();
      uint64_t v37 = v48;
      uint64_t v31 = v65;
      sub_25A6C7910();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v37, v53);
      goto LABEL_13;
    case 5u:
      LOBYTE(v66) = 5;
      sub_25A699564();
      uint64_t v38 = v54;
      uint64_t v31 = v65;
      sub_25A6C7910();
      uint64_t v39 = v55;
      uint64_t v36 = v56;
      goto LABEL_11;
    case 6u:
      LOBYTE(v66) = 6;
      sub_25A699510();
      uint64_t v38 = v57;
      uint64_t v31 = v65;
      sub_25A6C7910();
      uint64_t v39 = v58;
      uint64_t v36 = v59;
LABEL_11:
      uint64_t v32 = *(void (**)(char *, uint64_t))(v39 + 8);
      uint64_t v33 = v38;
LABEL_12:
      v32(v33, v36);
LABEL_13:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v20, v31);
      break;
    default:
      uint64_t v21 = *v18;
      unint64_t v22 = v18[1];
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B329B18);
      uint64_t v24 = v49;
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v61, (char *)v18 + *(int *)(v23 + 48), v60);
      LOBYTE(v66) = 0;
      sub_25A699708();
      uint64_t v25 = v47;
      uint64_t v26 = v65;
      sub_25A6C7910();
      uint64_t v66 = v21;
      unint64_t v67 = v22;
      char v68 = 0;
      sub_25A69975C();
      uint64_t v27 = v52;
      uint64_t v28 = v63;
      sub_25A6C79B0();
      if (v28)
      {
        (*(void (**)(char *, uint64_t))(v51 + 8))(v25, v27);
        (*(void (**)(char *, uint64_t))(v24 + 8))(v61, v60);
        (*(void (**)(char *, uint64_t))(v62 + 8))(v20, v26);
        uint64_t result = sub_25A68F294(v21, v22);
      }
      else
      {
        LOBYTE(v66) = 1;
        sub_25A699868(&qword_26B329B28, MEMORY[0x263F07490]);
        uint64_t v40 = v60;
        sub_25A6C79B0();
        sub_25A68F294(v21, v22);
        (*(void (**)(char *, uint64_t))(v51 + 8))(v25, v27);
        (*(void (**)(char *, uint64_t))(v24 + 8))(v61, v40);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v20, v65);
      }
      break;
  }
  return result;
}

uint64_t Prefetch.Response.Node.ValidationResult.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v80 = a2;
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C468);
  uint64_t v71 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388](v84);
  uint64_t v79 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C470);
  uint64_t v69 = *(void *)(v4 - 8);
  uint64_t v70 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v78 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C478);
  uint64_t v68 = *(void *)(v83 - 8);
  MEMORY[0x270FA5388](v83);
  uint64_t v77 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C480);
  uint64_t v65 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  uint64_t v76 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C488);
  uint64_t v62 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  uint64_t v75 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C490);
  uint64_t v72 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v74 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C498);
  uint64_t v73 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v82 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C4A0);
  uint64_t v81 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Prefetch.Response.Node.ValidationResult(0);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (uint64_t *)((char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v59 - v19;
  MEMORY[0x270FA5388](v18);
  unint64_t v22 = (char *)&v59 - v21;
  uint64_t v23 = a1[3];
  uint64_t v85 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v23);
  sub_25A6994BC();
  uint64_t v24 = v86;
  sub_25A6C7AF0();
  if (v24)
  {
LABEL_19:
    uint64_t v53 = (uint64_t)v85;
    return __swift_destroy_boxed_opaque_existential_1(v53);
  }
  uint64_t v59 = v17;
  uint64_t v60 = v20;
  uint64_t v26 = v82;
  uint64_t v25 = v83;
  uint64_t v86 = 0;
  uint64_t v27 = v84;
  uint64_t v28 = v14;
  uint64_t v61 = v22;
  uint64_t v29 = sub_25A6C7900();
  uint64_t v30 = v11;
  if (*(void *)(v29 + 16) != 1)
  {
    uint64_t v35 = sub_25A6C7780();
    swift_allocError();
    uint64_t v37 = v36;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A44B978);
    *uint64_t v37 = v28;
    uint64_t v31 = v30;
    sub_25A6C7840();
    sub_25A6C7770();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v35 - 8) + 104))(v37, *MEMORY[0x263F8DCB0], v35);
    swift_willThrow();
LABEL_18:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v81 + 8))(v13, v31);
    goto LABEL_19;
  }
  switch(*(unsigned char *)(v29 + 32))
  {
    case 1:
      char v90 = 1;
      sub_25A6996B4();
      uint64_t v38 = v74;
      uint64_t v31 = v11;
      uint64_t v39 = v86;
      sub_25A6C7830();
      if (v39) {
        goto LABEL_18;
      }
      uint64_t v40 = v64;
      uint64_t v56 = sub_25A6C7890();
      uint64_t v58 = v57;
      (*(void (**)(char *, uint64_t))(v72 + 8))(v38, v40);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v81 + 8))(v13, v31);
      uint64_t v33 = (uint64_t)v59;
      *uint64_t v59 = v56;
      *(void *)(v33 + 8) = v58;
      goto LABEL_25;
    case 2:
      char v91 = 2;
      sub_25A699660();
      uint64_t v41 = v75;
      uint64_t v42 = v30;
      uint64_t v43 = v86;
      sub_25A6C7830();
      if (v43) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v62 + 8))(v41, v63);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v81 + 8))(v13, v30);
      uint64_t v44 = (uint64_t)v61;
      goto LABEL_23;
    case 3:
      char v92 = 3;
      sub_25A69960C();
      uint64_t v45 = v76;
      uint64_t v42 = v30;
      uint64_t v46 = v86;
      sub_25A6C7830();
      if (v46) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v65 + 8))(v45, v66);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v81 + 8))(v13, v30);
      uint64_t v44 = (uint64_t)v61;
      goto LABEL_23;
    case 4:
      char v93 = 4;
      sub_25A6995B8();
      uint64_t v47 = v77;
      uint64_t v42 = v30;
      uint64_t v48 = v86;
      sub_25A6C7830();
      if (v48) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v68 + 8))(v47, v25);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v81 + 8))(v13, v30);
      uint64_t v44 = (uint64_t)v61;
      goto LABEL_23;
    case 5:
      char v94 = 5;
      sub_25A699564();
      uint64_t v49 = v78;
      uint64_t v42 = v30;
      uint64_t v50 = v86;
      sub_25A6C7830();
      if (v50)
      {
LABEL_16:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v81 + 8))(v13, v42);
        goto LABEL_19;
      }
      (*(void (**)(char *, uint64_t))(v69 + 8))(v49, v70);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v81 + 8))(v13, v30);
      uint64_t v44 = (uint64_t)v61;
LABEL_23:
      swift_storeEnumTagMultiPayload();
LABEL_24:
      uint64_t v55 = (uint64_t)v85;
      sub_25A6997B0(v44, v80);
      uint64_t v53 = v55;
      break;
    case 6:
      char v95 = 6;
      sub_25A699510();
      uint64_t v51 = v79;
      uint64_t v31 = v11;
      uint64_t v52 = v86;
      sub_25A6C7830();
      if (v52) {
        goto LABEL_18;
      }
      (*(void (**)(char *, uint64_t))(v71 + 8))(v51, v27);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v81 + 8))(v13, v11);
      uint64_t v44 = (uint64_t)v61;
      goto LABEL_23;
    default:
      char v89 = 0;
      sub_25A699708();
      uint64_t v31 = v11;
      uint64_t v32 = v86;
      sub_25A6C7830();
      if (v32) {
        goto LABEL_18;
      }
      uint64_t v86 = v14;
      char v88 = 0;
      sub_25A699814();
      uint64_t v33 = (uint64_t)v60;
      uint64_t v34 = v67;
      sub_25A6C78E0();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B329B18);
      sub_25A6C73A0();
      char v87 = 1;
      sub_25A699868(&qword_26A44B8F8, MEMORY[0x263F07490]);
      sub_25A6C78E0();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v26, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v81 + 8))(v13, v11);
LABEL_25:
      swift_storeEnumTagMultiPayload();
      uint64_t v44 = (uint64_t)v61;
      sub_25A6997B0(v33, (uint64_t)v61);
      goto LABEL_24;
  }
  return __swift_destroy_boxed_opaque_existential_1(v53);
}

uint64_t sub_25A6971BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Prefetch.Response.Node.ValidationResult.init(from:)(a1, a2);
}

uint64_t sub_25A6971D4(void *a1)
{
  return Prefetch.Response.Node.ValidationResult.encode(to:)(a1);
}

uint64_t Prefetch.Response.Node.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Prefetch.Response.Node.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Prefetch.Response.Node.identifier.modify())()
{
  return nullsub_1;
}

uint64_t Prefetch.Response.Node.cloudOSVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Prefetch.Response.Node.cloudOSVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*Prefetch.Response.Node.cloudOSVersion.modify())()
{
  return nullsub_1;
}

uint64_t Prefetch.Response.Node.cloudOSReleaseType.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Prefetch.Response.Node.cloudOSReleaseType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*Prefetch.Response.Node.cloudOSReleaseType.modify())()
{
  return nullsub_1;
}

uint64_t Prefetch.Response.Node.validationResult.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Prefetch.Response.Node(0);
  return sub_25A699AB8(v1 + *(int *)(v3 + 28), a1, type metadata accessor for Prefetch.Response.Node.ValidationResult);
}

uint64_t Prefetch.Response.Node.validationResult.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Prefetch.Response.Node(0) + 28);
  return sub_25A6998D0(a1, v3);
}

uint64_t (*Prefetch.Response.Node.validationResult.modify())()
{
  return nullsub_1;
}

uint64_t Prefetch.Response.Node.savedToCache.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Prefetch.Response.Node(0) + 32));
}

uint64_t Prefetch.Response.Node.savedToCache.setter(char a1)
{
  uint64_t result = type metadata accessor for Prefetch.Response.Node(0);
  *(unsigned char *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*Prefetch.Response.Node.savedToCache.modify())()
{
  return nullsub_1;
}

uint64_t Prefetch.Response.Node.uniqueNodeIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Prefetch.Response.Node(0) + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Prefetch.Response.Node.uniqueNodeIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for Prefetch.Response.Node(0) + 36));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*Prefetch.Response.Node.uniqueNodeIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t Prefetch.Response.Node.init(identifier:cloudOSVersion:cloudOSReleaseType:validationResult:savedToCache:uniqueNodeIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, void *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v18 = (int *)type metadata accessor for Prefetch.Response.Node(0);
  uint64_t v19 = (void *)((char *)a9 + v18[9]);
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  uint64_t result = sub_25A6997B0(a7, (uint64_t)a9 + v18[7]);
  *((unsigned char *)a9 + v18[8]) = a8;
  *uint64_t v19 = a10;
  v19[1] = a11;
  return result;
}

unint64_t sub_25A697688(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x56534F64756F6C63;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x436F546465766173;
      break;
    case 5:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_25A697778()
{
  return sub_25A697688(*v0);
}

uint64_t sub_25A697780@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25A69C688(a1, a2);
  *a3 = result;
  return result;
}

void sub_25A6977A8(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_25A6977B4(uint64_t a1)
{
  unint64_t v2 = sub_25A699A64();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A6977F0(uint64_t a1)
{
  unint64_t v2 = sub_25A699A64();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Prefetch.Response.Node.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B329CA8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A699A64();
  sub_25A6C7B00();
  v8[15] = 0;
  sub_25A6C7960();
  if (!v1)
  {
    v8[14] = 1;
    sub_25A6C7960();
    v8[13] = 2;
    sub_25A6C7960();
    type metadata accessor for Prefetch.Response.Node(0);
    v8[12] = 3;
    type metadata accessor for Prefetch.Response.Node.ValidationResult(0);
    sub_25A699868(&qword_26B329C58, (void (*)(uint64_t))type metadata accessor for Prefetch.Response.Node.ValidationResult);
    sub_25A6C79B0();
    v8[11] = 4;
    sub_25A6C7970();
    v8[10] = 5;
    sub_25A6C7920();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Prefetch.Response.Node.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v4 = type metadata accessor for Prefetch.Response.Node.ValidationResult(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C4B0);
  uint64_t v31 = *(void *)(v7 - 8);
  uint64_t v32 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Prefetch.Response.Node(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (uint64_t *)((char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = (uint64_t *)((char *)v13 + *(int *)(v11 + 36));
  *uint64_t v14 = 0;
  v14[1] = 0;
  uint64_t v34 = a1;
  uint64_t v35 = v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A699A64();
  uint64_t v33 = v9;
  sub_25A6C7AF0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = v31;
    uint64_t v15 = v32;
    char v41 = 0;
    *uint64_t v13 = sub_25A6C7890();
    v13[1] = v17;
    char v40 = 1;
    _OWORD v13[2] = sub_25A6C7890();
    v13[3] = v18;
    char v39 = 2;
    v13[4] = sub_25A6C7890();
    v13[5] = v19;
    char v38 = 3;
    sub_25A699868(&qword_26A44C4B8, (void (*)(uint64_t))type metadata accessor for Prefetch.Response.Node.ValidationResult);
    sub_25A6C78E0();
    sub_25A6997B0((uint64_t)v6, (uint64_t)v13 + *(int *)(v10 + 28));
    char v37 = 4;
    uint64_t v20 = v33;
    *((unsigned char *)v13 + *(int *)(v10 + 32)) = sub_25A6C78A0() & 1;
    char v36 = 5;
    uint64_t v21 = sub_25A6C7850();
    uint64_t v29 = v22;
    uint64_t v23 = v21;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v15);
    uint64_t v24 = v35;
    swift_bridgeObjectRelease();
    uint64_t v26 = v29;
    uint64_t v25 = v30;
    *uint64_t v24 = v23;
    v24[1] = v26;
    sub_25A699AB8((uint64_t)v13, v25, type metadata accessor for Prefetch.Response.Node);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    return sub_25A699B20((uint64_t)v13, type metadata accessor for Prefetch.Response.Node);
  }
}

uint64_t sub_25A697F14@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Prefetch.Response.Node.init(from:)(a1, a2);
}

uint64_t sub_25A697F2C(void *a1)
{
  return Prefetch.Response.Node.encode(to:)(a1);
}

uint64_t Prefetch.Response.nodes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Prefetch.Response.nodes.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*Prefetch.Response.nodes.modify())()
{
  return nullsub_1;
}

uint64_t Prefetch.Response.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Prefetch.Response(0) + 20);
  uint64_t v4 = sub_25A6C73D0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t Prefetch.Response.id.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Prefetch.Response(0) + 20);
  uint64_t v4 = sub_25A6C73D0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*Prefetch.Response.id.modify())()
{
  return nullsub_1;
}

uint64_t Prefetch.Response.init(id:nodes:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = (char *)a3 + *(int *)(type metadata accessor for Prefetch.Response(0) + 20);
  uint64_t v7 = sub_25A6C73D0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v6, a1, v7);
  *a3 = a2;
  return result;
}

uint64_t sub_25A698154()
{
  if (*v0) {
    return 25705;
  }
  else {
    return 0x7365646F6ELL;
  }
}

uint64_t sub_25A698180@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25A69C938(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25A6981A8(uint64_t a1)
{
  unint64_t v2 = sub_25A699BA0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A6981E4(uint64_t a1)
{
  unint64_t v2 = sub_25A699BA0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Prefetch.Response.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B329CA0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A699BA0();
  sub_25A6C7B00();
  uint64_t v11 = *v3;
  v10[7] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B329C88);
  sub_25A699BF4(&qword_26B329C90, &qword_26B329C70);
  sub_25A6C79B0();
  if (!v2)
  {
    type metadata accessor for Prefetch.Response(0);
    v10[6] = 1;
    sub_25A6C73D0();
    sub_25A699868(&qword_26B329B38, MEMORY[0x263F07508]);
    sub_25A6C79B0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t Prefetch.Response.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v22 = sub_25A6C73D0();
  uint64_t v19 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C4C0);
  uint64_t v21 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Prefetch.Response(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A699BA0();
  sub_25A6C7AF0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v17 = v5;
  uint64_t v18 = a1;
  uint64_t v12 = v21;
  uint64_t v11 = v22;
  uint64_t v13 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B329C88);
  char v25 = 0;
  sub_25A699BF4(&qword_26A44C4C8, &qword_26A44C4D0);
  uint64_t v14 = v23;
  sub_25A6C78E0();
  *(void *)uint64_t v13 = v26;
  char v24 = 1;
  sub_25A699868(&qword_26A44C4D8, MEMORY[0x263F07508]);
  uint64_t v15 = v17;
  sub_25A6C78E0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v14);
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(&v13[*(int *)(v8 + 20)], v15, v11);
  sub_25A699AB8((uint64_t)v13, v20, type metadata accessor for Prefetch.Response);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  return sub_25A699B20((uint64_t)v13, type metadata accessor for Prefetch.Response);
}

uint64_t sub_25A6987C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Prefetch.Response.init(from:)(a1, a2);
}

uint64_t sub_25A6987D8(void *a1)
{
  return Prefetch.Response.encode(to:)(a1);
}

uint64_t Prefetch.workloadType.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Prefetch.workloadType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Prefetch.workloadType.modify())()
{
  return nullsub_1;
}

uint64_t Prefetch.workloadParameters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Prefetch.workloadParameters.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*Prefetch.workloadParameters.modify())()
{
  return nullsub_1;
}

uint64_t Prefetch.init(workloadType:workloadParameters:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t sub_25A6988D8@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_25A68F228(a2, a3);
      uint64_t v10 = (char *)sub_25A6C7260();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_25A6C7280();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_25A6C7270();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x25A698B3CLL);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_25A68F294(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_25A6C7260();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_25A6C7280();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_25A6C7270();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_25A698B4C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  __s1[2] = *MEMORY[0x263EF8340];
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      sub_25A68F228(a1, a2);
      char v5 = sub_25A698D7C((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
      sub_25A68F294(a1, a2);
      goto LABEL_6;
    case 2uLL:
      uint64_t v10 = a2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v12 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      char v5 = sub_25A698D7C(v11, v12, v10, a3, a4);
      swift_release();
      swift_release();
LABEL_6:
      sub_25A68F294(a3, a4);
      return v5 & 1;
    case 3uLL:
      memset(__s1, 0, 14);
      goto LABEL_8;
    default:
      __s1[0] = a1;
      LOWORD(__s1[1]) = a2;
      BYTE2(__s1[1]) = BYTE2(a2);
      BYTE3(__s1[1]) = BYTE3(a2);
      BYTE4(__s1[1]) = BYTE4(a2);
      BYTE5(__s1[1]) = BYTE5(a2);
LABEL_8:
      sub_25A6988D8((uint64_t)__s1, a3, a4, &v14);
      sub_25A68F294(a3, a4);
      if (!v4) {
        char v5 = v14;
      }
      return v5 & 1;
  }
}

uint64_t sub_25A698D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_25A6C7260();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_25A6C7280();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_25A6C7270();
  sub_25A6988D8(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_25A698E34(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
        JUMPOUT(0x25A698F70);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_20;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v15 = 1;
            }
            else
            {
              sub_25A68F228(a3, a4);
              char v15 = sub_25A698B4C(a1, a2, a3, a4);
            }
          }
          else
          {
            char v15 = 0;
          }
          return v15 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_21;
        case 3uLL:
          char v15 = v8 == 0;
          return v15 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_19;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t _s19PrivateCloudCompute8PrefetchV8ResponseV4NodeV16ValidationResultO2eeoiySbAI_AItFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25A6C73A0();
  uint64_t v44 = *(void *)(v4 - 8);
  uint64_t v45 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v42 - v8;
  uint64_t v10 = type metadata accessor for Prefetch.Response.Node.ValidationResult(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (uint64_t *)((char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v11);
  char v15 = (uint64_t *)((char *)&v42 - v14);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C508);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  BOOL v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v20 = &v19[*(int *)(v17 + 56)];
  sub_25A699AB8(a1, (uint64_t)v19, type metadata accessor for Prefetch.Response.Node.ValidationResult);
  sub_25A699AB8(a2, (uint64_t)v20, type metadata accessor for Prefetch.Response.Node.ValidationResult);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_25A699AB8((uint64_t)v19, (uint64_t)v13, type metadata accessor for Prefetch.Response.Node.ValidationResult);
      uint64_t v26 = *v13;
      uint64_t v25 = v13[1];
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
      if (v26 == *(void *)v20 && v25 == *((void *)v20 + 1))
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_27;
      }
      char v28 = sub_25A6C7A00();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v28) {
        goto LABEL_27;
      }
      goto LABEL_30;
    case 2u:
      if (swift_getEnumCaseMultiPayload() == 2) {
        goto LABEL_27;
      }
      goto LABEL_22;
    case 3u:
      if (swift_getEnumCaseMultiPayload() == 3) {
        goto LABEL_27;
      }
      goto LABEL_22;
    case 4u:
      if (swift_getEnumCaseMultiPayload() == 4) {
        goto LABEL_27;
      }
      goto LABEL_22;
    case 5u:
      if (swift_getEnumCaseMultiPayload() == 5) {
        goto LABEL_27;
      }
      goto LABEL_22;
    case 6u:
      if (swift_getEnumCaseMultiPayload() != 6) {
        goto LABEL_22;
      }
LABEL_27:
      sub_25A699B20((uint64_t)v19, type metadata accessor for Prefetch.Response.Node.ValidationResult);
      char v29 = 1;
      return v29 & 1;
    default:
      sub_25A699AB8((uint64_t)v19, (uint64_t)v15, type metadata accessor for Prefetch.Response.Node.ValidationResult);
      uint64_t v22 = *v15;
      unint64_t v21 = v15[1];
      uint64_t v23 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B329B18) + 48);
      char v24 = (char *)v15 + v23;
      if (swift_getEnumCaseMultiPayload())
      {
        (*(void (**)(char *, uint64_t))(v44 + 8))(v24, v45);
        sub_25A68F294(v22, v21);
LABEL_22:
        sub_25A69CA0C((uint64_t)v19);
        goto LABEL_23;
      }
      uint64_t v30 = *(void *)v20;
      unint64_t v42 = *((void *)v20 + 1);
      uint64_t v43 = v30;
      uint64_t v31 = &v20[v23];
      uint64_t v32 = v44;
      uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v44 + 32);
      uint64_t v34 = v24;
      uint64_t v35 = v45;
      v33(v9, v34, v45);
      char v36 = v31;
      uint64_t v37 = v43;
      v33(v7, v36, v35);
      unint64_t v38 = v42;
      if ((sub_25A698E34(v22, v21, v37, v42) & 1) == 0)
      {
        sub_25A68F294(v37, v38);
        sub_25A68F294(v22, v21);
        char v41 = *(void (**)(char *, uint64_t))(v32 + 8);
        v41(v7, v35);
        v41(v9, v35);
LABEL_30:
        sub_25A699B20((uint64_t)v19, type metadata accessor for Prefetch.Response.Node.ValidationResult);
LABEL_23:
        char v29 = 0;
        return v29 & 1;
      }
      char v29 = sub_25A6C7370();
      sub_25A68F294(v37, v38);
      sub_25A68F294(v22, v21);
      char v39 = *(void (**)(char *, uint64_t))(v32 + 8);
      v39(v7, v35);
      v39(v9, v35);
      sub_25A699B20((uint64_t)v19, type metadata accessor for Prefetch.Response.Node.ValidationResult);
      return v29 & 1;
  }
}

uint64_t type metadata accessor for Prefetch.Response.Node.ValidationResult(uint64_t a1)
{
  return sub_25A675B1C(a1, (uint64_t *)&unk_26B329C60);
}

unint64_t sub_25A6994BC()
{
  unint64_t result = qword_26B329BE8;
  if (!qword_26B329BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B329BE8);
  }
  return result;
}

unint64_t sub_25A699510()
{
  unint64_t result = qword_26A44C440;
  if (!qword_26A44C440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C440);
  }
  return result;
}

unint64_t sub_25A699564()
{
  unint64_t result = qword_26A44C448;
  if (!qword_26A44C448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C448);
  }
  return result;
}

unint64_t sub_25A6995B8()
{
  unint64_t result = qword_26A44C450;
  if (!qword_26A44C450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C450);
  }
  return result;
}

unint64_t sub_25A69960C()
{
  unint64_t result = qword_26B329BD0;
  if (!qword_26B329BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B329BD0);
  }
  return result;
}

unint64_t sub_25A699660()
{
  unint64_t result = qword_26A44C458;
  if (!qword_26A44C458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C458);
  }
  return result;
}

unint64_t sub_25A6996B4()
{
  unint64_t result = qword_26A44C460;
  if (!qword_26A44C460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C460);
  }
  return result;
}

unint64_t sub_25A699708()
{
  unint64_t result = qword_26B329C00;
  if (!qword_26B329C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B329C00);
  }
  return result;
}

unint64_t sub_25A69975C()
{
  unint64_t result = qword_26B329B20;
  if (!qword_26B329B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B329B20);
  }
  return result;
}

uint64_t sub_25A6997B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Prefetch.Response.Node.ValidationResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_25A699814()
{
  unint64_t result = qword_26A44C4A8;
  if (!qword_26A44C4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C4A8);
  }
  return result;
}

uint64_t sub_25A699868(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for Prefetch.Response.Node(uint64_t a1)
{
  return sub_25A675B1C(a1, (uint64_t *)&unk_26B329610);
}

uint64_t sub_25A6998D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Prefetch.Response.Node.ValidationResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t _s19PrivateCloudCompute8PrefetchV8ResponseV4NodeV2eeoiySbAG_AGtFZ_0(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_25A6C7A00(), uint64_t result = 0, (v5 & 1) != 0))
  {
    BOOL v7 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v7 || (v8 = sub_25A6C7A00(), uint64_t result = 0, (v8 & 1) != 0))
    {
      if (a1[4] == a2[4] && a1[5] == a2[5] || (v9 = sub_25A6C7A00(), uint64_t result = 0, (v9 & 1) != 0))
      {
        uint64_t v10 = (int *)type metadata accessor for Prefetch.Response.Node(0);
        if ((_s19PrivateCloudCompute8PrefetchV8ResponseV4NodeV16ValidationResultO2eeoiySbAI_AItFZ_0((uint64_t)a1 + v10[7], (uint64_t)a2 + v10[7]) & 1) == 0|| *((unsigned __int8 *)a1 + v10[8]) != *((unsigned __int8 *)a2 + v10[8]))
        {
          return 0;
        }
        uint64_t v11 = v10[9];
        uint64_t v12 = (void *)((char *)a1 + v11);
        uint64_t v13 = *(void *)((char *)a1 + v11 + 8);
        uint64_t v14 = (void *)((char *)a2 + v11);
        uint64_t v15 = v14[1];
        if (v13)
        {
          if (!v15) {
            return 0;
          }
          BOOL v16 = *v12 == *v14 && v13 == v15;
          if (!v16 && (sub_25A6C7A00() & 1) == 0) {
            return 0;
          }
        }
        else if (v15)
        {
          return 0;
        }
        return 1;
      }
    }
  }
  return result;
}

unint64_t sub_25A699A64()
{
  unint64_t result = qword_26B329BA8;
  if (!qword_26B329BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B329BA8);
  }
  return result;
}

uint64_t sub_25A699AB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25A699B20(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for Prefetch.Response(uint64_t a1)
{
  return sub_25A675B1C(a1, (uint64_t *)&unk_26B329C78);
}

unint64_t sub_25A699BA0()
{
  unint64_t result = qword_26B329B90;
  if (!qword_26B329B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B329B90);
  }
  return result;
}

uint64_t sub_25A699BF4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B329C88);
    sub_25A699868(a2, (void (*)(uint64_t))type metadata accessor for Prefetch.Response.Node);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for Prefetch()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s19PrivateCloudCompute8PrefetchVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for Prefetch(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Prefetch(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Prefetch()
{
  return &type metadata for Prefetch;
}

uint64_t *initializeBufferWithCopyOfBuffer for Prefetch.Response(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    BOOL v7 = (char *)a1 + v6;
    char v8 = (char *)a2 + v6;
    uint64_t v9 = sub_25A6C73D0();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t destroy for Prefetch.Response(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_25A6C73D0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for Prefetch.Response(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_25A6C73D0();
  char v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

void *assignWithCopy for Prefetch.Response(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  char v8 = (char *)a2 + v6;
  uint64_t v9 = sub_25A6C73D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *initializeWithTake for Prefetch.Response(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_25A6C73D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for Prefetch.Response(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  char v8 = (char *)a2 + v6;
  uint64_t v9 = sub_25A6C73D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for Prefetch.Response(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25A69A16C);
}

uint64_t sub_25A69A16C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_25A6C73D0();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Prefetch.Response(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25A69A230);
}

void *sub_25A69A230(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_25A6C73D0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_25A69A2D8()
{
  uint64_t result = sub_25A6C73D0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for Prefetch.Response.Node(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    uint64_t v10 = a3[7];
    uint64_t v11 = (void *)((char *)a1 + v10);
    uint64_t v12 = (void *)((char *)a2 + v10);
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v13 = type metadata accessor for Prefetch.Response.Node.ValidationResult(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v22 = v12[1];
      *uint64_t v11 = *v12;
      v11[1] = v22;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      uint64_t v15 = *v12;
      unint64_t v16 = v12[1];
      sub_25A68F228(*v12, v16);
      *uint64_t v11 = v15;
      v11[1] = v16;
      uint64_t v17 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B329B18) + 48);
      uint64_t v18 = (char *)v11 + v17;
      BOOL v19 = (char *)v12 + v17;
      uint64_t v20 = sub_25A6C73A0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v23 = a3[9];
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    char v24 = (void *)((char *)v4 + v23);
    uint64_t v25 = (void *)((char *)a2 + v23);
    uint64_t v26 = v25[1];
    *char v24 = *v25;
    v24[1] = v26;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for Prefetch.Response.Node(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  type metadata accessor for Prefetch.Response.Node.ValidationResult(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
  }
  else if (!EnumCaseMultiPayload)
  {
    sub_25A68F294(*(void *)v4, *(void *)(v4 + 8));
    uint64_t v6 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B329B18) + 48);
    uint64_t v7 = sub_25A6C73A0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for Prefetch.Response.Node(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2[5];
  uint64_t v9 = a3[7];
  uint64_t v10 = (void *)((char *)a1 + v9);
  uint64_t v11 = (void *)((char *)a2 + v9);
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v12 = type metadata accessor for Prefetch.Response.Node.ValidationResult(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v20 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v20;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v14 = *v11;
    unint64_t v15 = v11[1];
    sub_25A68F228(*v11, v15);
    *uint64_t v10 = v14;
    v10[1] = v15;
    uint64_t v16 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B329B18) + 48);
    uint64_t v17 = (char *)v10 + v16;
    uint64_t v18 = (char *)v11 + v16;
    uint64_t v19 = sub_25A6C73A0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v21 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for Prefetch.Response.Node(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = a3[7];
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_25A699B20((uint64_t)a1 + v6, type metadata accessor for Prefetch.Response.Node.ValidationResult);
    uint64_t v9 = type metadata accessor for Prefetch.Response.Node.ValidationResult(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *uint64_t v7 = *v8;
      v7[1] = v8[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = *v8;
      unint64_t v12 = v8[1];
      sub_25A68F228(*v8, v12);
      *uint64_t v7 = v11;
      v7[1] = v12;
      uint64_t v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B329B18) + 48);
      uint64_t v14 = (char *)v7 + v13;
      unint64_t v15 = (char *)v8 + v13;
      uint64_t v16 = sub_25A6C73A0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
      swift_storeEnumTagMultiPayload();
    }
  }
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v17 = a3[9];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for Prefetch.Response.Node(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[7];
  uint64_t v8 = (_OWORD *)((char *)a1 + v7);
  uint64_t v9 = (_OWORD *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for Prefetch.Response.Node.ValidationResult(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    *uint64_t v8 = *v9;
    uint64_t v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B329B18) + 48);
    unint64_t v12 = (char *)v8 + v11;
    uint64_t v13 = (char *)v9 + v11;
    uint64_t v14 = sub_25A6C73A0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v15 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v15) = *(_OWORD *)((char *)a2 + v15);
  return a1;
}

void *assignWithTake for Prefetch.Response.Node(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v9 = a3[7];
    uint64_t v10 = (_OWORD *)((char *)a1 + v9);
    uint64_t v11 = (_OWORD *)((char *)a2 + v9);
    sub_25A699B20((uint64_t)a1 + v9, type metadata accessor for Prefetch.Response.Node.ValidationResult);
    uint64_t v12 = type metadata accessor for Prefetch.Response.Node.ValidationResult(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      *uint64_t v10 = *v11;
      uint64_t v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B329B18) + 48);
      uint64_t v14 = (char *)v10 + v13;
      uint64_t v15 = (char *)v11 + v13;
      uint64_t v16 = sub_25A6C73A0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v17 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Prefetch.Response.Node(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25A69AC58);
}

uint64_t sub_25A69AC58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Prefetch.Response.Node.ValidationResult(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Prefetch.Response.Node(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25A69AD1C);
}

uint64_t sub_25A69AD1C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for Prefetch.Response.Node.ValidationResult(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_25A69ADC4()
{
  uint64_t result = type metadata accessor for Prefetch.Response.Node.ValidationResult(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for Prefetch.Response.Node.ValidationResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = a2[1];
      *a1 = *a2;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = *a2;
      unint64_t v9 = a2[1];
      sub_25A68F228(*a2, v9);
      *a1 = v8;
      a1[1] = v9;
      uint64_t v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B329B18) + 48);
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_25A6C73A0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for Prefetch.Response.Node.ValidationResult(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    return swift_bridgeObjectRelease();
  }
  else if (!result)
  {
    sub_25A68F294(*(void *)a1, *(void *)(a1 + 8));
    uint64_t v3 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B329B18) + 48);
    uint64_t v4 = sub_25A6C73A0();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(v3, v4);
  }
  return result;
}

void *initializeWithCopy for Prefetch.Response.Node.ValidationResult(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v13 = a2[1];
    *a1 = *a2;
    a1[1] = v13;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = *a2;
    unint64_t v8 = a2[1];
    sub_25A68F228(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    uint64_t v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B329B18) + 48);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_25A6C73A0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for Prefetch.Response.Node.ValidationResult(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25A699B20((uint64_t)a1, type metadata accessor for Prefetch.Response.Node.ValidationResult);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = *a2;
      unint64_t v8 = a2[1];
      sub_25A68F228(*a2, v8);
      *a1 = v7;
      a1[1] = v8;
      uint64_t v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B329B18) + 48);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_25A6C73A0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

_OWORD *initializeWithTake for Prefetch.Response.Node.ValidationResult(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B329B18) + 48);
    uint64_t v7 = (char *)a1 + v6;
    unint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_25A6C73A0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *assignWithTake for Prefetch.Response.Node.ValidationResult(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25A699B20((uint64_t)a1, type metadata accessor for Prefetch.Response.Node.ValidationResult);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B329B18) + 48);
      uint64_t v7 = (char *)a1 + v6;
      unint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_25A6C73A0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_25A69B49C()
{
  uint64_t result = sub_25A6C73A0();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[4] = v2;
    v2[5] = &unk_25A6CC8F0;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Prefetch.Response.CodingKeys()
{
  return &type metadata for Prefetch.Response.CodingKeys;
}

uint64_t getEnumTagSinglePayload for Prefetch.Response.Node.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Prefetch.Response.Node.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A69B6B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Prefetch.Response.Node.CodingKeys()
{
  return &type metadata for Prefetch.Response.Node.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for Prefetch.Response.Node.ValidationResult.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A69B7B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Prefetch.Response.Node.ValidationResult.CodingKeys()
{
  return &type metadata for Prefetch.Response.Node.ValidationResult.CodingKeys;
}

unsigned char *_s19PrivateCloudCompute8PrefetchV8ResponseV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A69B8B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Prefetch.Response.Node.ValidationResult.ValidCodingKeys()
{
  return &type metadata for Prefetch.Response.Node.ValidationResult.ValidCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for Prefetch.Response.Node.ValidationResult.InvalidCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25A69B98CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Prefetch.Response.Node.ValidationResult.InvalidCodingKeys()
{
  return &type metadata for Prefetch.Response.Node.ValidationResult.InvalidCodingKeys;
}

ValueMetadata *type metadata accessor for Prefetch.Response.Node.ValidationResult.NodeAlreadyExistsInBatchCodingKeys()
{
  return &type metadata for Prefetch.Response.Node.ValidationResult.NodeAlreadyExistsInBatchCodingKeys;
}

ValueMetadata *type metadata accessor for Prefetch.Response.Node.ValidationResult.ValidationNotNeededCodingKeys()
{
  return &type metadata for Prefetch.Response.Node.ValidationResult.ValidationNotNeededCodingKeys;
}

ValueMetadata *type metadata accessor for Prefetch.Response.Node.ValidationResult.ExpiryTooLargeCodingKeys()
{
  return &type metadata for Prefetch.Response.Node.ValidationResult.ExpiryTooLargeCodingKeys;
}

ValueMetadata *type metadata accessor for Prefetch.Response.Node.ValidationResult.ValidatedExpiryTooLargeCodingKeys()
{
  return &type metadata for Prefetch.Response.Node.ValidationResult.ValidatedExpiryTooLargeCodingKeys;
}

ValueMetadata *type metadata accessor for Prefetch.Response.Node.ValidationResult.NoUniqueIdentifierCodingKeys()
{
  return &type metadata for Prefetch.Response.Node.ValidationResult.NoUniqueIdentifierCodingKeys;
}

unint64_t sub_25A69BA18()
{
  unint64_t result = qword_26A44C4E0;
  if (!qword_26A44C4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C4E0);
  }
  return result;
}

unint64_t sub_25A69BA70()
{
  unint64_t result = qword_26A44C4E8;
  if (!qword_26A44C4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C4E8);
  }
  return result;
}

unint64_t sub_25A69BAC8()
{
  unint64_t result = qword_26A44C4F0;
  if (!qword_26A44C4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C4F0);
  }
  return result;
}

unint64_t sub_25A69BB20()
{
  unint64_t result = qword_26A44C4F8;
  if (!qword_26A44C4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C4F8);
  }
  return result;
}

unint64_t sub_25A69BB78()
{
  unint64_t result = qword_26A44C500;
  if (!qword_26A44C500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C500);
  }
  return result;
}

unint64_t sub_25A69BBD0()
{
  unint64_t result = qword_26B329BA0;
  if (!qword_26B329BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B329BA0);
  }
  return result;
}

unint64_t sub_25A69BC28()
{
  unint64_t result = qword_26B329B98;
  if (!qword_26B329B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B329B98);
  }
  return result;
}

unint64_t sub_25A69BC80()
{
  unint64_t result = qword_26B329BB8;
  if (!qword_26B329BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B329BB8);
  }
  return result;
}

unint64_t sub_25A69BCD8()
{
  unint64_t result = qword_26B329BB0;
  if (!qword_26B329BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B329BB0);
  }
  return result;
}

unint64_t sub_25A69BD30()
{
  unint64_t result = qword_26B329C10;
  if (!qword_26B329C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B329C10);
  }
  return result;
}

unint64_t sub_25A69BD88()
{
  unint64_t result = qword_26B329C08;
  if (!qword_26B329C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B329C08);
  }
  return result;
}

unint64_t sub_25A69BDE0()
{
  unint64_t result = qword_26B329C20;
  if (!qword_26B329C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B329C20);
  }
  return result;
}

unint64_t sub_25A69BE38()
{
  unint64_t result = qword_26B329C18;
  if (!qword_26B329C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B329C18);
  }
  return result;
}

unint64_t sub_25A69BE90()
{
  unint64_t result = qword_26B329BC8;
  if (!qword_26B329BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B329BC8);
  }
  return result;
}

unint64_t sub_25A69BEE8()
{
  unint64_t result = qword_26B329BC0;
  if (!qword_26B329BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B329BC0);
  }
  return result;
}

unint64_t sub_25A69BF40()
{
  unint64_t result = qword_26B329BE0;
  if (!qword_26B329BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B329BE0);
  }
  return result;
}

unint64_t sub_25A69BF98()
{
  unint64_t result = qword_26B329BD8;
  if (!qword_26B329BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B329BD8);
  }
  return result;
}

unint64_t sub_25A69BFF0()
{
  unint64_t result = qword_26B329C30;
  if (!qword_26B329C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B329C30);
  }
  return result;
}

unint64_t sub_25A69C048()
{
  unint64_t result = qword_26B329C28;
  if (!qword_26B329C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B329C28);
  }
  return result;
}

unint64_t sub_25A69C0A0()
{
  unint64_t result = qword_26B329C50;
  if (!qword_26B329C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B329C50);
  }
  return result;
}

unint64_t sub_25A69C0F8()
{
  unint64_t result = qword_26B329C48;
  if (!qword_26B329C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B329C48);
  }
  return result;
}

unint64_t sub_25A69C150()
{
  unint64_t result = qword_26B329C40;
  if (!qword_26B329C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B329C40);
  }
  return result;
}

unint64_t sub_25A69C1A8()
{
  unint64_t result = qword_26B329C38;
  if (!qword_26B329C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B329C38);
  }
  return result;
}

unint64_t sub_25A69C200()
{
  unint64_t result = qword_26B329BF8;
  if (!qword_26B329BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B329BF8);
  }
  return result;
}

unint64_t sub_25A69C258()
{
  unint64_t result = qword_26B329BF0;
  if (!qword_26B329BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B329BF0);
  }
  return result;
}

uint64_t sub_25A69C2AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64696C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64696C61766E69 && a2 == 0xE700000000000000 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000025A6D03D0 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000025A6D03F0 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F54797269707865 && a2 == 0xEE00656772614C6FLL || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000025A6D0410 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000025A6D0430)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_25A6C7A00();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_25A69C590(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x654B63696C627570 && a2 == 0xE900000000000079;
  if (v2 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x797269707865 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_25A6C7A00();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25A69C688(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x56534F64756F6C63 && a2 == 0xEE006E6F69737265 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000025A6D0450 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000025A6D0470 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x436F546465766173 && a2 == 0xEC00000065686361 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000025A6D0490)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_25A6C7A00();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_25A69C938(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7365646F6ELL && a2 == 0xE500000000000000;
  if (v2 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_25A6C7A00();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25A69CA0C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C508);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t TrustedRequestHistory.Request.Node.state.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrustedRequestHistory.Request.Node.state.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*TrustedRequestHistory.Request.Node.state.modify())()
{
  return nullsub_1;
}

uint64_t TrustedRequestHistory.Request.Node.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrustedRequestHistory.Request.Node.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*TrustedRequestHistory.Request.Node.identifier.modify())()
{
  return nullsub_1;
}

uint64_t TrustedRequestHistory.Request.Node.ohttpContext.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t TrustedRequestHistory.Request.Node.ohttpContext.setter(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  return result;
}

uint64_t (*TrustedRequestHistory.Request.Node.ohttpContext.modify())()
{
  return nullsub_1;
}

uint64_t TrustedRequestHistory.Request.Node.hasReceivedSummary.getter()
{
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t TrustedRequestHistory.Request.Node.hasReceivedSummary.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 40) = result;
  return result;
}

uint64_t (*TrustedRequestHistory.Request.Node.hasReceivedSummary.modify())()
{
  return nullsub_1;
}

uint64_t TrustedRequestHistory.Request.Node.dataReceived.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t TrustedRequestHistory.Request.Node.dataReceived.setter(uint64_t result)
{
  *(void *)(v1 + 48) = result;
  return result;
}

uint64_t (*TrustedRequestHistory.Request.Node.dataReceived.modify())()
{
  return nullsub_1;
}

uint64_t TrustedRequestHistory.Request.Node.cloudOSVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrustedRequestHistory.Request.Node.cloudOSVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return result;
}

uint64_t (*TrustedRequestHistory.Request.Node.cloudOSVersion.modify())()
{
  return nullsub_1;
}

uint64_t TrustedRequestHistory.Request.Node.cloudOSReleaseType.getter()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrustedRequestHistory.Request.Node.cloudOSReleaseType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = a2;
  return result;
}

uint64_t (*TrustedRequestHistory.Request.Node.cloudOSReleaseType.modify())()
{
  return nullsub_1;
}

uint64_t TrustedRequestHistory.Request.Node.maybeValidatedCellID.getter()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrustedRequestHistory.Request.Node.maybeValidatedCellID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = a2;
  return result;
}

uint64_t (*TrustedRequestHistory.Request.Node.maybeValidatedCellID.modify())()
{
  return nullsub_1;
}

uint64_t TrustedRequestHistory.Request.Node.ensembleID.getter()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrustedRequestHistory.Request.Node.ensembleID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = a2;
  return result;
}

uint64_t (*TrustedRequestHistory.Request.Node.ensembleID.modify())()
{
  return nullsub_1;
}

uint64_t TrustedRequestHistory.Request.Node.isFromCache.getter()
{
  return *(unsigned __int8 *)(v0 + 120);
}

uint64_t TrustedRequestHistory.Request.Node.isFromCache.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 120) = result;
  return result;
}

uint64_t (*TrustedRequestHistory.Request.Node.isFromCache.modify())()
{
  return nullsub_1;
}

uint64_t TrustedRequestHistory.Request.request.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_25A69CE68(v1, a1);
}

uint64_t sub_25A69CE68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TrustedRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t TrustedRequestHistory.Request.request.setter(uint64_t a1)
{
  return sub_25A69CED4(a1, v1);
}

uint64_t sub_25A69CED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TrustedRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*TrustedRequestHistory.Request.request.modify())()
{
  return nullsub_1;
}

uint64_t TrustedRequestHistory.Request.clientConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for TrustedRequestHistory.Request();
  uint64_t v4 = (int *)(v1 + *(int *)(result + 20));
  int v5 = *v4;
  LOBYTE(v4) = *((unsigned char *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(unsigned char *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t type metadata accessor for TrustedRequestHistory.Request()
{
  uint64_t result = qword_26A44C510;
  if (!qword_26A44C510) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t TrustedRequestHistory.Request.clientConfiguration.setter(int *a1)
{
  int v2 = *a1;
  char v3 = *((unsigned char *)a1 + 4);
  uint64_t result = type metadata accessor for TrustedRequestHistory.Request();
  uint64_t v5 = v1 + *(int *)(result + 20);
  *(_DWORD *)uint64_t v5 = v2;
  *(unsigned char *)(v5 + 4) = v3;
  return result;
}

uint64_t (*TrustedRequestHistory.Request.clientConfiguration.modify())()
{
  return nullsub_1;
}

uint64_t TrustedRequestHistory.Request.creationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TrustedRequestHistory.Request() + 24);
  uint64_t v4 = sub_25A6C73A0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t TrustedRequestHistory.Request.creationDate.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TrustedRequestHistory.Request() + 24);
  uint64_t v4 = sub_25A6C73A0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*TrustedRequestHistory.Request.creationDate.modify())()
{
  return nullsub_1;
}

uint64_t TrustedRequestHistory.Request.bundleIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TrustedRequestHistory.Request() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrustedRequestHistory.Request.bundleIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for TrustedRequestHistory.Request() + 28));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*TrustedRequestHistory.Request.bundleIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t TrustedRequestHistory.Request.qos.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TrustedRequestHistory.Request() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrustedRequestHistory.Request.qos.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for TrustedRequestHistory.Request() + 32));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*TrustedRequestHistory.Request.qos.modify())()
{
  return nullsub_1;
}

uint64_t TrustedRequestHistory.Request.state.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TrustedRequestHistory.Request() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrustedRequestHistory.Request.state.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for TrustedRequestHistory.Request() + 36));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*TrustedRequestHistory.Request.state.modify())()
{
  return nullsub_1;
}

uint64_t TrustedRequestHistory.Request.payloadTransportState.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TrustedRequestHistory.Request() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrustedRequestHistory.Request.payloadTransportState.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for TrustedRequestHistory.Request() + 40));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*TrustedRequestHistory.Request.payloadTransportState.modify())()
{
  return nullsub_1;
}

uint64_t TrustedRequestHistory.Request.responseState.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TrustedRequestHistory.Request() + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrustedRequestHistory.Request.responseState.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for TrustedRequestHistory.Request() + 44));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*TrustedRequestHistory.Request.responseState.modify())()
{
  return nullsub_1;
}

uint64_t TrustedRequestHistory.Request.responseCode.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for TrustedRequestHistory.Request() + 48));
}

uint64_t TrustedRequestHistory.Request.responseCode.setter(uint64_t a1, char a2)
{
  uint64_t result = type metadata accessor for TrustedRequestHistory.Request();
  uint64_t v6 = v2 + *(int *)(result + 48);
  *(void *)uint64_t v6 = a1;
  *(unsigned char *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*TrustedRequestHistory.Request.responseCode.modify())()
{
  return nullsub_1;
}

uint64_t TrustedRequestHistory.Request.environment.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TrustedRequestHistory.Request() + 52));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrustedRequestHistory.Request.environment.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for TrustedRequestHistory.Request() + 52));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*TrustedRequestHistory.Request.environment.modify())()
{
  return nullsub_1;
}

uint64_t TrustedRequestHistory.Request.ropesVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TrustedRequestHistory.Request() + 56));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrustedRequestHistory.Request.ropesVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for TrustedRequestHistory.Request() + 56));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*TrustedRequestHistory.Request.ropesVersion.modify())()
{
  return nullsub_1;
}

uint64_t TrustedRequestHistory.Request.nodes.getter()
{
  type metadata accessor for TrustedRequestHistory.Request();
  return swift_bridgeObjectRetain();
}

uint64_t TrustedRequestHistory.Request.nodes.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for TrustedRequestHistory.Request() + 60);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*TrustedRequestHistory.Request.nodes.modify())()
{
  return nullsub_1;
}

uint64_t TrustedRequestHistory.requests.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TrustedRequestHistory.requests.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*TrustedRequestHistory.requests.modify())()
{
  return nullsub_1;
}

ValueMetadata *type metadata accessor for TrustedRequestHistory()
{
  return &type metadata for TrustedRequestHistory;
}

uint64_t *initializeBufferWithCopyOfBuffer for TrustedRequestHistory.Request(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v31 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_25A6C73D0();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v71 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v71(a1, a2, v7);
    uint64_t v9 = (int *)type metadata accessor for TrustedRequest();
    uint64_t v10 = v9[5];
    uint64_t v11 = (uint64_t *)((char *)a1 + v10);
    uint64_t v12 = (uint64_t *)((char *)a2 + v10);
    uint64_t v14 = *v12;
    uint64_t v13 = v12[1];
    *uint64_t v11 = v14;
    v11[1] = v13;
    *(uint64_t *)((char *)a1 + v9[6]) = *(uint64_t *)((char *)a2 + v9[6]);
    uint64_t v15 = v9[7];
    uint64_t v16 = (uint64_t *)((char *)a1 + v15);
    uint64_t v17 = (uint64_t *)((char *)a2 + v15);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = v9[8];
    uint64_t v20 = (uint64_t *)((char *)a1 + v19);
    uint64_t v21 = (uint64_t *)((char *)a2 + v19);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    uint64_t v23 = v9[9];
    uint64_t v24 = (uint64_t *)((char *)a1 + v23);
    uint64_t v25 = (uint64_t *)((char *)a2 + v23);
    uint64_t v26 = v25[1];
    *uint64_t v24 = *v25;
    v24[1] = v26;
    uint64_t v27 = v9[10];
    char v28 = (char *)a2 + v27;
    char v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    __dst = (char *)a1 + v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v29(v28, 1, v7))
    {
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C438);
      memcpy(__dst, v28, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      v71((uint64_t *)__dst, (uint64_t *)v28, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(__dst, 0, 1, v7);
    }
    uint64_t v32 = a3[5];
    uint64_t v33 = a3[6];
    uint64_t v34 = (char *)a1 + v32;
    uint64_t v35 = (char *)a2 + v32;
    *(_DWORD *)uint64_t v34 = *(_DWORD *)v35;
    v34[4] = v35[4];
    char v36 = (char *)a1 + v33;
    uint64_t v37 = (char *)a2 + v33;
    uint64_t v38 = sub_25A6C73A0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
    uint64_t v39 = a3[7];
    uint64_t v40 = a3[8];
    char v41 = (uint64_t *)((char *)a1 + v39);
    unint64_t v42 = (uint64_t *)((char *)a2 + v39);
    uint64_t v43 = v42[1];
    *char v41 = *v42;
    v41[1] = v43;
    uint64_t v44 = (uint64_t *)((char *)a1 + v40);
    uint64_t v45 = (uint64_t *)((char *)a2 + v40);
    uint64_t v46 = v45[1];
    *uint64_t v44 = *v45;
    v44[1] = v46;
    uint64_t v47 = a3[9];
    uint64_t v48 = a3[10];
    uint64_t v49 = (uint64_t *)((char *)a1 + v47);
    uint64_t v50 = (uint64_t *)((char *)a2 + v47);
    uint64_t v51 = v50[1];
    *uint64_t v49 = *v50;
    v49[1] = v51;
    uint64_t v52 = (uint64_t *)((char *)a1 + v48);
    uint64_t v53 = (uint64_t *)((char *)a2 + v48);
    uint64_t v54 = v53[1];
    *uint64_t v52 = *v53;
    v52[1] = v54;
    uint64_t v55 = a3[11];
    uint64_t v56 = a3[12];
    uint64_t v57 = (uint64_t *)((char *)a1 + v55);
    uint64_t v58 = (uint64_t *)((char *)a2 + v55);
    uint64_t v59 = v58[1];
    void *v57 = *v58;
    v57[1] = v59;
    uint64_t v60 = (char *)a1 + v56;
    uint64_t v61 = (char *)a2 + v56;
    *(void *)uint64_t v60 = *(void *)v61;
    v60[8] = v61[8];
    uint64_t v62 = a3[13];
    uint64_t v63 = a3[14];
    uint64_t v64 = (uint64_t *)((char *)a1 + v62);
    uint64_t v65 = (uint64_t *)((char *)a2 + v62);
    uint64_t v66 = v65[1];
    *uint64_t v64 = *v65;
    v64[1] = v66;
    uint64_t v67 = (uint64_t *)((char *)a1 + v63);
    uint64_t v68 = (uint64_t *)((char *)a2 + v63);
    uint64_t v69 = v68[1];
    *uint64_t v67 = *v68;
    v67[1] = v69;
    *(uint64_t *)((char *)a1 + a3[15]) = *(uint64_t *)((char *)a2 + a3[15]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for TrustedRequestHistory.Request(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25A6C73D0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  uint64_t v7 = type metadata accessor for TrustedRequest();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + *(int *)(v7 + 40);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v8, 1, v4)) {
    v6(v8, v4);
  }
  uint64_t v9 = a1 + *(int *)(a2 + 24);
  uint64_t v10 = sub_25A6C73A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for TrustedRequestHistory.Request(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_25A6C73D0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v69 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v69(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for TrustedRequest();
  uint64_t v9 = v8[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = (uint64_t *)&a2[v9];
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  *(void *)uint64_t v10 = v13;
  *((void *)v10 + 1) = v12;
  *(void *)&a1[v8[6]] = *(void *)&a2[v8[6]];
  uint64_t v14 = v8[7];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = *((void *)v16 + 1);
  *(void *)uint64_t v15 = *(void *)v16;
  *((void *)v15 + 1) = v17;
  uint64_t v18 = v8[8];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = *((void *)v20 + 1);
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = v21;
  uint64_t v22 = v8[9];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v25 = *((void *)v24 + 1);
  *(void *)uint64_t v23 = *(void *)v24;
  *((void *)v23 + 1) = v25;
  uint64_t v26 = v8[10];
  uint64_t v27 = &a2[v26];
  char v28 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  __dst = &a1[v26];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v28(v27, 1, v6))
  {
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C438);
    memcpy(__dst, v27, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    v69(__dst, v27, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(__dst, 0, 1, v6);
  }
  uint64_t v30 = a3[5];
  uint64_t v31 = a3[6];
  uint64_t v32 = &a1[v30];
  uint64_t v33 = &a2[v30];
  *(_DWORD *)uint64_t v32 = *(_DWORD *)v33;
  v32[4] = v33[4];
  uint64_t v34 = &a1[v31];
  uint64_t v35 = &a2[v31];
  uint64_t v36 = sub_25A6C73A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
  uint64_t v37 = a3[7];
  uint64_t v38 = a3[8];
  uint64_t v39 = &a1[v37];
  uint64_t v40 = &a2[v37];
  uint64_t v41 = *((void *)v40 + 1);
  *(void *)uint64_t v39 = *(void *)v40;
  *((void *)v39 + 1) = v41;
  unint64_t v42 = &a1[v38];
  uint64_t v43 = &a2[v38];
  uint64_t v44 = *((void *)v43 + 1);
  *(void *)unint64_t v42 = *(void *)v43;
  *((void *)v42 + 1) = v44;
  uint64_t v45 = a3[9];
  uint64_t v46 = a3[10];
  uint64_t v47 = &a1[v45];
  uint64_t v48 = &a2[v45];
  uint64_t v49 = *((void *)v48 + 1);
  *(void *)uint64_t v47 = *(void *)v48;
  *((void *)v47 + 1) = v49;
  uint64_t v50 = &a1[v46];
  uint64_t v51 = &a2[v46];
  uint64_t v52 = *((void *)v51 + 1);
  *(void *)uint64_t v50 = *(void *)v51;
  *((void *)v50 + 1) = v52;
  uint64_t v53 = a3[11];
  uint64_t v54 = a3[12];
  uint64_t v55 = &a1[v53];
  uint64_t v56 = &a2[v53];
  uint64_t v57 = *((void *)v56 + 1);
  *(void *)uint64_t v55 = *(void *)v56;
  *((void *)v55 + 1) = v57;
  uint64_t v58 = &a1[v54];
  uint64_t v59 = &a2[v54];
  *(void *)uint64_t v58 = *(void *)v59;
  v58[8] = v59[8];
  uint64_t v60 = a3[13];
  uint64_t v61 = a3[14];
  uint64_t v62 = &a1[v60];
  uint64_t v63 = &a2[v60];
  uint64_t v64 = *((void *)v63 + 1);
  *(void *)uint64_t v62 = *(void *)v63;
  *((void *)v62 + 1) = v64;
  uint64_t v65 = &a1[v61];
  uint64_t v66 = &a2[v61];
  uint64_t v67 = *((void *)v66 + 1);
  *(void *)uint64_t v65 = *(void *)v66;
  *((void *)v65 + 1) = v67;
  *(void *)&a1[a3[15]] = *(void *)&a2[a3[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for TrustedRequestHistory.Request(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_25A6C73D0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v62 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v62(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for TrustedRequest();
  uint64_t v9 = v8[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  *(void *)uint64_t v10 = *(void *)v11;
  *((void *)v10 + 1) = *((void *)v11 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[v8[6]] = *(void *)&a2[v8[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = v8[7];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = v8[8];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = *((void *)v17 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = v8[9];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = *((void *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = v8[10];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v25 = v24(&a1[v21], 1, v6);
  int v26 = v24(v23, 1, v6);
  if (!v25)
  {
    if (!v26)
    {
      v62(v22, v23, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v22, v6);
    goto LABEL_6;
  }
  if (v26)
  {
LABEL_6:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C438);
    memcpy(v22, v23, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v22, v23, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v22, 0, 1, v6);
LABEL_7:
  uint64_t v28 = a3[5];
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  int v31 = *(_DWORD *)v30;
  v29[4] = v30[4];
  *(_DWORD *)uint64_t v29 = v31;
  uint64_t v32 = a3[6];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  uint64_t v35 = sub_25A6C73A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 24))(v33, v34, v35);
  uint64_t v36 = a3[7];
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  *(void *)uint64_t v37 = *(void *)v38;
  *((void *)v37 + 1) = *((void *)v38 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v39 = a3[8];
  uint64_t v40 = &a1[v39];
  uint64_t v41 = &a2[v39];
  *(void *)uint64_t v40 = *(void *)v41;
  *((void *)v40 + 1) = *((void *)v41 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v42 = a3[9];
  uint64_t v43 = &a1[v42];
  uint64_t v44 = &a2[v42];
  *(void *)uint64_t v43 = *(void *)v44;
  *((void *)v43 + 1) = *((void *)v44 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v45 = a3[10];
  uint64_t v46 = &a1[v45];
  uint64_t v47 = &a2[v45];
  *(void *)uint64_t v46 = *(void *)v47;
  *((void *)v46 + 1) = *((void *)v47 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v48 = a3[11];
  uint64_t v49 = &a1[v48];
  uint64_t v50 = &a2[v48];
  *(void *)uint64_t v49 = *(void *)v50;
  *((void *)v49 + 1) = *((void *)v50 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v51 = a3[12];
  uint64_t v52 = &a1[v51];
  uint64_t v53 = &a2[v51];
  uint64_t v54 = *(void *)v53;
  v52[8] = v53[8];
  *(void *)uint64_t v52 = v54;
  uint64_t v55 = a3[13];
  uint64_t v56 = &a1[v55];
  uint64_t v57 = &a2[v55];
  *(void *)uint64_t v56 = *(void *)v57;
  *((void *)v56 + 1) = *((void *)v57 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v58 = a3[14];
  uint64_t v59 = &a1[v58];
  uint64_t v60 = &a2[v58];
  *(void *)uint64_t v59 = *(void *)v60;
  *((void *)v59 + 1) = *((void *)v60 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[15]] = *(void *)&a2[a3[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for TrustedRequestHistory.Request(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_25A6C73D0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  uint64_t v9 = (int *)type metadata accessor for TrustedRequest();
  *(_OWORD *)&a1[v9[5]] = *(_OWORD *)&a2[v9[5]];
  *(void *)&a1[v9[6]] = *(void *)&a2[v9[6]];
  *(_OWORD *)&a1[v9[7]] = *(_OWORD *)&a2[v9[7]];
  *(_OWORD *)&a1[v9[8]] = *(_OWORD *)&a2[v9[8]];
  *(_OWORD *)&a1[v9[9]] = *(_OWORD *)&a2[v9[9]];
  uint64_t v10 = v9[10];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v10], 1, v6))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C438);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v8(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = a3[5];
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v14];
  uint64_t v17 = &a2[v14];
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  void v16[4] = v17[4];
  uint64_t v18 = &a1[v15];
  uint64_t v19 = &a2[v15];
  uint64_t v20 = sub_25A6C73A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  uint64_t v21 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  *(_OWORD *)&a1[v21] = *(_OWORD *)&a2[v21];
  uint64_t v22 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  *(_OWORD *)&a1[v22] = *(_OWORD *)&a2[v22];
  uint64_t v23 = a3[12];
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  uint64_t v24 = &a1[v23];
  int v25 = &a2[v23];
  *(void *)uint64_t v24 = *(void *)v25;
  v24[8] = v25[8];
  uint64_t v26 = a3[14];
  *(_OWORD *)&a1[a3[13]] = *(_OWORD *)&a2[a3[13]];
  *(_OWORD *)&a1[v26] = *(_OWORD *)&a2[v26];
  *(void *)&a1[a3[15]] = *(void *)&a2[a3[15]];
  return a1;
}

char *assignWithTake for TrustedRequestHistory.Request(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_25A6C73D0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v82 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v82(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for TrustedRequest();
  uint64_t v9 = v8[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = (uint64_t *)&a2[v9];
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  *(void *)uint64_t v10 = v13;
  *((void *)v10 + 1) = v12;
  swift_bridgeObjectRelease();
  *(void *)&a1[v8[6]] = *(void *)&a2[v8[6]];
  swift_bridgeObjectRelease();
  uint64_t v14 = v8[7];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = (uint64_t *)&a2[v14];
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  *(void *)uint64_t v15 = v18;
  *((void *)v15 + 1) = v17;
  swift_bridgeObjectRelease();
  uint64_t v19 = v8[8];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = (uint64_t *)&a2[v19];
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  *(void *)uint64_t v20 = v23;
  *((void *)v20 + 1) = v22;
  swift_bridgeObjectRelease();
  uint64_t v24 = v8[9];
  int v25 = &a1[v24];
  uint64_t v26 = (uint64_t *)&a2[v24];
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  *(void *)int v25 = v28;
  *((void *)v25 + 1) = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = v8[10];
  uint64_t v30 = &a1[v29];
  int v31 = &a2[v29];
  uint64_t v32 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v33 = v32(&a1[v29], 1, v6);
  int v34 = v32(v31, 1, v6);
  if (!v33)
  {
    if (!v34)
    {
      v82(v30, v31, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v30, v6);
    goto LABEL_6;
  }
  if (v34)
  {
LABEL_6:
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C438);
    memcpy(v30, v31, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v30, v31, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v30, 0, 1, v6);
LABEL_7:
  uint64_t v36 = a3[5];
  uint64_t v37 = a3[6];
  uint64_t v38 = &a1[v36];
  uint64_t v39 = &a2[v36];
  *(_DWORD *)uint64_t v38 = *(_DWORD *)v39;
  v38[4] = v39[4];
  uint64_t v40 = &a1[v37];
  uint64_t v41 = &a2[v37];
  uint64_t v42 = sub_25A6C73A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  uint64_t v43 = a3[7];
  uint64_t v44 = &a1[v43];
  uint64_t v45 = (uint64_t *)&a2[v43];
  uint64_t v47 = *v45;
  uint64_t v46 = v45[1];
  *(void *)uint64_t v44 = v47;
  *((void *)v44 + 1) = v46;
  swift_bridgeObjectRelease();
  uint64_t v48 = a3[8];
  uint64_t v49 = &a1[v48];
  uint64_t v50 = (uint64_t *)&a2[v48];
  uint64_t v52 = *v50;
  uint64_t v51 = v50[1];
  *(void *)uint64_t v49 = v52;
  *((void *)v49 + 1) = v51;
  swift_bridgeObjectRelease();
  uint64_t v53 = a3[9];
  uint64_t v54 = &a1[v53];
  uint64_t v55 = (uint64_t *)&a2[v53];
  uint64_t v57 = *v55;
  uint64_t v56 = v55[1];
  *(void *)uint64_t v54 = v57;
  *((void *)v54 + 1) = v56;
  swift_bridgeObjectRelease();
  uint64_t v58 = a3[10];
  uint64_t v59 = &a1[v58];
  uint64_t v60 = (uint64_t *)&a2[v58];
  uint64_t v62 = *v60;
  uint64_t v61 = v60[1];
  *(void *)uint64_t v59 = v62;
  *((void *)v59 + 1) = v61;
  swift_bridgeObjectRelease();
  uint64_t v63 = a3[11];
  uint64_t v64 = &a1[v63];
  uint64_t v65 = (uint64_t *)&a2[v63];
  uint64_t v67 = *v65;
  uint64_t v66 = v65[1];
  *(void *)uint64_t v64 = v67;
  *((void *)v64 + 1) = v66;
  swift_bridgeObjectRelease();
  uint64_t v68 = a3[12];
  uint64_t v69 = a3[13];
  uint64_t v70 = &a1[v68];
  uint64_t v71 = &a2[v68];
  *(void *)uint64_t v70 = *(void *)v71;
  v70[8] = v71[8];
  uint64_t v72 = &a1[v69];
  uint64_t v73 = (uint64_t *)&a2[v69];
  uint64_t v75 = *v73;
  uint64_t v74 = v73[1];
  *(void *)uint64_t v72 = v75;
  *((void *)v72 + 1) = v74;
  swift_bridgeObjectRelease();
  uint64_t v76 = a3[14];
  uint64_t v77 = &a1[v76];
  uint64_t v78 = (uint64_t *)&a2[v76];
  uint64_t v80 = *v78;
  uint64_t v79 = v78[1];
  *(void *)uint64_t v77 = v80;
  *((void *)v77 + 1) = v79;
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[15]] = *(void *)&a2[a3[15]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TrustedRequestHistory.Request(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25A69EC78);
}

uint64_t sub_25A69EC78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TrustedRequest();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_25A6C73A0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 24);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 28) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for TrustedRequestHistory.Request(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25A69EDA4);
}

uint64_t sub_25A69EDA4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for TrustedRequest();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_25A6C73A0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 24);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_25A69EEB8()
{
  uint64_t result = type metadata accessor for TrustedRequest();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_25A6C73A0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t destroy for TrustedRequestHistory.Request.Node()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TrustedRequestHistory.Request.Node(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v6;
  uint64_t v7 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v7;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TrustedRequestHistory.Request.Node(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  return a1;
}

__n128 __swift_memcpy121_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(_OWORD *)(a1 + 105) = *(long long *)((char *)a2 + 105);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for TrustedRequestHistory.Request.Node(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrustedRequestHistory.Request.Node(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 121)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TrustedRequestHistory.Request.Node(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 120) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 121) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 121) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrustedRequestHistory.Request.Node()
{
  return &type metadata for TrustedRequestHistory.Request.Node;
}

uint64_t TC2RequestParameters.pipelineKind.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TC2RequestParameters.pipelineArguments.getter()
{
  return swift_bridgeObjectRetain();
}

PrivateCloudCompute::TC2RequestParameters __swiftcall TC2RequestParameters.init(pipelineKind:pipelineArguments:)(Swift::String pipelineKind, Swift::OpaquePointer pipelineArguments)
{
  *(Swift::String *)uint64_t v2 = pipelineKind;
  *(Swift::OpaquePointer *)(v2 + 16) = pipelineArguments;
  result.pipelineKind = pipelineKind;
  result.pipelineArguments = pipelineArguments;
  return result;
}

uint64_t static TC2RequestParameters.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_25A6C7A00() & 1) == 0) {
    return 0;
  }
  return sub_25A69F41C(v2, v3);
}

uint64_t sub_25A69F41C(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v27 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_25;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v11 >= v27) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v27) {
        return 1;
      }
      unint64_t v12 = *(void *)(v5 + 8 * v4);
      if (!v12)
      {
        int64_t v4 = v11 + 2;
        if (v11 + 2 >= v27) {
          return 1;
        }
        unint64_t v12 = *(void *)(v5 + 8 * v4);
        if (!v12)
        {
          int64_t v4 = v11 + 3;
          if (v11 + 3 >= v27) {
            return 1;
          }
          unint64_t v12 = *(void *)(v5 + 8 * v4);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v8 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_25:
    uint64_t v14 = 16 * v10;
    uint64_t v15 = (uint64_t *)(*(void *)(v3 + 48) + v14);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = (uint64_t *)(*(void *)(v3 + 56) + v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_25A6AF028(v16, v17);
    char v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v24 = (void *)(*(void *)(a2 + 56) + 16 * v21);
    if (*v24 == v20 && v24[1] == v19)
    {
      PrivateCloudCompute::TC2RequestParameters result = swift_bridgeObjectRelease();
    }
    else
    {
      char v26 = sub_25A6C7A00();
      PrivateCloudCompute::TC2RequestParameters result = swift_bridgeObjectRelease();
      if ((v26 & 1) == 0) {
        return 0;
      }
    }
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v27) {
    return 1;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v27) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_24;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t TC2RequestParameters.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  sub_25A6C74E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_25A69FE48(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25A69F6B4()
{
  if (*v0) {
    return 0xD000000000000011;
  }
  else {
    return 0x656E696C65706970;
  }
}

uint64_t sub_25A69F6FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25A6A03A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25A69F724(uint64_t a1)
{
  unint64_t v2 = sub_25A6A0010();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A69F760(uint64_t a1)
{
  unint64_t v2 = sub_25A6A0010();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TC2RequestParameters.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C520);
  uint64_t v10 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A6A0010();
  sub_25A6C7B00();
  char v13 = 0;
  sub_25A6C7960();
  if (!v2)
  {
    uint64_t v11 = v9;
    char v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C530);
    sub_25A6A0064(&qword_26A44C538);
    sub_25A6C79B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v4);
}

uint64_t TC2RequestParameters.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25A6C7AA0();
  swift_bridgeObjectRetain();
  sub_25A6C74E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_25A69FE48((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_25A6C7AE0();
}

uint64_t TC2RequestParameters.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C540);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A6A0010();
  sub_25A6C7AF0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v16 = 0;
  uint64_t v9 = sub_25A6C7890();
  uint64_t v11 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C530);
  char v15 = 1;
  sub_25A6A0064(&qword_26A44C548);
  swift_bridgeObjectRetain();
  sub_25A6C78E0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v12 = v14[1];
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v12;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25A69FC28@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return TC2RequestParameters.init(from:)(a1, a2);
}

uint64_t sub_25A69FC40(void *a1)
{
  return TC2RequestParameters.encode(to:)(a1);
}

uint64_t sub_25A69FC58(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_25A6C7A00() & 1) == 0) {
    return 0;
  }
  return sub_25A69F41C(v2, v3);
}

uint64_t sub_25A69FCCC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25A6C7AA0();
  swift_bridgeObjectRetain();
  sub_25A6C74E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_25A69FE48((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_25A6C7AE0();
}

uint64_t sub_25A69FD50(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  sub_25A6C74E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_25A69FE48(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25A69FDC8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25A6C7AA0();
  swift_bridgeObjectRetain();
  sub_25A6C74E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_25A69FE48((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_25A6C7AE0();
}

uint64_t sub_25A69FE48(uint64_t a1, uint64_t a2)
{
  uint64_t v12 = a2 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  uint64_t v4 = v3 & *(void *)(a2 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  int64_t v8 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    int64_t v9 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v9 >= v5) {
      goto LABEL_19;
    }
    uint64_t v10 = *(void *)(v12 + 8 * v9);
    ++v8;
    if (!v10)
    {
      int64_t v8 = v9 + 1;
      if (v9 + 1 >= v5) {
        goto LABEL_19;
      }
      uint64_t v10 = *(void *)(v12 + 8 * v8);
      if (!v10) {
        break;
      }
    }
LABEL_18:
    uint64_t v4 = (v10 - 1) & v10;
LABEL_5:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25A6C74E0();
    swift_bridgeObjectRelease();
    sub_25A6C74E0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_25A6C7AE0();
    v7 ^= result;
  }
  int64_t v11 = v9 + 2;
  if (v11 >= v5)
  {
LABEL_19:
    swift_release();
    return sub_25A6C7AB0();
  }
  uint64_t v10 = *(void *)(v12 + 8 * v11);
  if (v10)
  {
    int64_t v8 = v11;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v8 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v8 >= v5) {
      goto LABEL_19;
    }
    uint64_t v10 = *(void *)(v12 + 8 * v8);
    ++v11;
    if (v10) {
      goto LABEL_18;
    }
  }
LABEL_21:
  __break(1u);
  return result;
}

unint64_t sub_25A6A0010()
{
  unint64_t result = qword_26A44C528;
  if (!qword_26A44C528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C528);
  }
  return result;
}

uint64_t sub_25A6A0064(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A44C530);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25A6A00CC()
{
  unint64_t result = qword_26B329590;
  if (!qword_26B329590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B329590);
  }
  return result;
}

void *assignWithCopy for TC2RequestParameters(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TC2RequestParameters()
{
  return &type metadata for TC2RequestParameters;
}

unsigned char *storeEnumTagSinglePayload for TC2RequestParameters.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A6A0264);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TC2RequestParameters.CodingKeys()
{
  return &type metadata for TC2RequestParameters.CodingKeys;
}

unint64_t sub_25A6A02A0()
{
  unint64_t result = qword_26A44C550;
  if (!qword_26A44C550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C550);
  }
  return result;
}

unint64_t sub_25A6A02F8()
{
  unint64_t result = qword_26A44C558;
  if (!qword_26A44C558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C558);
  }
  return result;
}

unint64_t sub_25A6A0350()
{
  unint64_t result = qword_26A44C560;
  if (!qword_26A44C560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C560);
  }
  return result;
}

uint64_t sub_25A6A03A4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656E696C65706970 && a2 == 0xEC000000646E694BLL;
  if (v2 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000025A6D04B0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_25A6C7A00();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25A6A04AC()
{
  return sub_25A6C7AE0();
}

uint64_t TC2Environment.name.getter()
{
  uint64_t result = 0x69746375646F7270;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7972726163;
      break;
    case 2:
      uint64_t result = 0x676E6967617473;
      break;
    case 3:
      uint64_t result = 24945;
      break;
    case 4:
      uint64_t result = 1718773104;
      break;
    case 5:
      uint64_t result = 7759204;
      break;
    case 6:
      uint64_t result = 0x6172656D65687065;
      break;
    default:
      return result;
  }
  return result;
}

PrivateCloudCompute::TC2EnvironmentNames_optional __swiftcall TC2EnvironmentNames.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_25A6C7820();
  result.value = swift_bridgeObjectRelease();
  char v5 = 7;
  if (v3 < 7) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

uint64_t TC2EnvironmentNames.rawValue.getter()
{
  uint64_t result = 0x69746375646F7270;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7972726163;
      break;
    case 2:
      uint64_t result = 0x676E6967617473;
      break;
    case 3:
      uint64_t result = 24945;
      break;
    case 4:
      uint64_t result = 1718773104;
      break;
    case 5:
      uint64_t result = 7759204;
      break;
    case 6:
      uint64_t result = 0x6172656D65687065;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25A6A07B4(unsigned __int8 *a1, char *a2)
{
  return sub_25A6C4894(*a1, *a2);
}

uint64_t sub_25A6A07C0()
{
  return sub_25A6A04AC();
}

uint64_t sub_25A6A07CC()
{
  sub_25A6C74E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25A6A08CC()
{
  return sub_25A6A04AC();
}

PrivateCloudCompute::TC2EnvironmentNames_optional sub_25A6A08D4(Swift::String *a1)
{
  return TC2EnvironmentNames.init(rawValue:)(*a1);
}

void sub_25A6A08E0(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEA00000000006E6FLL;
  uint64_t v3 = 0x69746375646F7270;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x7972726163;
      goto LABEL_3;
    case 2:
      *a1 = 0x676E6967617473;
      a1[1] = 0xE700000000000000;
      break;
    case 3:
      *a1 = 24945;
      a1[1] = 0xE200000000000000;
      break;
    case 4:
      *a1 = 1718773104;
      a1[1] = 0xE400000000000000;
      break;
    case 5:
      *a1 = 7759204;
      a1[1] = 0xE300000000000000;
      break;
    case 6:
      *a1 = 0x6172656D65687065;
      a1[1] = 0xE90000000000006CLL;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

PrivateCloudCompute::TC2Environment_optional __swiftcall TC2Environment.init(name:)(Swift::String name)
{
  unint64_t v2 = v1;
  BOOL v3 = name._countAndFlagsBits == 0x69746375646F7270 && name._object == (void *)0xEA00000000006E6FLL;
  if (v3 || (object = name._object, uint64_t countAndFlagsBits = name._countAndFlagsBits, (sub_25A6C7A00() & 1) != 0))
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else if (countAndFlagsBits == 0x7972726163 && object == (void *)0xE500000000000000 || (sub_25A6C7A00() & 1) != 0)
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 1;
  }
  else if (countAndFlagsBits == 0x676E6967617473 && object == (void *)0xE700000000000000 {
         || (sub_25A6C7A00() & 1) != 0)
  }
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 2;
  }
  else if (countAndFlagsBits == 24945 && object == (void *)0xE200000000000000 || (sub_25A6C7A00() & 1) != 0)
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 3;
  }
  else if (countAndFlagsBits == 1718773104 && object == (void *)0xE400000000000000 || (sub_25A6C7A00() & 1) != 0)
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 4;
  }
  else if (countAndFlagsBits == 7759204 && object == (void *)0xE300000000000000 || (sub_25A6C7A00() & 1) != 0)
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 5;
  }
  else if (countAndFlagsBits == 0x6172656D65687065 && object == (void *)0xE90000000000006CLL)
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 6;
  }
  else
  {
    char v8 = sub_25A6C7A00();
    result.value = swift_bridgeObjectRelease();
    if (v8) {
      char v7 = 6;
    }
    else {
      char v7 = 7;
    }
  }
  char *v2 = v7;
  return result;
}

unint64_t TC2Environment.ropesHostname.getter()
{
  unint64_t result = 0x70612E7365706F72;
  switch(*v0)
  {
    case 2:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0xD000000000000019;
      break;
    case 5:
      unint64_t result = 0xD000000000000018;
      break;
    case 6:
      unint64_t result = 0xD00000000000001ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t TC2Environment.ropesUrl.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B329B10);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  char v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  int64_t v9 = (char *)&v39 - v8;
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v39 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  char v15 = (char *)&v39 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v39 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  unint64_t v21 = (char *)&v39 - v20;
  MEMORY[0x270FA5388](v19);
  char v23 = (char *)&v39 - v22;
  switch(*v1)
  {
    case 1:
      sub_25A6C72A0();
      uint64_t v27 = sub_25A6C72B0();
      uint64_t v28 = *(void *)(v27 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v21, 1, v27) == 1) {
        goto LABEL_18;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v28 + 32))(a1, v21, v27);
      break;
    case 2:
      sub_25A6C72A0();
      uint64_t v29 = sub_25A6C72B0();
      uint64_t v30 = *(void *)(v29 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v18, 1, v29) == 1) {
        goto LABEL_19;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v30 + 32))(a1, v18, v29);
      break;
    case 3:
      sub_25A6C72A0();
      uint64_t v31 = sub_25A6C72B0();
      uint64_t v32 = *(void *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v15, 1, v31) == 1) {
        goto LABEL_20;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v32 + 32))(a1, v15, v31);
      break;
    case 4:
      sub_25A6C72A0();
      uint64_t v33 = sub_25A6C72B0();
      uint64_t v34 = *(void *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v12, 1, v33) == 1) {
        goto LABEL_21;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v34 + 32))(a1, v12, v33);
      break;
    case 5:
      sub_25A6C72A0();
      uint64_t v35 = sub_25A6C72B0();
      uint64_t v36 = *(void *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v9, 1, v35) == 1) {
        goto LABEL_22;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v36 + 32))(a1, v9, v35);
      break;
    case 6:
      sub_25A6C72A0();
      uint64_t v37 = sub_25A6C72B0();
      uint64_t v38 = *(void *)(v37 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v6, 1, v37) == 1) {
        goto LABEL_23;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v38 + 32))(a1, v6, v37);
      break;
    default:
      sub_25A6C72A0();
      uint64_t v24 = sub_25A6C72B0();
      uint64_t v25 = *(void *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
      {
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A6A132CLL);
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v25 + 32))(a1, v23, v24);
      break;
  }
  return result;
}

uint64_t TC2Environment.configUrl.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B329B10);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  char v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  int64_t v9 = (char *)&v39 - v8;
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v39 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  char v15 = (char *)&v39 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v39 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  unint64_t v21 = (char *)&v39 - v20;
  MEMORY[0x270FA5388](v19);
  char v23 = (char *)&v39 - v22;
  switch(*v1)
  {
    case 1:
      sub_25A6C72A0();
      uint64_t v27 = sub_25A6C72B0();
      uint64_t v28 = *(void *)(v27 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v21, 1, v27) == 1) {
        goto LABEL_18;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v28 + 32))(a1, v21, v27);
      break;
    case 2:
      sub_25A6C72A0();
      uint64_t v29 = sub_25A6C72B0();
      uint64_t v30 = *(void *)(v29 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v18, 1, v29) == 1) {
        goto LABEL_19;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v30 + 32))(a1, v18, v29);
      break;
    case 3:
      sub_25A6C72A0();
      uint64_t v31 = sub_25A6C72B0();
      uint64_t v32 = *(void *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v15, 1, v31) == 1) {
        goto LABEL_20;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v32 + 32))(a1, v15, v31);
      break;
    case 4:
      sub_25A6C72A0();
      uint64_t v33 = sub_25A6C72B0();
      uint64_t v34 = *(void *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v12, 1, v33) == 1) {
        goto LABEL_21;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v34 + 32))(a1, v12, v33);
      break;
    case 5:
      sub_25A6C72A0();
      uint64_t v35 = sub_25A6C72B0();
      uint64_t v36 = *(void *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v9, 1, v35) == 1) {
        goto LABEL_22;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v36 + 32))(a1, v9, v35);
      break;
    case 6:
      sub_25A6C72A0();
      uint64_t v37 = sub_25A6C72B0();
      uint64_t v38 = *(void *)(v37 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v6, 1, v37) == 1) {
        goto LABEL_23;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v38 + 32))(a1, v6, v37);
      break;
    default:
      sub_25A6C72A0();
      uint64_t v24 = sub_25A6C72B0();
      uint64_t v25 = *(void *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
      {
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A6A18F8);
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v25 + 32))(a1, v23, v24);
      break;
  }
  return result;
}

BOOL TC2Environment.forceOHTTP.getter()
{
  return *v0 < 2u;
}

BOOL static TC2Environment.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TC2Environment.hash(into:)()
{
  return sub_25A6C7AB0();
}

uint64_t TC2Environment.hashValue.getter()
{
  return sub_25A6C7AE0();
}

unint64_t sub_25A6A19B0()
{
  unint64_t result = qword_26A44C568;
  if (!qword_26A44C568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C568);
  }
  return result;
}

unint64_t sub_25A6A1A08()
{
  unint64_t result = qword_26A44C570;
  if (!qword_26A44C570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C570);
  }
  return result;
}

ValueMetadata *type metadata accessor for TC2EnvironmentNames()
{
  return &type metadata for TC2EnvironmentNames;
}

unsigned char *_s19PrivateCloudCompute19TC2EnvironmentNamesOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A6A1B40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TC2Environment()
{
  return &type metadata for TC2Environment;
}

uint64_t tc2Logger(forCategory:)()
{
  TC2LogCategory.rawValue.getter();
  return sub_25A6C7420();
}

PrivateCloudCompute::TC2LogCategory_optional __swiftcall TC2LogCategory.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_25A6C7A20();
  result.value = swift_bridgeObjectRelease();
  char v5 = 19;
  if (v3 < 0x13) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

unint64_t TC2LogCategory.rawValue.getter()
{
  unint64_t result = 0x6E6F6D656144;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x5264657473757254;
      break;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0x746E65696C43;
      break;
    case 4:
      unint64_t result = 0x72756769666E6F43;
      break;
    case 5:
      unint64_t result = 1819242324;
      break;
    case 6:
      unint64_t result = 0x656C756465686353;
      break;
    case 7:
      unint64_t result = 0x6B726F7774654ELL;
      break;
    case 8:
    case 0xF:
      unint64_t result = 0xD000000000000010;
      break;
    case 9:
      unint64_t result = 0xD000000000000013;
      break;
    case 0xA:
      unint64_t result = 0x7473655474696E55;
      break;
    case 0xB:
      unint64_t result = 0x6863746566657250;
      break;
    case 0xC:
      unint64_t result = 0x786F62646E6153;
      break;
    case 0xD:
      unint64_t result = 0x655263697274654DLL;
      break;
    case 0xE:
      unint64_t result = 0x696D694C65746152;
      break;
    case 0x10:
      unint64_t result = 0xD000000000000012;
      break;
    case 0x11:
      unint64_t result = 0xD000000000000018;
      break;
    case 0x12:
      unint64_t result = 0x4C74736575716552;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25A6A1EB0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_25A6C4B70(*a1, *a2);
}

unint64_t sub_25A6A1EC0()
{
  unint64_t result = qword_26A44C578;
  if (!qword_26A44C578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C578);
  }
  return result;
}

uint64_t sub_25A6A1F14()
{
  return sub_25A6C7AE0();
}

uint64_t sub_25A6A1F7C()
{
  TC2LogCategory.rawValue.getter();
  sub_25A6C74E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25A6A1FE0()
{
  return sub_25A6C7AE0();
}

PrivateCloudCompute::TC2LogCategory_optional sub_25A6A2044(Swift::String *a1)
{
  return TC2LogCategory.init(rawValue:)(*a1);
}

unint64_t sub_25A6A2050@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = TC2LogCategory.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for TC2LogCategory(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEE) {
    goto LABEL_17;
  }
  if (a2 + 18 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 18) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 18;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 18;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 18;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x13;
  int v8 = v6 - 19;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TC2LogCategory(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 18 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 18) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xED)
  {
    unsigned int v6 = ((a2 - 238) >> 8) + 1;
    *unint64_t result = a2 + 18;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A6A21D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 18;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TC2LogCategory()
{
  return &type metadata for TC2LogCategory;
}

uint64_t sub_25A6A220C()
{
  sub_25A6C7250();
  swift_allocObject();
  sub_25A6C7240();
  type metadata accessor for TrustedCloudComputeError(0);
  sub_25A6A5D58(&qword_26A44C620, (void (*)(uint64_t))type metadata accessor for TrustedCloudComputeError);
  uint64_t v0 = sub_25A6C7230();
  swift_release();
  return v0;
}

uint64_t sub_25A6A2394()
{
  sub_25A6C7250();
  swift_allocObject();
  sub_25A6C7240();
  type metadata accessor for TrustedCloudComputeRateLimit();
  sub_25A6A5D58(&qword_26A44C618, (void (*)(uint64_t))type metadata accessor for TrustedCloudComputeRateLimit);
  uint64_t v0 = sub_25A6C7230();
  swift_release();
  return v0;
}

uint64_t sub_25A6A2518()
{
  sub_25A6C7250();
  swift_allocObject();
  sub_25A6C7240();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C2D8);
  sub_25A6A5CB4();
  uint64_t v0 = sub_25A6C7230();
  swift_release();
  return v0;
}

uint64_t sub_25A6A2670()
{
  sub_25A6C7250();
  swift_allocObject();
  sub_25A6C7240();
  sub_25A6A671C();
  uint64_t v0 = sub_25A6C7230();
  swift_release();
  return v0;
}

uint64_t sub_25A6A27C4()
{
  sub_25A6C7250();
  swift_allocObject();
  sub_25A6C7240();
  sub_25A6A5C60();
  uint64_t v0 = sub_25A6C7230();
  swift_release();
  return v0;
}

uint64_t sub_25A6A2934()
{
  sub_25A6C7250();
  swift_allocObject();
  sub_25A6C7240();
  type metadata accessor for TC2TrustedRequestMetadata(0);
  sub_25A6A5D58(&qword_26A44C600, (void (*)(uint64_t))type metadata accessor for TC2TrustedRequestMetadata);
  uint64_t v0 = sub_25A6C7230();
  swift_release();
  return v0;
}

uint64_t sub_25A6A2AB8(uint64_t a1)
{
  return sub_25A6A2B28(a1, (void (*)(void))sub_25A6A5C0C);
}

uint64_t sub_25A6A2AF0(uint64_t a1)
{
  return sub_25A6A2B28(a1, (void (*)(void))sub_25A6A5BB8);
}

uint64_t sub_25A6A2B28(uint64_t a1, void (*a2)(void))
{
  sub_25A6C7250();
  swift_allocObject();
  sub_25A6C7240();
  a2();
  uint64_t v3 = sub_25A6C7230();
  swift_release();
  return v3;
}

uint64_t sub_25A6A2C80()
{
  sub_25A6C7250();
  swift_allocObject();
  sub_25A6C7240();
  type metadata accessor for TC2RequestState();
  sub_25A6A5D58(&qword_26A44C5E8, (void (*)(uint64_t))type metadata accessor for TC2RequestState);
  uint64_t v0 = sub_25A6C7230();
  swift_release();
  return v0;
}

uint64_t TrustedCloudComputeClient.__allocating_init(configuration:)(unsigned int *a1)
{
  uint64_t v2 = swift_allocObject();
  TrustedCloudComputeClient.init(configuration:)(a1);
  return v2;
}

uint64_t TrustedCloudComputeClient.init(configuration:)(unsigned int *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_25A6C7430();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  BOOL v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = *a1;
  unsigned __int8 v9 = *((unsigned char *)a1 + 4);
  sub_25A6C7420();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v5 + 32))(v2 + OBJC_IVAR____TtC19PrivateCloudCompute25TrustedCloudComputeClient_logger, v7, v4);
  type metadata accessor for TC2Client();
  uint64_t v10 = swift_allocObject();
  type metadata accessor for XPCWrapper();
  swift_allocObject();
  v13[12] = v9;
  *(void *)(v10 + 16) = sub_25A6A7DF8(v8 | ((unint64_t)v9 << 32));
  *(void *)(v2 + OBJC_IVAR____TtC19PrivateCloudCompute25TrustedCloudComputeClient_client) = v10;
  uint64_t v11 = v2 + OBJC_IVAR____TtC19PrivateCloudCompute25TrustedCloudComputeClient_configuration;
  *(_DWORD *)uint64_t v11 = v8;
  *(unsigned char *)(v11 + 4) = v9;
  return v2;
}

uint64_t TrustedCloudComputeClient.withTrustedRequest<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[16] = a4;
  v5[17] = v4;
  v5[14] = a2;
  v5[15] = a3;
  v5[13] = a1;
  v5[18] = type metadata accessor for TrustedRequest();
  v5[19] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25A6A3084, 0, 0);
}

uint64_t sub_25A6A3084()
{
  uint64_t v21 = v0;
  sub_25A6A5A14(*(void *)(v0 + 112), *(void *)(v0 + 152), (uint64_t (*)(void))type metadata accessor for TrustedRequest);
  uint64_t v1 = sub_25A6C7410();
  os_log_type_t v2 = sub_25A6C7670();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void *)(v0 + 152);
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v20 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    sub_25A6C73D0();
    sub_25A6A5D58(&qword_26A44C590, MEMORY[0x263F07508]);
    uint64_t v6 = sub_25A6C79D0();
    *(void *)(v0 + 96) = sub_25A6A5940(v6, v7, &v20);
    sub_25A6C76E0();
    swift_bridgeObjectRelease();
    sub_25A6A64F8(v3, (uint64_t (*)(void))type metadata accessor for TrustedRequest);
    _os_log_impl(&dword_25A668000, v1, v2, "%s starting trusted request", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261142420](v5, -1, -1);
    MEMORY[0x261142420](v4, -1, -1);
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 152);

    sub_25A6A64F8(v8, (uint64_t (*)(void))type metadata accessor for TrustedRequest);
  }
  unsigned __int8 v9 = *(int **)(v0 + 144);
  uint64_t v10 = *(void *)(v0 + 112);
  *(void *)(v0 + 160) = *(void *)(*(void *)(*(void *)(v0 + 136)
                                                + OBJC_IVAR____TtC19PrivateCloudCompute25TrustedCloudComputeClient_client)
                                    + 16);
  if (*(void *)(v10 + v9[6]))
  {
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_retain();
    swift_bridgeObjectRetain();
    sub_25A68CA18(MEMORY[0x263F8EE78]);
    unsigned __int8 v9 = *(int **)(v0 + 144);
    uint64_t v10 = *(void *)(v0 + 112);
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_25A6A2670();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 168) = v11;
  *(void *)(v0 + 176) = v13;
  uint64_t v14 = (void *)(v10 + v9[7]);
  *(void *)(v0 + 184) = *v14;
  *(void *)(v0 + 192) = v14[1];
  char v15 = (void *)(v10 + v9[8]);
  *(void *)(v0 + 200) = *v15;
  *(void *)(v0 + 208) = v15[1];
  uint64_t v16 = (void *)(v10 + v9[9]);
  *(void *)(v0 + 216) = *v16;
  *(void *)(v0 + 224) = v16[1];
  *(_DWORD *)(v0 + 328) = v9[10];
  type metadata accessor for XPCWrapper();
  *(void *)(v0 + 232) = sub_25A6A5D58(&qword_26B329E70, (void (*)(uint64_t))type metadata accessor for XPCWrapper);
  uint64_t v18 = sub_25A6C75D0();
  *(void *)(v0 + 240) = v18;
  *(void *)(v0 + 248) = v17;
  return MEMORY[0x270FA2498](sub_25A6A3400, v18, v17);
}

uint64_t sub_25A6A3400(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, void (*a6)(uint64_t a1), uint64_t a7, uint64_t a8)
{
  uint64_t v9 = *(void *)(v8 + 160);
  uint64_t v10 = *(void *)(v9 + 16);
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = *(void *)(v8 + 224);
    uint64_t v22 = *(void *)(v8 + 232);
    uint64_t v12 = *(void *)(v8 + 216);
    long long v20 = *(_OWORD *)(v8 + 184);
    long long v21 = *(_OWORD *)(v8 + 200);
    uint64_t v14 = *(void *)(v8 + 168);
    uint64_t v13 = *(void *)(v8 + 176);
    uint64_t v15 = *(void *)(v8 + 112);
    uint64_t v16 = v15 + *(int *)(v8 + 328);
    *(void *)(v9 + 16) = v10 + 1;
    uint64_t v17 = swift_task_alloc();
    *(void *)(v8 + 256) = v17;
    *(void *)(v17 + 16) = v9;
    *(void *)(v17 + 24) = v10;
    *(void *)(v17 + 32) = v14;
    *(void *)(v17 + 40) = v13;
    *(void *)(v17 + 48) = v15;
    *(_OWORD *)(v17 + 56) = v20;
    *(_OWORD *)(v17 + 72) = v21;
    *(void *)(v17 + 88) = v12;
    *(void *)(v17 + 96) = v11;
    *(void *)(v17 + 104) = v16;
    uint64_t v18 = (void *)swift_task_alloc();
    *(void *)(v8 + 264) = v18;
    a8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B329F60);
    *uint64_t v18 = v8;
    v18[1] = sub_25A6A3574;
    a5 = 0x800000025A6D0840;
    a6 = sub_25A6A58FC;
    a1 = v8 + 80;
    a3 = v22;
    a2 = v9;
    a4 = 0xD00000000000007ALL;
    a7 = v17;
  }
  return MEMORY[0x270FA2360](a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_25A6A3574()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 272) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 240);
    uint64_t v4 = *(void *)(v2 + 248);
    uint64_t v5 = sub_25A6A399C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 240);
    uint64_t v4 = *(void *)(v2 + 248);
    uint64_t v5 = sub_25A6A3690;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_25A6A3690()
{
  sub_25A68F294(v0[21], v0[22]);
  uint64_t v1 = v0[11];
  v0[35] = v0[10];
  v0[36] = v1;
  return MEMORY[0x270FA2498](sub_25A6A3700, 0, 0);
}

uint64_t sub_25A6A3700()
{
  uint64_t v1 = v0[35];
  uint64_t v2 = v0[36];
  uint64_t v3 = v0[20];
  uint64_t v4 = (int *)v0[15];
  sub_25A6C7220();
  swift_allocObject();
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v5 = sub_25A6C7210();
  v0[37] = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C588);
  uint64_t v6 = swift_allocObject();
  v0[38] = v6;
  *(unsigned char *)(v6 + 16) = 0;
  v0[2] = v2;
  v0[3] = v1;
  v0[4] = v3;
  v0[5] = v5;
  v0[6] = v2;
  v0[7] = v1;
  v0[8] = v3;
  v0[9] = v6;
  uint64_t v10 = (int *)((char *)v4 + *v4);
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[39] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_25A6A3888;
  uint64_t v8 = v0[13];
  return ((uint64_t (*)(uint64_t, void *, void *))v10)(v8, v0 + 2, v0 + 6);
}

uint64_t sub_25A6A3888()
{
  *(void *)(*(void *)v1 + 320) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_25A6A3AD4;
  }
  else {
    uint64_t v2 = sub_25A6A3A20;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25A6A399C()
{
  sub_25A68F294(v0[21], v0[22]);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_25A6A3A20()
{
  sub_25A6A3B80(v0[17], v0[14]);
  swift_unknownObjectRelease_n();
  swift_release_n();
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_25A6A3AD4()
{
  sub_25A6A3B80(v0[17], v0[14]);
  swift_unknownObjectRelease_n();
  swift_release_n();
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

void sub_25A6A3B80(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for TrustedRequest();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25A6A5A14(a2, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for TrustedRequest);
  uint64_t v6 = sub_25A6C7410();
  os_log_type_t v7 = sub_25A6C7670();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v13 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    sub_25A6C73D0();
    sub_25A6A5D58(&qword_26A44C590, MEMORY[0x263F07508]);
    uint64_t v10 = sub_25A6C79D0();
    uint64_t v12 = sub_25A6A5940(v10, v11, &v13);
    sub_25A6C76E0();
    swift_bridgeObjectRelease();
    sub_25A6A64F8((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for TrustedRequest);
    _os_log_impl(&dword_25A668000, v6, v7, "%s finished trusted request", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261142420](v9, -1, -1);
    MEMORY[0x261142420](v8, -1, -1);
  }
  else
  {

    sub_25A6A64F8((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for TrustedRequest);
  }
}

uint64_t TrustedCloudComputeClient.trustedRequestHistory()(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  v2[5] = *(void *)(type metadata accessor for TC2TrustedRequestMetadata(0) - 8);
  void v2[6] = swift_task_alloc();
  v2[7] = *(void *)(type metadata accessor for TrustedRequestHistory.Request() - 8);
  v2[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25A6A3ECC, 0, 0);
}

uint64_t sub_25A6A3ECC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25A6A3F78;
  return TC2Client.requestMetadata()(v0 + 16);
}

uint64_t sub_25A6A3F78()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25A6A4074, 0, 0);
}

uint64_t sub_25A6A4074()
{
  uint64_t v23 = v0;
  uint64_t result = v0[2];
  if (!result)
  {
    type metadata accessor for TrustedCloudComputeError(0);
    sub_25A6A5D58(&qword_26A44C3B0, (void (*)(uint64_t))type metadata accessor for TrustedCloudComputeError);
    swift_allocError();
    TrustedCloudComputeError.init(file:line:message:)(0xD00000000000001DLL, 0x800000025A6D0900, v14);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = (uint64_t (*)(void))v0[1];
LABEL_17:
    return v15();
  }
  uint64_t v20 = *(void *)(result + 16);
  if (!v20)
  {
    unint64_t v4 = MEMORY[0x263F8EE78];
LABEL_16:
    uint64_t v16 = (unint64_t *)v0[3];
    swift_bridgeObjectRelease();
    *uint64_t v16 = v4;
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = (uint64_t (*)(void))v0[1];
    goto LABEL_17;
  }
  unint64_t v2 = 0;
  uint64_t v3 = v0[7];
  uint64_t v17 = v0[5];
  uint64_t v19 = result + 32;
  unint64_t v4 = MEMORY[0x263F8EE78];
  uint64_t v18 = v0[2];
  while (v2 < *(void *)(result + 16))
  {
    uint64_t v5 = *(void *)(v19 + 8 * v2);
    uint64_t v6 = *(void *)(v5 + 16);
    if (v6)
    {
      uint64_t v7 = v5 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
      swift_bridgeObjectRetain();
      uint64_t v8 = *(void *)(v17 + 72);
      do
      {
        uint64_t v9 = v0[8];
        uint64_t v10 = v0[6];
        sub_25A6A5A14(v7, v10, type metadata accessor for TC2TrustedRequestMetadata);
        int v21 = 0;
        char v22 = 1;
        sub_25A6A435C(v10, &v21, v9);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v4 = sub_25A682C20(0, *(void *)(v4 + 16) + 1, 1, v4);
        }
        unint64_t v12 = *(void *)(v4 + 16);
        unint64_t v11 = *(void *)(v4 + 24);
        if (v12 >= v11 >> 1) {
          unint64_t v4 = sub_25A682C20(v11 > 1, v12 + 1, 1, v4);
        }
        uint64_t v13 = v0[8];
        *(void *)(v4 + 16) = v12 + 1;
        sub_25A6A5E70(v13, v4+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v12, (uint64_t (*)(void))type metadata accessor for TrustedRequestHistory.Request);
        v7 += v8;
        --v6;
      }
      while (v6);
      swift_bridgeObjectRelease();
      uint64_t result = v18;
    }
    if (++v2 == v20) {
      goto LABEL_16;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_25A6A435C@<X0>(uint64_t a1@<X0>, int *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v111 = a3;
  uint64_t v5 = sub_25A6C73A0();
  uint64_t v128 = *(void *)(v5 - 8);
  uint64_t v129 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v127 = (char *)&v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C438);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v105 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v141 = v9;
  uint64_t v10 = sub_25A6C73D0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v105 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v140 = v13;
  uint64_t v14 = type metadata accessor for TrustedRequest();
  uint64_t v15 = (int *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v105 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v126 = (uint64_t)&v105 - v19;
  int v109 = *a2;
  int v108 = *((unsigned __int8 *)a2 + 4);
  uint64_t v20 = (int *)type metadata accessor for TC2TrustedRequestMetadata(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1 + v20[5], v10);
  int v21 = (uint64_t *)(a1 + v20[12]);
  uint64_t v22 = *v21;
  uint64_t v23 = v21[1];
  *(void *)&long long v139 = *(void *)(a1 + v20[13]);
  uint64_t v24 = v20[9];
  uint64_t v25 = (uint64_t *)(a1 + v20[8]);
  uint64_t v26 = *v25;
  uint64_t v134 = v25[1];
  uint64_t v135 = v26;
  uint64_t v27 = *(void *)(a1 + v24 + 8);
  uint64_t v137 = *(void *)(a1 + v24);
  *(void *)&long long v138 = v22;
  uint64_t v136 = v27;
  sub_25A6A5DA0(a1 + v20[10], (uint64_t)v9);
  uint64_t v28 = v15[8];
  uint64_t v29 = &v18[v15[9]];
  uint64_t v30 = &v18[v15[10]];
  *(void *)uint64_t v30 = 0;
  *((void *)v30 + 1) = 0;
  uint64_t v31 = &v18[v15[11]];
  uint64_t v32 = (uint64_t)&v18[v15[12]];
  uint64_t v132 = v28;
  uint64_t v133 = v32;
  (*(void (**)(void))(v11 + 56))();
  (*(void (**)(char *, void, uint64_t))(v11 + 32))(v18, v140, v10);
  uint64_t v33 = &v18[v15[7]];
  *(void *)uint64_t v33 = v138;
  *((void *)v33 + 1) = v23;
  *(void *)&v18[v132] = v139;
  uint64_t v34 = v134;
  *(void *)uint64_t v29 = v135;
  *((void *)v29 + 1) = v34;
  uint64_t v35 = v136;
  *(void *)uint64_t v31 = v137;
  *((void *)v31 + 1) = v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25A6A5E08(v141, v133);
  sub_25A6A5E70((uint64_t)v18, v126, (uint64_t (*)(void))type metadata accessor for TrustedRequest);
  (*(void (**)(char *, uint64_t, uint64_t))(v128 + 16))(v127, a1 + v20[7], v129);
  uint64_t v36 = *v25;
  uint64_t v37 = v25[1];
  uint64_t v38 = (uint64_t *)(a1 + v20[11]);
  uint64_t v39 = *v38;
  uint64_t v40 = v38[1];
  uint64_t v41 = (uint64_t *)(a1 + v20[14]);
  uint64_t v42 = *v41;
  uint64_t v43 = v41[1];
  uint64_t v44 = (uint64_t *)(a1 + v20[15]);
  uint64_t v45 = *v44;
  uint64_t v46 = v44[1];
  uint64_t v47 = (uint64_t *)(a1 + v20[16]);
  uint64_t v48 = *v47;
  uint64_t v49 = v47[1];
  uint64_t v50 = (uint64_t *)(a1 + v20[17]);
  uint64_t v51 = *v50;
  int v52 = *((unsigned __int8 *)v50 + 8);
  uint64_t v53 = (uint64_t *)(a1 + v20[6]);
  uint64_t v54 = *v53;
  uint64_t v55 = v53[1];
  uint64_t v56 = v20[19];
  uint64_t v57 = (uint64_t *)(a1 + v20[18]);
  uint64_t v58 = *v57;
  uint64_t v59 = v57[1];
  uint64_t v110 = a1;
  uint64_t v60 = *(void *)(a1 + v56);
  int64_t v61 = *(void *)(v60 + 16);
  uint64_t v125 = v36;
  uint64_t v124 = v39;
  uint64_t v123 = v40;
  uint64_t v122 = v46;
  int v121 = v52;
  uint64_t v120 = v54;
  uint64_t v119 = v55;
  uint64_t v118 = v45;
  uint64_t v117 = v51;
  uint64_t v116 = v49;
  uint64_t v115 = v59;
  uint64_t v114 = v42;
  uint64_t v113 = v48;
  uint64_t v112 = v58;
  if (v61)
  {
    uint64_t v143 = MEMORY[0x263F8EE78];
    uint64_t v107 = v37;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v106 = v43;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = sub_25A6A64D8(0, v61, 0);
    uint64_t v63 = v143;
    uint64_t v105 = v60;
    uint64_t v64 = (unsigned __int8 *)(v60 + 152);
    while (1)
    {
      uint64_t v65 = *((void *)v64 - 11);
      long long v66 = *(_OWORD *)(v64 - 72);
      if ((*((void *)v64 - 9) | v65) < 0) {
        break;
      }
      int64_t v131 = v61;
      long long v141 = v66;
      uint64_t v67 = *((void *)v64 - 14);
      uint64_t v135 = *((void *)v64 - 15);
      uint64_t v68 = *((void *)v64 - 12);
      uint64_t v133 = *((void *)v64 - 13);
      uint64_t v134 = v67;
      LODWORD(v136) = *(v64 - 80);
      long long v69 = *(_OWORD *)(v64 - 56);
      long long v70 = *(_OWORD *)(v64 - 40);
      long long v71 = *(_OWORD *)(v64 - 24);
      uint64_t v72 = *((void *)v64 - 1);
      LODWORD(v137) = *v64;
      long long v139 = v70;
      long long v140 = v69;
      long long v138 = v71;
      unint64_t v73 = *(void *)(v63 + 16);
      unint64_t v130 = *(void *)(v63 + 24);
      uint64_t v143 = v63;
      uint64_t v74 = v63;
      swift_bridgeObjectRetain();
      uint64_t v132 = v68;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRetain();
      uint64_t v63 = v74;
      if (v73 >= v130 >> 1)
      {
        uint64_t result = sub_25A6A64D8(v130 > 1, v73 + 1, 1);
        uint64_t v63 = v143;
      }
      v64 += 128;
      *(void *)(v63 + 16) = v73 + 1;
      uint64_t v75 = v63 + (v73 << 7);
      uint64_t v76 = v134;
      *(void *)(v75 + 32) = v135;
      *(void *)(v75 + 40) = v76;
      int64_t v78 = v131;
      uint64_t v77 = v132;
      *(void *)(v75 + 48) = v133;
      *(void *)(v75 + 56) = v77;
      *(void *)(v75 + 64) = v65;
      *(unsigned char *)(v75 + 72) = v136;
      LODWORD(v77) = *(_DWORD *)&v142[3];
      *(_DWORD *)(v75 + 73) = *(_DWORD *)v142;
      *(_DWORD *)(v75 + 76) = v77;
      long long v79 = v140;
      *(_OWORD *)(v75 + 80) = v141;
      *(_OWORD *)(v75 + 96) = v79;
      long long v80 = v138;
      *(_OWORD *)(v75 + 112) = v139;
      *(_OWORD *)(v75 + 128) = v80;
      *(void *)(v75 + 144) = v72;
      *(unsigned char *)(v75 + 152) = v137;
      int64_t v61 = v78 - 1;
      if (!v61)
      {
        uint64_t v81 = v111;
        uint64_t v83 = v128;
        uint64_t v82 = v129;
        uint64_t v84 = v127;
        uint64_t v85 = v110;
        int v86 = v109;
        char v87 = v108;
        uint64_t v88 = v126;
        uint64_t v89 = v107;
        uint64_t v43 = v106;
        *(void *)&long long v141 = v63;
        goto LABEL_9;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    *(void *)&long long v141 = MEMORY[0x263F8EE78];
    uint64_t v89 = v37;
    uint64_t v81 = v111;
    uint64_t v83 = v128;
    uint64_t v82 = v129;
    uint64_t v84 = v127;
    uint64_t v85 = v110;
    int v86 = v109;
    char v87 = v108;
    uint64_t v88 = v126;
LABEL_9:
    sub_25A6A64F8(v85, type metadata accessor for TC2TrustedRequestMetadata);
    swift_bridgeObjectRelease();
    sub_25A6A5E70(v88, v81, (uint64_t (*)(void))type metadata accessor for TrustedRequest);
    char v90 = (int *)type metadata accessor for TrustedRequestHistory.Request();
    uint64_t v91 = v81 + v90[5];
    *(_DWORD *)uint64_t v91 = v86;
    *(unsigned char *)(v91 + 4) = v87;
    uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v83 + 32))(v81 + v90[6], v84, v82);
    char v92 = (void *)(v81 + v90[7]);
    *char v92 = v125;
    v92[1] = v89;
    char v93 = (void *)(v81 + v90[8]);
    uint64_t v94 = v123;
    *char v93 = v124;
    v93[1] = v94;
    char v95 = (void *)(v81 + v90[9]);
    *char v95 = v114;
    v95[1] = v43;
    uint64_t v96 = (void *)(v81 + v90[10]);
    uint64_t v97 = v122;
    *uint64_t v96 = v118;
    v96[1] = v97;
    uint64_t v98 = (void *)(v81 + v90[11]);
    uint64_t v99 = v116;
    *uint64_t v98 = v113;
    v98[1] = v99;
    uint64_t v100 = v81 + v90[12];
    *(void *)uint64_t v100 = v117;
    *(unsigned char *)(v100 + 8) = v121;
    uint64_t v101 = (void *)(v81 + v90[13]);
    uint64_t v102 = v119;
    *uint64_t v101 = v120;
    v101[1] = v102;
    uint64_t v103 = (void *)(v81 + v90[14]);
    uint64_t v104 = v115;
    *uint64_t v103 = v112;
    v103[1] = v104;
    *(void *)(v81 + v90[15]) = v141;
  }
  return result;
}

uint64_t TrustedCloudComputeClient.prefetchRequest(workloadType:workloadParameters:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  return MEMORY[0x270FA2498](sub_25A6A4BF4, 0, 0);
}

uint64_t sub_25A6A4BF4()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[6];
  v0[2] = v0[5];
  v0[3] = v2;
  v0[4] = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[9] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_25A6A4CE0;
  return TC2Client.prewarm(request:bundleIdentifier:featureIdentifier:)((uint64_t)(v0 + 2), 0, 0, 0xD000000000000017, 0x800000025A6D0920);
}

uint64_t sub_25A6A4CE0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v3 + 8);
  return v1(1);
}

uint64_t TrustedCloudComputeClient.prewarm(workloadType:workloadParameters:bundleIdentifierOverride:featureIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[11] = a7;
  v8[12] = v7;
  v8[9] = a5;
  v8[10] = a6;
  v8[7] = a3;
  v8[8] = a4;
  v8[5] = a1;
  v8[6] = a2;
  return MEMORY[0x270FA2498](sub_25A6A4E40, 0, 0);
}

uint64_t sub_25A6A4E40()
{
  uint64_t v1 = v0[6];
  v0[2] = v0[5];
  uint64_t v2 = v0[7];
  v0[3] = v1;
  v0[4] = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[13] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_25A6A4F18;
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[11];
  uint64_t v6 = v0[8];
  uint64_t v7 = v0[9];
  return TC2Client.prewarm(request:bundleIdentifier:featureIdentifier:)((uint64_t)(v0 + 2), v6, v7, v4, v5);
}

uint64_t sub_25A6A4F18()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t TrustedCloudComputeClient.prefetch(request:)(uint64_t a1)
{
  *(void *)(v2 + 40) = v1;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)a1;
  *(void *)(v2 + 64) = *(void *)(a1 + 16);
  return MEMORY[0x270FA2498](sub_25A6A5074, 0, 0);
}

uint64_t sub_25A6A5074()
{
  uint64_t v1 = *(void *)(v0 + 64);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 48);
  *(void *)(v0 + 32) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  void *v2 = v0;
  v2[1] = sub_25A68C458;
  return sub_25A6A6A08(v0 + 16, v3);
}

uint64_t TrustedCloudComputeClient.prefetchParametersCache()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_25A6A514C, 0, 0);
}

uint64_t sub_25A6A514C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25A6A6770;
  return TC2Client.prefetchParametersCache()();
}

uint64_t TrustedCloudComputeClient.prefetchParametersCacheSavedState()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_25A6A520C, 0, 0);
}

uint64_t sub_25A6A520C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25A6A6770;
  return TC2Client.prefetchParametersCacheSavedState()();
}

uint64_t TrustedCloudComputeClient.prefetchCacheReset()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_25A6A52CC, 0, 0);
}

uint64_t sub_25A6A52CC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25A6A536C;
  return TC2Client.prefetchCacheReset()();
}

uint64_t sub_25A6A536C(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t TrustedCloudComputeClient.prefetchCache()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_25A6A5488, 0, 0);
}

uint64_t sub_25A6A5488()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25A6A536C;
  return TC2Client.prefetchCache()();
}

uint64_t TrustedCloudComputeClient.knownRateLimits(bundleIdentifier:featureIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return MEMORY[0x270FA2498](sub_25A6A5550, 0, 0);
}

uint64_t sub_25A6A5550()
{
  uint64_t v1 = (void *)swift_task_alloc();
  v0[7] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25A6A5600;
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v5 = v0[2];
  uint64_t v4 = v0[3];
  return TC2Client.knownRateLimits(bundleIdentifier:featureIdentifier:skipFetch:)(v5, v4, v2, v3, 0);
}

uint64_t sub_25A6A5600(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t TrustedCloudComputeClient.knownRateLimits(bundleIdentifier:featureIdentifier:skipFetch:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 40) = a4;
  *(void *)(v6 + 48) = v5;
  *(unsigned char *)(v6 + 64) = a5;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 16) = a1;
  return MEMORY[0x270FA2498](sub_25A6A5728, 0, 0);
}

uint64_t sub_25A6A5728()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25A6A5600;
  char v2 = *(unsigned char *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + 24);
  return TC2Client.knownRateLimits(bundleIdentifier:featureIdentifier:skipFetch:)(v6, v5, v3, v4, v2);
}

uint64_t TrustedCloudComputeClient.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC19PrivateCloudCompute25TrustedCloudComputeClient_logger;
  uint64_t v2 = sub_25A6C7430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t TrustedCloudComputeClient.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC19PrivateCloudCompute25TrustedCloudComputeClient_logger;
  uint64_t v2 = sub_25A6C7430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v3, v4);
}

void sub_25A6A58FC(uint64_t a1)
{
  sub_25A6A8CEC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void **)(v1 + 64), *(void *)(v1 + 72), *(void **)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96), *(void *)(v1 + 104));
}

uint64_t sub_25A6A5940(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_25A6A5ED8(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_25A6A66C0((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_25A6A66C0((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_25A6A5A14(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25A6A5A7C()
{
  return type metadata accessor for TrustedCloudComputeClient();
}

uint64_t type metadata accessor for TrustedCloudComputeClient()
{
  uint64_t result = qword_26B329D28;
  if (!qword_26B329D28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25A6A5AD0()
{
  uint64_t result = sub_25A6C7430();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for TrustedCloudComputeClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for TrustedCloudComputeClient);
}

uint64_t dispatch thunk of TrustedCloudComputeClient.__allocating_init(configuration:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

unint64_t sub_25A6A5BB8()
{
  unint64_t result = qword_26A44C5F0;
  if (!qword_26A44C5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C5F0);
  }
  return result;
}

unint64_t sub_25A6A5C0C()
{
  unint64_t result = qword_26A44C5F8;
  if (!qword_26A44C5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C5F8);
  }
  return result;
}

unint64_t sub_25A6A5C60()
{
  unint64_t result = qword_26A44C608;
  if (!qword_26A44C608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C608);
  }
  return result;
}

unint64_t sub_25A6A5CB4()
{
  unint64_t result = qword_26A44C610;
  if (!qword_26A44C610)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A44C2D8);
    sub_25A6A5D58(&qword_26A44C618, (void (*)(uint64_t))type metadata accessor for TrustedCloudComputeRateLimit);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C610);
  }
  return result;
}

uint64_t sub_25A6A5D58(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25A6A5DA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C438);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25A6A5E08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C438);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_25A6A5E70(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25A6A5ED8(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_25A6C76F0();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_25A6A6094(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_25A6C7790();
  if (!v8)
  {
    sub_25A6C77C0();
    __break(1u);
LABEL_17:
    uint64_t result = sub_25A6C7810();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_25A6A6094(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_25A6A612C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_25A6A6388(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_25A6A6388(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_25A6A612C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_25A6A62A4(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_25A6C7750();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_25A6C77C0();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_25A6C7500();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_25A6C7810();
    __break(1u);
LABEL_14:
    uint64_t result = sub_25A6C77C0();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_25A6A62A4(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_26B3295B8);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_25A6A630C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_25A6C7550();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x2611418F0](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_25A6A6388(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_26B3295B8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_25A6C7810();
  __break(1u);
  return result;
}

uint64_t sub_25A6A64D8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25A6A6558(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_25A6A64F8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25A6A6558(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C628);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 95;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 7);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  size_t v15 = v8 << 7;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25A6C7810();
  __break(1u);
  return result;
}

uint64_t sub_25A6A66C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_25A6A671C()
{
  unint64_t result = qword_26A44C630;
  if (!qword_26A44C630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C630);
  }
  return result;
}

uint64_t sub_25A6A6774()
{
  uint64_t v1 = sub_25A6C7440();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25A6C7460();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[0] = *(void *)(v0 + 32);
  aBlock[4] = sub_25A6B03F0;
  uint64_t v13 = v0;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25A692D84;
  aBlock[3] = &block_descriptor_119;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  sub_25A6C7450();
  v11[1] = MEMORY[0x263F8EE78];
  sub_25A6B0488(qword_26B329D38, 255, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B329F68);
  sub_25A6B04D0(&qword_26B329F70, &qword_26B329F68);
  sub_25A6C7710();
  MEMORY[0x261141A60](0, v8, v4, v9);
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release();
}

uint64_t sub_25A6A6A08(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 40) = v2;
  *(_OWORD *)(v3 + 48) = *(_OWORD *)a1;
  *(void *)(v3 + 64) = *(void *)(a1 + 16);
  *(void *)(v3 + 72) = sub_25A6B0488(&qword_26B329E70, a2, (void (*)(uint64_t))type metadata accessor for XPCWrapper);
  uint64_t v5 = sub_25A6C75D0();
  *(void *)(v3 + 80) = v5;
  *(void *)(v3 + 88) = v4;
  return MEMORY[0x270FA2498](sub_25A6A6AF0, v5, v4);
}

uint64_t sub_25A6A6AF0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, void (*a6)(uint64_t a1), uint64_t a7, uint64_t a8)
{
  uint64_t v9 = *(void *)(v8 + 40);
  uint64_t v10 = *(void *)(v9 + 16);
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v12 = *(void *)(v8 + 64);
    uint64_t v11 = *(void *)(v8 + 72);
    long long v16 = *(_OWORD *)(v8 + 48);
    *(void *)(v9 + 16) = v10 + 1;
    uint64_t v13 = swift_task_alloc();
    *(void *)(v8 + 96) = v13;
    *(void *)(v13 + 16) = v9;
    *(void *)(v13 + 24) = v10;
    *(_OWORD *)(v13 + 32) = v16;
    *(void *)(v13 + 48) = v12;
    uint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v8 + 104) = v14;
    a8 = __swift_instantiateConcreteTypeFromMangledName(qword_26B329DB8);
    *uint64_t v14 = v8;
    v14[1] = sub_25A6A6C30;
    a5 = 0x800000025A6D0FF0;
    a6 = sub_25A6B029C;
    a1 = v8 + 16;
    a2 = v9;
    a3 = v11;
    a4 = 0xD000000000000013;
    a7 = v13;
  }
  return MEMORY[0x270FA2360](a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_25A6A6C30()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 80);
    uint64_t v4 = *(void *)(v2 + 88);
    uint64_t v5 = sub_25A6A6E8C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 80);
    uint64_t v4 = *(void *)(v2 + 88);
    uint64_t v5 = sub_25A6A6D4C;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_25A6A6D4C()
{
  unint64_t v1 = v0[3];
  if (v1 >> 60 == 15)
  {
    uint64_t v2 = MEMORY[0x263F8EE78];
LABEL_8:
    uint64_t v7 = (uint64_t (*)(uint64_t))v0[1];
    return v7(v2);
  }
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[14];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C678);
  sub_25A68F228(v3, v1);
  sub_25A6B02AC();
  sub_25A6C7200();
  sub_25A68F280(v3, v1);
  sub_25A68F280(v3, v1);
  if (!v4)
  {
    uint64_t v2 = v0[4];
    goto LABEL_8;
  }
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_25A6A6E8C()
{
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25A6A6EF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 40) = a4;
  *(void *)(v6 + 48) = v5;
  *(unsigned char *)(v6 + 104) = a5;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 56) = sub_25A6B0488(&qword_26B329E70, a2, (void (*)(uint64_t))type metadata accessor for XPCWrapper);
  uint64_t v8 = sub_25A6C75D0();
  *(void *)(v6 + 64) = v8;
  *(void *)(v6 + 72) = v7;
  return MEMORY[0x270FA2498](sub_25A6A6FD4, v8, v7);
}

uint64_t sub_25A6A6FD4(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, void (*a6)(uint64_t a1), uint64_t a7, uint64_t a8)
{
  uint64_t v9 = *(void *)(v8 + 48);
  if (*(void *)(v9 + 56) == *(void *)(v8 + 16))
  {
    uint64_t v10 = *(void *)(v9 + 16);
    if (__OFADD__(v10, 1))
    {
      __break(1u);
    }
    else
    {
      uint64_t v11 = *(void *)(v8 + 56);
      char v12 = *(unsigned char *)(v8 + 104);
      uint64_t v13 = *(void *)(v8 + 40);
      long long v18 = *(_OWORD *)(v8 + 24);
      *(void *)(v9 + 16) = v10 + 1;
      uint64_t v14 = swift_task_alloc();
      *(void *)(v8 + 80) = v14;
      *(void *)(v14 + 16) = v9;
      *(void *)(v14 + 24) = v10;
      *(_OWORD *)(v14 + 32) = v18;
      *(void *)(v14 + 48) = v13;
      *(unsigned char *)(v14 + 56) = v12;
      a1 = (void *)swift_task_alloc();
      *(void *)(v8 + 88) = a1;
      *a1 = v8;
      a1[1] = sub_25A6A71F8;
      a4 = 0xD000000000000029;
      a8 = MEMORY[0x263F8EE60] + 8;
      a5 = 0x800000025A6D0EF0;
      a6 = sub_25A6AFEC8;
      a2 = v9;
      a3 = v11;
      a7 = v14;
    }
    return MEMORY[0x270FA2360](a1, a2, a3, a4, a5, a6, a7, a8);
  }
  else
  {
    type metadata accessor for TrustedCloudComputeError(0);
    sub_25A6B0488(&qword_26A44C3B0, 255, (void (*)(uint64_t))type metadata accessor for TrustedCloudComputeError);
    swift_allocError();
    *(void *)uint64_t v15 = 0xD000000000000016;
    *(void *)(v15 + 8) = 0x800000025A6CF340;
    *(unsigned char *)(v15 + 16) = 0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    long long v16 = *(uint64_t (**)(void))(v8 + 8);
    return v16();
  }
}

uint64_t sub_25A6A71F8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = *(void *)(v2 + 72);
    uint64_t v5 = sub_25A6A732C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = *(void *)(v2 + 72);
    uint64_t v5 = sub_25A6A7314;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_25A6A7314()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_25A6A732C()
{
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25A6A7390(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  v3[7] = sub_25A6B0488(&qword_26B329E70, a2, (void (*)(uint64_t))type metadata accessor for XPCWrapper);
  uint64_t v5 = sub_25A6C75D0();
  v3[8] = v5;
  v3[9] = v4;
  return MEMORY[0x270FA2498](sub_25A6A746C, v5, v4);
}

uint64_t sub_25A6A746C(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, void (*a6)(uint64_t a1), void *a7, uint64_t a8)
{
  uint64_t v9 = v8[6];
  if (*(void *)(v9 + 56) == v8[4])
  {
    uint64_t v10 = *(void *)(v9 + 16);
    if (__OFADD__(v10, 1))
    {
      __break(1u);
    }
    else
    {
      uint64_t v11 = v8[7];
      uint64_t v12 = v8[5];
      *(void *)(v9 + 16) = v10 + 1;
      uint64_t v13 = (void *)swift_task_alloc();
      v8[10] = v13;
      _OWORD v13[2] = v9;
      v13[3] = v10;
      v13[4] = v12;
      uint64_t v14 = (void *)swift_task_alloc();
      v8[11] = v14;
      a8 = __swift_instantiateConcreteTypeFromMangledName(qword_26B329DB8);
      *uint64_t v14 = v8;
      v14[1] = sub_25A6A7688;
      a4 = 0xD000000000000019;
      a5 = 0x800000025A6D0DE0;
      a6 = sub_25A6AEEFC;
      a1 = v8 + 2;
      a2 = v9;
      a3 = v11;
      a7 = v13;
    }
    return MEMORY[0x270FA2360](a1, a2, a3, a4, a5, a6, a7, a8);
  }
  else
  {
    type metadata accessor for TrustedCloudComputeError(0);
    sub_25A6B0488(&qword_26A44C3B0, 255, (void (*)(uint64_t))type metadata accessor for TrustedCloudComputeError);
    swift_allocError();
    *(void *)uint64_t v15 = 0xD000000000000016;
    *(void *)(v15 + 8) = 0x800000025A6CF340;
    *(unsigned char *)(v15 + 16) = 0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    long long v16 = (uint64_t (*)(void))v8[1];
    return v16();
  }
}

uint64_t sub_25A6A7688()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = *(void *)(v2 + 72);
    uint64_t v5 = sub_25A6A732C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = *(void *)(v2 + 72);
    uint64_t v5 = sub_25A6A77A4;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_25A6A77A4()
{
  return (*(uint64_t (**)(void, void))(v0 + 8))(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_25A6A77C0(uint64_t a1)
{
  uint64_t v45 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C658);
  uint64_t v42 = *(void *)(v1 - 8);
  uint64_t v43 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v41 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C650);
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v40 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v38 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B329CF0);
  uint64_t v36 = *(void *)(v5 - 8);
  uint64_t v37 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v35 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C648);
  uint64_t v33 = *(void *)(v7 - 8);
  uint64_t v34 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C640);
  uint64_t v32 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C638);
  uint64_t v31 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(qword_26B3296E8);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for XPCWrapper.Continuation();
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25A6AFD58(v44, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v24 = v31;
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v15, v22, v13);
      uint64_t v46 = v45;
      MEMORY[0x261142270]();
      sub_25A6C75E0();
      return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v15, v13);
    case 2u:
      uint64_t v25 = v32;
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v12, v22, v10);
      uint64_t v46 = v45;
      MEMORY[0x261142270]();
      sub_25A6C75E0();
      return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v12, v10);
    case 3u:
      uint64_t v27 = v33;
      uint64_t v26 = v34;
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v9, v22, v34);
      uint64_t v46 = v45;
      MEMORY[0x261142270]();
      sub_25A6C75E0();
      return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v9, v26);
    case 4u:
      uint64_t v28 = v35;
      uint64_t v29 = v36;
      uint64_t v30 = v37;
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v35, v22, v37);
      goto LABEL_9;
    case 5u:
      uint64_t v28 = v38;
      uint64_t v29 = v39;
      uint64_t v30 = v40;
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v38, v22, v40);
      goto LABEL_9;
    case 6u:
      uint64_t v28 = v41;
      uint64_t v29 = v42;
      uint64_t v30 = v43;
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v41, v22, v43);
LABEL_9:
      uint64_t v46 = v45;
      MEMORY[0x261142270]();
      sub_25A6C75E0();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v28, v30);
      break;
    default:
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v22, v16);
      uint64_t v46 = v45;
      MEMORY[0x261142270]();
      sub_25A6C75E0();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      break;
  }
  return result;
}

uint64_t sub_25A6A7DF8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v20 = sub_25A6C7680();
  uint64_t v4 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25A6C76A0();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_25A6C7460();
  MEMORY[0x270FA5388](v8 - 8);
  *(_OWORD *)(v1 + 16) = xmmword_25A6CD900;
  sub_25A6C7220();
  swift_allocObject();
  *(void *)(v1 + 40) = sub_25A6C7210();
  *(void *)(v1 + 56) = 0;
  uint64_t v9 = MEMORY[0x263F8EE78];
  *(void *)(v2 + 80) = sub_25A68F70C(MEMORY[0x263F8EE78]);
  *(_DWORD *)(v2 + 48) = a1;
  *(unsigned char *)(v2 + 52) = BYTE4(a1) & 1;
  sub_25A6B0448();
  sub_25A6C7450();
  aBlock[0] = v9;
  sub_25A6B0488(&qword_26B329FC8, 255, MEMORY[0x263F8F198]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B329F78);
  sub_25A6B04D0(&qword_26B329F80, &qword_26B329F78);
  sub_25A6C7710();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F8F138], v20);
  *(void *)(v2 + 32) = sub_25A6C76B0();
  id v10 = objc_allocWithZone(MEMORY[0x263F08D68]);
  uint64_t v11 = (void *)sub_25A6C74A0();
  id v12 = objc_msgSend(v10, sel_initWithMachServiceName_options_, v11, 0);

  objc_msgSend(v12, sel__setQueue_, *(void *)(v2 + 32));
  uint64_t v13 = self;
  id v14 = objc_msgSend(v13, sel_interfaceWithProtocol_, &unk_2708577E0);
  id v15 = objc_msgSend(v13, sel_interfaceWithProtocol_, &unk_270857780);
  objc_msgSend(v14, sel_setInterface_forSelector_argumentIndex_ofReply_, v15, sel_trustedRequestWithParameters_requestID_bundleIdentifier_originatingBundleIdentifier_featureIdentifier_sessionIdentifier_completion_, 0, 1);

  objc_msgSend(v12, sel_setRemoteObjectInterface_, v14);
  *(void *)(v2 + 64) = v12;
  id v16 = v12;
  id v17 = objc_msgSend(v16, sel_remoteObjectProxy);
  sub_25A6C7700();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B329F58);
  swift_dynamicCast();
  *(void *)(v2 + 72) = aBlock[6];
  aBlock[4] = sub_25A6B0520;
  void aBlock[5] = v2;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25A692D84;
  aBlock[3] = &block_descriptor_122;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v16, sel_setInterruptionHandler_, v18);
  _Block_release(v18);
  objc_msgSend(v16, sel_resume);

  return v2;
}

void sub_25A6A829C()
{
  uint64_t v1 = type metadata accessor for XPCWrapper.Continuation();
  uint64_t v50 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C690);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (uint64_t *)((char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v44 - v8;
  uint64_t v46 = (uint64_t *)(v0 + 80);
  swift_beginAccess();
  uint64_t v10 = *(void *)(v0 + 80);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v47 = v0;
  uint64_t v48 = v10 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  int64_t v49 = (unint64_t)(v12 + 63) >> 6;
  int64_t v45 = v49 - 1;
  swift_bridgeObjectRetain();
  int64_t v15 = 0;
  unint64_t v51 = 0x800000025A6CF340;
  if (!v14) {
    goto LABEL_8;
  }
LABEL_6:
  unint64_t v18 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  unint64_t v19 = v18 | (v15 << 6);
LABEL_7:
  uint64_t v20 = *(void *)(v10 + 56);
  *uint64_t v7 = *(void *)(*(void *)(v10 + 48) + 8 * v19);
  uint64_t v21 = v20 + *(void *)(v50 + 72) * v19;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C698);
  sub_25A6AFD58(v21, (uint64_t)v7 + *(int *)(v22 + 48), (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v7, 0, 1, v22);
  while (1)
  {
    sub_25A6B0578((uint64_t)v7, (uint64_t)v9);
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C698);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v9, 1, v27) == 1) {
      break;
    }
    sub_25A6AFCF0((uint64_t)&v9[*(int *)(v27 + 48)], (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
    type metadata accessor for TrustedCloudComputeError(0);
    sub_25A6B0488(&qword_26A44C3B0, 255, (void (*)(uint64_t))type metadata accessor for TrustedCloudComputeError);
    id v16 = (void *)swift_allocError();
    *(void *)uint64_t v17 = 0xD000000000000016;
    *(void *)(v17 + 8) = v51;
    *(unsigned char *)(v17 + 16) = 0;
    swift_storeEnumTagMultiPayload();
    sub_25A6A77C0((uint64_t)v16);
    sub_25A6AFC90((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);

    if (v14) {
      goto LABEL_6;
    }
LABEL_8:
    int64_t v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v23 < v49)
    {
      unint64_t v24 = *(void *)(v48 + 8 * v23);
      if (v24) {
        goto LABEL_11;
      }
      int64_t v25 = v15 + 2;
      ++v15;
      if (v23 + 1 < v49)
      {
        unint64_t v24 = *(void *)(v48 + 8 * v25);
        if (v24) {
          goto LABEL_14;
        }
        int64_t v15 = v23 + 1;
        if (v23 + 2 < v49)
        {
          unint64_t v24 = *(void *)(v48 + 8 * (v23 + 2));
          if (v24)
          {
            v23 += 2;
            goto LABEL_11;
          }
          int64_t v25 = v23 + 3;
          int64_t v15 = v23 + 2;
          if (v23 + 3 < v49)
          {
            unint64_t v24 = *(void *)(v48 + 8 * v25);
            if (!v24)
            {
              while (1)
              {
                int64_t v23 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  break;
                }
                if (v23 >= v49)
                {
                  int64_t v15 = v45;
                  goto LABEL_25;
                }
                unint64_t v24 = *(void *)(v48 + 8 * v23);
                ++v25;
                if (v24) {
                  goto LABEL_11;
                }
              }
LABEL_36:
              __break(1u);
              return;
            }
LABEL_14:
            int64_t v23 = v25;
LABEL_11:
            unint64_t v14 = (v24 - 1) & v24;
            unint64_t v19 = __clz(__rbit64(v24)) + (v23 << 6);
            int64_t v15 = v23;
            goto LABEL_7;
          }
        }
      }
    }
LABEL_25:
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C698);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v7, 1, 1, v26);
    unint64_t v14 = 0;
  }
  swift_release();
  uint64_t v28 = v46;
  swift_beginAccess();
  if (*(void *)(*v28 + 16))
  {
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v52 = *v28;
    uint64_t *v28 = 0x8000000000000000;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C6A0);
    sub_25A6C77B0();
    uint64_t *v28 = v52;
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  id v29 = objc_allocWithZone(MEMORY[0x263F08D68]);
  uint64_t v30 = (void *)sub_25A6C74A0();
  id v31 = objc_msgSend(v29, sel_initWithMachServiceName_options_, v30, 0);

  uint64_t v32 = v47;
  objc_msgSend(v31, sel__setQueue_, *(void *)(v47 + 32));
  uint64_t v33 = self;
  id v34 = objc_msgSend(v33, sel_interfaceWithProtocol_, &unk_2708577E0);
  id v35 = objc_msgSend(v33, sel_interfaceWithProtocol_, &unk_270857780);
  objc_msgSend(v34, sel_setInterface_forSelector_argumentIndex_ofReply_, v35, sel_trustedRequestWithParameters_requestID_bundleIdentifier_originatingBundleIdentifier_featureIdentifier_sessionIdentifier_completion_, 0, 1);

  objc_msgSend(v31, sel_setRemoteObjectInterface_, v34);
  aBlock[4] = sub_25A6B05E0;
  void aBlock[5] = v32;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25A692D84;
  aBlock[3] = &block_descriptor_125;
  uint64_t v36 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v31, sel_setInterruptionHandler_, v36);
  _Block_release(v36);
  objc_msgSend(v31, sel_resume);
  uint64_t v37 = *(void **)(v32 + 64);
  *(void *)(v32 + 64) = v31;
  uint64_t v38 = *(void *)(v32 + 24);
  BOOL v39 = __OFADD__(v38, 1);
  id v40 = v31;
  if (v39)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v41 = v40;
  *(void *)(v32 + 24) = v38 + 1;
  *(void *)(v32 + 56) = v38;
  id v42 = objc_msgSend(v40, sel_remoteObjectProxy);
  sub_25A6C7700();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B329F58);
  swift_dynamicCast();
  *(void *)(v32 + 72) = v52;
  swift_unknownObjectRelease();
  objc_msgSend(v37, sel_setInterruptionHandler_, 0);
  objc_msgSend(v37, sel_setInvalidationHandler_, 0);
  objc_msgSend(v37, sel_invalidate);
  id v43 = objc_msgSend(*(id *)(v32 + 64), sel_remoteObjectProxy);
  sub_25A6C7700();

  swift_unknownObjectRelease();
  swift_dynamicCast();
  *(void *)(v32 + 72) = v52;
  swift_unknownObjectRelease();
}

uint64_t sub_25A6A8A70(uint64_t a1, uint64_t a2)
{
  sub_25A6C76C0();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    goto LABEL_6;
  }
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_25A6AF000;
  *(void *)(v7 + 24) = v6;
  swift_retain();
  v10[0] = v2;
  sub_25A6AFC64(v10);
  if (v3)
  {
    swift_release();
    return swift_release();
  }
  swift_release();
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
LABEL_6:
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    sub_25A6C7740();
    sub_25A6C74F0();
    v10[3] = v2;
    sub_25A6C77A0();
    sub_25A6C74F0();
    uint64_t result = sub_25A6C77D0();
    __break(1u);
  }
  return result;
}

id sub_25A6A8C74(uint64_t a1)
{
  id result = (id)swift_beginAccess();
  if (*(void *)(*(void *)(a1 + 80) + 16))
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 64), sel_invalidate);
    return objc_msgSend(*(id *)(a1 + 64), sel_setInterruptionHandler_, 0);
  }
  return result;
}

void sub_25A6A8CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  v36[1] = a7;
  uint64_t v17 = a10;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C438);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(qword_26B329DF8);
  MEMORY[0x270FA5388](v21 - 8);
  int64_t v23 = (char *)v36 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C658);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v23, a1, v24);
  uint64_t v25 = type metadata accessor for XPCWrapper.Continuation();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v23, 0, 1, v25);
  swift_beginAccess();
  uint64_t v38 = a3;
  sub_25A6AE0D4((uint64_t)v23, a3);
  swift_endAccess();
  uint64_t v26 = *(void **)(a2 + 72);
  swift_unknownObjectRetain();
  uint64_t v37 = sub_25A6C72C0();
  uint64_t v27 = (void *)sub_25A6C73B0();
  if (a8) {
    a8 = (void *)sub_25A6C74A0();
  }
  if (a10) {
    uint64_t v17 = (void *)sub_25A6C74A0();
  }
  if (a12) {
    uint64_t v28 = (void *)sub_25A6C74A0();
  }
  else {
    uint64_t v28 = 0;
  }
  sub_25A6A5DA0(a13, (uint64_t)v20);
  uint64_t v29 = sub_25A6C73D0();
  uint64_t v30 = *(void *)(v29 - 8);
  id v31 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v20, 1, v29) != 1)
  {
    id v31 = (void *)sub_25A6C73B0();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v20, v29);
  }
  uint64_t v32 = swift_allocObject();
  uint64_t v33 = v38;
  *(void *)(v32 + 16) = a2;
  *(void *)(v32 + 24) = v33;
  aBlock[4] = sub_25A6AFEDC;
  void aBlock[5] = v32;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25A6A9E4C;
  aBlock[3] = &block_descriptor_24;
  id v34 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  id v35 = (void *)v37;
  objc_msgSend(v26, sel_trustedRequestWithParameters_requestID_bundleIdentifier_originatingBundleIdentifier_featureIdentifier_sessionIdentifier_completion_, v37, v27, a8, v17, v28, v31, v34);
  _Block_release(v34);
  swift_unknownObjectRelease();
}

void sub_25A6A90A0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v29 = a4;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C2C0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TrustedCloudComputeError(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  id v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v28 - v17;
  if (a3 >> 60 == 15)
  {
    if (a5)
    {
      uint64_t v19 = *(void *)(a1 + 56);
      swift_unknownObjectRetain();
      sub_25A6A9B28(v29, a5, v19);
      swift_unknownObjectRelease();
      return;
    }
    uint64_t v21 = 0x800000025A6D0F70;
    uint64_t v22 = (uint64_t)v16;
    uint64_t v20 = 0xD000000000000037;
    goto LABEL_8;
  }
  sub_25A68F228(a2, a3);
  sub_25A689D80(a2, a3, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_25A68F5B0((uint64_t)v11, &qword_26A44C2C0);
    uint64_t v20 = 0xD00000000000003FLL;
    uint64_t v21 = 0x800000025A6D0E90;
    uint64_t v22 = (uint64_t)v16;
LABEL_8:
    TrustedCloudComputeError.init(file:line:message:)(v20, v21, v22);
    sub_25A6B0488(&qword_26A44C3B0, 255, (void (*)(uint64_t))type metadata accessor for TrustedCloudComputeError);
    uint64_t v26 = swift_allocError();
    sub_25A6AFD58((uint64_t)v16, v27, type metadata accessor for TrustedCloudComputeError);
    sub_25A6A9420(v29, v26);
    sub_25A6AFC90((uint64_t)v16, type metadata accessor for TrustedCloudComputeError);
    uint64_t v25 = (void *)v26;
    goto LABEL_9;
  }
  sub_25A6AFCF0((uint64_t)v11, (uint64_t)v18, type metadata accessor for TrustedCloudComputeError);
  sub_25A6B0488(&qword_26A44C3B0, 255, (void (*)(uint64_t))type metadata accessor for TrustedCloudComputeError);
  uint64_t v23 = swift_allocError();
  sub_25A6AFD58((uint64_t)v18, v24, type metadata accessor for TrustedCloudComputeError);
  sub_25A6A9420(v29, v23);
  sub_25A6AFC90((uint64_t)v18, type metadata accessor for TrustedCloudComputeError);
  uint64_t v25 = (void *)v23;
LABEL_9:
}

uint64_t sub_25A6A9420(uint64_t a1, uint64_t a2)
{
  uint64_t v52 = a2;
  uint64_t v53 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C658);
  uint64_t v50 = *(void *)(v2 - 8);
  uint64_t v51 = v2;
  MEMORY[0x270FA5388](v2);
  int64_t v49 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C650);
  uint64_t v47 = *(void *)(v4 - 8);
  uint64_t v48 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v46 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C648);
  uint64_t v44 = *(void *)(v6 - 8);
  uint64_t v45 = v6;
  MEMORY[0x270FA5388](v6);
  id v43 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B329CF0);
  uint64_t v41 = *(void *)(v8 - 8);
  uint64_t v42 = v8;
  MEMORY[0x270FA5388](v8);
  id v40 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C640);
  uint64_t v38 = *(void *)(v10 - 8);
  uint64_t v39 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v37 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C638);
  uint64_t v36 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(qword_26B3296E8);
  uint64_t v35 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(qword_26B329DF8);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for XPCWrapper.Continuation();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v34 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v34 - v26;
  swift_beginAccess();
  sub_25A6AE334(v53, (uint64_t)v20);
  swift_endAccess();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1) {
    return sub_25A68F5B0((uint64_t)v20, qword_26B329DF8);
  }
  sub_25A6AFCF0((uint64_t)v20, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
  sub_25A6AFD58((uint64_t)v27, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v30 = v36;
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v14, v25, v12);
      uint64_t v54 = v52;
      MEMORY[0x261142270]();
      sub_25A6C75E0();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v12);
      return sub_25A6AFC90((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
    case 2u:
      id v31 = v37;
      uint64_t v32 = v38;
      uint64_t v33 = v39;
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v37, v25, v39);
      goto LABEL_12;
    case 3u:
      id v31 = v43;
      uint64_t v32 = v44;
      uint64_t v33 = v45;
      (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v43, v25, v45);
      goto LABEL_12;
    case 4u:
      id v31 = v40;
      uint64_t v32 = v41;
      uint64_t v33 = v42;
      (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v40, v25, v42);
      goto LABEL_12;
    case 5u:
      id v31 = v46;
      uint64_t v32 = v47;
      uint64_t v33 = v48;
      (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v46, v25, v48);
      goto LABEL_12;
    case 6u:
      id v31 = v49;
      uint64_t v32 = v50;
      uint64_t v33 = v51;
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v49, v25, v51);
LABEL_12:
      uint64_t v54 = v52;
      MEMORY[0x261142270]();
      sub_25A6C75E0();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v31, v33);
      break;
    default:
      uint64_t v29 = v35;
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v17, v25, v15);
      uint64_t v54 = v52;
      MEMORY[0x261142270]();
      sub_25A6C75E0();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v17, v15);
      break;
  }
  return sub_25A6AFC90((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
}

uint64_t sub_25A6A9B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v20 = a3;
  uint64_t v21 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C658);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_26B329DF8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for XPCWrapper.Continuation();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v19 - v16;
  swift_beginAccess();
  sub_25A6AE334(a1, (uint64_t)v10);
  swift_endAccess();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return sub_25A68F5B0((uint64_t)v10, qword_26B329DF8);
  }
  sub_25A6AFCF0((uint64_t)v10, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
  sub_25A6AFD58((uint64_t)v17, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
  if (swift_getEnumCaseMultiPayload() <= 5)
  {
    sub_25A6AFC90((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
    uint64_t result = sub_25A6C77D0();
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v15, v4);
    uint64_t v22 = v21;
    uint64_t v23 = v20;
    swift_unknownObjectRetain();
    sub_25A6C75F0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return sub_25A6AFC90((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
  }
  return result;
}

uint64_t sub_25A6A9E4C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3;
  uint64_t v5 = *(void (**)(uint64_t, void *, unint64_t))(a1 + 32);
  if (a3)
  {
    swift_retain();
    swift_unknownObjectRetain();
    id v6 = v3;
    uint64_t v3 = (void *)sub_25A6C72D0();
    unint64_t v8 = v7;
  }
  else
  {
    swift_retain();
    swift_unknownObjectRetain();
    unint64_t v8 = 0xF000000000000000;
  }
  v5(a2, v3, v8);
  swift_unknownObjectRelease();
  sub_25A68F280((uint64_t)v3, v8);
  return swift_release();
}

uint64_t sub_25A6A9F04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_26B329DF8);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B329CF0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v8, a1, v9);
  uint64_t v10 = type metadata accessor for XPCWrapper.Continuation();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 0, 1, v10);
  swift_beginAccess();
  sub_25A6AE0D4((uint64_t)v8, a3);
  swift_endAccess();
  uint64_t v11 = *(void **)(a2 + 72);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a3;
  aBlock[4] = sub_25A6AFF6C;
  void aBlock[5] = v12;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25A6AA448;
  aBlock[3] = &block_descriptor_30;
  uint64_t v13 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v11, sel_currentEnvironmentWithCompletion_, v13);
  _Block_release(v13);
  return swift_unknownObjectRelease();
}

uint64_t sub_25A6AA110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B329CF0);
  uint64_t v22 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_26B329DF8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for XPCWrapper.Continuation();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v20 - v16;
  swift_beginAccess();
  sub_25A6AE334(a2, (uint64_t)v10);
  swift_endAccess();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return sub_25A68F5B0((uint64_t)v10, qword_26B329DF8);
  }
  sub_25A6AFCF0((uint64_t)v10, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
  sub_25A6AFD58((uint64_t)v17, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    uint64_t v19 = v22;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v7, v15, v5);
    uint64_t v23 = v20;
    uint64_t v24 = v21;
    swift_bridgeObjectRetain();
    sub_25A6C75F0();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v5);
    return sub_25A6AFC90((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
  }
  else
  {
    sub_25A6AFC90((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
    uint64_t result = sub_25A6C77D0();
    __break(1u);
  }
  return result;
}

uint64_t sub_25A6AA448(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  uint64_t v2 = sub_25A6C74B0();
  uint64_t v4 = v3;
  swift_retain();
  v1(v2, v4);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25A6AA4B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_26B329DF8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C648);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v8, a1, v9);
  uint64_t v10 = type metadata accessor for XPCWrapper.Continuation();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 0, 1, v10);
  swift_beginAccess();
  sub_25A6AE0D4((uint64_t)v8, a3);
  swift_endAccess();
  uint64_t v11 = *(void **)(a2 + 72);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a3;
  aBlock[4] = sub_25A6B0370;
  void aBlock[5] = v12;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25A6AA9E4;
  aBlock[3] = &block_descriptor_116;
  uint64_t v13 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v11, sel_requestMetadataWithCompletion_, v13);
  _Block_release(v13);
  return swift_unknownObjectRelease();
}

uint64_t sub_25A6AA6C0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v20 = a2;
  unint64_t v21 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C648);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_26B329DF8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for XPCWrapper.Continuation();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v19 - v16;
  swift_beginAccess();
  sub_25A6AE334(a1, (uint64_t)v10);
  swift_endAccess();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return sub_25A68F5B0((uint64_t)v10, qword_26B329DF8);
  }
  sub_25A6AFCF0((uint64_t)v10, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
  sub_25A6AFD58((uint64_t)v17, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v15, v4);
    uint64_t v22 = v20;
    unint64_t v23 = v21;
    sub_25A6AFDC0(v20, v21);
    sub_25A6C75F0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return sub_25A6AFC90((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
  }
  else
  {
    sub_25A6AFC90((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
    uint64_t result = sub_25A6C77D0();
    __break(1u);
  }
  return result;
}

uint64_t sub_25A6AA9E4(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = *(void (**)(void *, unint64_t))(a1 + 32);
  if (a2)
  {
    swift_retain();
    id v4 = v2;
    uint64_t v2 = (void *)sub_25A6C72D0();
    unint64_t v6 = v5;
  }
  else
  {
    swift_retain();
    unint64_t v6 = 0xF000000000000000;
  }
  v3(v2, v6);
  sub_25A68F280((uint64_t)v2, v6);
  return swift_release();
}

void sub_25A6AAA7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(qword_26B329DF8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)aBlock - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C648);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v12, a1, v13);
  uint64_t v14 = type metadata accessor for XPCWrapper.Continuation();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v12, 0, 1, v14);
  swift_beginAccess();
  sub_25A6AE0D4((uint64_t)v12, a3);
  swift_endAccess();
  uint64_t v15 = *(void **)(a2 + 72);
  swift_unknownObjectRetain();
  uint64_t v16 = (void *)sub_25A6C74A0();
  if (!a6) {
    sub_25A68CA18(MEMORY[0x263F8EE78]);
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = (void *)sub_25A6C7470();
  swift_bridgeObjectRelease();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a2;
  *(void *)(v18 + 24) = a3;
  aBlock[4] = sub_25A6B0354;
  void aBlock[5] = v18;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25A6AA9E4;
  aBlock[3] = &block_descriptor_110;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v15, sel_prefetchRequestWithWorkloadType_workloadParameters_completion_, v16, v17, v19);
  _Block_release(v19);
  swift_unknownObjectRelease();
}

uint64_t sub_25A6AAD08(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v20 = a3;
  unint64_t v21 = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C648);
  uint64_t v22 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_26B329DF8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for XPCWrapper.Continuation();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v20 - v16;
  swift_beginAccess();
  sub_25A6AE334(a2, (uint64_t)v10);
  swift_endAccess();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return sub_25A68F5B0((uint64_t)v10, qword_26B329DF8);
  }
  sub_25A6AFCF0((uint64_t)v10, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
  sub_25A6AFD58((uint64_t)v17, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    uint64_t v19 = v22;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v7, v15, v5);
    uint64_t v23 = v20;
    unint64_t v24 = v21;
    sub_25A6AFDC0(v20, v21);
    sub_25A6C75F0();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v5);
    return sub_25A6AFC90((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
  }
  else
  {
    sub_25A6AFC90((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
    uint64_t result = sub_25A6C77D0();
    __break(1u);
  }
  return result;
}

void sub_25A6AB040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v25 = a7;
  uint64_t v26 = a10;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(qword_26B329DF8);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(qword_26B3296E8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v16, a1, v17);
  uint64_t v18 = type metadata accessor for XPCWrapper.Continuation();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v16, 0, 1, v18);
  swift_beginAccess();
  sub_25A6AE0D4((uint64_t)v16, a3);
  swift_endAccess();
  uint64_t v19 = *(void **)(a2 + 72);
  swift_unknownObjectRetain();
  uint64_t v20 = (void *)sub_25A6C74A0();
  unint64_t v21 = (void *)sub_25A6C7470();
  if (a8) {
    a8 = (void *)sub_25A6C74A0();
  }
  uint64_t v22 = (void *)sub_25A6C74A0();
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = a2;
  *(void *)(v23 + 24) = a3;
  aBlock[4] = sub_25A6B0228;
  void aBlock[5] = v23;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25A692D84;
  aBlock[3] = &block_descriptor_102;
  unint64_t v24 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v19, sel_prewarmRequestWithWorkloadType_workloadParameters_bundleIdentifier_featureIdentifier_completion_, v20, v21, a8, v22, v24, v25, v26);
  _Block_release(v24);
  swift_unknownObjectRelease();
}

uint64_t sub_25A6AB2E4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_26B3296E8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_26B329DF8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for XPCWrapper.Continuation();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v17 - v14;
  swift_beginAccess();
  sub_25A6AE334(a1, (uint64_t)v8);
  swift_endAccess();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_25A68F5B0((uint64_t)v8, qword_26B329DF8);
  }
  sub_25A6AFCF0((uint64_t)v8, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
  sub_25A6AFD58((uint64_t)v15, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_25A6AFC90((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
    uint64_t result = sub_25A6C77D0();
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v13, v2);
    sub_25A6C75F0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return sub_25A6AFC90((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
  }
  return result;
}

uint64_t sub_25A6AB5F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25A6ABA28(a1, a2, a3, (uint64_t)&unk_270854400, (uint64_t)sub_25A6B00C8, (uint64_t)&block_descriptor_78, (SEL *)&selRef_prefetchCacheWithCompletion_);
}

uint64_t sub_25A6AB620(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = sub_25A6C75C0();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25A6AB690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25A6ABA28(a1, a2, a3, (uint64_t)&unk_2708544F0, (uint64_t)sub_25A6B01AC, (uint64_t)&block_descriptor_96, (SEL *)&selRef_prefetchParametersCacheWithCompletion_);
}

uint64_t sub_25A6AB6C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v20 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C650);
  uint64_t v21 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_26B329DF8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for XPCWrapper.Continuation();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v19 - v15;
  swift_beginAccess();
  sub_25A6AE334(a2, (uint64_t)v9);
  swift_endAccess();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1) {
    return sub_25A68F5B0((uint64_t)v9, qword_26B329DF8);
  }
  sub_25A6AFCF0((uint64_t)v9, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
  sub_25A6AFD58((uint64_t)v16, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
  if (swift_getEnumCaseMultiPayload() == 5)
  {
    uint64_t v18 = v21;
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v6, v14, v4);
    uint64_t v22 = v20;
    swift_bridgeObjectRetain();
    sub_25A6C75F0();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v4);
    return sub_25A6AFC90((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
  }
  else
  {
    sub_25A6AFC90((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
    uint64_t result = sub_25A6C77D0();
    __break(1u);
  }
  return result;
}

uint64_t sub_25A6AB9F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25A6ABA28(a1, a2, a3, (uint64_t)&unk_2708544A0, (uint64_t)sub_25A6B0190, (uint64_t)&block_descriptor_90, (SEL *)&selRef_prefetchParametersCacheSavedStateWithCompletion_);
}

uint64_t sub_25A6ABA28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, SEL *a7)
{
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(qword_26B329DF8);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)aBlock - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C650);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v15, a1, v16);
  uint64_t v17 = type metadata accessor for XPCWrapper.Continuation();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v15, 0, 1, v17);
  swift_beginAccess();
  sub_25A6AE0D4((uint64_t)v15, a3);
  swift_endAccess();
  uint64_t v18 = *(void **)(a2 + 72);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a2;
  *(void *)(v19 + 24) = a3;
  aBlock[4] = a5;
  void aBlock[5] = v19;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25A6AB620;
  aBlock[3] = a6;
  uint64_t v20 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v18, *a7, v20);
  _Block_release(v20);
  return swift_unknownObjectRelease();
}

uint64_t sub_25A6ABC34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_26B329DF8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C638);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v8, a1, v9);
  uint64_t v10 = type metadata accessor for XPCWrapper.Continuation();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 0, 1, v10);
  swift_beginAccess();
  sub_25A6AE0D4((uint64_t)v8, a3);
  swift_endAccess();
  uint64_t v11 = *(void **)(a2 + 72);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a3;
  aBlock[4] = sub_25A6B0100;
  void aBlock[5] = v12;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25A6AC174;
  aBlock[3] = &block_descriptor_84;
  uint64_t v13 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v11, sel_prefetchCacheResetWithCompletion_, v13);
  _Block_release(v13);
  return swift_unknownObjectRelease();
}

uint64_t sub_25A6ABE3C(uint64_t a1, uint64_t a2, int a3)
{
  int v20 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C638);
  uint64_t v21 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_26B329DF8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for XPCWrapper.Continuation();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = &v19[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = &v19[-v15];
  swift_beginAccess();
  sub_25A6AE334(a2, (uint64_t)v9);
  swift_endAccess();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1) {
    return sub_25A68F5B0((uint64_t)v9, qword_26B329DF8);
  }
  sub_25A6AFCF0((uint64_t)v9, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
  sub_25A6AFD58((uint64_t)v16, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = v21;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v21 + 32))(v6, v14, v4);
    char v22 = v20 & 1;
    sub_25A6C75F0();
    (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v6, v4);
    return sub_25A6AFC90((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
  }
  else
  {
    sub_25A6AFC90((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
    uint64_t result = sub_25A6C77D0();
    __break(1u);
  }
  return result;
}

uint64_t sub_25A6AC174(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

void sub_25A6AC1C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void *a7, int a8)
{
}

void sub_25A6AC218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void *a7, int a8)
{
}

void sub_25A6AC268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void *a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, SEL *a12)
{
  int v28 = a8;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(qword_26B329DF8);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C648);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v19, a1, v20);
  uint64_t v21 = type metadata accessor for XPCWrapper.Continuation();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v19, 0, 1, v21);
  swift_beginAccess();
  sub_25A6AE0D4((uint64_t)v19, a3);
  swift_endAccess();
  char v22 = *(void **)(a2 + 72);
  if (!a5)
  {
    swift_unknownObjectRetain();
    uint64_t v24 = a10;
    uint64_t v23 = a11;
    if (!a7) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  swift_unknownObjectRetain();
  a5 = (void *)sub_25A6C74A0();
  uint64_t v24 = a10;
  uint64_t v23 = a11;
  if (a7) {
LABEL_3:
  }
    a7 = (void *)sub_25A6C74A0();
LABEL_4:
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a2;
  *(void *)(v25 + 24) = a3;
  aBlock[4] = v24;
  void aBlock[5] = v25;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25A6AA9E4;
  aBlock[3] = v23;
  uint64_t v26 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v22, *a12, a5, a7, v28 & 1, v26);
  _Block_release(v26);
  swift_unknownObjectRelease();
}

void sub_25A6AC4D4(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, uint64_t a7, void *a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(qword_26B329DF8);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v23 = (char *)aBlock - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(qword_26B3296E8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v23, a1, v24);
  uint64_t v25 = type metadata accessor for XPCWrapper.Continuation();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v23, 0, 1, v25);
  swift_beginAccess();
  sub_25A6AE0D4((uint64_t)v23, a3);
  swift_endAccess();
  uint64_t v26 = *(void **)(a2 + 72);
  if (a8)
  {
    swift_unknownObjectRetain();
    a8 = (void *)sub_25A6C74A0();
    uint64_t v28 = a12;
    uint64_t v27 = a13;
    if (!a10) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  swift_unknownObjectRetain();
  uint64_t v28 = a12;
  uint64_t v27 = a13;
  if (a10) {
LABEL_3:
  }
    a10 = (void *)sub_25A6C74A0();
LABEL_4:
  if (v28) {
    uint64_t v29 = (void *)sub_25A6C74A0();
  }
  else {
    uint64_t v29 = 0;
  }
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = a2;
  *(void *)(v30 + 24) = a3;
  aBlock[4] = sub_25A6B0038;
  void aBlock[5] = v30;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25A692D84;
  aBlock[3] = &block_descriptor_60;
  id v31 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v26, sel_addRateLimitWithBundleIdentifier_featureIdentifier_workloadType_count_duration_ttl_jitter_completion_, a8, a10, v29, v27, v31, a4, a5, a6);
  _Block_release(v31);
  swift_unknownObjectRelease();
}

uint64_t sub_25A6AC79C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(qword_26B3296E8);
  uint64_t v18 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_26B329DF8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for XPCWrapper.Continuation();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v18 - v14;
  swift_beginAccess();
  sub_25A6AE334(a2, (uint64_t)v8);
  swift_endAccess();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_25A68F5B0((uint64_t)v8, qword_26B329DF8);
  }
  sub_25A6AFCF0((uint64_t)v8, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
  sub_25A6AFD58((uint64_t)v15, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_25A6AFC90((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
    uint64_t result = sub_25A6C77D0();
    __break(1u);
  }
  else
  {
    uint64_t v17 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v5, v13, v3);
    sub_25A6C75F0();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v5, v3);
    return sub_25A6AFC90((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
  }
  return result;
}

uint64_t sub_25A6ACABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_26B329DF8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_26B3296E8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v8, a1, v9);
  uint64_t v10 = type metadata accessor for XPCWrapper.Continuation();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 0, 1, v10);
  swift_beginAccess();
  sub_25A6AE0D4((uint64_t)v8, a3);
  swift_endAccess();
  uint64_t v11 = *(void **)(a2 + 72);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a3;
  aBlock[4] = sub_25A6B001C;
  void aBlock[5] = v12;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25A692D84;
  aBlock[3] = &block_descriptor_54;
  uint64_t v13 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v11, sel_resetRateLimitsWithCompletion_, v13);
  _Block_release(v13);
  return swift_unknownObjectRelease();
}

uint64_t sub_25A6ACCC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25A6ACDAC(a1, a2, a3, (uint64_t)&unk_270854270, (uint64_t)sub_25A6B0000, (uint64_t)&block_descriptor_48, (SEL *)&selRef_fetchServerDrivenConfigurationWithCompletion_);
}

uint64_t sub_25A6ACCF4(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(uint64_t, unint64_t))(a1 + 32);
  swift_retain();
  id v4 = a2;
  uint64_t v5 = sub_25A6C72D0();
  unint64_t v7 = v6;

  v3(v5, v7);
  sub_25A68F294(v5, v7);
  return swift_release();
}

uint64_t sub_25A6ACD7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25A6ACDAC(a1, a2, a3, (uint64_t)&unk_270854220, (uint64_t)sub_25A6AFFE4, (uint64_t)&block_descriptor_42, (SEL *)&selRef_listServerDrivenConfigurationWithCompletion_);
}

uint64_t sub_25A6ACDAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, SEL *a7)
{
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(qword_26B329DF8);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)aBlock - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C640);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v15, a1, v16);
  uint64_t v17 = type metadata accessor for XPCWrapper.Continuation();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v15, 0, 1, v17);
  swift_beginAccess();
  sub_25A6AE0D4((uint64_t)v15, a3);
  swift_endAccess();
  uint64_t v18 = *(void **)(a2 + 72);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a2;
  *(void *)(v19 + 24) = a3;
  aBlock[4] = a5;
  void aBlock[5] = v19;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25A6ACCF4;
  aBlock[3] = a6;
  uint64_t v20 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v18, *a7, v20);
  _Block_release(v20);
  return swift_unknownObjectRelease();
}

uint64_t sub_25A6ACFB8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v20 = a3;
  unint64_t v21 = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C640);
  uint64_t v22 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_26B329DF8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for XPCWrapper.Continuation();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v20 - v16;
  swift_beginAccess();
  sub_25A6AE334(a2, (uint64_t)v10);
  swift_endAccess();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return sub_25A68F5B0((uint64_t)v10, qword_26B329DF8);
  }
  sub_25A6AFCF0((uint64_t)v10, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
  sub_25A6AFD58((uint64_t)v17, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v19 = v22;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v7, v15, v5);
    uint64_t v23 = v20;
    unint64_t v24 = v21;
    sub_25A68F228(v20, v21);
    sub_25A6C75F0();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v5);
    return sub_25A6AFC90((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
  }
  else
  {
    sub_25A6AFC90((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
    uint64_t result = sub_25A6C77D0();
    __break(1u);
  }
  return result;
}

void sub_25A6AD2F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_26B329DF8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C640);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v8, a1, v9);
  uint64_t v10 = type metadata accessor for XPCWrapper.Continuation();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 0, 1, v10);
  swift_beginAccess();
  sub_25A6AE0D4((uint64_t)v8, a3);
  swift_endAccess();
  uint64_t v11 = *(void **)(a2 + 72);
  swift_unknownObjectRetain();
  uint64_t v12 = (void *)sub_25A6C72C0();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a2;
  *(void *)(v13 + 24) = a3;
  aBlock[4] = sub_25A6AFFA8;
  void aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25A6ACCF4;
  aBlock[3] = &block_descriptor_36;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v11, sel_setServerDrivenConfigurationWithJson_completion_, v12, v14);
  _Block_release(v14);
  swift_unknownObjectRelease();
}

void sub_25A6AD524(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(qword_26B329DF8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)aBlock - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(qword_26B3296E8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v14, a1, v15);
  uint64_t v16 = type metadata accessor for XPCWrapper.Continuation();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v14, 0, 1, v16);
  swift_beginAccess();
  sub_25A6AE0D4((uint64_t)v14, a3);
  swift_endAccess();
  uint64_t v17 = (void *)sub_25A6C72C0();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a2;
  *(void *)(v18 + 24) = a3;
  aBlock[4] = sub_25A6AFE38;
  void aBlock[5] = v18;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25A6AA9E4;
  aBlock[3] = &block_descriptor_16;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a4, sel_sendWithData_isComplete_completion_, v17, a7 & 1, v19);
  _Block_release(v19);
}

void sub_25A6AD754(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C2C0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TrustedCloudComputeError(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v22 - v15;
  if (a3 >> 60 == 15)
  {
    sub_25A6AB2E4(a4);
  }
  else
  {
    uint64_t v22 = v14;
    uint64_t v23 = a4;
    uint64_t v24 = a1;
    sub_25A68F228(a2, a3);
    sub_25A689D80(a2, a3, (uint64_t)v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    {
      sub_25A68F5B0((uint64_t)v10, &qword_26A44C2C0);
      uint64_t v17 = v22;
      TrustedCloudComputeError.init(file:line:message:)(0xD00000000000003FLL, 0x800000025A6D0E90, v22);
      sub_25A6B0488(&qword_26A44C3B0, 255, (void (*)(uint64_t))type metadata accessor for TrustedCloudComputeError);
      uint64_t v18 = (void *)swift_allocError();
      sub_25A6AFD58(v17, v19, type metadata accessor for TrustedCloudComputeError);
      sub_25A6A9420(v23, (uint64_t)v18);
      uint64_t v20 = v17;
    }
    else
    {
      sub_25A6AFCF0((uint64_t)v10, (uint64_t)v16, type metadata accessor for TrustedCloudComputeError);
      sub_25A6B0488(&qword_26A44C3B0, 255, (void (*)(uint64_t))type metadata accessor for TrustedCloudComputeError);
      uint64_t v18 = (void *)swift_allocError();
      sub_25A6AFD58((uint64_t)v16, v21, type metadata accessor for TrustedCloudComputeError);
      sub_25A6A9420(v23, (uint64_t)v18);
      uint64_t v20 = (uint64_t)v16;
    }
    sub_25A6AFC90(v20, type metadata accessor for TrustedCloudComputeError);
  }
}

void sub_25A6ADA88(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_26B329DF8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C648);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v10, a1, v11);
  uint64_t v12 = type metadata accessor for XPCWrapper.Continuation();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 0, 1, v12);
  swift_beginAccess();
  sub_25A6AE0D4((uint64_t)v10, a3);
  swift_endAccess();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a2;
  *(void *)(v13 + 24) = a3;
  aBlock[4] = sub_25A6AEF40;
  void aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25A6ADFC8;
  aBlock[3] = &block_descriptor_0;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a4, sel_nextWithCompletion_, v14);
  _Block_release(v14);
}

void sub_25A6ADC84(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  unint64_t v26 = a6;
  uint64_t v25 = a5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C2C0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TrustedCloudComputeError(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v24 - v16;
  if (a3 >> 60 == 15)
  {
    sub_25A6AA6C0(a4, v25, v26);
  }
  else
  {
    uint64_t v24 = v15;
    uint64_t v25 = a4;
    sub_25A68F228(a2, a3);
    sub_25A689D80(a2, a3, (uint64_t)v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    {
      sub_25A68F5B0((uint64_t)v11, &qword_26A44C2C0);
      uint64_t v18 = v24;
      TrustedCloudComputeError.init(file:line:message:)(0xD00000000000003FLL, 0x800000025A6D0E90, v24);
      sub_25A6B0488(&qword_26A44C3B0, 255, (void (*)(uint64_t))type metadata accessor for TrustedCloudComputeError);
      uint64_t v19 = swift_allocError();
      sub_25A6AFD58(v18, v20, type metadata accessor for TrustedCloudComputeError);
      sub_25A6A9420(v25, v19);
      sub_25A6AFC90(v18, type metadata accessor for TrustedCloudComputeError);
      uint64_t v21 = (void *)v19;
    }
    else
    {
      sub_25A6AFCF0((uint64_t)v11, (uint64_t)v17, type metadata accessor for TrustedCloudComputeError);
      sub_25A6B0488(&qword_26A44C3B0, 255, (void (*)(uint64_t))type metadata accessor for TrustedCloudComputeError);
      uint64_t v22 = swift_allocError();
      sub_25A6AFD58((uint64_t)v17, v23, type metadata accessor for TrustedCloudComputeError);
      sub_25A6A9420(v25, v22);
      sub_25A6AFC90((uint64_t)v17, type metadata accessor for TrustedCloudComputeError);
      uint64_t v21 = (void *)v22;
    }
  }
}

uint64_t sub_25A6ADFC8(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  uint64_t v5 = *(void (**)(void *, unint64_t, void *, unint64_t))(a1 + 32);
  if (a2)
  {
    swift_retain();
    id v6 = v4;
    id v4 = (void *)sub_25A6C72D0();
    unint64_t v8 = v7;

    if (a3)
    {
LABEL_3:
      id v9 = a3;
      a3 = (void *)sub_25A6C72D0();
      unint64_t v11 = v10;

      goto LABEL_6;
    }
  }
  else
  {
    swift_retain();
    unint64_t v8 = 0xF000000000000000;
    if (a3) {
      goto LABEL_3;
    }
  }
  unint64_t v11 = 0xF000000000000000;
LABEL_6:
  v5(v4, v8, a3, v11);
  sub_25A68F280((uint64_t)a3, v11);
  sub_25A68F280((uint64_t)v4, v8);
  return swift_release();
}

void sub_25A6AE0A8()
{
}

uint64_t sub_25A6AE0D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_26B329DF8);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for XPCWrapper.Continuation();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_25A68F5B0(a1, qword_26B329DF8);
    unint64_t v13 = sub_25A6AF0A0(a2);
    if (v14)
    {
      unint64_t v15 = v13;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v17 = *v3;
      uint64_t v21 = *v3;
      *uint64_t v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_25A6AF9B4();
        uint64_t v17 = v21;
      }
      sub_25A6AFCF0(*(void *)(v17 + 56) + *(void *)(v10 + 72) * v15, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
      sub_25A6AF5F0(v15, v17);
      *uint64_t v3 = v17;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    }
    return sub_25A68F5B0((uint64_t)v8, qword_26B329DF8);
  }
  else
  {
    sub_25A6AFCF0(a1, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_25A6AF7C0((uint64_t)v12, a2, v18);
    *uint64_t v3 = v21;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_25A6AE334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  unint64_t v5 = sub_25A6AF0A0(a1);
  if (v6)
  {
    unint64_t v7 = v5;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v2;
    uint64_t v19 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_25A6AF9B4();
      uint64_t v9 = v19;
    }
    uint64_t v10 = *(void *)(v9 + 56);
    uint64_t v11 = type metadata accessor for XPCWrapper.Continuation();
    uint64_t v18 = *(void *)(v11 - 8);
    sub_25A6AFCF0(v10 + *(void *)(v18 + 72) * v7, a2, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
    sub_25A6AF5F0(v7, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    uint64_t v13 = a2;
    uint64_t v14 = 0;
    uint64_t v15 = v11;
  }
  else
  {
    uint64_t v16 = type metadata accessor for XPCWrapper.Continuation();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    uint64_t v15 = v16;
    uint64_t v13 = a2;
    uint64_t v14 = 1;
  }
  return v12(v13, v14, 1, v15);
}

uint64_t sub_25A6AE4A0()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0228](v0, 88, 7);
}

uint64_t type metadata accessor for XPCWrapper()
{
  return self;
}

uint64_t *sub_25A6AE51C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C638);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        break;
      case 2u:
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C640);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        break;
      case 3u:
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C648);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        break;
      case 4u:
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B329CF0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        break;
      case 5u:
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C650);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
        break;
      case 6u:
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C658);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        break;
      default:
        uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_26B3296E8);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_25A6AE81C(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 6)
  {
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)*(&off_26547B080 + (int)result));
    id v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

uint64_t sub_25A6AE8A0(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)*(&off_26547B080 + EnumCaseMultiPayload));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_25A6AE938(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_25A6AFC90(a1, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)*(&off_26547B080 + EnumCaseMultiPayload));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for XPCWrapper.Continuation()
{
  uint64_t result = qword_26B329DE8;
  if (!qword_26B329DE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25A6AEA40(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)*(&off_26547B080 + EnumCaseMultiPayload));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_25A6AEAD8(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_25A6AFC90(a1, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)*(&off_26547B080 + EnumCaseMultiPayload));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_25A6AEB94()
{
  sub_25A6AEDF8(319, &qword_26B329FB8);
  if (v0 <= 0x3F)
  {
    sub_25A6AEDF8(319, &qword_26B329FB0);
    if (v1 <= 0x3F)
    {
      sub_25A6AEDF8(319, &qword_26B329F90);
      if (v2 <= 0x3F)
      {
        sub_25A6AEE64(319, &qword_26B329F88, qword_26B329DB8);
        if (v3 <= 0x3F)
        {
          sub_25A6AEDF8(319, &qword_26B329FA0);
          if (v4 <= 0x3F)
          {
            sub_25A6AEE64(319, &qword_26B329FA8, (uint64_t *)&unk_26B32A010);
            if (v5 <= 0x3F)
            {
              sub_25A6AEE64(319, &qword_26B329F98, &qword_26B329F60);
              if (v6 <= 0x3F) {
                swift_initEnumMetadataMultiPayload();
              }
            }
          }
        }
      }
    }
  }
}

void sub_25A6AEDF8(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B329FE0);
    unint64_t v3 = sub_25A6C7600();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_25A6AEE64(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B329FE0);
    unint64_t v4 = sub_25A6C7600();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_25A6AEED8()
{
  return sub_25A6C76C0();
}

void sub_25A6AEEFC(uint64_t a1)
{
  sub_25A6ADA88(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_25A6AEF08()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25A6AEF40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(v4 + 24);
  v7[2] = a3;
  v7[3] = a4;
  v7[4] = v5;
  v7[5] = a1;
  v7[6] = a2;
  return sub_25A6A8A70((uint64_t)sub_25A6AEFCC, (uint64_t)v7);
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

void sub_25A6AEFCC(uint64_t a1)
{
  sub_25A6ADC84(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_25A6AEFF0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25A6AF000()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_25A6AF028(uint64_t a1, uint64_t a2)
{
  sub_25A6C7AA0();
  sub_25A6C74E0();
  uint64_t v4 = sub_25A6C7AE0();
  return sub_25A6AF0E4(a1, a2, v4);
}

unint64_t sub_25A6AF0A0(uint64_t a1)
{
  uint64_t v2 = sub_25A6C7A90();
  return sub_25A6AF1C8(a1, v2);
}

unint64_t sub_25A6AF0E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_25A6C7A00() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_25A6C7A00() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_25A6AF1C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

uint64_t sub_25A6AF264(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for XPCWrapper.Continuation();
  uint64_t v38 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B329FD8);
  char v9 = a2;
  uint64_t result = sub_25A6C77F0();
  uint64_t v11 = result;
  if (*(void *)(v8 + 16))
  {
    uint64_t v35 = v3;
    int64_t v12 = 0;
    uint64_t v13 = *(void *)(v8 + 64);
    uint64_t v37 = (void *)(v8 + 64);
    uint64_t v14 = 1 << *(unsigned char *)(v8 + 32);
    if (v14 < 64) {
      uint64_t v15 = ~(-1 << v14);
    }
    else {
      uint64_t v15 = -1;
    }
    unint64_t v16 = v15 & v13;
    int64_t v36 = (unint64_t)(v14 + 63) >> 6;
    uint64_t v17 = result + 64;
    while (1)
    {
      if (v16)
      {
        unint64_t v19 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        unint64_t v20 = v19 | (v12 << 6);
      }
      else
      {
        int64_t v21 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v37;
        if (v21 >= v36) {
          goto LABEL_34;
        }
        unint64_t v22 = v37[v21];
        ++v12;
        if (!v22)
        {
          int64_t v12 = v21 + 1;
          if (v21 + 1 >= v36) {
            goto LABEL_34;
          }
          unint64_t v22 = v37[v12];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v36)
            {
LABEL_34:
              if ((v9 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v35;
                goto LABEL_41;
              }
              uint64_t v34 = 1 << *(unsigned char *)(v8 + 32);
              if (v34 >= 64) {
                bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v37 = -1 << v34;
              }
              uint64_t v3 = v35;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v22 = v37[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v12 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_43;
                }
                if (v12 >= v36) {
                  goto LABEL_34;
                }
                unint64_t v22 = v37[v12];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v12 = v23;
          }
        }
LABEL_21:
        unint64_t v16 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v12 << 6);
      }
      uint64_t v24 = *(void *)(*(void *)(v8 + 48) + 8 * v20);
      uint64_t v25 = *(void *)(v38 + 72);
      uint64_t v26 = *(void *)(v8 + 56) + v25 * v20;
      if (v9) {
        sub_25A6AFCF0(v26, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
      }
      else {
        sub_25A6AFD58(v26, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
      }
      uint64_t result = sub_25A6C7A90();
      uint64_t v27 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v17 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v28) & ~*(void *)(v17 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v17 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v18 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v17 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v11 + 48) + 8 * v18) = v24;
      uint64_t result = sub_25A6AFCF0((uint64_t)v7, *(void *)(v11 + 56) + v25 * v18, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
      ++*(void *)(v11 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *uint64_t v3 = v11;
  return result;
}

unint64_t sub_25A6AF5F0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_25A6C7720();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        uint64_t v10 = (void *)(v9 + 8 * v6);
        uint64_t result = sub_25A6C7A90();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11) {
            goto LABEL_6;
          }
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        uint64_t v14 = (void *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1) {
          *uint64_t v14 = *v10;
        }
        uint64_t v15 = *(void *)(a2 + 56);
        uint64_t v16 = *(void *)(*(void *)(type metadata accessor for XPCWrapper.Continuation() - 8) + 72);
        int64_t v17 = v16 * v3;
        uint64_t result = v15 + v16 * v3;
        int64_t v18 = v16 * v6;
        unint64_t v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v17 == v18) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << result) - 1;
  }
  *int64_t v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_25A6AF7C0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  unint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_25A6AF0A0(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_25A6AF9B4();
      goto LABEL_7;
    }
    sub_25A6AF264(v13, a3 & 1);
    unint64_t v20 = sub_25A6AF0A0(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      unint64_t v10 = v20;
      uint64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_25A6C7A40();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7];
    uint64_t v18 = v17 + *(void *)(*(void *)(type metadata accessor for XPCWrapper.Continuation() - 8) + 72) * v10;
    return sub_25A6AFDD4(a1, v18);
  }
LABEL_13:
  return sub_25A6AF90C(v10, a2, a1, v16);
}

uint64_t sub_25A6AF90C(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = type metadata accessor for XPCWrapper.Continuation();
  uint64_t result = sub_25A6AFCF0(a3, v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

void *sub_25A6AF9B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for XPCWrapper.Continuation();
  uint64_t v26 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B329FD8);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_25A6C77E0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v24 = v1;
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v25 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v14) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v20);
    ++v10;
    if (!v21)
    {
      int64_t v10 = v20 + 1;
      if (v20 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v21 = *(void *)(v25 + 8 * v10);
      if (!v21) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void *)(*(void *)(v5 + 48) + 8 * v16);
    unint64_t v19 = *(void *)(v26 + 72) * v16;
    sub_25A6AFD58(*(void *)(v5 + 56) + v19, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
    *(void *)(*(void *)(v7 + 48) + v17) = v18;
    uint64_t result = (void *)sub_25A6AFCF0((uint64_t)v4, *(void *)(v7 + 56) + v19, (uint64_t (*)(void))type metadata accessor for XPCWrapper.Continuation);
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v14)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v25 + 8 * v22);
  if (v21)
  {
    int64_t v10 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v10);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_25A6AFC2C()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25A6AFC64(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_25A6AFC90(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25A6AFCF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25A6AFD58(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25A6AFDC0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_25A68F228(a1, a2);
  }
  return a1;
}

uint64_t sub_25A6AFDD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for XPCWrapper.Continuation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_25A6AFE38(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 24);
  v5[2] = a1;
  v5[3] = a2;
  v5[4] = v3;
  return sub_25A6A8A70((uint64_t)sub_25A6AFEA8, (uint64_t)v5);
}

void sub_25A6AFEA8(uint64_t a1)
{
  sub_25A6AD754(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

void sub_25A6AFEC8(uint64_t a1)
{
  sub_25A6AD524(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(unsigned char *)(v1 + 56));
}

uint64_t sub_25A6AFEDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(v3 + 24);
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = v4;
  v6[5] = a1;
  return sub_25A6A8A70((uint64_t)sub_25A6AFF4C, (uint64_t)v6);
}

void sub_25A6AFF4C(uint64_t a1)
{
  sub_25A6A90A0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_25A6AFF6C(uint64_t a1, uint64_t a2)
{
  return sub_25A6B038C(a1, a2, (uint64_t)sub_25A6AFF88);
}

uint64_t sub_25A6AFF88(uint64_t a1)
{
  return sub_25A6AA110(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_25A6AFFA8(uint64_t a1, uint64_t a2)
{
  return sub_25A6B038C(a1, a2, (uint64_t)sub_25A6AFFC4);
}

uint64_t sub_25A6AFFC4(uint64_t a1)
{
  return sub_25A6ACFB8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_25A6AFFE4(uint64_t a1, uint64_t a2)
{
  return sub_25A6B038C(a1, a2, (uint64_t)sub_25A6B074C);
}

uint64_t sub_25A6B0000(uint64_t a1, uint64_t a2)
{
  return sub_25A6B038C(a1, a2, (uint64_t)sub_25A6B074C);
}

uint64_t sub_25A6B001C()
{
  return sub_25A6B0244((uint64_t)sub_25A6B077C);
}

uint64_t sub_25A6B0038()
{
  return sub_25A6B0244((uint64_t)sub_25A6B0054);
}

uint64_t sub_25A6B0054(uint64_t a1)
{
  return sub_25A6AC79C(a1, *(void *)(v1 + 16));
}

uint64_t sub_25A6B0070(uint64_t a1, uint64_t a2)
{
  return sub_25A6B038C(a1, a2, (uint64_t)sub_25A6B008C);
}

uint64_t sub_25A6B008C(uint64_t a1)
{
  return sub_25A6AAD08(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_25A6B00AC(uint64_t a1, uint64_t a2)
{
  return sub_25A6B038C(a1, a2, (uint64_t)sub_25A6B0764);
}

uint64_t sub_25A6B00C8(uint64_t a1)
{
  return sub_25A6B01C8(a1, (uint64_t)sub_25A6B00E4);
}

uint64_t sub_25A6B00E4(uint64_t a1)
{
  return sub_25A6AB6C0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_25A6B0100(char a1)
{
  v3[2] = *(void *)(v1 + 24);
  char v4 = a1;
  return sub_25A6A8A70((uint64_t)sub_25A6B0170, (uint64_t)v3);
}

uint64_t sub_25A6B0170(uint64_t a1)
{
  return sub_25A6ABE3C(a1, *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

uint64_t sub_25A6B0190(uint64_t a1)
{
  return sub_25A6B01C8(a1, (uint64_t)sub_25A6B06E4);
}

uint64_t sub_25A6B01AC(uint64_t a1)
{
  return sub_25A6B01C8(a1, (uint64_t)sub_25A6B06E4);
}

uint64_t sub_25A6B01C8(uint64_t a1, uint64_t a2)
{
  v4[2] = *(void *)(v2 + 24);
  v4[3] = a1;
  return sub_25A6A8A70(a2, (uint64_t)v4);
}

uint64_t sub_25A6B0228()
{
  return sub_25A6B0244((uint64_t)sub_25A6B077C);
}

uint64_t sub_25A6B0244(uint64_t a1)
{
  v3[2] = *(void *)(v1 + 24);
  return sub_25A6A8A70(a1, (uint64_t)v3);
}

void sub_25A6B029C(uint64_t a1)
{
  sub_25A6AAA7C(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

unint64_t sub_25A6B02AC()
{
  unint64_t result = qword_26A44C680;
  if (!qword_26A44C680)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A44C678);
    sub_25A6B0488(&qword_26A44C688, 255, (void (*)(uint64_t))type metadata accessor for Prefetch.Response);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C680);
  }
  return result;
}

uint64_t sub_25A6B0354(uint64_t a1, uint64_t a2)
{
  return sub_25A6B038C(a1, a2, (uint64_t)sub_25A6B0764);
}

uint64_t sub_25A6B0370(uint64_t a1, uint64_t a2)
{
  return sub_25A6B038C(a1, a2, (uint64_t)sub_25A6B0764);
}

uint64_t sub_25A6B038C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v5[2] = *(void *)(v3 + 24);
  v5[3] = a1;
  v5[4] = a2;
  return sub_25A6A8A70(a3, (uint64_t)v5);
}

uint64_t sub_25A6B03F0()
{
  return sub_25A6A8A70((uint64_t)sub_25A6A8C74, 0);
}

unint64_t sub_25A6B0448()
{
  unint64_t result = qword_26B329FD0;
  if (!qword_26B329FD0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B329FD0);
  }
  return result;
}

uint64_t sub_25A6B0488(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25A6B04D0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25A6B0520()
{
  return sub_25A6A8A70((uint64_t)sub_25A6B0638, 0);
}

uint64_t sub_25A6B0578(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C690);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25A6B05E0()
{
  return sub_25A6A8A70((uint64_t)sub_25A6AE0A8, 0);
}

void sub_25A6B0638()
{
}

uint64_t sub_25A6B06E4(uint64_t a1)
{
  return sub_25A6B00E4(a1);
}

uint64_t sub_25A6B074C(uint64_t a1)
{
  return sub_25A6AFFC4(a1);
}

uint64_t sub_25A6B0764(uint64_t a1)
{
  return sub_25A6B008C(a1);
}

uint64_t sub_25A6B077C(uint64_t a1)
{
  return sub_25A6B0054(a1);
}

uint64_t TrustedRequest.init(id:workloadType:workloadParameters:featureIdentifier:sessionIdentifier:bundleIdentifierOverride:originatingBundleIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  unint64_t v13 = (int *)type metadata accessor for TrustedRequest();
  uint64_t v24 = v13[6];
  int64_t v14 = (void *)(a9 + v13[7]);
  unint64_t v15 = (void *)(a9 + v13[8]);
  *unint64_t v15 = 0;
  v15[1] = 0;
  unint64_t v16 = (void *)(a9 + v13[9]);
  uint64_t v17 = a9 + v13[10];
  uint64_t v18 = sub_25A6C73D0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
  v23(v17, 1, 1, v18);
  int64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32);
  v20(a9, a1, v18);
  unint64_t v21 = (void *)(a9 + v13[5]);
  *unint64_t v21 = a2;
  v21[1] = a3;
  *(void *)(a9 + v24) = a4;
  *int64_t v14 = a8;
  v14[1] = a10;
  *unint64_t v16 = a5;
  v16[1] = a6;
  sub_25A68F5B0(v17, &qword_26A44C438);
  v20(v17, a7, v18);
  v23(v17, 0, 1, v18);
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v15 = a11;
  v15[1] = a12;
  return result;
}

uint64_t type metadata accessor for TrustedRequest()
{
  uint64_t result = qword_26A44C718;
  if (!qword_26A44C718) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t TrustedRequest.init(id:workloadType:workloadParameters:bundleIdentifier:featureIdentifier:sessionIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  unint64_t v13 = (int *)type metadata accessor for TrustedRequest();
  uint64_t v14 = v13[6];
  unint64_t v15 = (void *)(a9 + v13[7]);
  unint64_t v16 = (void *)(a9 + v13[8]);
  *unint64_t v16 = 0;
  v16[1] = 0;
  uint64_t v17 = (void *)(a9 + v13[9]);
  uint64_t v18 = a9 + v13[10];
  uint64_t v19 = sub_25A6C73D0();
  uint64_t v20 = *(void *)(v19 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v18, 1, 1, v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(a9, a1, v19);
  unint64_t v21 = (void *)(a9 + v13[5]);
  *unint64_t v21 = a2;
  v21[1] = a3;
  *(void *)(a9 + v14) = a4;
  *unint64_t v15 = a5;
  v15[1] = a6;
  *uint64_t v17 = a7;
  v17[1] = a8;
  return sub_25A6A5E08(a10, v18);
}

uint64_t TrustedRequest.Writer.write<A>(contentsOf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = a3;
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 40) = *(void *)(a2 - 8);
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = *v3;
  *(void *)(v4 + 48) = v5;
  *(void *)(v4 + 56) = v6;
  *(_OWORD *)(v4 + 64) = *(_OWORD *)(v3 + 1);
  *(void *)(v4 + 80) = v3[3];
  return MEMORY[0x270FA2498](sub_25A6B0BB4, 0, 0);
}

{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  uint64_t v5 = *v3;
  *(void *)(v4 + 32) = a3;
  *(void *)(v4 + 40) = v5;
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(v3 + 1);
  *(void *)(v4 + 64) = v3[3];
  return MEMORY[0x270FA2498](sub_25A6B1444, 0, 0);
}

uint64_t sub_25A6B0BB4()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v4 = v0[7];
  uint64_t v3 = v0[8];
  (*(void (**)(void, void, void))(v0[5] + 16))(v0[6], v0[2], v0[3]);
  uint64_t v5 = sub_25A6C72E0();
  uint64_t v7 = v6;
  v0[11] = v5;
  v0[12] = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[13] = v8;
  v8[2] = v4;
  v8[3] = v3;
  v8[4] = v2;
  v8[5] = v1;
  v8[6] = v5;
  v8[7] = v7;
  unint64_t v9 = (void *)swift_task_alloc();
  v0[14] = v9;
  v9[2] = v4;
  v9[3] = v3;
  v9[4] = v2;
  v9[5] = v1;
  int64_t v10 = (void *)swift_task_alloc();
  v0[15] = v10;
  *int64_t v10 = v0;
  v10[1] = sub_25A6B0D1C;
  return MEMORY[0x270FA2338]();
}

uint64_t sub_25A6B0D1C()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_25A6B0EB0;
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = sub_25A6B0E40;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25A6B0E40()
{
  sub_25A68F294(v0[11], v0[12]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_25A6B0EB0()
{
  uint64_t v2 = v0[11];
  unint64_t v1 = v0[12];
  swift_task_dealloc();
  swift_task_dealloc();
  sub_25A68F294(v2, v1);
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t TrustedRequest.Writer.write(data:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  *(void *)(v3 + 32) = *(void *)v2;
  *(_OWORD *)(v3 + 40) = *(_OWORD *)(v2 + 8);
  *(void *)(v3 + 56) = *(void *)(v2 + 24);
  return MEMORY[0x270FA2498](sub_25A6B0F78, 0, 0);
}

uint64_t sub_25A6B0F78()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v4 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v6 = v0[2];
  uint64_t v5 = v0[3];
  uint64_t v7 = (void *)swift_task_alloc();
  v0[8] = v7;
  v7[2] = v4;
  v7[3] = v3;
  v7[4] = v2;
  v7[5] = v1;
  v7[6] = v6;
  v7[7] = v5;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[9] = v8;
  v8[2] = v4;
  v8[3] = v3;
  v8[4] = v2;
  v8[5] = v1;
  unint64_t v9 = (void *)swift_task_alloc();
  v0[10] = v9;
  *unint64_t v9 = v0;
  v9[1] = sub_25A6B10A4;
  return MEMORY[0x270FA2338]();
}

uint64_t sub_25A6B10A4()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_25A6B11C8;
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = sub_25A6A7314;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25A6B11C8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25A6B1234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v12;
  *uint64_t v12 = v7;
  v12[1] = sub_25A692EF0;
  return sub_25A6A6EF0(a2, a3, a6, a7, 1);
}

uint64_t sub_25A6B12FC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  int64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *int64_t v10 = v2;
  v10[1] = sub_25A69454C;
  return sub_25A6B1234(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_25A6B13D0()
{
  return sub_25A6B2668(v0[2], v0[3], v0[4]);
}

uint64_t sub_25A6B1444()
{
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 72) = v6;
  *(_OWORD *)(v6 + 16) = *(_OWORD *)(v0 + 24);
  *(void *)(v6 + 32) = v5;
  *(void *)(v6 + 40) = v4;
  *(void *)(v6 + 48) = v3;
  *(void *)(v6 + 56) = v2;
  *(void *)(v6 + 64) = v1;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v7;
  v7[2] = v4;
  v7[3] = v3;
  v7[4] = v2;
  v7[5] = v1;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_25A6B1570;
  return MEMORY[0x270FA2338]();
}

uint64_t sub_25A6B1570()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_25A6B1694;
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = sub_25A6A7314;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25A6B1694()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25A6B1700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a4;
  v8[7] = a5;
  v8[4] = a2;
  v8[5] = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[10] = AssociatedTypeWitness;
  v8[11] = *(void *)(AssociatedTypeWitness - 8);
  v8[12] = swift_task_alloc();
  v8[13] = swift_task_alloc();
  v8[14] = *(void *)(a7 - 8);
  v8[15] = swift_task_alloc();
  uint64_t v11 = swift_getAssociatedTypeWitness();
  unsigned char v8[16] = v11;
  v8[17] = *(void *)(v11 - 8);
  v8[18] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25A6B18C8, 0, 0);
}

uint64_t sub_25A6B18C8()
{
  (*(void (**)(void, void, void))(v0[14] + 16))(v0[15], v0[4], v0[8]);
  sub_25A6C7640();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v0[19] = AssociatedConformanceWitness;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[20] = v2;
  void *v2 = v0;
  v2[1] = sub_25A6B19F0;
  uint64_t v3 = v0[16];
  uint64_t v4 = v0[13];
  return MEMORY[0x270FA1E88](v0 + 2, 0, 0, v4, v3, AssociatedConformanceWitness);
}

uint64_t sub_25A6B19F0()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_25A6B240C;
  }
  else {
    uint64_t v1 = sub_25A6B1B00;
  }
  return MEMORY[0x270FA2498](v1, 0, 0);
}

uint64_t sub_25A6B1B00()
{
  unint64_t v1 = v0[3];
  v0[21] = v0[2];
  v0[22] = v1;
  if (v1 >> 60 == 15)
  {
    (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[23] = v2;
    void *v2 = v0;
    v2[1] = sub_25A6B1C64;
    uint64_t v3 = v0[6];
    uint64_t v4 = v0[5];
    return sub_25A6A6EF0(v4, v3, 0, 0xC000000000000000, 1);
  }
  else
  {
    type metadata accessor for XPCWrapper();
    v0[25] = sub_25A692D3C(&qword_26B329E70, (void (*)(uint64_t))type metadata accessor for XPCWrapper);
    uint64_t v7 = sub_25A6C75D0();
    v0[26] = v7;
    v0[27] = v6;
    return MEMORY[0x270FA2498](sub_25A6B1E84, v7, v6);
  }
}

uint64_t sub_25A6B1C64()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 192) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_25A6B1DD0, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_25A6B1DD0()
{
  sub_25A6928B0(v0[5], v0[6], v0[7]);
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_25A6B1E84(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, void (*a6)(uint64_t a1), uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8[7];
  if (*(void *)(v9 + 56) == v8[5])
  {
    uint64_t v10 = *(void *)(v9 + 16);
    if (__OFADD__(v10, 1))
    {
      __break(1u);
    }
    else
    {
      uint64_t v11 = v8[25];
      uint64_t v13 = v8[21];
      uint64_t v12 = v8[22];
      uint64_t v14 = v8[6];
      *(void *)(v9 + 16) = v10 + 1;
      uint64_t v15 = swift_task_alloc();
      v8[28] = v15;
      *(void *)(v15 + 16) = v9;
      *(void *)(v15 + 24) = v10;
      *(void *)(v15 + 32) = v14;
      *(void *)(v15 + 40) = v13;
      *(void *)(v15 + 48) = v12;
      *(unsigned char *)(v15 + 56) = 0;
      a1 = (void *)swift_task_alloc();
      v8[29] = a1;
      *a1 = v8;
      a1[1] = sub_25A6B20A0;
      a4 = 0xD000000000000029;
      a8 = MEMORY[0x263F8EE60] + 8;
      a5 = 0x800000025A6D0EF0;
      a6 = sub_25A6AFEC8;
      a2 = v9;
      a3 = v11;
      a7 = v15;
    }
    return MEMORY[0x270FA2360](a1, a2, a3, a4, a5, a6, a7, a8);
  }
  else
  {
    type metadata accessor for TrustedCloudComputeError(0);
    sub_25A692D3C(&qword_26A44C3B0, (void (*)(uint64_t))type metadata accessor for TrustedCloudComputeError);
    uint64_t v16 = swift_allocError();
    *(void *)uint64_t v17 = 0xD000000000000016;
    *(void *)(v17 + 8) = 0x800000025A6CF340;
    *(unsigned char *)(v17 + 16) = 0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    v8[31] = v16;
    return MEMORY[0x270FA2498](sub_25A6B2330, 0, 0);
  }
}

uint64_t sub_25A6B20A0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 240) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 208);
    uint64_t v4 = *(void *)(v2 + 216);
    uint64_t v5 = sub_25A6B22C0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 208);
    uint64_t v4 = *(void *)(v2 + 216);
    uint64_t v5 = sub_25A6B21BC;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_25A6B21BC()
{
  return MEMORY[0x270FA2498](sub_25A6B21D8, 0, 0);
}

uint64_t sub_25A6B21D8()
{
  sub_25A68F280(v0[21], v0[22]);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v0[19] = AssociatedConformanceWitness;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[20] = v2;
  void *v2 = v0;
  v2[1] = sub_25A6B19F0;
  uint64_t v3 = v0[16];
  uint64_t v4 = v0[13];
  return MEMORY[0x270FA1E88](v0 + 2, 0, 0, v4, v3, AssociatedConformanceWitness);
}

uint64_t sub_25A6B22C0()
{
  swift_task_dealloc();
  *(void *)(v0 + 248) = *(void *)(v0 + 240);
  return MEMORY[0x270FA2498](sub_25A6B2330, 0, 0);
}

uint64_t sub_25A6B2330()
{
  uint64_t v2 = v0[17];
  uint64_t v1 = v0[18];
  uint64_t v3 = v0[16];
  sub_25A68F280(v0[21], v0[22]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_25A6928B0(v0[5], v0[6], v0[7]);
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_25A6B240C()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[11] + 32);
  v1(v0[12], v0[13], v0[10]);
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = sub_25A6C79E0();
  uint64_t v3 = v0[12];
  if (v2)
  {
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
  }
  else
  {
    uint64_t v4 = v0[10];
    swift_allocError();
    v1(v5, v3, v4);
  }
  (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
  sub_25A6928B0(v0[5], v0[6], v0[7]);
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_25A6B258C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_25A692EF0;
  return sub_25A6B1700(a1, v6, v7, v8, v9, v10, v4, v5);
}

uint64_t sub_25A6B2668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B329CF8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25A6C7630();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = 0;
  v11[3] = 0;
  v11[4] = a1;
  v11[5] = a2;
  v11[6] = a3;
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  swift_unknownObjectRetain();
  swift_retain();
  if (a1 == 1)
  {
    sub_25A68F5B0((uint64_t)v8, &qword_26B329CF8);
  }
  else
  {
    sub_25A6C7620();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (v11[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v12 = sub_25A6C75D0();
      uint64_t v14 = v13;
      swift_unknownObjectRelease();
      if (v14 | v12)
      {
        v16[0] = 0;
        v16[1] = 0;
        v16[2] = v12;
        v16[3] = v14;
      }
    }
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_25A6B28A0()
{
  return sub_25A6B2668(v0[2], v0[3], v0[4]);
}

uint64_t TrustedRequest.Response.makeAsyncIterator()@<X0>(void *a1@<X8>)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v5 = v1[2];
  uint64_t v6 = (atomic_uchar *)(*(uint64_t (**)(void))(*(void *)v1[3] + 136))();
  char v7 = 0;
  atomic_compare_exchange_strong(v6, (unsigned __int8 *)&v7, 1u);
  if (v7)
  {
    uint64_t result = sub_25A6C77D0();
    __break(1u);
  }
  else
  {
    sub_25A6C7220();
    swift_allocObject();
    swift_unknownObjectRetain();
    swift_retain();
    uint64_t v8 = sub_25A6C7210();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C588);
    uint64_t result = swift_allocObject();
    *(unsigned char *)(result + 16) = 0;
    *a1 = v4;
    a1[1] = v3;
    a1[2] = v5;
    a1[3] = v8;
    a1[4] = result;
  }
  return result;
}

uint64_t TrustedRequest.Response.AsyncIterator.next()()
{
  *(void *)(v1 + 32) = v0;
  return MEMORY[0x270FA2498](sub_25A6B2A14, 0, 0);
}

uint64_t sub_25A6B2A14()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(**(void **)(v0[4] + 32) + 136);
  uint64_t v2 = swift_retain();
  uint64_t v3 = (atomic_uchar *)v1(v2);
  LOBYTE(v1) = 0;
  atomic_compare_exchange_strong(v3, (unsigned __int8 *)&v1, 1u);
  swift_release();
  if (v1) {
    return sub_25A6C77D0();
  }
  uint64_t v4 = (uint64_t *)v0[4];
  uint64_t v5 = swift_task_alloc();
  v0[5] = v5;
  *(void *)(v5 + 16) = v4;
  uint64_t v7 = *v4;
  uint64_t v6 = v4[1];
  v0[6] = v6;
  uint64_t v8 = v4[2];
  v0[7] = v8;
  uint64_t v9 = (void *)swift_task_alloc();
  v0[8] = v9;
  v9[2] = v7;
  v9[3] = v6;
  v9[4] = v8;
  swift_unknownObjectRetain();
  swift_retain();
  uint64_t v10 = (void *)swift_task_alloc();
  v0[9] = v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(qword_26B329DB8);
  *uint64_t v10 = v0;
  v10[1] = sub_25A6B2C14;
  return MEMORY[0x270FA2338](v0 + 2, &unk_26A44C6F8, v5, sub_25A6B3498, v9, 0, 0, v11);
}

uint64_t sub_25A6B2C14()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_25A6B2E18;
  }
  else
  {
    swift_unknownObjectRelease();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = sub_25A6B2D54;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25A6B2D54()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[2];
  uint64_t v3 = *(uint64_t (**)(uint64_t))(**(void **)(v0[4] + 32) + 136);
  uint64_t v4 = swift_retain();
  uint64_t v5 = (atomic_uchar *)v3(v4);
  LOBYTE(v3) = 1;
  atomic_compare_exchange_strong(v5, (unsigned __int8 *)&v3, 0);
  uint64_t result = swift_release();
  if (v3)
  {
    uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
    return v7(v2, v1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25A6B2E18()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_unknownObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)(v1 + 32) + 136);
  uint64_t v3 = swift_retain();
  uint64_t v4 = (atomic_uchar *)v2(v3);
  LOBYTE(v2) = 1;
  atomic_compare_exchange_strong(v4, (unsigned __int8 *)&v2, 0);
  uint64_t result = swift_release();
  if (v2)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25A6B2EEC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x270FA2498](sub_25A6B2F0C, 0, 0);
}

uint64_t sub_25A6B2F0C()
{
  uint64_t v1 = (uint64_t *)v0[3];
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  v0[4] = v2;
  v0[5] = v1[2];
  swift_unknownObjectRetain();
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_25A6B2FD4;
  return sub_25A6A7390(v3, v2);
}

uint64_t sub_25A6B2FD4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 56) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_25A6B3140;
  }
  else
  {
    swift_unknownObjectRelease();
    swift_release();
    *(void *)(v6 + 64) = a2;
    *(void *)(v6 + 72) = a1;
    uint64_t v7 = sub_25A6B3118;
  }
  return MEMORY[0x270FA2498](v7, 0, 0);
}

uint64_t sub_25A6B3118()
{
  *(int8x16_t *)*(void *)(v0 + 16) = vextq_s8(*(int8x16_t *)(v0 + 64), *(int8x16_t *)(v0 + 64), 8uLL);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_25A6B3140()
{
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25A6B31AC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_25A69454C;
  return MEMORY[0x270FA2498](sub_25A6B2F0C, 0, 0);
}

uint64_t sub_25A6B325C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B329CF8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25A6C7630();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = 0;
  v11[3] = 0;
  v11[4] = a1;
  v11[5] = a2;
  v11[6] = a3;
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  swift_unknownObjectRetain();
  swift_retain();
  if (a1 == 1)
  {
    sub_25A68F5B0((uint64_t)v8, &qword_26B329CF8);
  }
  else
  {
    sub_25A6C7620();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (v11[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v12 = sub_25A6C75D0();
      uint64_t v14 = v13;
      swift_unknownObjectRelease();
      if (v14 | v12)
      {
        v16[0] = 0;
        v16[1] = 0;
        v16[2] = v12;
        v16[3] = v14;
      }
    }
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_25A6B3498()
{
  return sub_25A6B325C(v0[2], v0[3], v0[4]);
}

uint64_t sub_25A6B34A4(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_25A6B3550;
  void v3[4] = v1;
  return MEMORY[0x270FA2498](sub_25A6B2A14, 0, 0);
}

uint64_t sub_25A6B3550(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  swift_task_dealloc();
  if (!v2)
  {
    uint64_t v8 = *(void **)(v6 + 16);
    *uint64_t v8 = a1;
    v8[1] = a2;
  }
  uint64_t v9 = *(uint64_t (**)(void))(v7 + 8);
  return v9();
}

uint64_t sub_25A6B366C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a3;
  void v5[6] = a4;
  v5[3] = a1;
  v5[4] = a2;
  uint64_t v6 = (void *)swift_task_alloc();
  v5[7] = v6;
  void *v6 = v5;
  v6[1] = sub_25A6B371C;
  v6[4] = v4;
  return MEMORY[0x270FA2498](sub_25A6B2A14, 0, 0);
}

uint64_t sub_25A6B371C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)*v3;
  void v6[8] = v2;
  swift_task_dealloc();
  if (v2)
  {
    if (v6[4])
    {
      swift_getObjectType();
      uint64_t v7 = sub_25A6C75D0();
      uint64_t v9 = v8;
    }
    else
    {
      uint64_t v7 = 0;
      uint64_t v9 = 0;
    }
    return MEMORY[0x270FA2498](sub_25A6B3898, v7, v9);
  }
  else
  {
    uint64_t v10 = (void *)v6[3];
    *uint64_t v10 = a1;
    v10[1] = a2;
    uint64_t v11 = (uint64_t (*)(void))v6[1];
    return v11();
  }
}

uint64_t sub_25A6B3898()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = (void *)v0[6];
  v0[2] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B329FE0);
  swift_willThrowTypedImpl();
  void *v2 = v1;
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_25A6B3930@<X0>(void *a1@<X8>)
{
  TrustedRequest.Response.makeAsyncIterator()(a1);
  swift_release();
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t TrustedRequest.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_25A6C73D0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t TrustedRequest.id.setter(uint64_t a1)
{
  uint64_t v3 = sub_25A6C73D0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

uint64_t (*TrustedRequest.id.modify())()
{
  return nullsub_1;
}

uint64_t TrustedRequest.workloadType.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TrustedRequest() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrustedRequest.workloadType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for TrustedRequest() + 20));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*TrustedRequest.workloadType.modify())()
{
  return nullsub_1;
}

uint64_t TrustedRequest.workloadParameters.getter()
{
  type metadata accessor for TrustedRequest();
  return swift_bridgeObjectRetain();
}

uint64_t TrustedRequest.workloadParameters.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for TrustedRequest() + 24);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*TrustedRequest.workloadParameters.modify())()
{
  return nullsub_1;
}

uint64_t TrustedRequest.bundleIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TrustedRequest() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrustedRequest.bundleIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for TrustedRequest() + 28));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*TrustedRequest.bundleIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t TrustedRequest.originatingBundleIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TrustedRequest() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrustedRequest.originatingBundleIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for TrustedRequest() + 32));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*TrustedRequest.originatingBundleIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t TrustedRequest.featureIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TrustedRequest() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrustedRequest.featureIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for TrustedRequest() + 36));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*TrustedRequest.featureIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t TrustedRequest.sessionIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TrustedRequest() + 40);
  return sub_25A6A5DA0(v3, a1);
}

uint64_t TrustedRequest.sessionIdentifier.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TrustedRequest() + 40);
  return sub_25A6A5E08(a1, v3);
}

uint64_t (*TrustedRequest.sessionIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t sub_25A6B3F3C()
{
  return MEMORY[0x263F8E4E0];
}

unint64_t sub_25A6B3F4C()
{
  unint64_t result = qword_26A44C710;
  if (!qword_26A44C710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C710);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for TrustedRequest(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v32 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_25A6C73D0();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v34 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v34(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    uint64_t v11 = (uint64_t *)((char *)a1 + v9);
    uint64_t v12 = (uint64_t *)((char *)a2 + v9);
    uint64_t v13 = v12[1];
    uint64_t v14 = *(uint64_t *)((char *)a2 + v10);
    *uint64_t v11 = *v12;
    v11[1] = v13;
    *(uint64_t *)((char *)a1 + v10) = v14;
    uint64_t v15 = a3[7];
    uint64_t v16 = a3[8];
    uint64_t v17 = (uint64_t *)((char *)a1 + v15);
    uint64_t v18 = (uint64_t *)((char *)a2 + v15);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = (uint64_t *)((char *)a1 + v16);
    unint64_t v21 = (uint64_t *)((char *)a2 + v16);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    uint64_t v23 = a3[9];
    uint64_t v24 = a3[10];
    uint64_t v25 = (uint64_t *)((char *)a1 + v23);
    uint64_t v26 = (uint64_t *)((char *)a2 + v23);
    uint64_t v27 = v26[1];
    unint64_t v28 = (char *)a1 + v24;
    *uint64_t v25 = *v26;
    v25[1] = v27;
    unint64_t v29 = (char *)a2 + v24;
    char v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v30(v29, 1, v7))
    {
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C438);
      memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      v34((uint64_t *)v28, (uint64_t *)v29, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v28, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for TrustedRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25A6C73D0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 40);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v4);
  }
  return result;
}

char *initializeWithCopy for TrustedRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_25A6C73D0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v32 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v32(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v8];
  uint64_t v11 = &a2[v8];
  uint64_t v12 = *((void *)v11 + 1);
  uint64_t v13 = *(void *)&a2[v9];
  *(void *)uint64_t v10 = *(void *)v11;
  *((void *)v10 + 1) = v12;
  *(void *)&a1[v9] = v13;
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = &a1[v14];
  uint64_t v17 = &a2[v14];
  uint64_t v18 = *((void *)v17 + 1);
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = v18;
  uint64_t v19 = &a1[v15];
  uint64_t v20 = &a2[v15];
  uint64_t v21 = *((void *)v20 + 1);
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = v21;
  uint64_t v22 = a3[9];
  uint64_t v23 = a3[10];
  uint64_t v24 = &a1[v22];
  uint64_t v25 = &a2[v22];
  uint64_t v26 = *((void *)v25 + 1);
  uint64_t v27 = &a1[v23];
  *(void *)uint64_t v24 = *(void *)v25;
  *((void *)v24 + 1) = v26;
  unint64_t v28 = &a2[v23];
  unint64_t v29 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v29(v28, 1, v6))
  {
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C438);
    memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    v32(v27, v28, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v27, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for TrustedRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_25A6C73D0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  *(void *)uint64_t v10 = *(void *)v11;
  *((void *)v10 + 1) = *((void *)v11 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[7];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[8];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = *((void *)v17 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[9];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = *((void *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[10];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v25 = v24(&a1[v21], 1, v6);
  int v26 = v24(v23, 1, v6);
  if (!v25)
  {
    if (!v26)
    {
      v8(v22, v23, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v22, v6);
    goto LABEL_6;
  }
  if (v26)
  {
LABEL_6:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C438);
    memcpy(v22, v23, *(void *)(*(void *)(v27 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v22, v23, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v22, 0, 1, v6);
  return a1;
}

char *initializeWithTake for TrustedRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_25A6C73D0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  uint64_t v9 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(void *)&a1[v9] = *(void *)&a2[v9];
  uint64_t v10 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  *(_OWORD *)&a1[v10] = *(_OWORD *)&a2[v10];
  uint64_t v11 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C438);
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    v8(v12, v13, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for TrustedRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_25A6C73D0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = (uint64_t *)&a2[v9];
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  *(void *)uint64_t v10 = v13;
  *((void *)v10 + 1) = v12;
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[7];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = (uint64_t *)&a2[v14];
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  *(void *)uint64_t v15 = v18;
  *((void *)v15 + 1) = v17;
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[8];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = (uint64_t *)&a2[v19];
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  *(void *)uint64_t v20 = v23;
  *((void *)v20 + 1) = v22;
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[9];
  int v25 = &a1[v24];
  int v26 = (uint64_t *)&a2[v24];
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  *(void *)int v25 = v28;
  *((void *)v25 + 1) = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = a3[10];
  uint64_t v30 = &a1[v29];
  uint64_t v31 = &a2[v29];
  uint64_t v32 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v33 = v32(&a1[v29], 1, v6);
  int v34 = v32(v31, 1, v6);
  if (!v33)
  {
    if (!v34)
    {
      v8(v30, v31, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v30, v6);
    goto LABEL_6;
  }
  if (v34)
  {
LABEL_6:
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C438);
    memcpy(v30, v31, *(void *)(*(void *)(v35 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v30, v31, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v30, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrustedRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25A6B4B28);
}

uint64_t sub_25A6B4B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25A6C73D0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C438);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 40);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for TrustedRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25A6B4C70);
}

uint64_t sub_25A6B4C70(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_25A6C73D0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C438);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 40);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_25A6B4DA4()
{
  sub_25A6C73D0();
  if (v0 <= 0x3F)
  {
    sub_25A6B4E8C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_25A6B4E8C()
{
  if (!qword_26A44C728)
  {
    sub_25A6C73D0();
    unint64_t v0 = sub_25A6C76D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A44C728);
    }
  }
}

ValueMetadata *type metadata accessor for TrustedRequest.Writer()
{
  return &type metadata for TrustedRequest.Writer;
}

uint64_t _s19PrivateCloudCompute14TrustedRequestV6WriterVwxx_0()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_release();
}

void *_s19PrivateCloudCompute14TrustedRequestV6WriterVwcp_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

void *_s19PrivateCloudCompute14TrustedRequestV6WriterVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s19PrivateCloudCompute14TrustedRequestV6WriterVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for TrustedRequest.Response()
{
  return &type metadata for TrustedRequest.Response;
}

uint64_t destroy for TrustedRequest.Response.AsyncIterator()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_release();
}

void *initializeWithCopy for TrustedRequest.Response.AsyncIterator(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for TrustedRequest.Response.AsyncIterator(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TrustedRequest.Response.AsyncIterator(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for TrustedRequest.Response.AsyncIterator()
{
  return &type metadata for TrustedRequest.Response.AsyncIterator;
}

uint64_t sub_25A6B5244(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_25A69454C;
  return sub_25A692AE4(a1, v4, v5, v6, v7, v8);
}

uint64_t objectdestroyTm()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_25A6B535C()
{
  uint64_t v0 = sub_25A6C7430();
  __swift_allocate_value_buffer(v0, qword_26B329598);
  __swift_project_value_buffer(v0, (uint64_t)qword_26B329598);
  return sub_25A6C7420();
}

unint64_t privateCloudComputeOsVariantSubsystem.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t TC2DefaultConfiguration.subscript.getter@<X0>(char *a1@<X0>, uint64_t a2@<X1>, NSObject *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v104 = a3;
  uint64_t v7 = type metadata accessor for TC2ConfigurationIndex();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v98 = (char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v97 = (char *)&v91 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  char v95 = (uint64_t *)((char *)&v91 - v14);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v96 = (char *)&v91 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v94 = (uint64_t *)((char *)&v91 - v17);
  uint64_t v18 = sub_25A6C76D0();
  uint64_t v19 = *(NSObject **)(v18 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v91 - v21;
  uint64_t v106 = *(void *)(a2 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  int v25 = (char *)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v101 = (char *)&v91 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v102 = (char *)&v91 - v28;
  uint64_t v29 = v7;
  if ((a1[*(int *)(v7 + 36)] & 1) != 0 || os_variant_allows_internal_security_policies())
  {
    os_log_t v92 = v19;
    char v93 = v25;
    uint64_t v99 = v8;
    uint64_t v100 = a4;
    uint64_t v30 = *(void *)a1;
    uint64_t v31 = *((void *)a1 + 1);
    uint64_t v32 = *((void *)a1 + 2);
    uint64_t v33 = *((void *)a1 + 3);
    uint64_t v105 = a2;
    uint64_t v103 = a1;
    int v34 = v104;
    isa = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, NSObject *))v104[1].isa;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v36 = v33;
    uint64_t v37 = v105;
    isa(v30, v31, v32, v36, v105, v34);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v106 + 48))(v22, 1, v37) == 1)
    {
      ((void (*)(char *, uint64_t))v92[1].isa)(v22, v18);
      uint64_t v38 = v29;
      uint64_t v39 = v99;
      if (qword_26B3295B0 != -1) {
        swift_once();
      }
      uint64_t v40 = sub_25A6C7430();
      __swift_project_value_buffer(v40, (uint64_t)qword_26B329598);
      uint64_t v41 = *(void (**)(uint64_t *, char *, uint64_t))(v39 + 16);
      uint64_t v42 = v95;
      id v43 = v103;
      v41(v95, v103, v38);
      uint64_t v44 = v97;
      v41((uint64_t *)v97, v43, v38);
      uint64_t v45 = v98;
      v41((uint64_t *)v98, v43, v38);
      uint64_t v46 = sub_25A6C7410();
      os_log_type_t v47 = sub_25A6C7670();
      int v48 = v47;
      uint64_t v104 = v46;
      if (os_log_type_enabled(v46, v47))
      {
        uint64_t v49 = swift_slowAlloc();
        uint64_t v102 = (char *)swift_slowAlloc();
        int v108 = v102;
        *(_DWORD *)uint64_t v49 = 136315650;
        uint64_t v50 = v44;
        LODWORD(v101) = v48;
        uint64_t v51 = v42;
        uint64_t v52 = *v42;
        unint64_t v53 = v42[1];
        swift_bridgeObjectRetain();
        uint64_t v107 = sub_25A6A5940(v52, v53, (uint64_t *)&v108);
        sub_25A6C76E0();
        swift_bridgeObjectRelease();
        uint64_t v54 = *(void (**)(uint64_t *, uint64_t))(v39 + 8);
        v54(v51, v38);
        *(_WORD *)(v49 + 12) = 2080;
        uint64_t v55 = v45;
        uint64_t v57 = *((void *)v50 + 2);
        unint64_t v56 = *((void *)v50 + 3);
        swift_bridgeObjectRetain();
        uint64_t v107 = sub_25A6A5940(v57, v56, (uint64_t *)&v108);
        sub_25A6C76E0();
        swift_bridgeObjectRelease();
        v54((uint64_t *)v50, v38);
        *(_WORD *)(v49 + 22) = 2080;
        uint64_t v58 = *(void (**)(char *, char *, uint64_t))(v106 + 16);
        v58(v93, &v55[*(int *)(v38 + 32)], v105);
        uint64_t v59 = sub_25A6C74C0();
        uint64_t v107 = sub_25A6A5940(v59, v60, (uint64_t *)&v108);
        sub_25A6C76E0();
        id v43 = v103;
        swift_bridgeObjectRelease();
        v54((uint64_t *)v55, v38);
        int64_t v61 = v104;
        uint64_t v37 = v105;
        _os_log_impl(&dword_25A668000, v104, (os_log_type_t)v101, "TC2Configuration defaultValue %s %s = %s", (uint8_t *)v49, 0x20u);
        uint64_t v62 = v102;
        swift_arrayDestroy();
        MEMORY[0x261142420](v62, -1, -1);
        MEMORY[0x261142420](v49, -1, -1);
      }
      else
      {
        uint64_t v89 = *(void (**)(uint64_t *, uint64_t))(v39 + 8);
        v89(v42, v38);
        v89((uint64_t *)v44, v38);
        v89((uint64_t *)v45, v38);

        uint64_t v58 = *(void (**)(char *, char *, uint64_t))(v106 + 16);
      }
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v58)(v100, &v43[*(int *)(v38 + 32)], v37);
    }
    else
    {
      uint64_t v63 = *(char **)(v106 + 32);
      uint64_t v64 = v102;
      uint64_t v104 = (v106 + 32);
      uint64_t v98 = v63;
      ((void (*)(char *, char *, uint64_t))v63)(v102, v22, v37);
      uint64_t v65 = v99;
      if (qword_26B3295B0 != -1) {
        swift_once();
      }
      uint64_t v66 = sub_25A6C7430();
      __swift_project_value_buffer(v66, (uint64_t)qword_26B329598);
      uint64_t v67 = *(void (**)(uint64_t *, char *, uint64_t))(v65 + 16);
      uint64_t v68 = v94;
      long long v69 = v103;
      v67(v94, v103, v29);
      long long v70 = v96;
      v67((uint64_t *)v96, v69, v29);
      long long v71 = v101;
      uint64_t v103 = *(char **)(v106 + 16);
      ((void (*)(char *, char *, uint64_t))v103)(v101, v64, v37);
      uint64_t v72 = sub_25A6C7410();
      os_log_type_t v73 = sub_25A6C7670();
      int v74 = v73;
      if (os_log_type_enabled(v72, v73))
      {
        uint64_t v75 = swift_slowAlloc();
        uint64_t v97 = (char *)swift_slowAlloc();
        int v108 = v97;
        *(_DWORD *)uint64_t v75 = 136315650;
        LODWORD(v95) = v74;
        uint64_t v76 = v70;
        uint64_t v77 = *v68;
        unint64_t v78 = v68[1];
        swift_bridgeObjectRetain();
        uint64_t v107 = sub_25A6A5940(v77, v78, (uint64_t *)&v108);
        os_log_t v92 = v72;
        sub_25A6C76E0();
        swift_bridgeObjectRelease();
        long long v79 = *(void (**)(uint64_t *, uint64_t))(v65 + 8);
        v79(v68, v29);
        *(_WORD *)(v75 + 12) = 2080;
        uint64_t v80 = *((void *)v76 + 2);
        unint64_t v81 = *((void *)v76 + 3);
        swift_bridgeObjectRetain();
        uint64_t v107 = sub_25A6A5940(v80, v81, (uint64_t *)&v108);
        sub_25A6C76E0();
        swift_bridgeObjectRelease();
        v79((uint64_t *)v76, v29);
        *(_WORD *)(v75 + 22) = 2080;
        uint64_t v82 = v101;
        ((void (*)(char *, char *, uint64_t))v103)(v93, v101, v105);
        uint64_t v83 = sub_25A6C74C0();
        uint64_t v107 = sub_25A6A5940(v83, v84, (uint64_t *)&v108);
        uint64_t v64 = v102;
        sub_25A6C76E0();
        uint64_t v37 = v105;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v106 + 8))(v82, v37);
        uint64_t v72 = v92;
        _os_log_impl(&dword_25A668000, v92, (os_log_type_t)v95, "TC2Configuration read %s %s = %s", (uint8_t *)v75, 0x20u);
        uint64_t v85 = v97;
        swift_arrayDestroy();
        MEMORY[0x261142420](v85, -1, -1);
        MEMORY[0x261142420](v75, -1, -1);
      }
      else
      {
        char v90 = *(void (**)(uint64_t *, uint64_t))(v65 + 8);
        v90(v68, v29);
        v90((uint64_t *)v70, v29);
        (*(void (**)(char *, uint64_t))(v106 + 8))(v71, v37);
      }

      return ((uint64_t (*)(uint64_t, char *, uint64_t))v98)(v100, v64, v37);
    }
  }
  else
  {
    int v86 = &a1[*(int *)(v7 + 32)];
    char v87 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v106 + 16);
    return v87(a4, v86, a2);
  }
}

uint64_t sub_25A6B5E3C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, NSObject *a3@<X2>, uint64_t a4@<X8>)
{
  return TC2DefaultConfiguration.subscript.getter(a1, a2, a3, a4);
}

uint64_t dispatch thunk of TC2Configuration.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

ValueMetadata *type metadata accessor for TC2DefaultConfiguration()
{
  return &type metadata for TC2DefaultConfiguration;
}

void TrustedCloudComputeClient.Configuration.init()(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(unsigned char *)(a1 + 4) = 1;
}

unint64_t TrustedCloudComputeClient.Configuration.userID.getter()
{
  return *v0 | ((unint64_t)*((unsigned __int8 *)v0 + 4) << 32);
}

uint64_t TrustedCloudComputeClient.Configuration.userID.setter(uint64_t result)
{
  *(_DWORD *)uint64_t v1 = result;
  *(unsigned char *)(v1 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t (*TrustedCloudComputeClient.Configuration.userID.modify())()
{
  return nullsub_1;
}

uint64_t __swift_memcpy5_4(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(unsigned char *)(result + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)uint64_t result = v2;
  return result;
}

uint64_t _s13ConfigurationVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 5)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s13ConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 5) = v3;
  return result;
}

ValueMetadata *type metadata accessor for TrustedCloudComputeClient.Configuration()
{
  return &type metadata for TrustedCloudComputeClient.Configuration;
}

uint64_t TC2TrustedRequestEndpointMetadata.nodeState.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TC2TrustedRequestEndpointMetadata.nodeIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TC2TrustedRequestEndpointMetadata.ohttpContext.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t TC2TrustedRequestEndpointMetadata.hasReceivedSummary.getter()
{
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t TC2TrustedRequestEndpointMetadata.dataReceived.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t TC2TrustedRequestEndpointMetadata.cloudOSVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TC2TrustedRequestEndpointMetadata.cloudOSReleaseType.getter()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TC2TrustedRequestEndpointMetadata.maybeValidatedCellID.getter()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TC2TrustedRequestEndpointMetadata.ensembleID.getter()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TC2TrustedRequestEndpointMetadata.isFromCache.getter()
{
  return *(unsigned __int8 *)(v0 + 120);
}

__n128 TC2TrustedRequestEndpointMetadata.init(nodeState:nodeIdentifier:ohttpContext:hasReceivedSummary:dataReceived:cloudOSVersion:cloudOSReleaseType:maybeValidatedCellID:ensembleID:isFromCache:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, long long a11, __n128 a12, uint64_t a13, char a14)
{
  __n128 result = a12;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(unsigned char *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = a10;
  *(_OWORD *)(a9 + 80) = a11;
  *(__n128 *)(a9 + 96) = a12;
  *(void *)(a9 + 112) = a13;
  *(unsigned char *)(a9 + 120) = a14;
  return result;
}

unint64_t sub_25A6B60C0(char a1)
{
  unint64_t result = 0x7461745365646F6ELL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E65644965646F6ELL;
      break;
    case 2:
      unint64_t result = 0x6E6F43707474686FLL;
      break;
    case 3:
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x6563655261746164;
      break;
    case 5:
      unint64_t result = 0x56534F64756F6C63;
      break;
    case 7:
      unint64_t result = 0xD000000000000014;
      break;
    case 8:
      unint64_t result = 0x656C626D65736E65;
      break;
    case 9:
      unint64_t result = 0x61436D6F72467369;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_25A6B6234()
{
  return sub_25A6B60C0(*v0);
}

uint64_t sub_25A6B623C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25A6BF110(a1, a2);
  *a3 = result;
  return result;
}

void sub_25A6B6264(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_25A6B6270(uint64_t a1)
{
  unint64_t v2 = sub_25A6B65E0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A6B62AC(uint64_t a1)
{
  unint64_t v2 = sub_25A6B65E0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TC2TrustedRequestEndpointMetadata.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C740);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v26 = *(void *)(v1 + 24);
  uint64_t v27 = v7;
  uint64_t v25 = *(void *)(v1 + 32);
  int v24 = *(unsigned __int8 *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  uint64_t v22 = *(void *)(v1 + 56);
  uint64_t v23 = v8;
  uint64_t v9 = *(void *)(v1 + 64);
  uint64_t v10 = *(void *)(v1 + 72);
  uint64_t v20 = *(void *)(v1 + 80);
  uint64_t v21 = v9;
  uint64_t v11 = *(void *)(v1 + 88);
  uint64_t v18 = *(void *)(v1 + 96);
  uint64_t v19 = v10;
  uint64_t v15 = *(void *)(v1 + 104);
  uint64_t v16 = *(void *)(v1 + 112);
  uint64_t v17 = v11;
  v14[1] = *(unsigned __int8 *)(v1 + 120);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A6B65E0();
  sub_25A6C7B00();
  char v38 = 0;
  uint64_t v12 = v28;
  sub_25A6C7960();
  if (!v12)
  {
    char v37 = 1;
    sub_25A6C7960();
    char v36 = 2;
    sub_25A6C79C0();
    char v35 = 3;
    sub_25A6C7970();
    char v34 = 4;
    sub_25A6C79C0();
    char v33 = 5;
    sub_25A6C7920();
    char v32 = 6;
    sub_25A6C7920();
    char v31 = 7;
    sub_25A6C7920();
    char v30 = 8;
    sub_25A6C7920();
    char v29 = 9;
    sub_25A6C7970();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_25A6B65E0()
{
  unint64_t result = qword_26A44C748;
  if (!qword_26A44C748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C748);
  }
  return result;
}

uint64_t TC2TrustedRequestEndpointMetadata.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C750);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  uint64_t v67 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_25A6B65E0();
  sub_25A6C7AF0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  }
  uint64_t v44 = v6;
  LOBYTE(v52[0]) = 0;
  uint64_t v10 = sub_25A6C7890();
  uint64_t v12 = v11;
  LOBYTE(v52[0]) = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_25A6C7890();
  uint64_t v15 = v14;
  uint64_t v42 = v13;
  uint64_t v43 = v12;
  LOBYTE(v52[0]) = 2;
  swift_bridgeObjectRetain();
  uint64_t v16 = v15;
  uint64_t v41 = sub_25A6C78F0();
  LOBYTE(v52[0]) = 3;
  int v40 = sub_25A6C78A0();
  LOBYTE(v52[0]) = 4;
  uint64_t v39 = sub_25A6C78F0();
  LOBYTE(v52[0]) = 5;
  uint64_t v37 = sub_25A6C7850();
  LOBYTE(v52[0]) = 6;
  uint64_t v18 = v17;
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_25A6C7850();
  uint64_t v38 = v20;
  uint64_t v33 = v19;
  LOBYTE(v52[0]) = 7;
  swift_bridgeObjectRetain();
  uint64_t v35 = 0;
  uint64_t v32 = sub_25A6C7850();
  LOBYTE(v52[0]) = 8;
  uint64_t v36 = v21;
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_25A6C7850();
  char v65 = 9;
  uint64_t v34 = v22;
  swift_bridgeObjectRetain();
  LOBYTE(v15) = sub_25A6C78A0();
  v40 &= 1u;
  (*(void (**)(char *, uint64_t))(v44 + 8))(v8, v5);
  LODWORD(v44) = v15 & 1;
  *(void *)&long long v45 = v10;
  *((void *)&v45 + 1) = v43;
  *(void *)&long long v46 = v42;
  *((void *)&v46 + 1) = v16;
  uint64_t v23 = v16;
  *(void *)&long long v47 = v41;
  BYTE8(v47) = v40;
  uint64_t v24 = v38;
  uint64_t v25 = v36;
  *(void *)&long long v48 = v39;
  *((void *)&v48 + 1) = v37;
  uint64_t v26 = v34;
  *(void *)&long long v49 = v18;
  *((void *)&v49 + 1) = v33;
  *(void *)&long long v50 = v38;
  *((void *)&v50 + 1) = v32;
  *(void *)&v51[0] = v36;
  *((void *)&v51[0] + 1) = v31;
  *(void *)&v51[1] = v34;
  BYTE8(v51[1]) = v44;
  sub_25A6B6D10((uint64_t)&v45);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v27 = v50;
  a2[4] = v49;
  a2[5] = v27;
  a2[6] = v51[0];
  *(_OWORD *)((char *)a2 + 105) = *(_OWORD *)((char *)v51 + 9);
  long long v28 = v46;
  *a2 = v45;
  a2[1] = v28;
  long long v29 = v48;
  a2[2] = v47;
  a2[3] = v29;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  v52[0] = v10;
  v52[1] = v43;
  v52[2] = v42;
  v52[3] = v23;
  v52[4] = v41;
  char v53 = v40;
  *(_DWORD *)uint64_t v54 = v66[0];
  *(_DWORD *)&v54[3] = *(_DWORD *)((char *)v66 + 3);
  uint64_t v55 = v39;
  uint64_t v56 = v37;
  uint64_t v57 = v18;
  uint64_t v58 = v33;
  uint64_t v59 = v24;
  uint64_t v60 = v32;
  uint64_t v61 = v25;
  uint64_t v62 = v31;
  uint64_t v63 = v26;
  char v64 = v44;
  return sub_25A6B6D88((uint64_t)v52);
}

uint64_t sub_25A6B6D10(uint64_t a1)
{
  return a1;
}

uint64_t sub_25A6B6D88(uint64_t a1)
{
  return a1;
}

uint64_t sub_25A6B6E00@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return TC2TrustedRequestEndpointMetadata.init(from:)(a1, a2);
}

uint64_t sub_25A6B6E18(void *a1)
{
  return TC2TrustedRequestEndpointMetadata.encode(to:)(a1);
}

uint64_t TC2TrustedRequestMetadata.clientRequestID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_25A6C73D0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t TC2TrustedRequestMetadata.serverRequestID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_25A6B9C38(type metadata accessor for TC2TrustedRequestMetadata, a1);
}

uint64_t type metadata accessor for TC2TrustedRequestMetadata(uint64_t a1)
{
  return sub_25A675B1C(a1, (uint64_t *)&unk_26A44C820);
}

uint64_t TC2TrustedRequestMetadata.environment.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TC2TrustedRequestMetadata(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TC2TrustedRequestMetadata.creationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TC2TrustedRequestMetadata(0) + 28);
  uint64_t v4 = sub_25A6C73A0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t TC2TrustedRequestMetadata.bundleIdentifier.getter()
{
  return sub_25A6B9DA8(type metadata accessor for TC2TrustedRequestMetadata);
}

uint64_t TC2TrustedRequestMetadata.featureIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TC2TrustedRequestMetadata(0) + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TC2TrustedRequestMetadata.sessionIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TC2TrustedRequestMetadata(0) + 40);
  return sub_25A6A5DA0(v3, a1);
}

uint64_t TC2TrustedRequestMetadata.qos.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TC2TrustedRequestMetadata(0) + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TC2TrustedRequestMetadata.workloadName.getter()
{
  return sub_25A6B9ECC(type metadata accessor for TC2TrustedRequestMetadata);
}

uint64_t TC2TrustedRequestMetadata.workloadParameters.getter()
{
  type metadata accessor for TC2TrustedRequestMetadata(0);
  return swift_bridgeObjectRetain();
}

uint64_t TC2TrustedRequestMetadata.state.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TC2TrustedRequestMetadata(0) + 56));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TC2TrustedRequestMetadata.payloadTransportState.getter()
{
  return sub_25A6B9FA0(type metadata accessor for TC2TrustedRequestMetadata);
}

uint64_t TC2TrustedRequestMetadata.responseState.getter()
{
  return sub_25A6BA000(type metadata accessor for TC2TrustedRequestMetadata);
}

uint64_t TC2TrustedRequestMetadata.responseCode.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for TC2TrustedRequestMetadata(0) + 68));
}

uint64_t TC2TrustedRequestMetadata.ropesVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TC2TrustedRequestMetadata(0) + 72));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TC2TrustedRequestMetadata.endpoints.getter()
{
  type metadata accessor for TC2TrustedRequestMetadata(0);
  return swift_bridgeObjectRetain();
}

uint64_t TC2TrustedRequestMetadata.init(clientRequestID:serverRequestID:environment:creationDate:bundleIdentifier:featureIdentifier:sessionIdentifier:qos:parameters:state:payloadTransportState:responseState:responseCode:ropesVersion:endpoints:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v47 = a14[1];
  uint64_t v48 = *a14;
  uint64_t v49 = a14[2];
  uint64_t v30 = sub_25A6C73D0();
  uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32);
  v31(a9, a1, v30);
  uint64_t v32 = (int *)type metadata accessor for TC2TrustedRequestMetadata(0);
  v31(a9 + v32[5], a2, v30);
  uint64_t v33 = (void *)(a9 + v32[6]);
  *uint64_t v33 = a3;
  v33[1] = a4;
  uint64_t v34 = a9 + v32[7];
  uint64_t v35 = sub_25A6C73A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 32))(v34, a5, v35);
  uint64_t v36 = (void *)(a9 + v32[8]);
  *uint64_t v36 = a6;
  v36[1] = a7;
  uint64_t v37 = (void *)(a9 + v32[9]);
  *uint64_t v37 = a8;
  v37[1] = a10;
  uint64_t result = sub_25A6B7438(a11, a9 + v32[10]);
  uint64_t v39 = (void *)(a9 + v32[11]);
  *uint64_t v39 = a12;
  v39[1] = a13;
  int v40 = (void *)(a9 + v32[12]);
  void *v40 = v48;
  v40[1] = v47;
  *(void *)(a9 + v32[13]) = v49;
  uint64_t v41 = (void *)(a9 + v32[14]);
  *uint64_t v41 = a15;
  v41[1] = a16;
  uint64_t v42 = (void *)(a9 + v32[15]);
  *uint64_t v42 = a17;
  v42[1] = a18;
  uint64_t v43 = (void *)(a9 + v32[16]);
  *uint64_t v43 = a19;
  v43[1] = a20;
  uint64_t v44 = a9 + v32[17];
  *(void *)uint64_t v44 = a21;
  *(unsigned char *)(v44 + 8) = a22 & 1;
  long long v45 = (void *)(a9 + v32[18]);
  *long long v45 = a23;
  v45[1] = a24;
  *(void *)(a9 + v32[19]) = a25;
  return result;
}

uint64_t sub_25A6B7438(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C438);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_25A6B74A0(char a1)
{
  unint64_t result = 0x6552746E65696C63;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6552726576726573;
      break;
    case 2:
      unint64_t result = 0x6D6E6F7269766E65;
      break;
    case 3:
      unint64_t result = 0x6E6F697461657263;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
    case 6:
      unint64_t result = 0xD000000000000011;
      break;
    case 7:
      unint64_t result = 7565169;
      break;
    case 8:
      unint64_t result = 0x64616F6C6B726F77;
      break;
    case 9:
      unint64_t result = 0xD000000000000012;
      break;
    case 10:
      unint64_t result = 0x6574617473;
      break;
    case 11:
      unint64_t result = 0xD000000000000015;
      break;
    case 12:
    case 13:
      unint64_t result = 0x65736E6F70736572;
      break;
    case 14:
      unint64_t result = 0x7265567365706F72;
      break;
    case 15:
      unint64_t result = 0x746E696F70646E65;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_25A6B76A8()
{
  return sub_25A6B74A0(*v0);
}

uint64_t sub_25A6B76B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25A6BF5B0(a1, a2);
  *a3 = result;
  return result;
}

void sub_25A6B76D8(unsigned char *a1@<X8>)
{
  *a1 = 16;
}

uint64_t sub_25A6B76E4(uint64_t a1)
{
  unint64_t v2 = sub_25A6B7CB8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A6B7720(uint64_t a1)
{
  unint64_t v2 = sub_25A6B7CB8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TC2TrustedRequestMetadata.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C758);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A6B7CB8();
  sub_25A6C7B00();
  LOBYTE(v13) = 0;
  sub_25A6C73D0();
  sub_25A6B7D0C(&qword_26B329B38, MEMORY[0x263F07508]);
  sub_25A6C79B0();
  if (!v2)
  {
    uint64_t v9 = (int *)type metadata accessor for TC2TrustedRequestMetadata(0);
    LOBYTE(v13) = 1;
    sub_25A6C79B0();
    LOBYTE(v13) = 2;
    sub_25A6C7960();
    uint64_t v11 = v3 + v9[7];
    LOBYTE(v13) = 3;
    sub_25A6C73A0();
    sub_25A6B7D0C(&qword_26B329B28, MEMORY[0x263F07490]);
    sub_25A6C79B0();
    LOBYTE(v13) = 4;
    sub_25A6C7960();
    LOBYTE(v13) = 5;
    sub_25A6C7920();
    LOBYTE(v13) = 6;
    sub_25A6C7950();
    LOBYTE(v13) = 7;
    sub_25A6C7960();
    LOBYTE(v13) = 8;
    sub_25A6C7960();
    uint64_t v13 = *(void *)(v3 + v9[13]);
    char v12 = 9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C530);
    sub_25A6A0064(&qword_26A44C538);
    sub_25A6C79B0();
    LOBYTE(v13) = 10;
    sub_25A6C7960();
    LOBYTE(v13) = 11;
    sub_25A6C7960();
    LOBYTE(v13) = 12;
    sub_25A6C7960();
    LOBYTE(v13) = 13;
    sub_25A6C7940();
    LOBYTE(v13) = 14;
    sub_25A6C7920();
    uint64_t v13 = *(void *)(v3 + v9[19]);
    char v12 = 15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C768);
    sub_25A6B93A8(&qword_26A44C770, &qword_26A44C768, (void (*)(void))sub_25A6A5C60);
    sub_25A6C79B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_25A6B7CB8()
{
  unint64_t result = qword_26A44C760;
  if (!qword_26A44C760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C760);
  }
  return result;
}

uint64_t sub_25A6B7D0C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t TC2TrustedRequestMetadata.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v78 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C438);
  MEMORY[0x270FA5388](v3 - 8);
  long long v79 = &v71[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_25A6C73A0();
  uint64_t v75 = *(void *)(v5 - 8);
  uint64_t v76 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = &v71[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_25A6C73D0();
  uint64_t v85 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v71[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = &v71[-v12];
  uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C778);
  uint64_t v14 = *(void *)(v81 - 8);
  MEMORY[0x270FA5388](v81);
  uint64_t v16 = &v71[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v86 = (int *)type metadata accessor for TC2TrustedRequestMetadata(0);
  MEMORY[0x270FA5388](v86);
  unint64_t v84 = &v71[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = a1[3];
  uint64_t v82 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_25A6B7CB8();
  uint64_t v80 = v16;
  uint64_t v19 = v83;
  sub_25A6C7AF0();
  uint64_t v77 = v8;
  if (v19)
  {
    uint64_t v83 = v19;
    int v22 = 0;
    uint64_t v23 = v84;
    uint64_t result = __swift_destroy_boxed_opaque_existential_1(v82);
    int v25 = 0;
    int v26 = 0;
    LODWORD(v82) = 0;
    LODWORD(v81) = 0;
    LODWORD(v80) = 0;
    LODWORD(v79) = 0;
    LODWORD(v78) = 0;
    int v30 = 0;
    int v31 = 0;
    int v32 = 0;
    long long v29 = v86;
  }
  else
  {
    uint64_t v20 = v11;
    uint64_t v83 = v7;
    uint64_t v73 = v14;
    LOBYTE(v88) = 0;
    uint64_t v21 = sub_25A6B7D0C(&qword_26A44C4D8, MEMORY[0x263F07508]);
    sub_25A6C78E0();
    uint64_t v33 = v84;
    uint64_t v34 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v85 + 32);
    v34(v84, v13, v8);
    LOBYTE(v88) = 1;
    sub_25A6C78E0();
    uint64_t v74 = v21;
    uint64_t v35 = v86;
    v34(&v33[v86[5]], v20, v8);
    LOBYTE(v88) = 2;
    uint64_t v36 = sub_25A6C7890();
    uint64_t v37 = (uint64_t *)&v33[v35[6]];
    *uint64_t v37 = v36;
    v37[1] = v38;
    LOBYTE(v88) = 3;
    sub_25A6B7D0C(&qword_26A44B8F8, MEMORY[0x263F07490]);
    uint64_t v39 = v83;
    uint64_t v40 = v76;
    sub_25A6C78E0();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v75 + 32))(&v33[v35[7]], v39, v40);
    LOBYTE(v88) = 4;
    uint64_t v41 = sub_25A6C7890();
    uint64_t v42 = (uint64_t *)&v33[v35[8]];
    *uint64_t v42 = v41;
    v42[1] = v43;
    LOBYTE(v88) = 5;
    uint64_t v44 = sub_25A6C7850();
    long long v45 = (uint64_t *)&v33[v35[9]];
    *long long v45 = v44;
    v45[1] = v46;
    LOBYTE(v88) = 6;
    uint64_t v47 = (uint64_t)v79;
    sub_25A6C7880();
    sub_25A6B7438(v47, (uint64_t)&v33[v35[10]]);
    LOBYTE(v88) = 7;
    uint64_t v48 = sub_25A6C7890();
    uint64_t v49 = (uint64_t *)&v33[v35[11]];
    *uint64_t v49 = v48;
    v49[1] = v50;
    LOBYTE(v88) = 8;
    uint64_t v51 = sub_25A6C7890();
    uint64_t v52 = (uint64_t *)&v33[v86[12]];
    *uint64_t v52 = v51;
    v52[1] = v53;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C530);
    char v87 = 9;
    sub_25A6A0064(&qword_26A44C548);
    sub_25A6C78E0();
    uint64_t v83 = 0;
    *(void *)&v84[v86[13]] = v88;
    LOBYTE(v88) = 10;
    uint64_t v54 = sub_25A6C7890();
    uint64_t v83 = 0;
    uint64_t v55 = (uint64_t *)&v84[v86[14]];
    *uint64_t v55 = v54;
    v55[1] = v56;
    LOBYTE(v88) = 11;
    uint64_t v57 = sub_25A6C7890();
    uint64_t v83 = 0;
    uint64_t v58 = (uint64_t *)&v84[v86[15]];
    *uint64_t v58 = v57;
    v58[1] = v59;
    LOBYTE(v88) = 12;
    uint64_t v60 = sub_25A6C7890();
    LODWORD(v74) = 1;
    uint64_t v83 = 0;
    uint64_t v61 = (uint64_t *)&v84[v86[16]];
    *uint64_t v61 = v60;
    v61[1] = v62;
    LOBYTE(v88) = 13;
    uint64_t v63 = sub_25A6C7870();
    uint64_t v83 = 0;
    char v64 = &v84[v86[17]];
    *(void *)char v64 = v63;
    v64[8] = v65 & 1;
    LOBYTE(v88) = 14;
    uint64_t v66 = sub_25A6C7850();
    uint64_t v83 = 0;
    uint64_t v68 = (uint64_t *)&v84[v86[18]];
    *uint64_t v68 = v66;
    v68[1] = v67;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C768);
    char v87 = 15;
    sub_25A6B93A8(&qword_26A44C780, &qword_26A44C768, (void (*)(void))sub_25A68F43C);
    long long v69 = v83;
    sub_25A6C78E0();
    uint64_t v83 = v69;
    if (!v69)
    {
      (*(void (**)(unsigned char *, uint64_t))(v73 + 8))(v80, v81);
      uint64_t v70 = (uint64_t)v84;
      *(void *)&v84[v86[19]] = v88;
      sub_25A6BB998(v70, v78, type metadata accessor for TC2TrustedRequestMetadata);
      __swift_destroy_boxed_opaque_existential_1(v82);
      return sub_25A6BBA00(v70, type metadata accessor for TC2TrustedRequestMetadata);
    }
    (*(void (**)(unsigned char *, uint64_t))(v73 + 8))(v80, v81);
    LODWORD(v73) = 1;
    __swift_destroy_boxed_opaque_existential_1(v82);
    LODWORD(v78) = 1;
    LODWORD(v79) = 1;
    LODWORD(v80) = 1;
    LODWORD(v81) = 1;
    int v72 = 1;
    LODWORD(v82) = 1;
    uint64_t v23 = v84;
    long long v27 = *(void (**)(unsigned char *, uint64_t))(v85 + 8);
    uint64_t v28 = v77;
    v27(v84, v77);
    v27(&v23[v86[5]], v28);
    int v31 = v74;
    int v22 = 1;
    int v32 = 1;
    int v26 = 1;
    int v25 = v72;
    int v30 = v73;
    long long v29 = v86;
    uint64_t result = swift_bridgeObjectRelease();
    if (v78)
    {
      uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v75 + 8))(&v23[v29[7]], v76);
      if (v79) {
        goto LABEL_17;
      }
LABEL_5:
      if (!v80) {
        goto LABEL_18;
      }
LABEL_6:
      uint64_t result = swift_bridgeObjectRelease();
      if (v81) {
        goto LABEL_19;
      }
LABEL_7:
      if (!v25) {
        goto LABEL_20;
      }
LABEL_8:
      uint64_t result = swift_bridgeObjectRelease();
      if (v26) {
        goto LABEL_21;
      }
LABEL_9:
      if (!v82) {
        goto LABEL_22;
      }
LABEL_10:
      uint64_t result = swift_bridgeObjectRelease();
      if (v22) {
        goto LABEL_23;
      }
LABEL_11:
      if (!v32) {
        goto LABEL_24;
      }
LABEL_12:
      uint64_t result = swift_bridgeObjectRelease();
      if (v31) {
        goto LABEL_25;
      }
      goto LABEL_13;
    }
  }
  if (!v79) {
    goto LABEL_5;
  }
LABEL_17:
  uint64_t result = swift_bridgeObjectRelease();
  if (v80) {
    goto LABEL_6;
  }
LABEL_18:
  if (!v81) {
    goto LABEL_7;
  }
LABEL_19:
  uint64_t result = sub_25A695514((uint64_t)&v23[v29[10]]);
  if (v25) {
    goto LABEL_8;
  }
LABEL_20:
  if (!v26) {
    goto LABEL_9;
  }
LABEL_21:
  uint64_t result = swift_bridgeObjectRelease();
  if (v82) {
    goto LABEL_10;
  }
LABEL_22:
  if (!v22) {
    goto LABEL_11;
  }
LABEL_23:
  uint64_t result = swift_bridgeObjectRelease();
  if (v32) {
    goto LABEL_12;
  }
LABEL_24:
  if (v31)
  {
LABEL_25:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v30 & 1) == 0) {
      return result;
    }
    return swift_bridgeObjectRelease();
  }
LABEL_13:
  if (!v30) {
    return result;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_25A6B89E8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TC2TrustedRequestMetadata.init(from:)(a1, a2);
}

uint64_t sub_25A6B8A00(void *a1)
{
  return TC2TrustedRequestMetadata.encode(to:)(a1);
}

uint64_t TC2TrustedRequestFactoryMetadata.requests.getter()
{
  return swift_bridgeObjectRetain();
}

PrivateCloudCompute::TC2TrustedRequestFactoryMetadata __swiftcall TC2TrustedRequestFactoryMetadata.init(requests:)(PrivateCloudCompute::TC2TrustedRequestFactoryMetadata requests)
{
  v1->requests._rawValue = requests.requests._rawValue;
  return requests;
}

uint64_t sub_25A6B8A28()
{
  return 0x7374736575716572;
}

uint64_t sub_25A6B8A44(uint64_t a1)
{
  unint64_t v2 = sub_25A6B8C48();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A6B8A80(uint64_t a1)
{
  unint64_t v2 = sub_25A6B8C48();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TC2TrustedRequestFactoryMetadata.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C788);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A6B8C48();
  sub_25A6C7B00();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C798);
  sub_25A6B8E48(&qword_26A44C7A0, &qword_26A44C600);
  sub_25A6C79B0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_25A6B8C48()
{
  unint64_t result = qword_26A44C790;
  if (!qword_26A44C790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C790);
  }
  return result;
}

uint64_t TC2TrustedRequestFactoryMetadata.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C7A8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A6B8C48();
  sub_25A6C7AF0();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C798);
    sub_25A6B8E48(&qword_26A44C7B0, &qword_26A44C290);
    sub_25A6C78E0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_25A6B8E48(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A44C798);
    sub_25A6B7D0C(a2, (void (*)(uint64_t))type metadata accessor for TC2TrustedRequestMetadata);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25A6B8EDC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return TC2TrustedRequestFactoryMetadata.init(from:)(a1, a2);
}

uint64_t sub_25A6B8EF4(void *a1)
{
  return TC2TrustedRequestFactoryMetadata.encode(to:)(a1);
}

uint64_t sub_25A6B8F0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7374736575716572 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_25A6C7A00();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_25A6B8FA4(uint64_t a1)
{
  unint64_t v2 = sub_25A6B91A8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A6B8FE0(uint64_t a1)
{
  unint64_t v2 = sub_25A6B91A8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TC2TrustedRequestFactoriesMetadata.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C7B8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A6B91A8();
  sub_25A6C7B00();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C7C8);
  sub_25A6B93A8(&qword_26A44C7D0, &qword_26A44C7C8, (void (*)(void))sub_25A6A5C0C);
  sub_25A6C79B0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_25A6B91A8()
{
  unint64_t result = qword_26A44C7C0;
  if (!qword_26A44C7C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C7C0);
  }
  return result;
}

uint64_t TC2TrustedRequestFactoriesMetadata.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C7D8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A6B91A8();
  sub_25A6C7AF0();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C7C8);
    sub_25A6B93A8(&qword_26A44C7E0, &qword_26A44C7C8, (void (*)(void))sub_25A68F3E8);
    sub_25A6C78E0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_25A6B93A8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25A6B9414@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return TC2TrustedRequestFactoriesMetadata.init(from:)(a1, a2);
}

uint64_t sub_25A6B942C(void *a1)
{
  return TC2TrustedRequestFactoriesMetadata.encode(to:)(a1);
}

PrivateCloudCompute::RequestLogEntryType_optional __swiftcall RequestLogEntryType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_25A6C7820();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  char *v2 = v5;
  return result;
}

uint64_t RequestLogEntryType.rawValue.getter()
{
  if (*v0) {
    return 0x6863746566657270;
  }
  else {
    return 0x5264657473757274;
  }
}

uint64_t sub_25A6B94FC(char *a1, char *a2)
{
  return sub_25A6C4AB0(*a1, *a2);
}

uint64_t sub_25A6B9508()
{
  return sub_25A6C7AE0();
}

uint64_t sub_25A6B95A4()
{
  sub_25A6C74E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25A6B962C()
{
  return sub_25A6C7AE0();
}

PrivateCloudCompute::RequestLogEntryType_optional sub_25A6B96C4(Swift::String *a1)
{
  return RequestLogEntryType.init(rawValue:)(*a1);
}

void sub_25A6B96D0(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x5264657473757274;
  if (*v1) {
    uint64_t v2 = 0x6863746566657270;
  }
  unint64_t v3 = 0xEE00747365757165;
  if (*v1) {
    unint64_t v3 = 0xEF74736575716552;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_25A6B9728()
{
  return sub_25A6C75A0();
}

uint64_t sub_25A6B9788()
{
  return sub_25A6C7580();
}

uint64_t sub_25A6B97D8()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C8C0);
  MEMORY[0x270FA5388](v0 - 8);
  long long v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_25A6C7400();
  uint64_t v26 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  int v22 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_25A6C7340();
  uint64_t v25 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v23 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_25A6C7320();
  uint64_t v4 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25A6C7300();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_25A6C7310();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_25A6C7350();
  __swift_allocate_value_buffer(v15, qword_26A457FD0);
  __swift_project_value_buffer(v15, (uint64_t)qword_26A457FD0);
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F072A0], v11);
  uint64_t v16 = v23;
  uint64_t v17 = v7;
  uint64_t v18 = v28;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F07288], v17);
  uint64_t v19 = v26;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F072B8], v24);
  (*(void (**)(char *, void, uint64_t))(v25 + 104))(v16, *MEMORY[0x263F072C8], v27);
  uint64_t v20 = v29;
  sub_25A6C73E0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v20, 1, v18);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v22, v20, v18);
    return sub_25A6C7330();
  }
  return result;
}

void TrustedRequestLogEntry.type.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t TrustedRequestLogEntry.clientRequestID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_25A6B9C38(type metadata accessor for TrustedRequestLogEntry, a1);
}

uint64_t sub_25A6B9C38@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 20);
  uint64_t v5 = sub_25A6C73D0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t type metadata accessor for TrustedRequestLogEntry(uint64_t a1)
{
  return sub_25A675B1C(a1, (uint64_t *)&unk_26A44C830);
}

uint64_t TrustedRequestLogEntry.serverRequestID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TrustedRequestLogEntry(0) + 24);
  uint64_t v4 = sub_25A6C73D0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t TrustedRequestLogEntry.environment.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TrustedRequestLogEntry(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrustedRequestLogEntry.creationDate.getter()
{
  return sub_25A6B9DA8(type metadata accessor for TrustedRequestLogEntry);
}

uint64_t sub_25A6B9DA8(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 32));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t TrustedRequestLogEntry.bundleIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TrustedRequestLogEntry(0) + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrustedRequestLogEntry.featureIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TrustedRequestLogEntry(0) + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrustedRequestLogEntry.sessionIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TrustedRequestLogEntry(0) + 44);
  return sub_25A6A5DA0(v3, a1);
}

uint64_t TrustedRequestLogEntry.qos.getter()
{
  return sub_25A6B9ECC(type metadata accessor for TrustedRequestLogEntry);
}

uint64_t sub_25A6B9ECC(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 48));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t TrustedRequestLogEntry.workloadName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TrustedRequestLogEntry(0) + 52));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrustedRequestLogEntry.workloadParameters.getter()
{
  type metadata accessor for TrustedRequestLogEntry(0);
  return swift_bridgeObjectRetain();
}

uint64_t TrustedRequestLogEntry.state.getter()
{
  return sub_25A6B9FA0(type metadata accessor for TrustedRequestLogEntry);
}

uint64_t sub_25A6B9FA0(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 60));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t TrustedRequestLogEntry.payloadTransportState.getter()
{
  return sub_25A6BA000(type metadata accessor for TrustedRequestLogEntry);
}

uint64_t sub_25A6BA000(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 64));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t TrustedRequestLogEntry.responseState.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TrustedRequestLogEntry(0) + 68));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrustedRequestLogEntry.responseCode.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for TrustedRequestLogEntry(0) + 72));
}

uint64_t TrustedRequestLogEntry.ropesVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TrustedRequestLogEntry(0) + 76));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrustedRequestLogEntry.endpoints.getter()
{
  type metadata accessor for TrustedRequestLogEntry(0);
  return swift_bridgeObjectRetain();
}

uint64_t TrustedRequestLogEntry.init(_:)@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  *a2 = 0;
  uint64_t v4 = (int *)type metadata accessor for TrustedRequestLogEntry(0);
  uint64_t v5 = &a2[v4[5]];
  uint64_t v6 = sub_25A6C73D0();
  uint64_t v7 = *(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(v5, a1, v6);
  uint64_t v8 = (int *)type metadata accessor for TC2TrustedRequestMetadata(0);
  v7(&a2[v4[6]], a1 + v8[5], v6);
  uint64_t v9 = (uint64_t *)(a1 + v8[6]);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = &a2[v4[7]];
  *uint64_t v12 = v11;
  v12[1] = v10;
  uint64_t v13 = qword_26A44B878;
  swift_bridgeObjectRetain();
  if (v13 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_25A6C7350();
  __swift_project_value_buffer(v14, (uint64_t)qword_26A457FD0);
  sub_25A6B7D0C(&qword_26A44C7E8, MEMORY[0x263F072F0]);
  sub_25A6C7390();
  uint64_t v15 = &a2[v4[8]];
  *uint64_t v15 = v53;
  v15[1] = v54;
  uint64_t v16 = (uint64_t *)(a1 + v8[8]);
  uint64_t v17 = *v16;
  uint64_t v18 = v16[1];
  uint64_t v19 = &a2[v4[9]];
  *uint64_t v19 = v17;
  v19[1] = v18;
  uint64_t v20 = (uint64_t *)(a1 + v8[9]);
  uint64_t v21 = *v20;
  uint64_t v22 = v20[1];
  uint64_t v23 = &a2[v4[10]];
  *uint64_t v23 = v21;
  v23[1] = v22;
  sub_25A6A5DA0(a1 + v8[10], (uint64_t)&a2[v4[11]]);
  uint64_t v24 = (uint64_t *)(a1 + v8[11]);
  uint64_t v25 = *v24;
  uint64_t v26 = v24[1];
  uint64_t v27 = &a2[v4[12]];
  void *v27 = v25;
  v27[1] = v26;
  uint64_t v28 = (uint64_t *)(a1 + v8[12]);
  uint64_t v29 = *v28;
  uint64_t v30 = v28[1];
  int v31 = &a2[v4[13]];
  *int v31 = v29;
  v31[1] = v30;
  *(void *)&a2[v4[14]] = *(void *)(a1 + v8[13]);
  int v32 = (uint64_t *)(a1 + v8[14]);
  uint64_t v33 = *v32;
  uint64_t v34 = v32[1];
  uint64_t v35 = &a2[v4[15]];
  *uint64_t v35 = v33;
  v35[1] = v34;
  uint64_t v36 = (uint64_t *)(a1 + v8[15]);
  uint64_t v37 = *v36;
  uint64_t v38 = v36[1];
  uint64_t v39 = &a2[v4[16]];
  *uint64_t v39 = v37;
  v39[1] = v38;
  uint64_t v40 = (uint64_t *)(a1 + v8[16]);
  uint64_t v41 = *v40;
  uint64_t v42 = v40[1];
  uint64_t v43 = &a2[v4[17]];
  *uint64_t v43 = v41;
  v43[1] = v42;
  uint64_t v44 = a1 + v8[17];
  uint64_t v45 = *(void *)v44;
  LOBYTE(v44) = *(unsigned char *)(v44 + 8);
  uint64_t v46 = &a2[v4[18]];
  *(void *)uint64_t v46 = v45;
  v46[8] = v44;
  uint64_t v47 = (uint64_t *)(a1 + v8[18]);
  uint64_t v49 = *v47;
  uint64_t v48 = v47[1];
  uint64_t v50 = &a2[v4[19]];
  *uint64_t v50 = v49;
  v50[1] = v48;
  uint64_t v51 = *(void *)(a1 + v8[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_25A6BBA00(a1, type metadata accessor for TC2TrustedRequestMetadata);
  *(void *)&a2[v4[20]] = v51;
  return result;
}

uint64_t sub_25A6BA444(char a1)
{
  uint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      uint64_t v3 = 0x746E65696C63;
      goto LABEL_4;
    case 2:
      uint64_t v3 = 0x726576726573;
LABEL_4:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6552000000000000;
      break;
    case 3:
      uint64_t result = 0x6D6E6F7269766E65;
      break;
    case 4:
      uint64_t result = 0x6E6F697461657263;
      break;
    case 5:
      uint64_t result = 0xD000000000000010;
      break;
    case 6:
    case 7:
      uint64_t result = 0xD000000000000011;
      break;
    case 8:
      uint64_t result = 7565169;
      break;
    case 9:
      uint64_t result = 0x64616F6C6B726F77;
      break;
    case 10:
      uint64_t result = 0xD000000000000012;
      break;
    case 11:
      uint64_t result = 0x6574617473;
      break;
    case 12:
      uint64_t result = 0xD000000000000015;
      break;
    case 13:
    case 14:
      uint64_t result = 0x65736E6F70736572;
      break;
    case 15:
      uint64_t result = 0x7265567365706F72;
      break;
    case 16:
      uint64_t result = 0x746E696F70646E65;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25A6BA65C()
{
  return sub_25A6BA444(*v0);
}

uint64_t sub_25A6BA664@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25A6BFCA0(a1, a2);
  *a3 = result;
  return result;
}

void sub_25A6BA68C(unsigned char *a1@<X8>)
{
  *a1 = 17;
}

uint64_t sub_25A6BA698(uint64_t a1)
{
  unint64_t v2 = sub_25A6BAC68();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A6BA6D4(uint64_t a1)
{
  unint64_t v2 = sub_25A6BAC68();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TrustedRequestLogEntry.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C7F0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A6BAC68();
  sub_25A6C7B00();
  LOBYTE(v12) = *v3;
  char v13 = 0;
  sub_25A6BACBC();
  sub_25A6C79B0();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for TrustedRequestLogEntry(0);
    LOBYTE(v12) = 1;
    sub_25A6C73D0();
    sub_25A6B7D0C(&qword_26B329B38, MEMORY[0x263F07508]);
    sub_25A6C79B0();
    LOBYTE(v12) = 2;
    sub_25A6C79B0();
    LOBYTE(v12) = 3;
    sub_25A6C7960();
    LOBYTE(v12) = 4;
    sub_25A6C7960();
    LOBYTE(v12) = 5;
    sub_25A6C7960();
    LOBYTE(v12) = 6;
    sub_25A6C7920();
    LOBYTE(v12) = 7;
    sub_25A6C7950();
    LOBYTE(v12) = 8;
    sub_25A6C7960();
    LOBYTE(v12) = 9;
    sub_25A6C7960();
    uint64_t v12 = *(void *)&v3[*(int *)(v9 + 56)];
    char v13 = 10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C530);
    sub_25A6A0064(&qword_26A44C538);
    sub_25A6C79B0();
    LOBYTE(v12) = 11;
    sub_25A6C7960();
    LOBYTE(v12) = 12;
    sub_25A6C7960();
    LOBYTE(v12) = 13;
    sub_25A6C7960();
    LOBYTE(v12) = 14;
    sub_25A6C7940();
    LOBYTE(v12) = 15;
    sub_25A6C7920();
    uint64_t v12 = *(void *)&v3[*(int *)(v9 + 80)];
    char v13 = 16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C768);
    sub_25A6B93A8(&qword_26A44C770, &qword_26A44C768, (void (*)(void))sub_25A6A5C60);
    sub_25A6C79B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_25A6BAC68()
{
  unint64_t result = qword_26A44C7F8;
  if (!qword_26A44C7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C7F8);
  }
  return result;
}

unint64_t sub_25A6BACBC()
{
  unint64_t result = qword_26A44C800;
  if (!qword_26A44C800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C800);
  }
  return result;
}

uint64_t TrustedRequestLogEntry.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v66 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C438);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = &v59[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v61 = sub_25A6C73D0();
  uint64_t v71 = *(void *)(v61 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v61);
  uint64_t v9 = &v59[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = &v59[-v10];
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C808);
  uint64_t v12 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v14 = &v59[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v62 = type metadata accessor for TrustedRequestLogEntry(0);
  MEMORY[0x270FA5388](v62);
  long long v69 = a1;
  uint64_t v70 = &v59[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A6BAC68();
  uint64_t v68 = v14;
  sub_25A6C7AF0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
  }
  uint64_t v16 = v9;
  char v64 = v6;
  uint64_t v65 = v12;
  char v73 = 0;
  sub_25A6BB944();
  sub_25A6C78E0();
  uint64_t v17 = v70;
  *uint64_t v70 = v72;
  LOBYTE(v72) = 1;
  uint64_t v18 = sub_25A6B7D0C(&qword_26A44C4D8, MEMORY[0x263F07508]);
  uint64_t v19 = v11;
  uint64_t v20 = v61;
  sub_25A6C78E0();
  uint64_t v21 = (int *)v62;
  uint64_t v22 = &v17[*(int *)(v62 + 20)];
  uint64_t v63 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v71 + 32);
  v63(v22, v19, v20);
  LOBYTE(v72) = 2;
  sub_25A6C78E0();
  uint64_t v60 = v18;
  v63(&v17[v21[6]], v16, v20);
  LOBYTE(v72) = 3;
  uint64_t v23 = sub_25A6C7890();
  uint64_t v24 = (uint64_t *)&v17[v21[7]];
  *uint64_t v24 = v23;
  v24[1] = v25;
  LOBYTE(v72) = 4;
  uint64_t v26 = sub_25A6C7890();
  uint64_t v27 = (uint64_t *)&v17[v21[8]];
  uint64_t *v27 = v26;
  v27[1] = v28;
  LOBYTE(v72) = 5;
  uint64_t v29 = sub_25A6C7890();
  uint64_t v30 = (uint64_t *)&v17[v21[9]];
  *uint64_t v30 = v29;
  v30[1] = v31;
  LOBYTE(v72) = 6;
  uint64_t v32 = sub_25A6C7850();
  uint64_t v33 = (uint64_t *)&v17[v21[10]];
  *uint64_t v33 = v32;
  v33[1] = v34;
  LOBYTE(v72) = 7;
  uint64_t v35 = (uint64_t)v64;
  sub_25A6C7880();
  sub_25A6B7438(v35, (uint64_t)&v17[v21[11]]);
  LOBYTE(v72) = 8;
  uint64_t v36 = sub_25A6C7890();
  uint64_t v37 = (uint64_t *)&v17[v21[12]];
  *uint64_t v37 = v36;
  v37[1] = v38;
  LOBYTE(v72) = 9;
  uint64_t v39 = sub_25A6C7890();
  uint64_t v40 = (uint64_t *)&v70[v21[13]];
  uint64_t *v40 = v39;
  v40[1] = v41;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C530);
  char v73 = 10;
  sub_25A6A0064(&qword_26A44C548);
  sub_25A6C78E0();
  *(void *)&v70[v21[14]] = v72;
  LOBYTE(v72) = 11;
  uint64_t v42 = sub_25A6C7890();
  uint64_t v43 = (uint64_t *)&v70[v21[15]];
  *uint64_t v43 = v42;
  v43[1] = v44;
  LOBYTE(v72) = 12;
  uint64_t v45 = sub_25A6C7890();
  uint64_t v46 = (uint64_t *)&v70[v21[16]];
  uint64_t *v46 = v45;
  v46[1] = v47;
  LOBYTE(v72) = 13;
  uint64_t v48 = sub_25A6C7890();
  uint64_t v49 = (uint64_t *)&v70[v21[17]];
  *uint64_t v49 = v48;
  v49[1] = v50;
  LOBYTE(v72) = 14;
  uint64_t v51 = sub_25A6C7870();
  uint64_t v52 = &v70[v21[18]];
  *(void *)uint64_t v52 = v51;
  v52[8] = v53 & 1;
  LOBYTE(v72) = 15;
  uint64_t v54 = sub_25A6C7850();
  uint64_t v55 = (uint64_t *)&v70[v21[19]];
  *uint64_t v55 = v54;
  v55[1] = v56;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C768);
  char v73 = 16;
  sub_25A6B93A8(&qword_26A44C780, &qword_26A44C768, (void (*)(void))sub_25A68F43C);
  sub_25A6C78E0();
  uint64_t v60 = 0;
  (*(void (**)(unsigned char *, uint64_t))(v65 + 8))(v68, v67);
  uint64_t v57 = (uint64_t)v70;
  *(void *)&v70[v21[20]] = v72;
  sub_25A6BB998(v57, v66, type metadata accessor for TrustedRequestLogEntry);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
  return sub_25A6BBA00(v57, type metadata accessor for TrustedRequestLogEntry);
}

unint64_t sub_25A6BB944()
{
  unint64_t result = qword_26A44C810;
  if (!qword_26A44C810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C810);
  }
  return result;
}

uint64_t sub_25A6BB998(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25A6BBA00(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_25A6BBA64()
{
  unint64_t result = qword_26A44C818;
  if (!qword_26A44C818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C818);
  }
  return result;
}

uint64_t sub_25A6BBAB8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TrustedRequestLogEntry.init(from:)(a1, a2);
}

uint64_t sub_25A6BBAD0(void *a1)
{
  return TrustedRequestLogEntry.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for TC2TrustedRequestEndpointMetadata()
{
  return &type metadata for TC2TrustedRequestEndpointMetadata;
}

uint64_t *initializeBufferWithCopyOfBuffer for TC2TrustedRequestMetadata(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v31 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_25A6C73D0();
    uint64_t v63 = *(void *)(v7 - 8);
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
    v8((char *)a1, (char *)a2, v7);
    uint64_t v62 = v8;
    v8((char *)a1 + a3[5], (char *)a2 + a3[5], v7);
    uint64_t v9 = a3[6];
    uint64_t v10 = a3[7];
    uint64_t v11 = (uint64_t *)((char *)a1 + v9);
    uint64_t v12 = (uint64_t *)((char *)a2 + v9);
    uint64_t v13 = v12[1];
    *uint64_t v11 = *v12;
    v11[1] = v13;
    uint64_t v14 = (char *)a1 + v10;
    uint64_t v15 = (char *)a2 + v10;
    uint64_t v16 = sub_25A6C73A0();
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    v17(v14, v15, v16);
    uint64_t v18 = a3[8];
    uint64_t v19 = a3[9];
    uint64_t v20 = (uint64_t *)((char *)a1 + v18);
    uint64_t v21 = (uint64_t *)((char *)a2 + v18);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    uint64_t v23 = (uint64_t *)((char *)a1 + v19);
    uint64_t v24 = (uint64_t *)((char *)a2 + v19);
    uint64_t v25 = v24[1];
    *uint64_t v23 = *v24;
    v23[1] = v25;
    uint64_t v26 = a3[10];
    uint64_t v27 = (char *)a1 + v26;
    uint64_t v28 = (char *)a2 + v26;
    uint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v29(v28, 1, v7))
    {
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C438);
      memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      v62(v27, v28, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v27, 0, 1, v7);
    }
    uint64_t v32 = a3[11];
    uint64_t v33 = a3[12];
    uint64_t v34 = (uint64_t *)((char *)a1 + v32);
    uint64_t v35 = (uint64_t *)((char *)a2 + v32);
    uint64_t v36 = v35[1];
    *uint64_t v34 = *v35;
    v34[1] = v36;
    uint64_t v37 = (uint64_t *)((char *)a1 + v33);
    uint64_t v38 = (uint64_t *)((char *)a2 + v33);
    uint64_t v39 = *v38;
    uint64_t v40 = v38[1];
    uint64_t v41 = a3[13];
    uint64_t v42 = a3[14];
    uint64_t v43 = *(uint64_t *)((char *)a2 + v41);
    *uint64_t v37 = v39;
    v37[1] = v40;
    *(uint64_t *)((char *)a1 + v41) = v43;
    uint64_t v44 = (uint64_t *)((char *)a1 + v42);
    uint64_t v45 = *(uint64_t *)((char *)a2 + v42 + 8);
    *uint64_t v44 = *(uint64_t *)((char *)a2 + v42);
    v44[1] = v45;
    uint64_t v46 = a3[15];
    uint64_t v47 = a3[16];
    uint64_t v48 = (uint64_t *)((char *)a1 + v46);
    uint64_t v49 = (uint64_t *)((char *)a2 + v46);
    uint64_t v50 = v49[1];
    void *v48 = *v49;
    v48[1] = v50;
    uint64_t v51 = (uint64_t *)((char *)a1 + v47);
    uint64_t v52 = (uint64_t *)((char *)a2 + v47);
    uint64_t v53 = v52[1];
    void *v51 = *v52;
    v51[1] = v53;
    uint64_t v54 = a3[17];
    uint64_t v55 = a3[18];
    uint64_t v56 = (char *)a1 + v54;
    uint64_t v57 = (char *)a2 + v54;
    *(void *)uint64_t v56 = *(void *)v57;
    v56[8] = v57[8];
    uint64_t v58 = (uint64_t *)((char *)a1 + v55);
    uint64_t v59 = (uint64_t *)((char *)a2 + v55);
    uint64_t v60 = v59[1];
    *uint64_t v58 = *v59;
    v58[1] = v60;
    *(uint64_t *)((char *)a1 + a3[19]) = *(uint64_t *)((char *)a2 + a3[19]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for TC2TrustedRequestMetadata(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_25A6C73D0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  v6(a1 + a2[5], v4);
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + a2[7];
  uint64_t v8 = sub_25A6C73A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = a1 + a2[10];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v9, 1, v4)) {
    v6(v9, v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for TC2TrustedRequestMetadata(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_25A6C73D0();
  uint64_t v61 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(v61 + 16);
  v7(a1, a2, v6);
  uint64_t v60 = v7;
  v7(&a1[a3[5]], &a2[a3[5]], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a3[7];
  uint64_t v10 = &a1[v8];
  uint64_t v11 = &a2[v8];
  uint64_t v12 = *((void *)v11 + 1);
  *(void *)uint64_t v10 = *(void *)v11;
  *((void *)v10 + 1) = v12;
  uint64_t v13 = &a1[v9];
  uint64_t v14 = &a2[v9];
  uint64_t v15 = sub_25A6C73A0();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  v16(v13, v14, v15);
  uint64_t v17 = a3[8];
  uint64_t v18 = a3[9];
  uint64_t v19 = &a1[v17];
  uint64_t v20 = &a2[v17];
  uint64_t v21 = *((void *)v20 + 1);
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = v21;
  uint64_t v22 = &a1[v18];
  uint64_t v23 = &a2[v18];
  uint64_t v24 = *((void *)v23 + 1);
  *(void *)uint64_t v22 = *(void *)v23;
  *((void *)v22 + 1) = v24;
  uint64_t v25 = a3[10];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  uint64_t v28 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v61 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v28(v27, 1, v6))
  {
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C438);
    memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    v60(v26, v27, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v26, 0, 1, v6);
  }
  uint64_t v30 = a3[11];
  uint64_t v31 = a3[12];
  uint64_t v32 = &a1[v30];
  uint64_t v33 = &a2[v30];
  uint64_t v34 = *((void *)v33 + 1);
  *(void *)uint64_t v32 = *(void *)v33;
  *((void *)v32 + 1) = v34;
  uint64_t v35 = &a1[v31];
  uint64_t v36 = (uint64_t *)&a2[v31];
  uint64_t v37 = *v36;
  uint64_t v38 = v36[1];
  uint64_t v39 = a3[13];
  uint64_t v40 = a3[14];
  uint64_t v41 = *(void *)&a2[v39];
  *(void *)uint64_t v35 = v37;
  *((void *)v35 + 1) = v38;
  *(void *)&a1[v39] = v41;
  uint64_t v42 = &a1[v40];
  uint64_t v43 = *(void *)&a2[v40 + 8];
  *(void *)uint64_t v42 = *(void *)&a2[v40];
  *((void *)v42 + 1) = v43;
  uint64_t v44 = a3[15];
  uint64_t v45 = a3[16];
  uint64_t v46 = &a1[v44];
  uint64_t v47 = &a2[v44];
  uint64_t v48 = *((void *)v47 + 1);
  *(void *)uint64_t v46 = *(void *)v47;
  *((void *)v46 + 1) = v48;
  uint64_t v49 = &a1[v45];
  uint64_t v50 = &a2[v45];
  uint64_t v51 = *((void *)v50 + 1);
  *(void *)uint64_t v49 = *(void *)v50;
  *((void *)v49 + 1) = v51;
  uint64_t v52 = a3[17];
  uint64_t v53 = a3[18];
  uint64_t v54 = &a1[v52];
  uint64_t v55 = &a2[v52];
  *(void *)uint64_t v54 = *(void *)v55;
  v54[8] = v55[8];
  uint64_t v56 = &a1[v53];
  uint64_t v57 = &a2[v53];
  uint64_t v58 = *((void *)v57 + 1);
  *(void *)uint64_t v56 = *(void *)v57;
  *((void *)v56 + 1) = v58;
  *(void *)&a1[a3[19]] = *(void *)&a2[a3[19]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for TC2TrustedRequestMetadata(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_25A6C73D0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v52 = v8;
  v8(&a1[a3[5]], &a2[a3[5]], v6);
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  *(void *)uint64_t v10 = *(void *)v11;
  *((void *)v10 + 1) = *((void *)v11 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[7];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_25A6C73A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v16 = a3[8];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  *(void *)uint64_t v17 = *(void *)v18;
  *((void *)v17 + 1) = *((void *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[9];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  *(void *)uint64_t v20 = *(void *)v21;
  *((void *)v20 + 1) = *((void *)v21 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[10];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v26 = v25(&a1[v22], 1, v6);
  int v27 = v25(v24, 1, v6);
  if (!v26)
  {
    if (!v27)
    {
      v52(v23, v24, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v23, v6);
    goto LABEL_6;
  }
  if (v27)
  {
LABEL_6:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C438);
    memcpy(v23, v24, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v23, v24, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v23, 0, 1, v6);
LABEL_7:
  uint64_t v29 = a3[11];
  uint64_t v30 = &a1[v29];
  uint64_t v31 = &a2[v29];
  *(void *)uint64_t v30 = *(void *)v31;
  *((void *)v30 + 1) = *((void *)v31 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[12];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  *(void *)uint64_t v33 = *(void *)v34;
  *((void *)v33 + 1) = *((void *)v34 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v35 = a3[14];
  uint64_t v36 = &a1[v35];
  uint64_t v37 = &a2[v35];
  *(void *)uint64_t v36 = *(void *)v37;
  *((void *)v36 + 1) = *((void *)v37 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v38 = a3[15];
  uint64_t v39 = &a1[v38];
  uint64_t v40 = &a2[v38];
  *(void *)uint64_t v39 = *(void *)v40;
  *((void *)v39 + 1) = *((void *)v40 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v41 = a3[16];
  uint64_t v42 = &a1[v41];
  uint64_t v43 = &a2[v41];
  *(void *)uint64_t v42 = *(void *)v43;
  *((void *)v42 + 1) = *((void *)v43 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = a3[17];
  uint64_t v45 = &a1[v44];
  uint64_t v46 = &a2[v44];
  uint64_t v47 = *(void *)v46;
  v45[8] = v46[8];
  *(void *)uint64_t v45 = v47;
  uint64_t v48 = a3[18];
  uint64_t v49 = &a1[v48];
  uint64_t v50 = &a2[v48];
  *(void *)uint64_t v49 = *(void *)v50;
  *((void *)v49 + 1) = *((void *)v50 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[19]] = *(void *)&a2[a3[19]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for TC2TrustedRequestMetadata(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_25A6C73D0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v8(&a1[a3[5]], &a2[a3[5]], v6);
  uint64_t v9 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_25A6C73A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = a3[9];
  *(_OWORD *)&a1[a3[8]] = *(_OWORD *)&a2[a3[8]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  uint64_t v14 = a3[10];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v14], 1, v6))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C438);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v8(v15, v16, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  uint64_t v18 = a3[12];
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  *(_OWORD *)&a1[v18] = *(_OWORD *)&a2[v18];
  uint64_t v19 = a3[14];
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  *(_OWORD *)&a1[v19] = *(_OWORD *)&a2[v19];
  uint64_t v20 = a3[16];
  *(_OWORD *)&a1[a3[15]] = *(_OWORD *)&a2[a3[15]];
  *(_OWORD *)&a1[v20] = *(_OWORD *)&a2[v20];
  uint64_t v21 = a3[17];
  uint64_t v22 = a3[18];
  uint64_t v23 = &a1[v21];
  uint64_t v24 = &a2[v21];
  *(void *)uint64_t v23 = *(void *)v24;
  v23[8] = v24[8];
  *(_OWORD *)&a1[v22] = *(_OWORD *)&a2[v22];
  *(void *)&a1[a3[19]] = *(void *)&a2[a3[19]];
  return a1;
}

char *assignWithTake for TC2TrustedRequestMetadata(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_25A6C73D0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  long long v69 = v8;
  v8(&a1[a3[5]], &a2[a3[5]], v6);
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = (uint64_t *)&a2[v9];
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  *(void *)uint64_t v10 = v13;
  *((void *)v10 + 1) = v12;
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[7];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = sub_25A6C73A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 40))(v15, v16, v17);
  uint64_t v18 = a3[8];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = (uint64_t *)&a2[v18];
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *(void *)uint64_t v19 = v22;
  *((void *)v19 + 1) = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[9];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = (uint64_t *)&a2[v23];
  uint64_t v27 = *v25;
  uint64_t v26 = v25[1];
  *(void *)uint64_t v24 = v27;
  *((void *)v24 + 1) = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[10];
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  uint64_t v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v32 = v31(&a1[v28], 1, v6);
  int v33 = v31(v30, 1, v6);
  if (!v32)
  {
    if (!v33)
    {
      v69(v29, v30, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v29, v6);
    goto LABEL_6;
  }
  if (v33)
  {
LABEL_6:
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C438);
    memcpy(v29, v30, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v29, v30, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v29, 0, 1, v6);
LABEL_7:
  uint64_t v35 = a3[11];
  uint64_t v36 = &a1[v35];
  uint64_t v37 = (uint64_t *)&a2[v35];
  uint64_t v39 = *v37;
  uint64_t v38 = v37[1];
  *(void *)uint64_t v36 = v39;
  *((void *)v36 + 1) = v38;
  swift_bridgeObjectRelease();
  uint64_t v40 = a3[12];
  uint64_t v41 = &a1[v40];
  uint64_t v42 = (uint64_t *)&a2[v40];
  uint64_t v44 = *v42;
  uint64_t v43 = v42[1];
  *(void *)uint64_t v41 = v44;
  *((void *)v41 + 1) = v43;
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  swift_bridgeObjectRelease();
  uint64_t v45 = a3[14];
  uint64_t v46 = &a1[v45];
  uint64_t v47 = (uint64_t *)&a2[v45];
  uint64_t v49 = *v47;
  uint64_t v48 = v47[1];
  *(void *)uint64_t v46 = v49;
  *((void *)v46 + 1) = v48;
  swift_bridgeObjectRelease();
  uint64_t v50 = a3[15];
  uint64_t v51 = &a1[v50];
  uint64_t v52 = (uint64_t *)&a2[v50];
  uint64_t v54 = *v52;
  uint64_t v53 = v52[1];
  *(void *)uint64_t v51 = v54;
  *((void *)v51 + 1) = v53;
  swift_bridgeObjectRelease();
  uint64_t v55 = a3[16];
  uint64_t v56 = &a1[v55];
  uint64_t v57 = (uint64_t *)&a2[v55];
  uint64_t v59 = *v57;
  uint64_t v58 = v57[1];
  *(void *)uint64_t v56 = v59;
  *((void *)v56 + 1) = v58;
  swift_bridgeObjectRelease();
  uint64_t v60 = a3[17];
  uint64_t v61 = a3[18];
  uint64_t v62 = &a1[v60];
  uint64_t v63 = &a2[v60];
  *(void *)uint64_t v62 = *(void *)v63;
  v62[8] = v63[8];
  char v64 = &a1[v61];
  uint64_t v65 = (uint64_t *)&a2[v61];
  uint64_t v67 = *v65;
  uint64_t v66 = v65[1];
  *(void *)char v64 = v67;
  *((void *)v64 + 1) = v66;
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[19]] = *(void *)&a2[a3[19]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TC2TrustedRequestMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25A6BCCCC);
}

uint64_t sub_25A6BCCCC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25A6C73D0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_9:
    return v9(v10, a2, v8);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v11 = *(void *)(a1 + a3[6] + 8);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v13 = sub_25A6C73A0();
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a2)
    {
      uint64_t v8 = v13;
      uint64_t v10 = a1 + a3[7];
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
      goto LABEL_9;
    }
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C438);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[10];
    return v16(v18, a2, v17);
  }
}

uint64_t storeEnumTagSinglePayload for TC2TrustedRequestMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25A6BCE68);
}

uint64_t sub_25A6BCE68(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_25A6C73D0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_7:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[6] + 8) = (a2 - 1);
    return result;
  }
  uint64_t v13 = sub_25A6C73A0();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + a4[7];
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_7;
  }
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C438);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a4[10];
  return v16(v18, a2, a2, v17);
}

void sub_25A6BCFF0()
{
  sub_25A6C73D0();
  if (v0 <= 0x3F)
  {
    sub_25A6C73A0();
    if (v1 <= 0x3F)
    {
      sub_25A6B4E8C();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

ValueMetadata *type metadata accessor for TC2TrustedRequestFactoryMetadata()
{
  return &type metadata for TC2TrustedRequestFactoryMetadata;
}

ValueMetadata *type metadata accessor for TC2TrustedRequestFactoriesMetadata()
{
  return &type metadata for TC2TrustedRequestFactoriesMetadata;
}

unsigned char *storeEnumTagSinglePayload for RequestLogEntryType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A6BD224);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RequestLogEntryType()
{
  return &type metadata for RequestLogEntryType;
}

uint64_t *initializeBufferWithCopyOfBuffer for TrustedRequestLogEntry(uint64_t *a1, uint64_t *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v33 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_25A6C73D0();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v12(v8, v9, v10);
    char v64 = v12;
    v12((char *)v4 + a3[6], (char *)a2 + a3[6], v10);
    uint64_t v13 = a3[7];
    uint64_t v14 = a3[8];
    uint64_t v15 = (uint64_t *)((char *)v4 + v13);
    uint64_t v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = (uint64_t *)((char *)v4 + v14);
    uint64_t v19 = (uint64_t *)((char *)a2 + v14);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = a3[9];
    uint64_t v22 = a3[10];
    uint64_t v23 = (uint64_t *)((char *)v4 + v21);
    uint64_t v24 = (uint64_t *)((char *)a2 + v21);
    uint64_t v25 = v24[1];
    *uint64_t v23 = *v24;
    v23[1] = v25;
    uint64_t v26 = (uint64_t *)((char *)v4 + v22);
    uint64_t v27 = (uint64_t *)((char *)a2 + v22);
    uint64_t v28 = v27[1];
    *uint64_t v26 = *v27;
    v26[1] = v28;
    uint64_t v29 = a3[11];
    uint64_t v65 = v11;
    __dst = (char *)v4 + v29;
    uint64_t v30 = (char *)a2 + v29;
    uint64_t v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v31(v30, 1, v10))
    {
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C438);
      memcpy(__dst, v30, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      v64(__dst, v30, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(__dst, 0, 1, v10);
    }
    uint64_t v34 = a3[12];
    uint64_t v35 = a3[13];
    uint64_t v36 = (uint64_t *)((char *)v4 + v34);
    uint64_t v37 = (uint64_t *)((char *)a2 + v34);
    uint64_t v38 = v37[1];
    *uint64_t v36 = *v37;
    v36[1] = v38;
    uint64_t v39 = (uint64_t *)((char *)v4 + v35);
    uint64_t v40 = (uint64_t *)((char *)a2 + v35);
    uint64_t v41 = *v40;
    uint64_t v42 = v40[1];
    uint64_t v43 = a3[14];
    uint64_t v44 = a3[15];
    uint64_t v45 = *(uint64_t *)((char *)a2 + v43);
    *uint64_t v39 = v41;
    v39[1] = v42;
    *(uint64_t *)((char *)v4 + v43) = v45;
    uint64_t v46 = (uint64_t *)((char *)v4 + v44);
    uint64_t v47 = *(uint64_t *)((char *)a2 + v44 + 8);
    void *v46 = *(uint64_t *)((char *)a2 + v44);
    v46[1] = v47;
    uint64_t v48 = a3[16];
    uint64_t v49 = a3[17];
    uint64_t v50 = (uint64_t *)((char *)v4 + v48);
    uint64_t v51 = (uint64_t *)((char *)a2 + v48);
    uint64_t v52 = v51[1];
    *uint64_t v50 = *v51;
    v50[1] = v52;
    uint64_t v53 = (uint64_t *)((char *)v4 + v49);
    uint64_t v54 = (uint64_t *)((char *)a2 + v49);
    uint64_t v55 = v54[1];
    *uint64_t v53 = *v54;
    v53[1] = v55;
    uint64_t v56 = a3[18];
    uint64_t v57 = a3[19];
    uint64_t v58 = (char *)v4 + v56;
    uint64_t v59 = (char *)a2 + v56;
    *(void *)uint64_t v58 = *(void *)v59;
    v58[8] = v59[8];
    uint64_t v60 = (uint64_t *)((char *)v4 + v57);
    uint64_t v61 = (uint64_t *)((char *)a2 + v57);
    uint64_t v62 = v61[1];
    void *v60 = *v61;
    v60[1] = v62;
    *(uint64_t *)((char *)v4 + a3[20]) = *(uint64_t *)((char *)a2 + a3[20]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for TrustedRequestLogEntry(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_25A6C73D0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  v7(a1 + a2[6], v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + a2[11];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5)) {
    v7(v8, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unsigned char *initializeWithCopy for TrustedRequestLogEntry(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_25A6C73D0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16);
  v11(v7, v8, v9);
  uint64_t v62 = v11;
  v11(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v12 = a3[7];
  uint64_t v13 = a3[8];
  uint64_t v14 = &a1[v12];
  uint64_t v15 = &a2[v12];
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = &a1[v13];
  uint64_t v18 = &a2[v13];
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = a3[9];
  uint64_t v21 = a3[10];
  uint64_t v22 = &a1[v20];
  uint64_t v23 = &a2[v20];
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  uint64_t v25 = &a1[v21];
  uint64_t v26 = &a2[v21];
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  uint64_t v28 = a3[11];
  uint64_t v63 = v10;
  __dst = &a1[v28];
  uint64_t v29 = &a2[v28];
  uint64_t v30 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v30(v29, 1, v9))
  {
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C438);
    memcpy(__dst, v29, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    v62(__dst, v29, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v63 + 56))(__dst, 0, 1, v9);
  }
  uint64_t v32 = a3[12];
  uint64_t v33 = a3[13];
  uint64_t v34 = &a1[v32];
  uint64_t v35 = &a2[v32];
  uint64_t v36 = v35[1];
  *uint64_t v34 = *v35;
  v34[1] = v36;
  uint64_t v37 = &a1[v33];
  uint64_t v38 = (uint64_t *)&a2[v33];
  uint64_t v39 = *v38;
  uint64_t v40 = v38[1];
  uint64_t v41 = a3[14];
  uint64_t v42 = a3[15];
  uint64_t v43 = *(void *)&a2[v41];
  *uint64_t v37 = v39;
  v37[1] = v40;
  *(void *)&a1[v41] = v43;
  uint64_t v44 = &a1[v42];
  uint64_t v45 = *(void *)&a2[v42 + 8];
  *uint64_t v44 = *(void *)&a2[v42];
  v44[1] = v45;
  uint64_t v46 = a3[16];
  uint64_t v47 = a3[17];
  uint64_t v48 = &a1[v46];
  uint64_t v49 = &a2[v46];
  uint64_t v50 = v49[1];
  void *v48 = *v49;
  v48[1] = v50;
  uint64_t v51 = &a1[v47];
  uint64_t v52 = &a2[v47];
  uint64_t v53 = v52[1];
  void *v51 = *v52;
  v51[1] = v53;
  uint64_t v54 = a3[18];
  uint64_t v55 = a3[19];
  uint64_t v56 = &a1[v54];
  uint64_t v57 = &a2[v54];
  *(void *)uint64_t v56 = *(void *)v57;
  v56[8] = v57[8];
  uint64_t v58 = &a1[v55];
  uint64_t v59 = &a2[v55];
  uint64_t v60 = v59[1];
  *uint64_t v58 = *v59;
  v58[1] = v60;
  *(void *)&a1[a3[20]] = *(void *)&a2[a3[20]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unsigned char *assignWithCopy for TrustedRequestLogEntry(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_25A6C73D0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  uint64_t v53 = v11;
  v11(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v12 = a3[7];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[8];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[9];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[10];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  *uint64_t v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[11];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  uint64_t v27 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  LODWORD(v11) = v27(&a1[v24], 1, v9);
  int v28 = v27(v26, 1, v9);
  if (!v11)
  {
    if (!v28)
    {
      v53(v25, v26, v9);
      goto LABEL_7;
    }
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v25, v9);
    goto LABEL_6;
  }
  if (v28)
  {
LABEL_6:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C438);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v25, v26, v9);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v25, 0, 1, v9);
LABEL_7:
  uint64_t v30 = a3[12];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  *uint64_t v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[13];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  *uint64_t v34 = *v35;
  v34[1] = v35[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[14]] = *(void *)&a2[a3[14]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[15];
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  *uint64_t v37 = *v38;
  v37[1] = v38[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v39 = a3[16];
  uint64_t v40 = &a1[v39];
  uint64_t v41 = &a2[v39];
  void *v40 = *v41;
  v40[1] = v41[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v42 = a3[17];
  uint64_t v43 = &a1[v42];
  uint64_t v44 = &a2[v42];
  *uint64_t v43 = *v44;
  v43[1] = v44[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v45 = a3[18];
  uint64_t v46 = &a1[v45];
  uint64_t v47 = &a2[v45];
  uint64_t v48 = *(void *)v47;
  v46[8] = v47[8];
  *(void *)uint64_t v46 = v48;
  uint64_t v49 = a3[19];
  uint64_t v50 = &a1[v49];
  uint64_t v51 = &a2[v49];
  *uint64_t v50 = *v51;
  v50[1] = v51[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[20]] = *(void *)&a2[a3[20]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

unsigned char *initializeWithTake for TrustedRequestLogEntry(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_25A6C73D0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  v11(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v12 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  *(_OWORD *)&a1[v12] = *(_OWORD *)&a2[v12];
  uint64_t v13 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  uint64_t v14 = a3[11];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(&a2[v14], 1, v9))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C438);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v11(v15, v16, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
  }
  uint64_t v18 = a3[13];
  *(_OWORD *)&a1[a3[12]] = *(_OWORD *)&a2[a3[12]];
  *(_OWORD *)&a1[v18] = *(_OWORD *)&a2[v18];
  uint64_t v19 = a3[15];
  *(void *)&a1[a3[14]] = *(void *)&a2[a3[14]];
  *(_OWORD *)&a1[v19] = *(_OWORD *)&a2[v19];
  uint64_t v20 = a3[17];
  *(_OWORD *)&a1[a3[16]] = *(_OWORD *)&a2[a3[16]];
  *(_OWORD *)&a1[v20] = *(_OWORD *)&a2[v20];
  uint64_t v21 = a3[18];
  uint64_t v22 = a3[19];
  uint64_t v23 = &a1[v21];
  uint64_t v24 = &a2[v21];
  *(void *)uint64_t v23 = *(void *)v24;
  v23[8] = v24[8];
  *(_OWORD *)&a1[v22] = *(_OWORD *)&a2[v22];
  *(void *)&a1[a3[20]] = *(void *)&a2[a3[20]];
  return a1;
}

unsigned char *assignWithTake for TrustedRequestLogEntry(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_25A6C73D0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  uint64_t v72 = v11;
  v11(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v12 = a3[7];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = (uint64_t *)&a2[v12];
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = (uint64_t *)&a2[v17];
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[9];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = (uint64_t *)&a2[v22];
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[10];
  int v28 = &a1[v27];
  uint64_t v29 = (uint64_t *)&a2[v27];
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  void *v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[11];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  uint64_t v35 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  LODWORD(v11) = v35(&a1[v32], 1, v9);
  int v36 = v35(v34, 1, v9);
  if (!v11)
  {
    if (!v36)
    {
      v72(v33, v34, v9);
      goto LABEL_7;
    }
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v33, v9);
    goto LABEL_6;
  }
  if (v36)
  {
LABEL_6:
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C438);
    memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v33, v34, v9);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v33, 0, 1, v9);
LABEL_7:
  uint64_t v38 = a3[12];
  uint64_t v39 = &a1[v38];
  uint64_t v40 = (uint64_t *)&a2[v38];
  uint64_t v42 = *v40;
  uint64_t v41 = v40[1];
  *uint64_t v39 = v42;
  v39[1] = v41;
  swift_bridgeObjectRelease();
  uint64_t v43 = a3[13];
  uint64_t v44 = &a1[v43];
  uint64_t v45 = (uint64_t *)&a2[v43];
  uint64_t v47 = *v45;
  uint64_t v46 = v45[1];
  *uint64_t v44 = v47;
  v44[1] = v46;
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[14]] = *(void *)&a2[a3[14]];
  swift_bridgeObjectRelease();
  uint64_t v48 = a3[15];
  uint64_t v49 = &a1[v48];
  uint64_t v50 = (uint64_t *)&a2[v48];
  uint64_t v52 = *v50;
  uint64_t v51 = v50[1];
  *uint64_t v49 = v52;
  v49[1] = v51;
  swift_bridgeObjectRelease();
  uint64_t v53 = a3[16];
  uint64_t v54 = &a1[v53];
  uint64_t v55 = (uint64_t *)&a2[v53];
  uint64_t v57 = *v55;
  uint64_t v56 = v55[1];
  *uint64_t v54 = v57;
  v54[1] = v56;
  swift_bridgeObjectRelease();
  uint64_t v58 = a3[17];
  uint64_t v59 = &a1[v58];
  uint64_t v60 = (uint64_t *)&a2[v58];
  uint64_t v62 = *v60;
  uint64_t v61 = v60[1];
  *uint64_t v59 = v62;
  v59[1] = v61;
  swift_bridgeObjectRelease();
  uint64_t v63 = a3[18];
  uint64_t v64 = a3[19];
  uint64_t v65 = &a1[v63];
  uint64_t v66 = &a2[v63];
  *(void *)uint64_t v65 = *(void *)v66;
  v65[8] = v66[8];
  uint64_t v67 = &a1[v64];
  uint64_t v68 = (uint64_t *)&a2[v64];
  uint64_t v70 = *v68;
  uint64_t v69 = v68[1];
  *uint64_t v67 = v70;
  v67[1] = v69;
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[20]] = *(void *)&a2[a3[20]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TrustedRequestLogEntry(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25A6BE338);
}

uint64_t sub_25A6BE338(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25A6C73D0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + a3[5];
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v12 = *(void *)(a1 + a3[7] + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
  else
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C438);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a3[11];
    return v14(v16, a2, v15);
  }
}

uint64_t storeEnumTagSinglePayload for TrustedRequestLogEntry(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25A6BE484);
}

uint64_t sub_25A6BE484(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_25A6C73D0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + a4[5];
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[7] + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C438);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a4[11];
    return v14(v16, a2, a2, v15);
  }
  return result;
}

void sub_25A6BE5BC()
{
  sub_25A6C73D0();
  if (v0 <= 0x3F)
  {
    sub_25A6B4E8C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unsigned char *storeEnumTagSinglePayload for TrustedRequestLogEntry.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *uint64_t result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A6BE7A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 16;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrustedRequestLogEntry.CodingKeys()
{
  return &type metadata for TrustedRequestLogEntry.CodingKeys;
}

ValueMetadata *type metadata accessor for TC2TrustedRequestFactoriesMetadata.CodingKeys()
{
  return &type metadata for TC2TrustedRequestFactoriesMetadata.CodingKeys;
}

unsigned char *_s19PrivateCloudCompute34TC2TrustedRequestFactoriesMetadataV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25A6BE888);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TC2TrustedRequestFactoryMetadata.CodingKeys()
{
  return &type metadata for TC2TrustedRequestFactoryMetadata.CodingKeys;
}

uint64_t getEnumTagSinglePayload for TC2TrustedRequestMetadata.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF1) {
    goto LABEL_17;
  }
  if (a2 + 15 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 15) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 15;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x10;
  int v8 = v6 - 16;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TC2TrustedRequestMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 15 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 15) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF0)
  {
    unsigned int v6 = ((a2 - 241) >> 8) + 1;
    *uint64_t result = a2 + 15;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A6BEA1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 15;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TC2TrustedRequestMetadata.CodingKeys()
{
  return &type metadata for TC2TrustedRequestMetadata.CodingKeys;
}

uint64_t getEnumTagSinglePayload for TC2TrustedRequestEndpointMetadata.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TC2TrustedRequestEndpointMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A6BEBB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TC2TrustedRequestEndpointMetadata.CodingKeys()
{
  return &type metadata for TC2TrustedRequestEndpointMetadata.CodingKeys;
}

unint64_t sub_25A6BEBEC()
{
  unint64_t result = qword_26A44C840;
  if (!qword_26A44C840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C840);
  }
  return result;
}

unint64_t sub_25A6BEC44()
{
  unint64_t result = qword_26A44C848;
  if (!qword_26A44C848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C848);
  }
  return result;
}

unint64_t sub_25A6BEC9C()
{
  unint64_t result = qword_26A44C850;
  if (!qword_26A44C850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C850);
  }
  return result;
}

unint64_t sub_25A6BECF4()
{
  unint64_t result = qword_26A44C858;
  if (!qword_26A44C858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C858);
  }
  return result;
}

unint64_t sub_25A6BED4C()
{
  unint64_t result = qword_26A44C860;
  if (!qword_26A44C860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C860);
  }
  return result;
}

unint64_t sub_25A6BEDA4()
{
  unint64_t result = qword_26A44C868;
  if (!qword_26A44C868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C868);
  }
  return result;
}

unint64_t sub_25A6BEDFC()
{
  unint64_t result = qword_26A44C870;
  if (!qword_26A44C870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C870);
  }
  return result;
}

unint64_t sub_25A6BEE54()
{
  unint64_t result = qword_26A44C878;
  if (!qword_26A44C878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C878);
  }
  return result;
}

unint64_t sub_25A6BEEAC()
{
  unint64_t result = qword_26A44C880;
  if (!qword_26A44C880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C880);
  }
  return result;
}

unint64_t sub_25A6BEF04()
{
  unint64_t result = qword_26A44C888;
  if (!qword_26A44C888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C888);
  }
  return result;
}

unint64_t sub_25A6BEF5C()
{
  unint64_t result = qword_26A44C890;
  if (!qword_26A44C890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C890);
  }
  return result;
}

unint64_t sub_25A6BEFB4()
{
  unint64_t result = qword_26A44C898;
  if (!qword_26A44C898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C898);
  }
  return result;
}

unint64_t sub_25A6BF00C()
{
  unint64_t result = qword_26A44C8A0;
  if (!qword_26A44C8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C8A0);
  }
  return result;
}

unint64_t sub_25A6BF064()
{
  unint64_t result = qword_26A44C8A8;
  if (!qword_26A44C8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C8A8);
  }
  return result;
}

unint64_t sub_25A6BF0BC()
{
  unint64_t result = qword_26A44C8B0;
  if (!qword_26A44C8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C8B0);
  }
  return result;
}

uint64_t sub_25A6BF110(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7461745365646F6ELL && a2 == 0xE900000000000065;
  if (v2 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E65644965646F6ELL && a2 == 0xEE00726569666974 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F43707474686FLL && a2 == 0xEC00000074786574 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000025A6D11F0 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6563655261746164 && a2 == 0xEC00000064657669 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x56534F64756F6C63 && a2 == 0xEE006E6F69737265 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000025A6D0450 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000025A6D1210 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x656C626D65736E65 && a2 == 0xEA00000000004449 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x61436D6F72467369 && a2 == 0xEB00000000656863)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_25A6C7A00();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t sub_25A6BF5B0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6552746E65696C63 && a2 == 0xEF44497473657571;
  if (v2 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6552726576726573 && a2 == 0xEF44497473657571 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D6E6F7269766E65 && a2 == 0xEB00000000746E65 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F697461657263 && a2 == 0xEC00000065746144 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000025A6D02A0 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000025A6D02C0 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000025A6D1230 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 7565169 && a2 == 0xE300000000000000 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x64616F6C6B726F77 && a2 == 0xEC000000656D614ELL || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000025A6D02E0 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000025A6D1250 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x65736E6F70736572 && a2 == 0xED00006574617453 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x65736E6F70736572 && a2 == 0xEC00000065646F43 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x7265567365706F72 && a2 == 0xEC0000006E6F6973 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x746E696F70646E65 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else
  {
    char v6 = sub_25A6C7A00();
    swift_bridgeObjectRelease();
    if (v6) {
      return 15;
    }
    else {
      return 16;
    }
  }
}

uint64_t sub_25A6BFCA0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6552746E65696C63 && a2 == 0xEF44497473657571 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6552726576726573 && a2 == 0xEF44497473657571 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D6E6F7269766E65 && a2 == 0xEB00000000746E65 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F697461657263 && a2 == 0xEC00000065746144 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000025A6D02A0 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000025A6D02C0 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000025A6D1230 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 7565169 && a2 == 0xE300000000000000 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x64616F6C6B726F77 && a2 == 0xEC000000656D614ELL || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000025A6D02E0 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000025A6D1250 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x65736E6F70736572 && a2 == 0xED00006574617453 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x65736E6F70736572 && a2 == 0xEC00000065646F43 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x7265567365706F72 && a2 == 0xEC0000006E6F6973 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x746E696F70646E65 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else
  {
    char v6 = sub_25A6C7A00();
    swift_bridgeObjectRelease();
    if (v6) {
      return 16;
    }
    else {
      return 17;
    }
  }
}

unint64_t sub_25A6C03E4()
{
  unint64_t result = qword_26A44C8B8;
  if (!qword_26A44C8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C8B8);
  }
  return result;
}

uint64_t sub_25A6C0440()
{
  uint64_t result = 0x676E6974696177;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7964616572;
      break;
    case 2:
      uint64_t result = 0x64656873696E6966;
      break;
    case 3:
      uint64_t result = 0x64656C696166;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25A6C04C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25A6C46E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25A6C04F0(uint64_t a1)
{
  unint64_t v2 = sub_25A6C0D54();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A6C052C(uint64_t a1)
{
  unint64_t v2 = sub_25A6C0D54();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25A6C0568(uint64_t a1)
{
  unint64_t v2 = sub_25A6C0E0C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A6C05A4(uint64_t a1)
{
  unint64_t v2 = sub_25A6C0E0C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25A6C05E0(uint64_t a1)
{
  unint64_t v2 = sub_25A6C0EBC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A6C061C(uint64_t a1)
{
  unint64_t v2 = sub_25A6C0EBC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25A6C0658(uint64_t a1)
{
  unint64_t v2 = sub_25A6C0F10();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A6C0694(uint64_t a1)
{
  unint64_t v2 = sub_25A6C0F10();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25A6C06D0(uint64_t a1)
{
  unint64_t v2 = sub_25A6C0F64();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25A6C070C(uint64_t a1)
{
  unint64_t v2 = sub_25A6C0F64();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TC2RequestState.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C8C8);
  uint64_t v31 = *(void *)(v2 - 8);
  uint64_t v32 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v30 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for TrustedCloudComputeError(0);
  MEMORY[0x270FA5388](v28);
  uint64_t v29 = (uint64_t)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C8D0);
  uint64_t v36 = *(void *)(v5 - 8);
  uint64_t v37 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v35 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C8D8);
  uint64_t v33 = *(void *)(v7 - 8);
  uint64_t v34 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C8E0);
  uint64_t v26 = *(void *)(v10 - 8);
  uint64_t v27 = v10;
  MEMORY[0x270FA5388](v10);
  unint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TC2RequestState();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C8E8);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A6C0D54();
  sub_25A6C7B00();
  sub_25A6C0DA8(v38, (uint64_t)v15);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C8F8);
  switch((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v15, 3, v20))
  {
    case 1u:
      char v39 = 0;
      sub_25A6C0F64();
      sub_25A6C7910();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v12, v27);
      goto LABEL_6;
    case 2u:
      char v40 = 1;
      sub_25A6C0F10();
      sub_25A6C7910();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v34);
      goto LABEL_6;
    case 3u:
      char v41 = 2;
      sub_25A6C0EBC();
      uint64_t v25 = v35;
      sub_25A6C7910();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v25, v37);
LABEL_6:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      break;
    default:
      uint64_t v21 = v29;
      sub_25A6C18CC((uint64_t)v15, v29, type metadata accessor for TrustedCloudComputeError);
      char v42 = 3;
      sub_25A6C0E0C();
      uint64_t v22 = v30;
      sub_25A6C7910();
      sub_25A6C1888(&qword_26A44C620);
      uint64_t v23 = v32;
      sub_25A6C79B0();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v22, v23);
      sub_25A6C0E60(v21);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      break;
  }
  return result;
}

uint64_t type metadata accessor for TC2RequestState()
{
  uint64_t result = qword_26A44C948;
  if (!qword_26A44C948) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_25A6C0D54()
{
  unint64_t result = qword_26A44C8F0;
  if (!qword_26A44C8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C8F0);
  }
  return result;
}

uint64_t sub_25A6C0DA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TC2RequestState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_25A6C0E0C()
{
  unint64_t result = qword_26A44C900;
  if (!qword_26A44C900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C900);
  }
  return result;
}

uint64_t sub_25A6C0E60(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TrustedCloudComputeError(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_25A6C0EBC()
{
  unint64_t result = qword_26A44C908;
  if (!qword_26A44C908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C908);
  }
  return result;
}

unint64_t sub_25A6C0F10()
{
  unint64_t result = qword_26A44C910;
  if (!qword_26A44C910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C910);
  }
  return result;
}

unint64_t sub_25A6C0F64()
{
  unint64_t result = qword_26A44C918;
  if (!qword_26A44C918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C918);
  }
  return result;
}

uint64_t TC2RequestState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v63 = a2;
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C920);
  uint64_t v57 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v60 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C928);
  uint64_t v55 = *(void *)(v4 - 8);
  uint64_t v56 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v59 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C930);
  uint64_t v53 = *(void *)(v6 - 8);
  uint64_t v54 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v58 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C938);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v51 = v8;
  uint64_t v52 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C940);
  uint64_t v61 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for TC2RequestState();
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v48 - v19;
  uint64_t v21 = a1[3];
  uint64_t v64 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_25A6C0D54();
  uint64_t v22 = v65;
  sub_25A6C7AF0();
  if (v22) {
    goto LABEL_7;
  }
  uint64_t v48 = v18;
  uint64_t v49 = v11;
  uint64_t v50 = v20;
  uint64_t v65 = 0;
  uint64_t v23 = v61;
  uint64_t v24 = v62;
  uint64_t v25 = v63;
  uint64_t v26 = sub_25A6C7900();
  if (*(void *)(v26 + 16) != 1)
  {
    uint64_t v30 = v12;
    uint64_t v31 = sub_25A6C7780();
    swift_allocError();
    uint64_t v33 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A44B978);
    *uint64_t v33 = v15;
    sub_25A6C7840();
    sub_25A6C7770();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v31 - 8) + 104))(v33, *MEMORY[0x263F8DCB0], v31);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v30);
LABEL_7:
    uint64_t v29 = (uint64_t)v64;
    return __swift_destroy_boxed_opaque_existential_1(v29);
  }
  switch(*(unsigned char *)(v26 + 32))
  {
    case 1:
      char v67 = 1;
      sub_25A6C0F10();
      uint64_t v35 = v58;
      uint64_t v36 = v65;
      sub_25A6C7830();
      if (v36) {
        goto LABEL_5;
      }
      (*(void (**)(char *, uint64_t))(v53 + 8))(v35, v54);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v12);
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C8F8);
      uint64_t v38 = (uint64_t)v50;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v50, 2, 3, v37);
      goto LABEL_13;
    case 2:
      char v68 = 2;
      sub_25A6C0EBC();
      char v39 = v59;
      uint64_t v40 = v65;
      sub_25A6C7830();
      if (v40) {
        goto LABEL_5;
      }
      (*(void (**)(char *, uint64_t))(v55 + 8))(v39, v56);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v12);
      uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C8F8);
      uint64_t v38 = (uint64_t)v50;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v50, 3, 3, v41);
LABEL_13:
      uint64_t v29 = (uint64_t)v64;
      goto LABEL_18;
    case 3:
      char v69 = 3;
      sub_25A6C0E0C();
      char v42 = v60;
      uint64_t v43 = v65;
      sub_25A6C7830();
      if (v43) {
        goto LABEL_5;
      }
      type metadata accessor for TrustedCloudComputeError(0);
      sub_25A6C1888(&qword_26A44C2C8);
      sub_25A6C78E0();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v42, v24);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v12);
      uint64_t v29 = (uint64_t)v64;
      uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C8F8);
      uint64_t v46 = (uint64_t)v48;
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v48, 0, 3, v45);
      uint64_t v47 = v46;
      uint64_t v38 = (uint64_t)v50;
      sub_25A6C18CC(v47, (uint64_t)v50, (uint64_t (*)(void))type metadata accessor for TC2RequestState);
      goto LABEL_18;
    default:
      char v66 = 0;
      sub_25A6C0F64();
      uint64_t v27 = v49;
      uint64_t v28 = v65;
      sub_25A6C7830();
      if (v28)
      {
LABEL_5:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v12);
        uint64_t v29 = (uint64_t)v64;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v52 + 8))(v27, v51);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v12);
        uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C8F8);
        uint64_t v38 = (uint64_t)v50;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v50, 1, 3, v44);
        uint64_t v29 = (uint64_t)v64;
LABEL_18:
        sub_25A6C18CC(v38, v25, (uint64_t (*)(void))type metadata accessor for TC2RequestState);
      }
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v29);
}

uint64_t sub_25A6C1888(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for TrustedCloudComputeError(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25A6C18CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25A6C1934@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TC2RequestState.init(from:)(a1, a2);
}

uint64_t sub_25A6C194C(void *a1)
{
  return TC2RequestState.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for TC2RequestState(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C8F8);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 3, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = type metadata accessor for TrustedCloudComputeError(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v11 = a2[1];
          *a1 = *a2;
          a1[1] = v11;
          uint64_t v12 = a2[3];
          a1[2] = a2[2];
          a1[3] = v12;
          uint64_t v13 = a2[5];
          a1[4] = a2[4];
          a1[5] = v13;
          a1[6] = a2[6];
          *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 7);
          uint64_t v14 = *(int *)(type metadata accessor for TrustedCloudComputeError.RateLimitInfo(0) + 40);
          uint64_t v47 = (char *)a2 + v14;
          uint64_t v48 = (char *)a1 + v14;
          uint64_t v15 = sub_25A6C73A0();
          uint64_t v46 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v46(v48, v47, v15);
          goto LABEL_15;
        case 1u:
          *(unsigned char *)a1 = *(unsigned char *)a2;
          uint64_t v16 = *(int *)(type metadata accessor for TrustedCloudComputeError.AvailabilityInfo(0) + 20);
          uint64_t v17 = (char *)a1 + v16;
          uint64_t v18 = (char *)a2 + v16;
          uint64_t v19 = sub_25A6C73A0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
          goto LABEL_15;
        case 2u:
          *(unsigned char *)a1 = *(unsigned char *)a2;
          uint64_t v20 = *(int *)(type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo(0) + 20);
          uint64_t v21 = (char *)a1 + v20;
          uint64_t v22 = (char *)a2 + v20;
          uint64_t v23 = sub_25A6C73A0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
          goto LABEL_15;
        case 5u:
          *(_WORD *)a1 = *(_WORD *)a2;
          a1[1] = a2[1];
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          uint64_t v24 = a2[4];
          a1[3] = a2[3];
          a1[4] = v24;
          uint64_t v25 = a2[6];
          a1[5] = a2[5];
          a1[6] = v25;
          a1[7] = a2[7];
          *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
          uint64_t v26 = a2[10];
          a1[9] = a2[9];
          a1[10] = v26;
          uint64_t v27 = a2[12];
          a1[11] = a2[11];
          a1[12] = v27;
          uint64_t v28 = a2[14];
          a1[13] = a2[13];
          a1[14] = v28;
          uint64_t v29 = a2[16];
          a1[15] = a2[15];
          a1[16] = v29;
          uint64_t v30 = a2[18];
          a1[17] = a2[17];
          a1[18] = v30;
          uint64_t v31 = *(int *)(type metadata accessor for TC2RopesResponseMetadata() + 60);
          uint64_t v44 = (char *)a2 + v31;
          uint64_t v45 = (char *)a1 + v31;
          uint64_t v32 = sub_25A6C73A0();
          uint64_t v33 = *(void *)(v32 - 8);
          uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v35 = v33;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v34(v45, v44, v32);
          uint64_t v36 = type metadata accessor for TrustedCloudComputeError.ServerErrorInfo(0);
          *((unsigned char *)a1 + *(int *)(v36 + 20)) = *((unsigned char *)a2 + *(int *)(v36 + 20));
          uint64_t v37 = *(int *)(v36 + 24);
          uint64_t v38 = (char *)a1 + v37;
          char v39 = (char *)a2 + v37;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v39, 1, v32))
          {
            uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BAC8);
            memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
          }
          else
          {
            v34(v38, v39, v32);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v38, 0, 1, v32);
          }
          goto LABEL_15;
        case 6u:
          uint64_t v41 = a2[1];
          *a1 = *a2;
          a1[1] = v41;
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          swift_bridgeObjectRetain();
          goto LABEL_15;
        case 7u:
          uint64_t v42 = a2[1];
          *a1 = *a2;
          a1[1] = v42;
          *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
          a1[4] = a2[4];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_15:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
          break;
      }
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 3, v7);
    }
  }
  return a1;
}

uint64_t destroy for TC2RequestState(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C8F8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 3, v2);
  if (!result)
  {
    type metadata accessor for TrustedCloudComputeError(0);
    uint64_t result = swift_getEnumCaseMultiPayload();
    switch((int)result)
    {
      case 0:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v4 = *(int *)(type metadata accessor for TrustedCloudComputeError.RateLimitInfo(0) + 40);
        goto LABEL_8;
      case 1:
        uint64_t v5 = type metadata accessor for TrustedCloudComputeError.AvailabilityInfo(0);
        goto LABEL_7;
      case 2:
        uint64_t v5 = type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo(0);
LABEL_7:
        uint64_t v4 = *(int *)(v5 + 20);
LABEL_8:
        uint64_t v6 = a1 + v4;
        uint64_t v7 = sub_25A6C73A0();
        uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
        return v8(v6, v7);
      case 5:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v9 = a1 + *(int *)(type metadata accessor for TC2RopesResponseMetadata() + 60);
        uint64_t v10 = sub_25A6C73A0();
        uint64_t v11 = *(void *)(v10 - 8);
        uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
        v13(v9, v10);
        uint64_t v12 = a1 + *(int *)(type metadata accessor for TrustedCloudComputeError.ServerErrorInfo(0) + 24);
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v12, 1, v10);
        if (!result)
        {
          return ((uint64_t (*)(uint64_t, uint64_t))v13)(v12, v10);
        }
        return result;
      case 6:
        goto LABEL_16;
      case 7:
        swift_bridgeObjectRelease();
LABEL_16:
        uint64_t result = swift_bridgeObjectRelease();
        break;
      default:
        return result;
    }
  }
  return result;
}

void *initializeWithCopy for TC2RequestState(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C8F8);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for TrustedCloudComputeError(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v9 = a2[1];
        *a1 = *a2;
        a1[1] = v9;
        uint64_t v10 = a2[3];
        a1[2] = a2[2];
        a1[3] = v10;
        uint64_t v11 = a2[5];
        a1[4] = a2[4];
        a1[5] = v11;
        a1[6] = a2[6];
        *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 7);
        uint64_t v12 = *(int *)(type metadata accessor for TrustedCloudComputeError.RateLimitInfo(0) + 40);
        uint64_t v45 = (char *)a2 + v12;
        uint64_t v46 = (char *)a1 + v12;
        uint64_t v13 = sub_25A6C73A0();
        uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v44(v46, v45, v13);
        goto LABEL_13;
      case 1u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v14 = *(int *)(type metadata accessor for TrustedCloudComputeError.AvailabilityInfo(0) + 20);
        uint64_t v15 = (char *)a1 + v14;
        uint64_t v16 = (char *)a2 + v14;
        uint64_t v17 = sub_25A6C73A0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
        goto LABEL_13;
      case 2u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v18 = *(int *)(type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo(0) + 20);
        uint64_t v19 = (char *)a1 + v18;
        uint64_t v20 = (char *)a2 + v18;
        uint64_t v21 = sub_25A6C73A0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
        goto LABEL_13;
      case 5u:
        *(_WORD *)a1 = *(_WORD *)a2;
        a1[1] = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v22 = a2[4];
        a1[3] = a2[3];
        a1[4] = v22;
        uint64_t v23 = a2[6];
        a1[5] = a2[5];
        a1[6] = v23;
        a1[7] = a2[7];
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
        uint64_t v24 = a2[10];
        a1[9] = a2[9];
        a1[10] = v24;
        uint64_t v25 = a2[12];
        a1[11] = a2[11];
        a1[12] = v25;
        uint64_t v26 = a2[14];
        a1[13] = a2[13];
        a1[14] = v26;
        uint64_t v27 = a2[16];
        a1[15] = a2[15];
        a1[16] = v27;
        uint64_t v28 = a2[18];
        a1[17] = a2[17];
        a1[18] = v28;
        uint64_t v29 = *(int *)(type metadata accessor for TC2RopesResponseMetadata() + 60);
        uint64_t v42 = (char *)a2 + v29;
        uint64_t v43 = (char *)a1 + v29;
        uint64_t v30 = sub_25A6C73A0();
        uint64_t v31 = *(void *)(v30 - 8);
        uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v33 = v31;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v32(v43, v42, v30);
        uint64_t v34 = type metadata accessor for TrustedCloudComputeError.ServerErrorInfo(0);
        *((unsigned char *)a1 + *(int *)(v34 + 20)) = *((unsigned char *)a2 + *(int *)(v34 + 20));
        uint64_t v35 = *(int *)(v34 + 24);
        uint64_t v36 = (char *)a1 + v35;
        uint64_t v37 = (char *)a2 + v35;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v37, 1, v30))
        {
          uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BAC8);
          memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
        }
        else
        {
          v32(v36, v37, v30);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v36, 0, 1, v30);
        }
        goto LABEL_13;
      case 6u:
        uint64_t v39 = a2[1];
        *a1 = *a2;
        a1[1] = v39;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 7u:
        uint64_t v40 = a2[1];
        *a1 = *a2;
        a1[1] = v40;
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        a1[4] = a2[4];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_13:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
        break;
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

uint64_t assignWithCopy for TC2RequestState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C8F8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 3, v6);
  int v10 = v8(a2, 3, v6);
  if (v9)
  {
    if (!v10)
    {
      uint64_t v11 = type metadata accessor for TrustedCloudComputeError(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          *(void *)(a1 + 40) = *(void *)(a2 + 40);
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          *(void *)(a1 + 56) = *(void *)(a2 + 56);
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
          uint64_t v12 = *(int *)(type metadata accessor for TrustedCloudComputeError.RateLimitInfo(0) + 40);
          uint64_t v66 = a2 + v12;
          uint64_t v67 = a1 + v12;
          uint64_t v13 = sub_25A6C73A0();
          uint64_t v65 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v65(v67, v66, v13);
          goto LABEL_27;
        case 1u:
          *(unsigned char *)a1 = *(unsigned char *)a2;
          uint64_t v20 = *(int *)(type metadata accessor for TrustedCloudComputeError.AvailabilityInfo(0) + 20);
          uint64_t v21 = a1 + v20;
          uint64_t v22 = a2 + v20;
          uint64_t v23 = sub_25A6C73A0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
          goto LABEL_27;
        case 2u:
          *(unsigned char *)a1 = *(unsigned char *)a2;
          uint64_t v24 = *(int *)(type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo(0) + 20);
          uint64_t v25 = a1 + v24;
          uint64_t v26 = a2 + v24;
          uint64_t v27 = sub_25A6C73A0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
          goto LABEL_27;
        case 5u:
          *(unsigned char *)a1 = *(unsigned char *)a2;
          *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
          uint64_t v28 = *(void *)(a2 + 8);
          *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
          *(void *)(a1 + 8) = v28;
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          *(void *)(a1 + 40) = *(void *)(a2 + 40);
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          uint64_t v29 = *(void *)(a2 + 56);
          *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
          *(void *)(a1 + 56) = v29;
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          *(void *)(a1 + 80) = *(void *)(a2 + 80);
          *(void *)(a1 + 88) = *(void *)(a2 + 88);
          *(void *)(a1 + 96) = *(void *)(a2 + 96);
          *(void *)(a1 + 104) = *(void *)(a2 + 104);
          *(void *)(a1 + 112) = *(void *)(a2 + 112);
          *(void *)(a1 + 120) = *(void *)(a2 + 120);
          *(void *)(a1 + 128) = *(void *)(a2 + 128);
          *(void *)(a1 + 136) = *(void *)(a2 + 136);
          *(void *)(a1 + 144) = *(void *)(a2 + 144);
          uint64_t v30 = *(int *)(type metadata accessor for TC2RopesResponseMetadata() + 60);
          uint64_t v61 = a2 + v30;
          uint64_t v62 = a1 + v30;
          uint64_t v31 = sub_25A6C73A0();
          uint64_t v32 = *(void *)(v31 - 8);
          uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v34 = v32;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v33(v62, v61, v31);
          uint64_t v35 = type metadata accessor for TrustedCloudComputeError.ServerErrorInfo(0);
          *(unsigned char *)(a1 + *(int *)(v35 + 20)) = *(unsigned char *)(a2 + *(int *)(v35 + 20));
          uint64_t v36 = *(int *)(v35 + 24);
          uint64_t v37 = (void *)(a1 + v36);
          uint64_t v38 = (const void *)(a2 + v36);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v34 + 48))(v38, 1, v31))
          {
            uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BAC8);
            memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
          }
          else
          {
            v33((uint64_t)v37, (uint64_t)v38, v31);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(v37, 0, 1, v31);
          }
          goto LABEL_27;
        case 6u:
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
          swift_bridgeObjectRetain();
          goto LABEL_27;
        case 7u:
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_27:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v11 - 8) + 64));
          break;
      }
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
      return a1;
    }
    goto LABEL_7;
  }
  if (v10)
  {
    sub_25A6C31A8(a1);
LABEL_7:
    size_t v14 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_8:
    memcpy((void *)a1, (const void *)a2, v14);
    return a1;
  }
  if (a1 != a2)
  {
    sub_25A6C0E60(a1);
    uint64_t v15 = type metadata accessor for TrustedCloudComputeError(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        uint64_t v16 = *(int *)(type metadata accessor for TrustedCloudComputeError.RateLimitInfo(0) + 40);
        uint64_t v17 = a1 + v16;
        uint64_t v68 = a2 + v16;
        uint64_t v18 = sub_25A6C73A0();
        uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v19(v17, v68, v18);
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v40 = *(int *)(type metadata accessor for TrustedCloudComputeError.AvailabilityInfo(0) + 20);
        uint64_t v41 = a1 + v40;
        uint64_t v42 = a2 + v40;
        uint64_t v43 = sub_25A6C73A0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v44 = *(int *)(type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo(0) + 20);
        uint64_t v45 = a1 + v44;
        uint64_t v46 = a2 + v44;
        uint64_t v47 = sub_25A6C73A0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
        uint64_t v48 = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        *(void *)(a1 + 8) = v48;
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        uint64_t v49 = *(void *)(a2 + 56);
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        *(void *)(a1 + 56) = v49;
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
        *(void *)(a1 + 128) = *(void *)(a2 + 128);
        *(void *)(a1 + 136) = *(void *)(a2 + 136);
        *(void *)(a1 + 144) = *(void *)(a2 + 144);
        uint64_t v50 = *(int *)(type metadata accessor for TC2RopesResponseMetadata() + 60);
        uint64_t v63 = a2 + v50;
        uint64_t v64 = a1 + v50;
        uint64_t v51 = sub_25A6C73A0();
        uint64_t v52 = *(void *)(v51 - 8);
        uint64_t v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v54 = v52;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v53(v64, v63, v51);
        uint64_t v55 = type metadata accessor for TrustedCloudComputeError.ServerErrorInfo(0);
        *(unsigned char *)(a1 + *(int *)(v55 + 20)) = *(unsigned char *)(a2 + *(int *)(v55 + 20));
        uint64_t v56 = *(int *)(v55 + 24);
        uint64_t v57 = (void *)(a1 + v56);
        uint64_t v58 = (const void *)(a2 + v56);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v54 + 48))(v58, 1, v51))
        {
          uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BAC8);
          memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
        }
        else
        {
          v53((uint64_t)v57, (uint64_t)v58, v51);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v54 + 56))(v57, 0, 1, v51);
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        size_t v14 = *(void *)(*(void *)(v15 - 8) + 64);
        goto LABEL_8;
    }
  }
  return a1;
}

uint64_t sub_25A6C31A8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C8F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *initializeWithTake for TC2RequestState(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C8F8);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for TrustedCloudComputeError(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        long long v9 = a2[1];
        *a1 = *a2;
        a1[1] = v9;
        long long v10 = a2[3];
        a1[2] = a2[2];
        a1[3] = v10;
        *((void *)a1 + 8) = *((void *)a2 + 8);
        uint64_t v11 = *(int *)(type metadata accessor for TrustedCloudComputeError.RateLimitInfo(0) + 40);
        uint64_t v12 = (char *)a1 + v11;
        uint64_t v13 = (char *)a2 + v11;
        uint64_t v14 = sub_25A6C73A0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
        goto LABEL_11;
      case 1u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v15 = *(int *)(type metadata accessor for TrustedCloudComputeError.AvailabilityInfo(0) + 20);
        uint64_t v16 = (char *)a1 + v15;
        uint64_t v17 = (char *)a2 + v15;
        uint64_t v18 = sub_25A6C73A0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
        goto LABEL_11;
      case 2u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v19 = *(int *)(type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo(0) + 20);
        uint64_t v20 = (char *)a1 + v19;
        uint64_t v21 = (char *)a2 + v19;
        uint64_t v22 = sub_25A6C73A0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
        goto LABEL_11;
      case 5u:
        *(_WORD *)a1 = *(_WORD *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        *((void *)a1 + 7) = *((void *)a2 + 7);
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
        *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
        *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
        *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
        *(_OWORD *)((char *)a1 + 120) = *(_OWORD *)((char *)a2 + 120);
        *(_OWORD *)((char *)a1 + 136) = *(_OWORD *)((char *)a2 + 136);
        uint64_t v23 = *(int *)(type metadata accessor for TC2RopesResponseMetadata() + 60);
        uint64_t v24 = (char *)a1 + v23;
        uint64_t v25 = (char *)a2 + v23;
        uint64_t v26 = sub_25A6C73A0();
        uint64_t v27 = *(void *)(v26 - 8);
        uint64_t v28 = v25;
        uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
        v29(v24, v28, v26);
        uint64_t v30 = type metadata accessor for TrustedCloudComputeError.ServerErrorInfo(0);
        *((unsigned char *)a1 + *(int *)(v30 + 20)) = *((unsigned char *)a2 + *(int *)(v30 + 20));
        uint64_t v31 = *(int *)(v30 + 24);
        uint64_t v32 = (char *)a1 + v31;
        uint64_t v33 = (char *)a2 + v31;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v33, 1, v26))
        {
          uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BAC8);
          memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
          v29(v32, v33, v26);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v32, 0, 1, v26);
        }
LABEL_11:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
        break;
    }
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

uint64_t assignWithTake for TC2RequestState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C8F8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 3, v6);
  int v10 = v8(a2, 3, v6);
  if (v9)
  {
    if (!v10)
    {
      uint64_t v11 = type metadata accessor for TrustedCloudComputeError(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          long long v12 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v12;
          long long v13 = *(_OWORD *)(a2 + 48);
          *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 48) = v13;
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
          uint64_t v14 = *(int *)(type metadata accessor for TrustedCloudComputeError.RateLimitInfo(0) + 40);
          uint64_t v15 = a1 + v14;
          uint64_t v16 = a2 + v14;
          uint64_t v17 = sub_25A6C73A0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
          goto LABEL_23;
        case 1u:
          *(unsigned char *)a1 = *(unsigned char *)a2;
          uint64_t v26 = *(int *)(type metadata accessor for TrustedCloudComputeError.AvailabilityInfo(0) + 20);
          uint64_t v27 = a1 + v26;
          uint64_t v28 = a2 + v26;
          uint64_t v29 = sub_25A6C73A0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
          goto LABEL_23;
        case 2u:
          *(unsigned char *)a1 = *(unsigned char *)a2;
          uint64_t v30 = *(int *)(type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo(0) + 20);
          uint64_t v31 = a1 + v30;
          uint64_t v32 = a2 + v30;
          uint64_t v33 = sub_25A6C73A0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
          goto LABEL_23;
        case 5u:
          *(_WORD *)a1 = *(_WORD *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
          *(void *)(a1 + 56) = *(void *)(a2 + 56);
          *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
          *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
          *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
          *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
          *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
          *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
          uint64_t v34 = *(int *)(type metadata accessor for TC2RopesResponseMetadata() + 60);
          uint64_t v35 = a1 + v34;
          uint64_t v36 = a2 + v34;
          uint64_t v37 = sub_25A6C73A0();
          uint64_t v38 = *(void *)(v37 - 8);
          uint64_t v39 = v36;
          uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32);
          v40(v35, v39, v37);
          uint64_t v41 = type metadata accessor for TrustedCloudComputeError.ServerErrorInfo(0);
          *(unsigned char *)(a1 + *(int *)(v41 + 20)) = *(unsigned char *)(a2 + *(int *)(v41 + 20));
          uint64_t v42 = *(int *)(v41 + 24);
          uint64_t v43 = (void *)(a1 + v42);
          uint64_t v44 = (const void *)(a2 + v42);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v38 + 48))(v44, 1, v37))
          {
            uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BAC8);
            memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
          }
          else
          {
            v40((uint64_t)v43, (uint64_t)v44, v37);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v38 + 56))(v43, 0, 1, v37);
          }
LABEL_23:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v11 - 8) + 64));
          break;
      }
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
      return a1;
    }
    goto LABEL_7;
  }
  if (v10)
  {
    sub_25A6C31A8(a1);
LABEL_7:
    size_t v18 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_8:
    memcpy((void *)a1, (const void *)a2, v18);
    return a1;
  }
  if (a1 != a2)
  {
    sub_25A6C0E60(a1);
    uint64_t v19 = type metadata accessor for TrustedCloudComputeError(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        long long v20 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v20;
        long long v21 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 48) = v21;
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        uint64_t v22 = *(int *)(type metadata accessor for TrustedCloudComputeError.RateLimitInfo(0) + 40);
        uint64_t v23 = a1 + v22;
        uint64_t v24 = a2 + v22;
        uint64_t v25 = sub_25A6C73A0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v46 = *(int *)(type metadata accessor for TrustedCloudComputeError.AvailabilityInfo(0) + 20);
        uint64_t v47 = a1 + v46;
        uint64_t v48 = a2 + v46;
        uint64_t v49 = sub_25A6C73A0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v50 = *(int *)(type metadata accessor for TrustedCloudComputeError.TimeoutErrorInfo(0) + 20);
        uint64_t v51 = a1 + v50;
        uint64_t v52 = a2 + v50;
        uint64_t v53 = sub_25A6C73A0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 32))(v51, v52, v53);
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        *(_WORD *)a1 = *(_WORD *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
        *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
        *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
        uint64_t v54 = *(int *)(type metadata accessor for TC2RopesResponseMetadata() + 60);
        uint64_t v55 = a1 + v54;
        uint64_t v56 = a2 + v54;
        uint64_t v57 = sub_25A6C73A0();
        uint64_t v58 = *(void *)(v57 - 8);
        uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 32);
        v59(v55, v56, v57);
        uint64_t v60 = type metadata accessor for TrustedCloudComputeError.ServerErrorInfo(0);
        *(unsigned char *)(a1 + *(int *)(v60 + 20)) = *(unsigned char *)(a2 + *(int *)(v60 + 20));
        uint64_t v61 = *(int *)(v60 + 24);
        uint64_t v62 = (void *)(a1 + v61);
        uint64_t v63 = (const void *)(a2 + v61);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v58 + 48))(v63, 1, v57))
        {
          uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44BAC8);
          memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
        }
        else
        {
          v59((uint64_t)v62, (uint64_t)v63, v57);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v58 + 56))(v62, 0, 1, v57);
        }
        swift_storeEnumTagMultiPayload();
        break;
      default:
        size_t v18 = *(void *)(*(void *)(v19 - 8) + 64);
        goto LABEL_8;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for TC2RequestState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25A6C3E5C);
}

uint64_t sub_25A6C3E5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C8F8);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 4) {
    return v5 - 3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TC2RequestState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25A6C3EE0);
}

uint64_t sub_25A6C3EE0(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 3);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C8F8);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_25A6C3F68(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C8F8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 3, v2);
}

uint64_t sub_25A6C3FD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A44C8F8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 3, v4);
}

uint64_t sub_25A6C4048()
{
  uint64_t result = type metadata accessor for TrustedCloudComputeError(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TC2RequestState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A6C418CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TC2RequestState.CodingKeys()
{
  return &type metadata for TC2RequestState.CodingKeys;
}

ValueMetadata *type metadata accessor for TC2RequestState.WaitingCodingKeys()
{
  return &type metadata for TC2RequestState.WaitingCodingKeys;
}

ValueMetadata *type metadata accessor for TC2RequestState.ReadyCodingKeys()
{
  return &type metadata for TC2RequestState.ReadyCodingKeys;
}

ValueMetadata *type metadata accessor for TC2RequestState.FinishedCodingKeys()
{
  return &type metadata for TC2RequestState.FinishedCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for TC2RequestState.FailedCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25A6C4290);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TC2RequestState.FailedCodingKeys()
{
  return &type metadata for TC2RequestState.FailedCodingKeys;
}

unint64_t sub_25A6C42CC()
{
  unint64_t result = qword_26A44C958;
  if (!qword_26A44C958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C958);
  }
  return result;
}

unint64_t sub_25A6C4324()
{
  unint64_t result = qword_26A44C960;
  if (!qword_26A44C960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C960);
  }
  return result;
}

unint64_t sub_25A6C437C()
{
  unint64_t result = qword_26A44C968;
  if (!qword_26A44C968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C968);
  }
  return result;
}

unint64_t sub_25A6C43D4()
{
  unint64_t result = qword_26A44C970;
  if (!qword_26A44C970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C970);
  }
  return result;
}

unint64_t sub_25A6C442C()
{
  unint64_t result = qword_26A44C978;
  if (!qword_26A44C978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C978);
  }
  return result;
}

unint64_t sub_25A6C4484()
{
  unint64_t result = qword_26A44C980;
  if (!qword_26A44C980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C980);
  }
  return result;
}

unint64_t sub_25A6C44DC()
{
  unint64_t result = qword_26A44C988;
  if (!qword_26A44C988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C988);
  }
  return result;
}

unint64_t sub_25A6C4534()
{
  unint64_t result = qword_26A44C990;
  if (!qword_26A44C990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C990);
  }
  return result;
}

unint64_t sub_25A6C458C()
{
  unint64_t result = qword_26A44C998;
  if (!qword_26A44C998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C998);
  }
  return result;
}

unint64_t sub_25A6C45E4()
{
  unint64_t result = qword_26A44C9A0;
  if (!qword_26A44C9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C9A0);
  }
  return result;
}

unint64_t sub_25A6C463C()
{
  unint64_t result = qword_26A44C9A8;
  if (!qword_26A44C9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C9A8);
  }
  return result;
}

unint64_t sub_25A6C4694()
{
  unint64_t result = qword_26A44C9B0;
  if (!qword_26A44C9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C9B0);
  }
  return result;
}

uint64_t sub_25A6C46E8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x676E6974696177 && a2 == 0xE700000000000000;
  if (v2 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7964616572 && a2 == 0xE500000000000000 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64656873696E6966 && a2 == 0xE800000000000000 || (sub_25A6C7A00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x64656C696166 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_25A6C7A00();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_25A6C4894(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEA00000000006E6FLL;
  uint64_t v3 = 0x69746375646F7270;
  uint64_t v4 = a1;
  uint64_t v5 = 0x69746375646F7270;
  unint64_t v6 = 0xEA00000000006E6FLL;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v5 = 0x7972726163;
      break;
    case 2:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x676E6967617473;
      break;
    case 3:
      unint64_t v6 = 0xE200000000000000;
      uint64_t v5 = 24945;
      break;
    case 4:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v5 = 1718773104;
      break;
    case 5:
      unint64_t v6 = 0xE300000000000000;
      uint64_t v5 = 7759204;
      break;
    case 6:
      uint64_t v5 = 0x6172656D65687065;
      unint64_t v6 = 0xE90000000000006CLL;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      if (v5 == 0x7972726163) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v2 = 0xE700000000000000;
      if (v5 != 0x676E6967617473) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v2 = 0xE200000000000000;
      if (v5 != 24945) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      unint64_t v2 = 0xE400000000000000;
      if (v5 != 1718773104) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      unint64_t v2 = 0xE300000000000000;
      uint64_t v3 = 7759204;
      goto LABEL_18;
    case 6:
      unint64_t v2 = 0xE90000000000006CLL;
      if (v5 != 0x6172656D65687065) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v3) {
        goto LABEL_22;
      }
LABEL_19:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = sub_25A6C7A00();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_25A6C4AB0(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6863746566657270;
  }
  else {
    uint64_t v3 = 0x5264657473757274;
  }
  if (v2) {
    unint64_t v4 = 0xEE00747365757165;
  }
  else {
    unint64_t v4 = 0xEF74736575716552;
  }
  if (a2) {
    uint64_t v5 = 0x6863746566657270;
  }
  else {
    uint64_t v5 = 0x5264657473757274;
  }
  if (a2) {
    unint64_t v6 = 0xEF74736575716552;
  }
  else {
    unint64_t v6 = 0xEE00747365757165;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_25A6C7A00();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_25A6C4B70(uint64_t a1, uint64_t a2)
{
  return sub_25A6C4B88(a1, a2, (uint64_t (*)(void))TC2LogCategory.rawValue.getter);
}

uint64_t sub_25A6C4B88(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4 = a3();
  uint64_t v6 = v5;
  if (v4 == a3() && v6 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_25A6C7A00();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

unint64_t TC2ClientConfigurationKey.domain.getter()
{
  if (*v0) {
    return 0xD000000000000024;
  }
  else {
    return 0xD00000000000001DLL;
  }
}

PrivateCloudCompute::TC2ClientConfigurationKey_optional __swiftcall TC2ClientConfigurationKey.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  uint64_t v3 = sub_25A6C7A20();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 12;
  switch(v3)
  {
    case 0:
      goto LABEL_14;
    case 1:
      char v5 = 1;
      goto LABEL_14;
    case 2:
      char v5 = 2;
      goto LABEL_14;
    case 3:
      char v5 = 3;
      goto LABEL_14;
    case 4:
      char v5 = 4;
      goto LABEL_14;
    case 5:
      char v5 = 5;
      goto LABEL_14;
    case 6:
      char v5 = 6;
      goto LABEL_14;
    case 7:
      char v5 = 7;
      goto LABEL_14;
    case 8:
      char v5 = 8;
      goto LABEL_14;
    case 9:
      char v5 = 9;
      goto LABEL_14;
    case 10:
      char v5 = 10;
      goto LABEL_14;
    case 11:
      char v5 = 11;
LABEL_14:
      char v6 = v5;
      break;
    case 12:
      break;
    case 13:
      char v6 = 13;
      break;
    case 14:
      char v6 = 14;
      break;
    case 15:
      char v6 = 15;
      break;
    case 16:
      char v6 = 16;
      break;
    case 17:
      char v6 = 17;
      break;
    case 18:
      char v6 = 18;
      break;
    case 19:
      char v6 = 19;
      break;
    case 20:
      char v6 = 20;
      break;
    case 21:
      char v6 = 21;
      break;
    case 22:
      char v6 = 22;
      break;
    case 23:
      char v6 = 23;
      break;
    case 24:
      char v6 = 24;
      break;
    case 25:
      char v6 = 25;
      break;
    case 26:
      char v6 = 26;
      break;
    case 27:
      char v6 = 27;
      break;
    case 28:
      char v6 = 28;
      break;
    case 29:
      char v6 = 29;
      break;
    default:
      char v6 = 30;
      break;
  }
  char *v2 = v6;
  return result;
}

void *static TC2ClientConfigurationKey.allCases.getter()
{
  return &unk_270851C88;
}

unint64_t TC2ClientConfigurationKey.rawValue.getter()
{
  unint64_t result = 0x6D6E6F7269766E65;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 5:
      unint64_t result = 0xD000000000000027;
      break;
    case 6:
      unint64_t result = 0xD000000000000016;
      break;
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    case 8:
      unint64_t result = 0xD000000000000026;
      break;
    case 9:
      unint64_t result = 0xD000000000000012;
      break;
    case 0xA:
      unint64_t result = 0x4145416563726F66;
      break;
    case 0xB:
      unint64_t result = 0x657573734974746CLL;
      break;
    case 0xC:
      unint64_t result = 0x657573734974746FLL;
      break;
    case 0xD:
    case 0x13:
    case 0x1A:
    case 0x1B:
    case 0x1C:
      unint64_t result = 0xD000000000000019;
      break;
    case 0xE:
      unint64_t result = 0xD000000000000014;
      break;
    case 0xF:
      unint64_t result = 0xD000000000000015;
      break;
    case 0x10:
      unint64_t result = 0xD000000000000024;
      break;
    case 0x11:
      unint64_t result = 0xD000000000000012;
      break;
    case 0x12:
      unint64_t result = 0x656469727265766FLL;
      break;
    case 0x14:
      unint64_t result = 0xD000000000000024;
      break;
    case 0x15:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 0x16:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 0x17:
      unint64_t result = 0xD000000000000023;
      break;
    case 0x18:
      unint64_t result = 0xD000000000000010;
      break;
    case 0x19:
      unint64_t result = 0x6974704F74736574;
      break;
    case 0x1D:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25A6C51D0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_25A6C4B88(*a1, *a2, (uint64_t (*)(void))TC2ClientConfigurationKey.rawValue.getter) & 1;
}

uint64_t sub_25A6C5208()
{
  return sub_25A6C7AE0();
}

uint64_t sub_25A6C5270()
{
  TC2ClientConfigurationKey.rawValue.getter();
  sub_25A6C74E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25A6C52D4()
{
  return sub_25A6C7AE0();
}

PrivateCloudCompute::TC2ClientConfigurationKey_optional sub_25A6C5338(Swift::String *a1)
{
  return TC2ClientConfigurationKey.init(rawValue:)(*a1);
}

unint64_t sub_25A6C5344@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = TC2ClientConfigurationKey.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_25A6C536C(void *a1@<X8>)
{
  *a1 = &unk_270851C88;
}

uint64_t TC2ConfigurationIndex.domain.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TC2ConfigurationIndex.domain.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*TC2ConfigurationIndex.domain.modify())()
{
  return nullsub_1;
}

uint64_t TC2ConfigurationIndex.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TC2ConfigurationIndex.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*TC2ConfigurationIndex.name.modify())()
{
  return nullsub_1;
}

uint64_t TC2ConfigurationIndex.defaultValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 32));
}

uint64_t TC2ConfigurationIndex.defaultValue.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 32), a1);
}

uint64_t (*TC2ConfigurationIndex.defaultValue.modify())()
{
  return nullsub_1;
}

uint64_t TC2ConfigurationIndex.isAllowedOnCustomerBuilds.getter(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 36));
}

uint64_t TC2ConfigurationIndex.isAllowedOnCustomerBuilds.setter(uint64_t result, uint64_t a2)
{
  *(unsigned char *)(v2 + *(int *)(a2 + 36)) = result;
  return result;
}

uint64_t (*TC2ConfigurationIndex.isAllowedOnCustomerBuilds.modify())()
{
  return nullsub_1;
}

void static TC2ConfigurationIndex.environment.getter(uint64_t a1@<X8>)
{
}

void static TC2ConfigurationIndex.ignoreCertificateErrors.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000024;
  *(void *)(a1 + 8) = 0x800000025A6D1270;
  *(void *)(a1 + 16) = 0xD000000000000017;
  *(void *)(a1 + 24) = 0x800000025A6CEEB0;
  *(_WORD *)(a1 + 32) = 0;
}

void static TC2ConfigurationIndex.rateLimitRequestTimeout.getter(uint64_t a1@<X8>)
{
}

void static TC2ConfigurationIndex.rateLimitRequestPath.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000024;
  *(void *)(a1 + 8) = 0x800000025A6D1270;
  *(void *)(a1 + 16) = 0xD000000000000014;
  *(void *)(a1 + 24) = 0x800000025A6CEEF0;
  *(void *)(a1 + 32) = 0x6D696C657461722FLL;
  *(void *)(a1 + 40) = 0xEB00000000737469;
  *(unsigned char *)(a1 + 48) = 0;
}

void static TC2ConfigurationIndex.rateLimitRequestMinimumSpacing.getter(uint64_t a1@<X8>)
{
}

void static TC2ConfigurationIndex.prefetchRequestTimeout.getter(uint64_t a1@<X8>)
{
}

void static TC2ConfigurationIndex.prefetchRequestPath.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000024;
  *(void *)(a1 + 8) = 0x800000025A6D1270;
  *(void *)(a1 + 16) = 0xD000000000000013;
  *(void *)(a1 + 24) = 0x800000025A6CEF80;
  *(void *)(a1 + 32) = 0x637465666572702FLL;
  *(void *)(a1 + 40) = 0xE900000000000068;
  *(unsigned char *)(a1 + 48) = 0;
}

void static TC2ConfigurationIndex.trustedRequestFirstPayloadChunkTimeout.getter(uint64_t a1@<X8>)
{
}

void sub_25A6C56F8(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  *(void *)a3 = 0xD000000000000024;
  *(void *)(a3 + 8) = 0x800000025A6D1270;
  *(void *)(a3 + 16) = a1;
  *(void *)(a3 + 24) = a2;
  *(void *)(a3 + 32) = 30000;
  *(unsigned char *)(a3 + 40) = 0;
}

void static TC2ConfigurationIndex.trustedRequestPath.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000024;
  *(void *)(a1 + 8) = 0x800000025A6D1270;
  *(void *)(a1 + 16) = 0xD000000000000012;
  *(void *)(a1 + 24) = 0x800000025A6CEFD0;
  *(void *)(a1 + 32) = 0x656B6F766E692FLL;
  *(void *)(a1 + 40) = 0xE700000000000000;
  *(unsigned char *)(a1 + 48) = 0;
}

void static TC2ConfigurationIndex.forceAEADKey.getter(uint64_t a1@<X8>)
{
}

void static TC2ConfigurationIndex.lttIssuer.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000024;
  *(void *)(a1 + 8) = 0x800000025A6D1270;
  *(void *)(a1 + 16) = 0x657573734974746CLL;
  *(void *)(a1 + 24) = 0xE900000000000072;
  *(void *)(a1 + 32) = 0xD000000000000016;
  *(void *)(a1 + 40) = 0x800000025A6D12A0;
  *(unsigned char *)(a1 + 48) = 0;
}

void static TC2ConfigurationIndex.ottIssuer.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000024;
  *(void *)(a1 + 8) = 0x800000025A6D1270;
  *(void *)(a1 + 16) = 0x657573734974746FLL;
  *(void *)(a1 + 24) = 0xE900000000000072;
  *(void *)(a1 + 32) = 0xD000000000000016;
  *(void *)(a1 + 40) = 0x800000025A6D12C0;
  *(unsigned char *)(a1 + 48) = 0;
}

void static TC2ConfigurationIndex.maxPrefetchedAttestations.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000024;
  *(void *)(a1 + 8) = 0x800000025A6D1270;
  *(void *)(a1 + 16) = 0xD000000000000019;
  *(void *)(a1 + 24) = 0x800000025A6CF010;
  *(void *)(a1 + 32) = 60;
  *(unsigned char *)(a1 + 40) = 0;
}

void static TC2ConfigurationIndex.maxTotalAttestations.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000024;
  *(void *)(a1 + 8) = 0x800000025A6D1270;
  *(void *)(a1 + 16) = 0xD000000000000014;
  *(void *)(a1 + 24) = 0x800000025A6CF030;
  *(void *)(a1 + 32) = 87;
  *(unsigned char *)(a1 + 40) = 0;
}

void static TC2ConfigurationIndex.maxInlineAttestations.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000024;
  *(void *)(a1 + 8) = 0x800000025A6D1270;
  *(void *)(a1 + 16) = 0xD000000000000015;
  *(void *)(a1 + 24) = 0x800000025A6CF050;
  *(void *)(a1 + 32) = 27;
  *(unsigned char *)(a1 + 40) = 0;
}

void static TC2ConfigurationIndex.prewarmAttestationsValidityInSeconds.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000024;
  *(void *)(a1 + 8) = 0x800000025A6D1270;
  *(void *)(a1 + 16) = 0xD000000000000024;
  *(void *)(a1 + 24) = 0x800000025A6CF070;
  *(void *)(a1 + 32) = 0x409C200000000000;
  *(unsigned char *)(a1 + 40) = 0;
}

void static TC2ConfigurationIndex.maxPrefetchBatches.getter(uint64_t a1@<X8>)
{
}

void static TC2ConfigurationIndex.overrideCellID.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000024;
  *(void *)(a1 + 8) = 0x800000025A6D1270;
  strcpy((char *)(a1 + 16), "overrideCellID");
  *(unsigned char *)(a1 + 31) = -18;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 48) = 1;
}

void static TC2ConfigurationIndex.rateLimiterSessionTimeout.getter(uint64_t a1@<X8>)
{
}

void static TC2ConfigurationIndex.rateLimiterSessionLengthForSoftening.getter(uint64_t a1@<X8>)
{
}

void sub_25A6C5A18(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  *(void *)a3 = 0xD000000000000024;
  *(void *)(a3 + 8) = 0x800000025A6D1270;
  *(void *)(a3 + 16) = a1;
  *(void *)(a3 + 24) = a2;
  *(void *)(a3 + 32) = 5;
  *(unsigned char *)(a3 + 40) = 0;
}

void static TC2ConfigurationIndex.rateLimiterDefaultJitterFactor.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000024;
  *(void *)(a1 + 8) = 0x800000025A6D1270;
  *(void *)(a1 + 16) = 0xD00000000000001ELL;
  *(void *)(a1 + 24) = 0x800000025A6CF120;
  *(void *)(a1 + 32) = 0x3FB999999999999ALL;
  *(unsigned char *)(a1 + 40) = 0;
}

void static TC2ConfigurationIndex.rateLimiterMaximumRateLimitTtl.getter(uint64_t a1@<X8>)
{
}

void static TC2ConfigurationIndex.rateLimiterMaximumRateLimitDuration.getter(uint64_t a1@<X8>)
{
}

void sub_25A6C5ACC(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  *(void *)a3 = 0xD000000000000024;
  *(void *)(a3 + 8) = 0x800000025A6D1270;
  *(void *)(a3 + 16) = a1;
  *(void *)(a3 + 24) = a2;
  *(void *)(a3 + 32) = 0x40F5180000000000;
  *(unsigned char *)(a3 + 40) = 0;
}

void static TC2ConfigurationIndex.rateLimitUnmatchedRequestStorageTimeout.getter(uint64_t a1@<X8>)
{
}

void sub_25A6C5B1C(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  *(void *)a3 = 0xD000000000000024;
  *(void *)(a3 + 8) = 0x800000025A6D1270;
  *(void *)(a3 + 16) = a1;
  *(void *)(a3 + 24) = a2;
  *(void *)(a3 + 32) = 0x404E000000000000;
  *(unsigned char *)(a3 + 40) = 0;
}

void static TC2ConfigurationIndex.testSignalHeader.getter(uint64_t a1@<X8>)
{
}

void static TC2ConfigurationIndex.testOptions.getter(uint64_t a1@<X8>)
{
}

uint64_t static TC2ConfigurationIndex.allowedWorkloadParameters.getter@<X0>(uint64_t a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B32A010);
  sub_25A6C5D9C((unint64_t *)&qword_26B329C98, (uint64_t *)&unk_26B32A010);
  uint64_t result = sub_25A6C7490();
  *(void *)a1 = 0xD000000000000024;
  *(void *)(a1 + 8) = 0x800000025A6D1270;
  *(void *)(a1 + 16) = 0xD000000000000019;
  *(void *)(a1 + 24) = 0x800000025A6CF1D0;
  *(void *)(a1 + 32) = result;
  *(void *)(a1 + 40) = v3;
  *(unsigned char *)(a1 + 48) = 0;
  return result;
}

void static TC2ConfigurationIndex.proposedLiveOnEnvironment.getter(uint64_t a1@<X8>)
{
}

void static TC2ConfigurationIndex.bootFixedLiveOnEnvironment.getter(uint64_t a1@<X8>)
{
}

void sub_25A6C5CF4(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(void *)(a5 + 24) = a4;
  *(void *)(a5 + 32) = 0;
  *(void *)(a5 + 40) = 0;
  *(unsigned char *)(a5 + 48) = 0;
}

unint64_t sub_25A6C5D0C()
{
  unint64_t result = qword_26A44C9B8;
  if (!qword_26A44C9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A44C9B8);
  }
  return result;
}

uint64_t sub_25A6C5D60()
{
  return sub_25A6C5D9C(&qword_26A44C9C0, &qword_26A44C9C8);
}

uint64_t sub_25A6C5D9C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TC2ClientConfigurationKey(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE3) {
    goto LABEL_17;
  }
  if (a2 + 29 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 29) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 29;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 29;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 29;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1E;
  int v8 = v6 - 30;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TC2ClientConfigurationKey(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 29 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 29) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE2)
  {
    unsigned int v6 = ((a2 - 227) >> 8) + 1;
    *uint64_t result = a2 + 29;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A6C5F3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 29;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TC2ClientConfigurationKey()
{
  return &type metadata for TC2ClientConfigurationKey;
}

uint64_t sub_25A6C5F74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t sub_25A6C5F7C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_25A6C6020(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || v7 + ((v6 + 32) & (unint64_t)~v6) + 1 > 0x18)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v11 = a2[1];
    *a1 = *a2;
    a1[1] = v11;
    long long v12 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    long long v13 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *long long v12 = *v13;
    v12[1] = v13[1];
    uint64_t v14 = ((unint64_t)v12 + v6 + 16) & ~v6;
    uint64_t v15 = ((unint64_t)v13 + v6 + 16) & ~v6;
    uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v14, v15, v4);
    *(unsigned char *)(v14 + v7) = *(unsigned char *)(v15 + v7);
  }
  return a1;
}

uint64_t sub_25A6C6168(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return v5(v6);
}

void *sub_25A6C61EC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  v5[1] = v6[1];
  uint64_t v7 = *(void *)(a3 + 16);
  int v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  uint64_t v9 = *(void *)(v7 - 8) + 16;
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v11 = ((unint64_t)v5 + v10 + 16) & ~v10;
  uint64_t v12 = ((unint64_t)v6 + v10 + 16) & ~v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8(v11, v12, v7);
  *(unsigned char *)(*(void *)(v9 + 48) + v11) = *(unsigned char *)(*(void *)(v9 + 48) + v12);
  return a1;
}

void *sub_25A6C62B8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v6 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v6 = *v7;
  v6[1] = v7[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = ((unint64_t)v6 + v10 + 16) & ~v10;
  uint64_t v12 = ((unint64_t)v7 + v10 + 16) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v11, v12);
  *(unsigned char *)(*(void *)(v9 + 40) + v11) = *(unsigned char *)(*(void *)(v9 + 40) + v12);
  return a1;
}

_OWORD *sub_25A6C639C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v7 = v6 + 32;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)v4 + v8 + 16) & ~v8;
  uint64_t v10 = ((unint64_t)v5 + v8 + 16) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(v9, v10);
  *(unsigned char *)(*(void *)(v7 + 32) + v9) = *(unsigned char *)(*(void *)(v7 + 32) + v10);
  return a1;
}

void *sub_25A6C6440(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v10 = v9 + 40;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = ((unint64_t)v7 + v11 + 16) & ~v11;
  uint64_t v13 = ((unint64_t)v8 + v11 + 16) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v9 + 40))(v12, v13);
  *(unsigned char *)(*(void *)(v10 + 24) + v12) = *(unsigned char *)(*(void *)(v10 + 24) + v13);
  return a1;
}

uint64_t sub_25A6C650C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + ((v6 + 32) & ~v6) + 1;
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8)
      }
                                                                      + v6
                                                                      + 16) & ~v6);
      unint64_t v15 = *((void *)a1 + 1);
      if (v15 >= 0xFFFFFFFF) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_25A6C66B8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 32) & ~v9) + 1;
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 32) & ~v9) != -1)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x25A6C6924);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v18 = (((unint64_t)(a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v9 + 16) & ~v9;
          uint64_t v19 = *(void (**)(unint64_t))(v6 + 56);
          v19(v18);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = a2 - 1;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for TC2ConfigurationIndex()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

NSXPCInterface __swiftcall interfaceForTC2DaemonProtocol()()
{
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_interfaceWithProtocol_, &unk_2708577E0);
  id v2 = objc_msgSend(v0, sel_interfaceWithProtocol_, &unk_270857780);
  objc_msgSend(v1, sel_setInterface_forSelector_argumentIndex_ofReply_, v2, sel_trustedRequestWithParameters_requestID_bundleIdentifier_originatingBundleIdentifier_featureIdentifier_sessionIdentifier_completion_, 0, 1);

  return (NSXPCInterface)v1;
}

uint64_t TC2JSON<>.json.getter()
{
  sub_25A6C7250();
  swift_allocObject();
  sub_25A6C7240();
  uint64_t v0 = sub_25A6C7230();
  swift_release();
  return v0;
}

uint64_t sub_25A6C6B94@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_25A689D80(a1, a2, a3);
}

uint64_t TC2JSON<>.init(json:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_25A6C7430();
  v15[2] = *(void *)(v8 - 8);
  v15[3] = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = sub_25A6C76D0();
  MEMORY[0x270FA5388](v9);
  BOOL v11 = (char *)v15 - v10;
  sub_25A6C7220();
  swift_allocObject();
  sub_25A6C7210();
  sub_25A6C7200();
  swift_release();
  uint64_t v12 = *(void *)(a3 - 8);
  int v13 = *(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56);
  v13(v11, 0, 1, a3);
  sub_25A68F294(a1, a2);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a4, v11, a3);
  return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v13)(a4, 0, 1, a3);
}

uint64_t sub_25A6C6FFC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_25A68A498(a1, a2, a3);
}

uint64_t sub_25A6C7024()
{
  return sub_25A6A2518();
}

uint64_t sub_25A6C702C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_25A68A1D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25A6C705C()
{
  return sub_25A6A2670();
}

double sub_25A6C7068@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_25A68A8C8(a1, a2, a3);
}

uint64_t sub_25A6C7090()
{
  return sub_25A6A27C4();
}

uint64_t sub_25A6C70E4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  return sub_25A68AB98(a1, a2, a3);
}

uint64_t sub_25A6C7110@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_25A68AEC0(a1, a2, a3);
}

uint64_t sub_25A6C7138()
{
  return sub_25A6A2AB8(*v0);
}

uint64_t sub_25A6C7140@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_25A68B2F0(a1, a2, a3);
}

uint64_t sub_25A6C7168()
{
  return sub_25A6A2AF0(*v0);
}

uint64_t sub_25A6C7170@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_25A68A1B0(a1, a2, a3);
}

uint64_t sub_25A6C719C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_25A68B5DC(a1, a2, a3);
}

uint64_t dispatch thunk of TC2JSON.json.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of TC2JSON.init(json:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_25A6C7200()
{
  return MEMORY[0x270EEDDD0]();
}

uint64_t sub_25A6C7210()
{
  return MEMORY[0x270EEDE10]();
}

uint64_t sub_25A6C7220()
{
  return MEMORY[0x270EEDE18]();
}

uint64_t sub_25A6C7230()
{
  return MEMORY[0x270EEDEE8]();
}

uint64_t sub_25A6C7240()
{
  return MEMORY[0x270EEDF30]();
}

uint64_t sub_25A6C7250()
{
  return MEMORY[0x270EEDF38]();
}

uint64_t sub_25A6C7260()
{
  return MEMORY[0x270EEE638]();
}

uint64_t sub_25A6C7270()
{
  return MEMORY[0x270EEE658]();
}

uint64_t sub_25A6C7280()
{
  return MEMORY[0x270EEE670]();
}

uint64_t sub_25A6C7290()
{
  return MEMORY[0x270EEF830]();
}

uint64_t sub_25A6C72A0()
{
  return MEMORY[0x270EEFF00]();
}

uint64_t sub_25A6C72B0()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_25A6C72C0()
{
  return MEMORY[0x270EF0120]();
}

uint64_t sub_25A6C72D0()
{
  return MEMORY[0x270EF0178]();
}

uint64_t sub_25A6C72E0()
{
  return MEMORY[0x270EF0290]();
}

uint64_t sub_25A6C72F0()
{
  return MEMORY[0x270EF0790]();
}

uint64_t sub_25A6C7300()
{
  return MEMORY[0x270EF07E8]();
}

uint64_t sub_25A6C7310()
{
  return MEMORY[0x270EF07F8]();
}

uint64_t sub_25A6C7320()
{
  return MEMORY[0x270EF0808]();
}

uint64_t sub_25A6C7330()
{
  return MEMORY[0x270EF0820]();
}

uint64_t sub_25A6C7340()
{
  return MEMORY[0x270EF0840]();
}

uint64_t sub_25A6C7350()
{
  return MEMORY[0x270EF0890]();
}

uint64_t sub_25A6C7360()
{
  return MEMORY[0x270EF09C0]();
}

uint64_t sub_25A6C7370()
{
  return MEMORY[0x270EF0B88]();
}

uint64_t _s19PrivateCloudCompute24TC2RopesResponseMetadataV3now4codeAC10Foundation4DateV_SitcfcfA__0()
{
  return MEMORY[0x270EF0BB8]();
}

uint64_t sub_25A6C7390()
{
  return MEMORY[0x270EF0C20]();
}

uint64_t sub_25A6C73A0()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_25A6C73B0()
{
  return MEMORY[0x270EF0C88]();
}

uint64_t _s19PrivateCloudCompute14TrustedRequestV2id12workloadType0G10Parameters16bundleIdentifier07featureK007sessionK0AC10Foundation4UUIDV_SSSDyS2SGSgSSSgAoLSgtcfcfA__0()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_25A6C73D0()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_25A6C73E0()
{
  return MEMORY[0x270EF15A8]();
}

uint64_t sub_25A6C73F0()
{
  return MEMORY[0x270EF1600]();
}

uint64_t sub_25A6C7400()
{
  return MEMORY[0x270EF1608]();
}

uint64_t sub_25A6C7410()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_25A6C7420()
{
  return MEMORY[0x270FA2E08]();
}

uint64_t sub_25A6C7430()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_25A6C7440()
{
  return MEMORY[0x270FA09A8]();
}

uint64_t sub_25A6C7450()
{
  return MEMORY[0x270FA09E8]();
}

uint64_t sub_25A6C7460()
{
  return MEMORY[0x270FA0A48]();
}

uint64_t sub_25A6C7470()
{
  return MEMORY[0x270EF1818]();
}

uint64_t sub_25A6C7480()
{
  return MEMORY[0x270F9D320]();
}

uint64_t sub_25A6C7490()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_25A6C74A0()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_25A6C74B0()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_25A6C74C0()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_25A6C74D0()
{
  return MEMORY[0x270F9D6B8]();
}

uint64_t sub_25A6C74E0()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_25A6C74F0()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_25A6C7500()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_25A6C7510()
{
  return MEMORY[0x270F9D7E8]();
}

uint64_t sub_25A6C7520()
{
  return MEMORY[0x270F9D800]();
}

uint64_t sub_25A6C7540()
{
  return MEMORY[0x270F9D810]();
}

uint64_t sub_25A6C7550()
{
  return MEMORY[0x270F9D860]();
}

uint64_t sub_25A6C7560()
{
  return MEMORY[0x270F9D8E0]();
}

uint64_t sub_25A6C7570()
{
  return MEMORY[0x270F9D8F0]();
}

uint64_t sub_25A6C7580()
{
  return MEMORY[0x270F9DA80]();
}

uint64_t sub_25A6C7590()
{
  return MEMORY[0x270F9DA98]();
}

uint64_t sub_25A6C75A0()
{
  return MEMORY[0x270F9DB00]();
}

uint64_t sub_25A6C75B0()
{
  return MEMORY[0x270F9DB18]();
}

uint64_t sub_25A6C75C0()
{
  return MEMORY[0x270EF1BB8]();
}

uint64_t sub_25A6C75D0()
{
  return MEMORY[0x270FA1DF8]();
}

uint64_t sub_25A6C75E0()
{
  return MEMORY[0x270FA1E18]();
}

uint64_t sub_25A6C75F0()
{
  return MEMORY[0x270FA1E20]();
}

uint64_t sub_25A6C7600()
{
  return MEMORY[0x270FA1E28]();
}

uint64_t sub_25A6C7620()
{
  return MEMORY[0x270FA1F08]();
}

uint64_t sub_25A6C7630()
{
  return MEMORY[0x270FA1F10]();
}

uint64_t sub_25A6C7640()
{
  return MEMORY[0x270FA2080]();
}

uint64_t sub_25A6C7650()
{
  return MEMORY[0x270F9DDA0]();
}

uint64_t sub_25A6C7660()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_25A6C7670()
{
  return MEMORY[0x270FA2E80]();
}

uint64_t sub_25A6C7680()
{
  return MEMORY[0x270FA0D50]();
}

uint64_t sub_25A6C7690()
{
  return MEMORY[0x270FA0DA0]();
}

uint64_t sub_25A6C76A0()
{
  return MEMORY[0x270FA0F30]();
}

uint64_t sub_25A6C76B0()
{
  return MEMORY[0x270FA0F48]();
}

uint64_t sub_25A6C76C0()
{
  return MEMORY[0x270FA0FA8]();
}

uint64_t sub_25A6C76D0()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_25A6C76E0()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_25A6C76F0()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_25A6C7700()
{
  return MEMORY[0x270F9E670]();
}

uint64_t sub_25A6C7710()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_25A6C7720()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_25A6C7730()
{
  return MEMORY[0x270F9E988]();
}

uint64_t sub_25A6C7740()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_25A6C7750()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_25A6C7760()
{
  return MEMORY[0x270F9E9E8]();
}

uint64_t sub_25A6C7770()
{
  return MEMORY[0x270F9EA78]();
}

uint64_t sub_25A6C7780()
{
  return MEMORY[0x270F9EA98]();
}

uint64_t sub_25A6C7790()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_25A6C77A0()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_25A6C77B0()
{
  return MEMORY[0x270F9EF38]();
}

uint64_t sub_25A6C77C0()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_25A6C77D0()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_25A6C77E0()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_25A6C77F0()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_25A6C7800()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_25A6C7810()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_25A6C7820()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_25A6C7830()
{
  return MEMORY[0x270F9F250]();
}

uint64_t sub_25A6C7840()
{
  return MEMORY[0x270F9F258]();
}

uint64_t sub_25A6C7850()
{
  return MEMORY[0x270F9F270]();
}

uint64_t sub_25A6C7860()
{
  return MEMORY[0x270F9F280]();
}

uint64_t sub_25A6C7870()
{
  return MEMORY[0x270F9F290]();
}

uint64_t sub_25A6C7880()
{
  return MEMORY[0x270F9F2A0]();
}

uint64_t sub_25A6C7890()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_25A6C78A0()
{
  return MEMORY[0x270F9F2F0]();
}

uint64_t sub_25A6C78B0()
{
  return MEMORY[0x270F9F2F8]();
}

uint64_t sub_25A6C78C0()
{
  return MEMORY[0x270F9F308]();
}

uint64_t sub_25A6C78D0()
{
  return MEMORY[0x270F9F310]();
}

uint64_t sub_25A6C78E0()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_25A6C78F0()
{
  return MEMORY[0x270F9F358]();
}

uint64_t sub_25A6C7900()
{
  return MEMORY[0x270F9F360]();
}

uint64_t sub_25A6C7910()
{
  return MEMORY[0x270F9F390]();
}

uint64_t sub_25A6C7920()
{
  return MEMORY[0x270F9F3B0]();
}

uint64_t sub_25A6C7930()
{
  return MEMORY[0x270F9F3C0]();
}

uint64_t sub_25A6C7940()
{
  return MEMORY[0x270F9F3D0]();
}

uint64_t sub_25A6C7950()
{
  return MEMORY[0x270F9F3E0]();
}

uint64_t sub_25A6C7960()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_25A6C7970()
{
  return MEMORY[0x270F9F430]();
}

uint64_t sub_25A6C7980()
{
  return MEMORY[0x270F9F438]();
}

uint64_t sub_25A6C7990()
{
  return MEMORY[0x270F9F448]();
}

uint64_t sub_25A6C79A0()
{
  return MEMORY[0x270F9F450]();
}

uint64_t sub_25A6C79B0()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_25A6C79C0()
{
  return MEMORY[0x270F9F498]();
}

uint64_t sub_25A6C79D0()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_25A6C79E0()
{
  return MEMORY[0x270F9F730]();
}

uint64_t sub_25A6C79F0()
{
  return MEMORY[0x270F9F7C0]();
}

uint64_t sub_25A6C7A00()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_25A6C7A20()
{
  return MEMORY[0x270F9FA40]();
}

uint64_t sub_25A6C7A40()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_25A6C7A50()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_25A6C7A60()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_25A6C7A70()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_25A6C7A80()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_25A6C7A90()
{
  return MEMORY[0x270F9FC40]();
}

uint64_t sub_25A6C7AA0()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_25A6C7AB0()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_25A6C7AC0()
{
  return MEMORY[0x270F9FC68]();
}

uint64_t sub_25A6C7AD0()
{
  return MEMORY[0x270F9FC80]();
}

uint64_t sub_25A6C7AE0()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_25A6C7AF0()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_25A6C7B00()
{
  return MEMORY[0x270F9FD98]();
}

uint64_t sub_25A6C7B30()
{
  return MEMORY[0x270FA0128]();
}

CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
{
  return (CFPropertyListRef)MEMORY[0x270EE4CA0](key, applicationID);
}

Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return MEMORY[0x270EE4CD0](key, applicationID, keyExistsAndHasValidFormat);
}

CFIndex CFPreferencesGetAppIntegerValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return MEMORY[0x270EE4CE0](key, applicationID, keyExistsAndHasValidFormat);
}

void CFPreferencesSetAppValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID)
{
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_strtod_clocale()
{
  return MEMORY[0x270FA0170]();
}

void bzero(void *a1, size_t a2)
{
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x270EDA468](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

uint64_t os_variant_allows_internal_security_policies()
{
  return MEMORY[0x270EDAB10]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x270FA0208]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x270FA02F8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x270FA0300]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x270FA0410]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x270FA0460]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x270FA0470]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x270FA0498]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x270FA2450]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x270FA2458]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x270FA2460]();
}

uint64_t swift_task_isCurrentExecutor()
{
  return MEMORY[0x270FA2478]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x270FA0598]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}