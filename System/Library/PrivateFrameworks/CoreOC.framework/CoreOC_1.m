uint64_t sub_24B5F7F3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v0 = sub_24B6828C0();
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    do
    {
      v6 = sub_24B6828C0();
      if (!v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v2 == v6 && v3 == v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v4 = sub_24B682FA0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v4 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      v2 = sub_24B6828C0();
      v3 = v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  sub_24B6828C0();
  v9 = v8;
  swift_bridgeObjectRelease();
  v10 = v9 == 0;
  swift_bridgeObjectRelease();
  return v10;
}

void sub_24B5F80A4()
{
  if (qword_2697CE900 != -1) {
    swift_once();
  }
  if (byte_2697D0C80 == 1)
  {
    uint64_t v0 = sub_24B5F75A0();
    BOOL v3 = (v1 & 1) == 0 && v0 > 12;
  }
  else
  {
    BOOL v3 = 1;
  }
  byte_2697D0C81 = v3;
}

char *sub_24B5F8118()
{
  if (qword_2697CE908 != -1) {
    swift_once();
  }
  return &byte_2697D0C81;
}

BOOL sub_24B5F8164()
{
  uint64_t v0 = sub_24B5F75A0();
  return (v1 & 1) == 0 && v0 > 15;
}

uint64_t sub_24B5F8188()
{
  uint64_t result = sub_24B567F00();
  if (result == 2)
  {
    uint64_t result = sub_24B5F75A0();
    BOOL v3 = (v1 & 1) == 0 && result > 15;
  }
  else
  {
    BOOL v3 = result & 1;
  }
  byte_2697D0C82 = v3;
  return result;
}

char *sub_24B5F81CC()
{
  if (qword_2697CE910 != -1) {
    swift_once();
  }
  return &byte_2697D0C82;
}

uint64_t sub_24B5F8218(__CVBuffer *a1, __CVBuffer *a2, __CVBuffer *a3, uint64_t a4, char a5, float32x4_t a6, float32x4_t a7, float32x4_t a8, float32x4_t a9, double a10, double a11)
{
  int64_t Width = CVPixelBufferGetWidth(a1);
  int64_t Height = CVPixelBufferGetHeight(a1);
  uint64_t v20 = Height;
  double v21 = (double)Width;
  if (a5) {
    double v22 = (double)Height;
  }
  else {
    double v22 = 1.0;
  }
  if ((a5 & 1) == 0) {
    double v21 = 1.0;
  }
  double v23 = v21 * a10;
  int64_t v24 = CVPixelBufferGetWidth(a2);
  v62 = a2;
  uint64_t result = CVPixelBufferGetHeight(a2);
  int64_t v59 = v24;
  float v26 = v23;
  float v27 = (float)((float)((float)v24 / (float)Width) * v26) + 0.5;
  if (v27 <= -9.2234e18)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  if (v27 >= 9.2234e18)
  {
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  int64_t v28 = result;
  float v29 = v22 * a11;
  float v30 = (float)((float)((float)result / (float)v20) * v29) + 0.5;
  if ((LODWORD(v27) & 0x7F800000) == 0x7F800000
    || (COERCE_UNSIGNED_INT((float)((float)((float)result / (float)v20) * v29) + 0.5) & 0x7F800000) == 2139095040)
  {
    goto LABEL_55;
  }
  if (v30 <= -9.2234e18)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  if (v30 >= 9.2234e18)
  {
LABEL_57:
    __break(1u);
    return result;
  }
  uint64_t result = 0;
  int64_t v32 = (uint64_t)v27;
  if (((uint64_t)v27 & 0x8000000000000000) == 0 && v24 > v32)
  {
    int64_t v33 = (uint64_t)v30;
    if (((uint64_t)v30 & 0x8000000000000000) == 0 && v28 > v33)
    {
      uint64_t v34 = MEMORY[0x263F8D5C8];
      sub_24B571924(v62, (uint64_t)v27, (uint64_t)v30, MEMORY[0x263F8D5C8], (uint64_t)v66);
      uint64_t result = sub_24B571924(a3, v32, v33, v34, (uint64_t)&v65);
      if (v65 < 0.8)
      {
        uint64_t v53 = a4;
        int64_t v35 = v32 - 3;
        if (!__OFSUB__(v32, 3))
        {
          uint64_t v36 = -3;
          uint64_t v37 = MEMORY[0x263F8EE78];
          uint64_t v38 = MEMORY[0x263F8D5C8];
          v60 = a3;
          int64_t v58 = v32;
          while (1)
          {
            BOOL v39 = v35 >= 0 && v35 < v59;
            BOOL v40 = v39;
            a4 = -3;
            do
            {
              if (v40)
              {
                int64_t v41 = v33 + a4;
                if (__OFADD__(v33, a4))
                {
                  __break(1u);
                  goto LABEL_53;
                }
                if ((v41 & 0x8000000000000000) == 0 && v41 < v28)
                {
                  sub_24B571924(v62, v35, v33 + a4, v38, (uint64_t)&v65);
                  float v42 = v65;
                  uint64_t result = sub_24B571924(a3, v35, v33 + a4, v38, (uint64_t)&v65);
                  if (v65 > 0.7)
                  {
                    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
                    if ((result & 1) == 0)
                    {
                      uint64_t result = (uint64_t)sub_24B58ACBC(0, *(void *)(v37 + 16) + 1, 1, (char *)v37);
                      uint64_t v37 = result;
                    }
                    unint64_t v44 = *(void *)(v37 + 16);
                    unint64_t v43 = *(void *)(v37 + 24);
                    if (v44 >= v43 >> 1)
                    {
                      uint64_t result = (uint64_t)sub_24B58ACBC((char *)(v43 > 1), v44 + 1, 1, (char *)v37);
                      uint64_t v37 = result;
                    }
                    *(void *)(v37 + 16) = v44 + 1;
                    *(float *)(v37 + 4 * v44 + 32) = v42;
                    a3 = v60;
                  }
                }
              }
              ++a4;
            }
            while (a4 != 4);
            if (v36 == 3) {
              break;
            }
            ++v36;
            int64_t v35 = v58 + v36;
            if (__OFADD__(v58, v36)) {
              goto LABEL_42;
            }
          }
          if (!*(void *)(v37 + 16))
          {
            swift_bridgeObjectRelease();
            return 0;
          }
          sub_24B5F8648(v37);
          float v63 = v46;
          swift_bridgeObjectRelease();
          float v45 = v63;
          v66[0] = v63;
          a4 = v53;
          if (v63 <= 0.0) {
            return 0;
          }
          goto LABEL_47;
        }
LABEL_42:
        __break(1u);
      }
      float v45 = v66[0];
      if (v66[0] > 0.0)
      {
LABEL_47:
        float v47 = v45 * (float)(v26 - COERCE_FLOAT(*(_OWORD *)(a4 + 32)));
        float v61 = (float)(v45 * (float)(v29 - COERCE_FLOAT(HIDWORD(*(void *)(a4 + 32))))) / *(float *)(a4 + 20);
        float v64 = v45;
        float v48 = *(float *)a4;
        ARVisionCameraToRenderingCoordinateTransform();
        return vaddq_f32(vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a6, v52.f32[0]), a7, *(float32x2_t *)v52.f32, 1), a8, v52, 2), a9, v52, 3), vmlaq_n_f32(vmlaq_n_f32(vmulq_n_f32(vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a6, v49.f32[0]), a7, *(float32x2_t *)v49.f32, 1), a8, v49, 2), a9,
                         v49,
                         3),
                       v47 / v48),
                     vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a6, v50.f32[0]), a7, *(float32x2_t *)v50.f32, 1), a8, v50, 2), a9, v50, 3), v61), vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a6, v51.f32[0]), a7, *(float32x2_t *)v51.f32, 1), a8, v51, 2), a9, v51, 3), v64)).u64[0];
      }
      return 0;
    }
  }
  return result;
}

uint64_t sub_24B5F8648(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v3 = a1;
  swift_bridgeObjectRetain();
  sub_24B5FE23C(&v3);
  unint64_t v1 = *(void *)(v3 + 16);
  if (v1)
  {
    if ((v1 - 1) >> 1 < v1) {
      return swift_release();
    }
    goto LABEL_10;
  }
  if (v1 >> 1 >= v1)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v1 >= 2) {
    return swift_release();
  }
LABEL_11:
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

float sub_24B5F8708(float a1)
{
  return (float)(a1 / 180.0) * 3.1416;
}

int32x2_t sub_24B5F8728(uint64_t a1)
{
  sub_24B562F04(&qword_2697CCE00);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_24B686930;
  int8x16_t v3 = *(int8x16_t *)a1;
  int8x16_t v4 = *(int8x16_t *)(a1 + 16);
  long long v5 = *(_OWORD *)(a1 + 32);
  int32x2_t v6 = vzip1_s32(*(int32x2_t *)a1, *(int32x2_t *)v4.i8);
  *(_DWORD *)(v2 + 64) = DWORD2(v5);
  int32x2_t v7 = vzip2_s32(*(int32x2_t *)v4.i8, *(int32x2_t *)&v5);
  DWORD1(v5) = v3.i32[1];
  *(int32x2_t *)(v2 + 32) = v6;
  *(void *)(v2 + 40) = v5;
  int32x2_t result = vzip1_s32((int32x2_t)*(_OWORD *)&vextq_s8(v3, v3, 8uLL), (int32x2_t)*(_OWORD *)&vextq_s8(v4, v4, 8uLL));
  *(int32x2_t *)(v2 + 48) = v7;
  *(int32x2_t *)(v2 + 56) = result;
  return result;
}

uint64_t sub_24B5F879C@<X0>(uint64_t result@<X0>, __n128 *a2@<X8>, __n128 a3@<Q0>, __n128 a4@<Q1>, __n128 a5@<Q2>)
{
  if (*(void *)(result + 16) == 9)
  {
    a4.n128_u32[0] = *(_DWORD *)(result + 32);
    a3.n128_u32[0] = *(_DWORD *)(result + 36);
    a3.n128_u32[1] = *(_DWORD *)(result + 48);
    a3.n128_u32[2] = *(_DWORD *)(result + 60);
    a4.n128_u32[1] = *(_DWORD *)(result + 44);
    a4.n128_u32[2] = *(_DWORD *)(result + 56);
    a5.n128_u32[0] = *(_DWORD *)(result + 40);
    a5.n128_u32[1] = *(_DWORD *)(result + 52);
    a5.n128_u32[2] = *(_DWORD *)(result + 64);
    *a2 = a4;
    a2[1] = a3;
    a2[2] = a5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

int32x2_t sub_24B5F87F0(int8x16_t a1, int8x16_t a2, int8x16_t a3, int8x16_t a4)
{
  sub_24B562F04(&qword_2697CCE00);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_24B686940;
  *(int32x2_t *)(v4 + 32) = vzip1_s32(*(int32x2_t *)a1.i8, *(int32x2_t *)a2.i8);
  *(_DWORD *)(v4 + 40) = a3.i32[0];
  *(void *)(v4 + 44) = __PAIR64__(a1.u32[1], a4.u32[0]);
  *(int32x2_t *)(v4 + 52) = vzip2_s32(*(int32x2_t *)a2.i8, *(int32x2_t *)a3.i8);
  int8x8_t v5 = (int8x8_t)vextq_s8(a1, a1, 8uLL).u64[0];
  *(int8x8_t *)(v4 + 60) = vext_s8(*(int8x8_t *)a4.i8, v5, 4uLL);
  int32x2_t v6 = (int32x2_t)vextq_s8(a3, a3, 8uLL).u64[0];
  int32x2_t v7 = (int32x2_t)vextq_s8(a2, a2, 8uLL).u64[0];
  *(int32x2_t *)(v4 + 68) = vzip1_s32(v7, v6);
  LODWORD(v8) = vextq_s8(a4, a4, 8uLL).u32[0];
  HIDWORD(v8) = v5.i32[1];
  *(void *)(v4 + 76) = v8;
  int32x2_t result = vzip2_s32(v7, v6);
  *(int32x2_t *)(v4 + 84) = result;
  *(_DWORD *)(v4 + 92) = a4.i32[3];
  return result;
}

uint64_t sub_24B5F88AC(uint64_t result)
{
  if (*(void *)(result + 16) != 16) {
    __break(1u);
  }
  return result;
}

__n128 sub_24B5F8928(__n128 a1)
{
  sub_24B562F04(&qword_2697CCE00);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_24B684FC0;
  __n128 result = a1;
  *(void *)(v1 + 32) = a1.n128_u64[0];
  *(_DWORD *)(v1 + 40) = a1.n128_u32[2];
  return result;
}

float64x2_t sub_24B5F897C@<Q0>(float32x2_t *a1@<X0>, uint64_t a2@<X8>)
{
  *(double *)&unint64_t v2 = a1[1].f32[0];
  *(double *)&unint64_t v3 = a1[3].f32[0];
  float64x2_t v4 = vcvtq_f64_f32(a1[2]);
  *(double *)&unint64_t v5 = COERCE_FLOAT(*(void *)&a1[5]);
  float64x2_t result = vcvtq_f64_f32(a1[4]);
  *(float64x2_t *)a2 = vcvtq_f64_f32(*a1);
  *(_OWORD *)(a2 + 16) = v2;
  *(float64x2_t *)(a2 + 32) = v4;
  *(_OWORD *)(a2 + 48) = v3;
  *(float64x2_t *)(a2 + 64) = result;
  *(_OWORD *)(a2 + 80) = v5;
  return result;
}

float64x2_t sub_24B5F89D4@<Q0>(float64x2_t *a1@<X8>, float32x4_t a2@<Q0>, float32x4_t a3@<Q1>, float32x4_t a4@<Q2>, float32x4_t a5@<Q3>)
{
  *a1 = vcvtq_f64_f32(*(float32x2_t *)a2.f32);
  a1[1] = vcvt_hight_f64_f32(a2);
  a1[2] = vcvtq_f64_f32(*(float32x2_t *)a3.f32);
  a1[3] = vcvt_hight_f64_f32(a3);
  a1[4] = vcvtq_f64_f32(*(float32x2_t *)a4.f32);
  a1[5] = vcvt_hight_f64_f32(a4);
  float64x2_t result = vcvt_hight_f64_f32(a5);
  a1[6] = vcvtq_f64_f32(*(float32x2_t *)a5.f32);
  a1[7] = result;
  return result;
}

double sub_24B5F8A08(float64x2_t *a1)
{
  *(void *)&double result = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(*a1), a1[1]).u64[0];
  return result;
}

uint64_t sub_24B5F8A3C(int8x16_t a1, int8x16_t a2, int8x16_t a3, int8x16_t a4)
{
  sub_24B5F87F0(a1, a2, a3, a4);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    uint64_t v8 = MEMORY[0x263F8D5C8];
    uint64_t v9 = MEMORY[0x263F8D648];
    do
    {
      int v10 = *(_DWORD *)(v5 + 4 * v7 + 32);
      sub_24B562F04((uint64_t *)&unk_2697CD150);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_24B684E60;
      *(void *)(v11 + 56) = v8;
      *(void *)(v11 + 64) = v9;
      *(_DWORD *)(v11 + 32) = v10;
      sub_24B6827F0();
      sub_24B682890();
      swift_bridgeObjectRelease();
      if (v7 < v6 - 1) {
        sub_24B682890();
      }
      ++v7;
    }
    while (v6 != v7);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_24B682890();
  return 91;
}

uint64_t sub_24B5F8B94(double a1)
{
  sub_24B562F04((uint64_t *)&unk_2697CD150);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_24B684E60;
  uint64_t v3 = MEMORY[0x263F8D5B8];
  *(void *)(v2 + 56) = MEMORY[0x263F8D538];
  *(void *)(v2 + 64) = v3;
  *(double *)(v2 + 32) = a1;

  return sub_24B6827F0();
}

float sub_24B5F8C18(float result, float a2, float a3)
{
  if (result <= a2) {
    double result = a2;
  }
  if (result > a3) {
    return a3;
  }
  return result;
}

double sub_24B5F8C2C()
{
  xmmword_2697D0C90 = xmmword_24B685710;
  unk_2697D0CA0 = xmmword_24B686950;
  double result = -0.000348046946;
  xmmword_2697D0CB0 = xmmword_24B686960;
  unk_2697D0CC0 = xmmword_24B686970;
  return result;
}

void sub_24B5F8C60()
{
  if (qword_2697CE918 != -1) {
    swift_once();
  }
  *(simd_float4x4 *)zmmword_2697D0CD0 = __invert_f4(*(simd_float4x4 *)zmmword_2697D0C90);
}

double sub_24B5F8CC8(float32x4_t a1)
{
  int8x16_t v1 = (int8x16_t)vmulq_f32(a1, a1);
  *(float32x2_t *)v1.i8 = vadd_f32(*(float32x2_t *)v1.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v1, v1, 8uLL));
  v1.i32[0] = vadd_f32(*(float32x2_t *)v1.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v1.i8, 1)).u32[0];
  float32x2_t v2 = vrsqrte_f32((float32x2_t)v1.u32[0]);
  float32x2_t v3 = vmul_f32(v2, vrsqrts_f32((float32x2_t)v1.u32[0], vmul_f32(v2, v2)));
  *(void *)&double result = vmulq_n_f32(a1, vmul_f32(v3, vrsqrts_f32((float32x2_t)v1.u32[0], vmul_f32(v3, v3))).f32[0]).u64[0];
  return result;
}

double sub_24B5F8D74(float32x4_t a1, double a2, double a3, double a4, float32x4_t a5, float32x4_t a6, float32x4_t a7, float32x4_t a8)
{
  int8x16_t v8 = (int8x16_t)vmulq_f32(a1, a1);
  *(float32x2_t *)v8.i8 = vadd_f32(*(float32x2_t *)v8.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v8, v8, 8uLL));
  v8.i32[0] = vadd_f32(*(float32x2_t *)v8.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v8.i8, 1)).u32[0];
  float32x2_t v9 = vrsqrte_f32((float32x2_t)v8.u32[0]);
  float32x2_t v10 = vmul_f32(v9, vrsqrts_f32((float32x2_t)v8.u32[0], vmul_f32(v9, v9)));
  float32x4_t v11 = vmulq_n_f32(a1, vmul_f32(v10, vrsqrts_f32((float32x2_t)v8.u32[0], vmul_f32(v10, v10))).f32[0]);
  *(void *)&double result = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a5, v11.f32[0]), a6, *(float32x2_t *)v11.f32, 1), a7, v11, 2), a8, v11, 3).u64[0];
  return result;
}

__n128 sub_24B5F8E64@<Q0>(uint64_t a1@<X8>, float32x4_t a2@<Q0>, float32x4_t a3@<Q1>, float32x4_t a4@<Q2>, float32x4_t a5@<Q3>, float32x4_t a6@<Q4>, float32x4_t a7@<Q5>, float32x4_t a8@<Q6>, float32x4_t a9@<Q7>, float32x4_t a10, float32x4_t a11, float32x4_t a12, float32x4_t a13)
{
  int8x16_t v14 = (int8x16_t)vmulq_f32(a6, a6);
  float32x2_t v15 = vadd_f32(*(float32x2_t *)v14.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v14, v14, 8uLL));
  v15.i32[0] = vadd_f32(v15, (float32x2_t)vdup_lane_s32((int32x2_t)v15, 1)).u32[0];
  float32x2_t v16 = vrsqrte_f32((float32x2_t)v15.u32[0]);
  float32x2_t v17 = vmul_f32(v16, vrsqrts_f32((float32x2_t)v15.u32[0], vmul_f32(v16, v16)));
  float32x4_t v18 = vmulq_n_f32(a6, vmul_f32(v17, vrsqrts_f32((float32x2_t)v15.u32[0], vmul_f32(v17, v17))).f32[0]);
  int8x16_t v19 = (int8x16_t)vmulq_f32(a7, a7);
  *(float32x2_t *)v19.i8 = vadd_f32(*(float32x2_t *)v19.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v19, v19, 8uLL));
  v19.i32[0] = vadd_f32(*(float32x2_t *)v19.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v19.i8, 1)).u32[0];
  float32x2_t v20 = vrsqrte_f32((float32x2_t)v19.u32[0]);
  float32x2_t v21 = vmul_f32(v20, vrsqrts_f32((float32x2_t)v19.u32[0], vmul_f32(v20, v20)));
  float32x4_t v22 = vmulq_n_f32(a7, vmul_f32(v21, vrsqrts_f32((float32x2_t)v19.u32[0], vmul_f32(v21, v21))).f32[0]);
  int8x16_t v23 = (int8x16_t)vmulq_f32(a8, a8);
  *(float32x2_t *)v23.i8 = vadd_f32(*(float32x2_t *)v23.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v23, v23, 8uLL));
  v23.i32[0] = vadd_f32(*(float32x2_t *)v23.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v23.i8, 1)).u32[0];
  float32x2_t v24 = vrsqrte_f32((float32x2_t)v23.u32[0]);
  float32x2_t v25 = vmul_f32(v24, vrsqrts_f32((float32x2_t)v23.u32[0], vmul_f32(v24, v24)));
  float32x4_t v26 = vmulq_n_f32(a8, vmul_f32(v25, vrsqrts_f32((float32x2_t)v23.u32[0], vmul_f32(v25, v25))).f32[0]);
  v36.columns[1] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a10, v22.f32[0]), a11, *(float32x2_t *)v22.f32, 1), a12, v22, 2), a13, v22, 3);
  simd_float4 v30 = v36.columns[1];
  float32x4_t v31 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a10, v18.f32[0]), a11, *(float32x2_t *)v18.f32, 1), a12, v18, 2), a13, v18, 3);
  v36.columns[3] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a10, a9.f32[0]), a11, *(float32x2_t *)a9.f32, 1), a12, a9, 2), a13, a9, 3);
  float32x4_t v28 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a10, v26.f32[0]), a11, *(float32x2_t *)v26.f32, 1), a12, v26, 2), a13, v26, 3);
  simd_float4 v29 = v36.columns[3];
  v36.columns[0] = (simd_float4)v31;
  v36.columns[2] = (simd_float4)v28;
  simd_float4x4 v37 = __invert_f4(v36);
  *(float32x4_t *)a1 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v37.columns[0], a2.f32[0]), (float32x4_t)v37.columns[1], *(float32x2_t *)a2.f32, 1), (float32x4_t)v37.columns[2], a2, 2), (float32x4_t)v37.columns[3], a2, 3);
  *(float32x4_t *)(a1 + 16) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v37.columns[0], a3.f32[0]), (float32x4_t)v37.columns[1], *(float32x2_t *)a3.f32, 1), (float32x4_t)v37.columns[2], a3, 2), (float32x4_t)v37.columns[3], a3, 3);
  *(float32x4_t *)(a1 + 32) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v37.columns[0], a4.f32[0]), (float32x4_t)v37.columns[1], *(float32x2_t *)a4.f32, 1), (float32x4_t)v37.columns[2], a4, 2), (float32x4_t)v37.columns[3], a4, 3);
  *(float32x4_t *)(a1 + 48) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v37.columns[0], a5.f32[0]), (float32x4_t)v37.columns[1], *(float32x2_t *)a5.f32, 1), (float32x4_t)v37.columns[2], a5, 2), (float32x4_t)v37.columns[3], a5, 3);
  *(float32x4_t *)(a1 + 64) = v31;
  *(simd_float4 *)(a1 + 80) = v30;
  __n128 result = (__n128)v29;
  *(float32x4_t *)(a1 + 96) = v28;
  *(simd_float4 *)(a1 + 112) = v29;
  return result;
}

void sub_24B5F900C(float a1)
{
  if (a1 <= 0.0) {
    __break(1u);
  }
}

double sub_24B5F9040(simd_float4x4 *a1, double a2, double a3, double a4, double a5, double a6, double a7, float32x4_t a8)
{
  OCBoundingBox.init(transform:)(&v58, a1);
  simd_float4 v56 = v58.transform.columns[1];
  simd_float4 v57 = v58.transform.columns[0];
  simd_float4 v54 = v58.transform.columns[3];
  simd_float4 v55 = v58.transform.columns[2];
  OCBoundingBox.rotation.getter(v59);
  float32x4_t v53 = v59[0];
  v58.transform.columns[0] = v57;
  v58.transform.columns[1] = v56;
  v58.transform.columns[2] = v55;
  v58.transform.columns[3] = v54;
  OCBoundingBox.rotation.getter(v60);
  int8x16_t v50 = (int8x16_t)v60[1];
  v58.transform.columns[0] = v57;
  v58.transform.columns[1] = v56;
  v58.transform.columns[2] = v55;
  v58.transform.columns[3] = v54;
  OCBoundingBox.rotation.getter(v61);
  float32x4_t v46 = v61[2];
  int32x4_t v8 = (int32x4_t)vmulq_f32(a8, a8);
  v8.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v8, 2), vadd_f32(*(float32x2_t *)v8.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v8.i8, 1))).u32[0];
  float32x2_t v9 = vrsqrte_f32((float32x2_t)v8.u32[0]);
  float32x2_t v10 = vmul_f32(v9, vrsqrts_f32((float32x2_t)v8.u32[0], vmul_f32(v9, v9)));
  float32x4_t v48 = vmulq_n_f32(a8, vmul_f32(v10, vrsqrts_f32((float32x2_t)v8.u32[0], vmul_f32(v10, v10))).f32[0]);
  sub_24B562F04(&qword_2697CD1C0);
  float32x4_t v11 = (float32x4_t *)swift_allocObject();
  *(float32x2_t *)v12.f32 = vsub_f32(0, *(float32x2_t *)v53.f32);
  v12.f32[2] = 0.0 - v53.f32[2];
  v12.i32[3] = 0;
  *(float32x2_t *)v13.i8 = vsub_f32(0, *(float32x2_t *)v46.f32);
  *(float *)&v13.i32[2] = 0.0 - v46.f32[2];
  v13.i32[3] = 0;
  v11[2] = v53;
  v11[3] = v12;
  float32x4_t v47 = v12;
  v11[4] = v46;
  v11[5] = (float32x4_t)v13;
  int8x16_t v52 = v13;
  v58.transform.columns[0].i64[0] = MEMORY[0x263F8EE78];
  sub_24B5A4C3C(0, 4, 0);
  uint64_t v14 = v58.transform.columns[0].i64[0];
  unint64_t v16 = *(void *)(v58.transform.columns[0].i64[0] + 16);
  unint64_t v15 = *(void *)(v58.transform.columns[0].i64[0] + 24);
  int64_t v17 = v15 >> 1;
  unint64_t v18 = v16 + 1;
  if (v15 >> 1 <= v16)
  {
    sub_24B5A4C3C(v15 > 1, v16 + 1, 1);
    uint64_t v14 = v58.transform.columns[0].i64[0];
    unint64_t v15 = *(void *)(v58.transform.columns[0].i64[0] + 24);
    int64_t v17 = v15 >> 1;
  }
  float32x4_t v19 = v48;
  float32x4_t v20 = vmulq_f32(v48, v53);
  *(void *)(v14 + 16) = v18;
  *(_DWORD *)(v14 + 4 * v16 + 32) = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v20, 2), vaddq_f32(v20, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v20.f32, 1))).u32[0];
  int64_t v21 = v16 + 2;
  if (v17 < v21)
  {
    sub_24B5A4C3C(v15 > 1, v21, 1);
    float32x4_t v19 = v48;
    uint64_t v14 = v58.transform.columns[0].i64[0];
  }
  float32x4_t v22 = vmulq_f32(v19, v47);
  *(void *)(v14 + 16) = v21;
  *(_DWORD *)(v14 + 4 * v18 + 32) = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v22, 2), vaddq_f32(v22, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v22.f32, 1))).u32[0];
  float32x4_t v23 = v11[4];
  unint64_t v25 = *(void *)(v14 + 16);
  unint64_t v24 = *(void *)(v14 + 24);
  unint64_t v26 = v25 + 1;
  if (v25 >= v24 >> 1)
  {
    float32x4_t v44 = v11[4];
    sub_24B5A4C3C(v24 > 1, v25 + 1, 1);
    float32x4_t v23 = v44;
    float32x4_t v19 = v48;
  }
  float32x4_t v27 = vmulq_f32(v19, v23);
  uint64_t v28 = v58.transform.columns[0].i64[0];
  *(void *)(v58.transform.columns[0].i64[0] + 16) = v26;
  *(_DWORD *)(v28 + 4 * v25 + 32) = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v27, 2), vaddq_f32(v27, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v27.f32, 1))).u32[0];
  float32x4_t v29 = v11[5];
  unint64_t v30 = *(void *)(v28 + 24);
  int64_t v31 = v25 + 2;
  if (v31 > (uint64_t)(v30 >> 1))
  {
    float32x4_t v45 = v11[5];
    sub_24B5A4C3C(v30 > 1, v31, 1);
    float32x4_t v29 = v45;
    float32x4_t v19 = v48;
    uint64_t v28 = v58.transform.columns[0].i64[0];
  }
  float32x4_t v32 = vmulq_f32(v19, v29);
  *(void *)(v28 + 16) = v31;
  *(_DWORD *)(v28 + 4 * v26 + 32) = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v32, 2), vaddq_f32(v32, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v32.f32, 1))).u32[0];
  swift_setDeallocating();
  swift_deallocClassInstance();
  int64_t v33 = sub_24B5FF2C4(0, *(void *)(v28 + 16), v28);
  char v35 = v34;
  swift_release();
  v58.transform.columns[0] = v57;
  v58.transform.columns[1] = v56;
  v58.transform.columns[2] = v55;
  v58.transform.columns[3] = v54;
  *(__n64 *)v36.f32 = OCBoundingBox.extent.getter();
  float32x4_t v49 = v36;
  v58.transform.columns[0] = v57;
  v58.transform.columns[1] = v56;
  v58.transform.columns[2] = v55;
  v58.transform.columns[3] = v54;
  OCBoundingBox.rotation.getter((float32x4_t *)&v62);
  if (v35)
  {
    int8x16_t v50 = v63;
    int8x16_t v52 = v62;
    float32x4_t v53 = (float32x4_t)v64;
  }
  else if (v33 == 1)
  {
    int8x16_t v40 = (int8x16_t)vrev64q_s32((int32x4_t)v49);
    float32x4_t v49 = (float32x4_t)vextq_s8(v40, v40, 0xCuLL);
    int8x16_t v52 = (int8x16_t)v46;
    float32x4_t v53 = v47;
  }
  else if (v33)
  {
    v37.i64[0] = v33;
    v38.i64[0] = 3;
    int8x16_t v41 = (int8x16_t)vdupq_lane_s64(vceqq_s64(v37, v38).i64[0], 0);
    float32x4_t v53 = (float32x4_t)vbslq_s8(v41, v52, v64);
    int8x16_t v50 = vbslq_s8(v41, v50, v63);
    int8x16_t v52 = vbslq_s8(v41, (int8x16_t)v47, v62);
  }
  else
  {
    int8x16_t v39 = (int8x16_t)vrev64q_s32((int32x4_t)v49);
    float32x4_t v49 = (float32x4_t)vextq_s8(v39, v39, 0xCuLL);
  }
  v58.transform.columns[0] = v57;
  v58.transform.columns[1] = v56;
  v58.transform.columns[2] = v55;
  v58.transform.columns[3] = v54;
  __n128 v42 = OCBoundingBox.position.getter();
  v65[0] = v52;
  v65[1] = v50;
  v65[2] = (int8x16_t)v53;
  OCBoundingBox.init(position:extent:rotation:)((uint64_t)v65, (uint64_t)&v58, v42, v49);
  return *(double *)v58.transform.columns[0].i64;
}

uint64_t sub_24B5F94A8(float32x4_t a1, float32x4_t a2, float32x4_t a3, int8x16_t a4)
{
  int8x16_t v4 = (int8x16_t)vmulq_f32(a1, a1);
  *(float32x2_t *)v4.i8 = vadd_f32(*(float32x2_t *)v4.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v4, v4, 8uLL));
  v4.i32[0] = vadd_f32(*(float32x2_t *)v4.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v4.i8, 1)).u32[0];
  float32x2_t v5 = vrsqrte_f32((float32x2_t)v4.u32[0]);
  float32x2_t v6 = vmul_f32(v5, vrsqrts_f32((float32x2_t)v4.u32[0], vmul_f32(v5, v5)));
  float32x4_t v7 = vmulq_n_f32(a1, vmul_f32(v6, vrsqrts_f32((float32x2_t)v4.u32[0], vmul_f32(v6, v6))).f32[0]);
  int8x16_t v8 = (int8x16_t)vmulq_f32(a2, a2);
  *(float32x2_t *)v8.i8 = vadd_f32(*(float32x2_t *)v8.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v8, v8, 8uLL));
  v8.i32[0] = vadd_f32(*(float32x2_t *)v8.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v8.i8, 1)).u32[0];
  float32x2_t v9 = vrsqrte_f32((float32x2_t)v8.u32[0]);
  float32x2_t v10 = vmul_f32(v9, vrsqrts_f32((float32x2_t)v8.u32[0], vmul_f32(v9, v9)));
  float32x4_t v11 = vmulq_n_f32(a2, vmul_f32(v10, vrsqrts_f32((float32x2_t)v8.u32[0], vmul_f32(v10, v10))).f32[0]);
  int8x16_t v12 = (int8x16_t)vmulq_f32(a3, a3);
  *(float32x2_t *)v12.i8 = vadd_f32(*(float32x2_t *)v12.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v12, v12, 8uLL));
  v12.i32[0] = vadd_f32(*(float32x2_t *)v12.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v12.i8, 1)).u32[0];
  float32x2_t v13 = vrsqrte_f32((float32x2_t)v12.u32[0]);
  float32x2_t v14 = vmul_f32(v13, vrsqrts_f32((float32x2_t)v12.u32[0], vmul_f32(v13, v13)));
  return sub_24B5FAC44(v7, v11, vmulq_n_f32(a3, vmul_f32(v14, vrsqrts_f32((float32x2_t)v12.u32[0], vmul_f32(v14, v14))).f32[0]), a4);
}

void __swiftcall getRotatedPlaneTransform(_:)(simd_float4x4 *__return_ptr retstr, ARPlaneAnchor *a2)
{
  [(ARPlaneAnchor *)a2 transform];
  float32x2_t v3 = [(ARPlaneAnchor *)a2 planeExtent];
  [(ARPlaneExtent *)v3 rotationOnYAxis];
  float v5 = v4;

  __float2 v6 = __sincosf_stret(v5 * 0.5);
  __n128 v7 = (__n128)vmulq_n_f32((float32x4_t)xmmword_24B686990, v6.__sinval);
  v7.n128_u32[3] = LODWORD(v6.__cosval);
  MEMORY[0x24C5D4C30](v7);
}

float sub_24B5F9644(void *a1, void *a2)
{
  objc_msgSend(a1, sel_transform);
  float32x4_t v6 = v3;
  objc_msgSend(a2, sel_transform);
  return fabsf(COERCE_FLOAT(vsubq_f32(v6, v4).i32[1]));
}

uint64_t sub_24B5F9698(int a1)
{
  v1.i32[0] = BYTE1(a1);
  v1.i32[1] = BYTE2(a1);
  uint32x2_t v2 = vshl_u32((uint32x2_t)vand_s8(v1, (int8x8_t)0xFF000000FFLL), (uint32x2_t)0x800000010);
  return v2.i32[0] | (a1 << 24) | v2.i32[1] | 0xFFu;
}

void sub_24B5F96D8(uint64_t a1@<X0>, char a2@<W1>, simd_float4 *a3@<X8>)
{
  float v5 = *(uint64_t (**)(void))(*(void *)a1 + 96);
  if (v5() > 0 && (uint64_t v6 = (*(uint64_t (**)(void))(*(void *)a1 + 136))()) != 0)
  {
    uint64_t v7 = v6;
    uint64_t v8 = v5();
    float32x2_t v10 = (void *)sub_24B5F9AA0(v8, (__n128)0, (__n128)0, (__n128)0);
    uint64_t v11 = v10[2];
    if (v11)
    {
      uint64_t v12 = 0;
      unint64_t v13 = 0;
      while (1)
      {
        uint64_t v14 = v7 + v12 * 8;
        long long v15 = *(_OWORD *)(v7 + v12 * 8);
        float v16 = floorf(*(float *)&v15);
        if ((~LODWORD(v16) & 0x7F800000) == 0) {
          break;
        }
        if (v16 <= -2147500000.0) {
          goto LABEL_29;
        }
        if (v16 >= 2147500000.0) {
          goto LABEL_30;
        }
        float v17 = floorf(*((float *)&v15 + 1));
        if ((~LODWORD(v17) & 0x7F800000) == 0) {
          goto LABEL_31;
        }
        if (v17 <= -2147500000.0) {
          goto LABEL_32;
        }
        if (v17 >= 2147500000.0) {
          goto LABEL_33;
        }
        float v18 = floorf(*((float *)&v15 + 2));
        if ((~LODWORD(v18) & 0x7F800000) == 0) {
          goto LABEL_34;
        }
        if (v18 <= -2147500000.0) {
          goto LABEL_35;
        }
        if (v18 >= 2147500000.0) {
          goto LABEL_36;
        }
        float32x4_t v47 = *(float32x4_t *)(v14 + 16);
        unsigned int v19 = *(_DWORD *)(v14 + 32);
        float v20 = *(float *)(v14 + 36);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          float32x2_t v10 = sub_24B5678E0(v10);
        }
        unint64_t v21 = v10[2];
        if (v13 >= v21) {
          goto LABEL_37;
        }
        v24.i32[3] = 1;
        v24.i32[0] = (int)v16;
        v24.i32[1] = (int)v17;
        v24.i32[2] = (int)v18;
        float32x4_t v22 = (float32x4_t *)&v10[v12];
        float32x4_t v23 = v47;
        v23.i32[3] = 0;
        v22[2] = v24;
        v22[3] = v23;
        v24.f32[0] = (float)HIBYTE(v19) / 255.0;
        float32x4_t v25 = v24;
        v25.f32[1] = (float)BYTE2(v19) / 255.0;
        float32x4_t v26 = v25;
        v26.f32[2] = (float)BYTE1(v19) / 255.0;
        float32x4_t v27 = v26;
        v27.f32[3] = (float)v19 / 255.0;
        if (a2)
        {
          if (qword_2697CE920 != -1)
          {
            float32x4_t v48 = v27;
            uint64_t v43 = v25.i64[0];
            float32x4_t v41 = v26;
            swift_once();
            float32x4_t v26 = v41;
            v25.i64[0] = v43;
            v24.f32[0] = (float)HIBYTE(v19) / 255.0;
            float32x4_t v27 = v48;
          }
          float32x4_t v29 = *(float32x4_t *)zmmword_2697D0CD0;
          float32x4_t v28 = *(float32x4_t *)&zmmword_2697D0CD0[16];
          float32x4_t v31 = *(float32x4_t *)&zmmword_2697D0CD0[32];
          float32x4_t v30 = *(float32x4_t *)&zmmword_2697D0CD0[48];
          if (qword_2697CE918 != -1)
          {
            float32x4_t v49 = v27;
            uint64_t v44 = v25.i64[0];
            __int32 v45 = v24.i32[0];
            float32x4_t v40 = *(float32x4_t *)&zmmword_2697D0CD0[48];
            float32x4_t v42 = v26;
            float32x4_t v38 = *(float32x4_t *)&zmmword_2697D0CD0[16];
            float32x4_t v39 = *(float32x4_t *)&zmmword_2697D0CD0[32];
            float32x4_t v37 = *(float32x4_t *)zmmword_2697D0CD0;
            swift_once();
            float32x4_t v29 = v37;
            float32x4_t v28 = v38;
            float32x4_t v31 = v39;
            float32x4_t v30 = v40;
            float32x4_t v26 = v42;
            v25.i64[0] = v44;
            v24.i32[0] = v45;
            float32x4_t v27 = v49;
          }
          float32x4_t v32 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v29, v24.f32[0]), v28, *(float32x2_t *)v25.f32, 1), v31, v26, 2), v30, v27, 3);
          float32x4_t v27 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(*(float32x4_t *)zmmword_2697D0C90, v20 * v32.f32[0]), *(float32x4_t *)&zmmword_2697D0C90[16], *(float32x2_t *)v32.f32, 1), *(float32x4_t *)&zmmword_2697D0C90[32], v32, 2), *(float32x4_t *)&zmmword_2697D0C90[48], v32, 3);
          unint64_t v21 = v10[2];
        }
        if (v13 >= v21) {
          goto LABEL_38;
        }
        ++v13;
        *(float32x4_t *)&v10[v12 + 8] = v27;
        v12 += 6;
        if (v11 == v13) {
          goto LABEL_27;
        }
      }
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
    }
    else
    {
LABEL_27:
      OCVoxelCloud.init(voxels:transform:)(&v50, (Swift::OpaquePointer)v10, v9);
      simd_float4 v33 = v50.transform.columns[0];
      simd_float4 v34 = v50.transform.columns[1];
      simd_float4 v35 = v50.transform.columns[2];
      simd_float4 v36 = v50.transform.columns[3];
      a3->i64[0] = (uint64_t)v50.voxels._rawValue;
      a3->i64[1] = 0;
      a3[1] = v33;
      a3[2] = v34;
      a3[3] = v35;
      a3[4] = v36;
    }
  }
  else
  {
    a3[3] = 0u;
    a3[4] = 0u;
    a3[1] = 0u;
    a3[2] = 0u;
    *a3 = 0u;
  }
}

uint64_t sub_24B5F9AA0(uint64_t a1, __n128 a2, __n128 a3, __n128 a4)
{
  if (a1 < 0)
  {
    uint64_t result = sub_24B682EE0();
    __break(1u);
  }
  else
  {
    uint64_t v4 = a1;
    if (a1)
    {
      type metadata accessor for OCVoxel(0);
      uint64_t result = sub_24B6829F0();
      *(void *)(result + 16) = v4;
      uint64_t v6 = 32;
      do
      {
        uint64_t v7 = (__n128 *)(result + v6);
        *uint64_t v7 = a2;
        v7[1] = a3;
        v7[2] = a4;
        v6 += 48;
        --v4;
      }
      while (v4);
    }
    else
    {
      return MEMORY[0x263F8EE78];
    }
  }
  return result;
}

uint64_t sub_24B5F9B68(uint64_t a1, __n128 a2, __n128 a3, __n128 a4)
{
  if (a1 < 0)
  {
    uint64_t result = sub_24B682EE0();
    __break(1u);
  }
  else
  {
    uint64_t v4 = a1;
    if (a1)
    {
      type metadata accessor for OCPoint(0);
      uint64_t result = sub_24B6829F0();
      *(void *)(result + 16) = v4;
      uint64_t v6 = 32;
      do
      {
        uint64_t v7 = (__n128 *)(result + v6);
        *uint64_t v7 = a2;
        v7[1] = a3;
        v7[2] = a4;
        v6 += 48;
        --v4;
      }
      while (v4);
    }
    else
    {
      return MEMORY[0x263F8EE78];
    }
  }
  return result;
}

uint64_t sub_24B5F9C30(unsigned int a1, unint64_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_24B682EE0();
    __break(1u);
    return result;
  }
  if (!a2) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t result = sub_24B6829F0();
  *(void *)(result + 16) = a2;
  float v5 = (unsigned int *)(result + 32);
  if (a2 < 8)
  {
    unint64_t v6 = 0;
LABEL_9:
    unint64_t v10 = a2 - v6;
    do
    {
      *v5++ = a1;
      --v10;
    }
    while (v10);
    return result;
  }
  unint64_t v6 = a2 & 0xFFFFFFFFFFFFFFF8;
  v5 += a2 & 0xFFFFFFFFFFFFFFF8;
  int32x4_t v7 = vdupq_n_s32(a1);
  uint64_t v8 = (int32x4_t *)(result + 48);
  unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFF8;
  do
  {
    v8[-1] = v7;
    *uint64_t v8 = v7;
    v8 += 2;
    v9 -= 8;
  }
  while (v9);
  if (v6 != a2) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_24B5F9D1C@<X0>(uint64_t a1@<X0>, char a2@<W1>, __n128 *a3@<X8>, __n128 a4@<Q0>, __n128 a5@<Q1>, __n128 a6@<Q2>, __n128 a7@<Q3>)
{
  unint64_t v10 = *(uint64_t (**)(void))(*(void *)a1 + 96);
  uint64_t result = v10();
  if (result > 0 && (uint64_t result = (*(uint64_t (**)(void))(*(void *)a1 + 136))()) != 0)
  {
    uint64_t v12 = result;
    uint64_t v13 = v10();
    uint64_t v14 = (void *)sub_24B5F9B68(v13, (__n128)0, (__n128)0, (__n128)0);
    uint64_t v15 = v14[2];
    if (v15)
    {
      unint64_t v16 = 0;
      unint64_t v17 = 0;
      while (1)
      {
        long long v50 = *(_OWORD *)(v12 + v16 + 16);
        long long v52 = *(_OWORD *)(v12 + v16);
        unsigned int v18 = *(_DWORD *)(v12 + v16 + 32);
        float v19 = *(float *)(v12 + v16 + 36);
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_24B5FEC68(v14);
          uint64_t v14 = (void *)result;
        }
        unint64_t v21 = v14[2];
        if (v17 >= v21) {
          break;
        }
        long long v23 = v50;
        long long v22 = v52;
        HIDWORD(v22) = 1.0;
        float32x4_t v24 = &v14[v16 / 8];
        HIDWORD(v23) = 0;
        *((_OWORD *)v24 + 2) = v22;
        *((_OWORD *)v24 + 3) = v23;
        v20.f32[0] = (float)HIBYTE(v18) / 255.0;
        float32x4_t v25 = v20;
        v25.f32[1] = (float)BYTE2(v18) / 255.0;
        float32x4_t v26 = v25;
        v26.f32[2] = (float)BYTE1(v18) / 255.0;
        float32x4_t v27 = v26;
        v27.f32[3] = (float)v18 / 255.0;
        if (a2)
        {
          if (qword_2697CE920 != -1)
          {
            float32x4_t v53 = v27;
            float32x4_t v42 = v26;
            uint64_t v44 = v25.i64[0];
            uint64_t result = swift_once();
            float32x4_t v26 = v42;
            v25.i64[0] = v44;
            v20.f32[0] = (float)HIBYTE(v18) / 255.0;
            float32x4_t v27 = v53;
          }
          float32x4_t v28 = *(float32x4_t *)zmmword_2697D0CD0;
          float32x4_t v29 = *(float32x4_t *)&zmmword_2697D0CD0[16];
          float32x4_t v31 = *(float32x4_t *)&zmmword_2697D0CD0[32];
          float32x4_t v30 = *(float32x4_t *)&zmmword_2697D0CD0[48];
          if (qword_2697CE918 != -1)
          {
            __int32 v51 = v20.i32[0];
            float32x4_t v54 = v27;
            float32x4_t v43 = v26;
            uint64_t v45 = v25.i64[0];
            float32x4_t v40 = *(float32x4_t *)&zmmword_2697D0CD0[32];
            float32x4_t v41 = *(float32x4_t *)&zmmword_2697D0CD0[48];
            float32x4_t v38 = *(float32x4_t *)zmmword_2697D0CD0;
            float32x4_t v39 = *(float32x4_t *)&zmmword_2697D0CD0[16];
            uint64_t result = swift_once();
            float32x4_t v28 = v38;
            float32x4_t v29 = v39;
            float32x4_t v31 = v40;
            float32x4_t v30 = v41;
            float32x4_t v26 = v43;
            v25.i64[0] = v45;
            v20.i32[0] = v51;
            float32x4_t v27 = v54;
          }
          float32x4_t v32 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v28, v20.f32[0]), v29, *(float32x2_t *)v25.f32, 1), v31, v26, 2), v30, v27, 3);
          float32x4_t v27 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(*(float32x4_t *)zmmword_2697D0C90, v19 * v32.f32[0]), *(float32x4_t *)&zmmword_2697D0C90[16], *(float32x2_t *)v32.f32, 1), *(float32x4_t *)&zmmword_2697D0C90[32], v32, 2), *(float32x4_t *)&zmmword_2697D0C90[48], v32, 3);
          unint64_t v21 = v14[2];
        }
        if (v17 >= v21) {
          goto LABEL_20;
        }
        ++v17;
        *(float32x4_t *)&v14[v16 / 8 + 8] = v27;
        v16 += 48;
        if (v15 == v17) {
          goto LABEL_18;
        }
      }
      __break(1u);
LABEL_20:
      __break(1u);
    }
    else
    {
LABEL_18:
      uint64_t result = sub_24B6734F0((unint64_t)v14, v55, a4, a5, a6, a7);
      __n128 v33 = v55[1];
      __n128 v34 = v55[2];
      __n128 v35 = v55[3];
      unint64_t v37 = v56;
      unint64_t v36 = v57;
      a3->n128_u64[0] = v55[0].n128_u64[0];
      a3->n128_u64[1] = 0;
      a3[1] = v33;
      a3[2] = v34;
      a3[3] = v35;
      a3[4].n128_u64[0] = v37;
      a3[4].n128_u64[1] = v36;
    }
  }
  else
  {
    a3[3] = 0u;
    a3[4] = 0u;
    a3[1] = 0u;
    a3[2] = 0u;
    *a3 = 0u;
  }
  return result;
}

__n128 sub_24B5F9FFC@<Q0>(__n128 *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = a1->n128_u64[1];
  if (!v3) {
    goto LABEL_15;
  }
  unint64_t v4 = a1->n128_u64[0];
  __n128 v39 = a1[3];
  __n128 v40 = a1[2];
  __n128 v37 = a1[5];
  __n128 v38 = a1[4];
  float v5 = *(uint64_t (**)(void))(*(void *)a1->n128_u64[0] + 96);
  uint64_t v6 = swift_retain();
  if (((uint64_t (*)(uint64_t))v5)(v6) <= 0
    || (uint64_t v7 = (*(uint64_t (**)(void))(*(void *)v4 + 136))()) == 0
    || (uint64_t v8 = v7, (v9 = (*(uint64_t (**)(void))(*(void *)v3 + 136))()) == 0))
  {
    swift_release();
LABEL_15:
    result.n128_u64[0] = 0;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
    return result;
  }
  uint64_t v10 = v9;
  uint64_t v11 = v5();
  uint64_t v12 = (void *)sub_24B5F9B68(v11, (__n128)0, (__n128)0, (__n128)0);
  uint64_t v13 = v12[2];
  if (v13)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_24B5FEC68(v12);
    }
    unint64_t v15 = 0;
    v16.i64[0] = 0xFF000000FFLL;
    v16.i64[1] = 0xFF000000FFLL;
    float32x4_t v17 = (float32x4_t)vdupq_n_s32(0x437F0000u);
    do
    {
      unsigned __int32 v18 = *(_DWORD *)(v8 + v15 + 32);
      v14.i32[0] = v18;
      unsigned __int32 v19 = vshrq_n_u32((uint32x4_t)v14, 0x18uLL).u32[0];
      v14.i32[1] = HIWORD(v18);
      v14.i32[2] = v18 >> 8;
      long long v20 = *(_OWORD *)(v8 + v15);
      long long v21 = *(_OWORD *)(v8 + v15 + 16);
      v14.i32[3] = v18;
      uint32x4_t v22 = (uint32x4_t)vandq_s8(v14, v16);
      v22.i32[0] = v19;
      HIDWORD(v20) = 1.0;
      long long v23 = &v12[v15 / 8];
      HIDWORD(v21) = 0;
      v23[2] = v20;
      v23[3] = v21;
      int8x16_t v14 = (int8x16_t)vdivq_f32(vcvtq_f32_u32(v22), v17);
      v23[4] = v14;
      v15 += 48;
      --v13;
    }
    while (v13);
  }
  unint64_t v24 = (*(uint64_t (**)(void))(*(void *)v3 + 96))();
  unint64_t v25 = sub_24B5F9C30(0, v24);
  unint64_t v26 = *(void *)(v25 + 16);
  if (!v26) {
    goto LABEL_23;
  }
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    if (v26 < 8)
    {
LABEL_13:
      uint64_t v27 = 0;
      goto LABEL_22;
    }
  }
  else
  {
    unint64_t v25 = (unint64_t)sub_24B5FEC7C(v25);
    if (v26 < 8) {
      goto LABEL_13;
    }
  }
  if (v25 - v10 < 0xFFFFFFFFFFFFFFE0)
  {
    uint64_t v29 = 0;
    uint64_t v27 = v26 & 0x7FFFFFFFFFFFFFF8;
    uint64_t v30 = v26 & 0x7FFFFFFFFFFFFFF8;
    do
    {
      long long v31 = *(_OWORD *)(v10 + v29 + 16);
      uint64_t v32 = v25 + v29;
      *(_OWORD *)(v32 + 32) = *(_OWORD *)(v10 + v29);
      *(_OWORD *)(v32 + 48) = v31;
      v29 += 32;
      v30 -= 8;
    }
    while (v30);
    if (v26 == v27) {
      goto LABEL_23;
    }
  }
  else
  {
    uint64_t v27 = 0;
  }
  do
  {
LABEL_22:
    *(_DWORD *)(v25 + 4 * v27 + 32) = *(_DWORD *)(v10 + 4 * v27);
    ++v27;
  }
  while (v26 != v27);
LABEL_23:
  sub_24B673594((unint64_t)v12, v25, v41, v40, v39, v38, v37);
  swift_release();
  __n128 result = v41[2];
  __n128 v33 = v41[3];
  uint64_t v35 = v42;
  uint64_t v34 = v43;
  __n128 v36 = v41[1];
  *(__n128 *)a2 = v41[0];
  *(__n128 *)(a2 + 16) = v36;
  *(__n128 *)(a2 + 32) = result;
  *(__n128 *)(a2 + 48) = v33;
  *(void *)(a2 + 64) = v35;
  *(void *)(a2 + 72) = v34;
  return result;
}

unsigned char *sub_24B5FA2D8(void *a1)
{
  int v2 = objc_msgSend(a1, sel_length);
  if (v2 < 1) {
    return 0;
  }
  uint64_t v3 = 0;
  uint64_t v4 = v2;
  while (1)
  {
    __n128 result = objc_msgSend(a1, sel_echoIds);
    if (!result[v3]) {
      break;
    }
    if (__OFADD__(v3, 3)) {
      uint64_t v3 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      v3 += 3;
    }
    if (v3 >= v4) {
      return 0;
    }
  }
  BOOL v6 = __OFADD__(v3, 2);
  uint64_t v7 = v3 + 2;
  if (!v6)
  {
    if (v7 < v4) {
      return (unsigned char *)(*((unsigned char *)objc_msgSend(a1, sel_echoIds) + v7) == 2);
    }
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_24B5FA388@<X0>(void *a1@<X0>, char a2@<W1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  unsigned __int8 v7 = sub_24B5FA2D8(a1);
  unsigned __int8 v8 = v7;
  *a3 = v7 & 1;
  if (v7) {
    float v9 = 0.8;
  }
  else {
    float v9 = 0.9;
  }
  if (v7) {
    uint64_t v10 = 3;
  }
  else {
    uint64_t v10 = 2;
  }
  OCDepthPointCloud.init()(&v85);
  uint64_t result = (uint64_t)objc_msgSend(a1, sel_length);
  if ((int)result >= 1)
  {
    uint64_t v12 = 0;
    char v84 = v8 & a2;
    uint64_t v13 = (int)result;
    do
    {
      uint64_t v15 = v12;
      BOOL v16 = __OFADD__(v12, v10);
      v12 += v10;
      if (v16) {
        uint64_t v17 = 0x7FFFFFFFFFFFFFFFLL;
      }
      else {
        uint64_t v17 = v12;
      }
      uint64_t result = (uint64_t)objc_msgSend(a1, sel_echoIds);
      if (!*(unsigned char *)(result + v15))
      {
        if (v84)
        {
          uint64_t v18 = v15 + 2;
          if (__OFADD__(v15, 2))
          {
            __break(1u);
            return result;
          }
          goto LABEL_29;
        }
        float v19 = *((float *)objc_msgSend(a1, sel_confidences) + v15);
        float v20 = *((float *)objc_msgSend(a1, sel_confidences) + v15 + 1);
        long long v78 = *((_OWORD *)objc_msgSend(a1, sel_points) + v15);
        uint64_t result = (uint64_t)objc_msgSend(a1, sel_points);
        if (v9 < (float)(v19 - v20))
        {
          uint64_t v18 = v15;
LABEL_29:
          if (v18 != -1)
          {
            uint64_t result = (uint64_t)objc_msgSend(a1, sel_points);
            if (fabsf(*(float *)(result + 16 * v18 + 8)) >= 0.000001)
            {
              char v79 = *((unsigned char *)objc_msgSend(a1, sel_bankIds) + v18);
              uint32x4_t v22 = (char *)v85;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint32x4_t v22 = sub_24B5FE140(0, *((void *)v22 + 2) + 1, 1, v22);
              }
              unint64_t v24 = *((void *)v22 + 2);
              unint64_t v23 = *((void *)v22 + 3);
              unint64_t v25 = v24 + 1;
              if (v24 >= v23 >> 1)
              {
                int8x16_t v63 = sub_24B5FE140((char *)(v23 > 1), v24 + 1, 1, v22);
                unint64_t v25 = v24 + 1;
                uint32x4_t v22 = v63;
              }
              *((void *)v22 + 2) = v25;
              v22[v24 + 32] = v79;
              *(void *)&long long v85 = v22;
              char v80 = *((unsigned char *)objc_msgSend(a1, sel_spotIds) + v18);
              unint64_t v26 = (char *)*((void *)&v85 + 1);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v26 = sub_24B5FE140(0, *((void *)v26 + 2) + 1, 1, v26);
              }
              unint64_t v28 = *((void *)v26 + 2);
              unint64_t v27 = *((void *)v26 + 3);
              unint64_t v29 = v28 + 1;
              if (v28 >= v27 >> 1)
              {
                int8x16_t v64 = sub_24B5FE140((char *)(v27 > 1), v28 + 1, 1, v26);
                unint64_t v29 = v28 + 1;
                unint64_t v26 = v64;
              }
              *((void *)v26 + 2) = v29;
              v26[v28 + 32] = v80;
              *((void *)&v85 + 1) = v26;
              char v81 = *((unsigned char *)objc_msgSend(a1, sel_echoIds) + v18);
              uint64_t v30 = (char *)v86;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v30 = sub_24B5FE140(0, *((void *)v30 + 2) + 1, 1, v30);
              }
              unint64_t v32 = *((void *)v30 + 2);
              unint64_t v31 = *((void *)v30 + 3);
              unint64_t v33 = v32 + 1;
              if (v32 >= v31 >> 1)
              {
                float v65 = sub_24B5FE140((char *)(v31 > 1), v32 + 1, 1, v30);
                unint64_t v33 = v32 + 1;
                uint64_t v30 = v65;
              }
              *((void *)v30 + 2) = v33;
              v30[v32 + 32] = v81;
              *(void *)&long long v86 = v30;
              int v34 = *((_DWORD *)objc_msgSend(a1, sel_euclideanDistances) + v18);
              uint64_t v35 = (char *)*((void *)&v86 + 1);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v35 = sub_24B58ACBC(0, *((void *)v35 + 2) + 1, 1, v35);
              }
              unint64_t v37 = *((void *)v35 + 2);
              unint64_t v36 = *((void *)v35 + 3);
              unint64_t v38 = v37 + 1;
              if (v37 >= v36 >> 1)
              {
                v66 = sub_24B58ACBC((char *)(v36 > 1), v37 + 1, 1, v35);
                unint64_t v38 = v37 + 1;
                uint64_t v35 = v66;
              }
              *((void *)v35 + 2) = v38;
              *(_DWORD *)&v35[4 * v37 + 32] = v34;
              *((void *)&v86 + 1) = v35;
              int v39 = *((_DWORD *)objc_msgSend(a1, sel_confidences) + v18);
              __n128 v40 = (char *)v87;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                __n128 v40 = sub_24B58ACBC(0, *((void *)v40 + 2) + 1, 1, v40);
              }
              unint64_t v42 = *((void *)v40 + 2);
              unint64_t v41 = *((void *)v40 + 3);
              unint64_t v43 = v42 + 1;
              if (v42 >= v41 >> 1)
              {
                v67 = sub_24B58ACBC((char *)(v41 > 1), v42 + 1, 1, v40);
                unint64_t v43 = v42 + 1;
                __n128 v40 = v67;
              }
              *((void *)v40 + 2) = v43;
              *(_DWORD *)&v40[4 * v42 + 32] = v39;
              *(void *)&long long v87 = v40;
              int v44 = *((_DWORD *)objc_msgSend(a1, sel_intensities) + v18);
              uint64_t v45 = (char *)*((void *)&v87 + 1);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v45 = sub_24B58ACBC(0, *((void *)v45 + 2) + 1, 1, v45);
              }
              unint64_t v47 = *((void *)v45 + 2);
              unint64_t v46 = *((void *)v45 + 3);
              unint64_t v48 = v47 + 1;
              if (v47 >= v46 >> 1)
              {
                v68 = sub_24B58ACBC((char *)(v46 > 1), v47 + 1, 1, v45);
                unint64_t v48 = v47 + 1;
                uint64_t v45 = v68;
              }
              *((void *)v45 + 2) = v48;
              *(_DWORD *)&v45[4 * v47 + 32] = v44;
              *((void *)&v87 + 1) = v45;
              int v49 = *((_DWORD *)objc_msgSend(a1, sel_signalToNoiseRatios) + v18);
              long long v50 = (char *)v88;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                long long v50 = sub_24B58ACBC(0, *((void *)v50 + 2) + 1, 1, v50);
              }
              unint64_t v52 = *((void *)v50 + 2);
              unint64_t v51 = *((void *)v50 + 3);
              unint64_t v53 = v52 + 1;
              if (v52 >= v51 >> 1)
              {
                v69 = sub_24B58ACBC((char *)(v51 > 1), v52 + 1, 1, v50);
                unint64_t v53 = v52 + 1;
                long long v50 = v69;
              }
              *((void *)v50 + 2) = v53;
              *(_DWORD *)&v50[4 * v52 + 32] = v49;
              *(void *)&long long v88 = v50;
              long long v82 = *((_OWORD *)objc_msgSend(a1, sel_cameraPixels) + v18);
              float32x4_t v54 = (void *)*((void *)&v88 + 1);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                float32x4_t v54 = sub_24B5FE030(0, v54[2] + 1, 1, v54);
              }
              unint64_t v56 = v54[2];
              unint64_t v55 = v54[3];
              unint64_t v57 = v56 + 1;
              if (v56 >= v55 >> 1)
              {
                v70 = sub_24B5FE030((void *)(v55 > 1), v56 + 1, 1, v54);
                unint64_t v57 = v56 + 1;
                float32x4_t v54 = v70;
              }
              v54[2] = v57;
              *(_OWORD *)&v54[2 * v56 + 4] = v82;
              *((void *)&v88 + 1) = v54;
              long long v83 = *((_OWORD *)objc_msgSend(a1, sel_points) + v18);
              long long v75 = *((_OWORD *)objc_msgSend(a1, sel_points) + v18);
              float32x4_t v74 = *((float32x4_t *)objc_msgSend(a1, sel_points) + v18);
              CoreOC::OCBoundingBox v58 = v89;
              uint64_t result = swift_isUniquelyReferenced_nonNull_native();
              if ((result & 1) == 0)
              {
                uint64_t result = (uint64_t)sub_24B57C038(0, v58[2] + 1, 1, v58);
                CoreOC::OCBoundingBox v58 = (void *)result;
              }
              unint64_t v60 = v58[2];
              unint64_t v59 = v58[3];
              unint64_t v61 = v60 + 1;
              unsigned int v62 = v76;
              if (v60 >= v59 >> 1)
              {
                uint64_t result = (uint64_t)sub_24B57C038((void *)(v59 > 1), v60 + 1, 1, v58);
                unsigned int v62 = v76;
                unint64_t v61 = v60 + 1;
                CoreOC::OCBoundingBox v58 = (void *)result;
              }
              *(float32x2_t *)&long long v14 = vmul_f32((float32x2_t)__PAIR64__(DWORD1(v75), v83), (float32x2_t)0xBA83126F3A83126FLL);
              *((void *)&v14 + 1) = __PAIR64__(v62, COERCE_UNSIGNED_INT(vmuls_lane_f32(-0.001, v74, 2)));
              v58[2] = v61;
              *(_OWORD *)&v58[2 * v60 + 4] = v14;
              v89 = v58;
              unsigned int v76 = HIDWORD(v14);
            }
          }
          continue;
        }
        uint64_t v18 = v15 + 1;
        if ((float)(v19 - v20) < (float)-v9) {
          goto LABEL_29;
        }
        if (v9 < v19 && v9 < v20)
        {
          if (*((float *)&v78 + 2) <= COERCE_FLOAT(*(void *)(result + 16 * v15 + 24))) {
            uint64_t v18 = v15;
          }
          goto LABEL_29;
        }
      }
    }
    while (v17 < v13);
  }
  v71 = v89;
  long long v72 = v86;
  *(_OWORD *)a4 = v85;
  *(_OWORD *)(a4 + 16) = v72;
  long long v73 = v88;
  *(_OWORD *)(a4 + 32) = v87;
  *(_OWORD *)(a4 + 48) = v73;
  *(void *)(a4 + 64) = v71;
  return result;
}

uint64_t sub_24B5FAB10@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  return sub_24B5FA388(a1, a2, &v4, a3);
}

void filteredDepthPointCloud(_:)(void *a1@<X8>)
{
  id v2 = (id)OCNonModularSPI_ADJasperPointCloud_CreatePointCloud();
  if (v2)
  {
    id v3 = v2;
    sub_24B5FA388(v2, 0, &v4, (uint64_t)a1);
  }
  else
  {
    OCDepthPointCloud.init()(a1);
  }
}

void sub_24B5FABB8(unsigned char *a1@<X1>, void *a2@<X8>)
{
  id v4 = (id)OCNonModularSPI_ADJasperPointCloud_CreatePointCloud();
  if (v4)
  {
    id v5 = v4;
    sub_24B5FA388(v4, 0, a1, (uint64_t)a2);
  }
  else
  {
    *a1 = 0;
    OCDepthPointCloud.init()(a2);
  }
}

uint64_t sub_24B5FAC44(float32x4_t a1, float32x4_t a2, float32x4_t a3, int8x16_t a4)
{
  float32x4_t v4 = *(float32x4_t *)(MEMORY[0x263EF89A0] + 16);
  float32x4_t v5 = *(float32x4_t *)(MEMORY[0x263EF89A0] + 32);
  float32x4_t v6 = (float32x4_t)vdupq_n_s32(0x38D1B717u);
  uint32x4_t v7 = (uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vcgeq_f32(v6, vabdq_f32(vmlaq_lane_f32(vmlaq_lane_f32(vmulq_lane_f32(a1, *(float32x2_t *)a1.f32, 1), a2, *(float32x2_t *)a2.f32, 1), a3, *(float32x2_t *)a3.f32, 1), v4)), (int8x16_t)vcgeq_f32(v6, vabdq_f32(vmlaq_n_f32(vmlaq_n_f32(vmulq_n_f32(a1, a1.f32[0]), a2, a2.f32[0]), a3, a3.f32[0]), *MEMORY[0x263EF89A0]))),
                     (int8x16_t)vcgeq_f32(v6, vabdq_f32(vmlaq_laneq_f32(vmlaq_laneq_f32(vmulq_laneq_f32(a1, a1, 2), a2, a2, 2), a3, a3, 2), v5)));
  v7.i32[3] = v7.i32[2];
  if ((vminvq_u32(v7) & 0x80000000) == 0) {
    return 0;
  }
  float32x4_t v8 = (float32x4_t)vdupq_laneq_s32((int32x4_t)a1, 2);
  float32x4_t v9 = (float32x4_t)vdupq_laneq_s32((int32x4_t)a2, 2);
  float32x4_t v10 = (float32x4_t)vzip1q_s32((int32x4_t)v8, (int32x4_t)v9);
  int32x4_t v11 = vzip1q_s32((int32x4_t)a1, (int32x4_t)a3);
  int32x4_t v12 = vzip1q_s32((int32x4_t)a2, (int32x4_t)0);
  float32x4_t v13 = (float32x4_t)vzip2q_s32(v11, v12);
  v13.i32[2] = vdupq_lane_s32(*(int32x2_t *)&a3, 1).i32[2];
  float32x4_t v14 = (float32x4_t)vzip1q_s32(v11, v12);
  v10.i32[2] = a3.i32[2];
  uint32x4_t v15 = (uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vcgeq_f32(v6, vabdq_f32(vmlaq_f32(vmlaq_lane_f32(vmulq_n_f32(v14, a2.f32[0]), v13, *(float32x2_t *)a2.f32, 1), v9, v10), v4)), (int8x16_t)vcgeq_f32(v6, vabdq_f32(vmlaq_f32(vmlaq_lane_f32(vmulq_n_f32(v14, a1.f32[0]), v13, *(float32x2_t *)a1.f32, 1), v8, v10), *MEMORY[0x263EF89A0]))), (int8x16_t)vcgeq_f32(v6,
                                   vabdq_f32(vmlaq_f32(vmlaq_lane_f32(vmulq_n_f32(v14, a3.f32[0]), v13, *(float32x2_t *)a3.f32, 1), (float32x4_t)vdupq_laneq_s32((int32x4_t)a3, 2), v10), v5)));
  v15.i32[3] = v15.i32[2];
  if ((vminvq_u32(v15) & 0x80000000) == 0) {
    return 0;
  }
  float32x4_t v16 = vmulq_f32(a1, vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(vextq_s8((int8x16_t)a3, (int8x16_t)a3, 0xCuLL), (int8x16_t)a3, 8uLL), vnegq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)a2, (int32x4_t)a2), (int8x16_t)a2, 0xCuLL))), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)a3, (int32x4_t)a3), (int8x16_t)a3, 0xCuLL), (float32x4_t)vextq_s8(vextq_s8((int8x16_t)a2, (int8x16_t)a2, 0xCuLL), (int8x16_t)a2, 8uLL)));
  if (vabds_f32(1.0, vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v16, 2), vaddq_f32(v16, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v16.f32, 1))).f32[0]) >= 0.0001)return 0; {
  float32x2_t v17 = (float32x2_t)vzip2_s32((int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)a1, (int8x16_t)a1, 8uLL), (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)a2, (int8x16_t)a2, 8uLL));
  }
  float32x2_t v18 = (float32x2_t)vzip2_s32((int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)a3, (int8x16_t)a3, 8uLL), (int32x2_t)*(_OWORD *)&vextq_s8(a4, a4, 8uLL));
  float32x2_t v19 = (float32x2_t)vdup_n_s32(0x38D1B717u);
  uint32x2_t v20 = (uint32x2_t)vand_s8((int8x8_t)vcge_f32(v19, vabs_f32(vadd_f32(v18, (float32x2_t)0xBF80000080000000))), (int8x8_t)vcge_f32(v19, vabs_f32(v17)));
  return vpmin_u32(v20, v20).u32[0] >> 31;
}

float sub_24B5FADE8(float32x4_t a1, int32x2_t a2, int32x4_t a3)
{
  float v3 = (float)(vaddq_f32(vaddq_f32((float32x4_t)vdupq_lane_s32(a2, 1), a1), (float32x4_t)vdupq_laneq_s32(a3, 2)).f32[0]
             + -1.0)
     * 0.5;
  if (v3 <= -1.0) {
    float v3 = -1.0;
  }
  if (v3 > 1.0) {
    float v3 = 1.0;
  }
  return (float)(acosf(v3) * 180.0) / 3.1416;
}

float sub_24B5FAE50(double a1, double a2, double a3, float32x4_t a4)
{
  float32x4_t v4 = vmulq_f32(a4, a4);
  return sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v4, 2), vaddq_f32(v4, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v4.f32, 1))).f32[0]);
}

uint64_t sub_24B5FAE6C(uint64_t a1)
{
  uint64_t v2 = sub_24B682C80();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  float32x4_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24B682C90();
  MEMORY[0x270FA5388](v6 - 8);
  float32x4_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B5FF3AC(a1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 2, v2))
  {
    sub_24B5FF410((uint64_t)v8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    int v9 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
    if (v9 == *MEMORY[0x263F8C958] || v9 == *MEMORY[0x263F8C950]) {
      return 0;
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return 1;
}

float sub_24B5FB01C(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return -1.0;
  }
  unint64_t v2 = sub_24B562E8C(0x73726F736E6553, 0xE700000000000000);
  if ((v3 & 1) == 0) {
    return -1.0;
  }
  sub_24B562F48(*(void *)(a1 + 56) + 32 * v2, (uint64_t)&v17);
  sub_24B562F04(&qword_2697CC060);
  if ((swift_dynamicCast() & 1) == 0) {
    return -1.0;
  }
  if (*(void *)(v16 + 16) && (unint64_t v4 = sub_24B562E8C(0x69736E6972746E49, 0xEA00000000007363), (v5 & 1) != 0))
  {
    sub_24B562F48(*(void *)(v16 + 56) + 32 * v4, (uint64_t)&v17);
  }
  else
  {
    long long v17 = 0u;
    long long v18 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v18 + 1)) {
    goto LABEL_36;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return -1.0;
  }
  if (*(void *)(v16 + 16) && (unint64_t v6 = sub_24B562E8C(4343634, 0xE300000000000000), (v7 & 1) != 0))
  {
    sub_24B562F48(*(void *)(v16 + 56) + 32 * v6, (uint64_t)&v17);
  }
  else
  {
    long long v17 = 0u;
    long long v18 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v18 + 1)) {
    goto LABEL_36;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return -1.0;
  }
  if (*(void *)(v16 + 16) && (unint64_t v8 = sub_24B562E8C(0x656C6F686E6950, 0xE700000000000000), (v9 & 1) != 0))
  {
    sub_24B562F48(*(void *)(v16 + 56) + 32 * v8, (uint64_t)&v17);
  }
  else
  {
    long long v17 = 0u;
    long long v18 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v18 + 1)) {
    goto LABEL_36;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return -1.0;
  }
  if (*(void *)(v16 + 16) && (unint64_t v10 = sub_24B562E8C(0x654C206C61636F46, 0xEC0000006874676ELL), (v11 & 1) != 0))
  {
    sub_24B562F48(*(void *)(v16 + 56) + 32 * v10, (uint64_t)&v17);
  }
  else
  {
    long long v17 = 0u;
    long long v18 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v18 + 1)) {
    goto LABEL_36;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return -1.0;
  }
  if (*(void *)(v16 + 16) && (unint64_t v12 = sub_24B562E8C(1635017028, 0xE400000000000000), (v13 & 1) != 0))
  {
    sub_24B562F48(*(void *)(v16 + 56) + 32 * v12, (uint64_t)&v17);
  }
  else
  {
    long long v17 = 0u;
    long long v18 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v18 + 1))
  {
LABEL_36:
    sub_24B5632A8((uint64_t)&v17, (uint64_t *)&unk_2697CCA30);
    return -1.0;
  }
  sub_24B562F04((uint64_t *)&unk_2697CD110);
  if ((swift_dynamicCast() & 1) == 0) {
    return -1.0;
  }
  if (!*(void *)(v16 + 16))
  {
    swift_bridgeObjectRelease();
    return -1.0;
  }
  float v14 = *(float *)(v16 + 32);
  swift_bridgeObjectRelease();
  return v14;
}

float sub_24B5FB32C(uint64_t a1)
{
  float v1 = -1.0;
  if (*(void *)(a1 + 16))
  {
    unint64_t v3 = sub_24B562E8C(0x657275736F707845, 0xEC000000656D6954);
    if (v4)
    {
      sub_24B562F48(*(void *)(a1 + 56) + 32 * v3, (uint64_t)v7);
      if (swift_dynamicCast()) {
        return v6;
      }
    }
  }
  return v1;
}

uint64_t sub_24B5FB3D0(uint64_t a1)
{
  uint64_t v2 = sub_24B6827D0();
  if (!*(void *)(a1 + 16) || (unint64_t v4 = sub_24B562E8C(v2, v3), (v5 & 1) == 0))
  {
    long long v14 = 0u;
    long long v15 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  sub_24B562F48(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v14);
  swift_bridgeObjectRelease();
  if (!*((void *)&v15 + 1))
  {
LABEL_12:
    sub_24B5632A8((uint64_t)&v14, (uint64_t *)&unk_2697CCA30);
LABEL_13:
    if (!*(void *)(a1 + 16)) {
      return -1;
    }
    goto LABEL_14;
  }
  sub_24B562F04(&qword_2697CC568);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
    goto LABEL_13;
  }
  if (!(v13 >> 62))
  {
    if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_7;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    if (!*(void *)(a1 + 16)) {
      return -1;
    }
LABEL_14:
    unint64_t v9 = sub_24B562E8C(0x6E69614744707369, 0xE800000000000000);
    if (v10)
    {
      sub_24B562F48(*(void *)(a1 + 56) + 32 * v9, (uint64_t)&v14);
      sub_24B5A5674();
      if (swift_dynamicCast())
      {
        unint64_t v8 = (void *)v13;
        goto LABEL_17;
      }
    }
    return -1;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_24B682F00();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v12) {
    goto LABEL_19;
  }
LABEL_7:
  if ((v13 & 0xC000000000000001) != 0)
  {
    id v7 = (id)MEMORY[0x24C5D4F60](0);
    goto LABEL_10;
  }
  if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v7 = *(id *)(v13 + 32);
LABEL_10:
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
LABEL_17:
    id v11 = objc_msgSend(v8, sel_integerValue);

    return (uint64_t)v11;
  }
  __break(1u);
  return result;
}

void sub_24B5FB5B4(__CVBuffer *a1)
{
  uint64_t v2 = (__CFString *)sub_24B6827A0();
  int HasAttachment = CVBufferHasAttachment(a1, v2);

  if (!HasAttachment) {
    return;
  }
  unint64_t v4 = (__CFString *)sub_24B6827A0();
  int v5 = CVBufferHasAttachment(a1, v4);

  if (!v5) {
    return;
  }
  double v6 = (__CFString *)sub_24B6827A0();
  CFTypeRef v7 = CVBufferCopyAttachment(a1, v6, 0);

  if (!v7)
  {
    __break(1u);
    goto LABEL_11;
  }
  v13[0] = v7;
  sub_24B562F04(&qword_2697CC060);
  swift_dynamicCast();
  sub_24B5FB01C(v12);
  swift_bridgeObjectRelease();
  unint64_t v8 = (__CFString *)sub_24B6827A0();
  CFTypeRef v9 = CVBufferCopyAttachment(a1, v8, 0);

  if (!v9)
  {
LABEL_11:
    __break(1u);
    return;
  }
  v13[0] = v9;
  swift_dynamicCast();
  sub_24B5FB32C(v12);
  if (*(void *)(v12 + 16))
  {
    unint64_t v10 = sub_24B562E8C(0x6C6576654C78754CLL, 0xE800000000000000);
    if (v11)
    {
      sub_24B562F48(*(void *)(v12 + 56) + 32 * v10, (uint64_t)v13);
      swift_dynamicCast();
    }
  }
  sub_24B5FB3D0(v12);
  swift_bridgeObjectRelease();
}

void sub_24B5FB7EC(__CVBuffer *a1)
{
  uint64_t v2 = (__CFString *)sub_24B6827A0();
  int HasAttachment = CVBufferHasAttachment(a1, v2);

  if (HasAttachment)
  {
    CFStringRef v4 = (const __CFString *)*MEMORY[0x263F0F248];
    if (CVBufferHasAttachment(a1, (CFStringRef)*MEMORY[0x263F0F248]))
    {
      int v5 = (__CFString *)sub_24B6827A0();
      CFTypeRef v6 = CVBufferCopyAttachment(a1, v5, 0);

      if (v6)
      {
        sub_24B562F04(&qword_2697CC060);
        swift_dynamicCast();
        sub_24B5FB01C(v7);
        swift_bridgeObjectRelease();
        if (CVBufferCopyAttachment(a1, v4, 0))
        {
          swift_dynamicCast();
          sub_24B5FB32C(v7);
          sub_24B5FB3D0(v7);
          swift_bridgeObjectRelease();
          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
    }
  }
}

unint64_t sub_24B5FB978(void *a1, double a2, double a3)
{
  void *(*v11)(double *__return_ptr, int64_t);
  char v12;
  int64_t v13;
  float v14;
  float v17;
  float v18;
  double v19;
  float v20;
  char v21;
  char v22;

  if (a2 >= a3) {
    goto LABEL_20;
  }
  *a1 = 0;
  unint64_t result = (*(uint64_t (**)(void))(*(void *)v3 + 128))();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    return result;
  }
  int64_t v8 = result;
  if (!result)
  {
LABEL_20:
    float v9 = 0.0;
    uint64_t v12 = 1;
    goto LABEL_27;
  }
  float v9 = 0.0;
  uint64_t v10 = 0;
  char v11 = *(void *(**)(double *__return_ptr, int64_t))(*(void *)v3 + 216);
  uint64_t v12 = 1;
  unint64_t v13 = result;
  while (1)
  {
    if (v8 < v13)
    {
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    unint64_t result = (unint64_t)v11(&v19, --v13);
    if ((v21 & 1) == 0) {
      break;
    }
LABEL_6:
    if (!v13) {
      goto LABEL_27;
    }
  }
  long long v14 = v20;
  if (v19 >= a2 && v19 < a3)
  {
    if (__OFADD__(v10++, 1)) {
      goto LABEL_29;
    }
    *a1 = v10;
    long long v17 = v9;
    if (v12) {
      long long v17 = v14;
    }
    if (v17 > v14) {
      long long v14 = v17;
    }
    float v9 = v14;
    uint64_t v12 = 0;
    goto LABEL_6;
  }
  if (v19 < a3) {
    goto LABEL_6;
  }
  if (__OFADD__(v10, 1)) {
    goto LABEL_31;
  }
  *a1 = v10 + 1;
  long long v18 = v9;
  if (v12) {
    long long v18 = v14;
  }
  if (v18 > v14) {
    long long v14 = v18;
  }
  float v9 = v14;
  uint64_t v12 = 0;
LABEL_27:
  uint32x4_t v22 = v12;
  return LODWORD(v9) | ((unint64_t)(v12 & 1) << 32);
}

uint64_t *sub_24B5FBB04(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  int v4 = *((_DWORD *)a2 + 2);
  type metadata accessor for DepthWarpCircularBuffer(0);
  swift_allocObject();
  uint64_t v6 = v3;
  int v7 = v4;
  return sub_24B67FB3C(a1, (uint64_t)&v6);
}

uint64_t sub_24B5FBB68(uint64_t a1, uint64_t a2, char a3)
{
  int v4 = v3;
  uint64_t v100 = a2;
  uint64_t v7 = sub_24B6824D0();
  uint64_t v101 = *(void *)(v7 - 8);
  uint64_t v102 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  unint64_t v13 = (char *)&v95 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v95 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  v99 = (char *)&v95 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  v98 = (char *)&v95 - v20;
  MEMORY[0x270FA5388](v19);
  uint32x4_t v22 = (char *)&v95 - v21;
  uint64_t v23 = sub_24B562F04(&qword_2697CC460);
  MEMORY[0x270FA5388](v23 - 8);
  unint64_t v25 = (char *)&v95 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_24B682410();
  MEMORY[0x270FA5388](v26);
  unint64_t v28 = (char *)&v95 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = -1;
  uint64_t v29 = a1;
  uint64_t v31 = v30;
  unint64_t v33 = v32;
  sub_24B563A6C(v29, (uint64_t)v25, &qword_2697CC460);
  if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v33 + 6))(v25, 1, v31) == 1)
  {
    uint64_t v34 = sub_24B5632A8((uint64_t)v25, &qword_2697CC460);
    if ((a3 & 1) == 0)
    {
      char v35 = (*(uint64_t (**)(uint64_t))(*v4 + 112))(v34);
      uint64_t v36 = v101;
      unint64_t v37 = (void (**)(char *, uint64_t, uint64_t))(v101 + 16);
      if (v35)
      {
        uint64_t v107 = -1;
        uint64_t v38 = sub_24B57CB70();
        uint64_t v39 = v102;
        (*v37)(v16, v38, v102);
        __n128 v40 = sub_24B6824B0();
        os_log_type_t v41 = sub_24B682B00();
        if (os_log_type_enabled(v40, v41))
        {
          uint64_t v42 = swift_slowAlloc();
          uint64_t v43 = swift_slowAlloc();
          uint64_t v105 = v43;
          *(_DWORD *)uint64_t v42 = 136380931;
          uint64_t v104 = sub_24B5627B8(0xD000000000000029, 0x800000024B68E5A0, &v105);
          sub_24B682CD0();
          *(_WORD *)(v42 + 12) = 2048;
          uint64_t v104 = -1;
          sub_24B682CD0();
          _os_log_impl(&dword_24B55E000, v40, v41, "SegmentIDConverter.%{private}s:\nSample has a nil session UUID but need to reset legacy id. Final segment ID is: %ld", (uint8_t *)v42, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x24C5D6C00](v43, -1, -1);
          MEMORY[0x24C5D6C00](v42, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v39);
      }
      else
      {
        uint64_t v70 = v100;
        uint64_t v107 = v100;
        uint64_t v71 = sub_24B57CB70();
        uint64_t v72 = v102;
        (*v37)(v13, v71, v102);
        long long v73 = sub_24B6824B0();
        os_log_type_t v74 = sub_24B682B00();
        if (os_log_type_enabled(v73, v74))
        {
          uint64_t v75 = swift_slowAlloc();
          uint64_t v76 = swift_slowAlloc();
          uint64_t v105 = v76;
          *(_DWORD *)uint64_t v75 = 136380931;
          uint64_t v104 = sub_24B5627B8(0xD000000000000029, 0x800000024B68E5A0, &v105);
          sub_24B682CD0();
          *(_WORD *)(v75 + 12) = 2048;
          uint64_t v104 = v70;
          sub_24B682CD0();
          _os_log_impl(&dword_24B55E000, v73, v74, "SegmentIDConverter.%{private}s:\nSample has a nil session UUID. Final segment ID is the same with original: %ld", (uint8_t *)v75, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x24C5D6C00](v76, -1, -1);
          MEMORY[0x24C5D6C00](v75, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v36 + 8))(v13, v72);
      }
      goto LABEL_28;
    }
LABEL_14:
    uint64_t v63 = sub_24B57CB70();
    uint64_t v64 = v101;
    uint64_t v65 = v102;
    (*(void (**)(char *, uint64_t, uint64_t))(v101 + 16))(v10, v63, v102);
    v66 = sub_24B6824B0();
    os_log_type_t v67 = sub_24B682B00();
    if (os_log_type_enabled(v66, v67))
    {
      v68 = (uint8_t *)swift_slowAlloc();
      uint64_t v69 = swift_slowAlloc();
      uint64_t v105 = v69;
      *(_DWORD *)v68 = 136380675;
      uint64_t v104 = sub_24B5627B8(0xD000000000000029, 0x800000024B68E5A0, &v105);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v66, v67, "SegmentIDConverter.%{private}s:\nSample has a nil segment ID. Final segment ID is -1.", v68, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v69, -1, -1);
      MEMORY[0x24C5D6C00](v68, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v64 + 8))(v10, v65);
    goto LABEL_28;
  }
  (*((void (**)(char *, char *, uint64_t))v33 + 4))(v28, v25, v31);
  if (a3)
  {
    (*((void (**)(char *, uint64_t))v33 + 1))(v28, v31);
    goto LABEL_14;
  }
  uint64_t v44 = v100;
  if (v100 < 0)
  {
    v98 = v33;
    uint64_t v77 = sub_24B57CB70();
    uint64_t v79 = v101;
    uint64_t v78 = v102;
    (*(void (**)(char *, uint64_t, uint64_t))(v101 + 16))(v22, v77, v102);
    char v80 = sub_24B6824B0();
    os_log_type_t v81 = sub_24B682B00();
    if (os_log_type_enabled(v80, v81))
    {
      uint64_t v82 = -1;
      uint64_t v83 = swift_slowAlloc();
      uint64_t v97 = v31;
      uint64_t v84 = v83;
      uint64_t v85 = swift_slowAlloc();
      v96 = v28;
      uint64_t v86 = v85;
      uint64_t v105 = v85;
      *(_DWORD *)uint64_t v84 = 136380931;
      uint64_t v104 = sub_24B5627B8(0xD000000000000029, 0x800000024B68E5A0, &v105);
      sub_24B682CD0();
      *(_WORD *)(v84 + 12) = 2048;
      uint64_t v104 = v44;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v80, v81, "SegmentIDConverter.%{private}s:\nSample has a negative segment ID: %ld.\nFinal segment ID is -1.", (uint8_t *)v84, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v86, -1, -1);
      MEMORY[0x24C5D6C00](v84, -1, -1);

      (*(void (**)(char *, uint64_t))(v79 + 8))(v22, v102);
      (*((void (**)(char *, uint64_t))v98 + 1))(v96, v97);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v79 + 8))(v22, v78);
      (*((void (**)(char *, uint64_t))v98 + 1))(v28, v31);
      return -1;
    }
    return v82;
  }
  v96 = v28;
  uint64_t v97 = v31;
  uint64_t v45 = sub_24B6823D0();
  unint64_t v47 = v46;
  uint64_t v105 = v44;
  sub_24B682F90();
  uint64_t v105 = v45;
  unint64_t v106 = v47;
  swift_bridgeObjectRetain();
  sub_24B682890();
  swift_bridgeObjectRelease();
  uint64_t v49 = v105;
  uint64_t v48 = v106;
  swift_beginAccess();
  uint64_t v50 = v4[3];
  if (*(void *)(v50 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v51 = sub_24B562E8C(v49, v48);
    if (v52)
    {
      unint64_t v53 = *(char **)(*(void *)(v50 + 56) + 8 * v51);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      uint64_t v107 = (uint64_t)v53;
      uint64_t v54 = sub_24B57CB70();
      uint64_t v56 = v101;
      uint64_t v55 = v102;
      unint64_t v57 = v98;
      (*(void (**)(char *, uint64_t, uint64_t))(v101 + 16))(v98, v54, v102);
      swift_bridgeObjectRetain();
      CoreOC::OCBoundingBox v58 = sub_24B6824B0();
      os_log_type_t v59 = sub_24B682B00();
      if (os_log_type_enabled(v58, v59))
      {
        uint64_t v60 = swift_slowAlloc();
        uint64_t v61 = swift_slowAlloc();
        v99 = v53;
        uint64_t v62 = v61;
        uint64_t v105 = v61;
        *(_DWORD *)uint64_t v60 = 136381443;
        uint64_t v103 = sub_24B5627B8(0xD000000000000029, 0x800000024B68E5A0, &v105);
        sub_24B682CD0();
        *(_WORD *)(v60 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v103 = sub_24B5627B8(v45, v47, &v105);
        sub_24B682CD0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v60 + 22) = 2048;
        uint64_t v103 = v100;
        sub_24B682CD0();
        *(_WORD *)(v60 + 32) = 2048;
        uint64_t v103 = (uint64_t)v99;
        sub_24B682CD0();
        _os_log_impl(&dword_24B55E000, v58, v59, "SegmentIDConverter.%{private}s:\nFound existing ID with session UUID: %s and\noriginal segment ID: %ld.\nFinal segment ID is %ld.", (uint8_t *)v60, 0x2Au);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v62, -1, -1);
        MEMORY[0x24C5D6C00](v60, -1, -1);

        (*(void (**)(char *, uint64_t))(v56 + 8))(v98, v102);
        (*((void (**)(char *, uint64_t))v33 + 1))(v96, v97);
LABEL_28:
        swift_beginAccess();
        return v107;
      }
      goto LABEL_27;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v95 = v45;
  uint64_t v87 = v4[4];
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v103 = v4[3];
  v4[3] = 0x8000000000000000;
  sub_24B5FEF9C(v87, v49, v48, isUniquelyReferenced_nonNull_native);
  v4[3] = v103;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_endAccess();
  uint64_t v90 = v4[4];
  uint64_t v107 = v90;
  if (!__OFADD__(v90, 1))
  {
    v4[4] = v90 + 1;
    uint64_t v91 = sub_24B57CB70();
    uint64_t v56 = v101;
    uint64_t v55 = v102;
    unint64_t v57 = v99;
    (*(void (**)(char *, uint64_t, uint64_t))(v101 + 16))(v99, v91, v102);
    swift_bridgeObjectRetain();
    CoreOC::OCBoundingBox v58 = sub_24B6824B0();
    os_log_type_t v92 = sub_24B682B00();
    if (os_log_type_enabled(v58, v92))
    {
      uint64_t v93 = swift_slowAlloc();
      uint64_t v94 = swift_slowAlloc();
      uint64_t v105 = v94;
      *(_DWORD *)uint64_t v93 = 136381443;
      uint64_t v103 = sub_24B5627B8(0xD000000000000029, 0x800000024B68E5A0, &v105);
      v98 = v33;
      sub_24B682CD0();
      *(_WORD *)(v93 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v103 = sub_24B5627B8(v95, v47, &v105);
      sub_24B682CD0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v93 + 22) = 2048;
      uint64_t v103 = v44;
      sub_24B682CD0();
      *(_WORD *)(v93 + 32) = 2048;
      uint64_t v103 = v90;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v58, v92, "SegmentIDConverter.%{private}s:\nFound new ID with session UUID: %s and\noriginal segment ID: %ld.\nFinal segment ID is %ld.", (uint8_t *)v93, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v94, -1, -1);
      MEMORY[0x24C5D6C00](v93, -1, -1);

      (*(void (**)(char *, uint64_t))(v56 + 8))(v99, v102);
      (*((void (**)(char *, uint64_t))v98 + 1))(v96, v97);
      goto LABEL_28;
    }
LABEL_27:
    swift_bridgeObjectRelease_n();

    (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v55);
    (*((void (**)(char *, uint64_t))v33 + 1))(v96, v97);
    goto LABEL_28;
  }
  __break(1u);
  return result;
}

uint64_t sub_24B5FC9B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  int v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  swift_retain();
  uint64_t v7 = sub_24B6824B0();
  os_log_type_t v8 = sub_24B682B00();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 67109120;
    swift_beginAccess();
    v11[1] = *(unsigned __int8 *)(v1 + 16);
    sub_24B682CD0();
    swift_release();
    _os_log_impl(&dword_24B55E000, v7, v8, "SegmentIDConverter: should reset legacy segment id: %{BOOL}d", v9, 8u);
    MEMORY[0x24C5D6C00](v9, -1, -1);
  }
  else
  {

    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_24B5FCB7C()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_24B5FCBB0(char a1)
{
  swift_beginAccess();
  *(unsigned char *)(v1 + 16) = a1;
  return sub_24B5FC9B0();
}

uint64_t (*sub_24B5FCBF4(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_24B5FCC4C;
}

uint64_t sub_24B5FCC4C(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_24B5FC9B0();
  }
  return result;
}

unint64_t sub_24B5FCC80(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_24B562F04(&qword_2697CC900);
  uint64_t v2 = (void *)sub_24B682F30();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_24B562E8C(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_24B5FCD94()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_24B5FCDCC()
{
  uint64_t v0 = swift_allocObject();
  *(unsigned char *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = sub_24B5FCC80(MEMORY[0x263F8EE78]);
  *(void *)(v0 + 32) = 0;
  return v0;
}

uint64_t sub_24B5FCE14()
{
  return sub_24B5FCE2C(&OBJC_IVAR____TtCV6CoreOC4Util5Timer_startTime);
}

uint64_t sub_24B5FCE20()
{
  return sub_24B5FCE2C(&OBJC_IVAR____TtCV6CoreOC4Util5Timer_stopTime);
}

uint64_t sub_24B5FCE2C(void *a1)
{
  uint64_t v3 = sub_24B562F04(&qword_2697CC8F0);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  os_log_type_t v8 = (char *)&v12 - v7;
  sub_24B682660();
  uint64_t v9 = sub_24B682680();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 0, 1, v9);
  sub_24B5FF46C((uint64_t)v8, (uint64_t)v6);
  uint64_t v10 = v1 + *a1;
  swift_beginAccess();
  sub_24B5FF4D4((uint64_t)v6, v10);
  return swift_endAccess();
}

unint64_t sub_24B5FCF48()
{
  uint64_t v1 = sub_24B562F04(&qword_2697CC8F0);
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  uint64_t v4 = &v23[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = &v23[-v5];
  uint64_t v7 = sub_24B682680();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = &v23[-v12];
  uint64_t v14 = v0 + OBJC_IVAR____TtCV6CoreOC4Util5Timer_startTime;
  swift_beginAccess();
  sub_24B563A6C(v14, (uint64_t)v6, &qword_2697CC8F0);
  uint64_t v15 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1, v7) == 1)
  {
    uint64_t v16 = (uint64_t)v6;
    return sub_24B5632A8(v16, &qword_2697CC8F0);
  }
  uint64_t v17 = v6;
  uint64_t v18 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32);
  v18(v13, v17, v7);
  uint64_t v19 = v0 + OBJC_IVAR____TtCV6CoreOC4Util5Timer_stopTime;
  swift_beginAccess();
  sub_24B563A6C(v19, (uint64_t)v4, &qword_2697CC8F0);
  if (v15(v4, 1, v7) == 1)
  {
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v16 = (uint64_t)v4;
    return sub_24B5632A8(v16, &qword_2697CC8F0);
  }
  v18(v11, v4, v7);
  unint64_t v21 = sub_24B682650();
  unint64_t result = sub_24B682650();
  if (v21 < result)
  {
    __break(1u);
  }
  else
  {
    uint32x4_t v22 = *(void (**)(unsigned char *, uint64_t))(v8 + 8);
    v22(v11, v7);
    return ((uint64_t (*)(unsigned char *, uint64_t))v22)(v13, v7);
  }
  return result;
}

unint64_t sub_24B5FD214()
{
  uint64_t v1 = sub_24B562F04(&qword_2697CC8F0);
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  uint64_t v4 = &v23[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = &v23[-v5];
  uint64_t v7 = sub_24B682680();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = &v23[-v12];
  uint64_t v14 = v0 + OBJC_IVAR____TtCV6CoreOC4Util5Timer_startTime;
  swift_beginAccess();
  sub_24B563A6C(v14, (uint64_t)v6, &qword_2697CC8F0);
  uint64_t v15 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1, v7) == 1)
  {
    uint64_t v16 = (uint64_t)v6;
    return sub_24B5632A8(v16, &qword_2697CC8F0);
  }
  uint64_t v17 = v6;
  uint64_t v18 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32);
  v18(v13, v17, v7);
  uint64_t v19 = v0 + OBJC_IVAR____TtCV6CoreOC4Util5Timer_stopTime;
  swift_beginAccess();
  sub_24B563A6C(v19, (uint64_t)v4, &qword_2697CC8F0);
  if (v15(v4, 1, v7) == 1)
  {
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v16 = (uint64_t)v4;
    return sub_24B5632A8(v16, &qword_2697CC8F0);
  }
  v18(v11, v4, v7);
  unint64_t v21 = sub_24B682650();
  unint64_t result = sub_24B682650();
  if (v21 < result)
  {
    __break(1u);
  }
  else
  {
    uint32x4_t v22 = *(void (**)(unsigned char *, uint64_t))(v8 + 8);
    v22(v11, v7);
    return ((uint64_t (*)(unsigned char *, uint64_t))v22)(v13, v7);
  }
  return result;
}

unint64_t sub_24B5FD4E8()
{
  uint64_t v1 = sub_24B562F04(&qword_2697CC8F0);
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  uint64_t v4 = &v23[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = &v23[-v5];
  uint64_t v7 = sub_24B682680();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = &v23[-v12];
  uint64_t v14 = v0 + OBJC_IVAR____TtCV6CoreOC4Util5Timer_startTime;
  swift_beginAccess();
  sub_24B563A6C(v14, (uint64_t)v6, &qword_2697CC8F0);
  uint64_t v15 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1, v7) == 1)
  {
    uint64_t v16 = (uint64_t)v6;
    return sub_24B5632A8(v16, &qword_2697CC8F0);
  }
  uint64_t v17 = v6;
  uint64_t v18 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32);
  v18(v13, v17, v7);
  uint64_t v19 = v0 + OBJC_IVAR____TtCV6CoreOC4Util5Timer_stopTime;
  swift_beginAccess();
  sub_24B563A6C(v19, (uint64_t)v4, &qword_2697CC8F0);
  if (v15(v4, 1, v7) == 1)
  {
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v16 = (uint64_t)v4;
    return sub_24B5632A8(v16, &qword_2697CC8F0);
  }
  v18(v11, v4, v7);
  unint64_t v21 = sub_24B682650();
  unint64_t result = sub_24B682650();
  if (v21 < result)
  {
    __break(1u);
  }
  else
  {
    uint32x4_t v22 = *(void (**)(unsigned char *, uint64_t))(v8 + 8);
    v22(v11, v7);
    return ((uint64_t (*)(unsigned char *, uint64_t))v22)(v13, v7);
  }
  return result;
}

unint64_t sub_24B5FD7C0()
{
  uint64_t v1 = sub_24B562F04(&qword_2697CC8F0);
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  uint64_t v4 = &v23[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = &v23[-v5];
  uint64_t v7 = sub_24B682680();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = &v23[-v12];
  uint64_t v14 = v0 + OBJC_IVAR____TtCV6CoreOC4Util5Timer_startTime;
  swift_beginAccess();
  sub_24B563A6C(v14, (uint64_t)v6, &qword_2697CC8F0);
  uint64_t v15 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1, v7) == 1)
  {
    uint64_t v16 = (uint64_t)v6;
    return sub_24B5632A8(v16, &qword_2697CC8F0);
  }
  uint64_t v17 = v6;
  uint64_t v18 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32);
  v18(v13, v17, v7);
  uint64_t v19 = v0 + OBJC_IVAR____TtCV6CoreOC4Util5Timer_stopTime;
  swift_beginAccess();
  sub_24B563A6C(v19, (uint64_t)v4, &qword_2697CC8F0);
  if (v15(v4, 1, v7) == 1)
  {
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v16 = (uint64_t)v4;
    return sub_24B5632A8(v16, &qword_2697CC8F0);
  }
  v18(v11, v4, v7);
  unint64_t v21 = sub_24B682650();
  unint64_t result = sub_24B682650();
  if (v21 < result)
  {
    __break(1u);
  }
  else
  {
    uint32x4_t v22 = *(void (**)(unsigned char *, uint64_t))(v8 + 8);
    v22(v11, v7);
    return ((uint64_t (*)(unsigned char *, uint64_t))v22)(v13, v7);
  }
  return result;
}

uint64_t sub_24B5FDA98()
{
  sub_24B5632A8(v0 + OBJC_IVAR____TtCV6CoreOC4Util5Timer_startTime, &qword_2697CC8F0);
  sub_24B5632A8(v0 + OBJC_IVAR____TtCV6CoreOC4Util5Timer_stopTime, &qword_2697CC8F0);

  return swift_deallocClassInstance();
}

uint64_t sub_24B5FDB24()
{
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = v0 + OBJC_IVAR____TtCV6CoreOC4Util5Timer_startTime;
  uint64_t v2 = sub_24B682680();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtCV6CoreOC4Util5Timer_stopTime, 1, 1, v2);
  return v0;
}

double sub_24B5FDBDC(float32x4_t a1)
{
  *(void *)&double result = vmulq_laneq_f32(vmulq_lane_f32(a1, *(float32x2_t *)a1.f32, 1), a1, 2).u64[0];
  return result;
}

uint64_t sub_24B5FDBE8(uint64_t a1)
{
  size_t v1 = *(void *)(*(void *)(*(void *)(a1 + 16) - 8) + 64);
  uint64_t v2 = MEMORY[0x270FA5388](a1);
  uint64_t v3 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  v12[1] = (char *)v12 - v5;
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v12 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v12 - v9;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_24B682DE0();
  sub_24B682DE0();
  sub_24B682DE0();
  sub_24B682DD0();
  memcpy(v3, v10, v1);
  sub_24B682DF0();
  memcpy(v3, v8, v1);
  sub_24B682DF0();
  return sub_24B682DF0();
}

float sub_24B5FDDD8()
{
  return 0.00001;
}

BOOL sub_24B5FDDE8(float a1, float a2, float a3)
{
  return vabds_f32(a3, a1) <= a2;
}

void *sub_24B5FDDF8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_24B562F04(&qword_2697CC910);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24B567938(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_24B5FDF20(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_24B562F04(&qword_2697CC550);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 29;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 2);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v13 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32]) {
          memmove(v13, a4 + 32, 4 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_24B5FF720(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_24B5FE030(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_24B562F04(&qword_2697CC908);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24B57C398(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_24B5FE140(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      sub_24B562F04(&qword_2697CC4A0);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v12 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24B5FF80C(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_24B5FE23C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_24B5FF2B0(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_24B5FE2A8(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_24B5FE2A8(void *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_24B682F80();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_136;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v80 = 0;
      uint64_t v81 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        float v83 = *(float *)(v81 + 4 * i);
        uint64_t v84 = v80;
        do
        {
          uint64_t v85 = v81 + 4 * v84;
          if (v83 >= *(float *)v85) {
            break;
          }
          if (!v81) {
            goto LABEL_140;
          }
          *(_DWORD *)(v85 + 4) = *(_DWORD *)v85;
          *(float *)(v81 + 4 * v84--) = v83;
        }
        while (v84 != -1);
        ++v80;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_145;
  }
  uint64_t v97 = result;
  uint64_t v98 = v3;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (float *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      size_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_102:
      uint64_t v96 = v8;
      if (v12 >= 2)
      {
        uint64_t v86 = *v2;
        do
        {
          unint64_t v87 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_131;
          }
          if (!v86) {
            goto LABEL_144;
          }
          long long v88 = v11;
          v89 = v11 + 32;
          uint64_t v90 = *(void *)&v11[16 * v87 + 32];
          uint64_t v91 = *(void *)&v11[16 * v12 + 24];
          sub_24B5FE93C((float *)(v86 + 4 * v90), (float *)(v86 + 4 * *(void *)&v89[16 * v12 - 16]), v86 + 4 * v91, __dst);
          if (v1) {
            break;
          }
          if (v91 < v90) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            long long v88 = sub_24B5882C4((uint64_t)v88);
          }
          if (v87 >= *((void *)v88 + 2)) {
            goto LABEL_133;
          }
          os_log_type_t v92 = &v88[16 * v87 + 32];
          *(void *)os_log_type_t v92 = v90;
          *((void *)v92 + 1) = v91;
          unint64_t v93 = *((void *)v88 + 2);
          if (v12 > v93) {
            goto LABEL_134;
          }
          memmove(&v88[16 * v12 + 16], &v88[16 * v12 + 32], 16 * (v93 - v12));
          size_t v11 = v88;
          *((void *)v88 + 2) = v93 - 1;
          unint64_t v12 = v93 - 1;
        }
        while (v93 > 2);
      }
LABEL_113:
      swift_bridgeObjectRelease();
      *(void *)(v96 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v96 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_24B6829F0();
    *(void *)(v7 + 16) = v6;
    uint64_t v3 = v98;
    uint64_t v96 = v7;
    __dst = (float *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *v2;
  uint64_t v94 = v2;
  uint64_t v95 = *v2 - 4;
  size_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v99 = *v2;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 < v3)
    {
      float v14 = *(float *)(v10 + 4 * v9);
      float v15 = *(float *)(v10 + 4 * v13);
      uint64_t v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        float v16 = v14;
        while (1)
        {
          float v17 = v16;
          float v16 = *(float *)(v10 + 4 * v9);
          if (v14 < v15 == v16 >= v17) {
            break;
          }
          if (v3 == ++v9)
          {
            uint64_t v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13) {
          goto LABEL_137;
        }
        if (v13 < v9)
        {
          uint64_t v18 = (int *)(v95 + 4 * v9);
          uint64_t v19 = v9;
          uint64_t v20 = v13;
          unint64_t v21 = (int *)(v10 + 4 * v13);
          do
          {
            if (v20 != --v19)
            {
              if (!v10) {
                goto LABEL_143;
              }
              int v22 = *v21;
              *unint64_t v21 = *v18;
              *uint64_t v18 = v22;
            }
            ++v20;
            --v18;
            ++v21;
          }
          while (v20 < v19);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_135;
    }
    if (v9 - v13 >= v97) {
      goto LABEL_46;
    }
    uint64_t v23 = v13 + v97;
    if (__OFADD__(v13, v97)) {
      goto LABEL_138;
    }
    if (v23 >= v3) {
      uint64_t v23 = v3;
    }
    if (v23 < v13) {
      break;
    }
    if (v9 != v23)
    {
      uint64_t v24 = (float *)(v95 + 4 * v9);
      do
      {
        float v25 = *(float *)(v10 + 4 * v9);
        uint64_t v26 = v13;
        uint64_t v27 = v24;
        do
        {
          float v28 = *v27;
          if (v25 >= *v27) {
            break;
          }
          if (!v10) {
            goto LABEL_141;
          }
          *uint64_t v27 = v25;
          v27[1] = v28;
          --v27;
          ++v26;
        }
        while (v9 != v26);
        ++v9;
        ++v24;
      }
      while (v9 != v23);
      uint64_t v9 = v23;
    }
LABEL_46:
    if (v9 < v13) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      size_t v11 = sub_24B588084(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v30 = *((void *)v11 + 2);
    unint64_t v29 = *((void *)v11 + 3);
    unint64_t v12 = v30 + 1;
    uint64_t v10 = v99;
    if (v30 >= v29 >> 1)
    {
      uint64_t v79 = sub_24B588084((char *)(v29 > 1), v30 + 1, 1, v11);
      uint64_t v10 = v99;
      size_t v11 = v79;
    }
    *((void *)v11 + 2) = v12;
    uint64_t v31 = v11 + 32;
    unint64_t v32 = &v11[16 * v30 + 32];
    *(void *)unint64_t v32 = v13;
    *((void *)v32 + 1) = v9;
    if (v30)
    {
      while (1)
      {
        unint64_t v33 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v38 = &v31[16 * v12];
          uint64_t v39 = *((void *)v38 - 8);
          uint64_t v40 = *((void *)v38 - 7);
          BOOL v44 = __OFSUB__(v40, v39);
          uint64_t v41 = v40 - v39;
          if (v44) {
            goto LABEL_119;
          }
          uint64_t v43 = *((void *)v38 - 6);
          uint64_t v42 = *((void *)v38 - 5);
          BOOL v44 = __OFSUB__(v42, v43);
          uint64_t v36 = v42 - v43;
          char v37 = v44;
          if (v44) {
            goto LABEL_120;
          }
          unint64_t v45 = v12 - 2;
          unint64_t v46 = &v31[16 * v12 - 32];
          uint64_t v48 = *(void *)v46;
          uint64_t v47 = *((void *)v46 + 1);
          BOOL v44 = __OFSUB__(v47, v48);
          uint64_t v49 = v47 - v48;
          if (v44) {
            goto LABEL_122;
          }
          BOOL v44 = __OFADD__(v36, v49);
          uint64_t v50 = v36 + v49;
          if (v44) {
            goto LABEL_125;
          }
          if (v50 >= v41)
          {
            v68 = &v31[16 * v33];
            uint64_t v70 = *(void *)v68;
            uint64_t v69 = *((void *)v68 + 1);
            BOOL v44 = __OFSUB__(v69, v70);
            uint64_t v71 = v69 - v70;
            if (v44) {
              goto LABEL_129;
            }
            BOOL v61 = v36 < v71;
            goto LABEL_83;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v62 = *((void *)v11 + 4);
            uint64_t v63 = *((void *)v11 + 5);
            BOOL v44 = __OFSUB__(v63, v62);
            uint64_t v55 = v63 - v62;
            char v56 = v44;
            goto LABEL_77;
          }
          uint64_t v35 = *((void *)v11 + 4);
          uint64_t v34 = *((void *)v11 + 5);
          BOOL v44 = __OFSUB__(v34, v35);
          uint64_t v36 = v34 - v35;
          char v37 = v44;
        }
        if (v37) {
          goto LABEL_121;
        }
        unint64_t v45 = v12 - 2;
        unint64_t v51 = &v31[16 * v12 - 32];
        uint64_t v53 = *(void *)v51;
        uint64_t v52 = *((void *)v51 + 1);
        BOOL v54 = __OFSUB__(v52, v53);
        uint64_t v55 = v52 - v53;
        char v56 = v54;
        if (v54) {
          goto LABEL_124;
        }
        unint64_t v57 = &v31[16 * v33];
        uint64_t v59 = *(void *)v57;
        uint64_t v58 = *((void *)v57 + 1);
        BOOL v44 = __OFSUB__(v58, v59);
        uint64_t v60 = v58 - v59;
        if (v44) {
          goto LABEL_127;
        }
        if (__OFADD__(v55, v60)) {
          goto LABEL_128;
        }
        if (v55 + v60 >= v36)
        {
          BOOL v61 = v36 < v60;
LABEL_83:
          if (v61) {
            unint64_t v33 = v45;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v56) {
          goto LABEL_123;
        }
        uint64_t v64 = &v31[16 * v33];
        uint64_t v66 = *(void *)v64;
        uint64_t v65 = *((void *)v64 + 1);
        BOOL v44 = __OFSUB__(v65, v66);
        uint64_t v67 = v65 - v66;
        if (v44) {
          goto LABEL_126;
        }
        if (v67 < v55) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v72 = v33 - 1;
        if (v33 - 1 >= v12)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v10) {
          goto LABEL_142;
        }
        long long v73 = &v31[16 * v72];
        uint64_t v74 = *(void *)v73;
        uint64_t v75 = v31;
        uint64_t v76 = &v31[16 * v33];
        uint64_t v77 = *((void *)v76 + 1);
        sub_24B5FE93C((float *)(v10 + 4 * *(void *)v73), (float *)(v10 + 4 * *(void *)v76), v10 + 4 * v77, __dst);
        if (v1) {
          goto LABEL_113;
        }
        if (v77 < v74) {
          goto LABEL_116;
        }
        if (v33 > *((void *)v11 + 2)) {
          goto LABEL_117;
        }
        *(void *)long long v73 = v74;
        *(void *)&v75[16 * v72 + 8] = v77;
        unint64_t v78 = *((void *)v11 + 2);
        if (v33 >= v78) {
          goto LABEL_118;
        }
        unint64_t v12 = v78 - 1;
        memmove(v76, v76 + 16, 16 * (v78 - 1 - v33));
        uint64_t v31 = v75;
        *((void *)v11 + 2) = v78 - 1;
        uint64_t v10 = v99;
        if (v78 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v98;
    if (v9 >= v98)
    {
      uint64_t v8 = v96;
      uint64_t v2 = v94;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  uint64_t result = sub_24B682EE0();
  __break(1u);
  return result;
}

uint64_t sub_24B5FE93C(float *__src, float *a2, unint64_t a3, float *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 3;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 2;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 3;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 2;
  uint64_t v24 = __src;
  uint64_t v23 = __dst;
  if (v10 >= v12 >> 2)
  {
    if (v11 >= -3)
    {
      if (__dst != a2 || &a2[v13] <= __dst) {
        memmove(__dst, a2, 4 * v13);
      }
      float v16 = &v4[v13];
      int v22 = v16;
      uint64_t v24 = v6;
      if (v7 < v6 && v11 >= 4)
      {
        float v17 = (float *)(a3 - 4);
        while (1)
        {
          uint64_t v18 = v17 + 1;
          uint64_t v19 = v6 - 1;
          float v20 = *(v6 - 1);
          if (*(v16 - 1) >= v20)
          {
            int v22 = v16 - 1;
            if (v18 < v16 || v17 >= v16 || v18 != v16) {
              *float v17 = *(v16 - 1);
            }
            --v16;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v18 != v6 || v17 >= v6) {
              *float v17 = v20;
            }
            uint64_t v24 = --v6;
            if (v19 <= v7) {
              goto LABEL_42;
            }
          }
          --v17;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -3)
  {
    if (__dst != __src || &__src[v10] <= __dst) {
      memmove(__dst, __src, 4 * v10);
    }
    float v14 = &v4[v10];
    int v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 4)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4) {
            *uint64_t v7 = *v4;
          }
          uint64_t v23 = ++v4;
          float v15 = v6;
        }
        else
        {
          float v15 = v6 + 1;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *uint64_t v7 = *v6;
          }
        }
        ++v7;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v24 = v7;
    }
LABEL_42:
    sub_24B5FEBAC((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_24B682F40();
  __break(1u);
  return result;
}

char *sub_24B5FEBAC(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 3;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -4)
  {
    uint64_t result = (char *)sub_24B682F40();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 2;
    if (result != v3 || result >= &v3[4 * v7])
    {
      return (char *)memmove(result, v3, 4 * v7);
    }
  }
  return result;
}

void *sub_24B5FEC68(void *a1)
{
  return sub_24B5FDDF8(0, a1[2], 0, a1);
}

char *sub_24B5FEC7C(uint64_t a1)
{
  return sub_24B5FDF20(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_24B5FEC90(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_24B562F04(&qword_2697CC900);
  char v37 = a2;
  uint64_t v6 = sub_24B682F20();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    int v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_24B683090();
    sub_24B682860();
    uint64_t result = sub_24B6830D0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  int v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_24B5FEF9C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_24B562E8C(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_24B5FF100();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      *(void *)(v18[7] + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_24B5FEC90(result, a4 & 1);
  uint64_t result = sub_24B562E8C(a2, a3);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_17:
    uint64_t result = sub_24B682FF0();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  unint64_t v20 = (uint64_t *)(v18[6] + 16 * v12);
  *unint64_t v20 = a2;
  v20[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v21 = v18[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v23;

  return swift_bridgeObjectRetain();
}

void *sub_24B5FF100()
{
  uint64_t v1 = v0;
  sub_24B562F04(&qword_2697CC900);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24B682F10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    BOOL v22 = (void *)(*(void *)(v4 + 48) + v16);
    *BOOL v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_24B5FF2B0(uint64_t a1)
{
  return sub_24B5A4C5C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

int64_t sub_24B5FF2C4(int64_t result, int64_t a2, uint64_t a3)
{
  if (result == a2) {
    return 0;
  }
  if (a2 < result) {
    goto LABEL_25;
  }
  if (result >= a2)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v4 = result + 1;
  unint64_t v3 = result;
  if (result + 1 == a2) {
    return v3;
  }
  if (result + 1 >= a2) {
    goto LABEL_22;
  }
  if ((result & 0x8000000000000000) == 0)
  {
    unint64_t v5 = *(void *)(a3 + 16);
    if (v5 <= result)
    {
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    if (v4 >= v5)
    {
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    if (*(float *)(a3 + 32 + 4 * result) >= *(float *)(a3 + 32 + 4 * v4)) {
      unint64_t v4 = result;
    }
    if (result + 2 == a2) {
      return v4;
    }
    int64_t v6 = result;
    unint64_t v3 = v4;
    while (v6 + 2 < a2)
    {
      if (v4 >= v5) {
        goto LABEL_23;
      }
      if (v6 + 2 >= v5) {
        goto LABEL_24;
      }
      if (*(float *)(a3 + 32 + 4 * v4) < *(float *)(a3 + 40 + 4 * v6))
      {
        unint64_t v3 = v6 + 2;
        unint64_t v4 = v6 + 2;
      }
      if (a2 - 2 == ++v6) {
        return v3;
      }
    }
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_24B5FF3AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24B682C90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24B5FF410(uint64_t a1)
{
  uint64_t v2 = sub_24B682C90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24B5FF46C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24B562F04(&qword_2697CC8F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24B5FF4D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24B562F04(&qword_2697CC8F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for ColorConversionMatrix()
{
  return &type metadata for ColorConversionMatrix;
}

uint64_t initializeBufferWithCopyOfBuffer for OCDepthWarpData(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for OCDepthWarpData(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 12)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for OCDepthWarpData(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_DWORD *)(result + 8) = 0;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 12) = v3;
  return result;
}

ValueMetadata *type metadata accessor for OCDepthWarpData()
{
  return &type metadata for OCDepthWarpData;
}

uint64_t type metadata accessor for DepthWarpCircularBuffer(uint64_t a1)
{
  return sub_24B56BBFC(a1, (uint64_t *)&unk_2697CE938);
}

uint64_t type metadata accessor for SegmentIDConverter()
{
  return self;
}

ValueMetadata *type metadata accessor for Util()
{
  return &type metadata for Util;
}

uint64_t sub_24B5FF610()
{
  return type metadata accessor for Util.Timer(0);
}

uint64_t type metadata accessor for Util.Timer(uint64_t a1)
{
  return sub_24B56BBFC(a1, (uint64_t *)&unk_2697CE948);
}

void sub_24B5FF638()
{
  sub_24B5FF6C8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_24B5FF6C8()
{
  if (!qword_2697CC8F8)
  {
    sub_24B682680();
    unint64_t v0 = sub_24B682CC0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2697CC8F8);
    }
  }
}

char *sub_24B5FF720(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 4 * a1 + 32);
    size_t v6 = 4 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_24B682F40();
  __break(1u);
  return result;
}

char *sub_24B5FF80C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    size_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_24B682F40();
  __break(1u);
  return result;
}

void type metadata accessor for OCPoint(uint64_t a1)
{
}

uint64_t ObjectContour.points.getter()
{
  return swift_bridgeObjectRetain();
}

int32x2_t sub_24B5FF910()
{
  int32x2_t result = vdup_n_s32(0x7F800000u);
  qword_2697CE960 = (uint64_t)result;
  return result;
}

uint64_t ObjectContour.init(points:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (*(void *)(result + 16) < 3uLL)
  {
    swift_bridgeObjectRelease();
    int32x2_t result = 0;
  }
  *a2 = result;
  return result;
}

uint64_t ObjectContour.encloses(point:)()
{
  return OCObjectContourIsPointInsideObjectContour();
}

double ObjectContour.closestPoint(to:)()
{
  v20[7] = *MEMORY[0x263EF8340];
  uint64_t v1 = sub_24B6824D0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  size_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_24B562F04(&qword_2697CCDB0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24B6856B0;
  *(void *)(inited + 32) = 0;
  unint64_t v7 = (unint64_t *)(inited + 32);
  *(void *)(inited + 40) = 0;
  uint64_t v19 = 0;
  if (OCObjectContourGetNearestPoints()) {
    BOOL v8 = 1;
  }
  else {
    BOOL v8 = v19 < 1;
  }
  if (!v8)
  {
    unint64_t v15 = *v7;
    if ((*v7 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v15 < *(void *)(v5 + 16))
    {
      unint64_t v14 = (uint64_t *)(v5 + 32 + 8 * v15);
      goto LABEL_14;
    }
    __break(1u);
  }
  uint64_t v9 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v9, v1);
  uint64_t v10 = sub_24B6824B0();
  os_log_type_t v11 = sub_24B682B30();
  if (os_log_type_enabled(v10, v11))
  {
    unint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    v20[0] = v13;
    *(_DWORD *)unint64_t v12 = 136380675;
    uint64_t v18 = sub_24B5627B8(0xD000000000000011, 0x800000024B68E670, v20);
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v10, v11, "Object Contour.%{private}s: Failed to get nearest points!", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v13, -1, -1);
    MEMORY[0x24C5D6C00](v12, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (qword_2697CE958 != -1) {
    swift_once();
  }
  unint64_t v14 = &qword_2697CE960;
LABEL_14:
  double v16 = *(double *)v14;
  swift_bridgeObjectRelease();
  return v16;
}

double ObjectContour.center()()
{
  v13[1] = *MEMORY[0x263EF8340];
  uint64_t v0 = sub_24B6824D0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2697CE958 != -1) {
    swift_once();
  }
  uint64_t v12 = qword_2697CE960;
  size_t v4 = &v12;
  if (OCObjectContourGetCenterOfMass())
  {
    uint64_t v5 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
    size_t v6 = sub_24B6824B0();
    os_log_type_t v7 = sub_24B682B30();
    if (os_log_type_enabled(v6, v7))
    {
      BOOL v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      v13[0] = v9;
      *(_DWORD *)BOOL v8 = 136380675;
      uint64_t v11 = sub_24B5627B8(0x29287265746E6563, 0xE800000000000000, v13);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v6, v7, "Object Contour.%{private}s: Invalid center!", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v9, -1, -1);
      MEMORY[0x24C5D6C00](v8, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    size_t v4 = &qword_2697CE960;
  }
  return *(double *)v4;
}

ValueMetadata *type metadata accessor for ObjectContour()
{
  return &type metadata for ObjectContour;
}

unint64_t PhotogrammetrySession.Error.localizedDescription.getter()
{
  if (*(unsigned char *)(v0 + 8) == 1)
  {
    unint64_t result = 0xD000000000000012;
    switch(*(void *)v0)
    {
      case 1:
        unint64_t result = 0x5255206567616D49;
        break;
      case 2:
      case 5:
        unint64_t result = 0xD000000000000015;
        break;
      case 3:
        unint64_t result = 0xD000000000000023;
        break;
      case 4:
        unint64_t result = 0x676E696C706D6153;
        break;
      case 6:
        unint64_t result = 0x20656761726F7453;
        break;
      default:
        return result;
    }
  }
  else
  {
    sub_24B682E40();
    swift_bridgeObjectRelease();
    sub_24B682F90();
    sub_24B682890();
    swift_bridgeObjectRelease();
    return 0xD00000000000002ELL;
  }
  return result;
}

CoreOC::PhotogrammetrySession::Request::Detail_optional __swiftcall PhotogrammetrySession.Request.Detail.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 7;
  if ((unint64_t)rawValue < 7) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (CoreOC::PhotogrammetrySession::Request::Detail_optional)rawValue;
}

uint64_t PhotogrammetrySession.Request.Detail.rawValue.getter()
{
  return *v0;
}

CoreOC::PhotogrammetrySession::Request::Detail_optional sub_24B6000D4(Swift::Int *a1)
{
  return PhotogrammetrySession.Request.Detail.init(rawValue:)(*a1);
}

__n128 PhotogrammetrySession.Request.Geometry.orientedBoundsTransform.getter()
{
  return *(__n128 *)v0;
}

void PhotogrammetrySession.Request.Geometry.orientedBoundsTransform.setter(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  *size_t v4 = a1;
  v4[1] = a2;
  v4[2] = a3;
  v4[3] = a4;
}

uint64_t (*PhotogrammetrySession.Request.Geometry.orientedBoundsTransform.modify())()
{
  return nullsub_1;
}

__n128 PhotogrammetrySession.Request.Geometry.rootTransform.getter()
{
  return v0[4];
}

void PhotogrammetrySession.Request.Geometry.rootTransform.setter(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  v4[4] = a1;
  v4[5] = a2;
  v4[6] = a3;
  v4[7] = a4;
}

uint64_t (*PhotogrammetrySession.Request.Geometry.rootTransform.modify())()
{
  return nullsub_1;
}

__n128 sub_24B60014C()
{
  return *(__n128 *)MEMORY[0x263EF89A8];
}

void __swiftcall PhotogrammetrySession.Request.Geometry.init(orientedBoundsTransform:rootTransform:)(CoreOC::PhotogrammetrySession::Request::Geometry *__return_ptr retstr, simd_float4x4 *orientedBoundsTransform, simd_float4x4 *rootTransform)
{
  retstr->orientedBoundsTransform.columns[0] = v3;
  retstr->orientedBoundsTransform.columns[1] = v4;
  retstr->orientedBoundsTransform.columns[2] = v5;
  retstr->orientedBoundsTransform.columns[3] = v6;
  retstr->rootTransform.columns[0] = v7;
  retstr->rootTransform.columns[1] = v8;
  retstr->rootTransform.columns[2] = v9;
  retstr->rootTransform.columns[3] = v10;
}

uint64_t PhotogrammetrySession.Request.Geometry.hash(into:)()
{
  sub_24B606EC8();
  sub_24B606EC8();
  sub_24B606EC8();
  sub_24B606EC8();
  sub_24B606EC8();
  sub_24B606EC8();
  sub_24B606EC8();

  return sub_24B606EC8();
}

uint64_t static PhotogrammetrySession.Request.Geometry.== infix(_:_:)(float32x4_t *a1, float32x4_t *a2)
{
  if ((vminvq_u32((uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vceqq_f32(a1[1], a2[1]), (int8x16_t)vceqq_f32(*a1, *a2)), vandq_s8((int8x16_t)vceqq_f32(a1[2], a2[2]), (int8x16_t)vceqq_f32(a1[3], a2[3])))) & 0x80000000) != 0)return vminvq_u32((uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vceqq_f32(a1[6], a2[6]), (int8x16_t)vceqq_f32(a1[7], a2[7])), vandq_s8((int8x16_t)vceqq_f32(a1[5], a2[5]), (int8x16_t)vceqq_f32(a1[4], a2[4])))) >> 31; {
  else
  }
    return 0;
}

uint64_t PhotogrammetrySession.Request.Geometry.hashValue.getter()
{
  return sub_24B6830D0();
}

uint64_t sub_24B600374()
{
  sub_24B606EC8();
  sub_24B606EC8();
  sub_24B606EC8();
  sub_24B606EC8();
  sub_24B606EC8();
  sub_24B606EC8();
  sub_24B606EC8();

  return sub_24B606EC8();
}

uint64_t sub_24B60042C()
{
  return sub_24B6830D0();
}

uint64_t sub_24B6004F0(float32x4_t *a1, float32x4_t *a2)
{
  uint64_t result = sub_24B606F40(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
  if (result) {
    return sub_24B606F40(a1[4], a1[5], a1[6], a1[7], a2[4], a2[5], a2[6], a2[7]);
  }
  return result;
}

uint64_t PhotogrammetrySession.Request.init(modelFile:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24B562F04(&qword_2697CC580);
  uint64_t v5 = *(int *)(v4 + 48);
  uint64_t v6 = a2 + *(int *)(v4 + 64);
  uint64_t v7 = sub_24B6822E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  sub_24B56BCBC((uint64_t)v9);
  sub_24B606F6C((uint64_t)v9, v6);
  *(unsigned char *)(a2 + v5) = 5;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a2, 0, 3, v4);
}

uint64_t PhotogrammetrySession.Request.hash(into:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24B6822E0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PhotogrammetrySession.Request(0);
  MEMORY[0x270FA5388](v6 - 8);
  simd_float4 v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B607528(v1, (uint64_t)v8, type metadata accessor for PhotogrammetrySession.Request);
  uint64_t v9 = sub_24B562F04(&qword_2697CC580);
  switch((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 3, v9))
  {
    case 1u:
    case 2u:
    case 3u:
      uint64_t result = sub_24B6830A0();
      break;
    default:
      sub_24B606F6C((uint64_t)&v8[*(int *)(v9 + 64)], (uint64_t)v13);
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
      sub_24B6830A0();
      sub_24B607D0C(&qword_2697CC6B8, MEMORY[0x263F06EA8]);
      sub_24B682760();
      sub_24B6830A0();
      sub_24B606F6C((uint64_t)v13, (uint64_t)v14);
      if (sub_24B56DEE8((uint64_t)v14) == 1)
      {
        sub_24B6830B0();
      }
      else
      {
        sub_24B606F6C((uint64_t)v13, (uint64_t)v12);
        v11[0] = v12[0];
        v11[1] = v12[1];
        _DWORD v11[2] = v12[2];
        v11[3] = v12[3];
        v11[4] = v12[4];
        v11[5] = v12[5];
        v11[6] = v12[6];
        v11[7] = v12[7];
        sub_24B6830B0();
        sub_24B606EC8();
        sub_24B606EC8();
        sub_24B606EC8();
        sub_24B606EC8();
        sub_24B606EC8();
        sub_24B606EC8();
        sub_24B606EC8();
        sub_24B606EC8();
      }
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      break;
  }
  return result;
}

uint64_t PhotogrammetrySession.Request.hashValue.getter()
{
  return sub_24B6830D0();
}

uint64_t sub_24B6009B4()
{
  return sub_24B6830D0();
}

uint64_t sub_24B6009F8()
{
  return sub_24B6830D0();
}

__n128 PhotogrammetrySession.PointCloud.Point.position.getter()
{
  return *(__n128 *)v0;
}

uint64_t PhotogrammetrySession.PointCloud.Point.color.getter()
{
  return *(unsigned int *)(v0 + 16);
}

uint64_t sub_24B600A48@<X0>(uint64_t result@<X0>, __n128 *a2@<X8>, __n128 a3@<Q0>)
{
  *a2 = a3;
  a2[1].n128_u32[0] = result;
  return result;
}

uint64_t PhotogrammetrySession.PointCloud.points.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24B600A5C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

unint64_t PhotogrammetrySession.ProcessStage.localizedDescription.getter()
{
  unint64_t result = 0xD000000000000013;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6C41206567616D49;
      break;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0x6E6547206873654DLL;
      break;
    case 4:
      unint64_t result = 0x2065727574786554;
      break;
    case 5:
      unint64_t result = 0x617A696D6974704FLL;
      break;
    default:
      return result;
  }
  return result;
}

BOOL static PhotogrammetrySession.ProcessStage.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PhotogrammetrySession.ProcessStage.hash(into:)()
{
  return sub_24B6830A0();
}

uint64_t PhotogrammetrySession.ProcessStage.hashValue.getter()
{
  return sub_24B6830D0();
}

uint64_t PhotogrammetrySession.Output.ProgressInfo.estimatedRemainingTime.getter()
{
  return *(void *)v0;
}

void PhotogrammetrySession.Output.ProgressInfo.processStage.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 9);
}

uint64_t sub_24B600BFC@<X0>(uint64_t result@<X0>, char a2@<W1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v4 = *a3;
  *(void *)a4 = result;
  *(unsigned char *)(a4 + 8) = a2 & 1;
  *(unsigned char *)(a4 + 9) = v4;
  return result;
}

unint64_t PhotogrammetrySession.Output.localizedDescription.getter()
{
  uint64_t v1 = type metadata accessor for PhotogrammetrySession.Result(0);
  uint64_t v2 = MEMORY[0x270FA5388](v1);
  char v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v28 - v5;
  uint64_t v7 = type metadata accessor for PhotogrammetrySession.Request(0);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  simd_float4 v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v28 - v11;
  uint64_t v13 = type metadata accessor for PhotogrammetrySession.Output(0);
  MEMORY[0x270FA5388](v13);
  unint64_t v15 = (uint64_t *)((char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24B607528(v0, (uint64_t)v15, type metadata accessor for PhotogrammetrySession.Output);
  unint64_t v16 = 0xD00000000000001ALL;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v20 = (uint64_t)v15 + *(int *)(sub_24B562F04(&qword_2697CC640) + 48);
      sub_24B607590((uint64_t)v15, (uint64_t)v12, type metadata accessor for PhotogrammetrySession.Request);
      sub_24B607590(v20, (uint64_t)v6, type metadata accessor for PhotogrammetrySession.Result);
      uint64_t v31 = 0;
      unint64_t v32 = 0xE000000000000000;
      sub_24B682E40();
      swift_bridgeObjectRelease();
      uint64_t v31 = 0x2074736575716552;
      unint64_t v32 = 0xE800000000000000;
      sub_24B607528((uint64_t)v12, (uint64_t)v10, type metadata accessor for PhotogrammetrySession.Request);
      sub_24B682820();
      sub_24B682890();
      swift_bridgeObjectRelease();
      sub_24B682890();
      sub_24B607528((uint64_t)v6, (uint64_t)v4, type metadata accessor for PhotogrammetrySession.Result);
      sub_24B682820();
      sub_24B682890();
      swift_bridgeObjectRelease();
      sub_24B682890();
      unint64_t v16 = v31;
      sub_24B6075F8((uint64_t)v6, type metadata accessor for PhotogrammetrySession.Result);
      goto LABEL_7;
    case 2u:
      sub_24B562F04(&qword_2697CC648);
      sub_24B607590((uint64_t)v15, (uint64_t)v12, type metadata accessor for PhotogrammetrySession.Request);
      uint64_t v31 = 0;
      unint64_t v32 = 0xE000000000000000;
      sub_24B682E40();
      sub_24B682890();
      sub_24B607528((uint64_t)v12, (uint64_t)v10, type metadata accessor for PhotogrammetrySession.Request);
      sub_24B682820();
      sub_24B682890();
      swift_bridgeObjectRelease();
      sub_24B682890();
      sub_24B682A50();
      goto LABEL_6;
    case 3u:
      uint64_t v21 = (char *)v15 + *(int *)(sub_24B562F04(&qword_2697CC650) + 48);
      uint64_t v22 = *(void *)v21;
      char v23 = v21[8];
      char v24 = v21[9];
      sub_24B607590((uint64_t)v15, (uint64_t)v12, type metadata accessor for PhotogrammetrySession.Request);
      uint64_t v31 = 0;
      unint64_t v32 = 0xE000000000000000;
      sub_24B682E40();
      sub_24B682890();
      sub_24B607528((uint64_t)v12, (uint64_t)v10, type metadata accessor for PhotogrammetrySession.Request);
      sub_24B682820();
      sub_24B682890();
      swift_bridgeObjectRelease();
      sub_24B682890();
      uint64_t v28 = v22;
      char v29 = v23;
      char v30 = v24;
      sub_24B682ED0();
      goto LABEL_6;
    case 4u:
      uint64_t v25 = *v15;
      uint64_t v31 = 0;
      unint64_t v32 = 0xE000000000000000;
      sub_24B682E40();
      swift_bridgeObjectRelease();
      uint64_t v31 = 0x6920656C706D6153;
      unint64_t v32 = 0xEA00000000003D64;
      uint64_t v28 = v25;
      sub_24B682F90();
      sub_24B682890();
      swift_bridgeObjectRelease();
      sub_24B682890();
      sub_24B682890();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    case 5u:
      uint64_t v26 = *v15;
      uint64_t v31 = 0;
      unint64_t v32 = 0xE000000000000000;
      sub_24B682E40();
      sub_24B682890();
      uint64_t v28 = v26;
      sub_24B682F90();
      sub_24B682890();
      swift_bridgeObjectRelease();
LABEL_10:
      sub_24B682890();
      unint64_t v16 = v31;
      break;
    case 6u:
      return v16;
    case 7u:
      unint64_t v16 = 0xD000000000000076;
      break;
    case 8u:
      unint64_t v16 = 0xD00000000000003DLL;
      break;
    case 9u:
      unint64_t v16 = 0xD00000000000002BLL;
      break;
    case 0xAu:
      unint64_t v16 = 0xD000000000000032;
      break;
    default:
      uint64_t v17 = (char *)v15 + *(int *)(sub_24B562F04(&qword_2697CC638) + 48);
      uint64_t v18 = *(void *)v17;
      char v19 = v17[8];
      sub_24B607590((uint64_t)v15, (uint64_t)v12, type metadata accessor for PhotogrammetrySession.Request);
      uint64_t v31 = 0;
      unint64_t v32 = 0xE000000000000000;
      sub_24B682E40();
      swift_bridgeObjectRelease();
      uint64_t v31 = 0x2074736575716552;
      unint64_t v32 = 0xE800000000000000;
      sub_24B607528((uint64_t)v12, (uint64_t)v10, type metadata accessor for PhotogrammetrySession.Request);
      sub_24B682820();
      sub_24B682890();
      swift_bridgeObjectRelease();
      sub_24B682890();
      uint64_t v28 = v18;
      char v29 = v19;
      PhotogrammetrySession.Error.localizedDescription.getter();
      sub_24B682890();
      swift_bridgeObjectRelease();
      sub_24B682890();
LABEL_6:
      unint64_t v16 = v31;
LABEL_7:
      sub_24B6075F8((uint64_t)v12, type metadata accessor for PhotogrammetrySession.Request);
      break;
  }
  return v16;
}

BOOL static PhotogrammetrySession.Configuration.SampleOrdering.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PhotogrammetrySession.Configuration.SampleOrdering.hash(into:)()
{
  return sub_24B6830A0();
}

uint64_t PhotogrammetrySession.Configuration.isObjectMaskingEnabled.getter()
{
  return *v0;
}

uint64_t PhotogrammetrySession.Configuration.isObjectMaskingEnabled.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*PhotogrammetrySession.Configuration.isObjectMaskingEnabled.modify())()
{
  return nullsub_1;
}

void PhotogrammetrySession.Configuration.sampleOrdering.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

unsigned char *PhotogrammetrySession.Configuration.sampleOrdering.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 1) = *result;
  return result;
}

uint64_t (*PhotogrammetrySession.Configuration.sampleOrdering.modify())()
{
  return nullsub_1;
}

void PhotogrammetrySession.Configuration.featureSensitivity.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 2);
}

unsigned char *PhotogrammetrySession.Configuration.featureSensitivity.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 2) = *result;
  return result;
}

uint64_t (*PhotogrammetrySession.Configuration.featureSensitivity.modify())()
{
  return nullsub_1;
}

uint64_t PhotogrammetrySession.Configuration.CustomDetailSpecification.maxPolyCount.getter()
{
  return *(void *)v0;
}

uint64_t PhotogrammetrySession.Configuration.CustomDetailSpecification.maxPolyCount.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*PhotogrammetrySession.Configuration.CustomDetailSpecification.maxPolyCount.modify())()
{
  return nullsub_1;
}

CoreOC::PhotogrammetrySession::Configuration::CustomDetailSpecification::TextureDimension_optional __swiftcall PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureDimension.init(rawValue:)(Swift::UInt rawValue)
{
  if ((uint64_t)rawValue <= 4095)
  {
    if (rawValue == 1024)
    {
      *uint64_t v1 = 0;
      return (CoreOC::PhotogrammetrySession::Configuration::CustomDetailSpecification::TextureDimension_optional)rawValue;
    }
    if (rawValue == 2048)
    {
      *uint64_t v1 = 1;
      return (CoreOC::PhotogrammetrySession::Configuration::CustomDetailSpecification::TextureDimension_optional)rawValue;
    }
LABEL_12:
    *uint64_t v1 = 5;
    return (CoreOC::PhotogrammetrySession::Configuration::CustomDetailSpecification::TextureDimension_optional)rawValue;
  }
  if (rawValue == 0x4000)
  {
    *uint64_t v1 = 4;
    return (CoreOC::PhotogrammetrySession::Configuration::CustomDetailSpecification::TextureDimension_optional)rawValue;
  }
  if (rawValue == 0x2000)
  {
    *uint64_t v1 = 3;
    return (CoreOC::PhotogrammetrySession::Configuration::CustomDetailSpecification::TextureDimension_optional)rawValue;
  }
  if (rawValue != 4096) {
    goto LABEL_12;
  }
  *uint64_t v1 = 2;
  return (CoreOC::PhotogrammetrySession::Configuration::CustomDetailSpecification::TextureDimension_optional)rawValue;
}

uint64_t PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureDimension.rawValue.getter()
{
  return qword_24B687368[*v0];
}

BOOL sub_24B60158C(char *a1, char *a2)
{
  return qword_24B687368[*a1] == qword_24B687368[*a2];
}

CoreOC::PhotogrammetrySession::Configuration::CustomDetailSpecification::TextureDimension_optional sub_24B6015B0(Swift::UInt *a1)
{
  return PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureDimension.init(rawValue:)(*a1);
}

void sub_24B6015B8(void *a1@<X8>)
{
  *a1 = qword_24B687368[*v1];
}

uint64_t sub_24B6015D0()
{
  return sub_24B6830D0();
}

uint64_t sub_24B601620()
{
  return sub_24B6830A0();
}

uint64_t sub_24B601658()
{
  return sub_24B6830D0();
}

void PhotogrammetrySession.Configuration.CustomDetailSpecification.maxTextureDimension.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 8);
}

unsigned char *PhotogrammetrySession.Configuration.CustomDetailSpecification.maxTextureDimension.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 8) = *result;
  return result;
}

uint64_t (*PhotogrammetrySession.Configuration.CustomDetailSpecification.maxTextureDimension.modify())()
{
  return nullsub_1;
}

CoreOC::PhotogrammetrySession::Configuration::CustomDetailSpecification::TextureMapOutputs __swiftcall PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureMapOutputs.init(rawValue:)(CoreOC::PhotogrammetrySession::Configuration::CustomDetailSpecification::TextureMapOutputs rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureMapOutputs.diffuseColor.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureMapOutputs.normal.getter(void *a1@<X8>)
{
  *a1 = 2;
}

void static PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureMapOutputs.roughness.getter(void *a1@<X8>)
{
  *a1 = 4;
}

void static PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureMapOutputs.displacement.getter(void *a1@<X8>)
{
  *a1 = 8;
}

void static PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureMapOutputs.ambientOcclusion.getter(void *a1@<X8>)
{
  *a1 = 16;
}

void sub_24B601720()
{
  qword_2697CE978 = 31;
}

uint64_t sub_24B601730@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = v7;
      if ((v7 & ~v4) == 0) {
        uint64_t v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t static PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureMapOutputs.all.getter@<X0>(void *a1@<X8>)
{
  if (qword_2697CE970 != -1) {
    uint64_t result = swift_once();
  }
  *a1 = qword_2697CE978;
  return result;
}

uint64_t PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureMapOutputs.rawValue.getter()
{
  return *(void *)v0;
}

void *sub_24B6017EC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

BOOL sub_24B6017F8(void *a1, void *a2)
{
  return *a1 == *a2;
}

void sub_24B60180C(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_24B601814@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_24B601828@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_24B60183C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_24B601850(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_24B601880@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_24B6018AC@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_24B6018D0(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_24B6018E4(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_24B6018F8(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_24B60190C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_24B601920(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_24B601934(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_24B601948(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_24B60195C()
{
  return *v0 == 0;
}

uint64_t sub_24B60196C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E7D8](a1, a4, a2, a5, a3);
}

void *sub_24B601984(void *result)
{
  *v1 &= ~*result;
  return result;
}

void *sub_24B601998@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void PhotogrammetrySession.Configuration.CustomDetailSpecification.outputTextureMaps.getter(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
}

void *PhotogrammetrySession.Configuration.CustomDetailSpecification.outputTextureMaps.setter(void *result)
{
  *(void *)(v1 + 16) = *result;
  return result;
}

uint64_t (*PhotogrammetrySession.Configuration.CustomDetailSpecification.outputTextureMaps.modify())()
{
  return nullsub_1;
}

uint64_t static PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureFormat.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 4);
  unsigned int v4 = *(unsigned __int8 *)(a2 + 4);
  uint64_t result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0) {
    return *(float *)a1 == *(float *)a2;
  }
  return result;
}

uint64_t sub_24B601A14(uint64_t a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 4);
  unsigned int v4 = *(unsigned __int8 *)(a2 + 4);
  uint64_t result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0) {
    return *(float *)a1 == *(float *)a2;
  }
  return result;
}

void PhotogrammetrySession.Configuration.CustomDetailSpecification.textureFormat.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 28);
  *(_DWORD *)a1 = *(_DWORD *)(v1 + 24);
  *(unsigned char *)(a1 + 4) = v2;
}

uint64_t PhotogrammetrySession.Configuration.CustomDetailSpecification.textureFormat.setter(uint64_t result)
{
  char v2 = *(unsigned char *)(result + 4);
  *(_DWORD *)(v1 + 24) = *(_DWORD *)result;
  *(unsigned char *)(v1 + 28) = v2;
  return result;
}

uint64_t (*PhotogrammetrySession.Configuration.CustomDetailSpecification.textureFormat.modify())()
{
  return nullsub_1;
}

uint64_t _s6CoreOC21PhotogrammetrySessionC13ConfigurationV25CustomDetailSpecificationVAGycfC_0@<X0>(uint64_t a1@<X8>)
{
  if (qword_2697CE970 != -1) {
    uint64_t result = swift_once();
  }
  uint64_t v2 = qword_2697CE978;
  *(void *)a1 = 30000000;
  *(unsigned char *)(a1 + 8) = 3;
  *(void *)(a1 + 16) = v2;
  *(_DWORD *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 28) = 1;
  return result;
}

void PhotogrammetrySession.Configuration.customDetailSpecification.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  int v4 = *(_DWORD *)(v1 + 32);
  char v5 = *(unsigned char *)(v1 + 36);
  *(void *)a1 = *(void *)(v1 + 8);
  *(unsigned char *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(_DWORD *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 28) = v5;
}

uint64_t PhotogrammetrySession.Configuration.customDetailSpecification.setter(uint64_t result)
{
  char v2 = *(unsigned char *)(result + 8);
  uint64_t v3 = *(void *)(result + 16);
  int v4 = *(_DWORD *)(result + 24);
  char v5 = *(unsigned char *)(result + 28);
  *(void *)(v1 + 8) = *(void *)result;
  *(unsigned char *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v3;
  *(_DWORD *)(v1 + 32) = v4;
  *(unsigned char *)(v1 + 36) = v5;
  return result;
}

uint64_t (*PhotogrammetrySession.Configuration.customDetailSpecification.modify())()
{
  return nullsub_1;
}

uint64_t PhotogrammetrySession.Configuration.snapshotURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PhotogrammetrySession.Configuration(0) + 32);

  return sub_24B6076E8(v3, a1);
}

uint64_t PhotogrammetrySession.Configuration.snapshotURL.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PhotogrammetrySession.Configuration(0) + 32);

  return sub_24B607750(a1, v3);
}

uint64_t (*PhotogrammetrySession.Configuration.snapshotURL.modify())()
{
  return nullsub_1;
}

uint64_t PhotogrammetrySession.Configuration.ignoreBoundingBox.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PhotogrammetrySession.Configuration(0) + 36));
}

uint64_t PhotogrammetrySession.Configuration.ignoreBoundingBox.setter(char a1)
{
  uint64_t result = type metadata accessor for PhotogrammetrySession.Configuration(0);
  *(unsigned char *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*PhotogrammetrySession.Configuration.ignoreBoundingBox.modify())()
{
  return nullsub_1;
}

uint64_t PhotogrammetrySession.Configuration.init()@<X0>(uint64_t a1@<X8>)
{
  *(_WORD *)a1 = 1;
  *(unsigned char *)(a1 + 2) = 0;
  if (qword_2697CE970 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_2697CE978;
  *(void *)(a1 + 8) = 30000000;
  *(unsigned char *)(a1 + 16) = 3;
  *(void *)(a1 + 24) = v2;
  *(_DWORD *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 36) = 1;
  uint64_t v3 = type metadata accessor for PhotogrammetrySession.Configuration(0);
  uint64_t v4 = a1 + *(int *)(v3 + 32);
  uint64_t v5 = sub_24B6822E0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(unsigned char *)(a1 + *(int *)(v3 + 36)) = 0;
  return result;
}

uint64_t PhotogrammetrySession.Configuration.init(snapshotURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_WORD *)a2 = 1;
  *(unsigned char *)(a2 + 2) = 0;
  if (qword_2697CE970 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_2697CE978;
  *(void *)(a2 + 8) = 30000000;
  *(unsigned char *)(a2 + 16) = 3;
  *(void *)(a2 + 24) = v4;
  *(_DWORD *)(a2 + 32) = 0;
  *(unsigned char *)(a2 + 36) = 1;
  uint64_t v5 = type metadata accessor for PhotogrammetrySession.Configuration(0);
  uint64_t v6 = a2 + *(int *)(v5 + 32);
  uint64_t v7 = sub_24B6822E0();
  uint64_t v8 = *(void *)(v7 - 8);
  simd_float4 v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
  v10(v6, 1, 1, v7);
  *(unsigned char *)(a2 + *(int *)(v5 + 36)) = 0;
  sub_24B5632A8(v6, &qword_2697CC1F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v6, a1, v7);

  return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v10)(v6, 0, 1, v7);
}

uint64_t PhotogrammetrySession.HardwareSpecs.maxImageDim.getter()
{
  return *(void *)v0;
}

uint64_t PhotogrammetrySession.HardwareSpecs.maxNumSamples.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t PhotogrammetrySession.HardwareSpecs.maxNumPixels.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t PhotogrammetrySession.HardwareSpecs.maxPolyCount.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t PhotogrammetrySession.HardwareSpecs.minPolyCount.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t sub_24B601F88@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t sub_24B601F98@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 136))();
  *a2 = result;
  return result;
}

uint64_t sub_24B601FE4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 16) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24B602044()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24B60207C(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_24B6020C4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 160))();
  *a2 = result;
  return result;
}

uint64_t sub_24B602110()
{
  if (*(void *)(v0 + 24))
  {
    uint64_t v1 = *(void *)(v0 + 24);
  }
  else
  {
    uint64_t v2 = v0;
    sub_24B6066A0();
    sub_24B562F04(&qword_2697CC920);
    sub_24B5678F4(&qword_2697CC928, &qword_2697CC920);
    uint64_t v1 = sub_24B682580();
    swift_release();
    *(void *)(v2 + 24) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_24B6021D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 184))();
}

uint64_t sub_24B602218(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for PhotogrammetrySession.Configuration(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B607528(a1, (uint64_t)v6, type metadata accessor for PhotogrammetrySession.Configuration);
  uint64_t v7 = *a2 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_configuration;
  swift_beginAccess();
  sub_24B607C34((uint64_t)v6, v7);
  return swift_endAccess();
}

uint64_t sub_24B6022E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_configuration;
  swift_beginAccess();
  return sub_24B607528(v3, a1, type metadata accessor for PhotogrammetrySession.Configuration);
}

uint64_t sub_24B602350(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_configuration;
  swift_beginAccess();
  sub_24B607C34(a1, v3);
  return swift_endAccess();
}

uint64_t static PhotogrammetrySession.isSupported.getter()
{
  return sub_24B5B4194() & 1;
}

uint64_t static PhotogrammetrySession.estimatedReconstructionTime(imagesURL:)(uint64_t a1)
{
  return sub_24B602480(a1, (uint64_t (*)(uint64_t))sub_24B5B4198);
}

uint64_t static PhotogrammetrySession.isConfigurationCompatibleWithSnapshot(configuration:snapshotURL:)(unsigned __int8 *a1, uint64_t a2)
{
  return sub_24B5B41B4(a2, a1);
}

uint64_t static PhotogrammetrySession.isDeviceCompatibleWithSnapshot(snapshotURL:)()
{
  return sub_24B5B4674();
}

uint64_t static PhotogrammetrySession.getNumberOfSamplesInSnapshot(snapshotURL:)(uint64_t a1)
{
  return sub_24B602480(a1, (uint64_t (*)(uint64_t))sub_24B5B4840);
}

uint64_t sub_24B602480(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  return a2(a1);
}

uint64_t sub_24B6024C4()
{
  return sub_24B5F66AC(&xmmword_2697CE990);
}

double static PhotogrammetrySession.hardwareSpecs.getter@<D0>(uint64_t a1@<X8>)
{
  if (qword_2697CE980 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_2697CE9B0;
  double result = *(double *)&xmmword_2697CE990;
  long long v4 = unk_2697CE9A0;
  *(_OWORD *)a1 = xmmword_2697CE990;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = v2;
  return result;
}

uint64_t PhotogrammetrySession.__allocating_init(snapshotURL:)(uint64_t a1)
{
  uint64_t v2 = sub_24B6822E0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PhotogrammetrySession.Configuration(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v20 - v10;
  uint64_t v12 = type metadata accessor for MemoryLogger();
  uint64_t v21 = *(void (**)(unint64_t, unint64_t))(v12 + 88);
  uint64_t v22 = v12;
  v21(0xD00000000000002ELL, 0x800000024B68E9C0);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  char v23 = v5;
  uint64_t v26 = a1;
  v13(v5, a1, v2);
  *(_WORD *)uint64_t v9 = 1;
  v9[2] = 0;
  if (qword_2697CE970 != -1) {
    swift_once();
  }
  uint64_t v14 = qword_2697CE978;
  *((void *)v9 + 1) = 30000000;
  v9[16] = 3;
  *((void *)v9 + 3) = v14;
  *((_DWORD *)v9 + 8) = 0;
  v9[36] = 1;
  uint64_t v15 = (uint64_t)&v9[*(int *)(v6 + 32)];
  unint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v16(v15, 1, 1, v2);
  v9[*(int *)(v6 + 36)] = 0;
  sub_24B5632A8(v15, &qword_2697CC1F0);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v15, v23, v2);
  v16(v15, 0, 1, v2);
  sub_24B607590((uint64_t)v9, (uint64_t)v11, type metadata accessor for PhotogrammetrySession.Configuration);
  uint64_t v17 = v25;
  uint64_t v18 = (*(uint64_t (**)(char *))(v24 + 208))(v11);
  if (!v17) {
    v21(0xD000000000000031, 0x800000024B68E9F0);
  }
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v26, v2);
  return v18;
}

uint64_t PhotogrammetrySession.__allocating_init(configuration:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  PhotogrammetrySession.init(configuration:)(a1);
  return v2;
}

uint64_t PhotogrammetrySession.init(configuration:)(uint64_t a1)
{
  uint64_t v2 = v1;
  v136[3] = *(id *)MEMORY[0x263EF8340];
  uint64_t v4 = sub_24B562F04(&qword_2697CC1F0);
  MEMORY[0x270FA5388](v4 - 8);
  v129 = (uint8_t *)v114 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24B6822E0();
  uint64_t v132 = *(void *)(v6 - 8);
  uint64_t v133 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  v116 = (char *)v114 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v114 - v9;
  uint64_t v11 = type metadata accessor for PhotogrammetrySession.Configuration(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v118 = (uint64_t)v114 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v123 = (uint64_t)v114 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v114 - v16;
  uint64_t v18 = sub_24B6824D0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  v117 = (char *)v114 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  v115 = (char *)v114 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  v124 = (char *)v114 - v25;
  MEMORY[0x270FA5388](v24);
  BOOL v27 = (char *)v114 - v26;
  *(void *)(v2 + 16) = MEMORY[0x263F8EE78];
  *(void *)(v2 + 24) = 0;
  *(void *)(v2 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession____lazy_storage___outputSubject) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_isCancelling) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_hasClosed) = 0;
  uint64_t v28 = sub_24B57CBE8();
  uint64_t v130 = v18;
  uint64_t v131 = v19;
  char v29 = *(NSObject **)(v19 + 16);
  uint64_t v126 = v28;
  v127 = v29;
  uint64_t v128 = v19 + 16;
  ((void (*)(char *))v29)(v27);
  sub_24B607528(a1, (uint64_t)v17, type metadata accessor for PhotogrammetrySession.Configuration);
  char v30 = sub_24B6824B0();
  os_log_type_t v31 = sub_24B682B30();
  BOOL v32 = os_log_type_enabled(v30, v31);
  v122 = v10;
  uint64_t v125 = v11;
  if (v32)
  {
    uint64_t v33 = swift_slowAlloc();
    v121 = (unsigned __int8 *)a1;
    uint64_t v34 = (uint8_t *)v33;
    int64_t v35 = (void *)swift_slowAlloc();
    v136[0] = v35;
    uint64_t v120 = v2;
    *(_DWORD *)uint64_t v34 = 136446210;
    v114[1] = v34 + 4;
    sub_24B607528((uint64_t)v17, v123, type metadata accessor for PhotogrammetrySession.Configuration);
    uint64_t v36 = sub_24B682820();
    uint64_t v135 = sub_24B5627B8(v36, v37, (uint64_t *)v136);
    uint64_t v2 = v120;
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    sub_24B6075F8((uint64_t)v17, type metadata accessor for PhotogrammetrySession.Configuration);
    _os_log_impl(&dword_24B55E000, v30, v31, "Backend Session: Initializing with configuration = %{public}s", v34, 0xCu);
    swift_arrayDestroy();
    uint64_t v38 = v35;
    uint64_t v39 = v133;
    MEMORY[0x24C5D6C00](v38, -1, -1);
    uint64_t v40 = v34;
    uint64_t v41 = v121;
    MEMORY[0x24C5D6C00](v40, -1, -1);

    uint64_t v42 = v130;
    uint64_t v43 = *(void (**)(char *, uint64_t))(v131 + 8);
    v43(v27, v130);
  }
  else
  {
    sub_24B6075F8((uint64_t)v17, type metadata accessor for PhotogrammetrySession.Configuration);

    uint64_t v42 = v130;
    uint64_t v43 = *(void (**)(char *, uint64_t))(v131 + 8);
    v43(v27, v130);
    uint64_t v41 = (unsigned __int8 *)a1;
    uint64_t v39 = v133;
  }
  char v44 = sub_24B5B3EA4(v41);
  uint64_t v45 = v132;
  uint64_t v46 = (uint64_t)v129;
  if ((v44 & 1) == 0)
  {
    uint64_t v47 = v124;
    ((void (*)(char *, uint64_t, uint64_t))v127)(v124, v126, v42);
    uint64_t v48 = sub_24B6824B0();
    os_log_type_t v49 = sub_24B682B20();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = v43;
      unint64_t v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v51 = 0;
      _os_log_impl(&dword_24B55E000, v48, v49, "Backend Session: Cannot resume from snapshot URL with non-default configuration!", v51, 2u);
      uint64_t v52 = v51;
      uint64_t v43 = v50;
      MEMORY[0x24C5D6C00](v52, -1, -1);
    }

    v43(v47, v42);
    sub_24B607C98();
    swift_allocError();
    *(void *)uint64_t v53 = 2;
    goto LABEL_20;
  }
  sub_24B6076E8((uint64_t)&v41[*(int *)(v125 + 32)], (uint64_t)v129);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v46, 1, v39) == 1)
  {
    sub_24B5632A8(v46, &qword_2697CC1F0);
LABEL_19:
    sub_24B607C98();
    swift_allocError();
    *(void *)uint64_t v53 = 0;
LABEL_20:
    *(unsigned char *)(v53 + 8) = 1;
    swift_willThrow();
    sub_24B6075F8((uint64_t)v41, type metadata accessor for PhotogrammetrySession.Configuration);
LABEL_21:
    LODWORD(v67) = 0;
    goto LABEL_22;
  }
  BOOL v54 = v43;
  uint64_t v55 = v122;
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(v122, v46, v39);
  if ((sub_24B6821C0() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v55, v39);
    goto LABEL_19;
  }
  v121 = v41;
  char v56 = self;
  unint64_t v57 = v55;
  id v58 = objc_msgSend(v56, sel_defaultManager);
  sub_24B6822D0();
  uint64_t v59 = (void *)sub_24B6827A0();
  swift_bridgeObjectRelease();
  unsigned int v60 = objc_msgSend(v58, sel_fileExistsAtPath_, v59);

  if (!v60)
  {
    (*(void (**)(char *, uint64_t))(v132 + 8))(v57, v133);
    uint64_t v41 = v121;
    goto LABEL_19;
  }
  id v61 = objc_msgSend(v56, sel_defaultManager);
  sub_24B6822D0();
  uint64_t v62 = (void *)sub_24B6827A0();
  swift_bridgeObjectRelease();
  v136[0] = 0;
  id v63 = objc_msgSend(v61, sel_contentsOfDirectoryAtPath_error_, v62, v136);

  id v64 = v136[0];
  if (!v63)
  {
    id v89 = v136[0];
    sub_24B6821B0();

    swift_willThrow();
    sub_24B6075F8((uint64_t)v121, type metadata accessor for PhotogrammetrySession.Configuration);
    (*(void (**)(char *, uint64_t))(v132 + 8))(v57, v133);
    goto LABEL_21;
  }
  uint64_t v65 = sub_24B6829A0();
  id v66 = v64;

  uint64_t v67 = *(void *)(v65 + 16);
  swift_bridgeObjectRelease();
  uint64_t v68 = (uint64_t)v121;
  if (v67)
  {
    uint64_t v69 = v2 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_configuration;
    sub_24B607528((uint64_t)v121, v2 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_configuration, type metadata accessor for PhotogrammetrySession.Configuration);
    type metadata accessor for PGManager();
    swift_beginAccess();
    uint64_t v70 = v69;
    uint64_t v71 = v118;
    sub_24B607528(v70, v118, type metadata accessor for PhotogrammetrySession.Configuration);
    unint64_t v72 = v119;
    uint64_t v73 = sub_24B5B4A1C(v71);
    if (!v72)
    {
      *(void *)(v2 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_pgManager) = v73;
      uint64_t v91 = *(void (**)(uint64_t, _UNKNOWN **))(*(void *)v73 + 448);
      swift_retain();
      uint64_t v92 = swift_retain();
      uint64_t v120 = v2;
      v91(v92, &off_26FE8E5D0);
      swift_release();
      unint64_t v93 = v115;
      uint64_t v94 = v42;
      ((void (*)(char *, uint64_t, uint64_t))v127)(v115, v126, v42);
      uint64_t v95 = v132;
      uint64_t v96 = v116;
      (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v116, v122, v133);
      uint64_t v97 = sub_24B6824B0();
      os_log_type_t v98 = sub_24B682B10();
      int v99 = v98;
      if (os_log_type_enabled(v97, v98))
      {
        uint64_t v100 = swift_slowAlloc();
        uint64_t v101 = swift_slowAlloc();
        v129 = (uint8_t *)v101;
        *(_DWORD *)uint64_t v100 = 141558275;
        uint64_t v134 = 1752392040;
        uint64_t v135 = v101;
        LODWORD(v128) = v99;
        sub_24B682CD0();
        *(_WORD *)(v100 + 12) = 2081;
        uint64_t v126 = v100 + 14;
        sub_24B607D0C(&qword_2697CCB30, MEMORY[0x263F06EA8]);
        v127 = v97;
        uint64_t v102 = v133;
        uint64_t v103 = sub_24B682F90();
        uint64_t v134 = sub_24B5627B8(v103, v104, &v135);
        sub_24B682CD0();
        swift_bridgeObjectRelease();
        uint64_t v105 = *(void (**)(char *, uint64_t))(v95 + 8);
        v105(v96, v102);
        os_log_t v106 = v127;
        _os_log_impl(&dword_24B55E000, v127, (os_log_type_t)v128, "Backend Session: initialized with snapshot URL = %{private,mask.hash}s", (uint8_t *)v100, 0x16u);
        uint64_t v107 = (uint64_t)v129;
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v107, -1, -1);
        uint64_t v108 = v100;
        uint64_t v68 = (uint64_t)v121;
        MEMORY[0x24C5D6C00](v108, -1, -1);

        uint64_t v109 = v130;
        v110 = v93;
      }
      else
      {
        uint64_t v105 = *(void (**)(char *, uint64_t))(v95 + 8);
        v105(v96, v133);

        v110 = v93;
        uint64_t v109 = v94;
      }
      v54(v110, v109);
      uint64_t v113 = type metadata accessor for MemoryLogger();
      (*(void (**)(unint64_t, unint64_t))(v113 + 88))(0xD000000000000032, 0x800000024B68EA30);
      sub_24B6075F8(v68, type metadata accessor for PhotogrammetrySession.Configuration);
      v105(v122, v133);
      return v120;
    }
    uint64_t v74 = v117;
    ((void (*)(char *, uint64_t, uint64_t))v127)(v117, v126, v42);
    id v75 = v72;
    id v76 = v72;
    uint64_t v77 = sub_24B6824B0();
    os_log_type_t v78 = sub_24B682B20();
    if (os_log_type_enabled(v77, v78))
    {
      uint64_t v79 = (uint8_t *)swift_slowAlloc();
      uint64_t v80 = swift_slowAlloc();
      uint64_t v120 = v2;
      uint64_t v81 = v80;
      uint64_t v134 = (uint64_t)v72;
      uint64_t v135 = v80;
      *(_DWORD *)uint64_t v79 = 136446210;
      v129 = v79 + 4;
      id v82 = v72;
      sub_24B562F04(&qword_2697CC0A8);
      uint64_t v83 = sub_24B682820();
      uint64_t v134 = sub_24B5627B8(v83, v84, &v135);
      sub_24B682CD0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24B55E000, v77, v78, "Backend Session: initialization error = %{public}s", v79, 0xCu);
      swift_arrayDestroy();
      uint64_t v85 = v81;
      uint64_t v2 = v120;
      MEMORY[0x24C5D6C00](v85, -1, -1);
      MEMORY[0x24C5D6C00](v79, -1, -1);

      uint64_t v86 = v130;
      unint64_t v87 = v74;
    }
    else
    {

      unint64_t v87 = v74;
      uint64_t v86 = v42;
    }
    v54(v87, v86);
    v111 = v122;
    sub_24B607C98();
    swift_allocError();
    *(void *)uint64_t v112 = 2;
    LODWORD(v67) = 1;
    *(unsigned char *)(v112 + 8) = 1;
    swift_willThrow();

    sub_24B6075F8((uint64_t)v121, type metadata accessor for PhotogrammetrySession.Configuration);
    (*(void (**)(char *, uint64_t))(v132 + 8))(v111, v133);
  }
  else
  {
    sub_24B607C98();
    swift_allocError();
    *(void *)uint64_t v90 = 0;
    *(unsigned char *)(v90 + 8) = 1;
    swift_willThrow();
    sub_24B6075F8(v68, type metadata accessor for PhotogrammetrySession.Configuration);
    (*(void (**)(char *, uint64_t))(v132 + 8))(v122, v133);
  }
LABEL_22:
  swift_bridgeObjectRelease();
  swift_release();
  if (v67) {
    sub_24B6075F8(v2 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_configuration, type metadata accessor for PhotogrammetrySession.Configuration);
  }
  swift_release();
  type metadata accessor for PhotogrammetrySession(0);
  swift_deallocPartialClassInstance();
  return v2;
}

uint64_t PhotogrammetrySession.__allocating_init(imagesURL:snapshotURL:)(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a2;
  uint64_t v20 = a1;
  uint64_t v2 = sub_24B6822E0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PhotogrammetrySession.Configuration(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v18 - v10;
  v18[0] = *(void *)(type metadata accessor for MemoryLogger() + 88);
  ((void (*)(unint64_t, unint64_t))v18[0])(0xD000000000000039, 0x800000024B68EA70);
  *(_WORD *)uint64_t v11 = 1;
  _DWORD v11[2] = 0;
  if (qword_2697CE970 != -1) {
    swift_once();
  }
  uint64_t v12 = qword_2697CE978;
  *((void *)v11 + 1) = 30000000;
  v11[16] = 3;
  *((void *)v11 + 3) = v12;
  *((_DWORD *)v11 + 8) = 0;
  v11[36] = 1;
  uint64_t v13 = (uint64_t)&v11[*(int *)(v6 + 32)];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v13, 1, 1, v2);
  v11[*(int *)(v6 + 36)] = 0;
  sub_24B607D54(v19, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v20, v2);
  sub_24B607528((uint64_t)v11, (uint64_t)v9, type metadata accessor for PhotogrammetrySession.Configuration);
  uint64_t v14 = v18[2];
  uint64_t v15 = (*(uint64_t (**)(char *, char *))(v18[1] + 216))(v5, v9);
  uint64_t v16 = (void (**)(uint64_t, uint64_t))(v3 + 8);
  if (!v14) {
    ((void (*)(unint64_t, unint64_t))v18[0])(0xD00000000000003CLL, 0x800000024B68EAB0);
  }
  sub_24B5632A8(v19, &qword_2697CC1F0);
  (*v16)(v20, v2);
  sub_24B6075F8((uint64_t)v11, type metadata accessor for PhotogrammetrySession.Configuration);
  return v15;
}

uint64_t PhotogrammetrySession.__allocating_init(imagesURL:configuration:)(char *a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  PhotogrammetrySession.init(imagesURL:configuration:)(a1, a2);
  return v4;
}

uint64_t PhotogrammetrySession.init(imagesURL:configuration:)(char *a1, uint64_t a2)
{
  uint64_t v151 = a2;
  v155[3] = *(id *)MEMORY[0x263EF8340];
  uint64_t v128 = sub_24B562F04(&qword_2697CC1F0);
  uint64_t v4 = MEMORY[0x270FA5388](v128);
  uint64_t v127 = (uint64_t)&v124 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v131 = (uint64_t)&v124 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v141 = (uint64_t)&v124 - v8;
  uint64_t v145 = type metadata accessor for PhotogrammetrySession.Configuration(0);
  uint64_t v9 = MEMORY[0x270FA5388](v145);
  v139 = (unsigned __int8 *)&v124 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v142 = (uint64_t)&v124 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v144 = (uint64_t)&v124 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (void (*)(char *, uint64_t))((char *)&v124 - v15);
  uint64_t v17 = sub_24B6822E0();
  v150 = *(uint8_t **)(v17 - 8);
  uint64_t v18 = v150;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  v129 = (char *)&v124 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  v138 = (char *)&v124 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v124 - v23;
  uint64_t v25 = sub_24B6824D0();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v132 = (char *)&v124 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v130 = (char *)&v124 - v30;
  MEMORY[0x270FA5388](v29);
  BOOL v32 = (char *)&v124 - v31;
  *(void *)(v2 + 16) = MEMORY[0x263F8EE78];
  *(void *)(v2 + 24) = 0;
  *(void *)(v2 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession____lazy_storage___outputSubject) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_isCancelling) = 0;
  uint64_t v152 = v2;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_hasClosed) = 0;
  uint64_t v33 = sub_24B57CBE8();
  uint64_t v149 = v26;
  uint64_t v34 = *(void (**)(void))(v26 + 16);
  uint64_t v135 = v33;
  uint64_t v137 = v26 + 16;
  v136 = v34;
  ((void (*)(char *))v34)(v32);
  v147 = v18;
  uint64_t v36 = v18 + 16;
  int64_t v35 = (void (*)(char *, uint64_t, uint64_t))*((void *)v18 + 2);
  unint64_t v37 = a1;
  uint64_t v38 = v17;
  uint64_t v134 = v36;
  uint64_t v133 = v35;
  v35(v24, (uint64_t)a1, v17);
  v146 = v16;
  sub_24B607528(v151, (uint64_t)v16, type metadata accessor for PhotogrammetrySession.Configuration);
  uint64_t v39 = sub_24B6824B0();
  os_log_type_t v40 = sub_24B682B30();
  int v41 = v40;
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v42 = swift_slowAlloc();
    uint64_t v126 = (void *)swift_slowAlloc();
    v155[0] = v126;
    *(_DWORD *)uint64_t v42 = 136380931;
    v143 = v37;
    sub_24B607D0C(&qword_2697CCB30, MEMORY[0x263F06EA8]);
    int v125 = v41;
    uint64_t v43 = v38;
    uint64_t v44 = sub_24B682F90();
    uint64_t v154 = sub_24B5627B8(v44, v45, (uint64_t *)v155);
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    v148 = (void (*)(char *, uint64_t))*((void *)v150 + 1);
    v148(v24, v38);
    *(_WORD *)(v42 + 12) = 2082;
    uint64_t v46 = v146;
    sub_24B607528((uint64_t)v146, v144, type metadata accessor for PhotogrammetrySession.Configuration);
    uint64_t v47 = sub_24B682820();
    uint64_t v154 = sub_24B5627B8(v47, v48, (uint64_t *)v155);
    sub_24B682CD0();
    os_log_type_t v49 = v143;
    swift_bridgeObjectRelease();
    sub_24B6075F8((uint64_t)v46, type metadata accessor for PhotogrammetrySession.Configuration);
    _os_log_impl(&dword_24B55E000, v39, (os_log_type_t)v125, "Backend Session: Initializing with images URL = %{private}s and configuration = %{public}s", (uint8_t *)v42, 0x16u);
    uint64_t v50 = v126;
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v50, -1, -1);
    MEMORY[0x24C5D6C00](v42, -1, -1);

    unint64_t v51 = *(void (**)(char *, uint64_t))(v149 + 8);
    v51(v32, v25);
    uint64_t v52 = v43;
  }
  else
  {
    uint64_t v53 = v24;
    uint64_t v52 = v38;
    v148 = (void (*)(char *, uint64_t))*((void *)v150 + 1);
    v148(v53, v38);
    sub_24B6075F8((uint64_t)v146, type metadata accessor for PhotogrammetrySession.Configuration);

    unint64_t v51 = *(void (**)(char *, uint64_t))(v149 + 8);
    v51(v32, v25);
    os_log_type_t v49 = v37;
  }
  char v54 = sub_24B6821C0();
  uint64_t v55 = v151;
  if ((v54 & 1) == 0)
  {
    sub_24B607C98();
    swift_allocError();
    *(void *)uint64_t v71 = 1;
    *(unsigned char *)(v71 + 8) = 1;
LABEL_11:
    swift_willThrow();
    sub_24B6075F8(v55, type metadata accessor for PhotogrammetrySession.Configuration);
    LODWORD(v62) = 0;
    goto LABEL_12;
  }
  uint64_t v124 = v25;
  id v56 = objc_msgSend(self, sel_defaultManager);
  sub_24B6822D0();
  unint64_t v57 = (void *)sub_24B6827A0();
  swift_bridgeObjectRelease();
  v155[0] = 0;
  id v58 = objc_msgSend(v56, sel_contentsOfDirectoryAtPath_error_, v57, v155);

  id v59 = v155[0];
  if (!v58)
  {
    id v72 = v155[0];
    sub_24B6821B0();

    goto LABEL_11;
  }
  uint64_t v60 = sub_24B6829A0();
  id v61 = v59;

  uint64_t v62 = *(void *)(v60 + 16);
  swift_bridgeObjectRelease();
  if (!v62)
  {
    sub_24B607C98();
    swift_allocError();
    *(void *)uint64_t v74 = 1;
    *(unsigned char *)(v74 + 8) = 1;
    swift_willThrow();
    sub_24B6075F8(v55, type metadata accessor for PhotogrammetrySession.Configuration);
    goto LABEL_12;
  }
  uint64_t v63 = v145;
  uint64_t v64 = v141;
  sub_24B6076E8(v55 + *(int *)(v145 + 32), v141);
  uint64_t v65 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*((void *)v150 + 6);
  int v66 = v65(v64, 1, v52);
  sub_24B5632A8(v64, &qword_2697CC1F0);
  uint64_t v67 = v55;
  uint64_t v68 = v55;
  uint64_t v69 = v52;
  uint64_t v70 = v142;
  sub_24B607528(v68, v142, type metadata accessor for PhotogrammetrySession.Configuration);
  if (v66 == 1)
  {
    sub_24B6075F8(v70, type metadata accessor for PhotogrammetrySession.Configuration);
    uint64_t v52 = v69;
LABEL_19:
    v146 = v51;
    uint64_t v78 = v152 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_configuration;
    sub_24B607528(v67, v152 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_configuration, type metadata accessor for PhotogrammetrySession.Configuration);
    type metadata accessor for PGManager();
    uint64_t v79 = (uint64_t)v138;
    uint64_t v80 = v133;
    v133(v138, (uint64_t)v49, v52);
    swift_beginAccess();
    uint64_t v81 = v78;
    id v82 = v139;
    sub_24B607528(v81, (uint64_t)v139, type metadata accessor for PhotogrammetrySession.Configuration);
    uint64_t v83 = v140;
    uint64_t v84 = sub_24B5B5E2C(v79, v82);
    v143 = v49;
    if (!v83)
    {
      *(void *)(v152 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_pgManager) = v84;
      uint64_t v100 = *(void (**)(uint64_t, _UNKNOWN **))(*(void *)v84 + 448);
      swift_retain();
      uint64_t v101 = swift_retain();
      v100(v101, &off_26FE8E5D0);
      swift_release();
      uint64_t v102 = v130;
      ((void (*)(char *, uint64_t, uint64_t))v136)(v130, v135, v124);
      uint64_t v103 = v129;
      v80(v129, (uint64_t)v49, v52);
      swift_retain_n();
      unint64_t v104 = sub_24B6824B0();
      os_log_type_t v105 = sub_24B682B10();
      int v106 = v105;
      BOOL v107 = os_log_type_enabled(v104, v105);
      uint64_t v108 = v146;
      if (v107)
      {
        uint64_t v109 = swift_slowAlloc();
        uint64_t v110 = swift_slowAlloc();
        v150 = (uint8_t *)v110;
        *(_DWORD *)uint64_t v109 = 141558787;
        uint64_t v153 = 1752392040;
        uint64_t v154 = v110;
        sub_24B682CD0();
        *(_WORD *)(v109 + 12) = 2081;
        LODWORD(v144) = v106;
        sub_24B607D0C(&qword_2697CCB30, MEMORY[0x263F06EA8]);
        uint64_t v111 = sub_24B682F90();
        uint64_t v153 = sub_24B5627B8(v111, v112, &v154);
        sub_24B682CD0();
        swift_bridgeObjectRelease();
        uint64_t v113 = v52;
        v114 = v103;
        v115 = (void (*)(uint64_t, uint64_t))v148;
        v148(v114, v52);
        *(_WORD *)(v109 + 22) = 2160;
        uint64_t v153 = 1752392040;
        sub_24B682CD0();
        *(_WORD *)(v109 + 32) = 2081;
        sub_24B6076E8(v152 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_configuration + *(int *)(v145 + 32), v127);
        uint64_t v116 = sub_24B682820();
        uint64_t v153 = sub_24B5627B8(v116, v117, &v154);
        sub_24B682CD0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24B55E000, v104, (os_log_type_t)v144, "Backend Session: initialized with images URL = %{private,mask.hash}s, snapshot URL = %{private,mask.hash}s", (uint8_t *)v109, 0x2Au);
        uint64_t v118 = v150;
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v118, -1, -1);
        uint64_t v119 = v151;
        MEMORY[0x24C5D6C00](v109, -1, -1);

        v146(v130, v124);
      }
      else
      {
        uint64_t v113 = v52;
        v122 = v103;
        v115 = (void (*)(uint64_t, uint64_t))v148;
        v148(v122, v52);

        swift_release_n();
        v108(v102, v124);
        uint64_t v119 = v151;
      }
      uint64_t v123 = type metadata accessor for MemoryLogger();
      (*(void (**)(unint64_t, unint64_t))(v123 + 88))(0xD000000000000041, 0x800000024B68EAF0);
      sub_24B6075F8(v119, type metadata accessor for PhotogrammetrySession.Configuration);
      v115((uint64_t)v143, v113);
      return v152;
    }
    uint64_t v85 = v124;
    uint64_t v86 = v132;
    v136();
    id v87 = v83;
    id v88 = v83;
    id v89 = sub_24B6824B0();
    os_log_type_t v90 = sub_24B682B20();
    BOOL v91 = os_log_type_enabled(v89, v90);
    uint64_t v92 = v146;
    if (v91)
    {
      unint64_t v93 = (uint8_t *)swift_slowAlloc();
      uint64_t v94 = v89;
      uint64_t v95 = swift_slowAlloc();
      uint64_t v153 = (uint64_t)v83;
      uint64_t v154 = v95;
      *(_DWORD *)unint64_t v93 = 136446210;
      v150 = v93 + 4;
      id v96 = v83;
      sub_24B562F04(&qword_2697CC0A8);
      uint64_t v97 = sub_24B682820();
      uint64_t v153 = sub_24B5627B8(v97, v98, &v154);
      uint64_t v99 = v151;
      sub_24B682CD0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24B55E000, v94, v90, "Backend Session: initialization error = %{public}s", v93, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v95, -1, -1);
      MEMORY[0x24C5D6C00](v93, -1, -1);

      v92(v132, v124);
    }
    else
    {

      v92(v86, v85);
      uint64_t v99 = v151;
    }
    sub_24B607C98();
    swift_allocError();
    *(void *)uint64_t v121 = 2;
    LODWORD(v62) = 1;
    *(unsigned char *)(v121 + 8) = 1;
    swift_willThrow();

    sub_24B6075F8(v99, type metadata accessor for PhotogrammetrySession.Configuration);
    os_log_type_t v49 = v143;
LABEL_12:
    v148(v49, v52);
    swift_bridgeObjectRelease();
    swift_release();
    if (v62) {
      sub_24B6075F8(v152 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_configuration, type metadata accessor for PhotogrammetrySession.Configuration);
    }
    swift_release();
    type metadata accessor for PhotogrammetrySession(0);
    swift_deallocPartialClassInstance();
    return v152;
  }
  uint64_t v75 = v131;
  sub_24B6076E8(v70 + *(int *)(v63 + 32), v131);
  uint64_t result = v65(v75, 1, v69);
  if (result != 1)
  {
    uint64_t v76 = v75;
    char v77 = sub_24B6821C0();
    sub_24B6075F8(v70, type metadata accessor for PhotogrammetrySession.Configuration);
    v148((char *)v76, v69);
    uint64_t v52 = v69;
    if ((v77 & 1) == 0)
    {
      sub_24B607C98();
      swift_allocError();
      *(void *)uint64_t v120 = 0;
      *(unsigned char *)(v120 + 8) = 1;
      swift_willThrow();
      sub_24B6075F8(v67, type metadata accessor for PhotogrammetrySession.Configuration);
      LODWORD(v62) = 0;
      goto LABEL_12;
    }
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t PhotogrammetrySession.__allocating_init(photogrammetrySamples:configuration:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  PhotogrammetrySession.init(photogrammetrySamples:configuration:)(a1, a2);
  return v4;
}

uint64_t PhotogrammetrySession.init(photogrammetrySamples:configuration:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v86 = a1;
  uint64_t v5 = sub_24B562F04(&qword_2697CC1F0);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v78 = (uint64_t)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v82 = (uint64_t)&v72 - v8;
  uint64_t v87 = type metadata accessor for PhotogrammetrySession.Configuration(0);
  uint64_t v9 = MEMORY[0x270FA5388](v87);
  uint64_t v79 = (unsigned __int8 *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v83 = (uint64_t)&v72 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v72 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v72 - v16;
  uint64_t v18 = sub_24B6824D0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  char v77 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v72 - v22;
  *(void *)(v3 + 16) = MEMORY[0x263F8EE78];
  *(void *)(v3 + 24) = 0;
  *(void *)(v3 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession____lazy_storage___outputSubject) = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_isCancelling) = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_hasClosed) = 0;
  uint64_t v24 = sub_24B57CBE8();
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  uint64_t v75 = v24;
  uint64_t v76 = v19 + 16;
  uint64_t v74 = v25;
  ((void (*)(char *))v25)(v23);
  uint64_t v88 = a2;
  sub_24B607528(a2, (uint64_t)v17, type metadata accessor for PhotogrammetrySession.Configuration);
  uint64_t v26 = sub_24B6824B0();
  os_log_type_t v27 = sub_24B682B30();
  BOOL v28 = os_log_type_enabled(v26, v27);
  uint64_t v84 = v18;
  uint64_t v85 = v3;
  uint64_t v81 = v19;
  if (v28)
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    v90[0] = v30;
    *(_DWORD *)uint64_t v29 = 136446210;
    sub_24B607528((uint64_t)v17, (uint64_t)v15, type metadata accessor for PhotogrammetrySession.Configuration);
    uint64_t v31 = sub_24B682820();
    uint64_t v91 = sub_24B5627B8(v31, v32, v90);
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    sub_24B6075F8((uint64_t)v17, type metadata accessor for PhotogrammetrySession.Configuration);
    _os_log_impl(&dword_24B55E000, v26, v27, "Backend Session: Initializing with photogrammetry samples and configuration = %{public}s", v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v30, -1, -1);
    MEMORY[0x24C5D6C00](v29, -1, -1);

    uint64_t v73 = *(void (**)(char *, uint64_t))(v81 + 8);
    v73(v23, v84);
  }
  else
  {
    sub_24B6075F8((uint64_t)v17, type metadata accessor for PhotogrammetrySession.Configuration);

    uint64_t v73 = *(void (**)(char *, uint64_t))(v19 + 8);
    v73(v23, v18);
  }
  id v72 = *(void (**)(unint64_t, unint64_t))(type metadata accessor for MemoryLogger() + 88);
  v72(0xD00000000000004ALL, 0x800000024B68EB40);
  uint64_t v33 = v88;
  uint64_t v34 = v82;
  sub_24B6076E8(v88 + *(int *)(v87 + 32), v82);
  uint64_t v35 = sub_24B6822E0();
  uint64_t v36 = *(void *)(v35 - 8);
  unint64_t v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
  int v38 = v37(v34, 1, v35);
  sub_24B5632A8(v34, &qword_2697CC1F0);
  uint64_t v39 = v83;
  sub_24B607528(v33, v83, type metadata accessor for PhotogrammetrySession.Configuration);
  if (v38 == 1)
  {
    sub_24B6075F8(v39, type metadata accessor for PhotogrammetrySession.Configuration);
    uint64_t v40 = v85;
    uint64_t v41 = v86;
    goto LABEL_8;
  }
  uint64_t v42 = v78;
  sub_24B6076E8(v39 + *(int *)(v87 + 32), v78);
  uint64_t result = v37(v42, 1, v35);
  uint64_t v44 = v39;
  uint64_t v41 = v86;
  if (result != 1)
  {
    uint64_t v45 = v42;
    char v46 = sub_24B6821C0();
    sub_24B6075F8(v44, type metadata accessor for PhotogrammetrySession.Configuration);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v45, v35);
    uint64_t v40 = v85;
    if ((v46 & 1) == 0)
    {
      sub_24B607C98();
      swift_allocError();
      *(void *)uint64_t v68 = 0;
      *(unsigned char *)(v68 + 8) = 1;
      swift_willThrow();
      swift_release();
      int v69 = 0;
      uint64_t v70 = v88;
      goto LABEL_15;
    }
LABEL_8:
    uint64_t v47 = v40 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_configuration;
    uint64_t v48 = v88;
    sub_24B607528(v88, v40 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_configuration, type metadata accessor for PhotogrammetrySession.Configuration);
    type metadata accessor for PGManager();
    uint64_t v91 = v41;
    swift_beginAccess();
    os_log_type_t v49 = v79;
    sub_24B607528(v47, (uint64_t)v79, type metadata accessor for PhotogrammetrySession.Configuration);
    swift_retain();
    uint64_t v50 = sub_24B562F04(&qword_2697CC5C8);
    sub_24B5678F4(&qword_2697CC938, &qword_2697CC5C8);
    unint64_t v51 = v80;
    uint64_t v52 = sub_24B5B73E0((uint64_t)&v91, v49, v50);
    if (!v51)
    {
      *(void *)(v40 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_pgManager) = v52;
      int v66 = *(void (**)(uint64_t, _UNKNOWN **))(*(void *)v52 + 448);
      swift_retain();
      uint64_t v67 = swift_retain();
      v66(v67, &off_26FE8E5D0);
      swift_release();
      v72(0xD000000000000054, 0x800000024B68EB90);
      swift_release();
      sub_24B6075F8(v48, type metadata accessor for PhotogrammetrySession.Configuration);
      return v40;
    }
    uint64_t v53 = v77;
    uint64_t v54 = v84;
    v74(v77, v75, v84);
    id v55 = v51;
    id v56 = v51;
    unint64_t v57 = sub_24B6824B0();
    os_log_type_t v58 = sub_24B682B20();
    if (os_log_type_enabled(v57, v58))
    {
      id v59 = (uint8_t *)swift_slowAlloc();
      uint64_t v60 = swift_slowAlloc();
      uint64_t v91 = v60;
      *(_DWORD *)id v59 = 136446210;
      uint64_t v89 = (uint64_t)v51;
      id v61 = v51;
      sub_24B562F04(&qword_2697CC0A8);
      uint64_t v62 = sub_24B682820();
      uint64_t v89 = sub_24B5627B8(v62, v63, &v91);
      uint64_t v40 = v85;
      sub_24B682CD0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24B55E000, v57, v58, "Backend Session: initialization error = %{public}s", v59, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v60, -1, -1);
      MEMORY[0x24C5D6C00](v59, -1, -1);

      uint64_t v64 = v53;
      uint64_t v65 = v84;
    }
    else
    {

      uint64_t v64 = v53;
      uint64_t v65 = v54;
    }
    v73(v64, v65);
    uint64_t v70 = v88;
    sub_24B607C98();
    swift_allocError();
    *(void *)uint64_t v71 = 2;
    int v69 = 1;
    *(unsigned char *)(v71 + 8) = 1;
    swift_willThrow();
    swift_release();

LABEL_15:
    sub_24B6075F8(v70, type metadata accessor for PhotogrammetrySession.Configuration);
    swift_bridgeObjectRelease();
    swift_release();
    if (v69) {
      sub_24B6075F8(v40 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_configuration, type metadata accessor for PhotogrammetrySession.Configuration);
    }
    swift_release();
    type metadata accessor for PhotogrammetrySession(0);
    swift_deallocPartialClassInstance();
    return v40;
  }
  __break(1u);
  return result;
}

uint64_t PhotogrammetrySession.deinit()
{
  uint64_t v1 = *(void (**)(unint64_t, unint64_t))(type metadata accessor for MemoryLogger() + 88);
  v1(0xD00000000000001ELL, 0x800000024B68EBF0);
  v1(0xD000000000000021, 0x800000024B68EC10);
  swift_bridgeObjectRelease();
  swift_release();
  sub_24B6075F8(v0 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_configuration, type metadata accessor for PhotogrammetrySession.Configuration);
  swift_release();
  swift_release();
  return v0;
}

uint64_t PhotogrammetrySession.__deallocating_deinit()
{
  PhotogrammetrySession.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_24B605854(uint64_t a1)
{
  uint64_t v68 = sub_24B6822E0();
  uint64_t v62 = *(void (***)(char *, uint64_t))(v68 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v68);
  id v61 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v60 = (char *)&v57 - v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v57 - v6;
  uint64_t v8 = type metadata accessor for PhotogrammetrySession.Request(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v71 = (uint64_t)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v70 = (char *)&v57 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v57 - v14;
  uint64_t v16 = sub_24B6824D0();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_24B57CBE8();
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v20, v16);
  uint64_t v21 = sub_24B6824B0();
  os_log_type_t v22 = sub_24B682B30();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v69 = v9;
    uint64_t v24 = a1;
    uint64_t v25 = v23;
    *(_WORD *)uint64_t v23 = 0;
    _os_log_impl(&dword_24B55E000, v21, v22, "Backend Session: process request(s).", v23, 2u);
    uint64_t v26 = v25;
    a1 = v24;
    uint64_t v9 = v69;
    MEMORY[0x24C5D6C00](v26, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  uint64_t v27 = a1;
  uint64_t v28 = *(void *)(a1 + 16);
  if (!v28
    || (*(unsigned char *)(v66 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_isCancelling) & 1) != 0
    || (*(unsigned char *)(v66 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_hasClosed) & 1) != 0)
  {
    goto LABEL_27;
  }
  unint64_t v67 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v29 = v27 + v67;
  uint64_t v30 = *(void *)(v9 + 72);
  uint64_t v64 = (void (**)(char *, char *, uint64_t))(v62 + 2);
  uint64_t v65 = (void (**)(char *, uint64_t, uint64_t))(v62 + 4);
  ++v62;
  uint64_t v57 = v27;
  swift_bridgeObjectRetain();
  unint64_t v31 = MEMORY[0x263F8EE78];
  unint64_t v32 = v60;
  uint64_t v33 = (uint64_t)v70;
  id v59 = v7;
  uint64_t v69 = v30;
  unint64_t v63 = v15;
  do
  {
    sub_24B607528(v29, (uint64_t)v15, type metadata accessor for PhotogrammetrySession.Request);
    sub_24B607528((uint64_t)v15, v33, type metadata accessor for PhotogrammetrySession.Request);
    uint64_t v37 = sub_24B562F04(&qword_2697CC580);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 48))(v33, 3, v37))
    {
      sub_24B6075F8(v33, type metadata accessor for PhotogrammetrySession.Request);
    }
    else
    {
      uint64_t v40 = v68;
      (*v65)(v7, v33, v68);
      char v41 = sub_24B6821C0();
      uint64_t v42 = *v64;
      (*v64)(v32, v7, v40);
      if ((v41 & 1) == 0)
      {
        uint64_t v34 = *v62;
        uint64_t v35 = v68;
        (*v62)(v32, v68);
        v34(v7, v35);
        uint64_t v36 = v69;
        uint64_t v33 = (uint64_t)v70;
        uint64_t v15 = v63;
        goto LABEL_8;
      }
      char v43 = sub_24B682230();
      uint64_t v44 = v68;
      uint64_t v45 = v32;
      char v46 = v61;
      v42(v61, v45, v68);
      uint64_t v15 = v63;
      if ((v43 & 1) == 0)
      {
        uint64_t v47 = v44;
        if (sub_24B6821D0() != 2053403509 || v48 != 0xE400000000000000)
        {
          int v58 = sub_24B682FA0();
          swift_bridgeObjectRelease();
          unint64_t v51 = *v62;
          uint64_t v52 = v47;
          (*v62)(v46, v47);
          unint64_t v32 = v60;
          v51(v60, v47);
          uint64_t v7 = v59;
          v51(v59, v52);
          uint64_t v36 = v69;
          uint64_t v33 = (uint64_t)v70;
          if ((v58 & 1) == 0) {
            goto LABEL_8;
          }
          goto LABEL_11;
        }
        swift_bridgeObjectRelease();
        uint64_t v45 = v60;
      }
      os_log_type_t v49 = *v62;
      (*v62)(v46, v44);
      v49(v45, v44);
      uint64_t v50 = v59;
      v49(v59, v44);
      unint64_t v32 = v45;
      uint64_t v7 = v50;
    }
LABEL_11:
    sub_24B607528((uint64_t)v15, v71, type metadata accessor for PhotogrammetrySession.Request);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v31 = sub_24B5D3C4C(0, *(void *)(v31 + 16) + 1, 1, v31);
    }
    unint64_t v39 = *(void *)(v31 + 16);
    unint64_t v38 = *(void *)(v31 + 24);
    if (v39 >= v38 >> 1) {
      unint64_t v31 = sub_24B5D3C4C(v38 > 1, v39 + 1, 1, v31);
    }
    *(void *)(v31 + 16) = v39 + 1;
    uint64_t v36 = v69;
    sub_24B607590(v71, v31 + v67 + v39 * v69, type metadata accessor for PhotogrammetrySession.Request);
    uint64_t v33 = (uint64_t)v70;
LABEL_8:
    sub_24B6075F8((uint64_t)v15, type metadata accessor for PhotogrammetrySession.Request);
    v29 += v36;
    --v28;
  }
  while (v28);
  swift_bridgeObjectRelease();
  if (*(void *)(v31 + 16))
  {
    uint64_t v53 = v66;
    swift_beginAccess();
    uint64_t v54 = swift_bridgeObjectRetain();
    sub_24B606D04(v54);
    swift_endAccess();
    (*(void (**)(unint64_t))(**(void **)(v53
                                                           + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_pgManager)
                                             + 616))(v31);
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_27:
  sub_24B607C98();
  swift_allocError();
  *(void *)uint64_t v56 = 3;
  *(unsigned char *)(v56 + 8) = 1;
  return swift_willThrow();
}

uint64_t sub_24B606004()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24B57CBE8();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  uint64_t v7 = sub_24B6824B0();
  os_log_type_t v8 = sub_24B682B30();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_24B55E000, v7, v8, "Backend Session: cancel all requests.", v9, 2u);
    MEMORY[0x24C5D6C00](v9, -1, -1);
  }

  uint64_t v10 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_isCancelling) = 1;
  return (*(uint64_t (**)(uint64_t))(**(void **)(v1 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_pgManager)
                                            + 624))(v10);
}

uint64_t sub_24B6061B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  os_log_type_t v8 = (char *)&v25 - v7;
  uint64_t v9 = sub_24B57CBE8();
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v10(v8, v9, v2);
  uint64_t v11 = sub_24B6824B0();
  os_log_type_t v12 = sub_24B682B30();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = v9;
    uint64_t v14 = v10;
    uint64_t v15 = v1;
    uint64_t v16 = v6;
    uint64_t v17 = v13;
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_24B55E000, v11, v12, "Backend Session: close session.", v13, 2u);
    uint64_t v18 = v17;
    uint64_t v6 = v16;
    uint64_t v1 = v15;
    uint64_t v10 = v14;
    uint64_t v9 = v26;
    MEMORY[0x24C5D6C00](v18, -1, -1);
  }

  uint64_t v19 = *(uint64_t (**)(char *, uint64_t))(v3 + 8);
  uint64_t v20 = v19(v8, v2);
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_hasClosed))
  {
    v10(v6, v9, v2);
    uint64_t v21 = sub_24B6824B0();
    os_log_type_t v22 = sub_24B682B20();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl(&dword_24B55E000, v21, v22, "Backend Session: session has closed.", v23, 2u);
      MEMORY[0x24C5D6C00](v23, -1, -1);
    }

    return v19(v6, v2);
  }
  else
  {
    *(unsigned char *)(v1 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_hasClosed) = 1;
    return (*(uint64_t (**)(uint64_t))(**(void **)(v1
                                                            + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_pgManager)
                                              + 632))(v20);
  }
}

uint64_t sub_24B606450()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24B57CBE8();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  uint64_t v7 = sub_24B6824B0();
  os_log_type_t v8 = sub_24B682B30();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_24B55E000, v7, v8, "Backend Session: resume request.", v9, 2u);
    MEMORY[0x24C5D6C00](v9, -1, -1);
  }

  uint64_t v10 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(uint64_t))(**(void **)(v1 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_pgManager)
                                            + 648))(v10);
}

uint64_t sub_24B6065F8()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_pgManager) + 1336))();
}

uint64_t sub_24B60664C()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_pgManager) + 1312))();
}

uint64_t sub_24B6066A0()
{
  uint64_t v1 = OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession____lazy_storage___outputSubject;
  if (*(void *)(v0 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession____lazy_storage___outputSubject))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession____lazy_storage___outputSubject);
  }
  else
  {
    uint64_t v3 = v0;
    sub_24B562F04(&qword_2697CC920);
    swift_allocObject();
    uint64_t v2 = sub_24B682510();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_24B606724(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for PhotogrammetrySession.Request(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v8 = *(uint64_t (**)(uint64_t))(*(void *)v1 + 136);
  uint64_t v9 = *(void *)(v8(v5) + 16);
  uint64_t result = swift_bridgeObjectRelease();
  if (v9)
  {
    unint64_t v11 = 0;
    while (1)
    {
      uint64_t result = v8(result);
      if (v11 >= *(void *)(result + 16)) {
        break;
      }
      sub_24B607528(result+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v11, (uint64_t)v7, type metadata accessor for PhotogrammetrySession.Request);
      swift_bridgeObjectRelease();
      char v12 = _s6CoreOC21PhotogrammetrySessionC7RequestO2eeoiySbAE_AEtFZ_0(a1, (uint64_t)v7);
      uint64_t result = sub_24B6075F8((uint64_t)v7, type metadata accessor for PhotogrammetrySession.Request);
      if (v12)
      {
        swift_beginAccess();
        sub_24B6068F4(v11, (uint64_t)v7);
        sub_24B6075F8((uint64_t)v7, type metadata accessor for PhotogrammetrySession.Request);
        return swift_endAccess();
      }
      if (v9 == ++v11) {
        return result;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_24B6068F4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = sub_24B606EB4(v5);
  }
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v7 = v6 - 1;
  uint64_t v8 = *(void *)(type metadata accessor for PhotogrammetrySession.Request(0) - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = v5 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)) + v9 * a1;
  uint64_t result = sub_24B607590(v10, a2, type metadata accessor for PhotogrammetrySession.Request);
  if ((uint64_t)(v7 - a1) < 0)
  {
LABEL_15:
    uint64_t result = sub_24B682F40();
    __break(1u);
    return result;
  }
  if (v9 > 0 || v10 >= v10 + v9 + v9 * (v7 - a1))
  {
    uint64_t result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (v9)
  {
    uint64_t result = swift_arrayInitWithTakeBackToFront();
  }
  *(void *)(v5 + 16) = v7;
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_24B606A7C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for PhotogrammetrySession.Output(0);
  MEMORY[0x270FA5388](v3);
  unint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PhotogrammetrySession.Request(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B6066A0();
  sub_24B682500();
  swift_release();
  sub_24B607528(a1, (uint64_t)v5, type metadata accessor for PhotogrammetrySession.Output);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      sub_24B607590((uint64_t)v5, (uint64_t)v8, type metadata accessor for PhotogrammetrySession.Request);
      goto LABEL_4;
    case 1u:
      uint64_t v9 = (uint64_t)&v5[*(int *)(sub_24B562F04(&qword_2697CC640) + 48)];
      sub_24B607590((uint64_t)v5, (uint64_t)v8, type metadata accessor for PhotogrammetrySession.Request);
      sub_24B6075F8(v9, type metadata accessor for PhotogrammetrySession.Result);
LABEL_4:
      sub_24B606724((uint64_t)v8);
      unint64_t v10 = type metadata accessor for PhotogrammetrySession.Request;
      uint64_t v11 = (uint64_t)v8;
      return sub_24B6075F8(v11, v10);
    case 9u:
      swift_beginAccess();
      *(void *)(v1 + 16) = MEMORY[0x263F8EE78];
      return swift_bridgeObjectRelease();
    case 0xAu:
      swift_beginAccess();
      *(void *)(v1 + 16) = MEMORY[0x263F8EE78];
      uint64_t result = swift_bridgeObjectRelease();
      *(unsigned char *)(v1 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_isCancelling) = 0;
      return result;
    default:
      unint64_t v10 = type metadata accessor for PhotogrammetrySession.Output;
      uint64_t v11 = (uint64_t)v5;
      return sub_24B6075F8(v11, v10);
  }
}

uint64_t sub_24B606D04(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v23 = v4 + v2;
  }
  else {
    int64_t v23 = v4;
  }
  unint64_t v3 = sub_24B5D3C4C(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = (*(void *)(v3 + 24) >> 1) - v9;
  uint64_t v11 = *(void *)(type metadata accessor for PhotogrammetrySession.Request(0) - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = v3 + v13 + v12 * v9;
  unint64_t v15 = a1 + v13;
  uint64_t v16 = v12 * v8;
  unint64_t v17 = v14 + v16;
  unint64_t v18 = v15 + v16;
  if (v15 < v17 && v14 < v18) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v20 = *(void *)(v3 + 16);
  BOOL v21 = __OFADD__(v20, v8);
  uint64_t v22 = v20 + v8;
  if (!v21)
  {
    *(void *)(v3 + 16) = v22;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_24B682F40();
  __break(1u);
  return result;
}

uint64_t sub_24B606EB4(unint64_t a1)
{
  return sub_24B5D3C4C(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_24B606EC8()
{
  return sub_24B6830C0();
}

uint64_t sub_24B606F40(float32x4_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, float32x4_t a6, float32x4_t a7, float32x4_t a8)
{
  return vminvq_u32((uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vceqq_f32(a1, a5), (int8x16_t)vceqq_f32(a2, a6)), vandq_s8((int8x16_t)vceqq_f32(a3, a7), (int8x16_t)vceqq_f32(a4, a8)))) >> 31;
}

uint64_t sub_24B606F6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24B562F04(&qword_2697CC588);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s6CoreOC21PhotogrammetrySessionC7RequestO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24B6822E0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PhotogrammetrySession.Request(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24B562F04((uint64_t *)&unk_2697CC990);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  unint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_24B607528(a1, (uint64_t)v14, type metadata accessor for PhotogrammetrySession.Request);
  sub_24B607528(a2, v15, type metadata accessor for PhotogrammetrySession.Request);
  uint64_t v16 = sub_24B562F04(&qword_2697CC580);
  unint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  switch(v17((uint64_t)v14, 3, v16))
  {
    case 1u:
      if (v17(v15, 3, v16) == 1) {
        goto LABEL_9;
      }
      goto LABEL_10;
    case 2u:
      if (v17(v15, 3, v16) != 2) {
        goto LABEL_10;
      }
      goto LABEL_9;
    case 3u:
      if (v17(v15, 3, v16) == 3) {
        goto LABEL_9;
      }
      goto LABEL_10;
    default:
      uint64_t v27 = v5;
      sub_24B607528((uint64_t)v14, (uint64_t)v10, type metadata accessor for PhotogrammetrySession.Request);
      int v18 = v10[*(int *)(v16 + 48)];
      sub_24B606F6C((uint64_t)&v10[*(int *)(v16 + 64)], (uint64_t)v34);
      if (v17(v15, 3, v16))
      {
        (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v4);
LABEL_10:
        sub_24B5632A8((uint64_t)v14, (uint64_t *)&unk_2697CC990);
        return 0;
      }
      int v20 = v18;
      int v21 = *(unsigned __int8 *)(v15 + *(int *)(v16 + 48));
      sub_24B606F6C(v15 + *(int *)(v16 + 64), (uint64_t)v33);
      uint64_t v22 = v27;
      (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))(v7, v15, v4);
      char v23 = MEMORY[0x24C5D4390](v10, v7);
      uint64_t v24 = *(void (**)(char *, uint64_t))(v22 + 8);
      v24(v10, v4);
      if ((v23 & 1) == 0 || v20 != v21) {
        goto LABEL_19;
      }
      sub_24B606F6C((uint64_t)v34, (uint64_t)&v30);
      sub_24B606F6C((uint64_t)v33, (uint64_t)v31);
      sub_24B606F6C((uint64_t)v34, (uint64_t)v32);
      if (sub_24B56DEE8((uint64_t)v32) == 1)
      {
        v24(v7, v4);
        sub_24B606F6C((uint64_t)v31, (uint64_t)v28);
        sub_24B606F6C((uint64_t)v28, (uint64_t)v29);
        if (sub_24B56DEE8((uint64_t)v29) != 1) {
          goto LABEL_20;
        }
LABEL_9:
        sub_24B6075F8((uint64_t)v14, type metadata accessor for PhotogrammetrySession.Request);
        return 1;
      }
      sub_24B606F6C((uint64_t)v34, (uint64_t)v28);
      sub_24B606F6C((uint64_t)v33, (uint64_t)v29);
      if (sub_24B56DEE8((uint64_t)v29) != 1
        && (vminvq_u32((uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vceqq_f32(v28[1], v31[1]), (int8x16_t)vceqq_f32(v28[0], v31[0])), vandq_s8((int8x16_t)vceqq_f32(v28[2], v31[2]), (int8x16_t)vceqq_f32(v28[3], v31[3])))) & 0x80000000) != 0)
      {
        unsigned int v25 = vminvq_u32((uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vceqq_f32(v28[6], v31[6]), (int8x16_t)vceqq_f32(v28[7], v31[7])), vandq_s8((int8x16_t)vceqq_f32(v28[5], v31[5]), (int8x16_t)vceqq_f32(v28[4], v31[4]))));
        v24(v7, v4);
        if ((v25 & 0x80000000) != 0) {
          goto LABEL_9;
        }
      }
      else
      {
LABEL_19:
        v24(v7, v4);
      }
LABEL_20:
      sub_24B6075F8((uint64_t)v14, type metadata accessor for PhotogrammetrySession.Request);
      return 0;
  }
}

uint64_t type metadata accessor for PhotogrammetrySession.Request(uint64_t a1)
{
  return sub_24B56BBFC(a1, (uint64_t *)&unk_2697CF670);
}

uint64_t type metadata accessor for PhotogrammetrySession.Result(uint64_t a1)
{
  return sub_24B56BBFC(a1, (uint64_t *)&unk_2697CF680);
}

uint64_t type metadata accessor for PhotogrammetrySession.Output(uint64_t a1)
{
  return sub_24B56BBFC(a1, (uint64_t *)&unk_2697CF690);
}

uint64_t sub_24B607528(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24B607590(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24B6075F8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t _s6CoreOC21PhotogrammetrySessionC13ConfigurationV25CustomDetailSpecificationV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2) {
    return 0;
  }
  if (qword_24B687368[*(char *)(a1 + 8)] != qword_24B687368[*(char *)(a2 + 8)]
    || *(void *)(a1 + 16) != *(void *)(a2 + 16))
  {
    return 0;
  }
  char v3 = *(unsigned char *)(a2 + 28);
  if (*(unsigned char *)(a1 + 28))
  {
    if ((*(unsigned char *)(a2 + 28) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (*(float *)(a1 + 24) != *(float *)(a2 + 24)) {
      char v3 = 1;
    }
    if (v3) {
      return 0;
    }
  }
  return 1;
}

uint64_t type metadata accessor for PhotogrammetrySession.Configuration(uint64_t a1)
{
  return sub_24B56BBFC(a1, (uint64_t *)&unk_2697CF6A0);
}

uint64_t sub_24B6076E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24B562F04(&qword_2697CC1F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24B607750(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24B562F04(&qword_2697CC1F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t _s6CoreOC21PhotogrammetrySessionC13ConfigurationV2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4 = sub_24B6822E0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24B562F04(&qword_2697CC988);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24B562F04(&qword_2697CC1F0);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  unint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  unint64_t v17 = (char *)&v35 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v35 - v18;
  if (*a1 != *a2) {
    goto LABEL_11;
  }
  if (a1[1] != a2[1]) {
    goto LABEL_11;
  }
  if (a1[2] != a2[2]) {
    goto LABEL_11;
  }
  unsigned __int8 v20 = a1[16];
  uint64_t v21 = *((void *)a1 + 3);
  int v22 = *((_DWORD *)a1 + 8);
  unsigned __int8 v23 = a1[36];
  uint64_t v44 = *((void *)a1 + 1);
  unsigned __int8 v45 = v20;
  uint64_t v46 = v21;
  int v47 = v22;
  unsigned __int8 v48 = v23;
  unsigned __int8 v24 = a2[16];
  uint64_t v25 = *((void *)a2 + 3);
  int v26 = *((_DWORD *)a2 + 8);
  unsigned __int8 v27 = a2[36];
  uint64_t v39 = *((void *)a2 + 1);
  unsigned __int8 v40 = v24;
  uint64_t v41 = v25;
  int v42 = v26;
  unsigned __int8 v43 = v27;
  if ((_s6CoreOC21PhotogrammetrySessionC13ConfigurationV25CustomDetailSpecificationV2eeoiySbAG_AGtFZ_0((uint64_t)&v44, (uint64_t)&v39) & 1) == 0)goto LABEL_11; {
  uint64_t v28 = type metadata accessor for PhotogrammetrySession.Configuration(0);
  }
  uint64_t v37 = v5;
  uint64_t v29 = v28;
  sub_24B6076E8((uint64_t)&a1[*(int *)(v28 + 32)], (uint64_t)v19);
  uint64_t v35 = v29;
  sub_24B6076E8((uint64_t)&a2[*(int *)(v29 + 32)], (uint64_t)v17);
  uint64_t v30 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_24B6076E8((uint64_t)v19, (uint64_t)v10);
  uint64_t v38 = v30;
  sub_24B6076E8((uint64_t)v17, v30);
  uint64_t v31 = v37;
  uint64_t v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48);
  if (v36((uint64_t)v10, 1, v4) == 1)
  {
    sub_24B5632A8((uint64_t)v17, &qword_2697CC1F0);
    sub_24B5632A8((uint64_t)v19, &qword_2697CC1F0);
    if (v36(v38, 1, v4) == 1)
    {
      sub_24B5632A8((uint64_t)v10, &qword_2697CC1F0);
LABEL_14:
      char v32 = a1[*(int *)(v35 + 36)] ^ a2[*(int *)(v35 + 36)] ^ 1;
      return v32 & 1;
    }
    goto LABEL_10;
  }
  sub_24B6076E8((uint64_t)v10, (uint64_t)v14);
  if (v36(v38, 1, v4) == 1)
  {
    sub_24B5632A8((uint64_t)v17, &qword_2697CC1F0);
    sub_24B5632A8((uint64_t)v19, &qword_2697CC1F0);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v4);
LABEL_10:
    sub_24B5632A8((uint64_t)v10, &qword_2697CC988);
    goto LABEL_11;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v7, v38, v4);
  sub_24B607D0C(&qword_2697CC6C0, MEMORY[0x263F06EA8]);
  LODWORD(v38) = sub_24B682780();
  uint64_t v34 = *(void (**)(char *, uint64_t))(v31 + 8);
  v34(v7, v4);
  sub_24B5632A8((uint64_t)v17, &qword_2697CC1F0);
  sub_24B5632A8((uint64_t)v19, &qword_2697CC1F0);
  v34(v14, v4);
  sub_24B5632A8((uint64_t)v10, &qword_2697CC1F0);
  if (v38) {
    goto LABEL_14;
  }
LABEL_11:
  char v32 = 0;
  return v32 & 1;
}

uint64_t sub_24B607C34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PhotogrammetrySession.Configuration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_24B607C98()
{
  unint64_t result = qword_2697CC930;
  if (!qword_2697CC930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697CC930);
  }
  return result;
}

uint64_t type metadata accessor for PhotogrammetrySession(uint64_t a1)
{
  return sub_24B56BBFC(a1, (uint64_t *)&unk_2697CF660);
}

uint64_t sub_24B607D0C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24B607D54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24B562F04(&qword_2697CC1F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_24B607DC4()
{
  unint64_t result = qword_2697CC940;
  if (!qword_2697CC940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697CC940);
  }
  return result;
}

uint64_t sub_24B607E18()
{
  return sub_24B607D0C(&qword_2697CC948, (void (*)(uint64_t))type metadata accessor for PhotogrammetrySession.Request);
}

unint64_t sub_24B607E64()
{
  unint64_t result = qword_2697CC950;
  if (!qword_2697CC950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697CC950);
  }
  return result;
}

unint64_t sub_24B607EBC()
{
  unint64_t result = qword_2697CC958;
  if (!qword_2697CC958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697CC958);
  }
  return result;
}

unint64_t sub_24B607F14()
{
  unint64_t result = qword_2697CC960;
  if (!qword_2697CC960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697CC960);
  }
  return result;
}

unint64_t sub_24B607F6C()
{
  unint64_t result = qword_2697CC968;
  if (!qword_2697CC968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697CC968);
  }
  return result;
}

unint64_t sub_24B607FC4()
{
  unint64_t result = qword_2697CC970;
  if (!qword_2697CC970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697CC970);
  }
  return result;
}

unint64_t sub_24B608020()
{
  unint64_t result = qword_2697CC978;
  if (!qword_2697CC978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697CC978);
  }
  return result;
}

unint64_t sub_24B608078()
{
  unint64_t result = qword_2697CC980;
  if (!qword_2697CC980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697CC980);
  }
  return result;
}

uint64_t sub_24B6080CC()
{
  return type metadata accessor for PhotogrammetrySession(0);
}

uint64_t sub_24B6080D4()
{
  uint64_t result = type metadata accessor for PhotogrammetrySession.Configuration(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for PhotogrammetrySession(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for PhotogrammetrySession);
}

uint64_t dispatch thunk of PhotogrammetrySession.activeRequests.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of PhotogrammetrySession.outputPublisher.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of PhotogrammetrySession.configuration.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of PhotogrammetrySession.__allocating_init(configuration:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of PhotogrammetrySession.__allocating_init(imagesURL:configuration:)()
{
  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of PhotogrammetrySession.__allocating_init(photogrammetrySamples:configuration:)()
{
  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t dispatch thunk of PhotogrammetrySession.process(requests:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of PhotogrammetrySession.cancel()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of PhotogrammetrySession.close()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of PhotogrammetrySession.totalNumberOfImages()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of PhotogrammetrySession.totalNumberOfPixels()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t initializeBufferWithCopyOfBuffer for PhotogrammetrySession.Error(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for PhotogrammetrySession.Error(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PhotogrammetrySession.Error(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_24B6083D0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_24B6083EC(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for PhotogrammetrySession.Error()
{
  return &type metadata for PhotogrammetrySession.Error;
}

uint64_t *initializeBufferWithCopyOfBuffer for PhotogrammetrySession.Request(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_24B562F04(&qword_2697CC580);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 3, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = sub_24B6822E0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      *((unsigned char *)a1 + *(int *)(v7 + 48)) = *((unsigned char *)a2 + *(int *)(v7 + 48));
      uint64_t v11 = *(int *)(v7 + 64);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      long long v14 = *((_OWORD *)v13 + 3);
      *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
      *((_OWORD *)v12 + 3) = v14;
      long long v15 = *((_OWORD *)v13 + 1);
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v15;
      v12[128] = v13[128];
      long long v16 = *((_OWORD *)v13 + 7);
      *((_OWORD *)v12 + 6) = *((_OWORD *)v13 + 6);
      *((_OWORD *)v12 + 7) = v16;
      long long v17 = *((_OWORD *)v13 + 5);
      *((_OWORD *)v12 + 4) = *((_OWORD *)v13 + 4);
      *((_OWORD *)v12 + 5) = v17;
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 3, v7);
    }
  }
  return a1;
}

uint64_t destroy for PhotogrammetrySession.Request(uint64_t a1)
{
  uint64_t v2 = sub_24B562F04(&qword_2697CC580);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 3, v2);
  if (!result)
  {
    uint64_t v4 = sub_24B6822E0();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(a1, v4);
  }
  return result;
}

char *initializeWithCopy for PhotogrammetrySession.Request(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24B562F04(&qword_2697CC580);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_24B6822E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
    uint64_t v9 = *(int *)(v6 + 64);
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    long long v12 = *((_OWORD *)v11 + 3);
    *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
    *((_OWORD *)v10 + 3) = v12;
    long long v13 = *((_OWORD *)v11 + 1);
    *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
    *((_OWORD *)v10 + 1) = v13;
    v10[128] = v11[128];
    long long v14 = *((_OWORD *)v11 + 7);
    *((_OWORD *)v10 + 6) = *((_OWORD *)v11 + 6);
    *((_OWORD *)v10 + 7) = v14;
    long long v15 = *((_OWORD *)v11 + 5);
    *((_OWORD *)v10 + 4) = *((_OWORD *)v11 + 4);
    *((_OWORD *)v10 + 5) = v15;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

unsigned char *assignWithCopy for PhotogrammetrySession.Request(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24B562F04(&qword_2697CC580);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 3, v6);
  int v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v22 = sub_24B6822E0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v22 - 8) + 24))(a1, a2, v22);
      a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
      uint64_t v23 = *(int *)(v6 + 64);
      unsigned __int8 v24 = &a1[v23];
      uint64_t v25 = &a2[v23];
      char v26 = v25[128];
      long long v28 = *((_OWORD *)v25 + 6);
      long long v27 = *((_OWORD *)v25 + 7);
      *((_OWORD *)v24 + 5) = *((_OWORD *)v25 + 5);
      *((_OWORD *)v24 + 6) = v28;
      *((_OWORD *)v24 + 7) = v27;
      v24[128] = v26;
      long long v30 = *((_OWORD *)v25 + 3);
      long long v29 = *((_OWORD *)v25 + 4);
      long long v31 = *((_OWORD *)v25 + 2);
      *((_OWORD *)v24 + 1) = *((_OWORD *)v25 + 1);
      *((_OWORD *)v24 + 2) = v31;
      *((_OWORD *)v24 + 3) = v30;
      *((_OWORD *)v24 + 4) = v29;
      *(_OWORD *)unsigned __int8 v24 = *(_OWORD *)v25;
      return a1;
    }
    sub_24B5632A8((uint64_t)a1, &qword_2697CC580);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_24B6822E0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
  uint64_t v12 = *(int *)(v6 + 64);
  long long v13 = &a1[v12];
  long long v14 = &a2[v12];
  char v15 = v14[128];
  long long v17 = *((_OWORD *)v14 + 6);
  long long v16 = *((_OWORD *)v14 + 7);
  *((_OWORD *)v13 + 5) = *((_OWORD *)v14 + 5);
  *((_OWORD *)v13 + 6) = v17;
  *((_OWORD *)v13 + 7) = v16;
  v13[128] = v15;
  long long v19 = *((_OWORD *)v14 + 3);
  long long v18 = *((_OWORD *)v14 + 4);
  long long v20 = *((_OWORD *)v14 + 2);
  *((_OWORD *)v13 + 1) = *((_OWORD *)v14 + 1);
  *((_OWORD *)v13 + 2) = v20;
  *((_OWORD *)v13 + 3) = v19;
  *((_OWORD *)v13 + 4) = v18;
  *(_OWORD *)long long v13 = *(_OWORD *)v14;
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

char *initializeWithTake for PhotogrammetrySession.Request(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24B562F04(&qword_2697CC580);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_24B6822E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
    uint64_t v9 = *(int *)(v6 + 64);
    int v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    long long v12 = *((_OWORD *)v11 + 3);
    *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
    *((_OWORD *)v10 + 3) = v12;
    long long v13 = *((_OWORD *)v11 + 1);
    *(_OWORD *)int v10 = *(_OWORD *)v11;
    *((_OWORD *)v10 + 1) = v13;
    v10[128] = v11[128];
    long long v14 = *((_OWORD *)v11 + 7);
    *((_OWORD *)v10 + 6) = *((_OWORD *)v11 + 6);
    *((_OWORD *)v10 + 7) = v14;
    long long v15 = *((_OWORD *)v11 + 5);
    *((_OWORD *)v10 + 4) = *((_OWORD *)v11 + 4);
    *((_OWORD *)v10 + 5) = v15;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

unsigned char *assignWithTake for PhotogrammetrySession.Request(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24B562F04(&qword_2697CC580);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 3, v6);
  int v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v20 = sub_24B6822E0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v20 - 8) + 40))(a1, a2, v20);
      a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
      uint64_t v21 = *(int *)(v6 + 64);
      uint64_t v22 = &a1[v21];
      uint64_t v23 = &a2[v21];
      long long v24 = *((_OWORD *)v23 + 3);
      *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
      *((_OWORD *)v22 + 3) = v24;
      long long v25 = *((_OWORD *)v23 + 1);
      *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
      *((_OWORD *)v22 + 1) = v25;
      v22[128] = v23[128];
      long long v26 = *((_OWORD *)v23 + 7);
      *((_OWORD *)v22 + 6) = *((_OWORD *)v23 + 6);
      *((_OWORD *)v22 + 7) = v26;
      long long v27 = *((_OWORD *)v23 + 5);
      *((_OWORD *)v22 + 4) = *((_OWORD *)v23 + 4);
      *((_OWORD *)v22 + 5) = v27;
      return a1;
    }
    sub_24B5632A8((uint64_t)a1, &qword_2697CC580);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_24B6822E0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
  uint64_t v12 = *(int *)(v6 + 64);
  long long v13 = &a1[v12];
  long long v14 = &a2[v12];
  long long v15 = *((_OWORD *)v14 + 3);
  *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
  *((_OWORD *)v13 + 3) = v15;
  long long v16 = *((_OWORD *)v14 + 1);
  *(_OWORD *)long long v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v16;
  v13[128] = v14[128];
  long long v17 = *((_OWORD *)v14 + 7);
  *((_OWORD *)v13 + 6) = *((_OWORD *)v14 + 6);
  *((_OWORD *)v13 + 7) = v17;
  long long v18 = *((_OWORD *)v14 + 5);
  *((_OWORD *)v13 + 4) = *((_OWORD *)v14 + 4);
  *((_OWORD *)v13 + 5) = v18;
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PhotogrammetrySession.Request(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24B608DD8);
}

uint64_t sub_24B608DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24B562F04(&qword_2697CC580);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 4) {
    return v5 - 3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PhotogrammetrySession.Request(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24B608E5C);
}

uint64_t sub_24B608E5C(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 3);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_24B562F04(&qword_2697CC580);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_24B608EE4(uint64_t a1)
{
  uint64_t v2 = sub_24B562F04(&qword_2697CC580);
  char v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 3, v2);
}

uint64_t sub_24B608F50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24B562F04(&qword_2697CC580);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 3, v4);
}

uint64_t sub_24B608FC4()
{
  uint64_t result = sub_24B6822E0();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PhotogrammetrySession.Request.Detail(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PhotogrammetrySession.Request.Detail(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24B6091BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PhotogrammetrySession.Request.Detail()
{
  return &type metadata for PhotogrammetrySession.Request.Detail;
}

ValueMetadata *type metadata accessor for PhotogrammetrySession.Request.Geometry()
{
  return &type metadata for PhotogrammetrySession.Request.Geometry;
}

ValueMetadata *type metadata accessor for PhotogrammetrySession.PointCloud()
{
  return &type metadata for PhotogrammetrySession.PointCloud;
}

__n128 initializeWithCopy for PhotogrammetrySession.PointCloud.Point(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ImageScaler.Config(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 20)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ImageScaler.Config(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 20) = v3;
  return result;
}

ValueMetadata *type metadata accessor for PhotogrammetrySession.PointCloud.Point()
{
  return &type metadata for PhotogrammetrySession.PointCloud.Point;
}

ValueMetadata *type metadata accessor for PhotogrammetrySession.Poses()
{
  return &type metadata for PhotogrammetrySession.Poses;
}

uint64_t *initializeBufferWithCopyOfBuffer for PhotogrammetrySession.Result(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3 || EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = sub_24B6822E0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for PhotogrammetrySession.Result(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 3 || result == 2)
  {
    return swift_bridgeObjectRelease();
  }
  else if (!result)
  {
    uint64_t v3 = sub_24B6822E0();
    unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *initializeWithCopy for PhotogrammetrySession.Result(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3 || EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_24B6822E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for PhotogrammetrySession.Result(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24B6075F8((uint64_t)a1, type metadata accessor for PhotogrammetrySession.Result);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3 || EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_24B6822E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *initializeWithTake for PhotogrammetrySession.Result(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_24B6822E0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for PhotogrammetrySession.Result(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24B6075F8((uint64_t)a1, type metadata accessor for PhotogrammetrySession.Result);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_24B6822E0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_24B609848()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24B609858()
{
  uint64_t result = sub_24B6822E0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PhotogrammetrySession.ProcessStage(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24B6099C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PhotogrammetrySession.ProcessStage()
{
  return &type metadata for PhotogrammetrySession.ProcessStage;
}

uint64_t *initializeBufferWithCopyOfBuffer for PhotogrammetrySession.Output(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = sub_24B562F04(&qword_2697CC580);
        uint64_t v8 = *(void *)(v7 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 3, v7))
        {
          uint64_t v9 = type metadata accessor for PhotogrammetrySession.Request(0);
          memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
        }
        else
        {
          uint64_t v21 = sub_24B6822E0();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
          *((unsigned char *)a1 + *(int *)(v7 + 48)) = *((unsigned char *)a2 + *(int *)(v7 + 48));
          uint64_t v22 = *(int *)(v7 + 64);
          uint64_t v23 = (char *)a1 + v22;
          long long v24 = (char *)a2 + v22;
          long long v25 = *((_OWORD *)v24 + 3);
          *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
          *((_OWORD *)v23 + 3) = v25;
          long long v26 = *((_OWORD *)v24 + 1);
          *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
          *((_OWORD *)v23 + 1) = v26;
          v23[128] = v24[128];
          long long v27 = *((_OWORD *)v24 + 7);
          *((_OWORD *)v23 + 6) = *((_OWORD *)v24 + 6);
          *((_OWORD *)v23 + 7) = v27;
          long long v28 = *((_OWORD *)v24 + 5);
          *((_OWORD *)v23 + 4) = *((_OWORD *)v24 + 4);
          *((_OWORD *)v23 + 5) = v28;
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 3, v7);
        }
        uint64_t v29 = *(int *)(sub_24B562F04(&qword_2697CC638) + 48);
        long long v30 = (char *)a1 + v29;
        long long v31 = (char *)a2 + v29;
        *(void *)long long v30 = *(void *)v31;
        v30[8] = v31[8];
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        uint64_t v12 = sub_24B562F04(&qword_2697CC580);
        uint64_t v13 = *(void *)(v12 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48))(a2, 3, v12))
        {
          uint64_t v14 = type metadata accessor for PhotogrammetrySession.Request(0);
          memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          uint64_t v32 = sub_24B6822E0();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v32 - 8) + 16))(a1, a2, v32);
          *((unsigned char *)a1 + *(int *)(v12 + 48)) = *((unsigned char *)a2 + *(int *)(v12 + 48));
          uint64_t v33 = *(int *)(v12 + 64);
          uint64_t v34 = (char *)a1 + v33;
          uint64_t v35 = (char *)a2 + v33;
          long long v36 = *((_OWORD *)v35 + 3);
          *((_OWORD *)v34 + 2) = *((_OWORD *)v35 + 2);
          *((_OWORD *)v34 + 3) = v36;
          long long v37 = *((_OWORD *)v35 + 1);
          *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
          *((_OWORD *)v34 + 1) = v37;
          v34[128] = v35[128];
          long long v38 = *((_OWORD *)v35 + 7);
          *((_OWORD *)v34 + 6) = *((_OWORD *)v35 + 6);
          *((_OWORD *)v34 + 7) = v38;
          long long v39 = *((_OWORD *)v35 + 5);
          *((_OWORD *)v34 + 4) = *((_OWORD *)v35 + 4);
          *((_OWORD *)v34 + 5) = v39;
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 3, v12);
        }
        uint64_t v40 = *(int *)(sub_24B562F04(&qword_2697CC640) + 48);
        uint64_t v41 = (uint64_t *)((char *)a1 + v40);
        int v42 = (uint64_t *)((char *)a2 + v40);
        uint64_t v43 = type metadata accessor for PhotogrammetrySession.Result(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 3 || EnumCaseMultiPayload == 2)
        {
          *uint64_t v41 = *v42;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload)
        {
          memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
        }
        else
        {
          uint64_t v45 = sub_24B6822E0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v45 - 8) + 16))(v41, v42, v45);
          swift_storeEnumTagMultiPayload();
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v15 = sub_24B562F04(&qword_2697CC580);
        uint64_t v16 = *(void *)(v15 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48))(a2, 3, v15))
        {
          uint64_t v17 = type metadata accessor for PhotogrammetrySession.Request(0);
          memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          uint64_t v46 = sub_24B6822E0();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v46 - 8) + 16))(a1, a2, v46);
          *((unsigned char *)a1 + *(int *)(v15 + 48)) = *((unsigned char *)a2 + *(int *)(v15 + 48));
          uint64_t v47 = *(int *)(v15 + 64);
          unsigned __int8 v48 = (char *)a1 + v47;
          os_log_type_t v49 = (char *)a2 + v47;
          long long v50 = *((_OWORD *)v49 + 3);
          *((_OWORD *)v48 + 2) = *((_OWORD *)v49 + 2);
          *((_OWORD *)v48 + 3) = v50;
          long long v51 = *((_OWORD *)v49 + 1);
          *(_OWORD *)unsigned __int8 v48 = *(_OWORD *)v49;
          *((_OWORD *)v48 + 1) = v51;
          v48[128] = v49[128];
          long long v52 = *((_OWORD *)v49 + 7);
          *((_OWORD *)v48 + 6) = *((_OWORD *)v49 + 6);
          *((_OWORD *)v48 + 7) = v52;
          long long v53 = *((_OWORD *)v49 + 5);
          *((_OWORD *)v48 + 4) = *((_OWORD *)v49 + 4);
          *((_OWORD *)v48 + 5) = v53;
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 3, v15);
        }
        uint64_t v54 = sub_24B562F04(&qword_2697CC648);
        *(uint64_t *)((char *)a1 + *(int *)(v54 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v54 + 48));
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v18 = sub_24B562F04(&qword_2697CC580);
        uint64_t v19 = *(void *)(v18 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v19 + 48))(a2, 3, v18))
        {
          uint64_t v20 = type metadata accessor for PhotogrammetrySession.Request(0);
          memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          uint64_t v55 = sub_24B6822E0();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v55 - 8) + 16))(a1, a2, v55);
          *((unsigned char *)a1 + *(int *)(v18 + 48)) = *((unsigned char *)a2 + *(int *)(v18 + 48));
          uint64_t v56 = *(int *)(v18 + 64);
          uint64_t v57 = (char *)a1 + v56;
          int v58 = (char *)a2 + v56;
          long long v59 = *((_OWORD *)v58 + 3);
          *((_OWORD *)v57 + 2) = *((_OWORD *)v58 + 2);
          *((_OWORD *)v57 + 3) = v59;
          long long v60 = *((_OWORD *)v58 + 1);
          *(_OWORD *)uint64_t v57 = *(_OWORD *)v58;
          *((_OWORD *)v57 + 1) = v60;
          v57[128] = v58[128];
          long long v61 = *((_OWORD *)v58 + 7);
          *((_OWORD *)v57 + 6) = *((_OWORD *)v58 + 6);
          *((_OWORD *)v57 + 7) = v61;
          long long v62 = *((_OWORD *)v58 + 5);
          *((_OWORD *)v57 + 4) = *((_OWORD *)v58 + 4);
          *((_OWORD *)v57 + 5) = v62;
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v19 + 56))(a1, 0, 3, v18);
        }
        uint64_t v63 = *(int *)(sub_24B562F04(&qword_2697CC650) + 48);
        uint64_t v64 = (char *)a1 + v63;
        uint64_t v65 = (char *)a2 + v63;
        *(void *)uint64_t v64 = *(void *)v65;
        *((_WORD *)v64 + 4) = *((_WORD *)v65 + 4);
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for PhotogrammetrySession.Output(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 2:
    case 3:
      uint64_t v3 = sub_24B562F04(&qword_2697CC580);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(a1, 3, v3);
      if (!result) {
        goto LABEL_9;
      }
      break;
    case 1:
      uint64_t v4 = sub_24B562F04(&qword_2697CC580);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 3, v4))
      {
        uint64_t v5 = sub_24B6822E0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
      }
      a1 += *(int *)(sub_24B562F04(&qword_2697CC640) + 48);
      type metadata accessor for PhotogrammetrySession.Result(0);
      uint64_t result = swift_getEnumCaseMultiPayload();
      if (result == 3 || result == 2) {
        goto LABEL_12;
      }
      if (!result)
      {
LABEL_9:
        uint64_t v6 = sub_24B6822E0();
        uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
        uint64_t result = v7(a1, v6);
      }
      break;
    case 4:
LABEL_12:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for PhotogrammetrySession.Output(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = sub_24B562F04(&qword_2697CC580);
      uint64_t v7 = *(void *)(v6 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
      {
        uint64_t v8 = type metadata accessor for PhotogrammetrySession.Request(0);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        uint64_t v18 = sub_24B6822E0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
        *((unsigned char *)a1 + *(int *)(v6 + 48)) = *((unsigned char *)a2 + *(int *)(v6 + 48));
        uint64_t v19 = *(int *)(v6 + 64);
        uint64_t v20 = (char *)a1 + v19;
        uint64_t v21 = (char *)a2 + v19;
        long long v22 = *((_OWORD *)v21 + 3);
        *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
        *((_OWORD *)v20 + 3) = v22;
        long long v23 = *((_OWORD *)v21 + 1);
        *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
        *((_OWORD *)v20 + 1) = v23;
        v20[128] = v21[128];
        long long v24 = *((_OWORD *)v21 + 7);
        *((_OWORD *)v20 + 6) = *((_OWORD *)v21 + 6);
        *((_OWORD *)v20 + 7) = v24;
        long long v25 = *((_OWORD *)v21 + 5);
        *((_OWORD *)v20 + 4) = *((_OWORD *)v21 + 4);
        *((_OWORD *)v20 + 5) = v25;
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
      }
      uint64_t v26 = *(int *)(sub_24B562F04(&qword_2697CC638) + 48);
      long long v27 = (char *)a1 + v26;
      long long v28 = (char *)a2 + v26;
      *(void *)long long v27 = *(void *)v28;
      v27[8] = v28[8];
      goto LABEL_26;
    case 1u:
      uint64_t v9 = sub_24B562F04(&qword_2697CC580);
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(a2, 3, v9))
      {
        uint64_t v11 = type metadata accessor for PhotogrammetrySession.Request(0);
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        uint64_t v29 = sub_24B6822E0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(a1, a2, v29);
        *((unsigned char *)a1 + *(int *)(v9 + 48)) = *((unsigned char *)a2 + *(int *)(v9 + 48));
        uint64_t v30 = *(int *)(v9 + 64);
        long long v31 = (char *)a1 + v30;
        uint64_t v32 = (char *)a2 + v30;
        long long v33 = *((_OWORD *)v32 + 3);
        *((_OWORD *)v31 + 2) = *((_OWORD *)v32 + 2);
        *((_OWORD *)v31 + 3) = v33;
        long long v34 = *((_OWORD *)v32 + 1);
        *(_OWORD *)long long v31 = *(_OWORD *)v32;
        *((_OWORD *)v31 + 1) = v34;
        v31[128] = v32[128];
        long long v35 = *((_OWORD *)v32 + 7);
        *((_OWORD *)v31 + 6) = *((_OWORD *)v32 + 6);
        *((_OWORD *)v31 + 7) = v35;
        long long v36 = *((_OWORD *)v32 + 5);
        *((_OWORD *)v31 + 4) = *((_OWORD *)v32 + 4);
        *((_OWORD *)v31 + 5) = v36;
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 3, v9);
      }
      uint64_t v37 = *(int *)(sub_24B562F04(&qword_2697CC640) + 48);
      long long v38 = (void *)((char *)a1 + v37);
      long long v39 = (void *)((char *)a2 + v37);
      uint64_t v40 = type metadata accessor for PhotogrammetrySession.Result(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 3 || EnumCaseMultiPayload == 2)
      {
        *long long v38 = *v39;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        uint64_t v42 = sub_24B6822E0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v42 - 8) + 16))(v38, v39, v42);
        swift_storeEnumTagMultiPayload();
      }
      goto LABEL_26;
    case 2u:
      uint64_t v12 = sub_24B562F04(&qword_2697CC580);
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(a2, 3, v12))
      {
        uint64_t v14 = type metadata accessor for PhotogrammetrySession.Request(0);
        memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        uint64_t v43 = sub_24B6822E0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v43 - 8) + 16))(a1, a2, v43);
        *((unsigned char *)a1 + *(int *)(v12 + 48)) = *((unsigned char *)a2 + *(int *)(v12 + 48));
        uint64_t v44 = *(int *)(v12 + 64);
        uint64_t v45 = (char *)a1 + v44;
        uint64_t v46 = (char *)a2 + v44;
        long long v47 = *((_OWORD *)v46 + 3);
        *((_OWORD *)v45 + 2) = *((_OWORD *)v46 + 2);
        *((_OWORD *)v45 + 3) = v47;
        long long v48 = *((_OWORD *)v46 + 1);
        *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
        *((_OWORD *)v45 + 1) = v48;
        v45[128] = v46[128];
        long long v49 = *((_OWORD *)v46 + 7);
        *((_OWORD *)v45 + 6) = *((_OWORD *)v46 + 6);
        *((_OWORD *)v45 + 7) = v49;
        long long v50 = *((_OWORD *)v46 + 5);
        *((_OWORD *)v45 + 4) = *((_OWORD *)v46 + 4);
        *((_OWORD *)v45 + 5) = v50;
        (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 3, v12);
      }
      uint64_t v51 = sub_24B562F04(&qword_2697CC648);
      *(void *)((char *)a1 + *(int *)(v51 + 48)) = *(void *)((char *)a2 + *(int *)(v51 + 48));
      goto LABEL_26;
    case 3u:
      uint64_t v15 = sub_24B562F04(&qword_2697CC580);
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(a2, 3, v15))
      {
        uint64_t v17 = type metadata accessor for PhotogrammetrySession.Request(0);
        memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        uint64_t v52 = sub_24B6822E0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v52 - 8) + 16))(a1, a2, v52);
        *((unsigned char *)a1 + *(int *)(v15 + 48)) = *((unsigned char *)a2 + *(int *)(v15 + 48));
        uint64_t v53 = *(int *)(v15 + 64);
        uint64_t v54 = (char *)a1 + v53;
        uint64_t v55 = (char *)a2 + v53;
        long long v56 = *((_OWORD *)v55 + 3);
        *((_OWORD *)v54 + 2) = *((_OWORD *)v55 + 2);
        *((_OWORD *)v54 + 3) = v56;
        long long v57 = *((_OWORD *)v55 + 1);
        *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
        *((_OWORD *)v54 + 1) = v57;
        v54[128] = v55[128];
        long long v58 = *((_OWORD *)v55 + 7);
        *((_OWORD *)v54 + 6) = *((_OWORD *)v55 + 6);
        *((_OWORD *)v54 + 7) = v58;
        long long v59 = *((_OWORD *)v55 + 5);
        *((_OWORD *)v54 + 4) = *((_OWORD *)v55 + 4);
        *((_OWORD *)v54 + 5) = v59;
        (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 3, v15);
      }
      uint64_t v60 = *(int *)(sub_24B562F04(&qword_2697CC650) + 48);
      long long v61 = (char *)a1 + v60;
      long long v62 = (char *)a2 + v60;
      *(void *)long long v61 = *(void *)v62;
      *((_WORD *)v61 + 4) = *((_WORD *)v62 + 4);
      goto LABEL_26;
    case 4u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
LABEL_26:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithCopy for PhotogrammetrySession.Output(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24B6075F8((uint64_t)a1, type metadata accessor for PhotogrammetrySession.Output);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = sub_24B562F04(&qword_2697CC580);
        uint64_t v7 = *(void *)(v6 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
        {
          uint64_t v8 = type metadata accessor for PhotogrammetrySession.Request(0);
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
        }
        else
        {
          uint64_t v18 = sub_24B6822E0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
          *((unsigned char *)a1 + *(int *)(v6 + 48)) = *((unsigned char *)a2 + *(int *)(v6 + 48));
          uint64_t v19 = *(int *)(v6 + 64);
          uint64_t v20 = (char *)a1 + v19;
          uint64_t v21 = (char *)a2 + v19;
          char v22 = v21[128];
          long long v24 = *((_OWORD *)v21 + 6);
          long long v23 = *((_OWORD *)v21 + 7);
          *((_OWORD *)v20 + 5) = *((_OWORD *)v21 + 5);
          *((_OWORD *)v20 + 6) = v24;
          *((_OWORD *)v20 + 7) = v23;
          v20[128] = v22;
          long long v26 = *((_OWORD *)v21 + 3);
          long long v25 = *((_OWORD *)v21 + 4);
          long long v27 = *((_OWORD *)v21 + 2);
          *((_OWORD *)v20 + 1) = *((_OWORD *)v21 + 1);
          *((_OWORD *)v20 + 2) = v27;
          *((_OWORD *)v20 + 3) = v26;
          *((_OWORD *)v20 + 4) = v25;
          *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
          (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
        }
        uint64_t v28 = *(int *)(sub_24B562F04(&qword_2697CC638) + 48);
        uint64_t v29 = (char *)a1 + v28;
        uint64_t v30 = (char *)a2 + v28;
        char v31 = v30[8];
        *(void *)uint64_t v29 = *(void *)v30;
        v29[8] = v31;
        goto LABEL_27;
      case 1u:
        uint64_t v9 = sub_24B562F04(&qword_2697CC580);
        uint64_t v10 = *(void *)(v9 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(a2, 3, v9))
        {
          uint64_t v11 = type metadata accessor for PhotogrammetrySession.Request(0);
          memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
        }
        else
        {
          uint64_t v32 = sub_24B6822E0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(a1, a2, v32);
          *((unsigned char *)a1 + *(int *)(v9 + 48)) = *((unsigned char *)a2 + *(int *)(v9 + 48));
          uint64_t v33 = *(int *)(v9 + 64);
          long long v34 = (char *)a1 + v33;
          long long v35 = (char *)a2 + v33;
          char v36 = v35[128];
          long long v38 = *((_OWORD *)v35 + 6);
          long long v37 = *((_OWORD *)v35 + 7);
          *((_OWORD *)v34 + 5) = *((_OWORD *)v35 + 5);
          *((_OWORD *)v34 + 6) = v38;
          *((_OWORD *)v34 + 7) = v37;
          v34[128] = v36;
          long long v40 = *((_OWORD *)v35 + 3);
          long long v39 = *((_OWORD *)v35 + 4);
          long long v41 = *((_OWORD *)v35 + 2);
          *((_OWORD *)v34 + 1) = *((_OWORD *)v35 + 1);
          *((_OWORD *)v34 + 2) = v41;
          *((_OWORD *)v34 + 3) = v40;
          *((_OWORD *)v34 + 4) = v39;
          *(_OWORD *)long long v34 = *(_OWORD *)v35;
          (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 3, v9);
        }
        uint64_t v42 = *(int *)(sub_24B562F04(&qword_2697CC640) + 48);
        uint64_t v43 = (void *)((char *)a1 + v42);
        uint64_t v44 = (void *)((char *)a2 + v42);
        uint64_t v45 = type metadata accessor for PhotogrammetrySession.Result(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 3 || EnumCaseMultiPayload == 2)
        {
          *uint64_t v43 = *v44;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload)
        {
          memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
        }
        else
        {
          uint64_t v47 = sub_24B6822E0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v47 - 8) + 16))(v43, v44, v47);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_27;
      case 2u:
        uint64_t v12 = sub_24B562F04(&qword_2697CC580);
        uint64_t v13 = *(void *)(v12 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(a2, 3, v12))
        {
          uint64_t v14 = type metadata accessor for PhotogrammetrySession.Request(0);
          memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          uint64_t v48 = sub_24B6822E0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v48 - 8) + 16))(a1, a2, v48);
          *((unsigned char *)a1 + *(int *)(v12 + 48)) = *((unsigned char *)a2 + *(int *)(v12 + 48));
          uint64_t v49 = *(int *)(v12 + 64);
          long long v50 = (char *)a1 + v49;
          uint64_t v51 = (char *)a2 + v49;
          char v52 = v51[128];
          long long v54 = *((_OWORD *)v51 + 6);
          long long v53 = *((_OWORD *)v51 + 7);
          *((_OWORD *)v50 + 5) = *((_OWORD *)v51 + 5);
          *((_OWORD *)v50 + 6) = v54;
          *((_OWORD *)v50 + 7) = v53;
          v50[128] = v52;
          long long v56 = *((_OWORD *)v51 + 3);
          long long v55 = *((_OWORD *)v51 + 4);
          long long v57 = *((_OWORD *)v51 + 2);
          *((_OWORD *)v50 + 1) = *((_OWORD *)v51 + 1);
          *((_OWORD *)v50 + 2) = v57;
          *((_OWORD *)v50 + 3) = v56;
          *((_OWORD *)v50 + 4) = v55;
          *(_OWORD *)long long v50 = *(_OWORD *)v51;
          (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 3, v12);
        }
        uint64_t v58 = sub_24B562F04(&qword_2697CC648);
        *(void *)((char *)a1 + *(int *)(v58 + 48)) = *(void *)((char *)a2 + *(int *)(v58 + 48));
        goto LABEL_27;
      case 3u:
        uint64_t v15 = sub_24B562F04(&qword_2697CC580);
        uint64_t v16 = *(void *)(v15 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(a2, 3, v15))
        {
          uint64_t v17 = type metadata accessor for PhotogrammetrySession.Request(0);
          memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          uint64_t v59 = sub_24B6822E0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v59 - 8) + 16))(a1, a2, v59);
          *((unsigned char *)a1 + *(int *)(v15 + 48)) = *((unsigned char *)a2 + *(int *)(v15 + 48));
          uint64_t v60 = *(int *)(v15 + 64);
          long long v61 = (char *)a1 + v60;
          long long v62 = (char *)a2 + v60;
          char v63 = v62[128];
          long long v65 = *((_OWORD *)v62 + 6);
          long long v64 = *((_OWORD *)v62 + 7);
          *((_OWORD *)v61 + 5) = *((_OWORD *)v62 + 5);
          *((_OWORD *)v61 + 6) = v65;
          *((_OWORD *)v61 + 7) = v64;
          v61[128] = v63;
          long long v67 = *((_OWORD *)v62 + 3);
          long long v66 = *((_OWORD *)v62 + 4);
          long long v68 = *((_OWORD *)v62 + 2);
          *((_OWORD *)v61 + 1) = *((_OWORD *)v62 + 1);
          *((_OWORD *)v61 + 2) = v68;
          *((_OWORD *)v61 + 3) = v67;
          *((_OWORD *)v61 + 4) = v66;
          *(_OWORD *)long long v61 = *(_OWORD *)v62;
          (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 3, v15);
        }
        uint64_t v69 = *(int *)(sub_24B562F04(&qword_2697CC650) + 48);
        uint64_t v70 = (char *)a1 + v69;
        uint64_t v71 = (char *)a2 + v69;
        __int16 v72 = *((_WORD *)v71 + 4);
        *(void *)uint64_t v70 = *(void *)v71;
        *((_WORD *)v70 + 4) = v72;
        goto LABEL_27;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
LABEL_27:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *initializeWithTake for PhotogrammetrySession.Output(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = sub_24B562F04(&qword_2697CC580);
      uint64_t v7 = *(void *)(v6 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
      {
        uint64_t v8 = type metadata accessor for PhotogrammetrySession.Request(0);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        uint64_t v18 = sub_24B6822E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a1, a2, v18);
        a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
        uint64_t v19 = *(int *)(v6 + 64);
        uint64_t v20 = &a1[v19];
        uint64_t v21 = &a2[v19];
        long long v22 = *((_OWORD *)v21 + 3);
        *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
        *((_OWORD *)v20 + 3) = v22;
        long long v23 = *((_OWORD *)v21 + 1);
        *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
        *((_OWORD *)v20 + 1) = v23;
        v20[128] = v21[128];
        long long v24 = *((_OWORD *)v21 + 7);
        *((_OWORD *)v20 + 6) = *((_OWORD *)v21 + 6);
        *((_OWORD *)v20 + 7) = v24;
        long long v25 = *((_OWORD *)v21 + 5);
        *((_OWORD *)v20 + 4) = *((_OWORD *)v21 + 4);
        *((_OWORD *)v20 + 5) = v25;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
      }
      uint64_t v26 = *(int *)(sub_24B562F04(&qword_2697CC638) + 48);
      long long v27 = &a1[v26];
      uint64_t v28 = &a2[v26];
      *(void *)long long v27 = *(void *)v28;
      v27[8] = v28[8];
      goto LABEL_21;
    case 1u:
      uint64_t v9 = sub_24B562F04(&qword_2697CC580);
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(a2, 3, v9))
      {
        uint64_t v11 = type metadata accessor for PhotogrammetrySession.Request(0);
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        uint64_t v29 = sub_24B6822E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(a1, a2, v29);
        a1[*(int *)(v9 + 48)] = a2[*(int *)(v9 + 48)];
        uint64_t v30 = *(int *)(v9 + 64);
        char v31 = &a1[v30];
        uint64_t v32 = &a2[v30];
        long long v33 = *((_OWORD *)v32 + 3);
        *((_OWORD *)v31 + 2) = *((_OWORD *)v32 + 2);
        *((_OWORD *)v31 + 3) = v33;
        long long v34 = *((_OWORD *)v32 + 1);
        *(_OWORD *)char v31 = *(_OWORD *)v32;
        *((_OWORD *)v31 + 1) = v34;
        v31[128] = v32[128];
        long long v35 = *((_OWORD *)v32 + 7);
        *((_OWORD *)v31 + 6) = *((_OWORD *)v32 + 6);
        *((_OWORD *)v31 + 7) = v35;
        long long v36 = *((_OWORD *)v32 + 5);
        *((_OWORD *)v31 + 4) = *((_OWORD *)v32 + 4);
        *((_OWORD *)v31 + 5) = v36;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 3, v9);
      }
      uint64_t v37 = *(int *)(sub_24B562F04(&qword_2697CC640) + 48);
      long long v38 = &a1[v37];
      long long v39 = &a2[v37];
      uint64_t v40 = type metadata accessor for PhotogrammetrySession.Result(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        uint64_t v61 = sub_24B6822E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 32))(v38, v39, v61);
        swift_storeEnumTagMultiPayload();
      }
      goto LABEL_21;
    case 2u:
      uint64_t v12 = sub_24B562F04(&qword_2697CC580);
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(a2, 3, v12))
      {
        uint64_t v14 = type metadata accessor for PhotogrammetrySession.Request(0);
        memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        uint64_t v41 = sub_24B6822E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(a1, a2, v41);
        a1[*(int *)(v12 + 48)] = a2[*(int *)(v12 + 48)];
        uint64_t v42 = *(int *)(v12 + 64);
        uint64_t v43 = &a1[v42];
        uint64_t v44 = &a2[v42];
        long long v45 = *((_OWORD *)v44 + 3);
        *((_OWORD *)v43 + 2) = *((_OWORD *)v44 + 2);
        *((_OWORD *)v43 + 3) = v45;
        long long v46 = *((_OWORD *)v44 + 1);
        *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
        *((_OWORD *)v43 + 1) = v46;
        v43[128] = v44[128];
        long long v47 = *((_OWORD *)v44 + 7);
        *((_OWORD *)v43 + 6) = *((_OWORD *)v44 + 6);
        *((_OWORD *)v43 + 7) = v47;
        long long v48 = *((_OWORD *)v44 + 5);
        *((_OWORD *)v43 + 4) = *((_OWORD *)v44 + 4);
        *((_OWORD *)v43 + 5) = v48;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 3, v12);
      }
      uint64_t v49 = sub_24B562F04(&qword_2697CC648);
      *(void *)&a1[*(int *)(v49 + 48)] = *(void *)&a2[*(int *)(v49 + 48)];
      goto LABEL_21;
    case 3u:
      uint64_t v15 = sub_24B562F04(&qword_2697CC580);
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(a2, 3, v15))
      {
        uint64_t v17 = type metadata accessor for PhotogrammetrySession.Request(0);
        memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        uint64_t v50 = sub_24B6822E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(a1, a2, v50);
        a1[*(int *)(v15 + 48)] = a2[*(int *)(v15 + 48)];
        uint64_t v51 = *(int *)(v15 + 64);
        char v52 = &a1[v51];
        long long v53 = &a2[v51];
        long long v54 = *((_OWORD *)v53 + 3);
        *((_OWORD *)v52 + 2) = *((_OWORD *)v53 + 2);
        *((_OWORD *)v52 + 3) = v54;
        long long v55 = *((_OWORD *)v53 + 1);
        *(_OWORD *)char v52 = *(_OWORD *)v53;
        *((_OWORD *)v52 + 1) = v55;
        v52[128] = v53[128];
        long long v56 = *((_OWORD *)v53 + 7);
        *((_OWORD *)v52 + 6) = *((_OWORD *)v53 + 6);
        *((_OWORD *)v52 + 7) = v56;
        long long v57 = *((_OWORD *)v53 + 5);
        *((_OWORD *)v52 + 4) = *((_OWORD *)v53 + 4);
        *((_OWORD *)v52 + 5) = v57;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 3, v15);
      }
      uint64_t v58 = *(int *)(sub_24B562F04(&qword_2697CC650) + 48);
      uint64_t v59 = &a1[v58];
      uint64_t v60 = &a2[v58];
      *(void *)uint64_t v59 = *(void *)v60;
      *((_WORD *)v59 + 4) = *((_WORD *)v60 + 4);
LABEL_21:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for PhotogrammetrySession.Output(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24B6075F8((uint64_t)a1, type metadata accessor for PhotogrammetrySession.Output);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = sub_24B562F04(&qword_2697CC580);
        uint64_t v7 = *(void *)(v6 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
        {
          uint64_t v8 = type metadata accessor for PhotogrammetrySession.Request(0);
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
        }
        else
        {
          uint64_t v38 = sub_24B6822E0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(a1, a2, v38);
          a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
          uint64_t v39 = *(int *)(v6 + 64);
          uint64_t v40 = &a1[v39];
          uint64_t v41 = &a2[v39];
          long long v42 = *((_OWORD *)v41 + 3);
          *((_OWORD *)v40 + 2) = *((_OWORD *)v41 + 2);
          *((_OWORD *)v40 + 3) = v42;
          long long v43 = *((_OWORD *)v41 + 1);
          *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
          *((_OWORD *)v40 + 1) = v43;
          v40[128] = v41[128];
          long long v44 = *((_OWORD *)v41 + 7);
          *((_OWORD *)v40 + 6) = *((_OWORD *)v41 + 6);
          *((_OWORD *)v40 + 7) = v44;
          long long v45 = *((_OWORD *)v41 + 5);
          *((_OWORD *)v40 + 4) = *((_OWORD *)v41 + 4);
          *((_OWORD *)v40 + 5) = v45;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
        }
        uint64_t v46 = *(int *)(sub_24B562F04(&qword_2697CC638) + 48);
        long long v47 = &a1[v46];
        long long v48 = &a2[v46];
        *(void *)long long v47 = *(void *)v48;
        v47[8] = v48[8];
        goto LABEL_22;
      case 1u:
        uint64_t v9 = sub_24B562F04(&qword_2697CC580);
        uint64_t v10 = *(void *)(v9 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(a2, 3, v9))
        {
          uint64_t v11 = type metadata accessor for PhotogrammetrySession.Request(0);
          memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
        }
        else
        {
          uint64_t v49 = sub_24B6822E0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(a1, a2, v49);
          a1[*(int *)(v9 + 48)] = a2[*(int *)(v9 + 48)];
          uint64_t v50 = *(int *)(v9 + 64);
          uint64_t v51 = &a1[v50];
          char v52 = &a2[v50];
          long long v53 = *((_OWORD *)v52 + 3);
          *((_OWORD *)v51 + 2) = *((_OWORD *)v52 + 2);
          *((_OWORD *)v51 + 3) = v53;
          long long v54 = *((_OWORD *)v52 + 1);
          *(_OWORD *)uint64_t v51 = *(_OWORD *)v52;
          *((_OWORD *)v51 + 1) = v54;
          v51[128] = v52[128];
          long long v55 = *((_OWORD *)v52 + 7);
          *((_OWORD *)v51 + 6) = *((_OWORD *)v52 + 6);
          *((_OWORD *)v51 + 7) = v55;
          long long v56 = *((_OWORD *)v52 + 5);
          *((_OWORD *)v51 + 4) = *((_OWORD *)v52 + 4);
          *((_OWORD *)v51 + 5) = v56;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 3, v9);
        }
        uint64_t v57 = *(int *)(sub_24B562F04(&qword_2697CC640) + 48);
        uint64_t v58 = &a1[v57];
        uint64_t v59 = &a2[v57];
        uint64_t v60 = type metadata accessor for PhotogrammetrySession.Result(0);
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
        }
        else
        {
          uint64_t v61 = sub_24B6822E0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 32))(v58, v59, v61);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_22;
      case 2u:
        uint64_t v12 = sub_24B562F04(&qword_2697CC580);
        uint64_t v13 = *(void *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(a2, 3, v12))
        {
          uint64_t v14 = type metadata accessor for PhotogrammetrySession.Request(0);
          memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          uint64_t v18 = sub_24B6822E0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a1, a2, v18);
          a1[*(int *)(v12 + 48)] = a2[*(int *)(v12 + 48)];
          uint64_t v19 = *(int *)(v12 + 64);
          uint64_t v20 = &a1[v19];
          uint64_t v21 = &a2[v19];
          long long v22 = *((_OWORD *)v21 + 3);
          *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
          *((_OWORD *)v20 + 3) = v22;
          long long v23 = *((_OWORD *)v21 + 1);
          *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
          *((_OWORD *)v20 + 1) = v23;
          v20[128] = v21[128];
          long long v24 = *((_OWORD *)v21 + 7);
          *((_OWORD *)v20 + 6) = *((_OWORD *)v21 + 6);
          *((_OWORD *)v20 + 7) = v24;
          long long v25 = *((_OWORD *)v21 + 5);
          *((_OWORD *)v20 + 4) = *((_OWORD *)v21 + 4);
          *((_OWORD *)v20 + 5) = v25;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 3, v12);
        }
        uint64_t v26 = sub_24B562F04(&qword_2697CC648);
        *(void *)&a1[*(int *)(v26 + 48)] = *(void *)&a2[*(int *)(v26 + 48)];
        goto LABEL_22;
      case 3u:
        uint64_t v15 = sub_24B562F04(&qword_2697CC580);
        uint64_t v16 = *(void *)(v15 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(a2, 3, v15))
        {
          uint64_t v17 = type metadata accessor for PhotogrammetrySession.Request(0);
          memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          uint64_t v27 = sub_24B6822E0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(a1, a2, v27);
          a1[*(int *)(v15 + 48)] = a2[*(int *)(v15 + 48)];
          uint64_t v28 = *(int *)(v15 + 64);
          uint64_t v29 = &a1[v28];
          uint64_t v30 = &a2[v28];
          long long v31 = *((_OWORD *)v30 + 3);
          *((_OWORD *)v29 + 2) = *((_OWORD *)v30 + 2);
          *((_OWORD *)v29 + 3) = v31;
          long long v32 = *((_OWORD *)v30 + 1);
          *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
          *((_OWORD *)v29 + 1) = v32;
          v29[128] = v30[128];
          long long v33 = *((_OWORD *)v30 + 7);
          *((_OWORD *)v29 + 6) = *((_OWORD *)v30 + 6);
          *((_OWORD *)v29 + 7) = v33;
          long long v34 = *((_OWORD *)v30 + 5);
          *((_OWORD *)v29 + 4) = *((_OWORD *)v30 + 4);
          *((_OWORD *)v29 + 5) = v34;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 3, v15);
        }
        uint64_t v35 = *(int *)(sub_24B562F04(&qword_2697CC650) + 48);
        long long v36 = &a1[v35];
        uint64_t v37 = &a2[v35];
        *(void *)long long v36 = *(void *)v37;
        *((_WORD *)v36 + 4) = *((_WORD *)v37 + 4);
LABEL_22:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t _s6CoreOC21PhotogrammetrySessionC6ResultOwet_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t _s6CoreOC21PhotogrammetrySessionC6ResultOwst_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_24B60C0C4()
{
  uint64_t result = type metadata accessor for PhotogrammetrySession.Request(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v8 = &v7;
    uint64_t result = type metadata accessor for PhotogrammetrySession.Result(319);
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v9 = &v6;
      uint64_t v3 = MEMORY[0x263F8CF70] + 64;
      swift_getTupleTypeLayout2();
      uint64_t v10 = &v5;
      swift_getTupleTypeLayout2();
      uint64_t v11 = &v4;
      uint64_t v12 = &unk_24B687220;
      uint64_t v13 = v3;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for PhotogrammetrySession.Output.ProgressInfo(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for PhotogrammetrySession.Output.ProgressInfo(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFA && *(unsigned char *)(a1 + 10)) {
    return (*(_DWORD *)a1 + 250);
  }
  if (*(unsigned __int8 *)(a1 + 9) <= 6u) {
    int v3 = 6;
  }
  else {
    int v3 = *(unsigned __int8 *)(a1 + 9);
  }
  int v4 = v3 - 7;
  if (*(unsigned __int8 *)(a1 + 9) < 6u) {
    int v5 = -1;
  }
  else {
    int v5 = v4;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PhotogrammetrySession.Output.ProgressInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_WORD *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 250;
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 10) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 10) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 9) = a2 + 6;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PhotogrammetrySession.Output.ProgressInfo()
{
  return &type metadata for PhotogrammetrySession.Output.ProgressInfo;
}

void *initializeBufferWithCopyOfBuffer for PhotogrammetrySession.Configuration(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *int v4 = *a2;
    int v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(unsigned char *)(a1 + 1) = *((unsigned char *)a2 + 1);
    *(unsigned char *)(a1 + 2) = *((unsigned char *)a2 + 2);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    uint64_t v7 = *(int *)(a3 + 32);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (char *)a2 + v7;
    *(_OWORD *)(a1 + 21) = *(_OWORD *)((char *)a2 + 21);
    uint64_t v10 = sub_24B6822E0();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_24B562F04(&qword_2697CC1F0);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    *((unsigned char *)v4 + *(int *)(a3 + 36)) = *((unsigned char *)a2 + *(int *)(a3 + 36));
  }
  return v4;
}

uint64_t destroy for PhotogrammetrySession.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 32);
  uint64_t v3 = sub_24B6822E0();
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v3);
  if (!result)
  {
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(v2, v3);
  }
  return result;
}

uint64_t initializeWithCopy for PhotogrammetrySession.Configuration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 21) = *(_OWORD *)(a2 + 21);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_24B6822E0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_24B562F04(&qword_2697CC1F0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(unsigned char *)(a1 + *(int *)(a3 + 36)) = *(unsigned char *)(a2 + *(int *)(a3 + 36));
  return a1;
}

uint64_t assignWithCopy for PhotogrammetrySession.Configuration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  int v6 = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v6;
  uint64_t v7 = *(int *)(a3 + 32);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_24B6822E0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_24B562F04(&qword_2697CC1F0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *(unsigned char *)(a1 + *(int *)(a3 + 36)) = *(unsigned char *)(a2 + *(int *)(a3 + 36));
  return a1;
}

uint64_t initializeWithTake for PhotogrammetrySession.Configuration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 21) = *(_OWORD *)(a2 + 21);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_24B6822E0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_24B562F04(&qword_2697CC1F0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(unsigned char *)(a1 + *(int *)(a3 + 36)) = *(unsigned char *)(a2 + *(int *)(a3 + 36));
  return a1;
}

uint64_t assignWithTake for PhotogrammetrySession.Configuration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_24B6822E0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_24B562F04(&qword_2697CC1F0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(unsigned char *)(a1 + *(int *)(a3 + 36)) = *(unsigned char *)(a2 + *(int *)(a3 + 36));
  return a1;
}

uint64_t getEnumTagSinglePayload for PhotogrammetrySession.Configuration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24B60CB80);
}

uint64_t sub_24B60CB80(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = sub_24B562F04(&qword_2697CC1F0);
    uint64_t v11 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    int v13 = &a1[*(int *)(a3 + 32)];
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for PhotogrammetrySession.Configuration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24B60CC48);
}

unsigned char *sub_24B60CC48(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v7 = sub_24B562F04(&qword_2697CC1F0);
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 32)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_24B60CCF0()
{
  sub_24B60CD94();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_24B60CD94()
{
  if (!qword_2697CC5D8)
  {
    sub_24B6822E0();
    unint64_t v0 = sub_24B682CC0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2697CC5D8);
    }
  }
}

ValueMetadata *type metadata accessor for PhotogrammetrySession.Configuration.SampleOrdering()
{
  return &type metadata for PhotogrammetrySession.Configuration.SampleOrdering;
}

unsigned char *_s6CoreOC21PhotogrammetrySessionC13ConfigurationV14SampleOrderingOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24B60CED0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PhotogrammetrySession.Configuration.FeatureSensitivity()
{
  return &type metadata for PhotogrammetrySession.Configuration.FeatureSensitivity;
}

__n128 initializeWithCopy for PhotogrammetrySession.Configuration.CustomDetailSpecification(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for PhotogrammetrySession.Configuration.CustomDetailSpecification(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 29)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 5;
  int v5 = v3 - 5;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PhotogrammetrySession.Configuration.CustomDetailSpecification(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 28) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 29) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 29) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 4;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PhotogrammetrySession.Configuration.CustomDetailSpecification()
{
  return &type metadata for PhotogrammetrySession.Configuration.CustomDetailSpecification;
}

unsigned char *storeEnumTagSinglePayload for PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureDimension(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24B60D088);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureDimension()
{
  return &type metadata for PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureDimension;
}

ValueMetadata *type metadata accessor for PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureMapOutputs()
{
  return &type metadata for PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureMapOutputs;
}

uint64_t initializeBufferWithCopyOfBuffer for PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureFormat(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(unsigned char *)(result + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)__n128 result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureFormat(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 5)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureFormat(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)__n128 result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 5) = v3;
  return result;
}

uint64_t sub_24B60D130(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 4)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_24B60D14C(uint64_t result, int a2)
{
  if (a2)
  {
    *(_DWORD *)__n128 result = a2 - 1;
    *(unsigned char *)(result + 4) = 1;
  }
  else
  {
    *(unsigned char *)(result + 4) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureFormat()
{
  return &type metadata for PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureFormat;
}

ValueMetadata *type metadata accessor for PhotogrammetrySession.HardwareSpecs()
{
  return &type metadata for PhotogrammetrySession.HardwareSpecs;
}

uint64_t sub_24B60D1B0()
{
  unint64_t v0 = sub_24B60D634();
  return v0 | ((HIDWORD(v0) & 1) << 32);
}

uint64_t sub_24B60D1DC(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v31 - v9;
  unint64_t v11 = sub_24B60D634();
  uint64_t v12 = sub_24B57CB70();
  int v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  if ((v11 & 0x100000000) == 0)
  {
    v13(v10, v12, v4);
    swift_bridgeObjectRetain_n();
    uint64_t v19 = sub_24B6824B0();
    os_log_type_t v20 = sub_24B682B30();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      v35[0] = v33;
      *(_DWORD *)uint64_t v21 = 136446466;
      swift_bridgeObjectRetain();
      uint64_t v34 = sub_24B5627B8(a1, a2, v35);
      sub_24B682CD0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v21 + 12) = 2082;
      sub_24B562F04((uint64_t *)&unk_2697CD150);
      uint64_t v22 = swift_allocObject();
      uint64_t v23 = MEMORY[0x263F8D5C8];
      *(_OWORD *)(v22 + 16) = xmmword_24B684E60;
      uint64_t v24 = MEMORY[0x263F8D648];
      *(void *)(v22 + 56) = v23;
      *(void *)(v22 + 64) = v24;
      *(_DWORD *)(v22 + 32) = v11;
      uint64_t v25 = sub_24B6827F0();
      uint64_t v34 = sub_24B5627B8(v25, v26, v35);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24B55E000, v19, v20, "MemoryLogger: %{public}s, memory footprint = %{public}s MB", (uint8_t *)v21, 0x16u);
      uint64_t v27 = v33;
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v27, -1, -1);
      MEMORY[0x24C5D6C00](v21, -1, -1);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      return v11 | ((HIDWORD(v11) & 1) << 32);
    }

    swift_bridgeObjectRelease_n();
    uint64_t v28 = *(void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v29 = v10;
LABEL_8:
    v28(v29, v4);
    return v11 | ((HIDWORD(v11) & 1) << 32);
  }
  v13(v8, v12, v4);
  swift_bridgeObjectRetain_n();
  uint64_t v14 = sub_24B6824B0();
  os_log_type_t v15 = sub_24B682B30();
  if (!os_log_type_enabled(v14, v15))
  {

    swift_bridgeObjectRelease_n();
    uint64_t v28 = *(void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v29 = v8;
    goto LABEL_8;
  }
  uint64_t v33 = v4;
  uint64_t v16 = swift_slowAlloc();
  uint64_t v32 = a1;
  uint64_t v17 = (uint8_t *)v16;
  uint64_t v18 = swift_slowAlloc();
  v35[0] = v18;
  *(_DWORD *)uint64_t v17 = 136446210;
  swift_bridgeObjectRetain();
  uint64_t v34 = sub_24B5627B8(v32, a2, v35);
  sub_24B682CD0();
  swift_bridgeObjectRelease_n();
  _os_log_impl(&dword_24B55E000, v14, v15, "MemoryLogger: %{public}s", v17, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x24C5D6C00](v18, -1, -1);
  MEMORY[0x24C5D6C00](v17, -1, -1);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v33);
  return v11 | ((HIDWORD(v11) & 1) << 32);
}

uint64_t MemoryLogger.deinit()
{
  return v0;
}

uint64_t MemoryLogger.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_24B60D634()
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  int v28 = 0;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v13 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  *(_OWORD *)task_info_out = 0u;
  long long v6 = 0u;
  mach_msg_type_number_t task_info_outCnt = 93;
  if (task_info(*MEMORY[0x263EF8960], 0x16u, task_info_out, &task_info_outCnt)) {
    BOOL v0 = 0;
  }
  else {
    BOOL v0 = task_info_outCnt >= 0x26;
  }
  int v1 = !v0;
  uint64_t v2 = COERCE_UNSIGNED_INT((float)(unint64_t)v14 * 0.00000095367);
  if (v1) {
    uint64_t v2 = 0;
  }
  return v2 | ((unint64_t)v1 << 32);
}

uint64_t type metadata accessor for MemoryLogger()
{
  return self;
}

uint64_t method lookup function for MemoryLogger(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MemoryLogger);
}

uint64_t dispatch thunk of static MemoryLogger.memoryFootprint()()
{
  unint64_t v1 = (*(uint64_t (**)(void))(v0 + 80))();
  return v1 | ((HIDWORD(v1) & 1) << 32);
}

id sub_24B60D79C()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_focusPointOfInterest);
}

id sub_24B60D7AC()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_exposurePointOfInterest);
}

id sub_24B60D7BC()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_ISO);
}

id sub_24B60D7CC()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_focusMode);
}

id sub_24B60D7DC()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_isAdjustingFocus);
}

id sub_24B60D800()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_exposureMode);
}

id sub_24B60D810()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_isAdjustingExposure);
}

id sub_24B60D834()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_lensPosition);
}

Float64 sub_24B60D844()
{
  objc_msgSend(*(id *)(v0 + 16), sel_activeMaxExposureDuration);
  return CMTimeGetSeconds(&time);
}

uint64_t sub_24B60D894(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 24) = 1;
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t sub_24B60D8D0(char a1)
{
  v23[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v3 = sub_24B6824D0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  long long v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(uint64_t (**)(uint64_t))(*v1 + 96))(v5))
  {
    long long v8 = (void *)v1[2];
    uint64_t result = (uint64_t)objc_msgSend(v8, sel_isSmoothAutoFocusSupported);
    if (!result) {
      return result;
    }
    v23[0] = 0;
    if (objc_msgSend(v8, sel_lockForConfiguration_, v23))
    {
      id v10 = v23[0];
      objc_msgSend(v8, sel_setSmoothAutoFocusEnabled_, a1 & 1);
      objc_msgSend(v8, sel_unlockForConfiguration);
      return 1;
    }
    id v11 = v23[0];
    long long v12 = (void *)sub_24B6821B0();

    swift_willThrow();
    uint64_t v13 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v13, v3);
    id v14 = v12;
    id v15 = v12;
    long long v16 = sub_24B6824B0();
    os_log_type_t v17 = sub_24B682B20();
    if (os_log_type_enabled(v16, v17))
    {
      long long v18 = (uint8_t *)swift_slowAlloc();
      long long v19 = (void *)swift_slowAlloc();
      v23[0] = v19;
      *(_DWORD *)long long v18 = 136446210;
      v22[1] = v18 + 4;
      swift_getErrorValue();
      uint64_t v20 = sub_24B683020();
      v22[2] = sub_24B5627B8(v20, v21, (uint64_t *)v23);
      sub_24B682CD0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24B55E000, v16, v17, "Camera Control: Camera failed to lock with error = %{public}s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v19, -1, -1);
      MEMORY[0x24C5D6C00](v18, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return 0;
}

uint64_t sub_24B60DC04()
{
  v22[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = sub_24B6824D0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((*(uint64_t (**)(uint64_t))(*v0 + 96))(v3) & 1) == 0) {
    return 0;
  }
  uint64_t v6 = (void *)v0[2];
  if (!objc_msgSend(v6, sel_isAutoFocusRangeRestrictionSupported)) {
    return 0;
  }
  v22[0] = 0;
  if (!objc_msgSend(v6, sel_lockForConfiguration_, v22))
  {
    id v9 = v22[0];
    id v10 = (void *)sub_24B6821B0();

    swift_willThrow();
    uint64_t v11 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v11, v1);
    id v12 = v10;
    id v13 = v10;
    id v14 = sub_24B6824B0();
    os_log_type_t v15 = sub_24B682B20();
    if (os_log_type_enabled(v14, v15))
    {
      long long v16 = (uint8_t *)swift_slowAlloc();
      os_log_type_t v17 = (void *)swift_slowAlloc();
      v22[0] = v17;
      *(_DWORD *)long long v16 = 136446210;
      v21[1] = v16 + 4;
      swift_getErrorValue();
      uint64_t v18 = sub_24B683020();
      v21[2] = sub_24B5627B8(v18, v19, (uint64_t *)v22);
      sub_24B682CD0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24B55E000, v14, v15, "Camera Control: Camera failed to lock with error = %{public}s", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v17, -1, -1);
      MEMORY[0x24C5D6C00](v16, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    return 0;
  }
  id v7 = v22[0];
  uint64_t v8 = 1;
  objc_msgSend(v6, sel_setAutoFocusRangeRestriction_, 1);
  objc_msgSend(v6, sel_unlockForConfiguration);
  return v8;
}

uint64_t sub_24B60DF38()
{
  return sub_24B60EEE8((SEL *)&selRef_isFocusModeSupported_, 0, (SEL *)&selRef_setFocusMode_);
}

uint64_t sub_24B60DFA4(double a1, double a2)
{
  return sub_24B60E05C(1, a1, a2);
}

uint64_t sub_24B60E000(double a1, double a2)
{
  return sub_24B60E05C(2, a1, a2);
}

uint64_t sub_24B60E05C(uint64_t a1, double a2, double a3)
{
  v27[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v7 = sub_24B6824D0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((*(uint64_t (**)(uint64_t))(*v3 + 96))(v9) & 1) == 0) {
    return 0;
  }
  id v12 = (void *)v3[2];
  v27[0] = 0;
  if (!objc_msgSend(v12, sel_lockForConfiguration_, v27))
  {
    id v15 = v27[0];
    long long v16 = (void *)sub_24B6821B0();

    swift_willThrow();
    uint64_t v17 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v17, v7);
    id v18 = v16;
    id v19 = v16;
    uint64_t v20 = sub_24B6824B0();
    os_log_type_t v21 = sub_24B682B20();
    if (os_log_type_enabled(v20, v21))
    {
      long long v22 = (uint8_t *)swift_slowAlloc();
      long long v23 = (void *)swift_slowAlloc();
      v27[0] = v23;
      *(_DWORD *)long long v22 = 136446210;
      v26[1] = v22 + 4;
      swift_getErrorValue();
      uint64_t v24 = sub_24B683020();
      v26[2] = sub_24B5627B8(v24, v25, (uint64_t *)v27);
      sub_24B682CD0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24B55E000, v20, v21, "Camera Control: Camera failed to lock with error = %{public}s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v23, -1, -1);
      MEMORY[0x24C5D6C00](v22, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    return 0;
  }
  id v13 = v27[0];
  if (objc_msgSend(v12, sel_isFocusPointOfInterestSupported)) {
    objc_msgSend(v12, sel_setFocusPointOfInterest_, a2, a3);
  }
  if (objc_msgSend(v12, sel_isFocusModeSupported_, a1)) {
    objc_msgSend(v12, sel_setFocusMode_, a1);
  }
  objc_msgSend(v12, sel_unlockForConfiguration);
  return 1;
}

uint64_t sub_24B60E3D0()
{
  return sub_24B60EEE8((SEL *)&selRef_isExposureModeSupported_, 0, (SEL *)&selRef_setExposureMode_);
}

uint64_t sub_24B60E43C(double a1, double a2)
{
  return sub_24B60E498(1, a1, a2);
}

uint64_t sub_24B60E498(uint64_t a1, double a2, double a3)
{
  v27[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v7 = sub_24B6824D0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((*(uint64_t (**)(uint64_t))(*v3 + 96))(v9) & 1) == 0) {
    return 0;
  }
  id v12 = (void *)v3[2];
  v27[0] = 0;
  if (!objc_msgSend(v12, sel_lockForConfiguration_, v27))
  {
    id v15 = v27[0];
    long long v16 = (void *)sub_24B6821B0();

    swift_willThrow();
    uint64_t v17 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v17, v7);
    id v18 = v16;
    id v19 = v16;
    uint64_t v20 = sub_24B6824B0();
    os_log_type_t v21 = sub_24B682B20();
    if (os_log_type_enabled(v20, v21))
    {
      long long v22 = (uint8_t *)swift_slowAlloc();
      long long v23 = (void *)swift_slowAlloc();
      v27[0] = v23;
      *(_DWORD *)long long v22 = 136446210;
      v26[1] = v22 + 4;
      swift_getErrorValue();
      uint64_t v24 = sub_24B683020();
      v26[2] = sub_24B5627B8(v24, v25, (uint64_t *)v27);
      sub_24B682CD0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24B55E000, v20, v21, "Camera Control: Camera failed to lock with error = %{public}s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v23, -1, -1);
      MEMORY[0x24C5D6C00](v22, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    return 0;
  }
  id v13 = v27[0];
  if (objc_msgSend(v12, sel_isExposurePointOfInterestSupported)) {
    objc_msgSend(v12, sel_setExposurePointOfInterest_, a2, a3);
  }
  if (objc_msgSend(v12, sel_isExposureModeSupported_, a1)) {
    objc_msgSend(v12, sel_setExposureMode_, a1);
  }
  objc_msgSend(v12, sel_unlockForConfiguration);
  return 1;
}

uint64_t sub_24B60E80C(double a1, double a2)
{
  return sub_24B60E498(2, a1, a2);
}

uint64_t sub_24B60E868(double a1)
{
  uint64_t v2 = v1;
  v50[3] = *(id *)MEMORY[0x263EF8340];
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  long long v48 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v45 - v8;
  uint64_t v10 = (void *)v2[2];
  id v11 = objc_msgSend(v10, sel_activeFormat);
  objc_msgSend(v11, sel_minExposureDuration);

  sub_24B682C60();
  id v13 = v12;
  id v14 = objc_msgSend(v10, sel_activeFormat);
  objc_msgSend(v14, sel_maxExposureDuration);

  uint64_t v15 = v4;
  sub_24B682C60();
  uint64_t v17 = v16;
  uint64_t v18 = sub_24B57CB70();
  uint64_t v46 = *(void (**)(char *))(v5 + 16);
  long long v47 = (uint8_t *)v18;
  v46(v9);
  id v19 = sub_24B6824B0();
  os_log_type_t v20 = sub_24B682B30();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 134349312;
    v50[0] = v13;
    sub_24B682CD0();
    *(_WORD *)(v21 + 12) = 2050;
    v50[0] = v17;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v19, v20, "Camera Control: Camera min exposure duration = %{public}f, max exposure duration = %{public}f", (uint8_t *)v21, 0x16u);
    uint64_t v22 = v21;
    uint64_t v15 = v4;
    MEMORY[0x24C5D6C00](v22, -1, -1);
  }

  long long v23 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  uint64_t v24 = v23(v9, v15);
  char v25 = (*(uint64_t (**)(uint64_t))(*v2 + 96))(v24);
  uint64_t result = 0;
  if ((v25 & 1) != 0 && *(double *)&v13 <= a1 && *(double *)&v17 >= a1)
  {
    long long v27 = (void *)sub_24B682C50();
    uint64_t v29 = v28;
    uint64_t v31 = v30;
    if (sub_24B682C40())
    {
      v50[0] = 0;
      if (objc_msgSend(v10, sel_lockForConfiguration_, v50))
      {
        id v32 = v50[0];
        v50[0] = v27;
        v50[1] = v29;
        v50[2] = v31;
        objc_msgSend(v10, sel_setActiveMaxExposureDuration_, v50);
        objc_msgSend(v10, sel_unlockForConfiguration);
        return 1;
      }
      id v33 = v50[0];
      uint64_t v34 = (void *)sub_24B6821B0();

      swift_willThrow();
      uint64_t v35 = v48;
      ((void (*)(char *, uint8_t *, uint64_t))v46)(v48, v47, v15);
      id v36 = v34;
      id v37 = v34;
      uint64_t v38 = sub_24B6824B0();
      os_log_type_t v39 = sub_24B682B20();
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v40 = (uint8_t *)swift_slowAlloc();
        uint64_t v41 = (void *)swift_slowAlloc();
        v50[0] = v41;
        *(_DWORD *)uint64_t v40 = 136446210;
        long long v47 = v40 + 4;
        swift_getErrorValue();
        uint64_t v42 = sub_24B683020();
        uint64_t v49 = sub_24B5627B8(v42, v43, (uint64_t *)v50);
        sub_24B682CD0();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_24B55E000, v38, v39, "Camera Control: Camera failed to lock with error = %{public}s", v40, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v41, -1, -1);
        MEMORY[0x24C5D6C00](v40, -1, -1);

        long long v44 = v48;
      }
      else
      {

        long long v44 = v35;
      }
      v23(v44, v15);
    }
    return 0;
  }
  return result;
}

uint64_t sub_24B60EDA4()
{
  return sub_24B60EEE8((SEL *)&selRef_isWhiteBalanceModeSupported_, 0, (SEL *)&selRef_setWhiteBalanceMode_);
}

uint64_t sub_24B60EE10()
{
  return sub_24B60EEE8((SEL *)&selRef_isWhiteBalanceModeSupported_, 1, (SEL *)&selRef_setWhiteBalanceMode_);
}

uint64_t sub_24B60EE7C()
{
  return sub_24B60EEE8((SEL *)&selRef_isWhiteBalanceModeSupported_, 2, (SEL *)&selRef_setWhiteBalanceMode_);
}

uint64_t sub_24B60EEE8(SEL *a1, uint64_t a2, SEL *a3)
{
  v27[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v7 = sub_24B6824D0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  id v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((*(uint64_t (**)(uint64_t))(*v3 + 96))(v9) & 1) == 0) {
    return 0;
  }
  id v12 = (void *)v3[2];
  v27[0] = 0;
  if (!objc_msgSend(v12, sel_lockForConfiguration_, v27))
  {
    id v15 = v27[0];
    long long v16 = (void *)sub_24B6821B0();

    swift_willThrow();
    uint64_t v17 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v17, v7);
    id v18 = v16;
    id v19 = v16;
    os_log_type_t v20 = sub_24B6824B0();
    os_log_type_t v21 = sub_24B682B20();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      long long v23 = (void *)swift_slowAlloc();
      v27[0] = v23;
      *(_DWORD *)uint64_t v22 = 136446210;
      v26[1] = v22 + 4;
      swift_getErrorValue();
      uint64_t v24 = sub_24B683020();
      v26[2] = sub_24B5627B8(v24, v25, (uint64_t *)v27);
      sub_24B682CD0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24B55E000, v20, v21, "Camera Control: Camera failed to lock with error = %{public}s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v23, -1, -1);
      MEMORY[0x24C5D6C00](v22, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    return 0;
  }
  id v13 = v27[0];
  if (objc_msgSend(v12, *a1, a2)) {
    objc_msgSend(v12, *a3, a2);
  }
  objc_msgSend(v12, sel_unlockForConfiguration);
  return 1;
}

uint64_t sub_24B60F220()
{
  v21[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = sub_24B6824D0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((*(uint64_t (**)(uint64_t))(*v0 + 96))(v3) & 1) == 0) {
    return 0;
  }
  uint64_t v6 = (void *)v0[2];
  v21[0] = 0;
  if (!objc_msgSend(v6, sel_lockForConfiguration_, v21))
  {
    id v9 = v21[0];
    uint64_t v10 = (void *)sub_24B6821B0();

    swift_willThrow();
    uint64_t v11 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v11, v1);
    id v12 = v10;
    id v13 = v10;
    id v14 = sub_24B6824B0();
    os_log_type_t v15 = sub_24B682B20();
    if (os_log_type_enabled(v14, v15))
    {
      long long v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = (void *)swift_slowAlloc();
      v21[0] = v17;
      *(_DWORD *)long long v16 = 136446210;
      v20[1] = v16 + 4;
      swift_getErrorValue();
      uint64_t v18 = sub_24B683020();
      v20[2] = sub_24B5627B8(v18, v19, (uint64_t *)v21);
      sub_24B682CD0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24B55E000, v14, v15, "Camera Control: Camera failed to lock with error = %{public}s", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v17, -1, -1);
      MEMORY[0x24C5D6C00](v16, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    return 0;
  }
  id v7 = v21[0];
  if (objc_msgSend(v6, sel_isFocusModeSupported_, 1)) {
    objc_msgSend(v6, sel_setFocusMode_, 1);
  }
  if (objc_msgSend(v6, sel_isExposureModeSupported_, 1)) {
    objc_msgSend(v6, sel_setExposureMode_, 1);
  }
  objc_msgSend(v6, sel_unlockForConfiguration);
  return 1;
}

uint64_t sub_24B60F580()
{
  v21[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = sub_24B6824D0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(uint64_t (**)(uint64_t))(*v0 + 96))(v3))
  {
    uint64_t v6 = (void *)v0[2];
    v21[0] = 0;
    if (objc_msgSend(v6, sel_lockForConfiguration_, v21))
    {
      id v7 = v21[0];
      objc_msgSend(v6, sel_setAutomaticallyAdjustsFaceDrivenAutoFocusEnabled_, 0);
      objc_msgSend(v6, sel_setAutomaticallyAdjustsFaceDrivenAutoExposureEnabled_, 0);
      objc_msgSend(v6, sel_setFaceDrivenAutoFocusEnabled_, 0);
      objc_msgSend(v6, sel_setFaceDrivenAutoExposureEnabled_, 0);
      objc_msgSend(v6, sel_unlockForConfiguration);
      return 1;
    }
    id v9 = v21[0];
    uint64_t v10 = (void *)sub_24B6821B0();

    swift_willThrow();
    uint64_t v11 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v11, v1);
    id v12 = v10;
    id v13 = v10;
    id v14 = sub_24B6824B0();
    os_log_type_t v15 = sub_24B682B20();
    if (os_log_type_enabled(v14, v15))
    {
      long long v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = (void *)swift_slowAlloc();
      v21[0] = v17;
      *(_DWORD *)long long v16 = 136446210;
      v20[1] = v16 + 4;
      swift_getErrorValue();
      uint64_t v18 = sub_24B683020();
      v20[2] = sub_24B5627B8(v18, v19, (uint64_t *)v21);
      sub_24B682CD0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24B55E000, v14, v15, "Camera Control: Camera failed to lock with error = %{public}s", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v17, -1, -1);
      MEMORY[0x24C5D6C00](v16, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  return 0;
}

uint64_t sub_24B60F8D8()
{
  sub_24B682E40();
  sub_24B682890();
  uint64_t v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, sel_minimumFocusDistance);
  sub_24B682F90();
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  objc_msgSend(v1, sel_focusMode);
  sub_24B682F90();
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  objc_msgSend(v1, sel_isFocusModeSupported_, 0);
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  objc_msgSend(v1, sel_isFocusModeSupported_, 1);
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  objc_msgSend(v1, sel_isFocusModeSupported_, 2);
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  objc_msgSend(v1, sel_focusPointOfInterest);
  type metadata accessor for CGPoint();
  sub_24B682ED0();
  sub_24B682890();
  objc_msgSend(v1, sel_isFocusPointOfInterestSupported);
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  objc_msgSend(v1, sel_isAdjustingFocus);
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  objc_msgSend(v1, sel_isSmoothAutoFocusEnabled);
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  objc_msgSend(v1, sel_isSmoothAutoFocusSupported);
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  objc_msgSend(v1, sel_autoFocusRangeRestriction);
  sub_24B682F90();
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  objc_msgSend(v1, sel_isAutoFocusRangeRestrictionSupported);
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  objc_msgSend(v1, sel_exposureMode);
  sub_24B682F90();
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  objc_msgSend(v1, sel_isExposureModeSupported_, 0);
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  objc_msgSend(v1, sel_isExposureModeSupported_, 1);
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  objc_msgSend(v1, sel_isExposureModeSupported_, 2);
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  objc_msgSend(v1, sel_exposurePointOfInterest);
  sub_24B682ED0();
  sub_24B682890();
  objc_msgSend(v1, sel_isExposurePointOfInterestSupported);
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  objc_msgSend(v1, sel_isAdjustingExposure);
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  objc_msgSend(v1, sel_whiteBalanceMode);
  sub_24B682F90();
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  objc_msgSend(v1, sel_isWhiteBalanceModeSupported_, 0);
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  objc_msgSend(v1, sel_isWhiteBalanceModeSupported_, 1);
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  objc_msgSend(v1, sel_isWhiteBalanceModeSupported_, 2);
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  objc_msgSend(v1, sel_isAdjustingWhiteBalance);
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  objc_msgSend(v1, sel_isGlobalToneMappingEnabled);
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  objc_msgSend(v1, sel_isLowLightBoostSupported);
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  objc_msgSend(v1, sel_isLowLightBoostEnabled);
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  objc_msgSend(v1, sel_automaticallyEnablesLowLightBoostWhenAvailable);
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  objc_msgSend(v1, sel_lensPosition);
  sub_24B682A70();
  sub_24B682890();
  objc_msgSend(v1, sel_ISO);
  sub_24B682A70();
  sub_24B682890();
  objc_msgSend(v1, sel_automaticallyAdjustsVideoHDREnabled);
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  objc_msgSend(v1, sel_isVideoHDREnabled);
  sub_24B682890();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_24B6103C4()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CameraControl()
{
  return self;
}

double sub_24B610420()
{
  double result = 0.0;
  xmmword_2697CF6C0 = xmmword_24B6873E0;
  return result;
}

double sub_24B610434()
{
  double result = 32768.0079;
  xmmword_2697CF6E0 = xmmword_24B6873F0;
  return result;
}

double sub_24B610448@<D0>(uint64_t a1@<X8>, __n128 a2@<Q0>, float a3@<S1>, float a4@<S2>)
{
  __n128 v37 = a2;
  uint64_t v7 = sub_24B6824D0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  id v13 = (char *)&v32 - v12;
  uint64_t v14 = sub_24B57CC7C();
  uint64_t v35 = *(void (**)(char *))(v8 + 16);
  *(void *)&long long v36 = v14;
  v35(v13);
  os_log_type_t v15 = sub_24B6824B0();
  os_log_type_t v16 = sub_24B682B30();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v34 = v8;
    uint64_t v19 = v18;
    uint64_t v39 = v18;
    *(_DWORD *)uint64_t v17 = 136380931;
    uint64_t v33 = v7;
    double v38 = COERCE_DOUBLE(sub_24B5627B8(0xD000000000000053, 0x800000024B690E00, &v39));
    uint64_t v7 = v33;
    sub_24B682CD0();
    *(_WORD *)(v17 + 12) = 2050;
    double v38 = a3;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v15, v16, "ObjectCaptureSession.%{private}s: Voxel dimension scene mode = %{public}fm", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    uint64_t v20 = v19;
    uint64_t v8 = v34;
    MEMORY[0x24C5D6C00](v20, -1, -1);
    MEMORY[0x24C5D6C00](v17, -1, -1);
  }

  os_log_type_t v21 = *(void (**)(char *, uint64_t))(v8 + 8);
  v21(v13, v7);
  ((void (*)(char *, void, uint64_t))v35)(v11, v36, v7);
  uint64_t v22 = sub_24B6824B0();
  os_log_type_t v23 = sub_24B682B30();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    uint64_t v39 = v25;
    *(_DWORD *)uint64_t v24 = 136380931;
    *(void *)&long long v36 = v11;
    double v38 = COERCE_DOUBLE(sub_24B5627B8(0xD000000000000053, 0x800000024B690E00, &v39));
    sub_24B682CD0();
    *(_WORD *)(v24 + 12) = 2050;
    double v38 = a4;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v22, v23, "ObjectCaptureSession.%{private}s: Depth confidence threshold scene mode = %{public}f", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v25, -1, -1);
    MEMORY[0x24C5D6C00](v24, -1, -1);

    long long v26 = (char *)v36;
  }
  else
  {

    long long v26 = v11;
  }
  v21(v26, v7);
  if (qword_2697CF6D0 != -1) {
    swift_once();
  }
  long long v36 = xmmword_2697CF6E0;
  int v27 = *sub_24B567EB4();
  int v28 = *(_DWORD *)sub_24B5F6688();
  int v29 = *(_DWORD *)sub_24B5F6694();
  *(_DWORD *)a1 = 1;
  *(unsigned char *)(a1 + 4) = 1;
  *(void *)(a1 + 16) = 4;
  *(float *)(a1 + 24) = a4;
  *(_DWORD *)(a1 + 28) = 30000;
  *(float *)(a1 + 32) = a3;
  *(unsigned char *)(a1 + 36) = 33;
  *(void *)(a1 + 40) = 0x3D4CCCCD3F83D70ALL;
  *(_DWORD *)(a1 + 48) = 1084227584;
  __n128 v30 = v37;
  *(_OWORD *)(a1 + 64) = v36;
  *(__n128 *)(a1 + 80) = v30;
  *(void *)&double result = 644245094900000;
  *(void *)(a1 + 96) = 644245094900000;
  *(_DWORD *)(a1 + 104) = v27;
  *(unsigned char *)(a1 + 108) = 0;
  *(_DWORD *)(a1 + 112) = 1;
  *(_DWORD *)(a1 + 116) = v28;
  *(_DWORD *)(a1 + 120) = v29;
  *(unsigned char *)(a1 + 124) = 0;
  *(_DWORD *)(a1 + 128) = 1048576000;
  return result;
}

void sub_24B6108E4(__CVBuffer *a1, uint64_t a2)
{
  uint64_t v4 = (__CFString *)sub_24B6827A0();
  CFTypeRef v5 = CVBufferCopyAttachment(a1, v4, 0);
  swift_unknownObjectRelease();

  if (!v5)
  {
    long long v26 = *(_OWORD *)(a2 + 32);
    float v6 = *(float *)(a2 + 20);
    float v7 = *(float *)a2 / v6;
    sub_24B562F04(&qword_2697CCD78);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24B684E60;
    *(void *)(inited + 32) = 0x73726F736E6553;
    *(void *)(inited + 40) = 0xE700000000000000;
    sub_24B562F04(&qword_2697CCD80);
    uint64_t v25 = swift_initStackObject();
    *(_OWORD *)(v25 + 16) = xmmword_24B684E60;
    *(void *)(v25 + 32) = 0x69736E6972746E49;
    *(void *)(v25 + 40) = 0xEA00000000007363;
    sub_24B562F04(&qword_2697CCD88);
    uint64_t v8 = swift_initStackObject();
    *(_OWORD *)(v8 + 16) = xmmword_24B684E60;
    *(void *)(v8 + 32) = 4343634;
    *(void *)(v8 + 40) = 0xE300000000000000;
    sub_24B562F04(&qword_2697CCD90);
    uint64_t v9 = swift_initStackObject();
    *(_OWORD *)(v9 + 16) = xmmword_24B6856B0;
    *(void *)(v9 + 32) = 0x656C6F686E6950;
    *(void *)(v9 + 40) = 0xE700000000000000;
    sub_24B562F04(&qword_2697CCD98);
    uint64_t v10 = swift_initStackObject();
    *(_OWORD *)(v10 + 16) = xmmword_24B685480;
    strcpy((char *)(v10 + 32), "Aspect Ratio");
    *(unsigned char *)(v10 + 45) = 0;
    *(_WORD *)(v10 + 46) = -5120;
    sub_24B562F04(&qword_2697CCDA0);
    uint64_t v11 = swift_initStackObject();
    *(_OWORD *)(v11 + 16) = xmmword_24B684E60;
    *(void *)(v11 + 32) = 1635017028;
    *(void *)(v11 + 40) = 0xE400000000000000;
    sub_24B562F04(&qword_2697CCCC0);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_24B684E60;
    uint64_t v13 = MEMORY[0x263F8D5C8];
    *(void *)(v12 + 56) = MEMORY[0x263F8D5C8];
    *(float *)(v12 + 32) = v7;
    *(void *)(v11 + 48) = v12;
    *(void *)(v10 + 48) = sub_24B610E00(v11, &qword_2697CCDF8);
    strcpy((char *)(v10 + 56), "Focal Length");
    *(unsigned char *)(v10 + 69) = 0;
    *(_WORD *)(v10 + 70) = -5120;
    uint64_t v14 = swift_initStackObject();
    *(_OWORD *)(v14 + 16) = xmmword_24B684E60;
    *(void *)(v14 + 32) = 1635017028;
    *(void *)(v14 + 40) = 0xE400000000000000;
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_24B684E60;
    *(void *)(v15 + 56) = v13;
    *(float *)(v15 + 32) = v6;
    *(void *)(v14 + 48) = v15;
    *(void *)(v10 + 72) = sub_24B610E00(v14, &qword_2697CCDF8);
    *(void *)(v10 + 80) = 0x617069636E697250;
    *(void *)(v10 + 88) = 0xEF746E696F50206CLL;
    uint64_t v16 = swift_initStackObject();
    *(_OWORD *)(v16 + 16) = xmmword_24B684E60;
    *(void *)(v16 + 32) = 1635017028;
    *(void *)(v16 + 40) = 0xE400000000000000;
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_24B6856B0;
    *(void *)(v17 + 56) = v13;
    *(_DWORD *)(v17 + 32) = v26;
    *(void *)(v17 + 88) = v13;
    *(_DWORD *)(v17 + 64) = DWORD1(v26);
    *(void *)(v16 + 48) = v17;
    *(void *)(v10 + 96) = sub_24B610E00(v16, &qword_2697CCDF8);
    *(void *)(v10 + 104) = 2003135315;
    *(void *)(v10 + 112) = 0xE400000000000000;
    uint64_t v18 = swift_initStackObject();
    *(_OWORD *)(v18 + 16) = xmmword_24B684E60;
    *(void *)(v18 + 32) = 1635017028;
    *(void *)(v18 + 40) = 0xE400000000000000;
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_24B684E60;
    *(void *)(v19 + 56) = MEMORY[0x263F8D6C8];
    *(void *)(v19 + 32) = 0;
    *(void *)(v18 + 48) = v19;
    *(void *)(v10 + 120) = sub_24B610E00(v18, &qword_2697CCDF8);
    unint64_t v20 = sub_24B610E00(v10, &qword_2697CCDF0);
    uint64_t v21 = sub_24B562F04(&qword_2697CCDA8);
    *(void *)(v9 + 48) = v20;
    *(void *)(v9 + 72) = v21;
    *(void *)(v9 + 80) = 0x6974756C6F736552;
    *(void *)(v9 + 88) = 0xEA00000000006E6FLL;
    sub_24B562F04(&qword_2697CCDB0);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_24B6856B0;
    *(void *)(v22 + 32) = CVPixelBufferGetWidth(a1);
    *(void *)(v22 + 40) = CVPixelBufferGetHeight(a1);
    *(void *)(v9 + 120) = sub_24B562F04(&qword_2697CCDB8);
    *(void *)(v9 + 96) = v22;
    *(void *)(v8 + 48) = sub_24B560D28(v9);
    *(void *)(v25 + 48) = sub_24B610E00(v8, &qword_2697CCDD8);
    *(void *)(inited + 48) = sub_24B610E00(v25, &qword_2697CCDD0);
    sub_24B610E00(inited, &qword_2697CCDC8);
    os_log_type_t v23 = (__CFString *)sub_24B6827A0();
    sub_24B562F04(&qword_2697CCDC0);
    uint64_t v24 = (void *)sub_24B682710();
    swift_bridgeObjectRelease();
    CVBufferSetAttachment(a1, v23, v24, kCVAttachmentMode_ShouldPropagate);
  }
}

unint64_t sub_24B610E00(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_24B562F04(a2);
  uint64_t v3 = (void *)sub_24B682F30();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  CFTypeRef v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v6 = *(v5 - 2);
    uint64_t v7 = *(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_24B562E8C(v6, v7);
    if (v10) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v6;
    v11[1] = v7;
    *(void *)(v3[7] + 8 * result) = v8;
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24B610F18(uint64_t a1)
{
  uint64_t v2 = sub_24B562F04(&qword_2697CCE60);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  CFTypeRef v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_24B562F04(&qword_2697CCCB0);
  uint64_t v6 = sub_24B682F30();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (uint64_t)&v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_24B563A6C(v12, (uint64_t)v5, &qword_2697CCE60);
    unint64_t result = sub_24B59F008((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_24B682410();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    uint64_t v19 = v7[7];
    uint64_t v20 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
    unint64_t result = sub_24B65A134(v9, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v16, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    uint64_t v21 = v7[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24B611148(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = sub_24B562F04(a2);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    unint64_t v11 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_24B562F04(a3);
  uint64_t v10 = sub_24B682F30();
  unint64_t v11 = (void *)v10;
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v11;
  }
  uint64_t v13 = *(int *)(v6 + 48);
  uint64_t v14 = v10 + 64;
  unint64_t v15 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v26[1] = a1;
  uint64_t v16 = a1 + v15;
  uint64_t v17 = *(void *)(v7 + 72);
  swift_retain();
  while (1)
  {
    sub_24B563A6C(v16, (uint64_t)v9, a2);
    unint64_t result = sub_24B59F008((uint64_t)v9);
    if (v19) {
      break;
    }
    unint64_t v20 = result;
    *(void *)(v14 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v21 = v11[6];
    uint64_t v22 = sub_24B682410();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v21 + *(void *)(*(void *)(v22 - 8) + 72) * v20, v9, v22);
    *(void *)(v11[7] + 8 * v20) = *(void *)&v9[v13];
    uint64_t v23 = v11[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    _DWORD v11[2] = v25;
    v16 += v17;
    if (!--v12)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24B611334(uint64_t a1)
{
  uint64_t v2 = sub_24B562F04(&qword_2697CCE50);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  CFTypeRef v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_24B562F04(&qword_2697CCD08);
  uint64_t v6 = sub_24B682F30();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_24B563A6C(v12, (uint64_t)v5, &qword_2697CCE50);
    unint64_t result = sub_24B59F008((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_24B682410();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t ObjectCaptureSession.Configuration.enableOverCapture.getter()
{
  return *v0;
}

uint64_t ObjectCaptureSession.Configuration.enableOverCapture.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*ObjectCaptureSession.Configuration.enableOverCapture.modify())()
{
  return nullsub_1;
}

CoreOC::ObjectCaptureSession::Configuration __swiftcall ObjectCaptureSession.Configuration.init()()
{
  *uint64_t v0 = 0;
  return result;
}

BOOL static ObjectCaptureSession.Configuration.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ObjectCaptureSession.HardwareSpecs.maxNumImages.getter()
{
  return *(void *)v0;
}

uint64_t sub_24B611584()
{
  return sub_24B5F7470(&qword_2697CF6F8);
}

uint64_t static ObjectCaptureSession.hardwareSpecs.getter@<X0>(void *a1@<X8>)
{
  if (qword_2697CF6F0 != -1) {
    uint64_t result = swift_once();
  }
  *a1 = qword_2697CF6F8;
  return result;
}

uint64_t ObjectCaptureSession.Frame.Feedback.rawValue.getter()
{
  return *(void *)v0;
}

CoreOC::ObjectCaptureSession::Frame::Feedback __swiftcall ObjectCaptureSession.Frame.Feedback.init(rawValue:)(CoreOC::ObjectCaptureSession::Frame::Feedback rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void *sub_24B61160C()
{
  return &unk_24B687480;
}

void static ObjectCaptureSession.Frame.Feedback.tooFast.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void *sub_24B611624()
{
  return &unk_24B687488;
}

void static ObjectCaptureSession.Frame.Feedback.lowLight.getter(void *a1@<X8>)
{
  *a1 = 2;
}

void *sub_24B61163C()
{
  return &unk_24B687490;
}

void static ObjectCaptureSession.Frame.Feedback.tooFar.getter(void *a1@<X8>)
{
  *a1 = 4;
}

void *sub_24B611654()
{
  return &unk_24B687498;
}

void static ObjectCaptureSession.Frame.Feedback.tooClose.getter(void *a1@<X8>)
{
  *a1 = 8;
}

void *sub_24B61166C()
{
  return &unk_24B6874A0;
}

void static ObjectCaptureSession.Frame.Feedback.outOfFieldOfView.getter(void *a1@<X8>)
{
  *a1 = 16;
}

void *sub_24B611684()
{
  return &unk_24B6874A8;
}

void static ObjectCaptureSession.Frame.Feedback.tooDark.getter(void *a1@<X8>)
{
  *a1 = 32;
}

void static ObjectCaptureSession.Frame.Feedback.none.getter(void *a1@<X8>)
{
  *a1 = 0;
}

void sub_24B6116A4()
{
  qword_2697CF708 = 63;
}

uint64_t static ObjectCaptureSession.Frame.Feedback.all.getter@<X0>(void *a1@<X8>)
{
  if (qword_2697CF700 != -1) {
    uint64_t result = swift_once();
  }
  *a1 = qword_2697CF708;
  return result;
}

__n128 ObjectCaptureSession.Frame.Camera.intrinsics.getter@<Q0>(_OWORD *a1@<X8>)
{
  __n128 result = *(__n128 *)v1;
  long long v3 = *(_OWORD *)(v1 + 16);
  long long v4 = *(_OWORD *)(v1 + 32);
  *a1 = *(_OWORD *)v1;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

__n128 ObjectCaptureSession.Frame.Camera.transform.getter()
{
  return v0[3];
}

uint64_t ObjectCaptureSession.Frame.Camera.trackingState.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24B61217C(type metadata accessor for ObjectCaptureSession.Frame.Camera, MEMORY[0x263F8C968], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24B659A1C, a1);
}

__n128 ObjectCaptureSession.Frame.Object.boundingBox.getter()
{
  return *(__n128 *)v0;
}

__n128 ObjectCaptureSession.Frame.Object.transform.getter()
{
  return v0[4];
}

uint64_t ObjectCaptureSession.Frame.Object.trackingState.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24B61217C(type metadata accessor for ObjectCaptureSession.Frame.Object, MEMORY[0x263F8C968], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24B659A1C, a1);
}

uint64_t ObjectCaptureSession.Frame.Object.objectContour.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for ObjectCaptureSession.Frame.Object(0) + 28));

  return swift_bridgeObjectRetain();
}

uint64_t ObjectCaptureSession.Frame.PointCloud.points.getter()
{
  return swift_retain();
}

uint64_t ObjectCaptureSession.Frame.PointCloud.indices.getter()
{
  return swift_retain();
}

uint64_t ObjectCaptureSession.Frame.PointCloud.densePoints.getter()
{
  return swift_retain();
}

__n128 ObjectCaptureSession.Frame.PointCloud.transform.getter()
{
  return v0[2];
}

double ObjectCaptureSession.Frame.timestamp.getter()
{
  return *(double *)v0;
}

id ObjectCaptureSession.Frame.image.getter()
{
  return *(id *)(v0 + 8);
}

void *ObjectCaptureSession.Frame.depthData.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

void *ObjectCaptureSession.Frame.confidenceData.getter()
{
  uint64_t v1 = *(void **)(v0 + 24);
  id v2 = v1;
  return v1;
}

uint64_t ObjectCaptureSession.Frame.camera.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ObjectCaptureSession.Frame(0);
  return sub_24B659A1C(v1 + *(int *)(v3 + 32), a1, type metadata accessor for ObjectCaptureSession.Frame.Camera);
}

uint64_t ObjectCaptureSession.Frame.object.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ObjectCaptureSession.Frame(0);
  return sub_24B563A6C(v1 + *(int *)(v3 + 36), a1, &qword_2697CC9A8);
}

float ObjectCaptureSession.Frame.coverage.getter()
{
  return *(float *)(v0 + *(int *)(type metadata accessor for ObjectCaptureSession.Frame(0) + 40));
}

uint64_t ObjectCaptureSession.Frame.feedback.getter@<X0>(void *a1@<X8>)
{
  uint64_t result = type metadata accessor for ObjectCaptureSession.Frame(0);
  *a1 = *(void *)(v1 + *(int *)(result + 44));
  return result;
}

uint64_t ObjectCaptureSession.Frame.pointCloud.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ObjectCaptureSession.Frame(0) + 48));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  uint64_t v10 = v3[6];
  uint64_t v11 = v3[7];
  uint64_t v12 = v3[8];
  uint64_t v13 = v3[9];
  uint64_t v15 = v3[10];
  uint64_t v14 = v3[11];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v12;
  a1[9] = v13;
  a1[10] = v15;
  a1[11] = v14;
  return sub_24B659AEC(v4);
}

uint64_t ObjectCaptureSession.Frame.spi.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ObjectCaptureSession.Frame(0);
  sub_24B56CF38(v1 + *(int *)(v3 + 52), (uint64_t)v5, (uint64_t *)&unk_2697CC9B0);
  sub_24B56CF38((uint64_t)v5, a1, (uint64_t *)&unk_2697CC9B0);
  return sub_24B659DE0(v5, sub_24B659B90);
}

uint64_t sub_24B611A68@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v12 = (int *)type metadata accessor for ObjectCaptureSession.Frame(0);
  uint64_t v13 = a5 + v12[9];
  uint64_t v14 = type metadata accessor for ObjectCaptureSession.Frame.Object(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *(_DWORD *)(a5 + v12[10]) = 0;
  *(void *)(a5 + v12[11]) = 0;
  uint64_t v15 = (_OWORD *)(a5 + v12[12]);
  v15[4] = 0u;
  v15[5] = 0u;
  v15[2] = 0u;
  v15[3] = 0u;
  *uint64_t v15 = 0u;
  v15[1] = 0u;
  uint64_t v16 = a5 + v12[13];
  sub_24B659B88(v22);
  sub_24B56CF38((uint64_t)v22, v16, (uint64_t *)&unk_2697CC9B0);
  *(double *)a5 = a6;
  *(void *)(a5 + 8) = a1;
  *(void *)(a5 + 16) = a2;
  *(void *)(a5 + 24) = a3;
  sub_24B659A1C(a4, a5 + v12[8], type metadata accessor for ObjectCaptureSession.Frame.Camera);
  memset(v21, 0, 72);
  memset(&v21[5], 0, 168);
  memset(&v21[16], 0, 168);
  memset(&v21[27], 0, 160);
  LODWORD(v21[37]) = -1082130432;
  *(_OWORD *)((char *)&v21[37] + 8) = 0u;
  DWORD2(v21[38]) = 0;
  BYTE12(v21[38]) = 1;
  id v17 = a3;
  id v18 = a1;
  id v19 = a2;
  sub_24B679E48((uint64_t)&v21[39]);

  *((void *)&v21[42] + 1) = MEMORY[0x263F8EE78];
  sub_24B65EF80(a4, type metadata accessor for ObjectCaptureSession.Frame.Camera);
  memcpy(__dst, v21, sizeof(__dst));
  nullsub_1(__dst);
  sub_24B56CF38(v16, (uint64_t)v24, (uint64_t *)&unk_2697CC9B0);
  sub_24B659DE0(v24, sub_24B659F30);
  return sub_24B56CF38((uint64_t)__dst, v16, (uint64_t *)&unk_2697CC9B0);
}

uint64_t ObjectCaptureSession.Mesh.Anchor.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24B682410();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

id ObjectCaptureSession.Mesh.Anchor.vertices.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0) + 20));

  return v1;
}

id ObjectCaptureSession.Mesh.Anchor.colors.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0) + 24));

  return v1;
}

id ObjectCaptureSession.Mesh.Anchor.normals.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0) + 28));

  return v1;
}

void *ObjectCaptureSession.Mesh.Anchor.faces.getter()
{
  return sub_24B611DDC(type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
}

void *sub_24B611DDC(uint64_t (*a1)(void))
{
  id v2 = *(void **)(v1 + *(int *)(a1(0) + 32));
  id v3 = v2;
  return v2;
}

__n128 ObjectCaptureSession.Mesh.Anchor.transform.getter()
{
  return *(__n128 *)(v0 + *(int *)(type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0) + 36));
}

double ObjectCaptureSession.Mesh.Anchor.timestamp.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0) + 40));
}

__n128 ObjectCaptureSession.Mesh.Anchor.corner.getter()
{
  return *(__n128 *)(v0 + *(int *)(type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0) + 44));
}

__n128 ObjectCaptureSession.Mesh.Anchor.extent.getter()
{
  return *(__n128 *)(v0 + *(int *)(type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0) + 48));
}

uint64_t ObjectCaptureSession.Mesh.Anchor.didRemove.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0) + 52));
}

__n128 sub_24B611ED4@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>, __n128 a8@<Q0>, __n128 a9@<Q1>, __n128 a10@<Q2>, __n128 a11@<Q3>, double a12@<D4>, __n128 a13@<Q5>, __n128 a14@<Q6>)
{
  uint64_t v22 = sub_24B682410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(a7, a1, v22);
  uint64_t v23 = (int *)type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  *(void *)(a7 + v23[5]) = a2;
  *(void *)(a7 + v23[6]) = a3;
  *(void *)(a7 + v23[7]) = a4;
  *(void *)(a7 + v23[8]) = a5;
  BOOL v24 = (__n128 *)(a7 + v23[9]);
  *BOOL v24 = a8;
  v24[1] = a9;
  void v24[2] = a10;
  v24[3] = a11;
  *(double *)(a7 + v23[10]) = a12;
  *(__n128 *)(a7 + v23[11]) = a13;
  __n128 result = a14;
  *(__n128 *)(a7 + v23[12]) = a14;
  *(unsigned char *)(a7 + v23[13]) = a6;
  return result;
}

uint64_t ObjectCaptureSession.Mesh.anchors.getter()
{
  return swift_bridgeObjectRetain();
}

double ObjectCaptureSession.Shot.timestamp.getter()
{
  return *(double *)v0;
}

id ObjectCaptureSession.Shot.image.getter()
{
  return *(id *)(v0 + 8);
}

void *ObjectCaptureSession.Shot.depthData.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

void *ObjectCaptureSession.Shot.confidenceData.getter()
{
  uint64_t v1 = *(void **)(v0 + 24);
  id v2 = v1;
  return v1;
}

void *ObjectCaptureSession.Shot.pointCloudData.getter()
{
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  return v1;
}

uint64_t sub_24B612080@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  *(double *)a5 = a6;
  *(void *)(a5 + 8) = result;
  *(void *)(a5 + 16) = a2;
  *(void *)(a5 + 24) = a3;
  *(void *)(a5 + 32) = a4;
  return result;
}

uint64_t ObjectCaptureSession.Metadata.Session.Provenance.version.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ObjectCaptureSession.Metadata.Session.Provenance.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ObjectCaptureSession.Metadata.Session.provenance.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

float ObjectCaptureSession.Metadata.Session.coverage.getter()
{
  return *(float *)(v0 + 32);
}

uint64_t ObjectCaptureSession.Metadata.Shot.Camera.trackingState.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24B61217C(type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera, MEMORY[0x263F8C968], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24B659A1C, a1);
}

uint64_t sub_24B61217C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = a1(0);
  return a3(v4 + *(int *)(v8 + 24), a4, a2);
}

void *ObjectCaptureSession.Metadata.Shot.Camera.calibrationData.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0) + 28));
  id v2 = v1;
  return v1;
}

uint64_t sub_24B612208()
{
  return MEMORY[0x263F8EE78];
}

uint64_t sub_24B612214@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __n128 a10@<Q0>, __n128 a11@<Q1>, __n128 a12@<Q2>, __n128 a13@<Q3>)
{
  long long v21 = a1[1];
  *(_OWORD *)a9 = *a1;
  *(_OWORD *)(a9 + 16) = v21;
  *(_OWORD *)(a9 + 32) = a1[2];
  *(__n128 *)(a9 + 48) = a10;
  *(__n128 *)(a9 + 64) = a11;
  *(__n128 *)(a9 + 80) = a12;
  *(__n128 *)(a9 + 96) = a13;
  uint64_t v22 = (int *)type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
  sub_24B65A134(a2, a9 + v22[6], MEMORY[0x263F8C968]);
  *(void *)(a9 + v22[7]) = a3;
  sub_24B56CF38(a4, a9 + v22[8], &qword_2697CC9A0);
  sub_24B56CF38(a5, a9 + v22[9], &qword_2697CC9A0);
  uint64_t result = sub_24B56CF38(a6, a9 + v22[10], &qword_2697CC9A0);
  *(void *)(a9 + v22[11]) = a7;
  *(void *)(a9 + v22[12]) = a8;
  return result;
}

CoreOC::ObjectCaptureSession::Metadata::Shot::CaptureMode_optional __swiftcall ObjectCaptureSession.Metadata.Shot.CaptureMode.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (!rawValue) {
    char v2 = 0;
  }
  *uint64_t v1 = v2;
  return (CoreOC::ObjectCaptureSession::Metadata::Shot::CaptureMode_optional)rawValue;
}

uint64_t ObjectCaptureSession.Metadata.Shot.CaptureMode.rawValue.getter()
{
  return *v0;
}

__n128 ObjectCaptureSession.Metadata.Shot.Object.boundingBox.getter()
{
  return *(__n128 *)v0;
}

__n128 ObjectCaptureSession.Metadata.Shot.Object.transform.getter()
{
  return v0[4];
}

void *ObjectCaptureSession.Metadata.Shot.Object.mask.getter()
{
  uint64_t v1 = *(void **)(v0 + 128);
  id v2 = v1;
  return v1;
}

uint64_t ObjectCaptureSession.Metadata.Shot.Object.staticSegmentID.getter()
{
  return *(void *)(v0 + 136);
}

unint64_t sub_24B612384@<X0>(unint64_t result@<X0>, unint64_t a2@<X1>, char a3@<W2>, __n128 *a4@<X8>, __n128 a5@<Q0>, __n128 a6@<Q1>, __n128 a7@<Q2>, __n128 a8@<Q3>, __n128 a9@<Q4>, __n128 a10@<Q5>, __n128 a11@<Q6>, __n128 a12@<Q7>)
{
  *a4 = a5;
  a4[1] = a6;
  a4[2] = a7;
  a4[3] = a8;
  a4[4] = a9;
  a4[5] = a10;
  a4[6] = a11;
  a4[7] = a12;
  a4[8].n128_u64[0] = result;
  a4[8].n128_u64[1] = a2;
  a4[9].n128_u8[0] = a3 & 1;
  return result;
}

__n128 ObjectCaptureSession.Metadata.Shot.Scene.boundingBox.getter()
{
  return *(__n128 *)v0;
}

uint64_t ObjectCaptureSession.Metadata.Shot.Scene.segmentID.getter()
{
  return *(void *)(v0 + 64);
}

unint64_t sub_24B6123BC@<X0>(unint64_t result@<X0>, char a2@<W1>, __n128 *a3@<X8>, __n128 a4@<Q0>, __n128 a5@<Q1>, __n128 a6@<Q2>, __n128 a7@<Q3>)
{
  *a3 = a4;
  a3[1] = a5;
  a3[2] = a6;
  a3[3] = a7;
  a3[4].n128_u64[0] = result;
  a3[4].n128_u8[8] = a2 & 1;
  return result;
}

uint64_t ObjectCaptureSession.Metadata.Shot.camera.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  return sub_24B659A1C(v1 + *(int *)(v3 + 20), a1, type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera);
}

uint64_t ObjectCaptureSession.Metadata.Shot.sessionID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24B61217C(type metadata accessor for ObjectCaptureSession.Metadata.Shot, (uint64_t)&qword_2697CC460, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24B563A6C, a1);
}

uint64_t ObjectCaptureSession.Metadata.Shot.object.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  sub_24B56CF38(v1 + *(int *)(v3 + 28), (uint64_t)v5, &qword_2697CC9C0);
  sub_24B56CF38((uint64_t)v5, a1, &qword_2697CC9C0);
  return sub_24B56D16C((uint64_t)v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_24B56CFC0);
}

__n128 ObjectCaptureSession.Metadata.Shot.scene.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ObjectCaptureSession.Metadata.Shot(0) + 32);
  uint64_t v4 = *(void *)(v3 + 64);
  char v5 = *(unsigned char *)(v3 + 72);
  char v6 = *(unsigned char *)(v3 + 73);
  long long v7 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v7;
  __n128 result = *(__n128 *)(v3 + 32);
  long long v9 = *(_OWORD *)(v3 + 48);
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v9;
  *(void *)(a1 + 64) = v4;
  *(unsigned char *)(a1 + 72) = v5;
  *(unsigned char *)(a1 + 73) = v6;
  return result;
}

uint64_t ObjectCaptureSession.Metadata.Shot.captureMode.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t ObjectCaptureSession.Metadata.Shot.gravity.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ObjectCaptureSession.Metadata.Shot(0) + 40));
}

void *ObjectCaptureSession.Metadata.Shot.rawFeaturePoints.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for ObjectCaptureSession.Metadata.Shot(0) + 44));
  id v2 = v1;
  return v1;
}

uint64_t ObjectCaptureSession.Metadata.Shot.feedback.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  uint64_t v4 = (uint64_t *)(v1 + *(int *)(result + 48));
  uint64_t v5 = *v4;
  LOBYTE(v4) = *((unsigned char *)v4 + 8);
  *(void *)a1 = v5;
  *(unsigned char *)(a1 + 8) = (_BYTE)v4;
  return result;
}

__n128 sub_24B6125FC@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, long long *a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, double *a9@<X8>, double a10@<D0>, char a11, uint64_t a12, uint64_t *a13, uint64_t a14)
{
  sub_24B56CF38(a3, (uint64_t)v37, &qword_2697CC9C0);
  long long v32 = a4[1];
  long long v33 = *a4;
  __n128 v30 = (__n128)a4[3];
  long long v31 = a4[2];
  uint64_t v20 = *((void *)a4 + 8);
  char v21 = *((unsigned char *)a4 + 72);
  LOBYTE(a4) = *((unsigned char *)a4 + 73);
  char v22 = *a5;
  uint64_t v23 = *a13;
  char v24 = *((unsigned char *)a13 + 8);
  *a9 = a10;
  uint64_t v25 = (int *)type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  sub_24B65A134(a1, (uint64_t)a9 + v25[5], type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera);
  sub_24B56CF38(a2, (uint64_t)a9 + v25[6], &qword_2697CC460);
  sub_24B56CF38((uint64_t)v37, (uint64_t)a9 + v25[7], &qword_2697CC9C0);
  long long v26 = (char *)a9 + v25[8];
  *(_OWORD *)long long v26 = v33;
  *((_OWORD *)v26 + 1) = v32;
  __n128 result = v30;
  *((_OWORD *)v26 + 2) = v31;
  *((__n128 *)v26 + 3) = v30;
  *((void *)v26 + 8) = v20;
  v26[72] = v21;
  v26[73] = (char)a4;
  *((unsigned char *)a9 + v25[9]) = v22;
  int v28 = (char *)a9 + v25[10];
  *(void *)int v28 = a6;
  *((void *)v28 + 1) = a7;
  *((void *)v28 + 2) = a8;
  v28[24] = a11 & 1;
  *(void *)((char *)a9 + v25[11]) = a12;
  int v29 = (char *)a9 + v25[12];
  *(void *)int v29 = v23;
  v29[8] = v24;
  *(void *)((char *)a9 + v25[13]) = a14;
  return result;
}

void ObjectCaptureSession.configuration.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_configuration);
}

void *sub_24B6127C8@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  __n128 result = (*(void *(**)(uint64_t *__return_ptr))((*MEMORY[0x263F8EED0] & **a1) + 0x420))(&v4);
  *a2 = v4;
  return result;
}

void sub_24B61283C(id *a1)
{
}

void sub_24B612878(void **a1)
{
  void (*v10)(char **__return_ptr, uint64_t);
  char *v11;
  BOOL v12;
  uint64_t v13;
  void *v14;
  void *v15;
  NSObject *v16;
  os_log_type_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  char *v33;

  uint64_t v3 = sub_24B6824D0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  long long v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  uint64_t v9 = (*MEMORY[0x263F8EED0] & *v1) + 1056;
  uint64_t v10 = *(void (**)(char **__return_ptr, uint64_t))((*MEMORY[0x263F8EED0] & *v1) + 0x420);
  v10(&v33, v5);
  uint64_t v11 = v33;
  long long v31 = v8;
  long long v32 = (uint64_t)v33;
  uint64_t v12 = _s6CoreOC20ObjectCaptureSessionC5StateO2eeoiySbAE_AEtFZ_0((id *)&v32, &v31);
  sub_24B65A19C(v11);
  if (!v12)
  {
    uint64_t v13 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v13, v3);
    sub_24B66DD1C(v8);
    uint64_t v14 = v1;
    sub_24B66DD1C(v8);
    uint64_t v15 = v14;
    uint64_t v16 = sub_24B6824B0();
    id v17 = sub_24B682B30();
    id v18 = v17;
    if (os_log_type_enabled(v16, v17))
    {
      id v19 = swift_slowAlloc();
      __n128 v30 = v9;
      uint64_t v20 = v19;
      int v29 = (char *)swift_slowAlloc();
      long long v33 = v29;
      *(_DWORD *)uint64_t v20 = 136381187;
      HIDWORD(v28) = v18;
      long long v32 = sub_24B5627B8(0x6574617473, 0xE500000000000000, (uint64_t *)&v33);
      sub_24B682CD0();
      *(_WORD *)(v20 + 12) = 2082;
      long long v32 = (uint64_t)v8;
      sub_24B66DD1C(v8);
      char v21 = sub_24B682820();
      long long v32 = sub_24B5627B8(v21, v22, (uint64_t *)&v33);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      sub_24B65A19C(v8);
      sub_24B65A19C(v8);
      *(_WORD *)(v20 + 22) = 2082;
      ((void (*)(uint64_t *__return_ptr))v10)(&v32);
      uint64_t v23 = sub_24B682820();
      long long v32 = sub_24B5627B8(v23, v24, (uint64_t *)&v33);
      sub_24B682CD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24B55E000, v16, BYTE4(v28), "ObjectCaptureSession.%{private}s: Session state has changed from %{public}s to %{public}s", (uint8_t *)v20, 0x20u);
      uint64_t v25 = v29;
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v25, -1, -1);
      MEMORY[0x24C5D6C00](v20, -1, -1);
    }
    else
    {
      sub_24B65A19C(v8);
      sub_24B65A19C(v8);
    }
    long long v26 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    v10(&v33, v26);
    int v27 = v33;
    if ((unint64_t)(v33 - 7) >= 0xA)
    {
      if (v33 == (char *)17)
      {
        sub_24B64DBE0();
        long long v32 = 7;
        sub_24B6824F0();
        swift_release();
        sub_24B64DDAC();
        long long v32 = 7;
        sub_24B6824F0();
        swift_release();
        sub_24B64DF80();
        long long v32 = 7;
        sub_24B6824F0();
        swift_release();
      }
      else
      {
        sub_24B5E88F8(v33);
        sub_24B64DBE0();
        long long v32 = (uint64_t)v27;
        sub_24B5E88F8(v27);
        sub_24B6824F0();
        swift_release();
        sub_24B65A19C(v27);
        sub_24B64DDAC();
        long long v32 = (uint64_t)v27;
        sub_24B5E88F8(v27);
        sub_24B6824F0();
        swift_release();
        sub_24B65A19C(v27);
        sub_24B64DF80();
        long long v32 = (uint64_t)v27;
        sub_24B5E88F8(v27);
        sub_24B6824F0();
        swift_release();
        sub_24B65A19C(v27);
        sub_24B65A19C(v27);
        sub_24B5E896C(v27);
      }
    }
    else
    {
      sub_24B65A19C(v33);
    }
  }
}

uint64_t sub_24B612D54()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24B682560();
  swift_release();

  return swift_release();
}

void sub_24B612DCC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24B682560();
  swift_release();
  swift_release();
  uint64_t v1 = v3;
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v0;
  sub_24B682570();
  sub_24B612878(&v3);
  sub_24B65A19C(v1);
}

uint64_t sub_24B612EA0(void **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0x438))();
}

uint64_t sub_24B612EFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24B6142F0(a1, a2, a3, a4, &qword_2697CC9D8, (uint64_t)&OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__state, &qword_2697CC9D0);
}

uint64_t sub_24B612F18()
{
  return sub_24B614480((uint64_t)&OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__state, &qword_2697CC9D0);
}

uint64_t sub_24B612F2C(uint64_t a1)
{
  return sub_24B614504(a1, &qword_2697CC9D8, (uint64_t)&OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__state, &qword_2697CC9D0);
}

double sub_24B612F48()
{
  uint64_t v0 = (_OWORD *)swift_allocObject();
  double result = 0.0;
  v0[1] = 0u;
  v0[2] = 0u;
  v0[3] = 0u;
  v0[4] = 0u;
  v0[5] = 0u;
  v0[6] = 0u;
  v0[7] = 0u;
  v0[8] = 0u;
  return result;
}

uint64_t ObjectCaptureSession.observingPublishers.getter()
{
  return swift_retain();
}

double ObjectCaptureSessionWritingPublishers.__allocating_init()()
{
  uint64_t v0 = (_OWORD *)swift_allocObject();
  double result = 0.0;
  v0[1] = 0u;
  v0[2] = 0u;
  v0[3] = 0u;
  v0[4] = 0u;
  v0[5] = 0u;
  v0[6] = 0u;
  v0[7] = 0u;
  return result;
}

uint64_t ObjectCaptureSession.writingPublishers.getter()
{
  return swift_retain();
}

uint64_t sub_24B612FD8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0x450))();
  *a2 = result;
  return result;
}

uint64_t sub_24B61303C(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_spi);
  swift_beginAccess();
  *uint64_t v3 = v2;
  swift_retain();
  return swift_release();
}

uint64_t sub_24B6130A8()
{
  return swift_retain();
}

uint64_t sub_24B6130F4(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_spi);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_release();
}

uint64_t sub_24B613148@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0x468))();
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_24B6131B4(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t v4 = *a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_estimatedReconstructionTime;
  swift_beginAccess();
  *(void *)uint64_t v4 = v2;
  *(unsigned char *)(v4 + 8) = v3;
  return sub_24B613218();
}

uint64_t sub_24B613218()
{
  uint64_t v1 = sub_24B6824D0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_estimatedReconstructionTime;
  uint64_t result = swift_beginAccess();
  if ((*(unsigned char *)(v5 + 8) & 1) == 0)
  {
    double v7 = *(double *)v5;
    uint64_t v8 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v8, v1);
    uint64_t v9 = sub_24B6824B0();
    os_log_type_t v10 = sub_24B682B30();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v19 = v12;
      *(_DWORD *)uint64_t v11 = 136380931;
      uint64_t v18 = sub_24B5627B8(0xD00000000000001BLL, 0x800000024B68F960, &v19);
      sub_24B682CD0();
      *(_WORD *)(v11 + 12) = 2082;
      sub_24B562F04((uint64_t *)&unk_2697CD150);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_24B684E60;
      uint64_t v14 = MEMORY[0x263F8D5B8];
      *(void *)(v13 + 56) = MEMORY[0x263F8D538];
      *(void *)(v13 + 64) = v14;
      *(double *)(v13 + 32) = v7 / 60.0;
      uint64_t v15 = sub_24B6827F0();
      uint64_t v18 = sub_24B5627B8(v15, v16, &v19);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24B55E000, v9, v10, "ObjectCaptureSession.%{private}s: Estimated reconstruction time for this capturing session is %{public}s minutes", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v12, -1, -1);
      MEMORY[0x24C5D6C00](v11, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return result;
}

uint64_t sub_24B6134D4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_estimatedReconstructionTime;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_24B613520(uint64_t a1, char a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_estimatedReconstructionTime;
  swift_beginAccess();
  *(void *)uint64_t v5 = a1;
  *(unsigned char *)(v5 + 8) = a2 & 1;
  return sub_24B613218();
}

uint64_t sub_24B613584@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0x480))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_24B6135EC(char *a1, void *a2)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(*a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectFlippable);
  swift_beginAccess();
  *uint64_t v3 = v2;
  return sub_24B613648();
}

uint64_t sub_24B613648()
{
  uint64_t v1 = sub_24B6824D0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, v1);
  uint64_t v6 = v0;
  double v7 = sub_24B6824B0();
  os_log_type_t v8 = sub_24B682B30();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v15 = v10;
    *(_DWORD *)uint64_t v9 = 136380931;
    uint64_t v14 = sub_24B5627B8(0x6C467463656A626FLL, 0xEF656C6261707069, &v15);
    sub_24B682CD0();
    *(_WORD *)(v9 + 12) = 1026;
    uint64_t v11 = &v6[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectFlippable];
    swift_beginAccess();
    v13[3] = *v11;
    sub_24B682CD0();

    _os_log_impl(&dword_24B55E000, v7, v8, "ObjectCaptureSession.%{private}s: Object flippable state set to %{BOOL,public}d", (uint8_t *)v9, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v10, -1, -1);
    MEMORY[0x24C5D6C00](v9, -1, -1);
  }
  else
  {
  }
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_24B61389C()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectFlippable);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_24B6138E4(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectFlippable);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return sub_24B613648();
}

uint64_t sub_24B61393C@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0x498))();
  *a2 = result & 1;
  return result;
}

unsigned char *sub_24B6139A4(unsigned char *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_24B613D38(a1, a2, a3, a4, &OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isOverCaptureEnabled);
}

uint64_t sub_24B6139B0()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isOverCaptureEnabled);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_24B6139F8(uint64_t a1)
{
  return sub_24B613DE8(a1, &OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isOverCaptureEnabled);
}

uint64_t sub_24B613A04()
{
  uint64_t v1 = sub_24B6825D0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24B682640();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  os_log_type_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = *(void *)&v0[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v0;
  aBlock[4] = sub_24B65A230;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B566C04;
  aBlock[3] = &unk_26FE8ED28;
  uint64_t v10 = _Block_copy(aBlock);
  uint64_t v11 = v0;
  sub_24B6825F0();
  v13[1] = MEMORY[0x263F8EE78];
  sub_24B65D13C((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
  sub_24B562F04((uint64_t *)&unk_2697CC490);
  sub_24B5678F4((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
  sub_24B682D80();
  MEMORY[0x24C5D4CD0](0, v8, v4, v10);
  _Block_release(v10);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release();
}

uint64_t sub_24B613CC4@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0x4B8))();
  *a2 = result & 1;
  return result;
}

unsigned char *sub_24B613D2C(unsigned char *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_24B613D38(a1, a2, a3, a4, &OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isFreeformModeEnabled);
}

unsigned char *sub_24B613D38(unsigned char *result, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (*result == 1)
  {
    uint64_t v5 = (unsigned char *)(*a2 + *a5);
    uint64_t result = (unsigned char *)swift_beginAccess();
    *uint64_t v5 = 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24B613D94()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isFreeformModeEnabled);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_24B613DDC(uint64_t a1)
{
  return sub_24B613DE8(a1, &OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isFreeformModeEnabled);
}

uint64_t sub_24B613DE8(uint64_t result, void *a2)
{
  if (result)
  {
    uint64_t v3 = (unsigned char *)(v2 + *a2);
    uint64_t result = swift_beginAccess();
    *uint64_t v3 = 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24B613E38@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0x4D0))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_24B613EA0(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  v2;
  sub_24B682570();
  return sub_24B613F1C();
}

uint64_t sub_24B613F1C()
{
  uint64_t v1 = sub_24B6824D0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, v1);
  uint64_t v6 = v0;
  uint64_t v7 = sub_24B6824B0();
  os_log_type_t v8 = sub_24B682B30();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v14 = v10;
    *(_DWORD *)uint64_t v9 = 136380931;
    uint64_t v13 = sub_24B5627B8(0xD000000000000011, 0x800000024B691910, &v14);
    uint64_t v11 = sub_24B682CD0();
    *(_WORD *)(v9 + 12) = 1026;
    LOBYTE(v13) = (*(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v6) + 0x4D0))(v11) & 1;
    LODWORD(v13) = v13;
    sub_24B682CD0();

    _os_log_impl(&dword_24B55E000, v7, v8, "ObjectCaptureSession.%{private}s: Set can take manual shot = %{BOOL,public}d", (uint8_t *)v9, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v10, -1, -1);
    MEMORY[0x24C5D6C00](v9, -1, -1);
  }
  else
  {
  }
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_24B614190()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24B682560();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_24B614204()
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v1 = v0;
  sub_24B682570();
  return sub_24B613F1C();
}

uint64_t sub_24B614278(void **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0x4E8))();
}

uint64_t sub_24B6142D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24B6142F0(a1, a2, a3, a4, &qword_2697CCA00, (uint64_t)&OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__canTakeManualShot, &qword_2697CC9F8);
}

uint64_t sub_24B6142F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v9 = sub_24B562F04(a5);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v18 - v14;
  unint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v16((char *)&v18 - v14, a1, v9);
  v16(v13, (uint64_t)v15, v9);
  swift_beginAccess();
  sub_24B562F04(a7);
  sub_24B682550();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
}

uint64_t sub_24B61446C()
{
  return sub_24B614480((uint64_t)&OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__canTakeManualShot, &qword_2697CC9F8);
}

uint64_t sub_24B614480(uint64_t a1, uint64_t *a2)
{
  return swift_endAccess();
}

uint64_t sub_24B6144E8(uint64_t a1)
{
  return sub_24B614504(a1, &qword_2697CCA00, (uint64_t)&OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__canTakeManualShot, &qword_2697CC9F8);
}

uint64_t sub_24B614504(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = sub_24B562F04(a2);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v10 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  swift_beginAccess();
  sub_24B562F04(a4);
  sub_24B682550();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
}

id ObjectCaptureSession.__allocating_init(arSession:mtlDevice:motionManager:snapshotURL:)(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v9 = objc_allocWithZone(v4);
  id v10 = sub_24B65C024(a1, a2, a3, a4);

  swift_unknownObjectRelease();
  return v10;
}

id ObjectCaptureSession.init(arSession:mtlDevice:motionManager:snapshotURL:)(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6 = sub_24B65C024(a1, a2, a3, a4);

  swift_unknownObjectRelease();
  return v6;
}

id ObjectCaptureSession.__allocating_init(arSession:mtlDevice:motionManager:snapshotURL:configuration:)(void *a1, uint64_t a2, void *a3, uint64_t a4, unsigned __int8 *a5)
{
  id v11 = objc_allocWithZone(v5);
  id v12 = sub_24B65D1B8(a1, a2, a3, a4, a5);

  swift_unknownObjectRelease();
  return v12;
}

id ObjectCaptureSession.init(arSession:mtlDevice:motionManager:snapshotURL:configuration:)(void *a1, uint64_t a2, void *a3, uint64_t a4, unsigned __int8 *a5)
{
  id v7 = sub_24B65D1B8(a1, a2, a3, a4, a5);

  swift_unknownObjectRelease();
  return v7;
}

id ObjectCaptureSession.__deallocating_deinit()
{
  id v1 = v0;
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24B6823B0();
  uint64_t v29 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v28 = (uint64_t)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B682380();
  uint64_t v8 = type metadata accessor for MemoryLogger();
  long long v26 = *(void (**)(unint64_t, unint64_t))(v8 + 88);
  uint64_t v27 = v8;
  v26(0xD00000000000002CLL, 0x800000024B68F280);
  sub_24B634F88();
  uint64_t v9 = *(void *)&v0[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pgManager];
  if (v9)
  {
    id v10 = *(void (**)(uint64_t))(*(void *)v9 + 632);
    uint64_t v11 = swift_retain();
    v10(v11);
    swift_release();
  }
  id v12 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v12, sel_removeObserver_name_object_, v1, *MEMORY[0x263F08458], 0);

  uint64_t v13 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v13, v2);
  uint64_t v14 = sub_24B6824B0();
  uint64_t v15 = v2;
  os_log_type_t v16 = sub_24B682B30();
  if (os_log_type_enabled(v14, v16))
  {
    uint64_t v24 = v15;
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v25 = v6;
    uint64_t v19 = v18;
    uint64_t v31 = v18;
    *(_DWORD *)uint64_t v17 = 136380675;
    uint64_t v30 = sub_24B5627B8(0x74696E696564, 0xE600000000000000, &v31);
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v14, v16, "ObjectCaptureSession.%{private}s: Session was destroyed.", v17, 0xCu);
    swift_arrayDestroy();
    uint64_t v20 = v19;
    uint64_t v6 = v25;
    MEMORY[0x24C5D6C00](v20, -1, -1);
    MEMORY[0x24C5D6C00](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v24);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v15);
  }
  v26(0xD00000000000002FLL, 0x800000024B68F2B0);
  uint64_t v21 = v28;
  sub_24B62F1C4(v28, MEMORY[0x263F90278], 0x74696E696564, 0xE600000000000000, "ObjectCaptureSession.%{private}s takes CMTime time = %{public}s ms");
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v21, v6);
  char v22 = (objc_class *)type metadata accessor for ObjectCaptureSession(0);
  v32.receiver = v1;
  v32.super_class = v22;
  return objc_msgSendSuper2(&v32, sel_dealloc);
}

uint64_t sub_24B614FD8()
{
  id v1 = v0;
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24B6823B0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  id v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (*(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v0) + 0x4B8))(v8);
  if ((result & 1) != 0
    && (*(void *)((char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_staticSegmentID) & 0x8000000000000000) == 0)
  {
    __break(1u);
  }
  else
  {
    sub_24B682380();
    uint64_t v12 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v12, v2);
    uint64_t v13 = sub_24B6824B0();
    os_log_type_t v14 = sub_24B682B30();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v22 = v2;
      uint64_t v15 = swift_slowAlloc();
      uint64_t v24 = v6;
      os_log_type_t v16 = (uint8_t *)v15;
      uint64_t v17 = swift_slowAlloc();
      uint64_t v23 = v7;
      uint64_t v18 = v17;
      uint64_t v26 = v17;
      *(_DWORD *)os_log_type_t v16 = 136380675;
      uint64_t v25 = sub_24B5627B8(0x29286E7572, 0xE500000000000000, &v26);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v13, v14, "ObjectCaptureSession.%{private}s: Called run().", v16, 0xCu);
      swift_arrayDestroy();
      uint64_t v19 = v18;
      uint64_t v7 = v23;
      MEMORY[0x24C5D6C00](v19, -1, -1);
      uint64_t v20 = v16;
      uint64_t v6 = v24;
      MEMORY[0x24C5D6C00](v20, -1, -1);

      uint64_t v21 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v22);
    }
    else
    {

      uint64_t v21 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    MEMORY[0x270FA5388](v21);
    *(&v22 - 2) = (uint64_t)v10;
    *(&v22 - 1) = (uint64_t)v1;
    sub_24B682BD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    return v26;
  }
  return result;
}

uint64_t sub_24B61534C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  void (*v14)(uint64_t *__return_ptr, uint64_t);
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  unsigned char *v20;
  char v21;
  void *v22;
  void *v23;
  char v24;
  uint64_t v25;
  NSObject *v26;
  uint64_t v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  unsigned char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  uint64_t v6 = sub_24B6824D0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  id v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v43 - v12;
  os_log_type_t v14 = *(void (**)(uint64_t *__return_ptr, uint64_t))((*MEMORY[0x263F8EED0] & *a2) + 0x420);
  v14(&v48, v11);
  if (v48 == 10)
  {
    sub_24B65A19C((id)0xA);
    uint64_t v15 = 10;
  }
  else
  {
    sub_24B65A19C((id)v48);
    sub_24B65A19C((id)0xA);
    ((void (*)(uint64_t *__return_ptr))v14)(&v48);
    if (v48 != 13)
    {
      uint64_t v45 = (unsigned char *)a1;
      sub_24B65A19C((id)v48);
      sub_24B65A19C((id)0xD);
      objc_super v32 = sub_24B57CB70();
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v13, v32, v6);
      long long v33 = a2;
      uint64_t v34 = sub_24B6824B0();
      uint64_t v35 = sub_24B682B20();
      if (os_log_type_enabled(v34, v35))
      {
        long long v36 = swift_slowAlloc();
        uint64_t v46 = v6;
        __n128 v37 = v36;
        long long v44 = swift_slowAlloc();
        long long v48 = v44;
        *(_DWORD *)__n128 v37 = 136380931;
        long long v47 = sub_24B5627B8(0x29286E7572, 0xE500000000000000, &v48);
        double v38 = sub_24B682CD0();
        *(_WORD *)(v37 + 12) = 2082;
        unint64_t v43 = v37 + 14;
        v14(&v47, v38);
        uint64_t v39 = sub_24B682820();
        long long v47 = sub_24B5627B8(v39, v40, &v48);
        sub_24B682CD0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24B55E000, v34, v35, "ObjectCaptureSession.%{private}s: Invalid state: %{public}s", (uint8_t *)v37, 0x16u);
        uint64_t v41 = v44;
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v41, -1, -1);
        MEMORY[0x24C5D6C00](v37, -1, -1);

        (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v46);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      }
      uint64_t v24 = 0;
      a1 = (uint64_t)v45;
      goto LABEL_20;
    }
    sub_24B65A19C((id)0xD);
    uint64_t v15 = 13;
  }
  sub_24B65A19C((id)v15);
  ((void (*)(uint64_t *__return_ptr))v14)(&v48);
  if (v48 == 13)
  {
    sub_24B65A19C((id)0xD);
    sub_24B65A19C((id)0xD);
    sub_24B63795C();
  }
  else
  {
    sub_24B65A19C((id)v48);
    sub_24B65A19C((id)0xD);
  }
  sub_24B62FB04();
  uint64_t v17 = v16;
  uint64_t v18 = sub_24B630F50(v16);
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = a3;
    objc_msgSend(*(id *)((char *)a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession), sel_runWithConfiguration_options_, v18, 0);
    uint64_t v21 = sub_24B637ADC();
    if (v21)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      sub_24B682560();
      swift_release();
      swift_release();
      uint64_t v22 = (void *)v48;
      swift_getKeyPath();
      swift_getKeyPath();
      long long v48 = 11;
      uint64_t v23 = a2;
      sub_24B682570();
      long long v48 = (uint64_t)v22;
      sub_24B612878((void **)&v48);
      sub_24B65A19C(v22);
    }

    uint64_t v24 = v21 & 1;
    a3 = v20;
  }
  else
  {
    uint64_t v25 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v25, v6);
    uint64_t v26 = sub_24B6824B0();
    uint64_t v27 = v6;
    uint64_t v28 = sub_24B682B20();
    if (os_log_type_enabled(v26, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v46 = v27;
      uint64_t v31 = v30;
      long long v48 = v30;
      uint64_t v45 = a3;
      *(_DWORD *)uint64_t v29 = 136380675;
      long long v47 = sub_24B5627B8(0x29286E7572, 0xE500000000000000, &v48);
      a3 = v45;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v26, v28, "ObjectCaptureSession.%{private}s: Failed to configure AR session!", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v31, -1, -1);
      MEMORY[0x24C5D6C00](v29, -1, -1);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v46);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v27);
    }
    uint64_t v24 = 0;
  }
LABEL_20:
  *a3 = v24;
  return sub_24B62F1C4(a1, MEMORY[0x263F90278], 0x29286E7572, 0xE500000000000000, "ObjectCaptureSession.%{private}s: run() takes CMTime time = %{public}s ms");
}

uint64_t sub_24B615988()
{
  return (*(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v0) + 0x520))(1);
}

uint64_t sub_24B6159C8(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24B6823B0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B682380();
  uint64_t v12 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v12, v4);
  uint64_t v13 = sub_24B6824B0();
  os_log_type_t v14 = sub_24B682B30();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v25 = v8;
    uint64_t v16 = v15;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v24 = v9;
    uint64_t v18 = v17;
    uint64_t v27 = v17;
    *(_DWORD *)uint64_t v16 = 136380931;
    uint64_t v23 = v4;
    uint64_t v26 = sub_24B5627B8(0xD000000000000014, 0x800000024B68F2E0, &v27);
    sub_24B682CD0();
    *(_WORD *)(v16 + 12) = 1026;
    LODWORD(v26) = a1 & 1;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v13, v14, "ObjectCaptureSession.%{private}s: Called pause(fastResuming: %{BOOL,public}d!", (uint8_t *)v16, 0x12u);
    swift_arrayDestroy();
    uint64_t v19 = v18;
    uint64_t v9 = v24;
    MEMORY[0x24C5D6C00](v19, -1, -1);
    uint64_t v20 = v16;
    uint64_t v8 = v25;
    MEMORY[0x24C5D6C00](v20, -1, -1);

    uint64_t v21 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v23);
  }
  else
  {

    uint64_t v21 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  MEMORY[0x270FA5388](v21);
  *(&v23 - 4) = (uint64_t)v11;
  *((unsigned char *)&v23 - 24) = a1 & 1;
  *(&v23 - 2) = v2;
  sub_24B682BD0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v27;
}

uint64_t sub_24B615D20@<X0>(uint64_t a1@<X0>, char a2@<W1>, void *a3@<X2>, char *a4@<X8>)
{
  uint64_t v103 = a4;
  uint64_t v7 = sub_24B562F04((uint64_t *)&unk_2697CCA10);
  MEMORY[0x270FA5388](v7 - 8);
  unint64_t v98 = (double *)((char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_24B6824D0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v95 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v99 = (char *)&v95 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v100 = (char *)&v95 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v95 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v95 - v24;
  if (a2)
  {
    uint64_t v26 = sub_24B61E0D0();
    if ((v26 & 1) == 0) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v101 = a1;
    uint64_t v102 = v10;
    uint64_t v27 = v9;
    uint64_t v28 = *(void **)((char *)a3 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession);
    id v29 = objc_msgSend(v28, sel_configuration);
    if (v29)
    {
      uint64_t v30 = v29;
      self;
      uint64_t v31 = swift_dynamicCastObjCClass();

      if (v31) {
        goto LABEL_8;
      }
    }
    id v32 = objc_msgSend(v28, sel_configuration);
    if (v32)
    {
      long long v33 = v32;
      self;
      uint64_t v34 = swift_dynamicCastObjCClass();

      if (v34)
      {
LABEL_8:
        uint64_t v35 = sub_24B57CB70();
        uint64_t v36 = v102;
        (*(void (**)(char *, uint64_t, uint64_t))(v102 + 16))(v25, v35, v27);
        __n128 v37 = sub_24B6824B0();
        os_log_type_t v38 = sub_24B682B20();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = (uint8_t *)swift_slowAlloc();
          uint64_t v40 = v36;
          uint64_t v41 = (void *)swift_slowAlloc();
          v105[0] = v41;
          *(_DWORD *)uint64_t v39 = 136380675;
          uint64_t v106 = sub_24B5627B8(0xD000000000000014, 0x800000024B68F2E0, (uint64_t *)v105);
          sub_24B682CD0();
          _os_log_impl(&dword_24B55E000, v37, v38, "ObjectCaptureSession.%{private}s: Pause is not supported in ARRecordingConfiguration or ARReplayConfiguration!", v39, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24C5D6C00](v41, -1, -1);
          MEMORY[0x24C5D6C00](v39, -1, -1);

          (*(void (**)(char *, uint64_t))(v40 + 8))(v25, v27);
          char v42 = 0;
LABEL_30:
          a1 = v101;
          long long v62 = v103;
          goto LABEL_35;
        }

        (*(void (**)(char *, uint64_t))(v36 + 8))(v25, v27);
        char v42 = 0;
LABEL_33:
        a1 = v101;
        goto LABEL_34;
      }
    }
    char v43 = sub_24B61E0D0();
    a1 = v101;
    uint64_t v10 = v102;
    uint64_t v9 = v27;
    if ((v43 & 1) == 0)
    {
LABEL_13:
      uint64_t v50 = sub_24B57CB70();
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v50, v9);
      uint64_t v51 = (char *)v9;
      char v52 = a3;
      long long v53 = sub_24B6824B0();
      os_log_type_t v54 = sub_24B682B20();
      if (os_log_type_enabled(v53, v54))
      {
        uint64_t v55 = swift_slowAlloc();
        uint64_t v101 = a1;
        uint64_t v56 = v55;
        uint64_t v57 = (void *)swift_slowAlloc();
        v105[0] = v57;
        *(_DWORD *)uint64_t v56 = 136380931;
        uint64_t v106 = sub_24B5627B8(0xD000000000000014, 0x800000024B68F2E0, (uint64_t *)v105);
        uint64_t v58 = sub_24B682CD0();
        *(_WORD *)(v56 + 12) = 2082;
        uint64_t v100 = v51;
        (*(void (**)(uint64_t *__return_ptr, uint64_t))((*MEMORY[0x263F8EED0] & *v52) + 0x420))(&v106, v58);
        uint64_t v59 = sub_24B682820();
        uint64_t v106 = sub_24B5627B8(v59, v60, (uint64_t *)v105);
        sub_24B682CD0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24B55E000, v53, v54, "ObjectCaptureSession.%{private}s: Invalid state: %{public}s", (uint8_t *)v56, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v57, -1, -1);
        uint64_t v61 = v56;
        a1 = v101;
        MEMORY[0x24C5D6C00](v61, -1, -1);

        (*(void (**)(char *, char *))(v10 + 8))(v13, v100);
        char v42 = 0;
        long long v62 = v103;
LABEL_35:
        char *v62 = v42;
        return sub_24B62F1C4(a1, MEMORY[0x263F90290], 0xD000000000000014, 0x800000024B68F2E0, "ObjectCaptureSession.%{private}s: pause() takes CMTime time = %{public}s ms");
      }

      (*(void (**)(char *, char *))(v10 + 8))(v13, v51);
      char v42 = 0;
      goto LABEL_34;
    }
    uint64_t v44 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v23, v44, v27);
    uint64_t v45 = sub_24B6824B0();
    os_log_type_t v46 = sub_24B682B30();
    if (os_log_type_enabled(v45, v46))
    {
      long long v47 = (uint8_t *)swift_slowAlloc();
      long long v48 = (void *)swift_slowAlloc();
      v105[0] = v48;
      *(_DWORD *)long long v47 = 136380675;
      a1 = v101;
      uint64_t v97 = v47 + 4;
      uint64_t v106 = sub_24B5627B8(0xD000000000000014, 0x800000024B68F2E0, (uint64_t *)v105);
      uint64_t v9 = v27;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v45, v46, "ObjectCaptureSession.%{private}s: ARSession is paused.", v47, 0xCu);
      swift_arrayDestroy();
      uint64_t v49 = v48;
      uint64_t v10 = v102;
      MEMORY[0x24C5D6C00](v49, -1, -1);
      MEMORY[0x24C5D6C00](v47, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v27);
    uint64_t v26 = (uint64_t)objc_msgSend(*(id *)((char *)a3 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession), sel_pause);
  }
  uint64_t v102 = v10;
  (*(void (**)(void **__return_ptr, uint64_t))((*MEMORY[0x263F8EED0] & *a3) + 0x420))(v105, v26);
  char v63 = *(void **)((char *)a3 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_stateOnPause);
  *(void *)((char *)a3 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_stateOnPause) = v105[0];
  sub_24B65A19C(v63);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24B682560();
  swift_release();
  swift_release();
  long long v64 = v105[0];
  swift_getKeyPath();
  swift_getKeyPath();
  v105[0] = (void *)13;
  long long v65 = a3;
  sub_24B682570();
  v105[0] = v64;
  sub_24B612878(v105);
  sub_24B65A19C(v64);
  if (*((unsigned char *)v65 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isPoseCorrectionUsingMobileSfMEnabled) != 1)
  {
    uint64_t v77 = sub_24B57CB70();
    uint64_t v78 = v102;
    (*(void (**)(char *, uint64_t, uint64_t))(v102 + 16))(v16, v77, v9);
    uint64_t v79 = sub_24B6824B0();
    os_log_type_t v80 = sub_24B682B30();
    if (os_log_type_enabled(v79, v80))
    {
      uint64_t v81 = (uint8_t *)swift_slowAlloc();
      uint64_t v82 = (void *)swift_slowAlloc();
      v105[0] = v82;
      uint64_t v100 = (char *)v9;
      *(_DWORD *)uint64_t v81 = 136380675;
      uint64_t v106 = sub_24B5627B8(0xD000000000000014, 0x800000024B68F2E0, (uint64_t *)v105);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v79, v80, "ObjectCaptureSession.%{private}s: Couldn't set shouldWaitForPoseCorrectionUsingMobileSfM because mobileSfM based pose correction is not enabled!", v81, 0xCu);
      char v42 = 1;
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v82, -1, -1);
      MEMORY[0x24C5D6C00](v81, -1, -1);

      (*(void (**)(char *, char *))(v78 + 8))(v16, v100);
      long long v62 = v103;
      goto LABEL_35;
    }

    (*(void (**)(char *, uint64_t))(v78 + 8))(v16, v9);
    char v42 = 1;
LABEL_34:
    long long v62 = v103;
    goto LABEL_35;
  }
  sub_24B616BC4();
  *((unsigned char *)v65 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForPoseCorrectionUsingMobileSfM) = 1;
  uint64_t v66 = sub_24B57CB70();
  uint64_t v67 = v102;
  long long v68 = v100;
  id v96 = *(void (**)(char *, uint64_t, uint64_t))(v102 + 16);
  v96(v100, v66, v9);
  uint64_t v69 = sub_24B6824B0();
  os_log_type_t v70 = sub_24B682B30();
  BOOL v71 = os_log_type_enabled(v69, v70);
  uint64_t v101 = a1;
  uint64_t v97 = (uint8_t *)v66;
  if (v71)
  {
    __int16 v72 = (uint8_t *)swift_slowAlloc();
    uint64_t v73 = (void *)swift_slowAlloc();
    v105[0] = v73;
    *(_DWORD *)__int16 v72 = 136380675;
    uint64_t v106 = sub_24B5627B8(0xD000000000000014, 0x800000024B68F2E0, (uint64_t *)v105);
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v69, v70, "ObjectCaptureSession.%{private}s: Set shouldWaitForPoseCorrectionUsingMobileSfM.", v72, 0xCu);
    swift_arrayDestroy();
    uint64_t v74 = v73;
    uint64_t v75 = v102;
    MEMORY[0x24C5D6C00](v74, -1, -1);
    MEMORY[0x24C5D6C00](v72, -1, -1);

    uint64_t v76 = *(void (**)(char *, uint64_t))(v75 + 8);
    v76(v100, v9);
  }
  else
  {

    uint64_t v76 = *(void (**)(char *, uint64_t))(v67 + 8);
    v76(v68, v9);
  }
  uint64_t v83 = v98;
  uint64_t v84 = v99;
  uint64_t v85 = (uint64_t)v65 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_currentFrame;
  swift_beginAccess();
  sub_24B563A6C(v85, (uint64_t)v83, (uint64_t *)&unk_2697CCA10);
  uint64_t v86 = type metadata accessor for ObjectCaptureSession.Frame(0);
  uint64_t result = (*(uint64_t (**)(double *, uint64_t, uint64_t))(*(void *)(v86 - 8) + 48))(v83, 1, v86);
  if (result != 1)
  {
    double v88 = *v83 * 1000.0;
    uint64_t result = sub_24B65EF80((uint64_t)v83, type metadata accessor for ObjectCaptureSession.Frame);
    if ((~*(void *)&v88 & 0x7FF0000000000000) != 0)
    {
      if (v88 > -9.22337204e18)
      {
        if (v88 < 9.22337204e18)
        {
          uint64_t v89 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pauseTimeForPoseCorrection;
          *(void *)((char *)v65 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pauseTimeForPoseCorrection) = (uint64_t)v88;
          v96(v84, (uint64_t)v97, v9);
          os_log_type_t v90 = v65;
          uint64_t v91 = sub_24B6824B0();
          os_log_type_t v92 = sub_24B682B30();
          if (os_log_type_enabled(v91, v92))
          {
            uint64_t v93 = swift_slowAlloc();
            uint64_t v94 = swift_slowAlloc();
            uint64_t v106 = v94;
            *(_DWORD *)uint64_t v93 = 136380931;
            unint64_t v98 = (double *)v76;
            uint64_t v104 = sub_24B5627B8(0xD000000000000014, 0x800000024B68F2E0, &v106);
            uint64_t v100 = (char *)v9;
            sub_24B682CD0();
            *(_WORD *)(v93 + 12) = 2050;
            uint64_t v104 = *(void *)((char *)v65 + v89);
            sub_24B682CD0();

            _os_log_impl(&dword_24B55E000, v91, v92, "ObjectCaptureSession.%{private}s: Set pauseTimeForPoseCorrection = %{public}ld", (uint8_t *)v93, 0x16u);
            char v42 = 1;
            swift_arrayDestroy();
            MEMORY[0x24C5D6C00](v94, -1, -1);
            MEMORY[0x24C5D6C00](v93, -1, -1);

            ((void (*)(char *, char *))v98)(v99, v100);
            goto LABEL_30;
          }

          v76(v84, v9);
          char v42 = 1;
          goto LABEL_33;
        }
        goto LABEL_38;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_38:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_24B616BC4()
{
  uint64_t v0 = sub_24B6824D0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  char v4 = sub_24B682690();
  uint64_t result = swift_release();
  if ((v4 & 1) == 0)
  {
    swift_retain();
    sub_24B6826B0();
    swift_release();
    uint64_t v6 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v6, v0);
    uint64_t v7 = sub_24B6824B0();
    os_log_type_t v8 = sub_24B682B30();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      uint64_t v12 = v10;
      *(_DWORD *)uint64_t v9 = 136380675;
      uint64_t v11 = sub_24B5627B8(0xD000000000000022, 0x800000024B6912C0, &v12);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v7, v8, "ObjectCaptureSession.%{private}s: Cancelled existing pose correction timer.", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v10, -1, -1);
      MEMORY[0x24C5D6C00](v9, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return result;
}

uint64_t sub_24B616DFC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24B6823B0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B682380();
  uint64_t v10 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v10, v2);
  uint64_t v11 = sub_24B6824B0();
  os_log_type_t v12 = sub_24B682B30();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v21 = v2;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v23 = v1;
    uint64_t v14 = (uint8_t *)v13;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v22 = v6;
    uint64_t v16 = v15;
    uint64_t v25 = v15;
    *(_DWORD *)uint64_t v14 = 136380675;
    uint64_t v24 = sub_24B5627B8(0x2928656D75736572, 0xE800000000000000, &v25);
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v11, v12, "ObjectCaptureSession.%{private}s: Called resume().", v14, 0xCu);
    swift_arrayDestroy();
    uint64_t v17 = v16;
    uint64_t v6 = v22;
    MEMORY[0x24C5D6C00](v17, -1, -1);
    uint64_t v18 = v14;
    uint64_t v1 = v23;
    MEMORY[0x24C5D6C00](v18, -1, -1);

    uint64_t v19 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v21);
  }
  else
  {

    uint64_t v19 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  MEMORY[0x270FA5388](v19);
  *(&v21 - 2) = (uint64_t)v9;
  *(&v21 - 1) = v1;
  sub_24B682BD0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v25;
}

uint64_t sub_24B617118@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  void (*v20)(char **__return_ptr, uint64_t);
  void *v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  char *v26;
  void *v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void *v33;
  NSObject *v34;
  os_log_type_t v35;
  BOOL v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char v41;
  uint64_t v42;
  void *v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char *v51;
  void (*v52)(char *, uint64_t);
  char *v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  void *v59;
  char *v60;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;

  long long v68 = a3;
  uint64_t v69 = a1;
  uint64_t v4 = sub_24B682680();
  long long v65 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v62 - v8;
  uint64_t v10 = sub_24B6824D0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v66 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v62 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v62 - v18;
  uint64_t v20 = *(void (**)(char **__return_ptr, uint64_t))((*MEMORY[0x263F8EED0] & *a2) + 0x420);
  v20(&v71, v17);
  if (v71 != (char *)13)
  {
    sub_24B65A19C(v71);
    sub_24B65A19C((id)0xD);
    char v42 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v19, v42, v10);
    char v43 = a2;
    uint64_t v44 = sub_24B6824B0();
    uint64_t v45 = sub_24B682B20();
    os_log_type_t v46 = v11;
    if (os_log_type_enabled(v44, v45))
    {
      long long v47 = swift_slowAlloc();
      uint64_t v66 = (char *)swift_slowAlloc();
      BOOL v71 = v66;
      *(_DWORD *)long long v47 = 136380931;
      os_log_type_t v70 = sub_24B5627B8(0x2928656D75736572, 0xE800000000000000, (uint64_t *)&v71);
      long long v48 = sub_24B682CD0();
      *(_WORD *)(v47 + 12) = 2082;
      uint64_t v67 = v10;
      v20((char **)&v70, v48);
      uint64_t v49 = sub_24B682820();
      os_log_type_t v70 = sub_24B5627B8(v49, v50, (uint64_t *)&v71);
      sub_24B682CD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24B55E000, v44, v45, "ObjectCaptureSession.%{private}s: Invalid state: %{public}s", (uint8_t *)v47, 0x16u);
      uint64_t v51 = v66;
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v51, -1, -1);
      MEMORY[0x24C5D6C00](v47, -1, -1);

      (*(void (**)(char *, uint64_t))(v46 + 8))(v19, v67);
LABEL_15:
      uint64_t v41 = 0;
      goto LABEL_16;
    }

    char v52 = *(void (**)(char *, uint64_t))(v11 + 8);
    long long v53 = v19;
LABEL_14:
    v52(v53, v10);
    goto LABEL_15;
  }
  uint64_t v67 = v10;
  long long v64 = v11;
  sub_24B65A19C((id)0xD);
  sub_24B65A19C((id)0xD);
  sub_24B62FB04();
  uint64_t v22 = v21;
  uint64_t v23 = sub_24B630F50(v21);
  if (!v23)
  {
    os_log_type_t v54 = sub_24B57CB70();
    uint64_t v55 = v64;
    uint64_t v10 = v67;
    (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v16, v54, v67);
    uint64_t v56 = sub_24B6824B0();
    uint64_t v57 = sub_24B682B20();
    if (os_log_type_enabled(v56, v57))
    {
      uint64_t v58 = (uint8_t *)swift_slowAlloc();
      uint64_t v59 = v22;
      unint64_t v60 = (char *)swift_slowAlloc();
      BOOL v71 = v60;
      *(_DWORD *)uint64_t v58 = 136380675;
      os_log_type_t v70 = sub_24B5627B8(0x2928656D75736572, 0xE800000000000000, (uint64_t *)&v71);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v56, v57, "ObjectCaptureSession.%{private}s: Failed to configure AR session!", v58, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v60, -1, -1);
      MEMORY[0x24C5D6C00](v58, -1, -1);
    }
    else
    {
    }
    char v52 = *(void (**)(char *, uint64_t))(v55 + 8);
    long long v53 = v16;
    goto LABEL_14;
  }
  uint64_t v24 = v23;
  char v63 = v22;
  objc_msgSend(*(id *)((char *)a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession), sel_runWithConfiguration_options_, v23, 0);
  uint64_t v25 = *(void **)((char *)a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_stateOnPause);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24B66DD1C(v25);
  sub_24B682560();
  swift_release();
  swift_release();
  uint64_t v26 = v71;
  swift_getKeyPath();
  swift_getKeyPath();
  BOOL v71 = (char *)v25;
  uint64_t v27 = a2;
  sub_24B682570();
  BOOL v71 = v26;
  sub_24B612878((void **)&v71);
  sub_24B65A19C(v26);
  if ((*((unsigned char *)v27 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isPoseCorrectionUsingMobileSfMEnabled) & 1) == 0)
  {

    uint64_t v41 = 1;
LABEL_16:
    __n128 v37 = v68;
    goto LABEL_17;
  }
  long long v62 = v24;
  sub_24B616BC4();
  *(void *)((char *)v27 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_poseCorrectionTimerWorkItem) = sub_24B61D524();
  swift_release();
  sub_24B682660();
  MEMORY[0x24C5D47E0](v7, 10.0);
  uint64_t v28 = *(void (**)(char *, uint64_t))(v65 + 8);
  v28(v7, v4);
  swift_retain();
  sub_24B682BA0();
  swift_release();
  v28(v9, v4);
  id v29 = sub_24B57CB70();
  uint64_t v30 = v64;
  uint64_t v31 = v66;
  id v32 = v67;
  (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v66, v29, v67);
  long long v33 = v27;
  uint64_t v34 = sub_24B6824B0();
  uint64_t v35 = sub_24B682B30();
  uint64_t v36 = os_log_type_enabled(v34, v35);
  __n128 v37 = v68;
  if (v36)
  {
    os_log_type_t v38 = swift_slowAlloc();
    uint64_t v39 = v30;
    uint64_t v40 = (char *)swift_slowAlloc();
    BOOL v71 = v40;
    *(_DWORD *)os_log_type_t v38 = 136380931;
    os_log_type_t v70 = sub_24B5627B8(0x2928656D75736572, 0xE800000000000000, (uint64_t *)&v71);
    sub_24B682CD0();
    *(_WORD *)(v38 + 12) = 2050;
    os_log_type_t v70 = 0x4024000000000000;
    sub_24B682CD0();

    _os_log_impl(&dword_24B55E000, v34, v35, "ObjectCaptureSession.%{private}s: Set set wait for pose correction timer to %{public}f seconds", (uint8_t *)v38, 0x16u);
    uint64_t v41 = 1;
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v40, -1, -1);
    MEMORY[0x24C5D6C00](v38, -1, -1);

    (*(void (**)(char *, uint64_t))(v39 + 8))(v31, v67);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v32);
    uint64_t v41 = 1;
  }
LABEL_17:
  *__n128 v37 = v41;
  return sub_24B62F1C4(v69, MEMORY[0x263F90278], 0x2928656D75736572, 0xE800000000000000, "ObjectCaptureSession.%{private}s: resume() takes CMTime time = %{public}s ms");
}

uint64_t sub_24B6179F0(double a1, double a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24B6824D0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24B6823B0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B682380();
  uint64_t v14 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v14, v6);
  uint64_t v15 = sub_24B6824B0();
  os_log_type_t v16 = sub_24B682B30();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v27 = v3;
    uint64_t v18 = v17;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v26 = v10;
    uint64_t v20 = v19;
    uint64_t v29 = v19;
    *(_DWORD *)uint64_t v18 = 136381187;
    uint64_t v25 = v11;
    double v28 = COERCE_DOUBLE(sub_24B5627B8(0xD000000000000011, 0x800000024B68F300, &v29));
    sub_24B682CD0();
    *(_WORD *)(v18 + 12) = 2050;
    double v28 = a1;
    sub_24B682CD0();
    *(_WORD *)(v18 + 22) = 2050;
    uint64_t v11 = v25;
    double v28 = a2;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v15, v16, "ObjectCaptureSession.%{private}s: Called detectObject() with imagePoint = (%{public}f, %{public}f)", (uint8_t *)v18, 0x20u);
    swift_arrayDestroy();
    uint64_t v21 = v20;
    uint64_t v10 = v26;
    MEMORY[0x24C5D6C00](v21, -1, -1);
    uint64_t v22 = v18;
    uint64_t v3 = v27;
    MEMORY[0x24C5D6C00](v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_24B680CA8();
  OCSignPostsAriadneDbgCode();
  uint64_t v23 = kdebug_trace();
  MEMORY[0x270FA5388](v23);
  *(&v25 - 4) = (uint64_t)v13;
  *(&v25 - 3) = v3;
  *((double *)&v25 - 2) = a1;
  *((double *)&v25 - 1) = a2;
  sub_24B682BD0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v29;
}

uint64_t sub_24B617D64@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  void (*v21)(id *__return_ptr, uint64_t);
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void *v25;
  char v26;
  void *v27;
  void *v28;
  char v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53[3];
  id v54[3];

  uint64_t v10 = sub_24B562F04((uint64_t *)&unk_2697CCA10);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24B6824D0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v47 - v19;
  uint64_t v21 = *(void (**)(id *__return_ptr, uint64_t))((*MEMORY[0x263F8EED0] & *a2) + 0x420);
  v21(v54, v18);
  if (v54[0] == (id)12)
  {
    uint64_t v50 = a3;
    sub_24B65A19C((id)0xC);
    uint64_t v22 = 12;
  }
  else
  {
    sub_24B65A19C(v54[0]);
    sub_24B65A19C((id)0xC);
    ((void (*)(id *__return_ptr))v21)(v54);
    if (v54[0] != (id)14)
    {
      uint64_t v49 = a1;
      sub_24B65A19C(v54[0]);
      sub_24B65A19C((id)0xE);
      uint64_t v35 = sub_24B57CB70();
      (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v20, v35, v13);
      uint64_t v36 = a2;
      __n128 v37 = sub_24B6824B0();
      os_log_type_t v38 = sub_24B682B20();
      if (os_log_type_enabled(v37, v38))
      {
        uint64_t v39 = swift_slowAlloc();
        uint64_t v50 = a3;
        uint64_t v40 = v39;
        long long v48 = (void *)swift_slowAlloc();
        v54[0] = v48;
        *(_DWORD *)uint64_t v40 = 136380931;
        v53[0] = sub_24B5627B8(0xD000000000000011, 0x800000024B68F300, (uint64_t *)v54);
        uint64_t v41 = sub_24B682CD0();
        *(_WORD *)(v40 + 12) = 2082;
        long long v47 = v40 + 14;
        v21((id *)v53, v41);
        char v42 = sub_24B682820();
        v53[0] = sub_24B5627B8(v42, v43, (uint64_t *)v54);
        sub_24B682CD0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24B55E000, v37, v38, "ObjectCaptureSession.%{private}s: Invalid state: %{public}s", (uint8_t *)v40, 0x16u);
        uint64_t v44 = v48;
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v44, -1, -1);
        uint64_t v45 = v40;
        a3 = v50;
        MEMORY[0x24C5D6C00](v45, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v13);
      uint64_t v29 = 0;
      a1 = v49;
      goto LABEL_15;
    }
    uint64_t v50 = a3;
    sub_24B65A19C((id)0xE);
    uint64_t v22 = 14;
  }
  sub_24B65A19C((id)v22);
  sub_24B680CB4();
  OCSignPostsAriadneDbgCode();
  kdebug_trace();
  uint64_t v23 = (char *)a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox;
  *(_OWORD *)uint64_t v23 = 0u;
  *((_OWORD *)v23 + 1) = 0u;
  *((_OWORD *)v23 + 2) = 0u;
  *((_OWORD *)v23 + 3) = 0u;
  v23[64] = 1;
  swift_beginAccess();
  uint64_t v24 = (uint64_t)a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_currentFrame;
  swift_beginAccess();
  sub_24B563A6C(v24, (uint64_t)v12, (uint64_t *)&unk_2697CCA10);
  uint64_t v25 = (void *)swift_bridgeObjectRetain();
  sub_24B618424(v25, (uint64_t)v12, a4, a5);
  LOBYTE(v24) = v26;
  swift_bridgeObjectRelease();
  sub_24B5632A8((uint64_t)v12, (uint64_t *)&unk_2697CCA10);
  if (v24)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_24B682560();
    swift_release();
    swift_release();
    uint64_t v27 = (void *)v52;
    swift_getKeyPath();
    swift_getKeyPath();
    char v52 = 14;
    double v28 = a2;
    sub_24B682570();
    char v52 = (uint64_t)v27;
    sub_24B612878((void **)&v52);
    sub_24B65A19C(v27);
    uint64_t v29 = 1;
  }
  else
  {
    uint64_t v30 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v30, v13);
    uint64_t v31 = sub_24B6824B0();
    id v32 = sub_24B682B20();
    if (os_log_type_enabled(v31, v32))
    {
      long long v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      char v52 = v34;
      *(_DWORD *)long long v33 = 136380675;
      uint64_t v51 = sub_24B5627B8(0xD000000000000011, 0x800000024B68F300, &v52);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v31, v32, "ObjectCaptureSession.%{private}s: Precheck failed!", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v34, -1, -1);
      MEMORY[0x24C5D6C00](v33, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    uint64_t v29 = 0;
  }
  a3 = v50;
LABEL_15:
  *a3 = v29;
  return sub_24B62F1C4(a1, MEMORY[0x263F90278], 0xD000000000000011, 0x800000024B68F300, "ObjectCaptureSession.%{private}s: detectObject() takes CMTime time = %{public}s ms");
}

void sub_24B618424(void *a1, uint64_t a2, double a3, double a4)
{
  uint64_t v5 = v4;
  id v149 = a1;
  uint64_t v150 = sub_24B6824D0();
  uint64_t v151 = *(void *)(v150 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v150);
  uint64_t v11 = (char *)&v138 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  v148[0] = (char *)&v138 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  v146.i64[0] = (uint64_t)&v138 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  v147.i64[0] = (uint64_t)&v138 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  v143 = (char *)&v138 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v138 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v145 = (char *)&v138 - v23;
  uint64_t v24 = sub_24B682C90();
  MEMORY[0x270FA5388](v24 - 8);
  uint64_t v26 = (char *)&v138 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_24B562F04((uint64_t *)&unk_2697CCA10);
  uint64_t v28 = MEMORY[0x270FA5388](v27 - 8);
  uint64_t v144 = (float32x4_t *)((char *)&v138 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v28);
  uint64_t v31 = (char *)&v138 - v30;
  uint64_t v32 = type metadata accessor for ObjectCaptureSession.Frame(0);
  uint64_t v33 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v35 = (char *)&v138 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B563A6C(a2, (uint64_t)v31, (uint64_t *)&unk_2697CCA10);
  uint64_t v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
  if (v36(v31, 1, v32) == 1)
  {
    sub_24B5632A8((uint64_t)v31, (uint64_t *)&unk_2697CCA10);
LABEL_12:
    uint64_t v60 = sub_24B57CB70();
    uint64_t v61 = v151;
    uint64_t v62 = v150;
    (*(void (**)(char *, uint64_t, uint64_t))(v151 + 16))(v11, v60, v150);
    char v63 = sub_24B6824B0();
    os_log_type_t v64 = sub_24B682B20();
    if (os_log_type_enabled(v63, v64))
    {
      long long v65 = (uint8_t *)swift_slowAlloc();
      uint64_t v66 = swift_slowAlloc();
      *(void *)&v158[0] = v66;
      *(_DWORD *)long long v65 = 136380675;
      *(void *)&long long v155 = sub_24B5627B8(0xD00000000000003CLL, 0x800000024B691760, (uint64_t *)v158);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v63, v64, "ObjectCaptureSession.%{private}s: Invalid inputs!", v65, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v66, -1, -1);
      MEMORY[0x24C5D6C00](v65, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v61 + 8))(v11, v62);
    return;
  }
  uint64_t v141 = v22;
  uint64_t v142 = v5;
  sub_24B65A134((uint64_t)v31, (uint64_t)v35, type metadata accessor for ObjectCaptureSession.Frame);
  __n128 v37 = (void *)*((void *)v35 + 2);
  if (!v37 || (os_log_type_t v38 = (void *)*((void *)v35 + 3)) == 0)
  {
    sub_24B65EF80((uint64_t)v35, type metadata accessor for ObjectCaptureSession.Frame);
    goto LABEL_12;
  }
  uint64_t v39 = *(int *)(v32 + 32);
  v140 = v35;
  uint64_t v40 = &v35[v39];
  type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  uint64_t v41 = sub_24B682C80();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v26, 2, 2, v41);
  id v42 = v37;
  id v43 = v38;
  char v44 = sub_24B682C70();
  sub_24B65EF80((uint64_t)v26, MEMORY[0x263F8C968]);
  if ((v44 & 1) == 0)
  {
    uint64_t v67 = v43;
    uint64_t v68 = sub_24B57CB70();
    uint64_t v69 = v151;
    uint64_t v70 = (uint64_t)v148[0];
    uint64_t v71 = v150;
    (*(void (**)(id, uint64_t, uint64_t))(v151 + 16))(v148[0], v68, v150);
    __int16 v72 = sub_24B6824B0();
    os_log_type_t v73 = sub_24B682B20();
    if (os_log_type_enabled(v72, v73))
    {
      uint64_t v74 = (uint8_t *)swift_slowAlloc();
      uint64_t v75 = swift_slowAlloc();
      id v149 = v42;
      uint64_t v76 = v75;
      *(void *)&v158[0] = v75;
      *(_DWORD *)uint64_t v74 = 136380675;
      *(void *)&long long v155 = sub_24B5627B8(0xD00000000000003CLL, 0x800000024B691760, (uint64_t *)v158);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v72, v73, "ObjectCaptureSession.%{private}s: Camera tracking state is not normal, not setting tap point!", v74, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v76, -1, -1);
      MEMORY[0x24C5D6C00](v74, -1, -1);
    }
    else
    {
    }
    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v70, v71);
    goto LABEL_25;
  }
  uint64_t v45 = (uint64_t)v149;
  uint64_t v46 = v151;
  if (!*((void *)v149 + 2))
  {
    uint64_t v77 = sub_24B57CB70();
    uint64_t v78 = v146.i64[0];
    uint64_t v79 = v150;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16))(v146.i64[0], v77, v150);
    os_log_type_t v80 = sub_24B6824B0();
    os_log_type_t v81 = sub_24B682B20();
    if (os_log_type_enabled(v80, v81))
    {
      v148[0] = v43;
      uint64_t v82 = (uint8_t *)swift_slowAlloc();
      uint64_t v83 = v42;
      uint64_t v84 = swift_slowAlloc();
      *(void *)&v158[0] = v84;
      *(_DWORD *)uint64_t v82 = 136380675;
      *(void *)&long long v155 = sub_24B5627B8(0xD00000000000003CLL, 0x800000024B691760, (uint64_t *)v158);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v80, v81, "ObjectCaptureSession.%{private}s: No planes available!", v82, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v84, -1, -1);
      MEMORY[0x24C5D6C00](v82, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v146.i64[0], v79);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v78, v79);
    }
LABEL_25:
    sub_24B65EF80((uint64_t)v140, type metadata accessor for ObjectCaptureSession.Frame);
    return;
  }
  long long v47 = (void *)*((void *)v140 + 1);
  long long v48 = *((_OWORD *)v40 + 1);
  v158[0] = *(_OWORD *)v40;
  v158[1] = v48;
  long long v49 = *((_OWORD *)v40 + 2);
  *(_OWORD *)v148 = *((_OWORD *)v40 + 3);
  v158[2] = v49;
  float32x4_t v146 = *((float32x4_t *)v40 + 4);
  float32x4_t v139 = *((float32x4_t *)v40 + 5);
  float32x4_t v138 = *((float32x4_t *)v40 + 6);
  id v50 = v47;
  sub_24B571A78((uint64_t)&v155, a3, a4);
  if (!sub_24B571A8C((__CVBuffer *)v50, (__CVBuffer *)v42, (__CVBuffer *)v43, (uint64_t)v158, *(float32x4_t *)v148, v146, v139, v138)|| (v157 & 1) != 0)
  {
    uint64_t v51 = sub_24B57CB70();
    uint64_t v52 = v147.i64[0];
    uint64_t v53 = v150;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16))(v147.i64[0], v51, v150);
    os_log_type_t v54 = sub_24B6824B0();
    os_log_type_t v55 = sub_24B682B20();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = (uint8_t *)swift_slowAlloc();
      uint64_t v57 = swift_slowAlloc();
      v148[0] = v43;
      uint64_t v58 = v57;
      *(void *)&v154[0] = v57;
      *(_DWORD *)uint64_t v56 = 136380675;
      *(void *)&long long v152 = sub_24B5627B8(0xD00000000000003CLL, 0x800000024B691760, (uint64_t *)v154);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v54, v55, "ObjectCaptureSession.%{private}s: Failed to compute tap position in world, resetting the old tap position!", v56, 0xCu);
      swift_arrayDestroy();
      uint64_t v59 = v58;
      id v43 = v148[0];
      MEMORY[0x24C5D6C00](v59, -1, -1);
      MEMORY[0x24C5D6C00](v56, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v147.i64[0], v53);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v52, v53);
    }
    uint64_t v85 = (uint64_t)v140;
LABEL_23:
    uint64_t v86 = v142;
    uint64_t v87 = &v142[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_tapPosition];
    *((_WORD *)v87 + 16) = 256;
    *(_OWORD *)uint64_t v87 = 0u;
    *((_OWORD *)v87 + 1) = 0u;
    sub_24B61E6D0();

    sub_24B65EF80(v85, type metadata accessor for ObjectCaptureSession.Frame);
    double v88 = &v86[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_initialCameraTransform];
    *(_OWORD *)double v88 = 0u;
    *((_OWORD *)v88 + 1) = 0u;
    *((_OWORD *)v88 + 2) = 0u;
    *((_OWORD *)v88 + 3) = 0u;
    v88[64] = 1;
    return;
  }
  v148[0] = v43;
  float32x4_t v89 = v156;
  float32x4_t v90 = v156;
  if (v142[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugTapPosition] == 1)
  {
    float32x4_t v147 = v156;
    sub_24B64D630();
    v154[0] = v89;
    sub_24B682500();
    swift_release();
    float32x4_t v90 = v147;
  }
  sub_24B65E6F4(v45, v90);
  os_log_type_t v92 = v91;

  if (!v92)
  {
    uint64_t v124 = sub_24B57CB70();
    int v125 = v143;
    uint64_t v126 = v150;
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v143, v124, v150);
    uint64_t v127 = sub_24B6824B0();
    os_log_type_t v128 = sub_24B682B20();
    if (os_log_type_enabled(v127, v128))
    {
      v129 = (uint8_t *)swift_slowAlloc();
      uint64_t v130 = swift_slowAlloc();
      *(void *)&v154[0] = v130;
      *(_DWORD *)v129 = 136380675;
      *(void *)&long long v152 = sub_24B5627B8(0xD00000000000003CLL, 0x800000024B691760, (uint64_t *)v154);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v127, v128, "ObjectCaptureSession.%{private}s: Failed to compute nearest plane below tap position, resetting the old tap position!", v129, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v130, -1, -1);
      MEMORY[0x24C5D6C00](v129, -1, -1);

      (*(void (**)(char *, uint64_t))(v46 + 8))(v143, v126);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v46 + 8))(v125, v126);
    }
    uint64_t v85 = (uint64_t)v140;
    id v43 = v148[0];
    goto LABEL_23;
  }
  v147.i64[0] = (uint64_t)v50;
  id v149 = v42;
  uint64_t v93 = v142;
  uint64_t v94 = (uint64_t)&v142[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_tapPosition];
  *(_OWORD *)uint64_t v94 = v155;
  *(float32x4_t *)(v94 + 16) = v89;
  v146.i64[0] = v94;
  *(_WORD *)(v94 + 32) = 0;
  sub_24B61E6D0();
  uint64_t v95 = &v93[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_currentFrame];
  swift_beginAccess();
  uint64_t v96 = (uint64_t)v95;
  uint64_t v97 = (uint64_t)v144;
  sub_24B563A6C(v96, (uint64_t)v144, (uint64_t *)&unk_2697CCA10);
  unsigned int v98 = v36((char *)v97, 1, v32);
  uint64_t v99 = v97;
  uint64_t v100 = 0;
  uint64_t v101 = 0;
  uint64_t v102 = 0;
  uint64_t v103 = 0;
  uint64_t v104 = 0;
  uint64_t v105 = 0;
  uint64_t v106 = 0;
  uint64_t v107 = 0;
  if (!v98)
  {
    uint64_t v108 = (void *)(v99 + *(int *)(v32 + 32));
    uint64_t v100 = v108[6];
    uint64_t v101 = v108[7];
    uint64_t v102 = v108[8];
    uint64_t v103 = v108[9];
    uint64_t v104 = v108[10];
    uint64_t v105 = v108[11];
    uint64_t v106 = v108[12];
    uint64_t v107 = v108[13];
  }
  BOOL v109 = v98 != 0;
  sub_24B5632A8(v99, (uint64_t *)&unk_2697CCA10);
  uint64_t v110 = &v93[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_initialCameraTransform];
  *(void *)uint64_t v110 = v100;
  *((void *)v110 + 1) = v101;
  *((void *)v110 + 2) = v102;
  *((void *)v110 + 3) = v103;
  *((void *)v110 + 4) = v104;
  *((void *)v110 + 5) = v105;
  *((void *)v110 + 6) = v106;
  *((void *)v110 + 7) = v107;
  v110[64] = v109;
  uint64_t v111 = sub_24B57CB70();
  uint64_t v112 = v151;
  uint64_t v113 = *(float32x4_t **)(v151 + 16);
  v114 = v145;
  uint64_t v115 = v150;
  ((void (*)(char *, uint64_t, uint64_t))v113)(v145, v111, v150);
  uint64_t v116 = v93;
  unint64_t v117 = sub_24B6824B0();
  os_log_type_t v118 = sub_24B682B30();
  if (os_log_type_enabled(v117, v118))
  {
    uint64_t v144 = v113;
    uint64_t v119 = swift_slowAlloc();
    uint64_t v120 = swift_slowAlloc();
    uint64_t v153 = v120;
    *(_DWORD *)uint64_t v119 = 136380931;
    *(void *)&long long v152 = sub_24B5627B8(0xD00000000000003CLL, 0x800000024B691760, &v153);
    sub_24B682CD0();
    *(_WORD *)(v119 + 12) = 2082;
    if (*(unsigned char *)(v146.i64[0] + 33))
    {

      __break(1u);
      return;
    }
    long long v152 = *(_OWORD *)v146.i64[0];
    type metadata accessor for CGPoint();
    uint64_t v121 = sub_24B682820();
    *(void *)&long long v152 = sub_24B5627B8(v121, v122, &v153);
    sub_24B682CD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24B55E000, v117, v118, "ObjectCaptureSession.%{private}s: Set tap position with image point %{public}s.", (uint8_t *)v119, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v120, -1, -1);
    MEMORY[0x24C5D6C00](v119, -1, -1);

    uint64_t v123 = *(void (**)(char *, uint64_t))(v151 + 8);
    uint64_t v115 = v150;
    v123(v145, v150);
    uint64_t v113 = v144;
  }
  else
  {

    uint64_t v123 = *(void (**)(char *, uint64_t))(v112 + 8);
    v123(v114, v115);
  }
  uint64_t v131 = v141;
  ((void (*)(char *, uint64_t, uint64_t))v113)(v141, v111, v115);
  uint64_t v132 = sub_24B6824B0();
  os_log_type_t v133 = sub_24B682B30();
  if (os_log_type_enabled(v132, v133))
  {
    uint64_t v134 = (uint8_t *)swift_slowAlloc();
    uint64_t v135 = v131;
    uint64_t v136 = swift_slowAlloc();
    *(void *)&long long v152 = v136;
    *(_DWORD *)uint64_t v134 = 136380675;
    uint64_t v153 = sub_24B5627B8(0xD00000000000003CLL, 0x800000024B691760, (uint64_t *)&v152);
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v132, v133, "ObjectCaptureSession.%{private}s: Set initial camera transform.", v134, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v136, -1, -1);
    MEMORY[0x24C5D6C00](v134, -1, -1);

    uint64_t v137 = v135;
  }
  else
  {

    uint64_t v137 = v131;
  }
  v123(v137, v115);
  sub_24B65EF80((uint64_t)v140, type metadata accessor for ObjectCaptureSession.Frame);
}

uint64_t sub_24B619688(uint64_t a1)
{
  unsigned __int8 v17 = 0;
  uint64_t v3 = *(NSObject **)&v1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = &v17;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_24B65E40C;
  *(void *)(v5 + 24) = v4;
  uint64_t v15 = sub_24B59DE88;
  uint64_t v16 = v5;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v12 = 1107296256;
  uint64_t v13 = sub_24B58EFF8;
  uint64_t v14 = &unk_26FE8EDA0;
  uint64_t v6 = _Block_copy(&aBlock);
  uint64_t v7 = v1;
  swift_retain();
  swift_release();
  dispatch_sync(v3, v6);
  _Block_release(v6);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    LOWORD(aBlock) = v17;
    uint64_t v12 = 100;
    char v10 = (*(uint64_t (**)(uint64_t, uint64_t *))((*MEMORY[0x263F8EED0] & *(void *)v7) + 0x540))(a1, &aBlock);
    swift_release();
    return v10 & 1;
  }
  return result;
}

CoreOC::ObjectCaptureSession::CaptureOptions __swiftcall ObjectCaptureSession.CaptureOptions.init()()
{
  *(_WORD *)uint64_t v0 = 0;
  *(void *)(v0 + 8) = 100;
  return result;
}

uint64_t ObjectCaptureSession.CaptureOptions.usePlaneFiltering.getter()
{
  return *v0;
}

uint64_t ObjectCaptureSession.CaptureOptions.usePlaneFiltering.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*ObjectCaptureSession.CaptureOptions.usePlaneFiltering.modify())()
{
  return nullsub_1;
}

uint64_t ObjectCaptureSession.CaptureOptions.useFreeformScanVolume.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t ObjectCaptureSession.CaptureOptions.useFreeformScanVolume.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*ObjectCaptureSession.CaptureOptions.useFreeformScanVolume.modify())()
{
  return nullsub_1;
}

uint64_t ObjectCaptureSession.CaptureOptions.freeformPointDensityThreshold.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t ObjectCaptureSession.CaptureOptions.freeformPointDensityThreshold.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*ObjectCaptureSession.CaptureOptions.freeformPointDensityThreshold.modify())()
{
  return nullsub_1;
}

uint64_t sub_24B6198F8(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v3 = *(unsigned char *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 1);
  uint64_t v5 = *(void *)(a2 + 8);
  sub_24B56CF38(a1, (uint64_t)v13, &qword_2697CC9A0);
  if (v14)
  {
    uint64_t v6 = (unsigned char *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isFreeformModeEnabled);
    swift_beginAccess();
    *uint64_t v6 = 1;
    v9[0] = v3;
    v9[1] = v4;
    uint64_t v10 = v5;
    char v7 = sub_24B6294EC(v9);
  }
  else
  {
    v11[0] = v3;
    v11[1] = v4;
    uint64_t v12 = v5;
    char v7 = sub_24B62C228(v11, v13[0], v13[1], v13[2], v13[3]);
  }
  return v7 & 1;
}

uint64_t sub_24B6199B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24B6823B0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B682380();
  uint64_t v10 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v10, v2);
  uint64_t v11 = sub_24B6824B0();
  os_log_type_t v12 = sub_24B682B30();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v21 = v2;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v23 = v1;
    char v14 = (uint8_t *)v13;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v22 = v6;
    uint64_t v16 = v15;
    uint64_t v25 = v15;
    *(_DWORD *)char v14 = 136380675;
    uint64_t v24 = sub_24B5627B8(0x29286873696E6966, 0xE800000000000000, &v25);
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v11, v12, "ObjectCaptureSession.%{private}s: Called finish().", v14, 0xCu);
    swift_arrayDestroy();
    uint64_t v17 = v16;
    uint64_t v6 = v22;
    MEMORY[0x24C5D6C00](v17, -1, -1);
    uint64_t v18 = v14;
    uint64_t v1 = v23;
    MEMORY[0x24C5D6C00](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v21);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_24B680CD8();
  OCSignPostsAriadneDbgCode();
  kdebug_trace();
  sub_24B680C48();
  OCSignPostsAriadneDbgCode();
  kdebug_trace();
  uint64_t v19 = sub_24B65E9D8(0xD000000000000017, 0x800000024B691660, "ObjectCaptureSession.%{private}s: pnp_measurement_window_end %{public}s");
  MEMORY[0x270FA5388](v19);
  *(&v21 - 2) = (uint64_t)v9;
  *(&v21 - 1) = v1;
  sub_24B682BD0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v25;
}

uint64_t sub_24B619D30@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  void (*v10)(uint64_t *__return_ptr);
  char v11;
  uint64_t v12;
  void *v13;
  NSObject *v14;
  os_log_type_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  os_log_t v22;
  uint64_t v23;
  uint64_t v25;
  os_log_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  uint64_t v6 = sub_24B6824D0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_24B61E0D0()) {
    goto LABEL_4;
  }
  uint64_t v10 = *(void (**)(uint64_t *__return_ptr))((*MEMORY[0x263F8EED0] & *a2) + 0x420);
  v10(&v30);
  if (v30 == 13)
  {
    sub_24B65A19C((id)0xD);
    sub_24B65A19C((id)0xD);
LABEL_4:
    uint64_t v30 = 17;
    sub_24B6356BC((void **)&v30);
    uint64_t v11 = 1;
    goto LABEL_9;
  }
  sub_24B65A19C((id)v30);
  sub_24B65A19C((id)0xD);
  os_log_type_t v12 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v12, v6);
  uint64_t v13 = a2;
  char v14 = sub_24B6824B0();
  uint64_t v15 = sub_24B682B20();
  uint64_t v16 = v15;
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v27 = v16;
    uint64_t v18 = v17;
    uint64_t v28 = swift_slowAlloc();
    uint64_t v30 = v28;
    *(_DWORD *)uint64_t v18 = 136380931;
    uint64_t v26 = v14;
    uint64_t v29 = sub_24B5627B8(0x29286873696E6966, 0xE800000000000000, &v30);
    uint64_t v19 = sub_24B682CD0();
    *(_WORD *)(v18 + 12) = 2082;
    uint64_t v25 = v18 + 14;
    ((void (*)(uint64_t *__return_ptr, uint64_t))v10)(&v29, v19);
    uint64_t v20 = sub_24B682820();
    uint64_t v29 = sub_24B5627B8(v20, v21, &v30);
    sub_24B682CD0();

    swift_bridgeObjectRelease();
    uint64_t v22 = v26;
    _os_log_impl(&dword_24B55E000, v26, (os_log_type_t)v27, "ObjectCaptureSession.%{private}s: Invalid state: %{public}s", (uint8_t *)v18, 0x16u);
    uint64_t v23 = v28;
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v23, -1, -1);
    MEMORY[0x24C5D6C00](v18, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v11 = 0;
LABEL_9:
  *a3 = v11;
  return sub_24B62F1C4(a1, MEMORY[0x263F90278], 0x29286873696E6966, 0xE800000000000000, "ObjectCaptureSession.%{private}s: finish() takes CMTime time = %{public}s ms");
}

uint64_t sub_24B61A080()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_24B6823B0();
  uint64_t v6 = *(void *)(v30 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = MEMORY[0x270FA5388](v30);
  uint64_t v28 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v29 = (char *)&v26 - v9;
  sub_24B682380();
  uint64_t v10 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v10, v2);
  uint64_t v11 = sub_24B6824B0();
  os_log_type_t v12 = sub_24B682B30();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v26 = v2;
    uint64_t v15 = v14;
    aBlock[0] = v14;
    uint64_t v27 = v1;
    *(_DWORD *)uint64_t v13 = 136380675;
    uint64_t v31 = sub_24B5627B8(0x29286C65636E6163, 0xE800000000000000, aBlock);
    uint64_t v1 = v27;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v11, v12, "ObjectCaptureSession.%{private}s: Called cancel()", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v15, -1, -1);
    MEMORY[0x24C5D6C00](v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v26);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  uint64_t v16 = *(NSObject **)&v1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  uint64_t v17 = v28;
  uint64_t v18 = v29;
  uint64_t v19 = v30;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v28, v29, v30);
  unint64_t v20 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v21 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v21 + v20, v17, v19);
  *(void *)(v21 + ((v7 + v20 + 7) & 0xFFFFFFFFFFFFFFF8)) = v1;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_24B65EDA8;
  *(void *)(v22 + 24) = v21;
  aBlock[4] = (uint64_t)sub_24B5A2598;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24B58EFF8;
  aBlock[3] = (uint64_t)&unk_26FE8EE18;
  uint64_t v23 = _Block_copy(aBlock);
  uint64_t v24 = v1;
  swift_retain();
  swift_release();
  dispatch_sync(v16, v23);
  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v18, v19);
  LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v23) {
    __break(1u);
  }
  return result;
}

uint64_t sub_24B61A4CC(uint64_t a1, void *a2)
{
  void (*v8)(uint64_t *__return_ptr);
  uint64_t v9;
  void *v10;
  NSObject *v11;
  os_log_type_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void v20[2];
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_24B61E0D0()) {
    goto LABEL_4;
  }
  uint64_t v8 = *(void (**)(uint64_t *__return_ptr))((*MEMORY[0x263F8EED0] & *a2) + 0x420);
  v8(&v24);
  if (v24 == 13)
  {
    sub_24B65A19C((id)0xD);
    sub_24B65A19C((id)0xD);
LABEL_4:
    uint64_t v24 = 4;
    sub_24B6356BC((void **)&v24);
    return sub_24B62F1C4(a1, MEMORY[0x263F90278], 0x29286C65636E6163, 0xE800000000000000, "ObjectCaptureSession.%{private}s: cancel() takes CMTime time = %{public}s ms");
  }
  sub_24B65A19C((id)v24);
  sub_24B65A19C((id)0xD);
  uint64_t v9 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  uint64_t v10 = a2;
  uint64_t v11 = sub_24B6824B0();
  os_log_type_t v12 = sub_24B682B20();
  uint64_t v13 = v12;
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v24 = v22;
    *(_DWORD *)uint64_t v14 = 136380931;
    uint64_t v21 = v13;
    uint64_t v23 = sub_24B5627B8(0x29286C65636E6163, 0xE800000000000000, &v24);
    uint64_t v15 = sub_24B682CD0();
    *(_WORD *)(v14 + 12) = 2082;
    v20[1] = v14 + 14;
    ((void (*)(uint64_t *__return_ptr, uint64_t))v8)(&v23, v15);
    uint64_t v16 = sub_24B682820();
    uint64_t v23 = sub_24B5627B8(v16, v17, &v24);
    sub_24B682CD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24B55E000, v11, (os_log_type_t)v21, "ObjectCaptureSession.%{private}s: Invalid state: %{public}s", (uint8_t *)v14, 0x16u);
    uint64_t v18 = v22;
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v18, -1, -1);
    MEMORY[0x24C5D6C00](v14, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return sub_24B62F1C4(a1, MEMORY[0x263F90278], 0x29286C65636E6163, 0xE800000000000000, "ObjectCaptureSession.%{private}s: cancel() takes CMTime time = %{public}s ms");
}

uint64_t sub_24B61A804()
{
  uint64_t v0 = sub_24B6825D0();
  uint64_t v38 = *(void *)(v0 - 8);
  uint64_t v39 = v0;
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_24B682640();
  uint64_t v36 = *(void *)(v3 - 8);
  uint64_t v37 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v35 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24B6824D0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_24B6823B0();
  uint64_t v9 = *(void *)(v34 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = MEMORY[0x270FA5388](v34);
  uint64_t v31 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v32 = (char *)&v29 - v12;
  sub_24B682380();
  uint64_t v13 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v13, v5);
  uint64_t v14 = sub_24B6824B0();
  os_log_type_t v15 = sub_24B682B30();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v30 = v2;
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    aBlock[0] = v17;
    uint64_t v29 = v5;
    *(_DWORD *)uint64_t v16 = 136380675;
    uint64_t v40 = sub_24B5627B8(0xD000000000000010, 0x800000024B68F320, aBlock);
    uint64_t v2 = v30;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v14, v15, "ObjectCaptureSession.%{private}s: Called takeManualShot()", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v17, -1, -1);
    MEMORY[0x24C5D6C00](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v29);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v18 = v32;
  uint64_t v19 = v33;
  uint64_t v30 = *(char **)&v33[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  unint64_t v20 = v31;
  uint64_t v21 = v34;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v31, v32, v34);
  unint64_t v22 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v23 + v22, v20, v21);
  *(void *)(v23 + ((v10 + v22 + 7) & 0xFFFFFFFFFFFFFFF8)) = v19;
  aBlock[4] = (uint64_t)sub_24B65EE78;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24B566C04;
  aBlock[3] = (uint64_t)&unk_26FE8EE68;
  uint64_t v24 = _Block_copy(aBlock);
  id v25 = v19;
  uint64_t v26 = v35;
  sub_24B6825F0();
  uint64_t v40 = MEMORY[0x263F8EE78];
  sub_24B65D13C((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
  sub_24B562F04((uint64_t *)&unk_2697CC490);
  sub_24B5678F4((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
  uint64_t v27 = v39;
  sub_24B682D80();
  MEMORY[0x24C5D4CD0](0, v26, v2, v24);
  _Block_release(v24);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v2, v27);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v26, v37);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v18, v21);
  swift_release();
  return 1;
}

uint64_t sub_24B61ADC4(uint64_t a1, char *a2)
{
  uint64_t v70 = a2;
  uint64_t v3 = sub_24B6824D0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)v62 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  long long v65 = (char *)v62 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  os_log_type_t v64 = (char *)v62 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)v62 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v62 - v18;
  uint64_t v20 = sub_24B57CB70();
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v68 = v20;
  uint64_t v69 = v21;
  ((void (*)(char *))v21)(v19);
  unint64_t v22 = sub_24B6824B0();
  os_log_type_t v23 = sub_24B682B10();
  if (os_log_type_enabled(v22, v23))
  {
    v62[1] = v4 + 16;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v67 = a1;
    id v25 = (uint8_t *)v24;
    uint64_t v26 = (void *)swift_slowAlloc();
    uint64_t v66 = v4;
    uint64_t v27 = v26;
    id v72 = v26;
    char v63 = v17;
    *(_DWORD *)id v25 = 136380675;
    uint64_t v71 = sub_24B5627B8(0xD000000000000010, 0x800000024B68F320, (uint64_t *)&v72);
    uint64_t v17 = v63;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v22, v23, "ObjectCaptureSession.%{private}s: Enter scheduled takeManualShot() block.", v25, 0xCu);
    swift_arrayDestroy();
    uint64_t v28 = v27;
    uint64_t v4 = v66;
    MEMORY[0x24C5D6C00](v28, -1, -1);
    uint64_t v29 = v25;
    a1 = v67;
    MEMORY[0x24C5D6C00](v29, -1, -1);
  }

  uint64_t v30 = *(uint64_t (**)(char *, uint64_t))(v4 + 8);
  uint64_t v31 = v30(v19, v3);
  uint64_t v32 = v70;
  (*(void (**)(id *__return_ptr, uint64_t))((*MEMORY[0x263F8EED0] & *(void *)v70) + 0x420))(&v72, v31);
  if (v72 == (id)15)
  {
    sub_24B65A19C((id)0xF);
    sub_24B65A19C((id)0xF);
    if (sub_24B61E214())
    {
      uint64_t v67 = a1;
      uint64_t v33 = *(void *)&v32[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureManager];
      if (v33)
      {
        uint64_t v66 = v4;
        uint64_t v34 = swift_allocObject();
        *(void *)(v34 + 16) = v32;
        swift_retain();
        uint64_t v35 = v32;
        char v36 = sub_24B5AACAC();
        char v37 = (*(uint64_t (**)(void, uint64_t (*)(), uint64_t))(*(void *)v33 + 488))(v36 & 1, sub_24B66F1E4, v34);
        swift_release();
        if (v37)
        {
          uint64_t v17 = v64;
          v69(v64, v68, v3);
          uint64_t v38 = sub_24B6824B0();
          os_log_type_t v39 = sub_24B682B30();
          if (os_log_type_enabled(v38, v39))
          {
            uint64_t v40 = (void (*)(char *, uint64_t))v30;
            uint64_t v41 = (uint8_t *)swift_slowAlloc();
            id v42 = (void *)swift_slowAlloc();
            id v72 = v42;
            uint64_t v43 = v3;
            *(_DWORD *)uint64_t v41 = 136380675;
            uint64_t v71 = sub_24B5627B8(0xD000000000000010, 0x800000024B68F320, (uint64_t *)&v72);
            sub_24B682CD0();
            char v44 = "ObjectCaptureSession.%{private}s: Manual capture succeeded.";
LABEL_21:
            _os_log_impl(&dword_24B55E000, v38, v39, v44, v41, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x24C5D6C00](v42, -1, -1);
            MEMORY[0x24C5D6C00](v41, -1, -1);

            swift_release();
            goto LABEL_22;
          }
        }
        else
        {
          uint64_t v17 = v65;
          v69(v65, v68, v3);
          uint64_t v38 = sub_24B6824B0();
          os_log_type_t v39 = sub_24B682B20();
          if (os_log_type_enabled(v38, v39))
          {
            uint64_t v40 = (void (*)(char *, uint64_t))v30;
            uint64_t v41 = (uint8_t *)swift_slowAlloc();
            id v42 = (void *)swift_slowAlloc();
            id v72 = v42;
            uint64_t v43 = v3;
            *(_DWORD *)uint64_t v41 = 136380675;
            uint64_t v71 = sub_24B5627B8(0xD000000000000010, 0x800000024B68F320, (uint64_t *)&v72);
            sub_24B682CD0();
            char v44 = "ObjectCaptureSession.%{private}s: Manual capture failed!";
            goto LABEL_21;
          }
        }

        swift_release();
      }
      else
      {
        v69(v17, v68, v3);
        uint64_t v57 = sub_24B6824B0();
        os_log_type_t v58 = sub_24B682B20();
        if (os_log_type_enabled(v57, v58))
        {
          uint64_t v40 = (void (*)(char *, uint64_t))v30;
          uint64_t v59 = (uint8_t *)swift_slowAlloc();
          uint64_t v60 = (void *)swift_slowAlloc();
          id v72 = v60;
          uint64_t v43 = v3;
          *(_DWORD *)uint64_t v59 = 136380675;
          uint64_t v71 = sub_24B5627B8(0xD000000000000010, 0x800000024B68F320, (uint64_t *)&v72);
          sub_24B682CD0();
          _os_log_impl(&dword_24B55E000, v57, v58, "ObjectCaptureSession.%{private}s: Failed to take manual shot, capture manager has not been initialized!", v59, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24C5D6C00](v60, -1, -1);
          MEMORY[0x24C5D6C00](v59, -1, -1);

LABEL_22:
          v40(v17, v43);
LABEL_26:
          a1 = v67;
          return sub_24B6210E4(a1, "=== ObjectCaptureSession takeManualShot() takes CMTime time = %{public}s ms");
        }
      }
      v30(v17, v3);
      goto LABEL_26;
    }
    v69(v10, v68, v3);
    uint64_t v52 = sub_24B6824B0();
    os_log_type_t v53 = sub_24B682B20();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v70 = (char *)v30;
      os_log_type_t v54 = (uint8_t *)swift_slowAlloc();
      os_log_type_t v55 = (void *)swift_slowAlloc();
      id v72 = v55;
      *(_DWORD *)os_log_type_t v54 = 136380675;
      uint64_t v71 = sub_24B5627B8(0xD000000000000010, 0x800000024B68F320, (uint64_t *)&v72);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v52, v53, "ObjectCaptureSession.%{private}s: Manual shot is not allowed. Could be either not in scanning mode, or max number of images reached on device and no over capture enabled, or no mesh anchor has been received in area mode!", v54, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v55, -1, -1);
      MEMORY[0x24C5D6C00](v54, -1, -1);

      id v50 = v10;
      uint64_t v51 = v3;
      goto LABEL_13;
    }

    uint64_t v56 = v10;
LABEL_16:
    v30(v56, v3);
    return sub_24B6210E4(a1, "=== ObjectCaptureSession takeManualShot() takes CMTime time = %{public}s ms");
  }
  sub_24B65A19C(v72);
  sub_24B65A19C((id)0xF);
  v69(v7, v68, v3);
  uint64_t v45 = v7;
  uint64_t v46 = sub_24B6824B0();
  os_log_type_t v47 = sub_24B682B20();
  if (!os_log_type_enabled(v46, v47))
  {

    uint64_t v56 = v45;
    goto LABEL_16;
  }
  uint64_t v70 = (char *)v30;
  long long v48 = (uint8_t *)swift_slowAlloc();
  long long v49 = (void *)swift_slowAlloc();
  id v72 = v49;
  *(_DWORD *)long long v48 = 136380675;
  uint64_t v71 = sub_24B5627B8(0xD000000000000010, 0x800000024B68F320, (uint64_t *)&v72);
  sub_24B682CD0();
  _os_log_impl(&dword_24B55E000, v46, v47, "ObjectCaptureSession.%{private}s: Received manual shot request outside of capturing mode, ignoring the request!", v48, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x24C5D6C00](v49, -1, -1);
  MEMORY[0x24C5D6C00](v48, -1, -1);

  id v50 = v45;
  uint64_t v51 = v3;
LABEL_13:
  ((void (*)(char *, uint64_t))v70)(v50, v51);
  return sub_24B6210E4(a1, "=== ObjectCaptureSession takeManualShot() takes CMTime time = %{public}s ms");
}

uint64_t sub_24B61B7EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24B6825D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24B682640();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_24B6824D0();
  uint64_t v10 = *(void *)(v33 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v33);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (*(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v0) + 0x4B8))(v11);
  if (result)
  {
    __break(1u);
  }
  else
  {
    uint64_t v29 = v9;
    uint64_t v30 = v7;
    uint64_t v31 = v5;
    uint64_t v32 = v6;
    uint64_t v15 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v15, v33);
    uint64_t v16 = sub_24B6824B0();
    os_log_type_t v17 = sub_24B682B30();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v28 = v3;
      uint64_t v19 = v18;
      uint64_t v27 = swift_slowAlloc();
      aBlock[0] = v27;
      *(_DWORD *)uint64_t v19 = 136380931;
      uint64_t v34 = sub_24B5627B8(0xD000000000000017, 0x800000024B68F340, aBlock);
      sub_24B682CD0();
      *(_WORD *)(v19 + 12) = 2081;
      uint64_t v34 = sub_24B5627B8(0xD000000000000017, 0x800000024B68F340, aBlock);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v16, v17, "ObjectCaptureSession.%{private}s: Called %{private}s.", (uint8_t *)v19, 0x16u);
      uint64_t v20 = v27;
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v20, -1, -1);
      uint64_t v21 = v19;
      uint64_t v3 = v28;
      MEMORY[0x24C5D6C00](v21, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v33);
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v1;
    aBlock[4] = (uint64_t)sub_24B65EF30;
    aBlock[5] = v22;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_24B566C04;
    aBlock[3] = (uint64_t)&unk_26FE8EEB8;
    os_log_type_t v23 = _Block_copy(aBlock);
    id v24 = v1;
    id v25 = v29;
    sub_24B6825F0();
    uint64_t v34 = MEMORY[0x263F8EE78];
    sub_24B65D13C((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
    sub_24B562F04((uint64_t *)&unk_2697CC490);
    sub_24B5678F4((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
    uint64_t v26 = v31;
    sub_24B682D80();
    MEMORY[0x24C5D4CD0](0, v25, v26, v23);
    _Block_release(v23);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v26, v2);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v25, v32);
    return swift_release();
  }
  return result;
}

uint64_t sub_24B61BD0C(char *a1)
{
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v44 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v44 - v10;
  uint64_t v12 = sub_24B57CB70();
  uint64_t v13 = *(void (**)(char *))(v3 + 16);
  uint64_t v49 = v12;
  v13(v11);
  uint64_t v14 = sub_24B6824B0();
  os_log_type_t v15 = sub_24B682B10();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v46 = v9;
    uint64_t v16 = swift_slowAlloc();
    os_log_type_t v47 = v6;
    os_log_type_t v17 = (uint8_t *)v16;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v48 = v3;
    uint64_t v19 = v18;
    uint64_t v51 = v18;
    uint64_t v45 = v13;
    *(_DWORD *)os_log_type_t v17 = 136380675;
    id v50 = (id)sub_24B5627B8(0xD000000000000017, 0x800000024B68F340, &v51);
    uint64_t v13 = v45;
    uint64_t v9 = v46;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v14, v15, "ObjectCaptureSession.%{private}s: Enter scheduled resetCapturePoseGraph() block.", v17, 0xCu);
    swift_arrayDestroy();
    uint64_t v20 = v19;
    uint64_t v3 = v48;
    MEMORY[0x24C5D6C00](v20, -1, -1);
    uint64_t v21 = v17;
    uint64_t v6 = v47;
    MEMORY[0x24C5D6C00](v21, -1, -1);
  }

  uint64_t v22 = *(void (**)(char *, uint64_t))(v3 + 8);
  v22(v11, v2);
  if (sub_24B61E378())
  {
    uint64_t v23 = *(void *)&a1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureManager];
    if (v23)
    {
      id v24 = *(void (**)(uint64_t))(*(void *)v23 + 520);
      uint64_t v25 = swift_retain();
      v24(v25);
      return swift_release();
    }
    ((void (*)(char *, uint64_t, uint64_t))v13)(v9, v49, v2);
    uint64_t v40 = sub_24B6824B0();
    os_log_type_t v41 = sub_24B682B20();
    if (os_log_type_enabled(v40, v41))
    {
      id v42 = (uint8_t *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      uint64_t v51 = v43;
      *(_DWORD *)id v42 = 136380675;
      id v50 = (id)sub_24B5627B8(0xD000000000000017, 0x800000024B68F340, &v51);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v40, v41, "ObjectCaptureSession.%{private}s: Failed to reset pose graph, capture manager has not been initialized", v42, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v43, -1, -1);
      MEMORY[0x24C5D6C00](v42, -1, -1);
    }

    uint64_t v38 = v9;
    goto LABEL_13;
  }
  ((void (*)(char *, uint64_t, uint64_t))v13)(v6, v49, v2);
  uint64_t v27 = a1;
  uint64_t v28 = sub_24B6824B0();
  os_log_type_t v29 = sub_24B682B20();
  if (!os_log_type_enabled(v28, v29))
  {

    uint64_t v38 = v6;
LABEL_13:
    uint64_t v39 = v2;
    return ((uint64_t (*)(char *, uint64_t))v22)(v38, v39);
  }
  uint64_t v30 = swift_slowAlloc();
  uint64_t v31 = swift_slowAlloc();
  uint64_t v49 = v2;
  uint64_t v32 = v31;
  uint64_t v51 = v31;
  *(_DWORD *)uint64_t v30 = 136381187;
  id v50 = (id)sub_24B5627B8(0xD000000000000017, 0x800000024B68F340, &v51);
  uint64_t v33 = sub_24B682CD0();
  *(_WORD *)(v30 + 12) = 2082;
  uint64_t v48 = v3;
  (*(void (**)(id *__return_ptr, uint64_t))((*MEMORY[0x263F8EED0] & *(void *)v27) + 0x420))(&v50, v33);
  uint64_t v34 = sub_24B682820();
  os_log_type_t v47 = v6;
  id v50 = (id)sub_24B5627B8(v34, v35, &v51);
  sub_24B682CD0();

  swift_bridgeObjectRelease();
  *(_WORD *)(v30 + 22) = 2082;
  id v50 = *(id *)&v27[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_stateOnPause];
  sub_24B66DD1C(v50);
  uint64_t v36 = sub_24B682820();
  id v50 = (id)sub_24B5627B8(v36, v37, &v51);
  sub_24B682CD0();

  swift_bridgeObjectRelease();
  _os_log_impl(&dword_24B55E000, v28, v29, "ObjectCaptureSession.%{private}s: Capture pose graph reset disallowed in state %{public}s (stateOnPause = %{public}s", (uint8_t *)v30, 0x20u);
  swift_arrayDestroy();
  MEMORY[0x24C5D6C00](v32, -1, -1);
  MEMORY[0x24C5D6C00](v30, -1, -1);

  uint64_t v38 = v47;
  uint64_t v39 = v49;
  return ((uint64_t (*)(char *, uint64_t))v22)(v38, v39);
}

float static ObjectCaptureSession.captureTriggerGyroUpperBound()()
{
  return *(float *)sub_24B5AA31C();
}

uint64_t sub_24B61C394(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  __n128 v21 = a3;
  __n128 v22 = a4;
  __n128 v19 = a1;
  __n128 v20 = a2;
  uint64_t v5 = sub_24B6825D0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24B682640();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *(void *)&v4[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  uint64_t v13 = swift_allocObject();
  __n128 v14 = v20;
  *(__n128 *)(v13 + 16) = v19;
  *(__n128 *)(v13 + 32) = v14;
  __n128 v15 = v22;
  *(__n128 *)(v13 + 48) = v21;
  *(__n128 *)(v13 + 64) = v15;
  *(void *)(v13 + 80) = v4;
  aBlock[4] = sub_24B65EF70;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B566C04;
  aBlock[3] = &unk_26FE8EF08;
  uint64_t v16 = _Block_copy(aBlock);
  os_log_type_t v17 = v4;
  sub_24B6825F0();
  uint64_t v24 = MEMORY[0x263F8EE78];
  sub_24B65D13C((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
  sub_24B562F04((uint64_t *)&unk_2697CC490);
  sub_24B5678F4((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
  sub_24B682D80();
  MEMORY[0x24C5D4CD0](0, v12, v8, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

void sub_24B61C674(void *a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, int8x16_t a5)
{
  float32x4_t v26 = a4;
  int8x16_t v27 = a5;
  float32x4_t v24 = a2;
  float32x4_t v25 = a3;
  uint64_t v6 = sub_24B6824D0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24B5F94A8(v24, v25, v26, v27);
  if (v10)
  {
    OCBoundingBox.init(transform:)(&v28, (simd_float4x4 *)v10);
    simd_float4 v11 = v28.transform.columns[1];
    simd_float4 v12 = v28.transform.columns[2];
    simd_float4 v13 = v28.transform.columns[3];
    __n128 v14 = (simd_float4 *)((char *)a1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformBoundingBox);
    *__n128 v14 = v28.transform.columns[0];
    v14[1] = v11;
    v14[2] = v12;
    v14[3] = v13;
    v14[4].i8[0] = 0;
    uint64_t v15 = *(void *)((char *)a1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_meshManager);
    if (!v15) {
      return;
    }
    uint64_t v16 = *(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & *a1) + 0x4B8);
    uint64_t v17 = swift_retain();
    if (v16(v17))
    {
      uint64_t v18 = *(void *)((char *)a1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureOptions);
      if (v18 == 2)
      {
LABEL_15:
        __break(1u);
        return;
      }
      if ((v18 & 0x100) != 0)
      {
        (*(void (**)(__n128, __n128, __n128, __n128))(*(void *)v15 + 392))((__n128)v24, (__n128)v25, (__n128)v26, (__n128)v27);
        swift_release();
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v19 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v19, v6);
  __n128 v20 = sub_24B6824B0();
  os_log_type_t v21 = sub_24B682B20();
  if (os_log_type_enabled(v20, v21))
  {
    __n128 v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    v28.transform.columns[0].i64[0] = v23;
    *(_DWORD *)__n128 v22 = 136380675;
    uint64_t v29 = sub_24B5627B8(0xD000000000000026, 0x800000024B691610, (uint64_t *)&v28);
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v20, v21, "ObjectCaptureSession.%{private}s: Invalid bounding box in area mode!", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v23, -1, -1);
    MEMORY[0x24C5D6C00](v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_24B61C9A8()
{
  if ((*((unsigned char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugAdjustedCaptureCoolDown + 8) & 1) == 0) {
    return *(void *)((char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugAdjustedCaptureCoolDown);
  }
  uint64_t v1 = *(void *)((char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureManager);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v0) + 0x4B8);
  uint64_t v3 = swift_retain();
  char v4 = v2(v3);
  double v5 = (*(double (**)(void))(*(void *)v1 + 560))(v4 & 1);
  swift_release();
  return *(void *)&v5;
}

uint64_t sub_24B61CAA8()
{
  uint64_t v0 = sub_24B6824D0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  char v4 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v2);
  id v72 = (char *)&v64 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v64 - v7;
  uint64_t v9 = sub_24B6823B0();
  uint64_t v68 = *(void *)(v9 - 8);
  uint64_t v69 = v9;
  MEMORY[0x270FA5388](v9);
  simd_float4 v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B682380();
  sub_24B562F04((uint64_t *)&unk_2697CD150);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_24B684E60;
  uint64_t v67 = v11;
  sub_24B682390();
  uint64_t v13 = MEMORY[0x263F8D5B8];
  *(void *)(v12 + 56) = MEMORY[0x263F8D538];
  *(void *)(v12 + 64) = v13;
  *(double *)(v12 + 32) = v14 * 1000.0;
  uint64_t v15 = sub_24B6827F0();
  unint64_t v17 = v16;
  uint64_t v18 = sub_24B57CB70();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  uint64_t v74 = v18;
  uint64_t v75 = v1 + 16;
  os_log_type_t v73 = v19;
  ((void (*)(char *))v19)(v8);
  swift_bridgeObjectRetain();
  __n128 v20 = sub_24B6824B0();
  os_log_type_t v21 = sub_24B682B10();
  BOOL v22 = os_log_type_enabled(v20, v21);
  uint64_t v70 = v4;
  uint64_t v71 = v0;
  if (v22)
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v24 = v1;
    uint64_t v25 = swift_slowAlloc();
    *(void *)&long long v78 = v25;
    *(_DWORD *)uint64_t v23 = 136380931;
    uint64_t v76 = sub_24B5627B8(0xD00000000000003ALL, 0x800000024B691820, (uint64_t *)&v78);
    sub_24B682CD0();
    *(_WORD *)(v23 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v76 = sub_24B5627B8(v15, v17, (uint64_t *)&v78);
    sub_24B682CD0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24B55E000, v20, v21, "ObjectCaptureSession.%{private}s: takes CMTime time = %{public}s ms", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    uint64_t v26 = v25;
    uint64_t v1 = v24;
    uint64_t v0 = v71;
    MEMORY[0x24C5D6C00](v26, -1, -1);
    MEMORY[0x24C5D6C00](v23, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  int8x16_t v27 = *(void (**)(char *, uint64_t))(v1 + 8);
  v27(v8, v0);
  CoreOC::OCBoundingBox v28 = (void *)sub_24B6827A0();
  uint64_t v29 = self;
  id v30 = objc_msgSend(v29, sel_bundleWithIdentifier_, v28);

  if (!v30
    || (id v31 = objc_msgSend(v30, sel_infoDictionary), v30, !v31))
  {
    long long v78 = 0u;
    long long v79 = 0u;
LABEL_10:
    sub_24B5632A8((uint64_t)&v78, (uint64_t *)&unk_2697CCA30);
    goto LABEL_11;
  }
  uint64_t v32 = sub_24B682740();

  if (*(void *)(v32 + 16) && (unint64_t v33 = sub_24B562E8C(0x656C646E75424643, 0xEF6E6F6973726556), (v34 & 1) != 0))
  {
    sub_24B562F48(*(void *)(v32 + 56) + 32 * v33, (uint64_t)&v78);
  }
  else
  {
    long long v78 = 0u;
    long long v79 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v79 + 1)) {
    goto LABEL_10;
  }
  if (swift_dynamicCast())
  {
    uint64_t v36 = v76;
    unint64_t v35 = v77;
    uint64_t result = OCModulesGitHash();
    if (!result) {
      goto LABEL_34;
    }
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v35 = 0xE500000000000000;
  uint64_t v36 = 0x302E302E30;
  uint64_t result = OCModulesGitHash();
  if (!result)
  {
LABEL_34:
    __break(1u);
    return result;
  }
LABEL_12:
  sub_24B6828B0();
  *(void *)&long long v78 = v36;
  *((void *)&v78 + 1) = v35;
  swift_bridgeObjectRetain();
  sub_24B682890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24B682890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v38 = v78;
  uint64_t v39 = v72;
  v73(v72, v74, v0);
  swift_bridgeObjectRetain();
  uint64_t v40 = sub_24B6824B0();
  os_log_type_t v41 = sub_24B682B10();
  BOOL v42 = os_log_type_enabled(v40, v41);
  uint64_t v66 = v27;
  if (v42)
  {
    uint64_t v43 = swift_slowAlloc();
    uint64_t v44 = v1;
    uint64_t v45 = swift_slowAlloc();
    *(void *)&long long v78 = v45;
    *(_DWORD *)uint64_t v43 = 136380931;
    long long v65 = v29;
    uint64_t v76 = sub_24B5627B8(0xD00000000000003ALL, 0x800000024B691820, (uint64_t *)&v78);
    sub_24B682CD0();
    *(_WORD *)(v43 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v76 = sub_24B5627B8(v38, *((unint64_t *)&v38 + 1), (uint64_t *)&v78);
    sub_24B682CD0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24B55E000, v40, v41, "ObjectCaptureSession.%{private}s: CoreOCModules version: %{public}s", (uint8_t *)v43, 0x16u);
    swift_arrayDestroy();
    uint64_t v46 = v45;
    uint64_t v1 = v44;
    uint64_t v0 = v71;
    MEMORY[0x24C5D6C00](v46, -1, -1);
    MEMORY[0x24C5D6C00](v43, -1, -1);

    v27(v72, v0);
    uint64_t v29 = v65;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v27(v39, v0);
  }
  os_log_type_t v47 = v70;
  type metadata accessor for ObjectCaptureSession(0);
  id v48 = objc_msgSend(v29, sel_bundleForClass_, swift_getObjCClassFromMetadata());
  id v49 = objc_msgSend(v48, sel_infoDictionary);

  if (!v49)
  {
    long long v78 = 0u;
    long long v79 = 0u;
LABEL_24:
    sub_24B5632A8((uint64_t)&v78, (uint64_t *)&unk_2697CCA30);
    goto LABEL_25;
  }
  uint64_t v50 = sub_24B682740();

  if (*(void *)(v50 + 16) && (unint64_t v51 = sub_24B562E8C(0x656C646E75424643, 0xEF6E6F6973726556), (v52 & 1) != 0))
  {
    sub_24B562F48(*(void *)(v50 + 56) + 32 * v51, (uint64_t)&v78);
  }
  else
  {
    long long v78 = 0u;
    long long v79 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v79 + 1)) {
    goto LABEL_24;
  }
  if (!swift_dynamicCast())
  {
LABEL_25:
    unint64_t v54 = 0xE500000000000000;
    uint64_t v53 = 0x302E302E30;
    goto LABEL_26;
  }
  uint64_t v53 = v76;
  unint64_t v54 = v77;
LABEL_26:
  OCGitHash()();
  *(void *)&long long v78 = v53;
  *((void *)&v78 + 1) = v54;
  swift_bridgeObjectRetain();
  sub_24B682890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24B682890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v55 = v78;
  v73(v47, v74, v0);
  swift_bridgeObjectRetain();
  uint64_t v56 = sub_24B6824B0();
  os_log_type_t v57 = sub_24B682B10();
  if (os_log_type_enabled(v56, v57))
  {
    uint64_t v58 = swift_slowAlloc();
    uint64_t v59 = swift_slowAlloc();
    uint64_t v75 = v1;
    uint64_t v60 = v59;
    *(void *)&long long v78 = v59;
    *(_DWORD *)uint64_t v58 = 136380931;
    uint64_t v76 = sub_24B5627B8(0xD00000000000003ALL, 0x800000024B691820, (uint64_t *)&v78);
    sub_24B682CD0();
    *(_WORD *)(v58 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v76 = sub_24B5627B8(v55, *((unint64_t *)&v55 + 1), (uint64_t *)&v78);
    sub_24B682CD0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24B55E000, v56, v57, "ObjectCaptureSession.%{private}s: CoreOC version:  %{public}s", (uint8_t *)v58, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v60, -1, -1);
    MEMORY[0x24C5D6C00](v58, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v66(v47, v0);
  uint64_t v62 = v68;
  uint64_t v61 = v69;
  char v63 = v67;
  sub_24B568314();
  return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v63, v61);
}

uint64_t sub_24B61D524()
{
  uint64_t v0 = sub_24B6825D0();
  MEMORY[0x270FA5388](v0);
  uint64_t v1 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_24B66E858;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B566C04;
  aBlock[3] = &unk_26FE90800;
  _Block_copy(aBlock);
  sub_24B65D13C((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
  swift_retain();
  sub_24B562F04((uint64_t *)&unk_2697CC490);
  sub_24B5678F4((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
  sub_24B682D80();
  sub_24B6826C0();
  swift_allocObject();
  uint64_t v2 = sub_24B6826A0();
  swift_release();
  swift_release();
  return v2;
}

id sub_24B61D7C0()
{
  return sub_24B61DFA8(type metadata accessor for ObjectCaptureSession.BoundingBoxAnchor);
}

id sub_24B61D7F0(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, uint64_t (*a7)(void))
{
  v12.receiver = a1;
  v12.super_class = (Class)a7();
  return objc_msgSendSuper2(&v12, sel_initWithTransform_, a2, a3, a4, a5);
}

id sub_24B61D85C(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t))
{
  sub_24B6827D0();
  uint64_t v10 = (void *)sub_24B6827A0();
  uint64_t v11 = swift_bridgeObjectRelease();
  v18.receiver = a1;
  v18.super_class = (Class)a8(v11);
  id v12 = objc_msgSendSuper2(&v18, sel_initWithName_transform_, v10, a2, a3, a4, a5);

  return v12;
}

id sub_24B61D900(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  v6.receiver = a1;
  v6.super_class = (Class)a4();
  return objc_msgSendSuper2(&v6, sel_initWithAnchor_, a3);
}

id sub_24B61D964(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  v6.receiver = a1;
  v6.super_class = (Class)a4();
  return objc_msgSendSuper2(&v6, sel_initWithCoder_, a3);
}

id sub_24B61D9C8(void *a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(void))
{
  __n128 v20 = a4;
  __n128 v21 = a5;
  __n128 v18 = a2;
  __n128 v19 = a3;
  uint64_t v10 = sub_24B682410();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B6823F0();
  double v14 = (void *)sub_24B6823E0();
  uint64_t v15 = (objc_class *)a8();
  v22.receiver = a1;
  v22.super_class = v15;
  id v16 = objc_msgSendSuper2(&v22, sel_initWithIdentifier_transform_, v14, v18.n128_f64[0], v19.n128_f64[0], v20.n128_f64[0], v21.n128_f64[0]);

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v16;
}

id sub_24B61DB04(void *a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t))
{
  __n128 v23 = a4;
  __n128 v24 = a5;
  __n128 v21 = a2;
  __n128 v22 = a3;
  uint64_t v11 = sub_24B682410();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  double v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B6823F0();
  sub_24B6827D0();
  uint64_t v15 = (void *)sub_24B6823E0();
  id v16 = (void *)sub_24B6827A0();
  uint64_t v17 = swift_bridgeObjectRelease();
  __n128 v18 = (objc_class *)a9(v17);
  v25.receiver = a1;
  v25.super_class = v18;
  id v19 = objc_msgSendSuper2(&v25, sel_initWithIdentifier_transform_name_, v15, v16, v21.n128_f64[0], v22.n128_f64[0], v23.n128_f64[0], v24.n128_f64[0]);

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return v19;
}

id sub_24B61DC60(uint64_t a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, uint64_t a6, uint64_t a7, char a8, uint64_t (*a9)(uint64_t))
{
  uint64_t v11 = v9;
  __n128 v28 = a4;
  __n128 v29 = a5;
  __n128 v26 = a2;
  __n128 v27 = a3;
  uint64_t v15 = sub_24B562F04(&qword_2697CC460);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B563A6C(a1, (uint64_t)v17, &qword_2697CC460);
  uint64_t v18 = sub_24B682410();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18);
  __n128 v21 = 0;
  if (v20 != 1)
  {
    __n128 v21 = (void *)sub_24B6823E0();
    uint64_t v20 = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v17, v18);
  }
  if (a7)
  {
    __n128 v22 = (void *)sub_24B6827A0();
    uint64_t v20 = swift_bridgeObjectRelease();
  }
  else
  {
    __n128 v22 = 0;
  }
  __n128 v23 = (objc_class *)a9(v20);
  v30.receiver = v11;
  v30.super_class = v23;
  id v24 = objc_msgSendSuper2(&v30, sel_initWithIdentifier_transform_name_hiddenFromPublicDelegate_, v21, v22, a8 & 1, v26.n128_f64[0], v27.n128_f64[0], v28.n128_f64[0], v29.n128_f64[0]);

  sub_24B5632A8(a1, &qword_2697CC460);
  return v24;
}

id sub_24B61DE34(__n128 a1, __n128 a2, __n128 a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t (*a10)(uint64_t))
{
  __n128 v25 = a3;
  __n128 v26 = a4;
  __n128 v23 = a1;
  __n128 v24 = a2;
  uint64_t v14 = sub_24B562F04(&qword_2697CC460);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a7)
  {
    sub_24B6823F0();
    uint64_t v17 = sub_24B682410();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 0, 1, v17);
  }
  else
  {
    uint64_t v18 = sub_24B682410();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v16, 1, 1, v18);
  }
  if (a8)
  {
    uint64_t v19 = sub_24B6827D0();
    uint64_t v21 = v20;
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v21 = 0;
  }
  return sub_24B61DC60((uint64_t)v16, v23, v24, v25, v26, v19, v21, a9, a10);
}

id sub_24B61DF90()
{
  return sub_24B61DFA8(type metadata accessor for ObjectCaptureSession.ShotAnchor);
}

id sub_24B61DFA8(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t (*sub_24B61DFE0())()
{
  return j_j__swift_endAccess;
}

uint64_t (*sub_24B61E03C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_24B61E098()
{
  type metadata accessor for PGManager();
  uint64_t result = sub_24B5B4194();
  byte_2697CF718 = result & 1;
  return result;
}

uint64_t sub_24B61E0D0()
{
  void (*v1)(id *__return_ptr);
  uint64_t v2;
  BOOL v3;
  id v5;
  id v6;

  uint64_t v1 = *(void (**)(id *__return_ptr))((*MEMORY[0x263F8EED0] & *v0) + 0x420);
  v1(&v6);
  if (v6 == (id)11)
  {
    sub_24B65A19C((id)0xB);
    uint64_t v2 = 11;
LABEL_7:
    sub_24B65A19C((id)v2);
    return 1;
  }
  sub_24B65A19C(v6);
  sub_24B65A19C((id)0xB);
  v1(&v6);
  if (v6 == (id)12)
  {
    sub_24B65A19C((id)0xC);
    uint64_t v2 = 12;
    goto LABEL_7;
  }
  sub_24B65A19C(v6);
  sub_24B65A19C((id)0xC);
  v1(&v6);
  if (v6 == (id)14)
  {
    sub_24B65A19C((id)0xE);
    uint64_t v2 = 14;
    goto LABEL_7;
  }
  sub_24B65A19C(v6);
  sub_24B65A19C((id)0xE);
  v1(&v6);
  uint64_t v5 = v6;
  objc_super v3 = v6 == (id)15;
  if (v6 != (id)15) {
    sub_24B66DD1C(v6);
  }
  sub_24B65A19C(v5);
  sub_24B65A19C((id)0xF);
  sub_24B65A19C(v5);
  return v3;
}

uint64_t sub_24B61E214()
{
  uint64_t v1 = (void *)MEMORY[0x263F8EED0];
  (*(void (**)(id *__return_ptr))((*MEMORY[0x263F8EED0] & *v0) + 0x420))(v6);
  if (v6[0] != (id)15)
  {
    sub_24B65A19C(v6[0]);
    sub_24B65A19C((id)0xF);
LABEL_8:
    char v4 = 0;
    return v4 & 1;
  }
  sub_24B65A19C((id)0xF);
  sub_24B65A19C((id)0xF);
  uint64_t v2 = (char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_uuidToShotAnchorsMap;
  swift_beginAccess();
  uint64_t v3 = *(void *)(*(void *)v2 + 16);
  if (qword_2697CF6F0 != -1) {
    swift_once();
  }
  if (v3 >= qword_2697CF6F8 && *((unsigned char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_configuration) != 1) {
    goto LABEL_8;
  }
  char v4 = (*(uint64_t (**)(void))((*v1 & *v0) + 0x4B8))() ^ *((unsigned char *)v0
                                                          + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformCanAutoCaptureStart) ^ 1;
  return v4 & 1;
}

uint64_t sub_24B61E378()
{
  void (*v1)(id *__return_ptr);
  uint64_t v2;
  void *v3;
  uint64_t v5;
  id v6;

  uint64_t v1 = *(void (**)(id *__return_ptr))((*MEMORY[0x263F8EED0] & *v0) + 0x420);
  v1(&v6);
  uint64_t v2 = (uint64_t)v6;
  if (v6 == (id)15) {
    goto LABEL_5;
  }
  sub_24B65A19C(v6);
  sub_24B65A19C((id)0xF);
  v1(&v6);
  if (v6 == (id)13)
  {
    sub_24B65A19C((id)0xD);
    sub_24B65A19C((id)0xD);
    uint64_t v3 = *(void **)((char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_stateOnPause);
    if (v3 == (void *)15)
    {
      sub_24B65A19C((id)0xF);
      uint64_t v2 = 15;
LABEL_5:
      sub_24B65A19C((id)v2);
      sub_24B65A19C((id)0xF);
      return 1;
    }
    sub_24B66DD1C(*(id *)((char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_stateOnPause));
    sub_24B66DD1C(v3);
    sub_24B65A19C(v3);
    sub_24B65A19C((id)0xF);
    uint64_t v5 = (uint64_t)v3;
  }
  else
  {
    sub_24B65A19C(v6);
    uint64_t v5 = 13;
  }
  sub_24B65A19C((id)v5);
  return 0;
}

uint64_t sub_24B61E490()
{
  uint64_t v1 = sub_24B562F04(&qword_2697CC1F0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2697CF710 != -1) {
    swift_once();
  }
  if (byte_2697CF718 != 1) {
    return 0;
  }
  int v4 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_mobileSfMUserDefaultValue);
  if (v4 != 2) {
    return v4 & 1;
  }
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__mobileSfMEnabled) != 1) {
    return 0;
  }
  uint64_t v5 = v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_snapshotURL;
  swift_beginAccess();
  sub_24B563A6C(v5, (uint64_t)v3, &qword_2697CC1F0);
  uint64_t v6 = sub_24B6822E0();
  LODWORD(v5) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v3, 1, v6);
  sub_24B5632A8((uint64_t)v3, &qword_2697CC1F0);
  if (v5 == 1) {
    return 0;
  }
  if (*sub_24B5F8118()) {
    return 1;
  }
  else {
    return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__mobileSfMiPhoneOverride);
  }
}

uint64_t sub_24B61E628()
{
  (*(void (**)(id *__return_ptr))((*MEMORY[0x263F8EED0] & *v0) + 0x420))(&v2);
  if (v2 == (id)15)
  {
    sub_24B65A19C((id)0xF);
    sub_24B65A19C((id)0xF);
    if (*(void *)((char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pgManager) && (sub_24B61E490() & 1) != 0) {
      return *(unsigned __int8 *)sub_24B567D18();
    }
  }
  else
  {
    sub_24B65A19C(v2);
    sub_24B65A19C((id)0xF);
  }
  return 0;
}

void sub_24B61E6D0()
{
  void (*v1)(id *__return_ptr);
  uint64_t v2;
  id v3;

  if ((*((unsigned char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_tapPosition + 33) & 1) == 0)
  {
    uint64_t v1 = *(void (**)(id *__return_ptr))((*MEMORY[0x263F8EED0] & *v0) + 0x420);
    v1(&v3);
    if (v3 == (id)12)
    {
      sub_24B65A19C((id)0xC);
      id v2 = 12;
LABEL_6:
      sub_24B65A19C((id)v2);
      *((unsigned char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldRestartVoxelIntegration) = 1;
      return;
    }
    sub_24B65A19C(v3);
    sub_24B65A19C((id)0xC);
    v1(&v3);
    if (v3 == (id)14)
    {
      sub_24B65A19C((id)0xE);
      id v2 = 14;
      goto LABEL_6;
    }
    sub_24B65A19C(v3);
    sub_24B65A19C((id)0xE);
  }
}

void sub_24B61E7BC(uint64_t a1)
{
  id v2 = *(void **)a1;
  uint64_t v3 = *(void **)(a1 + 8);
  int v4 = *(void **)(a1 + 16);
  uint64_t v5 = *(void **)(a1 + 24);
  uint64_t v6 = *(void **)(a1 + 32);
  uint64_t v7 = *(void **)(a1 + 40);
  uint64_t v8 = *(void **)(a1 + 48);
  uint64_t v9 = *(void **)(a1 + 56);
  char v10 = *(unsigned char *)(a1 + 64);
  uint64_t v11 = (char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox;
  *(void *)uint64_t v11 = *(void *)a1;
  *((void *)v11 + 1) = v3;
  *((void *)v11 + 2) = v4;
  *((void *)v11 + 3) = v5;
  *((void *)v11 + 4) = v6;
  *((void *)v11 + 5) = v7;
  *((void *)v11 + 6) = v8;
  *((void *)v11 + 7) = v9;
  v11[64] = v10;
  if ((v10 & 1) == 0)
  {
    (*(void (**)(id *__return_ptr))((*MEMORY[0x263F8EED0] & *v1) + 0x420))(v12);
    if (v12[0] == (id)15)
    {
      sub_24B65A19C((id)0xF);
      sub_24B65A19C((id)0xF);
      v12[0] = v2;
      v12[1] = v3;
      void v12[2] = v4;
      v12[3] = v5;
      v12[4] = v6;
      v12[5] = v7;
      v12[6] = v8;
      v12[7] = v9;
      sub_24B67261C(*(void *)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_staticSegmentID));
    }
    else
    {
      sub_24B65A19C(v12[0]);
      sub_24B65A19C((id)0xF);
    }
  }
}

uint64_t sub_24B61E8C4()
{
  uint64_t v1 = sub_24B6824D0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t result = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBoxAnchor);
  if (v6)
  {
    uint64_t v7 = *(void **)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession);
    id v8 = v6;
    objc_msgSend(v7, sel_addAnchor_, v8);
    uint64_t v9 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v9, v1);
    id v10 = v8;
    uint64_t v11 = sub_24B6824B0();
    os_log_type_t v12 = sub_24B682B30();
    int v13 = v12;
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v28 = v26;
      *(_DWORD *)uint64_t v14 = 136380931;
      int v25 = v13;
      uint64_t v27 = sub_24B5627B8(0xD000000000000011, 0x800000024B68FE70, &v28);
      sub_24B682CD0();
      *(_WORD *)(v14 + 12) = 2082;
      v24[1] = v14 + 14;
      objc_msgSend(v10, sel_transform);
      *(int32x2_t *)&double v19 = sub_24B5F87F0(v15, v16, v17, v18);
      uint64_t v20 = MEMORY[0x24C5D4AA0](v19);
      unint64_t v22 = v21;
      swift_bridgeObjectRelease();
      uint64_t v27 = sub_24B5627B8(v20, v22, &v28);
      sub_24B682CD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24B55E000, v11, (os_log_type_t)v25, "ObjectCaptureSession.%{private}s: Added bounding box anchor: %{public}s", (uint8_t *)v14, 0x16u);
      uint64_t v23 = v26;
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v23, -1, -1);
      MEMORY[0x24C5D6C00](v14, -1, -1);
    }
    else
    {
    }
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  return result;
}

uint64_t (*sub_24B61EB94())()
{
  return j__swift_endAccess;
}

uint64_t sub_24B61EBF0(uint64_t a1)
{
  uint64_t v3 = sub_24B6825D0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_24B682640();
  uint64_t v7 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for OCCaptureData(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10 - 8);
  v18[1] = *(void *)&v1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  sub_24B659A1C(a1, (uint64_t)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for OCCaptureData);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v1;
  sub_24B65A134((uint64_t)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13, type metadata accessor for OCCaptureData);
  aBlock[4] = sub_24B66E47C;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B566C04;
  aBlock[3] = &unk_26FE906C0;
  int8x16_t v15 = _Block_copy(aBlock);
  int8x16_t v16 = v1;
  sub_24B6825F0();
  uint64_t v20 = MEMORY[0x263F8EE78];
  sub_24B65D13C((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
  sub_24B562F04((uint64_t *)&unk_2697CC490);
  sub_24B5678F4((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
  sub_24B682D80();
  MEMORY[0x24C5D4CD0](0, v9, v6, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v19);
  return swift_release();
}

uint64_t sub_24B61EF74(uint64_t a1, uint64_t a2)
{
  uint64_t v53 = a1;
  uint64_t v3 = sub_24B6825D0();
  uint64_t v59 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v58 = (char *)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24B682640();
  uint64_t v56 = *(void *)(v5 - 8);
  uint64_t v57 = v5;
  MEMORY[0x270FA5388](v5);
  long long v55 = (char *)v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for OCCaptureData(0);
  uint64_t v49 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v51 = v8;
  uint64_t v52 = (uint64_t)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24B682410();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v50 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v41 - v13;
  uint64_t v15 = sub_24B6824D0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  int8x16_t v18 = (char *)v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_24B57CB70();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  uint64_t v47 = v15;
  v20(v18, v19, v15);
  uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v46(v14, a2, v9);
  unint64_t v21 = sub_24B6824B0();
  os_log_type_t v22 = sub_24B682B10();
  int v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v45 = v3;
    uint64_t v25 = v24;
    uint64_t v43 = swift_slowAlloc();
    aBlock[0] = v43;
    *(_DWORD *)uint64_t v25 = 136380931;
    int v42 = v23;
    uint64_t v60 = sub_24B5627B8(0xD000000000000020, 0x800000024B691200, aBlock);
    uint64_t v44 = a2;
    sub_24B682CD0();
    *(_WORD *)(v25 + 12) = 2082;
    v41[1] = v25 + 14;
    sub_24B65D13C(&qword_2697CC400, MEMORY[0x263F07508]);
    uint64_t v26 = sub_24B682F90();
    uint64_t v60 = sub_24B5627B8(v26, v27, aBlock);
    a2 = v44;
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
    _os_log_impl(&dword_24B55E000, v21, (os_log_type_t)v42, "ObjectCaptureSession.%{private}s: Pushed oc capture data (stillImage) with identifier = %{public}s", (uint8_t *)v25, 0x16u);
    uint64_t v28 = v43;
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v28, -1, -1);
    uint64_t v29 = v25;
    uint64_t v3 = v45;
    MEMORY[0x24C5D6C00](v29, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
  }

  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v47);
  objc_super v30 = v54;
  uint64_t v47 = *(void *)&v54[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  uint64_t v31 = v52;
  sub_24B659A1C(v53, v52, type metadata accessor for OCCaptureData);
  uint64_t v32 = v50;
  v46(v50, a2, v9);
  unint64_t v33 = (*(unsigned __int8 *)(v49 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  unint64_t v34 = (v51 + *(unsigned __int8 *)(v10 + 80) + v33) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = v30;
  sub_24B65A134(v31, v35 + v33, type metadata accessor for OCCaptureData);
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v35 + v34, v32, v9);
  aBlock[4] = (uint64_t)sub_24B66E120;
  aBlock[5] = v35;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24B566C04;
  aBlock[3] = (uint64_t)&unk_26FE90670;
  uint64_t v36 = _Block_copy(aBlock);
  id v37 = v30;
  long long v38 = v55;
  sub_24B6825F0();
  uint64_t v60 = MEMORY[0x263F8EE78];
  sub_24B65D13C((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
  sub_24B562F04((uint64_t *)&unk_2697CC490);
  sub_24B5678F4((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
  uint64_t v39 = v58;
  sub_24B682D80();
  MEMORY[0x24C5D4CD0](0, v38, v39, v36);
  _Block_release(v36);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v39, v3);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v38, v57);
  return swift_release();
}

uint64_t sub_24B61F6E0(uint64_t a1)
{
  void (*v213)(void *__return_ptr, uint64_t *);
  uint64_t result;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  void *v223;
  char *v224;
  uint64_t v225;
  void *v226;
  uint64_t v227;
  uint64_t v228;
  int *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  uint64_t v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  char *v241;
  uint64_t (*v242)();
  void *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  __n128 v247;
  __n128 v248;
  __n128 v249;
  __n128 v250;
  _OWORD v251[43];
  id v252[87];
  void v253[4];
  uint64_t v254;
  unsigned char v255[688];
  unsigned char v256[688];
  unsigned char v257[688];
  void v258[86];
  void v259[86];
  void *v260[86];
  unsigned char v261[688];
  unsigned char v262[688];
  unsigned char v263[688];
  unsigned char v264[688];
  _OWORD v265[4];
  char v266;

  uint64_t v2 = (double *)MEMORY[0x270FA5388](a1);
  uint64_t v3 = type metadata accessor for OCBundleData(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v215 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24B562F04(&qword_2697CC9A8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v215 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24B6824D0();
  v232 = *(void *)(v9 - 8);
  v233 = v9;
  MEMORY[0x270FA5388](v9);
  v236 = (char *)&v215 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24B682C90();
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v215 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  v241 = (char *)&v215 - v16;
  MEMORY[0x270FA5388](v15);
  v240 = (uint64_t)&v215 - v17;
  v245 = type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  uint64_t v18 = MEMORY[0x270FA5388](v245);
  v235 = (uint64_t)&v215 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  v244 = (uint64_t)&v215 - v20;
  uint64_t v21 = sub_24B562F04((uint64_t *)&unk_2697CCA10);
  uint64_t v22 = MEMORY[0x270FA5388](v21 - 8);
  v228 = (uint64_t)&v215 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  v234 = (char *)&v215 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  v231 = (uint64_t)&v215 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)&v215 - v28;
  uint64_t v30 = sub_24B6823B0();
  v237 = *(void *)(v30 - 8);
  v238 = v30;
  MEMORY[0x270FA5388](v30);
  uint64_t v32 = (char *)&v215 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B680C54();
  OCSignPostsAriadneDbgCode();
  v227 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_traceDebugId;
  unint64_t v33 = sub_24B680D50();
  if ((*v33 & 0x8000000000000000) != 0) {
    goto LABEL_101;
  }
  v223 = v8;
  v224 = v14;
  v222 = v5;
  v225 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_frameIndex;
  v226 = v33;
  if ((*(void *)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_frameIndex) & 0x8000000000000000) != 0) {
    goto LABEL_101;
  }
  kdebug_trace();
  sub_24B682380();
  double v34 = *v2;
  uint64_t v35 = (void *)*((void *)v2 + 1);
  uint64_t v36 = (void *)*((void *)v2 + 2);
  id v37 = (void *)*((void *)v2 + 3);
  v230 = type metadata accessor for OCCaptureData(0);
  v246 = (uint64_t)v2 + *(int *)(v230 + 40);
  uint64_t v38 = v244;
  sub_24B659A1C(v246, v244, type metadata accessor for ObjectCaptureSession.Frame.Camera);
  id v39 = v37;
  id v40 = v35;
  id v41 = v36;
  sub_24B611A68(v40, v36, v37, v38, (uint64_t)v29, v34);
  int v42 = (int *)type metadata accessor for ObjectCaptureSession.Frame(0);
  uint64_t v43 = *((void *)v42 - 1);
  (*(void (**)(char *, void, uint64_t, int *))(v43 + 56))(v29, 0, 1, v42);
  uint64_t v44 = (uint64_t)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_currentFrame;
  swift_beginAccess();
  v247.n128_u64[0] = v44;
  sub_24B56C254((uint64_t)v29, v44, (uint64_t *)&unk_2697CCA10);
  swift_endAccess();
  v242 = sub_24B61DFE0();
  uint64_t v46 = v45;
  uint64_t v47 = *(unsigned int (**)(uint64_t, uint64_t, int *))(v43 + 48);
  v250.n128_u64[0] = v43 + 48;
  if (v47(v45, 1, v42) == 1) {
    goto LABEL_89;
  }
  uint64_t v48 = v1;
  uint64_t v49 = (uint64_t *)(v46 + v42[13]);
  sub_24B56CF38((uint64_t)v49, (uint64_t)v263, (uint64_t *)&unk_2697CC9B0);
  sub_24B56CF38((uint64_t)v263, (uint64_t)v264, (uint64_t *)&unk_2697CC9B0);
  int v50 = sub_24B66DE00((uint64_t)v264);
  v248.n128_u64[0] = (unint64_t)v2;
  v249.n128_u64[0] = (unint64_t)v47;
  v243 = v1;
  v239 = v32;
  if (v50 != 1)
  {
    uint64_t v51 = *((void *)v2 + 4);
    uint64_t v52 = *((void *)v2 + 5);
    uint64_t v53 = *((void *)v2 + 6);
    uint64_t v54 = *((void *)v2 + 7);
    uint64_t v55 = *((void *)v2 + 8);
    uint64_t v56 = *((void *)v2 + 9);
    uint64_t v57 = *((void *)v2 + 10);
    uint64_t v58 = *((void *)v2 + 11);
    uint64_t v59 = *((void *)v2 + 12);
    uint64_t v60 = *v49;
    v229 = v42;
    v221 = v49[7];
    *uint64_t v49 = v51;
    v49[1] = v52;
    v49[2] = v53;
    v49[3] = v54;
    v49[4] = v55;
    v49[5] = v56;
    v49[6] = v57;
    v49[7] = v58;
    v49[8] = v59;
    sub_24B659CF4(v51);
    uint64_t v48 = v243;
    int v42 = v229;
    uint64_t v47 = (unsigned int (*)(uint64_t, uint64_t, int *))v249.n128_u64[0];
    uint64_t v2 = (double *)v248.n128_u64[0];
    sub_24B5AE238(v60);
  }
  ((void (*)(unsigned char *, void))v242)(v262, 0);
  uint64_t v61 = sub_24B61DFE0();
  uint64_t v63 = v62;
  if (v47(v62, 1, v42) == 1) {
    goto LABEL_90;
  }
  uint64_t v64 = v63 + v42[13];
  sub_24B56CF38(v64, (uint64_t)v261, (uint64_t *)&unk_2697CC9B0);
  sub_24B56CF38((uint64_t)v261, (uint64_t)v262, (uint64_t *)&unk_2697CC9B0);
  if (sub_24B66DE00((uint64_t)v262) != 1)
  {
    long long v65 = *(void **)((char *)v2 + *(int *)(v230 + 44));
    uint64_t v66 = *(void **)(v64 + 600);
    *(void *)(v64 + 600) = v65;
    id v67 = v65;
  }
  ((void (*)(void **, void))v61)(v260, 0);
  uint64_t v68 = v246;
  uint64_t v69 = v240;
  sub_24B659A1C(v246 + *(int *)(v245 + 24), v240, MEMORY[0x263F8C968]);
  uint64_t v70 = sub_24B682C80();
  uint64_t v71 = *(void *)(v70 - 8);
  id v72 = *(void (**)(char *, uint64_t, uint64_t))(v71 + 56);
  uint64_t v73 = v71 + 56;
  uint64_t v74 = (uint64_t)v241;
  v230 = v70;
  v72(v241, 2, 2);
  char v75 = sub_24B682C70();
  uint64_t v76 = (uint64_t (*)(void))MEMORY[0x263F8C968];
  sub_24B65EF80(v74, MEMORY[0x263F8C968]);
  uint64_t v77 = sub_24B65EF80(v69, v76);
  if ((v75 & 1) == 0)
  {
    uint64_t v82 = sub_24B57CB70();
    uint64_t v83 = v232;
    uint64_t v84 = v233;
    uint64_t v85 = v236;
    (*(void (**)(char *, uint64_t, uint64_t))(v232 + 16))(v236, v82, v233);
    uint64_t v86 = sub_24B6824B0();
    os_log_type_t v87 = sub_24B682B10();
    if (os_log_type_enabled(v86, v87))
    {
      double v88 = (uint8_t *)swift_slowAlloc();
      float32x4_t v89 = (void *)swift_slowAlloc();
      v260[0] = v89;
      *(_DWORD *)double v88 = 136380675;
      v259[0] = sub_24B5627B8(0xD000000000000014, 0x800000024B690FC0, (uint64_t *)v260);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v86, v87, "ObjectCaptureSession.%{private}s: Camera tracking is not normal!", v88, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v89, -1, -1);
      MEMORY[0x24C5D6C00](v88, -1, -1);

      (*(void (**)(char *, uint64_t))(v83 + 8))(v236, v84);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v83 + 8))(v85, v84);
    }
    uint64_t v99 = (uint64_t)v239;
    sub_24B64D520();
    uint64_t v100 = v231;
    sub_24B563A6C(v247.n128_i64[0], v231, (uint64_t *)&unk_2697CCA10);
    if (((uint64_t (*)(uint64_t, uint64_t, int *))v249.n128_u64[0])(v100, 1, v42) != 1)
    {
      sub_24B682500();
      swift_release();
      uint64_t v101 = type metadata accessor for ObjectCaptureSession.Frame;
      uint64_t v102 = v100;
LABEL_83:
      sub_24B65EF80(v102, v101);
      sub_24B6210E4(v99, "=== ObjectCaptureSession processVideoData() takes CMTime time = %{public}s ms ===");
      return (*(uint64_t (**)(uint64_t, uint64_t))(v237 + 8))(v99, v238);
    }
    goto LABEL_91;
  }
  v233 = v73;
  v236 = (char *)v72;
  long long v78 = (void *)MEMORY[0x263F8EED0];
  long long v79 = *(uint64_t (**)())((*MEMORY[0x263F8EED0] & *v48) + 0x420);
  v241 = (char *)((*MEMORY[0x263F8EED0] & *v48) + 1056);
  v242 = v79;
  ((void (*)(void **__return_ptr, uint64_t))v79)(v260, v77);
  if (v260[0] == (void *)11)
  {
    sub_24B65A19C((id)0xB);
    sub_24B65A19C((id)0xB);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_24B682560();
    swift_release();
    swift_release();
    os_log_type_t v80 = v260[0];
    swift_getKeyPath();
    swift_getKeyPath();
    v260[0] = (void *)12;
    v48;
    sub_24B682570();
    v260[0] = v80;
    sub_24B612878(v260);
    uint64_t v81 = (uint64_t)v80;
  }
  else
  {
    sub_24B65A19C(v260[0]);
    uint64_t v81 = 11;
  }
  sub_24B65A19C((id)v81);
  uint64_t v90 = (uint64_t)v234;
  uint64_t v91 = v68;
  v240 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureManager;
  if (*(void *)((char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureManager)
    || ((*(uint64_t (**)(void))((*v78 & *v48) + 0x4B8))() & 1) == 0)
  {
    goto LABEL_25;
  }
  ((void (*)(void **__return_ptr))v242)(v260);
  if (v260[0] != (void *)15)
  {
    sub_24B65A19C(v260[0]);
    sub_24B65A19C((id)0xF);
    goto LABEL_25;
  }
  sub_24B65A19C((id)0xF);
  sub_24B65A19C((id)0xF);
  if (*((unsigned char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_referenceTimestamp + 8))
  {
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  uint64_t v92 = *(void *)((char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl);
  if (!v92)
  {
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  uint64_t v93 = v42;
  double v94 = *(double *)((char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_referenceTimestamp);
  type metadata accessor for CaptureManager();
  memset(v265, 0, sizeof(v265));
  v266 = 1;
  uint64_t v95 = *(void *)((char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_internalMotionManager);
  uint64_t v96 = *(void **)((char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue);
  swift_retain();
  id v97 = v96;
  swift_retain();
  uint64_t v98 = sub_24B5A9BE4((uint64_t)v265, v92, v95, v97, v94);
  *(void *)((char *)v48 + v240) = v98;
  swift_release();
  int v42 = v93;
  uint64_t v90 = (uint64_t)v234;
LABEL_25:
  if ((*(uint64_t (**)(void))((*v78 & *v48) + 0x4B8))())
  {
    uint64_t v103 = 0;
    int64_t Width = v248.n128_u64[0];
    goto LABEL_40;
  }
  int64_t Width = v248.n128_u64[0];
  sub_24B62144C(v248.n128_u64[0]);
  sub_24B621BDC(Width);
  sub_24B62240C();
  sub_24B563A6C(v247.n128_i64[0], v90, (uint64_t *)&unk_2697CCA10);
  if (((uint64_t (*)(uint64_t, uint64_t, int *))v249.n128_u64[0])(v90, 1, v42) == 1)
  {
LABEL_97:
    __break(1u);
    goto LABEL_98;
  }
  uint64_t v105 = v90 + v42[13];
  sub_24B56CF38(v105, (uint64_t)v259, (uint64_t *)&unk_2697CC9B0);
  sub_24B56CF38((uint64_t)v259, (uint64_t)v260, (uint64_t *)&unk_2697CC9B0);
  if (sub_24B66DE00((uint64_t)v260) == 1)
  {
    sub_24B65EF80(v90, type metadata accessor for ObjectCaptureSession.Frame);
LABEL_37:
    uint64_t v103 = 0;
    goto LABEL_40;
  }
  uint64_t v106 = *(void **)(v105 + 608);
  swift_bridgeObjectRetain();
  sub_24B65EF80(v90, type metadata accessor for ObjectCaptureSession.Frame);
  if (!v106) {
    goto LABEL_37;
  }
  uint64_t v107 = *(__CVBuffer **)(Width + 8);
  int64_t Width = CVPixelBufferGetWidth(v107);
  size_t Height = CVPixelBufferGetHeight(v107);
  uint64_t v109 = v106[2];
  if (v109)
  {
    uint64_t v110 = Height;
    swift_bridgeObjectRetain();
    uint64_t v111 = v106;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_87:
    }
      uint64_t v111 = sub_24B654700(v106);
    uint64_t v112 = 0;
    unint64_t v113 = 0;
    float v114 = (float)Width;
    unint64_t v115 = v111[2];
    int64_t Width = v248.n128_u64[0];
    do
    {
      if (v113 >= v115)
      {
        __break(1u);
        goto LABEL_87;
      }
      *(float *)&uint64_t v116 = (float)((float)(COERCE_FLOAT(v106[v112 + 4]) + COERCE_FLOAT(v106[v112 + 4])) / v114) + -1.0;
      ++v113;
      unint64_t v117 = &v111[v112];
      *((_DWORD *)v117 + 8) = v116;
      *((float *)&v116 + 1) = (float)((float)(*((float *)&v106[v112 + 4] + 1) + *((float *)&v106[v112 + 4] + 1))
                                    / (float)v110)
                            + -1.0;
      v117[4] = v116;
      ++v112;
    }
    while (v109 != v113);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v111 = v106;
    int64_t Width = v248.n128_u64[0];
  }
  ObjectContour.init(points:)((uint64_t)v111, v258);
  uint64_t v103 = v258[0];
LABEL_40:
  sub_24B622AFC(Width);
  sub_24B623E20();
  sub_24B625030(Width);
  sub_24B625920();
  os_log_type_t v118 = (void *)((char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox);
  if (*((unsigned char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox + 64))
  {
    swift_bridgeObjectRelease();
    uint64_t v99 = (uint64_t)v239;
    unint64_t v119 = v247.n128_u64[0];
  }
  else
  {
    v229 = v42;
    uint64_t v120 = v118[6];
    uint64_t v121 = v118[7];
    uint64_t v122 = v118[5];
    v234 = (char *)v118[4];
    uint64_t v123 = v118[3];
    v231 = v118[2];
    v232 = v123;
    uint64_t v124 = v118[1];
    v215 = *v118;
    v216 = v124;
    int v125 = (char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform;
    uint64_t v127 = *(void *)((char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform);
    uint64_t v126 = *((void *)v125 + 1);
    uint64_t v128 = *((void *)v125 + 2);
    v219 = *((void *)v125 + 3);
    v220 = v126;
    uint64_t v130 = (char *)*((void *)v125 + 4);
    uint64_t v129 = *((void *)v125 + 5);
    v221 = *((void *)v125 + 6);
    v217 = *((void *)v125 + 7);
    v218 = v129;
    char v131 = v125[64];
    uint64_t v132 = (uint64_t)v224;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v236)(v224, 1, 2, v230);
    if (v131)
    {
      swift_bridgeObjectRelease();
      sub_24B65EF80(v132, MEMORY[0x263F8C968]);
      uint64_t v48 = v243;
      uint64_t v99 = (uint64_t)v239;
      int64_t Width = v248.n128_u64[0];
      uint64_t v91 = v246;
      unint64_t v119 = v247.n128_u64[0];
      int v42 = v229;
    }
    else
    {
      uint64_t v133 = type metadata accessor for ObjectCaptureSession.Frame.Object(0);
      uint64_t v134 = *(int *)(v133 + 24);
      v236 = v130;
      uint64_t v135 = v128;
      uint64_t v136 = v127;
      uint64_t v137 = v120;
      uint64_t v138 = v121;
      float32x4_t v139 = v223;
      sub_24B659A1C(v132, (uint64_t)v223 + v134, MEMORY[0x263F8C968]);
      uint64_t v140 = v216;
      void *v139 = v215;
      v139[1] = v140;
      uint64_t v141 = v232;
      v139[2] = v231;
      v139[3] = v141;
      v139[4] = v234;
      v139[5] = v122;
      v139[6] = v137;
      v139[7] = v138;
      uint64_t v142 = v220;
      v139[8] = v136;
      v139[9] = v142;
      uint64_t v143 = v219;
      v139[10] = v135;
      v139[11] = v143;
      uint64_t v144 = v218;
      v139[12] = v236;
      v139[13] = v144;
      uint64_t v145 = v217;
      uint64_t v146 = (uint64_t)v139;
      v139[14] = v221;
      v139[15] = v145;
      *(void *)((char *)v139 + *(int *)(v133 + 28)) = v103;
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v133 - 8) + 56))(v139, 0, 1, v133);
      unint64_t v119 = v247.n128_u64[0];
      swift_beginAccess();
      int v42 = v229;
      int v147 = ((uint64_t (*)(unint64_t, uint64_t, int *))v249.n128_u64[0])(v119, 1, v229);
      uint64_t v99 = (uint64_t)v239;
      if (v147 == 1)
      {
LABEL_99:
        __break(1u);
        goto LABEL_100;
      }
      sub_24B56C254(v146, v119 + v42[9], &qword_2697CC9A8);
      swift_endAccess();
      sub_24B65EF80(v132, MEMORY[0x263F8C968]);
      uint64_t v48 = v243;
      int64_t Width = v248.n128_u64[0];
      uint64_t v91 = v246;
    }
  }
  v148 = (unsigned int (*)(uint64_t, uint64_t, int *))v249.n128_u64[0];
  if (((uint64_t (*)(unint64_t, uint64_t, int *))v249.n128_u64[0])(v119, 1, v42) == 1) {
    goto LABEL_92;
  }
  *(_DWORD *)(v119 + v42[10]) = *(_DWORD *)((char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_coverage);
  id v149 = sub_24B61DFE0();
  uint64_t v151 = v150;
  if (v148(v150, 1, v42) == 1)
  {
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
    goto LABEL_97;
  }
  uint64_t v152 = v151 + v42[13];
  sub_24B56CF38(v152, (uint64_t)v259, (uint64_t *)&unk_2697CC9B0);
  sub_24B56CF38((uint64_t)v259, (uint64_t)v260, (uint64_t *)&unk_2697CC9B0);
  if (sub_24B66DE00((uint64_t)v260) != 1)
  {
    uint64_t v153 = *(void **)((char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_plane);
    uint64_t v154 = *(void **)(v152 + 416);
    *(void *)(v152 + 416) = v153;
    id v155 = v153;
  }
  ((void (*)(void *, void))v149)(v258, 0);
  float32x4_t v156 = sub_24B61DFE0();
  uint64_t v158 = v157;
  if (((uint64_t (*)(uint64_t, uint64_t, int *))v249.n128_u64[0])(v157, 1, v42) == 1) {
    goto LABEL_94;
  }
  v159 = (_OWORD *)(v158 + v42[13]);
  sub_24B56CF38((uint64_t)v159, (uint64_t)v257, (uint64_t *)&unk_2697CC9B0);
  sub_24B56CF38((uint64_t)v257, (uint64_t)v258, (uint64_t *)&unk_2697CC9B0);
  if (sub_24B66DE00((uint64_t)v258) != 1)
  {
    long long v160 = *(_OWORD *)((char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maskingVoxelCloud + 16);
    long long v161 = *(_OWORD *)((char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maskingVoxelCloud + 32);
    long long v162 = *(_OWORD *)((char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maskingVoxelCloud + 48);
    long long v163 = *(_OWORD *)((char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maskingVoxelCloud + 64);
    v159[32] = *(_OWORD *)((char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maskingVoxelCloud);
    v159[33] = v160;
    v159[34] = v161;
    v159[35] = v162;
    v159[36] = v163;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  ((void (*)(unsigned char *, void))v156)(v256, 0);
  sub_24B5FB5B4(*(__CVBuffer **)(Width + 8));
  int v165 = v164;
  v166 = sub_24B61DFE0();
  uint64_t v168 = v167;
  if (((uint64_t (*)(uint64_t, uint64_t, int *))v249.n128_u64[0])(v167, 1, v42) == 1) {
    goto LABEL_95;
  }
  uint64_t v169 = v168 + v42[13];
  sub_24B56CF38(v169, (uint64_t)v255, (uint64_t *)&unk_2697CC9B0);
  sub_24B56CF38((uint64_t)v255, (uint64_t)v256, (uint64_t *)&unk_2697CC9B0);
  if (sub_24B66DE00((uint64_t)v256) != 1) {
    *(_DWORD *)(v169 + 592) = v165;
  }
  uint64_t v170 = ((uint64_t (*)(id *, void))v166)(v252, 0);
  ((void (*)(id *__return_ptr, uint64_t))v242)(v252, v170);
  if (v252[0] == (id)15)
  {
    sub_24B65A19C((id)0xF);
    sub_24B65A19C((id)0xF);
    uint64_t v171 = *(void *)((char *)v48 + v240);
    if (v171)
    {
      swift_retain();
      v172 = sub_24B61DFE0();
      uint64_t v174 = v173;
      if (((uint64_t (*)(uint64_t, uint64_t, int *))v249.n128_u64[0])(v173, 1, v42) == 1)
      {
LABEL_98:
        __break(1u);
        goto LABEL_99;
      }
      uint64_t v175 = v174 + v42[13];
      sub_24B56CF38(v175, (uint64_t)v251, (uint64_t *)&unk_2697CC9B0);
      sub_24B56CF38((uint64_t)v251, (uint64_t)v252, (uint64_t *)&unk_2697CC9B0);
      if (sub_24B66DE00((uint64_t)v252) != 1)
      {
        *(void *)(v175 + 680) = (*(uint64_t (**)(void))(*(void *)v171 + 568))();
        swift_bridgeObjectRelease();
      }
      ((void (*)(void *, void))v172)(v253, 0);
      swift_release();
      int64_t Width = v248.n128_u64[0];
    }
  }
  else
  {
    sub_24B65A19C(v252[0]);
    sub_24B65A19C((id)0xF);
  }
  sub_24B64D520();
  uint64_t v176 = v228;
  sub_24B563A6C(v247.n128_i64[0], v228, (uint64_t *)&unk_2697CCA10);
  if (((uint64_t (*)(uint64_t, uint64_t, int *))v249.n128_u64[0])(v176, 1, v42) == 1) {
    goto LABEL_96;
  }
  sub_24B682500();
  swift_release();
  sub_24B65EF80(v176, type metadata accessor for ObjectCaptureSession.Frame);
  uint64_t v177 = v235;
  uint64_t v178 = sub_24B659A1C(v91, v235, type metadata accessor for ObjectCaptureSession.Frame.Camera);
  v179 = (float32x4_t *)((char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_worldToMobileSfMTransform);
  if ((*((unsigned char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_worldToMobileSfMTransform + 64) & 1) == 0)
  {
    float32x4_t v180 = v179[1];
    float32x4_t v181 = v179[2];
    float32x4_t v182 = v179[3];
    float32x4_t v183 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(*v179, COERCE_FLOAT(*(_OWORD *)(v91 + 48))), v180, *(float32x2_t *)(v91 + 48), 1), v181, *(float32x4_t *)(v91 + 48), 2), v182, *(float32x4_t *)(v91 + 48), 3);
    float32x4_t v184 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(*v179, COERCE_FLOAT(*(_OWORD *)(v91 + 64))), v180, *(float32x2_t *)(v91 + 64), 1), v181, *(float32x4_t *)(v91 + 64), 2), v182, *(float32x4_t *)(v91 + 64), 3);
    float32x4_t v185 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(*v179, COERCE_FLOAT(*(_OWORD *)(v91 + 80))), v180, *(float32x2_t *)(v91 + 80), 1), v181, *(float32x4_t *)(v91 + 80), 2), v182, *(float32x4_t *)(v91 + 80), 3);
    float32x4_t v186 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(*v179, COERCE_FLOAT(*(_OWORD *)(v91 + 96))), v180, *(float32x2_t *)(v91 + 96), 1), v181, *(float32x4_t *)(v91 + 96), 2), v182, *(float32x4_t *)(v91 + 96), 3);
    v187 = (float32x4_t *)(v177 + *(int *)(v245 + 36));
    float32x4_t *v187 = v183;
    v187[1] = v184;
    v187[2] = v185;
    v187[3] = v186;
    v187[4].i8[0] = 0;
  }
  if (*((unsigned char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugWriteAllFramesData) == 1)
  {
    ((void (*)(id *__return_ptr, uint64_t))v242)(v252, v178);
    if (v252[0] == (id)15)
    {
      sub_24B65A19C((id)0xF);
      sub_24B65A19C((id)0xF);
      v188 = *(void **)(Width + 32);
      if (v188)
      {
        v189 = *(void **)(Width + 88);
        v250.n128_u64[0] = *(void *)(Width + 96);
        v249.n128_u64[0] = (unint64_t)v189;
        v190 = *(void **)(Width + 80);
        v191 = *(void **)(v248.n128_u64[0] + 72);
        v192 = *(void **)(v248.n128_u64[0] + 64);
        v193 = *(void **)(v248.n128_u64[0] + 56);
        v194 = *(void **)(v248.n128_u64[0] + 48);
        uint64_t v195 = v99;
        v196 = *(void **)(v248.n128_u64[0] + 40);
        double v197 = *(double *)v248.n128_u64[0];
        v252[0] = v188;
        v252[1] = v196;
        v252[2] = v194;
        v252[3] = v193;
        v252[4] = v192;
        v252[5] = v191;
        v252[6] = v190;
        v252[7] = v189;
        v252[8] = (id)v250.n128_u64[0];
        uint64_t v198 = v244;
        sub_24B659A1C(v235, v244, type metadata accessor for ObjectCaptureSession.Frame.Camera);
        swift_bridgeObjectRetain();
        uint64_t v99 = v195;
        swift_bridgeObjectRetain();
        uint64_t v91 = v246;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v48 = v243;
        swift_bridgeObjectRetain();
        int64_t Width = v248.n128_u64[0];
        swift_bridgeObjectRetain();
        uint64_t v177 = v235;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v199 = (uint64_t)v222;
        sub_24B673644((uint64_t)v252, v198, (uint64_t)v222, v197);
        sub_24B64E820();
        sub_24B682500();
        swift_release();
        sub_24B65EF80(v199, type metadata accessor for OCBundleData);
      }
    }
    else
    {
      sub_24B65A19C(v252[0]);
      sub_24B65A19C((id)0xF);
    }
  }
  if (*sub_24B5F81CC() == 1)
  {
    ((void (*)(id *__return_ptr))v242)(v252);
    if (v252[0] == (id)15)
    {
      sub_24B65A19C((id)0xF);
      sub_24B65A19C((id)0xF);
      v200 = *(void **)(Width + 104);
      if (v200)
      {
        id v201 = v200;
        uint64_t DataBuffer = OCNonModularSPI_ADJasperPointCloud_CreateDataBuffer();
        if (DataBuffer)
        {
          v203 = (void *)DataBuffer;
          type metadata accessor for TemporalDepthPointCloud();
          double v204 = *(double *)Width;
          long long v205 = *(_OWORD *)(v91 + 16);
          v251[0] = *(_OWORD *)v91;
          v251[1] = v205;
          __n128 v206 = *(__n128 *)(v91 + 48);
          v251[2] = *(_OWORD *)(v91 + 32);
          v249 = *(__n128 *)(v91 + 64);
          v250 = v206;
          __n128 v207 = *(__n128 *)(v91 + 80);
          v247 = *(__n128 *)(v91 + 96);
          v248 = v207;
          id v208 = v203;
          sub_24B5A3E9C(v251, (uint64_t)v252, v250, v249, v248, v247, COERCE_DOUBLE(0x5A000000780));
          sub_24B5A437C((uint64_t)v208, (uint64_t)v252, v204);
          uint64_t v210 = v209;
          uint64_t v211 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_temporalDepthPointCloudCircularBuffer;
          uint64_t v212 = *(void *)((char *)v48
                           + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_temporalDepthPointCloudCircularBuffer);
          if (v212
            || (sub_24B562F04((uint64_t *)&unk_2697CCD20),
                v253[0] = v210,
                swift_retain(),
                *(void *)((char *)v48 + v211) = sub_24B67FAF0(91, (uint64_t)v253),
                swift_release(),
                (uint64_t v212 = *(void *)((char *)v48 + v211)) != 0))
          {
            v254 = v210;
            v213 = *(void (**)(void *__return_ptr, uint64_t *))(*(void *)v212 + 264);
            swift_retain();
            v213(v253, &v254);
            swift_release();
            swift_release();

            swift_release();
          }
          else
          {
            swift_release();
          }
          uint64_t v177 = v235;
        }
        else
        {
        }
      }
    }
    else
    {
      sub_24B65A19C(v252[0]);
      sub_24B65A19C((id)0xF);
    }
  }
  sub_24B680C60();
  OCSignPostsAriadneDbgCode();
  if ((*v226 & 0x8000000000000000) == 0 && (*(void *)((char *)v48 + v225) & 0x8000000000000000) == 0)
  {
    kdebug_trace();
    uint64_t v101 = type metadata accessor for ObjectCaptureSession.Frame.Camera;
    uint64_t v102 = v177;
    goto LABEL_83;
  }
LABEL_101:
  uint64_t result = sub_24B682EE0();
  __break(1u);
  return result;
}

uint64_t sub_24B6210E4(uint64_t a1, const char *a2)
{
  uint64_t v3 = sub_24B6824D0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24B6823B0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B682380();
  sub_24B562F04((uint64_t *)&unk_2697CD150);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_24B684E60;
  sub_24B682390();
  uint64_t v12 = MEMORY[0x263F8D5B8];
  *(void *)(v11 + 56) = MEMORY[0x263F8D538];
  *(void *)(v11 + 64) = v12;
  *(double *)(v11 + 32) = v13 * 1000.0;
  uint64_t v29 = sub_24B6827F0();
  unint64_t v15 = v14;
  uint64_t v16 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v16, v3);
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_24B6824B0();
  os_log_type_t v18 = sub_24B682B10();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v28 = v3;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v27 = v7;
    uint64_t v20 = (uint8_t *)v19;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v26 = v8;
    uint64_t v22 = v21;
    uint64_t v31 = v21;
    uint64_t v25 = a2;
    *(_DWORD *)uint64_t v20 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_24B5627B8(v29, v15, &v31);
    sub_24B682CD0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24B55E000, v17, v18, v25, v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v22, -1, -1);
    MEMORY[0x24C5D6C00](v20, -1, -1);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v28);
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v10, v27);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

void sub_24B62144C(void *a1)
{
  void (*v27)(id *__return_ptr);
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  void *v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint8_t *v41;
  void *v42;
  void *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  id v48;

  uint64_t v2 = v1;
  uint64_t v4 = sub_24B682C90();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24B6824D0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  unint64_t v14 = (char *)&v43 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v43 - v16;
  os_log_type_t v18 = (void *)MEMORY[0x263F8EED0];
  if ((*((unsigned char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__voxelIntegrationEnabled) & 1) == 0)
  {
    (*(void (**)(id *__return_ptr, uint64_t))((*MEMORY[0x263F8EED0] & *v1) + 0x420))(&v48, v15);
    if (v48 == (id)15)
    {
      sub_24B65A19C((id)0xF);
      sub_24B65A19C((id)0xF);
      return;
    }
    sub_24B65A19C(v48);
    sub_24B65A19C((id)0xF);
  }
  if (*((unsigned char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldRestartVoxelIntegration) == 1)
  {
    uint64_t v46 = v11;
    uint64_t v19 = sub_24B57CC7C();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v17, v19, v7);
    uint64_t v20 = sub_24B6824B0();
    os_log_type_t v21 = sub_24B682B30();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v44 = v14;
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = (void *)swift_slowAlloc();
      uint64_t v43 = a1;
      uint64_t v24 = v23;
      uint64_t v48 = v23;
      uint64_t v45 = v8;
      *(_DWORD *)uint64_t v22 = 136380675;
      uint64_t v47 = sub_24B5627B8(0xD000000000000017, 0x800000024B6910B0, (uint64_t *)&v48);
      unint64_t v14 = v44;
      uint64_t v8 = v45;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v20, v21, "ObjectCaptureSession.%{private}s: Got new tap point, trying to restart voxel integration!", v22, 0xCu);
      swift_arrayDestroy();
      uint64_t v25 = v24;
      a1 = v43;
      MEMORY[0x24C5D6C00](v25, -1, -1);
      uint64_t v26 = v22;
      os_log_type_t v18 = (void *)MEMORY[0x263F8EED0];
      MEMORY[0x24C5D6C00](v26, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v17, v7);
    sub_24B63A7F8(a1);
    uint64_t v11 = v46;
  }
  uint64_t v27 = *(void (**)(id *__return_ptr))((*v18 & *v2) + 0x420);
  v27(&v48);
  if (v48 == (id)12)
  {
    sub_24B65A19C((id)0xC);
    uint64_t v28 = 12;
    goto LABEL_15;
  }
  sub_24B65A19C(v48);
  sub_24B65A19C((id)0xC);
  v27(&v48);
  if (v48 == (id)14)
  {
    sub_24B65A19C((id)0xE);
    uint64_t v28 = 14;
    goto LABEL_15;
  }
  sub_24B65A19C(v48);
  sub_24B65A19C((id)0xE);
  v27(&v48);
  if (v48 == (id)15)
  {
    sub_24B65A19C((id)0xF);
    uint64_t v28 = 15;
LABEL_15:
    sub_24B65A19C((id)v28);
    type metadata accessor for OCCaptureData(0);
    type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
    uint64_t v29 = sub_24B682C80();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v6, 2, 2, v29);
    uint64_t v30 = sub_24B682C70();
    sub_24B65EF80((uint64_t)v6, MEMORY[0x263F8C968]);
    if (v30)
    {
      sub_24B63C3F8((unint64_t)a1);
      sub_24B63D96C(v31);
    }
    else
    {
      uint64_t v32 = sub_24B57CC7C();
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v14, v32, v7);
      unint64_t v33 = sub_24B6824B0();
      double v34 = sub_24B682B30();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = (uint8_t *)swift_slowAlloc();
        uint64_t v36 = (void *)swift_slowAlloc();
        uint64_t v48 = v36;
        *(_DWORD *)uint64_t v35 = 136380675;
        uint64_t v47 = sub_24B5627B8(0xD000000000000017, 0x800000024B6910B0, (uint64_t *)&v48);
        sub_24B682CD0();
        _os_log_impl(&dword_24B55E000, v33, v34, "ObjectCaptureSession.%{private}s: Dropping the frame because ARKit tracking state is not normal!", v35, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v36, -1, -1);
        MEMORY[0x24C5D6C00](v35, -1, -1);

        (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
      }
    }
    return;
  }
  sub_24B65A19C(v48);
  sub_24B65A19C((id)0xF);
  if (__ROR8__(0xEEEEEEEEEEEEEEEFLL * *(void *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_frameIndex)+ 0x888888888888888, 1) <= 0x888888888888888uLL)
  {
    id v37 = sub_24B57CC7C();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v37, v7);
    uint64_t v38 = sub_24B6824B0();
    id v39 = sub_24B682B10();
    if (os_log_type_enabled(v38, v39))
    {
      id v40 = v8;
      id v41 = (uint8_t *)swift_slowAlloc();
      int v42 = (void *)swift_slowAlloc();
      uint64_t v48 = v42;
      *(_DWORD *)id v41 = 136380675;
      uint64_t v47 = sub_24B5627B8(0xD000000000000017, 0x800000024B6910B0, (uint64_t *)&v48);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v38, v39, "ObjectCaptureSession.%{private}s: Didn't process input frame because the state is not ready, detecting or scanning!", v41, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v42, -1, -1);
      MEMORY[0x24C5D6C00](v41, -1, -1);

      (*(void (**)(char *, uint64_t))(v40 + 8))(v11, v7);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    }
  }
}

void sub_24B621BDC(uint64_t a1)
{
  uint64_t v3 = sub_24B6824D0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)v53 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)v53 - v12;
  (*(void (**)(id *__return_ptr, uint64_t))((*MEMORY[0x263F8EED0] & *v1) + 0x420))(v70, v11);
  if (v70[0] == (id)14)
  {
    uint64_t v69 = a1;
    sub_24B65A19C((id)0xE);
    sub_24B65A19C((id)0xE);
    unint64_t v14 = *(void **)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_plane);
    if (!v14) {
      goto LABEL_7;
    }
    uint64_t v15 = (char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_tapPosition;
    if (*((unsigned char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_tapPosition + 33)) {
      goto LABEL_7;
    }
    unint64_t v17 = *((void *)v15 + 2);
    unint64_t v16 = *((void *)v15 + 3);
    char v18 = v15[32];
    long long v72 = *(_OWORD *)v15;
    unint64_t v73 = v17;
    unint64_t v74 = v16;
    char v75 = v18 & 1;
    if (v18) {
      goto LABEL_7;
    }
    uint64_t v19 = (char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pointCloud;
    uint64_t v68 = (void *)v3;
    uint64_t v20 = v4;
    unint64_t v21 = v16;
    swift_beginAccess();
    unint64_t v22 = v21;
    uint64_t v4 = v20;
    uint64_t v3 = (uint64_t)v68;
    uint64_t v23 = *(void **)v19;
    if (!*(void *)v19
      || (uint64_t v24 = (__n128 *)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_initialCameraTransform),
          (*((unsigned char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_initialCameraTransform + 64) & 1) != 0))
    {
LABEL_7:
      if (*((unsigned char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_tapPosition + 33))
      {
        uint64_t v25 = sub_24B57CB70();
        (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v25, v3);
        uint64_t v26 = sub_24B6824B0();
        os_log_type_t v27 = sub_24B682B20();
        if (os_log_type_enabled(v26, v27))
        {
          uint64_t v28 = (uint8_t *)swift_slowAlloc();
          uint64_t v29 = (void *)swift_slowAlloc();
          v70[0] = v29;
          *(_DWORD *)uint64_t v28 = 136380675;
          uint64_t v71 = sub_24B5627B8(0xD000000000000015, 0x800000024B691090, (uint64_t *)v70);
          sub_24B682CD0();
          _os_log_impl(&dword_24B55E000, v26, v27, "ObjectCaptureSession.%{private}s: Skipped bounding box detection because tap position is not available!", v28, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24C5D6C00](v29, -1, -1);
          MEMORY[0x24C5D6C00](v28, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      }
      else if (*((unsigned char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_tapPosition + 32))
      {
        uint64_t v35 = sub_24B57CB70();
        (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v10, v35, v3);
        uint64_t v36 = sub_24B6824B0();
        os_log_type_t v37 = sub_24B682B20();
        if (os_log_type_enabled(v36, v37))
        {
          uint64_t v38 = (uint8_t *)swift_slowAlloc();
          id v39 = (void *)swift_slowAlloc();
          v70[0] = v39;
          *(_DWORD *)uint64_t v38 = 136380675;
          uint64_t v71 = sub_24B5627B8(0xD000000000000015, 0x800000024B691090, (uint64_t *)v70);
          sub_24B682CD0();
          _os_log_impl(&dword_24B55E000, v36, v37, "ObjectCaptureSession.%{private}s: Skipped bounding box detection because world point is not available!", v38, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24C5D6C00](v39, -1, -1);
          MEMORY[0x24C5D6C00](v38, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
      }
      else if (!v14)
      {
        uint64_t v30 = sub_24B57CB70();
        (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v13, v30, v3);
        uint64_t v31 = sub_24B6824B0();
        os_log_type_t v32 = sub_24B682B20();
        if (os_log_type_enabled(v31, v32))
        {
          unint64_t v33 = (uint8_t *)swift_slowAlloc();
          double v34 = (void *)swift_slowAlloc();
          v70[0] = v34;
          *(_DWORD *)unint64_t v33 = 136380675;
          uint64_t v71 = sub_24B5627B8(0xD000000000000015, 0x800000024B691090, (uint64_t *)v70);
          sub_24B682CD0();
          _os_log_impl(&dword_24B55E000, v31, v32, "ObjectCaptureSession.%{private}s: Skipped bounding box detection because plane is not available!", v33, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24C5D6C00](v34, -1, -1);
          MEMORY[0x24C5D6C00](v33, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v4 + 8))(v13, v3);
      }
    }
    else
    {
      id v40 = *(void **)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maskingManager);
      if (v40)
      {
        id v41 = v19;
        v42.n128_u64[0] = v17;
        v42.n128_u64[1] = v22;
        __n128 v67 = v42;
        uint64_t v43 = (void *)*((void *)v19 + 2);
        uint64_t v54 = (void *)*((void *)v19 + 1);
        v53[1] = v43;
        uint64_t v44 = (void *)*((void *)v19 + 4);
        uint64_t v66 = *((void *)v19 + 3);
        uint64_t v45 = (void *)*((void *)v19 + 6);
        uint64_t v68 = (void *)*((void *)v19 + 5);
        uint64_t v47 = (void *)*((void *)v19 + 7);
        uint64_t v46 = (void *)*((void *)v19 + 8);
        uint64_t v49 = (void *)*((void *)v19 + 9);
        uint64_t v48 = (void *)*((void *)v19 + 10);
        __n128 v65 = v24[3];
        __n128 v64 = v24[2];
        int v50 = (void *)*((void *)v41 + 11);
        __n128 v63 = v24[1];
        __n128 v62 = *v24;
        v70[0] = v23;
        v70[1] = v54;
        v70[2] = v43;
        v70[4] = v44;
        v70[5] = v68;
        v70[6] = v45;
        v70[7] = v47;
        v70[8] = v46;
        v70[9] = v49;
        uint64_t v58 = v46;
        v70[10] = v48;
        v70[11] = v50;
        uint64_t v57 = v49;
        uint64_t v59 = v48;
        unsigned int v61 = *((unsigned __int8 *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugMaskingVoxel);
        uint64_t v56 = (void (**)(uint64_t, id, long long *, id *, void, __n128, __n128, __n128, __n128, __n128))(*v40 + 288);
        uint64_t v55 = *v56;
        uint64_t v51 = (uint64_t)v23;
        uint64_t v60 = (uint64_t)v23;
        id v52 = v14;
        sub_24B659AEC(v51);
        swift_retain();
        v55(v69, v52, &v72, v70, v61, v67, v62, v63, v64, v65);
        swift_release();

        sub_24B659B3C(v60);
      }
    }
  }
  else
  {
    sub_24B65A19C(v70[0]);
    sub_24B65A19C((id)0xE);
  }
}

uint64_t sub_24B62240C()
{
  uint64_t v1 = sub_24B6824D0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24B562F04((uint64_t *)&unk_2697CCA10);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_24B61E628();
  if (result)
  {
    uint64_t v80 = *(void *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__mobileSfMPointCloudBuffer);
    if (v80)
    {
      unint64_t v9 = *(void *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__scaleWorldToObjectTransform + 8);
      uint64_t v10 = *(void *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__scaleWorldToObjectTransform);
      v78.n128_u64[0] = *(void *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__scaleWorldToObjectTransform + 24);
      v78.n128_u64[1] = v9;
      uint64_t v74 = *(void *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__scaleWorldToObjectTransform + 16);
      uint64_t v75 = v10;
      uint64_t v11 = *(uint64_t (**)(void, void, void))(v0
                                                             + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__scaleWorldToObjectTransform
                                                             + 40);
      uint64_t v12 = *(void *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__scaleWorldToObjectTransform + 32);
      unint64_t v13 = *(void *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__scaleWorldToObjectTransform + 48);
      uint64_t v76 = *(void *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__scaleWorldToObjectTransform + 56);
      uint64_t v77 = v11;
      unint64_t v72 = v13;
      uint64_t v73 = v12;
      uint64_t v71 = v0;
      uint64_t v14 = v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_currentFrame;
      swift_beginAccess();
      uint64_t v15 = type metadata accessor for ObjectCaptureSession.Frame(0);
      uint64_t v16 = *(void *)(v15 - 8);
      unint64_t v17 = *(uint64_t (**)(void, void, void))(v16 + 48);
      uint64_t v18 = v16 + 48;
      if (v17(v14, 1, v15) == 1)
      {
        uint64_t result = swift_retain();
        __break(1u);
      }
      else
      {
        uint64_t v19 = v14 + *(int *)(v15 + 48);
        uint64_t v70 = *(uint64_t (**)())v19;
        v69.n128_u64[0] = *(void *)(v19 + 8);
        v68.n128_u64[0] = *(void *)(v19 + 16);
        v67.n128_u64[0] = *(void *)(v19 + 32);
        unint64_t v20 = *(void *)(v19 + 48);
        uint64_t v65 = *(void *)(v19 + 56);
        v66.n128_u64[0] = v20;
        long long v64 = *(_OWORD *)(v19 + 64);
        uint64_t v79 = v15;
        *(void *)uint64_t v19 = v80;
        *(void *)(v19 + 8) = 0;
        *(void *)(v19 + 16) = 0;
        *(void *)(v19 + 24) = 0;
        unint64_t v21 = v78.n128_u64[1];
        *(void *)(v19 + 32) = v75;
        *(void *)(v19 + 40) = v21;
        unint64_t v22 = v78.n128_u64[0];
        *(void *)(v19 + 48) = v74;
        *(void *)(v19 + 56) = v22;
        uint64_t v23 = v77;
        *(void *)(v19 + 64) = v73;
        *(void *)(v19 + 72) = v23;
        uint64_t v24 = v76;
        *(void *)(v19 + 80) = v72;
        *(void *)(v19 + 88) = v24;
        swift_endAccess();
        swift_retain_n();
        uint64_t v25 = v79;
        sub_24B659B3C((uint64_t)v70);
        sub_24B563A6C(v14, (uint64_t)v7, (uint64_t *)&unk_2697CCA10);
        uint64_t v76 = v18;
        uint64_t v77 = v17;
        uint64_t result = v17(v7, 1, v25);
        if (result != 1)
        {
          uint64_t v26 = (uint64_t *)&v7[*(int *)(v25 + 48)];
          uint64_t v27 = *v26;
          uint64_t v28 = v26[2];
          uint64_t v29 = v26[3];
          uint64_t v30 = v26[4];
          uint64_t v31 = v26[5];
          unint64_t v33 = (uint64_t (*)(void, void, void))v26[6];
          uint64_t v32 = v26[7];
          uint64_t v34 = v26[8];
          uint64_t v35 = v26[9];
          uint64_t v36 = v26[10];
          uint64_t v37 = v26[11];
          uint64_t v38 = *v26;
          uint64_t v73 = v26[1];
          uint64_t v74 = v28;
          uint64_t v75 = v29;
          v78.n128_u64[0] = v30;
          v78.n128_u64[1] = v31;
          sub_24B659AEC(v38);
          sub_24B65EF80((uint64_t)v7, type metadata accessor for ObjectCaptureSession.Frame);
          if (!v27) {
            return swift_release();
          }
          if ((*(unsigned char *)(v71 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugSurfaceGeometryData) & 1) == 0)
          {
            swift_release();
            uint64_t v58 = v27;
            return sub_24B659B3C(v58);
          }
          unint64_t v72 = v34;
          uint64_t v70 = sub_24B61DFE0();
          uint64_t v40 = v39;
          uint64_t v41 = v79;
          uint64_t result = v77(v39, 1, v79);
          if (result != 1)
          {
            __n128 v69 = v78;
            v42.n128_u64[0] = (unint64_t)v33;
            uint64_t v65 = v32;
            v42.n128_u64[1] = v32;
            __n128 v68 = v42;
            v42.n128_u64[0] = v72;
            v42.n128_u64[1] = v35;
            __n128 v67 = v42;
            v42.n128_u64[0] = v36;
            v42.n128_u64[1] = v37;
            __n128 v66 = v42;
            uint64_t v43 = v40 + *(int *)(v41 + 52);
            sub_24B56CF38(v43, (uint64_t)v85, (uint64_t *)&unk_2697CC9B0);
            sub_24B56CF38((uint64_t)v85, (uint64_t)v86, (uint64_t *)&unk_2697CC9B0);
            if (sub_24B66DE00((uint64_t)v86) != 1)
            {
              sub_24B5F96D8(v27, 0, v83);
              simd_float4 v44 = v83[1];
              simd_float4 v45 = v83[2];
              simd_float4 v46 = v83[3];
              simd_float4 v47 = v83[4];
              *(simd_float4 *)(v43 + 80) = v83[0];
              *(simd_float4 *)(v43 + 96) = v44;
              *(simd_float4 *)(v43 + 112) = v45;
              *(simd_float4 *)(v43 + 128) = v46;
              *(simd_float4 *)(v43 + 144) = v47;
              swift_bridgeObjectRelease();
            }
            ((void (*)(unsigned char *, void))v70)(v82, 0);
            uint64_t v48 = v77;
            uint64_t v77 = v33;
            uint64_t v49 = sub_24B61DFE0();
            uint64_t v51 = v50;
            uint64_t v52 = v79;
            uint64_t result = v48(v50, 1, v79);
            if (result != 1)
            {
              uint64_t v53 = v51 + *(int *)(v52 + 52);
              sub_24B56CF38(v53, (uint64_t)v82, (uint64_t *)&unk_2697CC9B0);
              sub_24B56CF38((uint64_t)v82, (uint64_t)v83, (uint64_t *)&unk_2697CC9B0);
              if (sub_24B66DE00((uint64_t)v83) != 1)
              {
                sub_24B5F9D1C(v27, 0, v81, v69, v68, v67, v66);
                __n128 v54 = v81[1];
                __n128 v55 = v81[2];
                __n128 v56 = v81[3];
                __n128 v57 = v81[4];
                *(__n128 *)(v53 + 256) = v81[0];
                *(__n128 *)(v53 + 272) = v54;
                *(__n128 *)(v53 + 288) = v55;
                *(__n128 *)(v53 + 304) = v56;
                *(__n128 *)(v53 + 320) = v57;
                swift_bridgeObjectRelease();
              }
              ((void (*)(uint64_t *, void))v49)(&v84, 0);
              swift_release();
              uint64_t v58 = v27;
              return sub_24B659B3C(v58);
            }
LABEL_24:
            __break(1u);
            return result;
          }
LABEL_23:
          __break(1u);
          goto LABEL_24;
        }
      }
      __break(1u);
      goto LABEL_23;
    }
    uint64_t v59 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v59, v1);
    uint64_t v60 = sub_24B6824B0();
    os_log_type_t v61 = sub_24B682B30();
    if (os_log_type_enabled(v60, v61))
    {
      __n128 v62 = (uint8_t *)swift_slowAlloc();
      uint64_t v63 = swift_slowAlloc();
      v86[0] = v63;
      *(_DWORD *)__n128 v62 = 136380675;
      v85[0] = sub_24B5627B8(0xD000000000000025, 0x800000024B691060, v86);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v60, v61, "ObjectCaptureSession.%{private}s: MobileSfM point cloud is not available.", v62, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v63, -1, -1);
      MEMORY[0x24C5D6C00](v62, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return result;
}

void sub_24B622AFC(uint64_t a1)
{
  void (*v20)(id *__return_ptr, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  long long v42;
  long long v43;
  char v44;
  long long v45;
  char v46;
  long long v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t (*v53)(void);
  int v54;
  uint64_t v55;
  void *v56;
  id v57;
  long long *v58;
  long long v59;
  long long v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  void *v72;
  id v73;
  id v74;
  uint64_t v75;
  long long *v76;
  long long v77;
  long long v78;
  uint64_t v79;
  SEL *v80;
  int v81;
  unint64_t v82;
  uint64x2_t v83;
  int16x8_t v84;
  uint64_t v85;
  _DWORD *v91;
  uint64_t (*v92)(void *, uint64_t, void *, _OWORD *, void *, char *, char *);
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t (*v119)();
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unsigned int (*v123)(uint64_t, uint64_t, uint64_t);
  uint64_t v124;
  uint64_t (*v125)();
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  float v131;
  unsigned int v132;
  void *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  NSObject *v137;
  os_log_type_t v138;
  uint64_t v139;
  void *v140;
  void *v141;
  void *v142;
  void v143[3];
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  long long v151;
  long long v152;
  long long v153;
  long long v154;
  int v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  long long v162;
  long long v163;
  long long v164;
  long long v165;
  long long v166;
  uint64_t v167;
  void (*v168)(id *__return_ptr, uint64_t);
  long long v169;
  char *v170;
  long long v171;
  void *v172;
  unsigned char v173[688];
  void v174[86];
  uint64_t v175;
  void v176[86];
  id v177[86];
  char v178[4];
  float v179;
  long long v180;
  char v181;
  unsigned __int32 v182;
  char v183;
  uint64_t v184;
  void v185[4];
  long long v186;
  long long v187;
  long long v188;
  long long v189;
  long long v190;
  long long v191;
  long long v192;
  uint64_t v193;
  int v194;
  void v195[8];
  char v196;
  _OWORD v197[4];
  char v198;
  void v199[8];
  char v200;

  uint64_t v3 = sub_24B6824D0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v170 = (char *)v143 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24B682C80();
  *(void *)&uint64_t v171 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v143 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24B682C90();
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)v143 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)v143 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)v143 - v17;
  if (*((unsigned char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__explicitFeedbackEnabled) != 1) {
    return;
  }
  *(void *)&uint64_t v169 = a1;
  long long v160 = v4;
  long long v161 = v3;
  uint64_t v19 = (void *)MEMORY[0x263F8EED0];
  unint64_t v20 = *(void (**)(id *__return_ptr, uint64_t))((*MEMORY[0x263F8EED0] & *v1) + 0x420);
  unint64_t v21 = (*MEMORY[0x263F8EED0] & *v1) + 1056;
  v20(v177, v16);
  uint64_t v167 = v21;
  uint64_t v168 = v20;
  v172 = v1;
  if (v177[0] == (id)12)
  {
    sub_24B65A19C((id)0xC);
    unint64_t v22 = 12;
  }
  else
  {
    sub_24B65A19C(v177[0]);
    sub_24B65A19C((id)0xC);
    ((void (*)(id *__return_ptr))v20)(v177);
    if (v177[0] == (id)14)
    {
      sub_24B65A19C((id)0xE);
      unint64_t v22 = 14;
    }
    else
    {
      sub_24B65A19C(v177[0]);
      sub_24B65A19C((id)0xE);
      ((void (*)(id *__return_ptr))v20)(v177);
      if (v177[0] != (id)15)
      {
        sub_24B65A19C(v177[0]);
        sub_24B65A19C((id)0xF);
        return;
      }
      sub_24B65A19C((id)0xF);
      unint64_t v22 = 15;
    }
  }
  sub_24B65A19C((id)v22);
  sub_24B680CFC();
  OCSignPostsAriadneDbgCode();
  uint64_t v23 = kdebug_trace();
  uint64_t v24 = (*(uint64_t (**)(uint64_t))((*v19 & *v172) + 0x4B8))(v23);
  uint64_t v25 = (uint64_t *)v169;
  if (v24)
  {
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    *(void *)&uint64_t v171 = 0;
    uint64_t v30 = 0;
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    unint64_t v33 = 0;
    uint64_t v34 = 0;
    uint64_t v35 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    uint64_t v39 = 0;
    uint64_t v40 = 0;
    uint64_t v41 = 0;
    __n128 v42 = 0uLL;
    uint64_t v43 = 0uLL;
    simd_float4 v44 = 1;
    simd_float4 v45 = 0uLL;
    simd_float4 v46 = 1;
    simd_float4 v47 = 0uLL;
    LODWORD(v166) = 1;
    goto LABEL_26;
  }
  *(void *)&int v165 = *(void *)((char *)v172 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform);
  *(void *)&int v164 = *(void *)((char *)v172 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 8);
  *(void *)&long long v163 = *(void *)((char *)v172 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 16);
  *(void *)&long long v162 = *(void *)((char *)v172 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 24);
  uint64_t v48 = *(void *)((char *)v172 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 32);
  uint64_t v158 = *(void *)((char *)v172 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 40);
  v159 = v48;
  uint64_t v49 = *(void *)((char *)v172 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 48);
  float32x4_t v156 = *(void *)((char *)v172 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 56);
  uint64_t v157 = v49;
  id v155 = *((unsigned __int8 *)v172 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 64);
  uint64_t v50 = v171;
  uint64_t v51 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v171 + 56))(v18, 1, 2, v6);
  v168(v177, v51);
  uint64_t v52 = v177[0];
  if (v177[0] == (id)15)
  {
    sub_24B65A19C((id)0xF);
    sub_24B65A19C((id)0xF);
    sub_24B65A19C((id)0xF);
    uint64_t v53 = (uint64_t (*)(void))MEMORY[0x263F8C968];
    sub_24B659A1C((uint64_t)v18, (uint64_t)v15, MEMORY[0x263F8C968]);
    sub_24B659A1C((uint64_t)v15, (uint64_t)v12, v53);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v12, 2, v6))
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v8, v12, v6);
      __n128 v54 = (*(uint64_t (**)(char *, uint64_t))(v50 + 88))(v8, v6);
      if (v54 != *MEMORY[0x263F8C948] && v54 != *MEMORY[0x263F8C960])
      {
        (*(void (**)(char *, uint64_t))(v50 + 8))(v8, v6);
        *(void *)&int v165 = 0;
        *(void *)&int v164 = 0;
        *(void *)&long long v163 = 0;
        *(void *)&long long v162 = 0;
        uint64_t v158 = 0;
        v159 = 0;
        float32x4_t v156 = 0;
        uint64_t v157 = 0;
        id v155 = 1;
      }
    }
  }
  else
  {
    sub_24B66DD1C(v177[0]);
    sub_24B65A19C(v52);
    sub_24B65A19C((id)0xF);
    sub_24B65A19C(v52);
    sub_24B659A1C((uint64_t)v18, (uint64_t)v15, MEMORY[0x263F8C968]);
    *(void *)&int v165 = 0;
    *(void *)&int v164 = 0;
    *(void *)&long long v163 = 0;
    *(void *)&long long v162 = 0;
    uint64_t v158 = 0;
    v159 = 0;
    float32x4_t v156 = 0;
    uint64_t v157 = 0;
    id v155 = 1;
  }
  __n128 v55 = sub_24B65EF80((uint64_t)v15, MEMORY[0x263F8C968]);
  __n128 v56 = v172;
  v168(v177, v55);
  __n128 v57 = v177[0];
  if (v177[0] == (id)15)
  {
    sub_24B65A19C((id)0xF);
    sub_24B65A19C((id)0xF);
    sub_24B65A19C((id)0xF);
    sub_24B65EF80((uint64_t)v18, MEMORY[0x263F8C968]);
    uint64_t v58 = (long long *)((char *)v56 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox);
    if ((*((unsigned char *)v56 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox + 64) & 1) == 0)
    {
      LODWORD(v166) = 0;
      uint64_t v59 = v58[2];
      uint64_t v151 = v58[3];
      uint64_t v152 = v59;
      uint64_t v60 = *v58;
      uint64_t v153 = v58[1];
      uint64_t v154 = v60;
      goto LABEL_21;
    }
  }
  else
  {
    sub_24B66DD1C(v177[0]);
    sub_24B65A19C(v57);
    sub_24B65A19C((id)0xF);
    sub_24B65A19C(v57);
    sub_24B65EF80((uint64_t)v18, MEMORY[0x263F8C968]);
  }
  uint64_t v153 = 0u;
  uint64_t v154 = 0u;
  LODWORD(v166) = 1;
  uint64_t v151 = 0u;
  uint64_t v152 = 0u;
LABEL_21:
  os_log_type_t v61 = (void *)((char *)v172 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pointCloud);
  swift_beginAccess();
  __n128 v62 = *v61;
  if (*v61)
  {
    uint64_t v63 = v61[10];
    long long v64 = v61[11];
    __n128 v66 = v61[8];
    uint64_t v65 = v61[9];
    *(void *)&uint64_t v171 = v61[7];
    __n128 v67 = v61[5];
    id v149 = v61[6];
    uint64_t v150 = v63;
    __n128 v68 = v61[4];
    uint64_t v145 = v61[3];
    swift_retain();
    swift_retain();
    swift_retain();
    v148 = v64;
    int v147 = v65;
    uint64_t v146 = v66;
    uint64_t v144 = v68;
    uint64_t v145 = v67;
    sub_24B659B3C(v62);
    uint64_t v26 = *v61;
    if (*v61)
    {
      __n128 v69 = v61[7];
      v143[1] = v61[6];
      v143[2] = v69;
      v143[0] = v61[5];
      sub_24B659AEC(v26);
      uint64_t v70 = swift_retain();
      sub_24B659B3C(v70);
    }
    simd_float4 v44 = 0;
    uint64_t v25 = (uint64_t *)v169;
    uint64_t v34 = v165;
    uint64_t v35 = v164;
    uint64_t v36 = v163;
    uint64_t v37 = v162;
    uint64_t v39 = v158;
    uint64_t v38 = v159;
    uint64_t v41 = v156;
    uint64_t v40 = v157;
    simd_float4 v46 = v155;
    uint64_t v43 = v153;
    __n128 v42 = v154;
    simd_float4 v47 = v151;
    simd_float4 v45 = v152;
    uint64_t v31 = v147;
    unint64_t v33 = v148;
    uint64_t v29 = v149;
    uint64_t v32 = v150;
    uint64_t v28 = v145;
    uint64_t v30 = v146;
    uint64_t v27 = v144;
  }
  else
  {
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    *(void *)&uint64_t v171 = 0;
    uint64_t v30 = 0;
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    unint64_t v33 = 0;
    simd_float4 v44 = 1;
    uint64_t v34 = v165;
    uint64_t v35 = v164;
    uint64_t v36 = v163;
    uint64_t v37 = v162;
    uint64_t v39 = v158;
    uint64_t v38 = v159;
    uint64_t v41 = v156;
    uint64_t v40 = v157;
    simd_float4 v46 = v155;
    uint64_t v43 = v153;
    __n128 v42 = v154;
    simd_float4 v47 = v151;
    simd_float4 v45 = v152;
  }
LABEL_26:
  v199[0] = v34;
  v199[1] = v35;
  v199[2] = v36;
  v199[3] = v37;
  v199[4] = v38;
  v199[5] = v39;
  v199[6] = v40;
  v199[7] = v41;
  v200 = v46;
  v197[0] = v42;
  v197[1] = v43;
  v197[2] = v45;
  v197[3] = v47;
  uint64_t v198 = v166;
  v195[0] = v27;
  v195[1] = v28;
  v195[2] = v29;
  v195[3] = v171;
  v195[4] = v30;
  v195[5] = v31;
  v195[6] = v32;
  v195[7] = v33;
  v196 = v44;
  uint64_t v71 = objc_msgSend(*(id *)((char *)v172 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession), sel_configuration);
  if (!v71)
  {
    swift_release();
    __break(1u);
    goto LABEL_86;
  }
  unint64_t v72 = v71;
  uint64_t v73 = objc_msgSend(v71, sel_videoFormat);

  uint64_t v74 = objc_msgSend(v73, sel_device);
  uint64_t v75 = v25[1];
  uint64_t v76 = (long long *)((char *)v25 + *(int *)(type metadata accessor for OCCaptureData(0) + 40));
  uint64_t v171 = *v76;
  uint64_t v169 = v76[1];
  uint64_t v77 = v76[2];
  int v165 = v76[3];
  v166 = v77;
  __n128 v78 = v76[4];
  long long v163 = v76[5];
  int v164 = v78;
  long long v162 = v76[6];
  uint64_t v79 = *v25;
  uint64_t v80 = (SEL *)&unk_2652DE000;
  objc_msgSend(v74, sel_ISO);
  v185[2] = 0;
  v185[0] = v75;
  v185[1] = 0;
  float32x4_t v186 = v171;
  v187 = v169;
  v188 = v166;
  v189 = v165;
  v190 = v164;
  v191 = v163;
  v192 = v162;
  v193 = v79;
  v194 = v81;
  uint64_t v82 = sub_24B5A304C();
  uint64_t v83 = (uint64x2_t)vdupq_n_s64(v82);
  float32x4_t v181 = v82 & 1;
  uint64_t v84 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v83, (uint64x2_t)xmmword_24B687420), (int32x4_t)vshlq_u64(v83, (uint64x2_t)xmmword_24B687410));
  *(int8x8_t *)v84.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v84), (int8x8_t)0x1000100010001);
  float32x4_t v182 = vmovn_s16(v84).u32[0];
  float32x4_t v183 = BYTE5(v82) & 1;
  float32x4_t v184 = v85;
  v178[0] = 0;
  v179 = 0.0;
  __asm { FMOV            V0.2D, #-1.0 }
  float32x4_t v180 = _Q0;
  uint64_t v91 = *(_DWORD **)((char *)v172 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_explicitFeedbackManager);
  if (v91)
  {
    uint64_t v92 = *(uint64_t (**)(void *, uint64_t, void *, _OWORD *, void *, char *, char *))(*(void *)v91 + 128);
    swift_retain();
    if (v92(v185, v26, v195, v197, v199, &v181, v178))
    {
      if (v181 != 1)
      {
LABEL_34:
        if (v182 != 1)
        {
LABEL_39:
          if (BYTE1(v182) != 1)
          {
LABEL_44:
            if (HIBYTE(v182) != 1)
            {
LABEL_49:
              if (BYTE2(v182) != 1)
              {
LABEL_54:
                if (v183 != 1) {
                  goto LABEL_59;
                }
                unint64_t v113 = (char *)v172 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_currentFrame;
                swift_beginAccess();
                float v114 = type metadata accessor for ObjectCaptureSession.Frame(0);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v114 - 8) + 48))(v113, 1, v114) != 1)
                {
                  unint64_t v115 = *(int *)(v114 + 44);
                  uint64_t v116 = *(void *)&v113[v115];
                  if ((v116 & 0x10) == 0) {
                    *(void *)&v113[v115] = v116 | 0x10;
                  }
                  swift_endAccess();
LABEL_59:
                  unint64_t v117 = v184;
                  os_log_type_t v118 = *(void *)(v184 + 16);
                  v159 = v26;
                  if (v118 < 3)
                  {
                    uint64_t v129 = swift_bridgeObjectRelease();
                    uint64_t v130 = v170;
LABEL_79:
                    uint64_t v133 = v172;
                    *(float *)((char *)v172 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectInFOVRatio) = v179;
                    *(_OWORD *)((char *)v133 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_centerOfObjectInFOV) = v180;
                    v168(v177, v129);
                    if (v177[0] == (id)15)
                    {
                      sub_24B65A19C((id)0xF);
                      sub_24B65A19C((id)0xF);
                      uint64_t v134 = sub_24B57CB70();
                      uint64_t v136 = v160;
                      uint64_t v135 = v161;
                      (*(void (**)(char *, uint64_t, uint64_t))(v160 + 16))(v130, v134, v161);
                      uint64_t v137 = sub_24B6824B0();
                      uint64_t v138 = sub_24B682B10();
                      if (os_log_type_enabled(v137, v138))
                      {
                        float32x4_t v139 = swift_slowAlloc();
                        uint64_t v140 = (void *)swift_slowAlloc();
                        *(void *)&uint64_t v171 = v74;
                        uint64_t v141 = v140;
                        v177[0] = v140;
                        *(_DWORD *)float32x4_t v139 = 136381187;
                        v176[0] = sub_24B5627B8(0xD00000000000001ELL, 0x800000024B691040, (uint64_t *)v177);
                        sub_24B682CD0();
                        *(_WORD *)(v139 + 12) = 2050;
                        swift_beginAccess();
                        v174[0] = v180;
                        sub_24B682CD0();
                        *(_WORD *)(v139 + 22) = 2050;
                        v174[0] = *((void *)&v180 + 1);
                        sub_24B682CD0();
                        _os_log_impl(&dword_24B55E000, v137, v138, "ObjectCaptureSession.%{private}s: Query frame's center of object in FOV = (%{public}f, %{public}f)", (uint8_t *)v139, 0x20u);
                        swift_arrayDestroy();
                        uint64_t v142 = v141;
                        uint64_t v80 = (SEL *)&unk_2652DE000;
                        uint64_t v74 = (id)v171;
                        MEMORY[0x24C5D6C00](v142, -1, -1);
                        MEMORY[0x24C5D6C00](v139, -1, -1);
                        swift_release();

                        (*(void (**)(char *, uint64_t))(v136 + 8))(v170, v135);
                      }
                      else
                      {

                        swift_release();
                        (*(void (**)(char *, uint64_t))(v136 + 8))(v130, v135);
                      }
                    }
                    else
                    {
                      sub_24B65A19C(v177[0]);
                      sub_24B65A19C((id)0xF);
                      swift_release();
                    }
                    goto LABEL_70;
                  }
                  *(void *)&uint64_t v171 = v74;
                  unint64_t v119 = sub_24B61DFE0();
                  uint64_t v121 = v120;
                  uint64_t v122 = type metadata accessor for ObjectCaptureSession.Frame(0);
                  uint64_t v123 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v122 - 8) + 48);
                  if (v123(v121, 1, v122) != 1)
                  {
                    uint64_t v124 = v121 + *(int *)(v122 + 52);
                    sub_24B56CF38(v124, (uint64_t)v176, (uint64_t *)&unk_2697CC9B0);
                    sub_24B56CF38((uint64_t)v176, (uint64_t)v177, (uint64_t *)&unk_2697CC9B0);
                    if (sub_24B66DE00((uint64_t)v177) != 1)
                    {
                      *(void *)(v124 + 608) = v117;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                    }
                    ((void (*)(void *, void))v119)(v174, 0);
                    int v125 = sub_24B61DFE0();
                    uint64_t v127 = v126;
                    if (v123(v126, 1, v122) != 1)
                    {
                      swift_bridgeObjectRelease();
                      uint64_t v128 = v127 + *(int *)(v122 + 52);
                      sub_24B56CF38(v128, (uint64_t)v173, (uint64_t *)&unk_2697CC9B0);
                      sub_24B56CF38((uint64_t)v173, (uint64_t)v174, (uint64_t *)&unk_2697CC9B0);
                      if (sub_24B66DE00((uint64_t)v174) != 1)
                      {
                        *(_DWORD *)(v128 + 616) = v91[8];
                        *(unsigned char *)(v128 + 620) = 0;
                      }
                      uint64_t v129 = ((uint64_t (*)(uint64_t *, void))v125)(&v175, 0);
                      uint64_t v130 = v170;
                      uint64_t v74 = (id)v171;
                      uint64_t v80 = (SEL *)&unk_2652DE000;
                      goto LABEL_79;
                    }
LABEL_93:
                    swift_release();
                    __break(1u);
                    return;
                  }
LABEL_92:
                  swift_release();
                  __break(1u);
                  goto LABEL_93;
                }
LABEL_91:
                swift_release();
                __break(1u);
                goto LABEL_92;
              }
              uint64_t v109 = (char *)v172 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_currentFrame;
              swift_beginAccess();
              uint64_t v110 = type metadata accessor for ObjectCaptureSession.Frame(0);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v110 - 8) + 48))(v109, 1, v110) != 1)
              {
                uint64_t v111 = *(int *)(v110 + 44);
                uint64_t v112 = *(void *)&v109[v111];
                if ((v112 & 4) == 0) {
                  *(void *)&v109[v111] = v112 | 4;
                }
                swift_endAccess();
                goto LABEL_54;
              }
LABEL_90:
              swift_release();
              __break(1u);
              goto LABEL_91;
            }
            uint64_t v105 = (char *)v172 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_currentFrame;
            swift_beginAccess();
            uint64_t v106 = type metadata accessor for ObjectCaptureSession.Frame(0);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v106 - 8) + 48))(v105, 1, v106) != 1)
            {
              uint64_t v107 = *(int *)(v106 + 44);
              uint64_t v108 = *(void *)&v105[v107];
              if ((v108 & 8) == 0) {
                *(void *)&v105[v107] = v108 | 8;
              }
              swift_endAccess();
              goto LABEL_49;
            }
LABEL_89:
            swift_release();
            __break(1u);
            goto LABEL_90;
          }
          uint64_t v101 = (char *)v172 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_currentFrame;
          swift_beginAccess();
          uint64_t v102 = type metadata accessor for ObjectCaptureSession.Frame(0);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v102 - 8) + 48))(v101, 1, v102) != 1)
          {
            uint64_t v103 = *(int *)(v102 + 44);
            uint64_t v104 = *(void *)&v101[v103];
            if ((v104 & 0x20) == 0) {
              *(void *)&v101[v103] = v104 | 0x20;
            }
            swift_endAccess();
            goto LABEL_44;
          }
LABEL_88:
          swift_release();
          __break(1u);
          goto LABEL_89;
        }
        id v97 = (char *)v172 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_currentFrame;
        swift_beginAccess();
        uint64_t v98 = type metadata accessor for ObjectCaptureSession.Frame(0);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v98 - 8) + 48))(v97, 1, v98) != 1)
        {
          uint64_t v99 = *(int *)(v98 + 44);
          uint64_t v100 = *(void *)&v97[v99];
          if ((v100 & 2) == 0) {
            *(void *)&v97[v99] = v100 | 2;
          }
          swift_endAccess();
          goto LABEL_39;
        }
LABEL_87:
        swift_release();
        __break(1u);
        goto LABEL_88;
      }
      uint64_t v93 = (char *)v172 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_currentFrame;
      swift_beginAccess();
      double v94 = type metadata accessor for ObjectCaptureSession.Frame(0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v94 - 8) + 48))(v93, 1, v94) != 1)
      {
        uint64_t v95 = *(int *)(v94 + 44);
        uint64_t v96 = *(void *)&v93[v95];
        if ((v96 & 1) == 0) {
          *(void *)&v93[v95] = v96 | 1;
        }
        swift_endAccess();
        goto LABEL_34;
      }
LABEL_86:
      swift_release();
      __break(1u);
      goto LABEL_87;
    }
    swift_release();
  }
  swift_bridgeObjectRelease();
LABEL_70:
  sub_24B680D08();
  OCSignPostsAriadneDbgCode();
  kdebug_trace();
  if (*((unsigned char *)v172 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugExplicitFeedbackEnabled) == 1)
  {
    swift_beginAccess();
    if (v178[0]) {
      char v131 = v179 * 100.0;
    }
    else {
      char v131 = -100.0;
    }
    sub_24B64D748();
    [v74 v80[207]];
    v174[0] = __PAIR64__(LODWORD(v131), v132);
    sub_24B682500();

    swift_release();
  }
  else
  {
  }
  swift_release();
}

void sub_24B623E20()
{
  void (*v21)(char **__return_ptr, uint64_t);
  double *v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, double, double);
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  void (*v33)(uint64_t, __n128, __n128);
  uint64_t v34;
  __n128 v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, double, double);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, double, double);
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t);
  char *v47;
  char *v48;
  uint64_t v49;
  NSObject *v50;
  int v51;
  BOOL v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  double (*v56)(uint64_t);
  uint64_t v57;
  double v58;
  uint64_t v59;
  void (*v60)(uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  char *v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t, double, double);
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  BOOL v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  double (*v80)(uint64_t);
  uint64_t v81;
  double v82;
  uint64_t v83;
  void (*v84)(uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  void (*v89)(char *, uint64_t);
  char *v90;
  NSObject *v91;
  os_log_type_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  double (*v96)(uint64_t);
  uint64_t v97;
  double v98;
  uint64_t v99;
  void (*v100)(uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(char *, uint64_t, uint64_t);
  uint64_t v105;
  uint64_t v106;
  uint64_t (*v107)(uint64_t);
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  double (*v113)(uint64_t);
  uint64_t v114;
  double v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  double (*v119)(uint64_t);
  uint64_t v120;
  double v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  char *v125;
  char *v126;
  NSObject *v127;
  os_log_type_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  double (*v132)(uint64_t);
  uint64_t v133;
  double v134;
  uint64_t v135;
  char *v136;
  void (*v137)(uint64_t);
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t (*v143)(uint64_t);
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  double (*v149)(uint64_t);
  uint64_t v150;
  double v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  double (*v155)(uint64_t);
  uint64_t v156;
  double v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  void (*v162)(char *, uint64_t, uint64_t);
  char *v163;
  uint64_t v164;
  char *v165;
  void (*v166)(char *, uint64_t, uint64_t);
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  double v173;
  uint64_t v174;
  double v175;
  uint64_t v176;

  id v1 = v0;
  uint64_t v2 = sub_24B6824D0();
  uint64_t v169 = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  int v165 = (char *)&v160 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  v166 = (void (*)(char *, uint64_t, uint64_t))((char *)&v160 - v6);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v167 = (char *)&v160 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v168 = (char *)&v160 - v9;
  uint64_t v10 = sub_24B682C80();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v160 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24B682C90();
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = (char *)&v160 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  unint64_t v20 = (char *)&v160 - v19;
  unint64_t v21 = *(void (**)(char **__return_ptr, uint64_t))((*MEMORY[0x263F8EED0] & *v0) + 0x420);
  v21(&v171, v18);
  if (v171 == (char *)15)
  {
    sub_24B65A19C((id)0xF);
    sub_24B65A19C((id)0xF);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v20, 1, 2, v10);
    sub_24B659A1C((uint64_t)v20, (uint64_t)v17, MEMORY[0x263F8C968]);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v17, 2, v10))
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v17, v10);
      uint64_t v124 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v13, v10);
      if (v124 != *MEMORY[0x263F8C948] && v124 != *MEMORY[0x263F8C960])
      {
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
        goto LABEL_39;
      }
    }
    unint64_t v22 = (double *)((char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_centerOfObjectInFOV);
    uint64_t v23 = *(double *)((char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_centerOfObjectInFOV);
    long long v163 = v20;
    if (v23 >= 0.0 && v23 <= 1.0)
    {
      uint64_t v24 = v22[1];
      if (v24 >= 0.0 && v24 <= 1.0)
      {
        uint64_t v25 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl;
        uint64_t v26 = *(void *)((char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl);
        uint64_t v27 = v169;
        if (!v26)
        {
LABEL_70:
          __break(1u);
          goto LABEL_71;
        }
        uint64_t v28 = *(void (**)(uint64_t, double, double))(*(void *)v26 + 232);
        uint64_t v29 = swift_retain();
        v28(v29, v23, v24);
        swift_release();
        uint64_t v30 = *(void *)((char *)v1 + v25);
        if (!v30)
        {
LABEL_71:
          __break(1u);
          return;
        }
        uint64_t v31 = *(void *)v22;
        uint64_t v32 = *((void *)v22 + 1);
        unint64_t v33 = *(void (**)(uint64_t, __n128, __n128))(*(void *)v30 + 256);
        uint64_t v34 = swift_retain();
        v35.n128_u64[0] = v31;
        v36.n128_u64[0] = v32;
LABEL_20:
        v33(v34, v35, v36);
        unint64_t v72 = v168;
        swift_release();
        uint64_t v73 = sub_24B57CB70();
        v166 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
        v166(v72, v73, v2);
        id v1 = v1;
        uint64_t v74 = sub_24B6824B0();
        uint64_t v75 = sub_24B682B10();
        uint64_t v76 = os_log_type_enabled(v74, v75);
        int v164 = v2;
        if (!v76)
        {

          float32x4_t v89 = *(void (**)(char *, uint64_t))(v27 + 8);
          v89(v72, v2);
          uint64_t v90 = v167;
LABEL_26:
          v166(v90, v73, v2);
          id v1 = v1;
          uint64_t v91 = sub_24B6824B0();
          uint64_t v92 = sub_24B682B10();
          if (!os_log_type_enabled(v91, v92))
          {

            v89(v90, v2);
LABEL_31:
            unint64_t v20 = v163;
            if (*((unsigned char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugCameraControl) != 1)
            {
LABEL_39:
              sub_24B65EF80((uint64_t)v20, MEMORY[0x263F8C968]);
              return;
            }
            sub_24B64D7D4();
            uint64_t v105 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl;
            uint64_t v106 = *(void *)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl);
            if (v106)
            {
              uint64_t v107 = *(uint64_t (**)(uint64_t))(*(void *)v106 + 312);
              uint64_t v108 = swift_retain();
              uint64_t v109 = (char *)v107(v108);
              uint64_t v111 = v110;
              swift_release();
              uint64_t v112 = *(void *)((char *)v1 + v105);
              if (v112)
              {
                unint64_t v113 = *(double (**)(uint64_t))(*(void *)v112 + 120);
                float v114 = swift_retain();
                unint64_t v115 = v113(v114);
                unint64_t v117 = v116;
                swift_release();
                os_log_type_t v118 = *(void *)((char *)v1 + v105);
                if (v118)
                {
                  unint64_t v119 = *(double (**)(uint64_t))(*(void *)v118 + 128);
                  uint64_t v120 = swift_retain();
                  uint64_t v121 = v119(v120);
                  uint64_t v123 = v122;
                  swift_release();
                  uint64_t v171 = v109;
                  v172 = v111;
                  uint64_t v173 = v115;
                  uint64_t v174 = v117;
                  uint64_t v175 = v121;
                  uint64_t v176 = v123;
                  sub_24B682500();
                  swift_bridgeObjectRelease();
                  swift_release();
                  goto LABEL_39;
                }
                goto LABEL_62;
              }
LABEL_61:
              __break(1u);
LABEL_62:
              __break(1u);
              goto LABEL_63;
            }
LABEL_60:
            __break(1u);
            goto LABEL_61;
          }
          uint64_t v168 = (char *)v89;
          uint64_t v93 = swift_slowAlloc();
          v166 = (void (*)(char *, uint64_t, uint64_t))swift_slowAlloc();
          uint64_t v171 = (char *)v166;
          *(_DWORD *)uint64_t v93 = 136381187;
          uint64_t v170 = sub_24B5627B8(0xD000000000000014, 0x800000024B691020, (uint64_t *)&v171);
          sub_24B682CD0();
          *(_WORD *)(v93 + 12) = 2050;
          double v94 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl;
          uint64_t v95 = *(void *)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl);
          if (v95)
          {
            uint64_t v96 = *(double (**)(uint64_t))(*(void *)v95 + 128);
            id v97 = swift_retain();
            uint64_t v98 = v96(v97);
            swift_release();
            uint64_t v170 = *(void *)&v98;
            sub_24B682CD0();
            *(_WORD *)(v93 + 22) = 2050;
            uint64_t v99 = *(void *)((char *)v1 + v94);
            if (v99)
            {
              uint64_t v100 = *(void (**)(uint64_t))(*(void *)v99 + 128);
              uint64_t v101 = swift_retain();
              v100(v101);
              uint64_t v103 = v102;
              swift_release();
              uint64_t v170 = v103;
              sub_24B682CD0();

              _os_log_impl(&dword_24B55E000, v91, v92, "ObjectCaptureSession.%{private}s: During scanning: Camera exposure point of interest: (%{public}f,%{public}f)", (uint8_t *)v93, 0x20u);
              uint64_t v104 = v166;
              swift_arrayDestroy();
              MEMORY[0x24C5D6C00](v104, -1, -1);
              MEMORY[0x24C5D6C00](v93, -1, -1);

              ((void (*)(char *, uint64_t))v168)(v167, v164);
              goto LABEL_31;
            }
LABEL_59:

            __break(1u);
            goto LABEL_60;
          }
LABEL_58:

          __break(1u);
          goto LABEL_59;
        }
        long long v162 = (void (*)(char *, uint64_t, uint64_t))v73;
        uint64_t v77 = swift_slowAlloc();
        long long v161 = (char *)swift_slowAlloc();
        uint64_t v171 = v161;
        *(_DWORD *)uint64_t v77 = 136381187;
        uint64_t v170 = sub_24B5627B8(0xD000000000000014, 0x800000024B691020, (uint64_t *)&v171);
        sub_24B682CD0();
        *(_WORD *)(v77 + 12) = 2050;
        __n128 v78 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl;
        int v165 = (char *)v1;
        uint64_t v79 = *(void *)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl);
        if (v79)
        {
          uint64_t v80 = *(double (**)(uint64_t))(*(void *)v79 + 120);
          id v1 = (id)(*(void *)v79 + 120);
          uint64_t v81 = swift_retain();
          uint64_t v82 = v80(v81);
          swift_release();
          uint64_t v170 = *(void *)&v82;
          sub_24B682CD0();
          *(_WORD *)(v77 + 22) = 2050;
          uint64_t v83 = *(void *)&v165[v78];
          if (v83)
          {
            uint64_t v84 = *(void (**)(uint64_t))(*(void *)v83 + 120);
            uint64_t v85 = swift_retain();
            v84(v85);
            os_log_type_t v87 = v86;
            swift_release();
            uint64_t v170 = v87;
            sub_24B682CD0();
            id v1 = v165;

            _os_log_impl(&dword_24B55E000, v74, v75, "ObjectCaptureSession.%{private}s: During scanning: Camera focus point of interest: (%{public}f,%{public}f)", (uint8_t *)v77, 0x20u);
            double v88 = v161;
            swift_arrayDestroy();
            MEMORY[0x24C5D6C00](v88, -1, -1);
            MEMORY[0x24C5D6C00](v77, -1, -1);

            float32x4_t v89 = *(void (**)(char *, uint64_t))(v169 + 8);
            uint64_t v2 = v164;
            v89(v168, v164);
            uint64_t v90 = v167;
            uint64_t v73 = (uint64_t)v162;
            goto LABEL_26;
          }
LABEL_57:

          __break(1u);
          goto LABEL_58;
        }
LABEL_56:

        __break(1u);
        goto LABEL_57;
      }
    }
    __n128 v67 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl;
    __n128 v68 = *(void *)((char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl);
    uint64_t v27 = v169;
    if (v68)
    {
      __n128 v69 = *(void (**)(uint64_t, double, double))(*(void *)v68 + 232);
      uint64_t v70 = swift_retain();
      v69(v70, 0.5, 0.5);
      swift_release();
      uint64_t v71 = *(void *)((char *)v1 + v67);
      if (v71)
      {
        unint64_t v33 = *(void (**)(uint64_t, __n128, __n128))(*(void *)v71 + 256);
        uint64_t v34 = swift_retain();
        v35.n128_u64[0] = 0.5;
        v36.n128_u64[0] = 0.5;
        goto LABEL_20;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_54;
  }
  sub_24B65A19C(v171);
  sub_24B65A19C((id)0xF);
  ((void (*)(char **__return_ptr))v21)(&v171);
  if (v171 != (char *)15)
  {
    sub_24B65A19C(v171);
    sub_24B65A19C((id)0xF);
    return;
  }
  sub_24B65A19C((id)0xF);
  sub_24B65A19C((id)0xF);
  uint64_t v37 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl;
  uint64_t v38 = *(void *)((char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl);
  if (!v38)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  uint64_t v39 = *(void (**)(uint64_t, double, double))(*(void *)v38 + 232);
  uint64_t v40 = swift_retain();
  v39(v40, 0.5, 0.5);
  swift_release();
  uint64_t v168 = (char *)v37;
  uint64_t v41 = *(void *)((char *)v1 + v37);
  __n128 v42 = v169;
  if (!v41)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  uint64_t v43 = *(void (**)(uint64_t, double, double))(*(void *)v41 + 256);
  simd_float4 v44 = swift_retain();
  v43(v44, 0.5, 0.5);
  swift_release();
  simd_float4 v45 = sub_24B57CB70();
  simd_float4 v46 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  simd_float4 v47 = (char *)v166;
  v46((char *)v166, v45, v2);
  uint64_t v48 = (char *)v1;
  uint64_t v49 = v2;
  uint64_t v50 = sub_24B6824B0();
  uint64_t v51 = sub_24B682B10();
  uint64_t v52 = os_log_type_enabled(v50, (os_log_type_t)v51);
  int v164 = v49;
  if (v52)
  {
    LODWORD(v161) = v51;
    uint64_t v167 = v48;
    long long v162 = v46;
    long long v163 = (char *)v45;
    uint64_t v53 = swift_slowAlloc();
    long long v160 = (char *)swift_slowAlloc();
    uint64_t v171 = v160;
    *(_DWORD *)uint64_t v53 = 136381187;
    uint64_t v170 = sub_24B5627B8(0xD000000000000014, 0x800000024B691020, (uint64_t *)&v171);
    sub_24B682CD0();
    *(_WORD *)(v53 + 12) = 2050;
    __n128 v54 = v168;
    __n128 v55 = *(void *)&v168[(void)v1];
    if (!v55)
    {
LABEL_63:

      __break(1u);
      goto LABEL_64;
    }
    __n128 v56 = *(double (**)(uint64_t))(*(void *)v55 + 120);
    __n128 v57 = swift_retain();
    uint64_t v58 = v56(v57);
    swift_release();
    uint64_t v170 = *(void *)&v58;
    sub_24B682CD0();
    *(_WORD *)(v53 + 22) = 2050;
    uint64_t v59 = *(void *)&v54[(void)v1];
    if (!v59)
    {
LABEL_64:

      __break(1u);
      goto LABEL_65;
    }
    uint64_t v60 = *(void (**)(uint64_t))(*(void *)v59 + 120);
    os_log_type_t v61 = swift_retain();
    v60(v61);
    uint64_t v63 = v62;
    swift_release();
    uint64_t v170 = v63;
    sub_24B682CD0();
    long long v64 = v167;

    _os_log_impl(&dword_24B55E000, v50, (os_log_type_t)v161, "ObjectCaptureSession.%{private}s: In capture mode: Camera focus point of interest: (%{public}f,%{public}f)", (uint8_t *)v53, 0x20u);
    uint64_t v65 = v160;
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v65, -1, -1);
    MEMORY[0x24C5D6C00](v53, -1, -1);

    __n128 v66 = *(void (**)(char *, uint64_t))(v169 + 8);
    uint64_t v49 = v164;
    v66((char *)v166, v164);
    simd_float4 v46 = v162;
    simd_float4 v45 = (uint64_t)v163;
  }
  else
  {

    long long v64 = v48;
    __n128 v66 = *(void (**)(char *, uint64_t))(v42 + 8);
    v66(v47, v49);
  }
  int v125 = v165;
  v46(v165, v45, v49);
  uint64_t v126 = (char *)v64;
  uint64_t v127 = sub_24B6824B0();
  uint64_t v128 = sub_24B682B10();
  if (os_log_type_enabled(v127, v128))
  {
    v166 = (void (*)(char *, uint64_t, uint64_t))v66;
    uint64_t v167 = v126;
    uint64_t v129 = swift_slowAlloc();
    long long v163 = (char *)swift_slowAlloc();
    uint64_t v171 = v163;
    *(_DWORD *)uint64_t v129 = 136381187;
    uint64_t v170 = sub_24B5627B8(0xD000000000000014, 0x800000024B691020, (uint64_t *)&v171);
    uint64_t v130 = v168;
    sub_24B682CD0();
    *(_WORD *)(v129 + 12) = 2050;
    char v131 = *(void *)&v130[(void)v1];
    if (!v131)
    {
LABEL_65:

      __break(1u);
      goto LABEL_66;
    }
    uint64_t v132 = *(double (**)(uint64_t))(*(void *)v131 + 128);
    uint64_t v133 = swift_retain();
    uint64_t v134 = v132(v133);
    swift_release();
    uint64_t v170 = *(void *)&v134;
    sub_24B682CD0();
    *(_WORD *)(v129 + 22) = 2050;
    uint64_t v135 = *(void *)&v130[(void)v1];
    if (!v135)
    {
LABEL_66:

      __break(1u);
      goto LABEL_67;
    }
    uint64_t v136 = v130;
    uint64_t v137 = *(void (**)(uint64_t))(*(void *)v135 + 128);
    uint64_t v138 = swift_retain();
    v137(v138);
    uint64_t v140 = v139;
    swift_release();
    uint64_t v170 = v140;
    sub_24B682CD0();
    uint64_t v126 = v167;

    _os_log_impl(&dword_24B55E000, v127, v128, "ObjectCaptureSession.%{private}s: In capture mode: Camera exposure point of interest: (%{public}f,%{public}f)", (uint8_t *)v129, 0x20u);
    uint64_t v141 = v163;
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v141, -1, -1);
    MEMORY[0x24C5D6C00](v129, -1, -1);

    ((void (*)(char *, uint64_t))v166)(v165, v164);
  }
  else
  {

    v66(v125, v49);
    uint64_t v136 = v168;
  }
  if (v126[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugCameraControl] == 1)
  {
    sub_24B64D7D4();
    uint64_t v142 = *(void *)&v136[(void)v1];
    if (!v142)
    {
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    uint64_t v143 = *(uint64_t (**)(uint64_t))(*(void *)v142 + 312);
    uint64_t v144 = swift_retain();
    uint64_t v145 = (char *)v143(v144);
    int v147 = v146;
    swift_release();
    v148 = *(void *)&v136[(void)v1];
    if (!v148)
    {
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    id v149 = *(double (**)(uint64_t))(*(void *)v148 + 120);
    uint64_t v150 = swift_retain();
    uint64_t v151 = v149(v150);
    uint64_t v153 = v152;
    swift_release();
    uint64_t v154 = *(void *)&v136[(void)v1];
    if (!v154)
    {
LABEL_69:
      __break(1u);
      goto LABEL_70;
    }
    id v155 = *(double (**)(uint64_t))(*(void *)v154 + 128);
    float32x4_t v156 = swift_retain();
    uint64_t v157 = v155(v156);
    v159 = v158;
    swift_release();
    uint64_t v171 = v145;
    v172 = v147;
    uint64_t v173 = v151;
    uint64_t v174 = v153;
    uint64_t v175 = v157;
    uint64_t v176 = v159;
    sub_24B682500();
    swift_bridgeObjectRelease();
    swift_release();
  }
}

uint64_t sub_24B625030(uint64_t a1)
{
  uint64_t v78 = a1;
  uint64_t v2 = type metadata accessor for OCCaptureData(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (double *)&v69[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_24B6824D0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v69[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = &v69[-v10];
  uint64_t v12 = sub_24B562F04((uint64_t *)&unk_2697CCA10);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = &v69[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_24B682C90();
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = &v69[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = *(void *)&v1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureManager];
  if (!v18)
  {
    uint64_t v41 = sub_24B57CB70();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16))(v9, v41, v5);
    __n128 v42 = sub_24B6824B0();
    uint64_t v43 = sub_24B682B20();
    if (os_log_type_enabled(v42, (os_log_type_t)v43))
    {
      uint64_t v44 = v6;
      simd_float4 v45 = (uint8_t *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      v91[0] = v46;
      *(_DWORD *)simd_float4 v45 = 136380675;
      v90[0] = sub_24B5627B8(0xD000000000000017, 0x800000024B691000, v91);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v42, (os_log_type_t)v43, "ObjectCaptureSession.%{private}s: Failed to run automatic capture - capture manager has not been initialized!", v45, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v46, -1, -1);
      MEMORY[0x24C5D6C00](v45, -1, -1);

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v44 + 8))(v9, v5);
    }
    else
    {

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
    }
  }
  swift_retain();
  if (sub_24B61E214() & 1) != 0 && (v1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__autoCaptureEnabled])
  {
    uint64_t v75 = v6;
    uint64_t v76 = v5;
    sub_24B56CF38((uint64_t)&v1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform], (uint64_t)v93, &qword_2697CC9A0);
    uint64_t v19 = sub_24B682C80();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v17, 1, 2, v19);
    uint64_t v20 = (uint64_t)&v1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_currentFrame];
    swift_beginAccess();
    sub_24B563A6C(v20, (uint64_t)v14, (uint64_t *)&unk_2697CCA10);
    uint64_t v21 = type metadata accessor for ObjectCaptureSession.Frame(0);
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
    uint64_t v71 = v22 + 48;
    unint64_t v72 = v23;
    uint64_t result = v23((uint64_t)v14, 1, v21);
    uint64_t v77 = v17;
    if (result != 1)
    {
      uint64_t v74 = v21;
      v91[0] = *(void *)&v14[*(int *)(v21 + 44)];
      float v25 = *(float *)&v1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectInFOVRatio];
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = v1;
      uint64_t v27 = *(uint64_t (**)(uint64_t, unsigned char *, unsigned char *, uint64_t *, void (*)(int), uint64_t, float))(*(void *)v18 + 480);
      uint64_t v73 = v1;
      uint64_t v28 = v78;
      char v29 = v27(v78, v93, v77, v91, sub_24B66DE18, v26, v25);
      swift_release();
      sub_24B65EF80((uint64_t)v14, type metadata accessor for ObjectCaptureSession.Frame);
      if (v29)
      {
        uint64_t v30 = sub_24B57CB70();
        uint64_t v31 = v75;
        uint64_t v32 = v76;
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v75 + 16))(v11, v30, v76);
        sub_24B659A1C(v28, (uint64_t)v4, type metadata accessor for OCCaptureData);
        unint64_t v33 = sub_24B6824B0();
        os_log_type_t v34 = sub_24B682B30();
        int v35 = v34;
        if (os_log_type_enabled(v33, v34))
        {
          uint64_t v36 = swift_slowAlloc();
          uint64_t v78 = swift_slowAlloc();
          v91[0] = v78;
          *(_DWORD *)uint64_t v36 = 136380931;
          v90[0] = sub_24B5627B8(0xD000000000000017, 0x800000024B691000, v91);
          sub_24B682CD0();
          *(_WORD *)(v36 + 12) = 2082;
          uint64_t v37 = sub_24B5F8B94(*v4);
          int v70 = v35;
          uint64_t v38 = v33;
          v90[0] = sub_24B5627B8(v37, v39, v91);
          sub_24B682CD0();
          swift_bridgeObjectRelease();
          sub_24B65EF80((uint64_t)v4, type metadata accessor for OCCaptureData);
          _os_log_impl(&dword_24B55E000, v33, (os_log_type_t)v70, "ObjectCaptureSession.%{private}s: Taking automatic shot around video frame %{public}s", (uint8_t *)v36, 0x16u);
          uint64_t v40 = v78;
          swift_arrayDestroy();
          MEMORY[0x24C5D6C00](v40, -1, -1);
          MEMORY[0x24C5D6C00](v36, -1, -1);

          (*(void (**)(unsigned char *, uint64_t))(v31 + 8))(v11, v76);
        }
        else
        {
          sub_24B65EF80((uint64_t)v4, type metadata accessor for OCCaptureData);

          (*(void (**)(unsigned char *, uint64_t))(v31 + 8))(v11, v32);
        }
        uint64_t v49 = (uint64_t)v77;
        uint64_t v50 = v74;
        if (v73[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugAutoCaptureEnabled] == 1)
        {
          uint64_t v51 = sub_24B61DFE0();
          uint64_t v53 = v52;
          uint64_t result = v72(v52, 1, v50);
          if (result != 1)
          {
            uint64_t v54 = v53 + *(int *)(v50 + 52);
            sub_24B56CF38(v54, (uint64_t)v90, (uint64_t *)&unk_2697CC9B0);
            sub_24B56CF38((uint64_t)v90, (uint64_t)v91, (uint64_t *)&unk_2697CC9B0);
            if (sub_24B66DE00((uint64_t)v91) != 1)
            {
              (*(void (**)(void *__return_ptr))(*(void *)v18 + 448))(v79);
              uint64_t v55 = v79[1];
              uint64_t v56 = v79[3];
              int v57 = v80;
              char v58 = v81;
              char v59 = v82;
              char v60 = v83;
              char v61 = v84;
              char v62 = v85;
              char v63 = v86;
              char v64 = v87;
              char v65 = v88;
              char v66 = v89;
              uint64_t v67 = v79[2];
              uint64_t v68 = v79[4];
              *(_DWORD *)(v54 + 624) = v79[0];
              *(void *)(v54 + 632) = v55;
              *(void *)(v54 + 640) = v67;
              *(void *)(v54 + 648) = v56;
              *(void *)(v54 + 656) = v68;
              *(_DWORD *)(v54 + 664) = v57;
              *(unsigned char *)(v54 + 668) = v58;
              *(unsigned char *)(v54 + 669) = v59;
              *(unsigned char *)(v54 + 670) = v60;
              *(unsigned char *)(v54 + 671) = v61;
              *(unsigned char *)(v54 + 672) = v62;
              *(unsigned char *)(v54 + 673) = v63;
              *(unsigned char *)(v54 + 674) = v64;
              *(unsigned char *)(v54 + 675) = v65;
              *(unsigned char *)(v54 + 676) = v66;
            }
            ((void (*)(char *, void))v51)(v92, 0);
            swift_release();
            return sub_24B65EF80(v49, MEMORY[0x263F8C968]);
          }
LABEL_24:
          __break(1u);
          return result;
        }
        simd_float4 v47 = (uint64_t (*)(void))MEMORY[0x263F8C968];
        uint64_t v48 = (uint64_t)v77;
      }
      else
      {
        simd_float4 v47 = (uint64_t (*)(void))MEMORY[0x263F8C968];
        uint64_t v48 = (uint64_t)v77;
      }
      sub_24B65EF80(v48, v47);
      return swift_release();
    }
    __break(1u);
    goto LABEL_24;
  }

  return swift_release();
}

uint64_t sub_24B625920()
{
  id v1 = v0;
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureManager);
  if (v6)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v1) + 0x4D0);
    uint64_t v8 = swift_retain();
    char v9 = v7(v8);
    if (sub_24B61E214())
    {
      char v10 = (*(uint64_t (**)(void))(*(void *)v6 + 576))();
      if ((v9 & 1) == (v10 & 1)) {
        goto LABEL_12;
      }
    }
    else
    {
      if ((v9 & 1) == 0)
      {
LABEL_12:
        return swift_release();
      }
      char v10 = 0;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v18) = v10 & 1;
    v1;
    sub_24B682570();
    sub_24B613F1C();
    return swift_release();
  }
  uint64_t v11 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v11, v2);
  uint64_t v12 = sub_24B6824B0();
  os_log_type_t v13 = sub_24B682B20();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v18 = v15;
    *(_DWORD *)uint64_t v14 = 136380675;
    uint64_t v17 = sub_24B5627B8(0xD000000000000018, 0x800000024B690FE0, &v18);
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v12, v13, "ObjectCaptureSession.%{private}s: Failed to update manual shot status - capture manager has not been initialized!", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v15, -1, -1);
    MEMORY[0x24C5D6C00](v14, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_24B625C54(uint64_t *a1, uint64_t a2)
{
  void (*v125)(void *__return_ptr);
  uint64_t v126;
  void (*v127)(void, void, void);
  uint64_t v128;
  uint64_t result;
  void *v130;
  uint64_t v131;
  char v132;
  char v133;
  id v134;
  void *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  int v146;
  uint64_t v147;
  BOOL v148;
  id v149;
  uint64_t v150;
  int *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t *v160;
  uint64_t v161;
  char *v162;
  char v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char v172;
  uint64_t *v173;
  char v174;
  char *v175;
  int v176;
  uint64_t v177;
  char *v178;
  char *v179;
  NSObject *v180;
  os_log_type_t v181;
  uint64_t v182;
  uint64_t v183;
  unint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  int *v188;
  NSObject *v189;
  os_log_type_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  unint64_t v194;
  uint64_t v195;
  uint64_t v196;
  void (*v197)(void, void);
  char *v198;
  void *v199;
  NSObject *v200;
  os_log_type_t v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t *v206;
  NSObject *v207;
  os_log_type_t v208;
  uint64_t v209;
  uint64_t v210;
  unint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  void (*v220)(void);
  uint64_t v221;
  uint64_t v222;
  char *v223;
  uint64_t v224;
  void *v225;
  unint64_t v226;
  uint64_t v227;
  char *v228;
  uint64_t v229;
  unint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  char *v235;
  char *v236;
  NSObject *v237;
  os_log_type_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  uint64_t v244;
  uint64_t *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  void *v249;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  uint64_t *v255;
  NSObject *v256;
  os_log_type_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  void (*v262)(void);
  uint64_t v263;
  uint64_t v264;
  float32x4_t v265;
  float32x4_t v266;
  float32x4_t v267;
  float32x4_t v268;
  float32x4_t v269;
  float32x4_t v270;
  uint64_t v271;
  id v272;
  void *v273;
  id v274;
  uint64_t v275;
  uint64_t v276;
  id v277;
  char v278;
  void *v279;
  uint64_t *v280;
  uint64_t v281;
  id v282;
  id v283;
  uint64_t v284;
  uint64_t *v285;
  uint64_t v286;
  void *v287;
  id v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t *v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  char *v306;
  unint64_t *v307;
  unint64_t v308;
  char v309;
  uint64_t v310;
  unint64_t v311;
  unint64_t v312;
  unint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  void *v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  char *v322;
  uint64_t v323;
  uint64_t *v324;
  NSObject *v325;
  os_log_type_t v326;
  uint64_t v327;
  uint64_t v328;
  char *v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t *v332;
  char *v333;
  char *v334;
  uint64_t *v335;
  char *v336;
  uint64_t (*v337)(void);
  uint64_t v338;
  uint64_t *v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  char *v343;
  char *v344;
  char *v345;
  char *v346;
  float32x4_t *v347;
  void (*v348)(void *__return_ptr);
  uint64_t v349;
  char *v350;
  char *v351;
  char *v352;
  uint64_t v353;
  uint64_t *v354;
  uint64_t v355;
  uint64_t v356;
  void *v357;
  char *v358;
  uint64_t v359;
  void (*v360)(void, void, void, void);
  uint64_t v361;
  uint64_t v362;
  char *v363;
  char *v364;
  void *v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  int v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  double v375;
  id v376;
  id v377;
  float32x4_t *v378;
  char *v379;
  char *v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  float32x4_t v385;
  float32x4_t v386;
  float32x4_t v387;
  float32x4_t v388;
  id v389;
  id DataBuffer;
  float32x4_t *v391;
  float32x4_t v392;
  uint64_t v393;
  id v394[3];
  id v395;
  float32x4_t v396;
  id v397[3];
  double *v398;
  float32x4_t v399;
  float32x4_t v400;
  uint64_t v401;
  int *v402;
  uint64_t v403;
  uint64_t v404;
  float32x4_t v405;
  float32x4_t v406;
  float32x4_t v407;
  float32x4_t v408;
  uint64_t *v409;
  uint64_t v410;
  uint64_t v411[32];
  unsigned char v412[151];
  char v413;
  char v414;
  void v415[18];
  char v416;
  unsigned char v417[160];
  unsigned char v418[160];
  _OWORD v419[4];
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  char v430;
  float32x4_t v431;
  float32x4_t v432;
  float32x4_t v433;
  float32x4_t v434;
  long long v435;
  long long v436;
  long long v437;
  long long v438;
  long long v439;
  long long v440;
  long long v441;
  long long v442;
  long long v443;
  long long v444;
  char v445;
  _OWORD v446[14];
  char v447;
  unsigned char v448[80];
  void v449[8];
  char v450;
  float32x4_t v451[4];
  char v452;
  simd_float4x4 v453;
  simd_float4x4 v454;

  uint64_t v5 = v2;
  v406.i64[0] = a2;
  uint64_t v7 = sub_24B562F04(&qword_2697CCC90);
  MEMORY[0x270FA5388](v7 - 8);
  v359 = (uint64_t)&v331 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v356 = sub_24B562F04((uint64_t *)&unk_2697CCCF0);
  MEMORY[0x270FA5388](v356);
  v357 = (uint64_t *)((char *)&v331 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v353 = sub_24B562F04(&qword_2697CC800);
  MEMORY[0x270FA5388](v353);
  v354 = (uint64_t *)((char *)&v331 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_24B562F04(&qword_2697CC698);
  MEMORY[0x270FA5388](v11 - 8);
  v342 = (uint64_t)&v331 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for PhotogrammetrySample(0);
  v340 = *(void *)(v13 - 8);
  v341 = v13;
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  v335 = (uint64_t *)((char *)&v331 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (uint64_t *)((char *)&v331 - v16);
  v402 = (int *)type metadata accessor for OCCaptureData(0);
  uint64_t v18 = MEMORY[0x270FA5388](v402);
  v332 = (uint64_t *)((char *)&v331 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v18);
  v365 = (uint64_t *)((char *)&v331 - v20);
  uint64_t v21 = sub_24B682410();
  v405.i64[0] = *(void *)(v21 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  v358 = (char *)&v331 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  v364 = (char *)&v331 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  v346 = (char *)&v331 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  v378 = (float32x4_t *)((char *)&v331 - v29);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  v363 = (char *)&v331 - v31;
  MEMORY[0x270FA5388](v30);
  v344 = (char *)&v331 - v32;
  v401 = sub_24B6824D0();
  v403 = *(void *)(v401 - 8);
  uint64_t v33 = MEMORY[0x270FA5388](v401);
  v333 = (char *)&v331 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  v336 = (char *)&v331 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  v343 = (char *)&v331 - v38;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  v345 = (char *)&v331 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v43 = (char *)&v331 - v42;
  uint64_t v44 = MEMORY[0x270FA5388](v41);
  uint64_t v46 = (double *)((char *)&v331 - v45);
  uint64_t v47 = MEMORY[0x270FA5388](v44);
  v351 = (char *)&v331 - v48;
  MEMORY[0x270FA5388](v47);
  v350 = (char *)&v331 - v49;
  uint64_t v50 = sub_24B562F04((uint64_t *)&unk_2697CCA10);
  MEMORY[0x270FA5388](v50 - 8);
  v379 = (char *)&v331 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_24B562F04(&qword_2697CC460);
  uint64_t v53 = MEMORY[0x270FA5388](v52 - 8);
  v352 = (char *)&v331 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = MEMORY[0x270FA5388](v53);
  v334 = (char *)&v331 - v56;
  MEMORY[0x270FA5388](v55);
  v397[0] = (char *)&v331 - v57;
  v393 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  v355 = *(void *)(v393 - 8);
  MEMORY[0x270FA5388](v393);
  v398 = (double *)((char *)&v331 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v59 = sub_24B682C90();
  MEMORY[0x270FA5388](v59 - 8);
  v404 = (uint64_t)&v331 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v61 = (int *)type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
  uint64_t v62 = MEMORY[0x270FA5388](v61);
  v396.i64[0] = (uint64_t)&v331 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v62);
  char v65 = (float32x4_t *)((char *)&v331 - v64);
  char v66 = (void *)a1[2];
  v408.i64[0] = v21;
  v395 = v66;
  v392.i64[0] = (uint64_t)v46;
  if (!v66) {
    goto LABEL_10;
  }
  uint64_t v67 = (char *)v5 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maxPhotoDimensions;
  swift_beginAccess();
  if (v67[8] != 1) {
    goto LABEL_10;
  }
  uint64_t v68 = (__CVBuffer *)v395;
  if (CVPixelBufferGetWidth(v68) != 256)
  {
    __break(1u);
    goto LABEL_116;
  }
  if (CVPixelBufferGetHeight(v68) != 192)
  {
LABEL_116:
    __break(1u);
LABEL_117:
    swift_once();
LABEL_74:
    if ((uint64_t)v61 >= qword_2697CF6F8)
    {
      v233 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isPgManagerTornDown;
      if ((*(unsigned char *)(v407.i64[0] + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isPgManagerTornDown) & 1) == 0)
      {
        v234 = sub_24B57CB70();
        v235 = v343;
        ((void (*)(char *, uint64_t, __CVBuffer *))v379)(v343, v234, v68);
        v236 = (char *)(id)v407.i64[0];
        v237 = sub_24B6824B0();
        v238 = sub_24B682B30();
        if (os_log_type_enabled(v237, v238))
        {
          v239 = swift_slowAlloc();
          v240 = swift_slowAlloc();
          v397[0] = v236;
          v241 = v240;
          v431.i64[0] = v240;
          *(_DWORD *)v239 = 136381187;
          *(void *)&v419[0] = sub_24B5627B8(0xD000000000000024, 0x800000024B690F90, (uint64_t *)&v431);
          sub_24B682CD0();
          *(_WORD *)(v239 + 12) = 2050;
          *(void *)&v419[0] = *(void *)(*(void *)v3 + 16);
          sub_24B682CD0();

          *(_WORD *)(v239 + 22) = 2050;
          *(void *)&v419[0] = qword_2697CF6F8;
          sub_24B682CD0();
          _os_log_impl(&dword_24B55E000, v237, v238, "ObjectCaptureSession.%{private}s: Turned off mobileSfM because number of images (%{public}ld) exceeded the limit %{public}ld", (uint8_t *)v239, 0x20u);
          swift_arrayDestroy();
          v242 = v241;
          v236 = (char *)v397[0];
          MEMORY[0x24C5D6C00](v242, -1, -1);
          MEMORY[0x24C5D6C00](v239, -1, -1);

          v243 = v343;
          v244 = v401;
        }
        else
        {

          v243 = v235;
          v244 = (uint64_t)v68;
        }
        ((void (*)(char *, uint64_t))v378)(v243, v244);
        *(unsigned char *)(v407.i64[0] + v233) = 1;
        v261 = *(void *)&v236[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pgManager];
        uint64_t v46 = v398;
        if (v261)
        {
          v262 = *(void (**)(void))(*(void *)v261 + 608);
          v263 = swift_retain();
          v262(v263);
          swift_release();
        }
      }
    }
    else
    {
      v231 = *(void *)(v407.i64[0] + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pgManager);
      if (v231)
      {
        v431.i64[0] = v4;
        v431.i64[1] = (uint64_t)v389;
        v432.i64[0] = (uint64_t)v395;
        v432.i64[1] = v362;
        v433.i64[0] = (uint64_t)DataBuffer;
        swift_beginAccess();
        swift_retain();
        v232 = v342;
        static PhotogrammetrySample.makeSample(shot:shotMetadata:)((uint64_t)&v431, v46, v342);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v340 + 48))(v232, 1, v341) == 1)
        {
          swift_release();
          sub_24B5632A8(v232, &qword_2697CC698);
          if (((uint64_t)v394[0] & 1) == 0) {
            goto LABEL_91;
          }
        }
        else
        {
          v245 = v339;
          sub_24B65A134(v232, (uint64_t)v339, type metadata accessor for PhotogrammetrySample);
          (*(void (**)(uint64_t *))(*(void *)v231 + 584))(v245);
          v246 = (uint64_t)v364;
          v247 = v408.i64[0];
          ((void (*)(char *, uint64_t, uint64_t))v399.i64[0])(v364, v406.i64[0], v408.i64[0]);
          v248 = *v245;
          v249 = (void *)(v407.i64[0] + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotUUIDToIDMap);
          swift_beginAccess();
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&v419[0] = *v249;
          *v249 = 0x8000000000000000;
          sub_24B656990(v248, v246, isUniquelyReferenced_nonNull_native);
          *v249 = *(void *)&v419[0];
          swift_bridgeObjectRelease();
          ((void (*)(uint64_t, uint64_t))v402)(v246, v247);
          swift_endAccess();
          v251 = *v245;
          v252 = (uint64_t)v334;
          ((void (*)(char *, uint64_t, uint64_t))v399.i64[0])(v334, v406.i64[0], v247);
          v360(v252, 0, 1, v247);
          swift_beginAccess();
          sub_24B628BCC(v252, v251);
          swift_endAccess();
          v253 = sub_24B57CB70();
          v254 = v336;
          ((void (*)(char *, uint64_t, uint64_t))v379)(v336, v253, v401);
          v255 = v335;
          sub_24B659A1C((uint64_t)v245, (uint64_t)v335, type metadata accessor for PhotogrammetrySample);
          v256 = sub_24B6824B0();
          v257 = sub_24B682B30();
          if (os_log_type_enabled(v256, v257))
          {
            v258 = swift_slowAlloc();
            v397[0] = (id)swift_slowAlloc();
            v431.i64[0] = (uint64_t)v397[0];
            *(_DWORD *)v258 = 136380931;
            *(void *)&v419[0] = sub_24B5627B8(0xD000000000000024, 0x800000024B690F90, (uint64_t *)&v431);
            sub_24B682CD0();
            *(_WORD *)(v258 + 12) = 2050;
            v259 = *v255;
            sub_24B65EF80((uint64_t)v255, type metadata accessor for PhotogrammetrySample);
            *(void *)&v419[0] = v259;
            sub_24B682CD0();
            _os_log_impl(&dword_24B55E000, v256, v257, "ObjectCaptureSession.%{private}s: Added shot sample of id = %{public}ld to mobileSfM.", (uint8_t *)v258, 0x16u);
            v260 = (uint64_t)v397[0];
            swift_arrayDestroy();
            MEMORY[0x24C5D6C00](v260, -1, -1);
            MEMORY[0x24C5D6C00](v258, -1, -1);

            swift_release();
            ((void (*)(char *, uint64_t))v378)(v336, v401);
          }
          else
          {
            sub_24B65EF80((uint64_t)v255, type metadata accessor for PhotogrammetrySample);

            swift_release();
            ((void (*)(char *, uint64_t))v378)(v254, v401);
          }
          sub_24B65EF80((uint64_t)v339, type metadata accessor for PhotogrammetrySample);
          uint64_t v46 = v398;
          if (((uint64_t)v394[0] & 1) == 0) {
            goto LABEL_91;
          }
        }
        goto LABEL_88;
      }
    }
    if (((uint64_t)v394[0] & 1) == 0)
    {
LABEL_91:
      v453.columns[0].i64[0] = v388.i64[0];
      v453.columns[0].i64[1] = v387.i64[0];
      v453.columns[1].i64[0] = v386.i64[0];
      v453.columns[1].i64[1] = v385.i64[0];
      v453.columns[2].i64[0] = v384;
      v453.columns[2].i64[1] = v383;
      v453.columns[3].i64[0] = v382;
      v453.columns[3].i64[1] = v381;
      v454 = __invert_f4(v453);
      v268 = v347[3];
      v269 = v347[5];
      v270 = v347[6];
      v396 = v347[4];
      *(float32x4_t *)v397 = v268;
      v387 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v454.columns[0], v396.f32[0]), (float32x4_t)v454.columns[1], *(float32x2_t *)v396.f32, 1), (float32x4_t)v454.columns[2], v396, 2), (float32x4_t)v454.columns[3], v396, 3);
      v388 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v454.columns[0], v268.f32[0]), (float32x4_t)v454.columns[1], *(float32x2_t *)v268.f32, 1), (float32x4_t)v454.columns[2], v268, 2), (float32x4_t)v454.columns[3], v268, 3);
      *(float32x4_t *)v394 = v269;
      v392 = v270;
      v385 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v454.columns[0], v270.f32[0]), (float32x4_t)v454.columns[1], *(float32x2_t *)v270.f32, 1), (float32x4_t)v454.columns[2], v270, 2), (float32x4_t)v454.columns[3], v270, 3);
      v386 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v454.columns[0], v269.f32[0]), (float32x4_t)v454.columns[1], *(float32x2_t *)v269.f32, 1), (float32x4_t)v454.columns[2], v269, 2), (float32x4_t)v454.columns[3], v269, 3);
      v264 = v407.i64[0];
      sub_24B64D860();
      v431 = v388;
      v432 = v387;
      v433 = v386;
      v434 = v385;
      goto LABEL_92;
    }
LABEL_88:
    v264 = v407.i64[0];
    sub_24B64D860();
    v265 = v347[3];
    v266 = v347[5];
    v267 = v347[6];
    v396 = v347[4];
    *(float32x4_t *)v397 = v265;
    v431 = v265;
    v432 = v396;
    *(float32x4_t *)v394 = v266;
    v433 = v266;
    v434 = v267;
    v392 = v267;
LABEL_92:
    sub_24B682500();
    swift_release();
    v271 = (uint64_t)v391;
    v272 = objc_allocWithZone((Class)type metadata accessor for ObjectCaptureSession.ShotAnchor());
    v273 = (void *)sub_24B6823E0();
    v274 = objc_msgSend(v272, sel_initWithIdentifier_transform_, v273, *(double *)v397, *(double *)v396.i64, *(double *)v394, *(double *)v392.i64);

    v348(&v431);
    if (v431.i64[0] == 15)
    {
      sub_24B65A19C((id)0xF);
      sub_24B65A19C((id)0xF);
      objc_msgSend(*(id *)(v264 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession), sel_addAnchor_, v274);
    }
    else
    {
      sub_24B65A19C((id)v431.i64[0]);
      sub_24B65A19C((id)0xF);
    }
    v275 = (uint64_t)v364;
    v276 = v408.i64[0];
    ((void (*)(char *, uint64_t, uint64_t))v399.i64[0])(v364, v406.i64[0], v408.i64[0]);
    swift_beginAccess();
    v277 = v274;
    v278 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v419[0] = *(void *)v3;
    *(void *)uint64_t v3 = 0x8000000000000000;
    v397[0] = v277;
    sub_24B656670((uint64_t)v277, v275, v278);
    *(void *)uint64_t v3 = *(void *)&v419[0];
    swift_bridgeObjectRelease();
    ((void (*)(uint64_t, uint64_t))v402)(v275, v276);
    swift_endAccess();
    v279 = *(void **)(v264 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_writingPublishers);
    sub_24B64DBE0();
    swift_beginAccess();
    v280 = v354;
    v281 = (uint64_t)v354 + *(int *)(v353 + 48);
    *v354 = v4;
    v283 = v389;
    v282 = DataBuffer;
    v284 = (uint64_t)v395;
    v280[1] = (uint64_t)v389;
    v280[2] = v284;
    v280[3] = v362;
    v280[4] = (uint64_t)v282;
    sub_24B659A1C((uint64_t)v46, v281, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    v394[0] = v282;
    v402 = (int *)v283;
    v396.i64[0] = (uint64_t)v377;
    v395 = v376;
    sub_24B682500();
    swift_release();
    sub_24B5632A8((uint64_t)v280, &qword_2697CC800);
    uint64_t DataBuffer = v279;
    sub_24B64E1A8();
    v285 = (uint64_t *)(v264 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_planeMap);
    swift_beginAccess();
    v286 = *v285;
    v287 = *(void **)(v264 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_plane);
    if (v287)
    {
      swift_bridgeObjectRetain();
      v288 = objc_msgSend(v287, sel_identifier);
      v289 = (uint64_t)v352;
      sub_24B6823F0();

      v360(v289, 0, 1, v276);
    }
    else
    {
      v289 = (uint64_t)v352;
      v360(v352, 1, 1, v276);
      swift_bridgeObjectRetain();
    }
    v290 = v276;
    v291 = v271;
    v292 = v409;
    v293 = *v409;
    v294 = (uint64_t)v357;
    v295 = (uint64_t)v357 + *(int *)(v356 + 48);
    v296 = *(int *)(v356 + 64);
    *v357 = v286;
    sub_24B56CF38(v289, v295, &qword_2697CC460);
    *(void *)(v294 + v296) = v293;
    sub_24B682500();
    swift_release();
    sub_24B5632A8(v294, (uint64_t *)&unk_2697CCCF0);
    v297 = v292[4];
    if (v297)
    {
      v298 = v409[12];
      v299 = v409[11];
      v300 = v409[10];
      v301 = v409[9];
      v302 = v409[8];
      v303 = v409[7];
      v392.i64[0] = v409[6];
      v304 = v409[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24B64E3D0();
      v305 = *v409;
      v431.i64[0] = v297;
      v431.i64[1] = v304;
      v432.i64[0] = v392.i64[0];
      v432.i64[1] = v303;
      v433.i64[0] = v302;
      v433.i64[1] = v301;
      v434.i64[0] = v300;
      v434.i64[1] = v299;
      *(void *)&v435 = v298;
      *((void *)&v435 + 1) = v305;
      sub_24B682500();
      swift_release();
      v290 = v408.i64[0];
      v292 = v409;
      v291 = (uint64_t)v391;
      sub_24B5AE238(v297);
    }
    v306 = v358;
    ((void (*)(char *, uint64_t, uint64_t))v399.i64[0])(v358, v406.i64[0], v290);
    v307 = (unint64_t *)(v407.i64[0] + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotsInCurrentSegment);
    swift_beginAccess();
    v308 = *v307;
    v309 = swift_isUniquelyReferenced_nonNull_native();
    *v307 = v308;
    if ((v309 & 1) == 0)
    {
      v308 = sub_24B654498(0, *(void *)(v308 + 16) + 1, 1, v308);
      *v307 = v308;
    }
    v310 = (uint64_t)v398;
    v312 = *(void *)(v308 + 16);
    v311 = *(void *)(v308 + 24);
    if (v312 >= v311 >> 1)
    {
      v308 = sub_24B654498(v311 > 1, v312 + 1, 1, v308);
      *v307 = v308;
    }
    *(void *)(v308 + 16) = v312 + 1;
    v313 = v308
         + ((*(unsigned __int8 *)(v405.i64[0] + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v405.i64[0] + 80))
         + *(void *)(v405.i64[0] + 72) * v312;
    v314 = v408.i64[0];
    (*(void (**)(unint64_t, char *, uint64_t))(v405.i64[0] + 32))(v313, v306, v408.i64[0]);
    swift_endAccess();
    v315 = v393;
    *(void *)(v310 + *(int *)(v393 + 52)) = MEMORY[0x263F8EE78];
    v316 = *(int *)(v315 + 44);
    v317 = *(void **)(v310 + v316);
    *(void *)(v310 + v316) = 0;
    swift_bridgeObjectRelease();

    v318 = (uint64_t)v364;
    ((void (*)(char *, uint64_t, uint64_t))v399.i64[0])(v364, v406.i64[0], v314);
    v319 = v359;
    sub_24B659A1C(v310, v359, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v355 + 56))(v319, 0, 1, v315);
    v320 = v407.i64[0];
    swift_beginAccess();
    sub_24B628E28(v319, v318);
    swift_endAccess();
    if (*(unsigned char *)(v320 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__coverageEnabled) != 1) {
      goto LABEL_110;
    }
    sub_24B629048((uint64_t)v292, (uint64_t)v419);
    sub_24B56CF38((uint64_t)v419, (uint64_t)&v431, &qword_2697CCA20);
    if (sub_24B66DDE4((uint64_t)&v431) == 1) {
      goto LABEL_110;
    }
    v446[12] = v443;
    v446[13] = v444;
    v447 = v445;
    v446[8] = v439;
    v446[9] = v440;
    v446[10] = v441;
    v446[11] = v442;
    v446[4] = v435;
    v446[5] = v436;
    v446[6] = v437;
    v446[7] = v438;
    v446[0] = v431;
    v446[1] = v432;
    v446[2] = v433;
    v446[3] = v434;
    sub_24B56CF38((uint64_t)v446, (uint64_t)v448, &qword_2697CC9A0);
    sub_24B56CF38((uint64_t)v448, (uint64_t)v451, &qword_2697CC9A0);
    if (v452 == 1
      || (v407 = v451[2],
          v408 = v451[3],
          v405 = v451[0],
          v406 = v451[1],
          swift_beginAccess(),
          !OCProxySurfaceCoverageGuideAddCameraShot()))
    {
LABEL_110:
    }
    else
    {
      v321 = sub_24B57CB70();
      v322 = v333;
      v323 = v401;
      ((void (*)(char *, uint64_t, uint64_t))v379)(v333, v321, v401);
      v324 = v332;
      sub_24B659A1C((uint64_t)v292, (uint64_t)v332, type metadata accessor for OCCaptureData);
      v325 = sub_24B6824B0();
      v326 = sub_24B682B20();
      if (os_log_type_enabled(v325, v326))
      {
        v327 = swift_slowAlloc();
        v328 = swift_slowAlloc();
        v411[0] = v328;
        *(_DWORD *)v327 = 136380931;
        v410 = sub_24B5627B8(0xD000000000000024, 0x800000024B690F90, v411);
        sub_24B682CD0();
        *(_WORD *)(v327 + 12) = 2050;
        v410 = *v324;
        sub_24B682CD0();
        sub_24B65EF80((uint64_t)v324, type metadata accessor for OCCaptureData);
        _os_log_impl(&dword_24B55E000, v325, v326, "ObjectCaptureSession.%{private}s: Failed to add camera for coverage guide at still image capture at timestamp %{public}f!", (uint8_t *)v327, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v328, -1, -1);
        MEMORY[0x24C5D6C00](v327, -1, -1);

        v329 = v333;
        v330 = v401;
      }
      else
      {

        sub_24B65EF80((uint64_t)v324, type metadata accessor for OCCaptureData);
        v329 = v322;
        v330 = v323;
      }
      ((void (*)(char *, uint64_t))v378)(v329, v330);
    }
    sub_24B65EF80(v404, MEMORY[0x263F8C968]);
    sub_24B65EF80(v291, type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera);
    sub_24B65EF80(v310, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    sub_24B56CF38((uint64_t)v415, (uint64_t)v411, &qword_2697CC9C0);
    __n128 v206 = v411;
    return sub_24B56D16C((uint64_t)v206, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_24B56D1D8);
  }
  __n128 v69 = (void *)a1[3];
  if (!v69)
  {
LABEL_9:

    goto LABEL_10;
  }
  int v70 = v69;
  if (CVPixelBufferGetWidth(v70) != 256)
  {
    __break(1u);
    goto LABEL_119;
  }
  size_t Height = CVPixelBufferGetHeight(v70);

  if (Height != 192)
  {
    __break(1u);
    goto LABEL_9;
  }
LABEL_10:
  v380 = v43;
  v339 = v17;
  uint64_t v4 = *a1;
  unint64_t v72 = (void *)a1[1];
  uint64_t v73 = (void *)a1[3];
  v377 = v395;
  v389 = v72;
  v362 = (uint64_t)v73;
  v376 = v73;
  uint64_t DataBuffer = (id)OCNonModularSPI_ADJasperPointCloud_CreateDataBuffer();
  uint64_t v74 = (float32x4_t *)((char *)a1 + v402[10]);
  v407 = *v74;
  float32x4_t v75 = v74[1];
  v399 = v74[2];
  v400 = v75;
  *(float32x4_t *)v394 = v74[3];
  float32x4_t v76 = v74[4];
  v387 = v74[5];
  v388 = v76;
  v386 = v74[6];
  uint64_t v77 = (int *)type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  sub_24B659A1C((uint64_t)v74 + v77[6], (uint64_t)v65 + v61[6], MEMORY[0x263F8C968]);
  uint64_t v78 = *(void **)((char *)v74->i64 + v77[8]);
  uint64_t v79 = (char *)v74 + v77[7];
  float32x4_t v80 = v400;
  *char v65 = v407;
  v65[1] = v80;
  float32x4_t v81 = *(float32x4_t *)v394;
  v65[2] = v399;
  int8x16_t v65[3] = v81;
  float32x4_t v82 = v387;
  v65[4] = v388;
  v65[5] = v82;
  v65[6] = v386;
  *(uint64_t *)((char *)v65->i64 + v61[7]) = (uint64_t)v78;
  char v83 = v79[64];
  char v84 = (char *)v65 + v61[8];
  long long v85 = *((_OWORD *)v79 + 1);
  *(_OWORD *)char v84 = *(_OWORD *)v79;
  *((_OWORD *)v84 + 1) = v85;
  long long v86 = *((_OWORD *)v79 + 3);
  *((_OWORD *)v84 + 2) = *((_OWORD *)v79 + 2);
  *((_OWORD *)v84 + 3) = v86;
  v84[64] = v83;
  char v87 = (char *)v65 + v61[9];
  *(_OWORD *)char v87 = 0u;
  *((_OWORD *)v87 + 1) = 0u;
  *((_OWORD *)v87 + 2) = 0u;
  *((_OWORD *)v87 + 3) = 0u;
  v87[64] = 1;
  char v88 = (char *)v65 + v61[10];
  *(_OWORD *)char v88 = 0u;
  *((_OWORD *)v88 + 1) = 0u;
  *((_OWORD *)v88 + 2) = 0u;
  *((_OWORD *)v88 + 3) = 0u;
  v88[64] = 1;
  uint64_t v89 = MEMORY[0x263F8EE78];
  *(uint64_t *)((char *)v65->i64 + v61[11]) = MEMORY[0x263F8EE78];
  *(uint64_t *)((char *)v65->i64 + v61[12]) = v89;
  sub_24B56DEC0((uint64_t)v418);
  sub_24B56CF38((uint64_t)v418, (uint64_t)v415, &qword_2697CC9C0);
  v414 = 0;
  v413 = 1;
  v388.i64[0] = *(void *)((char *)v5 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform);
  v387.i64[0] = *(void *)((char *)v5 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 8);
  v386.i64[0] = *(void *)((char *)v5 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 16);
  uint64_t v90 = *(void *)((char *)v5 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 24);
  v384 = *(void *)((char *)v5 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 32);
  v385.i64[0] = v90;
  uint64_t v91 = *(void *)((char *)v5 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 40);
  v382 = *(void *)((char *)v5 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 48);
  v383 = v91;
  v381 = *(void *)((char *)v5 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 56);
  LODWORD(v394[0]) = *((unsigned __int8 *)v5 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 64);
  uint64_t v92 = sub_24B682C80();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56))(v404, 1, 2, v92);
  uint64_t v93 = (*MEMORY[0x263F8EED0] & *v5) + 1208;
  double v94 = *(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v5) + 0x4B8);
  id v95 = v78;
  v337 = v94;
  v338 = v93;
  char v96 = v94(v95);
  if (v96)
  {
    id v97 = (float32x4_t *)((char *)v5 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformBoundingBox);
    if (*((unsigned char *)v5 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformBoundingBox + 64))
    {
      OCNonModularSPI_Serialization_InvalidBoundingBoxTransform();
    }
    else
    {
      float32x4_t v112 = v97[1];
      float32x4_t v111 = v97[2];
      float32x4_t v113 = *v97;
      uint64_t v115 = v97[3].i64[0];
      uint64_t v114 = v97[3].i64[1];
      v431 = v113;
      v432 = v112;
      v433 = v111;
      v434.i64[1] = v114;
      v434.i64[0] = v115;
      double v98 = OCBoundingBox.scaledTransform(scale:)(COERCE_FLOAT(*(_OWORD *)((char *)v5
                                                                         + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_scaleForFreeformReconstruction)));
    }
    uint64_t v116 = (void *)MEMORY[0x263F8EED0];
    v375 = v98;
    v373 = v100;
    v374 = v99;
    v371 = v102;
    v372 = v101;
    v370 = v103;
    v368 = v104;
    v367 = v105;
    v369 = 1;
    v414 = 1;
    v413 = 0;
    uint64_t v117 = sub_24B56CF38((uint64_t)v418, (uint64_t)v417, &qword_2697CC9C0);
    uint64_t v118 = v408.i64[0];
  }
  else
  {
    uint64_t v106 = (float32x4_t *)((char *)v5 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox);
    if (*((unsigned char *)v5 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox + 64))
    {
      long long v107 = *MEMORY[0x263EF89A8];
      long long v108 = *(_OWORD *)(MEMORY[0x263EF89A8] + 16);
      long long v109 = *(_OWORD *)(MEMORY[0x263EF89A8] + 32);
      long long v110 = *(_OWORD *)(MEMORY[0x263EF89A8] + 48);
    }
    else
    {
      float32x4_t v120 = v106[1];
      float32x4_t v119 = v106[2];
      float32x4_t v121 = *v106;
      uint64_t v123 = v106[3].i64[0];
      uint64_t v122 = v106[3].i64[1];
      v431 = v121;
      v432 = v120;
      v433 = v119;
      v434.i64[1] = v122;
      v434.i64[0] = v123;
      *(double *)&long long v107 = OCBoundingBox.scaledTransform(scale:)(COERCE_FLOAT(*(_OWORD *)((char *)v5
                                                                                      + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_scaleForObjectCentricReconstruction)));
    }
    uint64_t v118 = v408.i64[0];
    if ((uint64_t)v394[0])
    {
      uint64_t v124 = v418;
    }
    else
    {
      v419[0] = v107;
      v419[1] = v108;
      v419[2] = v109;
      v419[3] = v110;
      v421 = v387.i64[0];
      v420 = v388.i64[0];
      v423 = v385.i64[0];
      v422 = v386.i64[0];
      v425 = v383;
      v424 = v384;
      v427 = v381;
      v426 = v382;
      v429 = 0;
      v428 = 0;
      v430 = 1;
      nullsub_1(v419);
      sub_24B56CF38((uint64_t)v419, (uint64_t)v415, &qword_2697CC9C0);
      uint64_t v124 = v419;
    }
    sub_24B56CF38((uint64_t)v124, (uint64_t)&v431, &qword_2697CC9C0);
    uint64_t v116 = (void *)MEMORY[0x263F8EED0];
    uint64_t v117 = sub_24B56CF38((uint64_t)&v431, (uint64_t)v417, &qword_2697CC9C0);
    v374 = 0;
    v375 = 0.0;
    v372 = 0;
    v373 = 0;
    v370 = 0;
    v371 = 0;
    v367 = 0;
    v368 = 0;
    v369 = 0;
  }
  int v125 = *(void (**)(void *__return_ptr))((*v116 & *v5) + 0x420);
  v349 = (*v116 & *v5) + 1056;
  ((void (*)(_OWORD *__return_ptr, uint64_t))v125)(v419, v117);
  if (*(void *)&v419[0] == 15)
  {
    sub_24B65A19C((id)0xF);
    sub_24B65A19C((id)0xF);
    sub_24B56CF38((uint64_t)v417, (uint64_t)&v431, &qword_2697CC9C0);
    if (sub_24B56CF9C((uint64_t)&v431) != 1)
    {
      v415[17] = *(void *)((char *)v5 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_staticSegmentID);
      v416 = 0;
    }
    if (v96)
    {
      v366 = *(void *)((char *)v5 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_staticSegmentID);
      v414 = 0;
      goto LABEL_29;
    }
  }
  else
  {
    sub_24B65A19C(*(id *)&v419[0]);
    sub_24B65A19C((id)0xF);
  }
  v366 = 0;
LABEL_29:
  v409 = a1;
  sub_24B659A1C((uint64_t)v65, v396.i64[0], type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera);
  uint64_t v126 = v405.i64[0];
  uint64_t v127 = *(void (**)(void, void, void))(v405.i64[0] + 16);
  uint64_t v128 = (uint64_t)v397[0];
  v400.i64[0] = v405.i64[0] + 16;
  v399.i64[0] = (uint64_t)v127;
  v127(v397[0], (char *)v5 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_identifier, v118);
  v360 = *(void (**)(void, void, void, void))(v126 + 56);
  v361 = v126 + 56;
  v360(v128, 0, 1, v118);
  uint64_t result = sub_24B56CF38((uint64_t)v415, (uint64_t)v412, &qword_2697CC9C0);
  v407.i64[0] = (uint64_t)v5;
  uint64_t v130 = *(void **)((char *)v5 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_motionManager);
  char v131 = (uint64_t)v379;
  if (v130)
  {
    uint64_t v132 = v414;
    uint64_t v133 = v413;
    sub_24B56D16C((uint64_t)v412, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_24B56CFC0);
    uint64_t v134 = objc_msgSend(v130, sel_deviceMotion);
    uint64_t v135 = v134;
    v391 = v65;
    v347 = v74;
    v348 = v125;
    if (v134)
    {
      objc_msgSend(v134, sel_gravity);
      uint64_t v137 = v136;
      float32x4_t v139 = v138;
      uint64_t v141 = v140;
    }
    else
    {
      uint64_t v137 = 0;
      float32x4_t v139 = 0;
      uint64_t v141 = 0;
    }
    uint64_t v142 = *(void **)((char *)v409 + v402[11]);
    uint64_t v143 = v407.i64[0];
    uint64_t v144 = v407.i64[0] + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_currentFrame;
    swift_beginAccess();
    sub_24B563A6C(v144, v131, (uint64_t *)&unk_2697CCA10);
    uint64_t v145 = type metadata accessor for ObjectCaptureSession.Frame(0);
    uint64_t v146 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v145 - 8) + 48))(v131, 1, v145);
    int v147 = 0;
    if (!v146) {
      int v147 = *(void *)(v131 + *(int *)(v145 + 44));
    }
    v148 = v146 != 0;
    id v149 = v142;
    sub_24B5632A8(v131, (uint64_t *)&unk_2697CCA10);
    uint64_t v150 = (uint64_t)v398;
    *(void *)v398 = v4;
    uint64_t v151 = (int *)v393;
    sub_24B65A134(v396.i64[0], v150 + *(int *)(v393 + 20), type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera);
    sub_24B56CF38((uint64_t)v397[0], v150 + v151[6], &qword_2697CC460);
    sub_24B56CF38((uint64_t)v412, v150 + v151[7], &qword_2697CC9C0);
    uint64_t v152 = v150 + v151[8];
    uint64_t v153 = v374;
    *(double *)uint64_t v152 = v375;
    *(void *)(v152 + 8) = v153;
    uint64_t v154 = v372;
    *(void *)(v152 + 16) = v373;
    *(void *)(v152 + 24) = v154;
    id v155 = v370;
    *(void *)(v152 + 32) = v371;
    *(void *)(v152 + 40) = v155;
    float32x4_t v156 = v367;
    *(void *)(v152 + 48) = v368;
    *(void *)(v152 + 56) = v156;
    *(void *)(v152 + 64) = v366;
    *(unsigned char *)(v152 + 72) = v132;
    *(unsigned char *)(v152 + 73) = v133;
    *(unsigned char *)(v150 + v151[9]) = v369;
    uint64_t v157 = v150 + v151[10];
    *(void *)uint64_t v157 = v137;
    *(void *)(v157 + 8) = v139;
    *(void *)(v157 + 16) = v141;
    *(unsigned char *)(v157 + 24) = v135 == 0;
    *(void *)(v150 + v151[11]) = v142;
    uint64_t v158 = v150 + v151[12];
    *(void *)uint64_t v158 = v147;
    *(unsigned char *)(v158 + 8) = v148;
    v159 = v151[13];
    *(void *)(v150 + v159) = MEMORY[0x263F8EE78];
    long long v160 = *(uint64_t **)(v143 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureManager);
    uint64_t v68 = (__CVBuffer *)v401;
    long long v161 = v408.i64[0];
    long long v162 = (char *)v378;
    if (v160)
    {
      swift_retain();
      long long v163 = sub_24B5FAE6C(v404);
      int v164 = v388.i64[0];
      int v165 = v387.i64[0];
      v166 = v386.i64[0];
      uint64_t v168 = v384;
      uint64_t v167 = v385.i64[0];
      uint64_t v170 = v382;
      uint64_t v169 = v383;
      uint64_t v171 = v381;
      v172 = (char)v394[0];
      if ((v163 & 1) == 0)
      {
        int v164 = 0;
        int v165 = 0;
        v166 = 0;
        uint64_t v167 = 0;
        uint64_t v168 = 0;
        uint64_t v169 = 0;
        uint64_t v170 = 0;
        uint64_t v171 = 0;
        v172 = 1;
      }
      v449[0] = v164;
      v449[1] = v165;
      v449[2] = v166;
      v449[3] = v167;
      v449[4] = v168;
      v449[5] = v169;
      v449[6] = v170;
      v449[7] = v171;
      v450 = v172;
      uint64_t v173 = v409;
      uint64_t v174 = (*(uint64_t (**)(uint64_t, uint64_t *, void *))(*v160 + 496))(v406.i64[0], v409, v449);
      uint64_t v175 = v363;
      if (v174)
      {
        uint64_t v176 = *((unsigned __int8 *)v173 + v402[12]);
        uint64_t v177 = sub_24B57CB70();
        uint64_t v178 = *(char **)(v403 + 16);
        v379 = v178;
        v380 = (char *)(v403 + 16);
        if (v176 == 1)
        {
          ((void (*)(char *, uint64_t, __CVBuffer *))v178)(v350, v177, v68);
          v179 = v344;
          ((void (*)(char *, uint64_t, uint64_t))v399.i64[0])(v344, v406.i64[0], v161);
          float32x4_t v180 = sub_24B6824B0();
          float32x4_t v181 = sub_24B682B30();
          if (os_log_type_enabled(v180, v181))
          {
            float32x4_t v182 = swift_slowAlloc();
            v397[0] = (id)swift_slowAlloc();
            v431.i64[0] = (uint64_t)v397[0];
            *(_DWORD *)float32x4_t v182 = 136380931;
            *(void *)&v419[0] = sub_24B5627B8(0xD000000000000024, 0x800000024B690F90, (uint64_t *)&v431);
            sub_24B682CD0();
            *(_WORD *)(v182 + 12) = 2082;
            float32x4_t v183 = sub_24B6823D0();
            *(void *)&v419[0] = sub_24B5627B8(v183, v184, (uint64_t *)&v431);
            uint64_t v68 = (__CVBuffer *)v401;
            sub_24B682CD0();
            swift_bridgeObjectRelease();
            v402 = *(int **)(v405.i64[0] + 8);
            ((void (*)(char *, uint64_t))v402)(v179, v408.i64[0]);
            _os_log_impl(&dword_24B55E000, v180, v181, "ObjectCaptureSession.%{private}s: Added shot %{public}s taken by automatic capture.", (uint8_t *)v182, 0x16u);
            float32x4_t v185 = (uint64_t)v397[0];
            swift_arrayDestroy();
            MEMORY[0x24C5D6C00](v185, -1, -1);
            MEMORY[0x24C5D6C00](v182, -1, -1);
          }
          else
          {
            v402 = *(int **)(v405.i64[0] + 8);
            ((void (*)(char *, uint64_t))v402)(v179, v161);
          }

          char v65 = *(float32x4_t **)(v403 + 8);
          v213 = ((uint64_t (*)(char *, __CVBuffer *))v65)(v350, v68);
        }
        else
        {
          ((void (*)(char *, uint64_t, __CVBuffer *))v178)(v351, v177, v68);
          ((void (*)(char *, uint64_t, uint64_t))v399.i64[0])(v175, v406.i64[0], v161);
          __n128 v207 = sub_24B6824B0();
          id v208 = sub_24B682B30();
          if (os_log_type_enabled(v207, v208))
          {
            uint64_t v209 = swift_slowAlloc();
            v397[0] = (id)swift_slowAlloc();
            v431.i64[0] = (uint64_t)v397[0];
            *(_DWORD *)uint64_t v209 = 136380931;
            *(void *)&v419[0] = sub_24B5627B8(0xD000000000000024, 0x800000024B690F90, (uint64_t *)&v431);
            sub_24B682CD0();
            *(_WORD *)(v209 + 12) = 2082;
            uint64_t v210 = sub_24B6823D0();
            *(void *)&v419[0] = sub_24B5627B8(v210, v211, (uint64_t *)&v431);
            uint64_t v68 = (__CVBuffer *)v401;
            sub_24B682CD0();
            swift_bridgeObjectRelease();
            v402 = *(int **)(v405.i64[0] + 8);
            ((void (*)(char *, uint64_t))v402)(v175, v408.i64[0]);
            _os_log_impl(&dword_24B55E000, v207, v208, "ObjectCaptureSession.%{private}s: Added  shot %{public}s taken by manual capture.", (uint8_t *)v209, 0x16u);
            uint64_t v212 = (uint64_t)v397[0];
            swift_arrayDestroy();
            MEMORY[0x24C5D6C00](v212, -1, -1);
            MEMORY[0x24C5D6C00](v209, -1, -1);
          }
          else
          {
            v402 = *(int **)(v405.i64[0] + 8);
            ((void (*)(char *, uint64_t))v402)(v175, v161);
          }

          char v65 = *(float32x4_t **)(v403 + 8);
          v213 = ((uint64_t (*)(char *, __CVBuffer *))v65)(v351, v68);
        }
        uint64_t v46 = v398;
        if (*(unsigned char *)(v407.i64[0] + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__captureRateControlEnabled) == 1)
        {
          if (*(unsigned char *)(v407.i64[0] + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugAdjustedCaptureCoolDown + 8))
          {
            v214 = v337(v213);
            v215 = *v160;
            if (v214) {
              (*(void (**)(void))(v215 + 544))();
            }
            else {
              (*(void (**)(void))(v215 + 536))();
            }
          }
          else
          {
            (*(void (**)(uint64_t, double))(*v160 + 552))(v213, *(double *)(v407.i64[0] + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugAdjustedCaptureCoolDown));
          }
        }
        swift_release();
        if (*sub_24B5F81CC() == 1)
        {
          v216 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_temporalDepthPointCloudCircularBuffer;
          v217 = v407.i64[0];
          if (*(void *)(v407.i64[0]
                         + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_temporalDepthPointCloudCircularBuffer))
          {
            swift_retain();
            v218 = sub_24B680818();
            swift_release();
          }
          else
          {
            v218 = MEMORY[0x263F8EE78];
          }
          uint64_t v5 = v346;
          swift_bridgeObjectRelease();
          *(void *)((char *)v46 + v159) = v218;
          v219 = *(void *)(v217 + v216);
          if (v219)
          {
            v220 = *(void (**)(void))(*(void *)v219 + 240);
            v221 = swift_retain();
            v220(v221);
            swift_release();
          }
          v222 = sub_24B57CB70();
          v223 = v345;
          uint64_t v68 = (__CVBuffer *)v401;
          ((void (*)(char *, uint64_t, uint64_t))v379)(v345, v222, v401);
          v224 = v408.i64[0];
          ((void (*)(void *, uint64_t, uint64_t))v399.i64[0])(v5, v406.i64[0], v408.i64[0]);
          int v70 = (__CVBuffer *)sub_24B6824B0();
          v225 = v5;
          LOBYTE(v5) = sub_24B682B30();
          if (os_log_type_enabled((os_log_t)v70, (os_log_type_t)v5))
          {
            uint64_t v17 = (uint64_t *)swift_slowAlloc();
            uint64_t v43 = (char *)swift_slowAlloc();
            v431.i64[0] = (uint64_t)v43;
            *(_DWORD *)uint64_t v17 = 136381187;
            *(void *)&v419[0] = sub_24B5627B8(0xD000000000000024, 0x800000024B690F90, (uint64_t *)&v431);
            sub_24B682CD0();
            *((_WORD *)v17 + 6) = 2050;
            swift_beginAccess();
            v226 = *(void *)((char *)v46 + *(int *)(v393 + 52));
            if (!(v226 >> 62))
            {
              v227 = *(void *)((v226 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_71:
              *(void *)&v419[0] = v227;
              sub_24B682CD0();
              *((_WORD *)v17 + 11) = 2082;
              v228 = v346;
              v229 = sub_24B6823D0();
              *(void *)&v419[0] = sub_24B5627B8(v229, v230, (uint64_t *)&v431);
              sub_24B682CD0();
              swift_bridgeObjectRelease();
              ((void (*)(char *, uint64_t))v402)(v228, v408.i64[0]);
              _os_log_impl(&dword_24B55E000, (os_log_t)v70, (os_log_type_t)v5, "ObjectCaptureSession.%{private}s: Added %{public}ld\nframes of temporal LiDAR point cloud to metadata of id = %{public}s.", (uint8_t *)v17, 0x20u);
              swift_arrayDestroy();
              MEMORY[0x24C5D6C00](v43, -1, -1);
              MEMORY[0x24C5D6C00](v17, -1, -1);

              uint64_t v68 = (__CVBuffer *)v401;
              ((void (*)(char *, uint64_t))v65)(v345, v401);
              uint64_t v46 = v398;
              goto LABEL_73;
            }
LABEL_119:
            swift_bridgeObjectRetain();
            v227 = sub_24B682F00();
            swift_bridgeObjectRelease();
            goto LABEL_71;
          }
          ((void (*)(void *, uint64_t))v402)(v225, v224);

          ((void (*)(char *, __CVBuffer *))v65)(v223, v68);
        }
LABEL_73:
        v378 = v65;
        uint64_t v3 = v407.i64[0] + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_uuidToShotAnchorsMap;
        swift_beginAccess();
        char v61 = *(int **)(*(void *)v3 + 16);
        if (qword_2697CF6F0 == -1) {
          goto LABEL_74;
        }
        goto LABEL_117;
      }
      swift_release();
    }
    float32x4_t v186 = sub_24B57CB70();
    v187 = v403;
    v188 = *(int **)(v403 + 16);
    v407.i64[0] = v186;
    v402 = v188;
    ((void (*)(uint64_t))v188)(v392.i64[0]);
    ((void (*)(char *, uint64_t, uint64_t))v399.i64[0])(v162, v406.i64[0], v161);
    v189 = sub_24B6824B0();
    v190 = sub_24B682B20();
    if (os_log_type_enabled(v189, v190))
    {
      v191 = swift_slowAlloc();
      v192 = swift_slowAlloc();
      v431.i64[0] = v192;
      *(_DWORD *)v191 = 136380931;
      *(void *)&v419[0] = sub_24B5627B8(0xD000000000000024, 0x800000024B690F90, (uint64_t *)&v431);
      sub_24B682CD0();
      *(_WORD *)(v191 + 12) = 2082;
      v193 = sub_24B6823D0();
      *(void *)&v419[0] = sub_24B5627B8(v193, v194, (uint64_t *)&v431);
      uint64_t v68 = (__CVBuffer *)v401;
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v405.i64[0] + 8))(v162, v408.i64[0]);
      _os_log_impl(&dword_24B55E000, v189, v190, "ObjectCaptureSession.%{private}s: Failed to add shot of id = %{public}s to automatic capture!", (uint8_t *)v191, 0x16u);
      swift_arrayDestroy();
      uint64_t v195 = v192;
      uint64_t v150 = (uint64_t)v398;
      MEMORY[0x24C5D6C00](v195, -1, -1);
      v196 = v191;
      v187 = v403;
      MEMORY[0x24C5D6C00](v196, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v405.i64[0] + 8))(v162, v161);
    }

    double v197 = *(void (**)(void, void))(v187 + 8);
    v197(v392.i64[0], v68);
    uint64_t v198 = v380;
    ((void (*)(char *, uint64_t, __CVBuffer *))v402)(v380, v407.i64[0], v68);
    uint64_t v199 = v365;
    sub_24B659A1C((uint64_t)v409, (uint64_t)v365, type metadata accessor for OCCaptureData);
    v200 = sub_24B6824B0();
    id v201 = sub_24B682B30();
    if (os_log_type_enabled(v200, v201))
    {
      v202 = swift_slowAlloc();
      v203 = swift_slowAlloc();
      v431.i64[0] = v203;
      *(_DWORD *)v202 = 136380931;
      *(void *)&v419[0] = sub_24B5627B8(0xD000000000000024, 0x800000024B690F90, (uint64_t *)&v431);
      sub_24B682CD0();
      *(_WORD *)(v202 + 12) = 2050;
      *(void *)&v419[0] = *v199;
      sub_24B682CD0();
      sub_24B65EF80((uint64_t)v199, type metadata accessor for OCCaptureData);
      _os_log_impl(&dword_24B55E000, v200, v201, "ObjectCaptureSession.%{private}s: High-resolution pixel buffer %{public}f has been released because the shot has been rejected.", (uint8_t *)v202, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v203, -1, -1);
      MEMORY[0x24C5D6C00](v202, -1, -1);

      double v204 = v380;
      long long v205 = v401;
    }
    else
    {

      sub_24B65EF80((uint64_t)v199, type metadata accessor for OCCaptureData);
      double v204 = v198;
      long long v205 = (uint64_t)v68;
    }
    v197(v204, v205);
    sub_24B65EF80(v404, MEMORY[0x263F8C968]);
    sub_24B65EF80((uint64_t)v391, type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera);
    sub_24B65EF80(v150, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    sub_24B56CF38((uint64_t)v415, (uint64_t)&v431, &qword_2697CC9C0);
    __n128 v206 = (uint64_t *)&v431;
    return sub_24B56D16C((uint64_t)v206, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_24B56D1D8);
  }
  __break(1u);
  return result;
}

uint64_t sub_24B628BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24B562F04(&qword_2697CC460);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24B682410();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_24B5632A8(a1, &qword_2697CC460);
    unint64_t v13 = sub_24B5D43DC(a2);
    if (v14)
    {
      unint64_t v15 = v13;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v17 = *v3;
      uint64_t v21 = *v3;
      *uint64_t v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_24B657298();
        uint64_t v17 = v21;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 32))(v8, *(void *)(v17 + 56) + *(void *)(v10 + 72) * v15, v9);
      sub_24B655FD4(v15, v17);
      *uint64_t v3 = v17;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    }
    return sub_24B5632A8((uint64_t)v8, &qword_2697CC460);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_24B656828((uint64_t)v12, a2, v18);
    *uint64_t v3 = v21;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24B628E28(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24B562F04(&qword_2697CCC90);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_24B5632A8(a1, &qword_2697CCC90);
    sub_24B654714(a2, (uint64_t)v8);
    uint64_t v13 = sub_24B682410();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a2, v13);
    return sub_24B5632A8((uint64_t)v8, &qword_2697CCC90);
  }
  else
  {
    sub_24B65A134(a1, (uint64_t)v11, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_24B65649C((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v18;
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_24B682410();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a2, v16);
  }
}

int64_t sub_24B629048@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v4 = sub_24B682C80();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24B682C90();
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v32 - v12;
  *(void *)&long long v46 = *(void *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform);
  *(void *)&long long v45 = *(void *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 8);
  *(void *)&long long v44 = *(void *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 16);
  v43.i64[0] = *(void *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 24);
  v42.i64[0] = *(void *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 32);
  v41.i64[0] = *(void *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 40);
  uint64_t v14 = *(void *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 56);
  v40.i64[0] = *(void *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 48);
  char v15 = *(unsigned char *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 64);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))((char *)&v32 - v12, 1, 2, v4);
  sub_24B659A1C((uint64_t)v13, (uint64_t)v11, MEMORY[0x263F8C968]);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 2, v4))
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v11, v4);
    int v16 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
    if (v16 != *MEMORY[0x263F8C948] && v16 != *MEMORY[0x263F8C960])
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
LABEL_10:
      sub_24B65EF80((uint64_t)v13, MEMORY[0x263F8C968]);
      sub_24B65EFE0((uint64_t)&v52);
      goto LABEL_11;
    }
  }
  if (v15) {
    goto LABEL_10;
  }
  uint64_t v18 = (float32x4_t *)(a1 + *(int *)(type metadata accessor for OCCaptureData(0) + 40));
  float32x4_t v19 = v18[3];
  float32x4_t v38 = v18[4];
  float32x4_t v39 = v19;
  float32x4_t v20 = v18[5];
  float32x4_t v36 = v18[6];
  float32x4_t v37 = v20;
  int64_t result = CVPixelBufferGetHeight(*(CVPixelBufferRef *)(a1 + 8));
  uint64_t v22 = (float32x4_t *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox);
  if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox + 64) & 1) == 0)
  {
    float v23 = v18[1].f32[1] + v18[1].f32[1];
    float32x4_t v35 = *v22;
    float32x4_t v34 = v22[1];
    float32x4_t v33 = v22[2];
    float32x4_t v32 = v22[3];
    float v24 = atan2f((float)result, v23);
    float v25 = v24 + v24;
    v31.i64[1] = v14;
    v31.i64[0] = v40.i64[0];
    v30.i64[1] = v41.i64[0];
    v30.i64[0] = v42.i64[0];
    v29.i64[1] = v43.i64[0];
    v29.i64[0] = v44;
    v28.i64[1] = v45;
    v28.i64[0] = v46;
    sub_24B5F8E64((uint64_t)&v71, v39, v38, v37, v36, v35, v34, v33, v32, v28, v29, v30, v31);
    long long v46 = v72;
    long long v45 = v73;
    long long v44 = v74;
    uint64_t v26 = v76;
    uint64_t v27 = v75;
    float32x4_t v36 = (float32x4_t)v71.columns[0];
    float32x4_t v37 = (float32x4_t)v71.columns[1];
    float32x4_t v38 = (float32x4_t)v71.columns[2];
    float32x4_t v39 = (float32x4_t)v71.columns[3];
    simd_float4x4 v77 = __invert_f4(v71);
    simd_float4 v42 = v77.columns[1];
    simd_float4 v43 = v77.columns[0];
    simd_float4 v40 = v77.columns[3];
    simd_float4 v41 = v77.columns[2];
    sub_24B65EF80((uint64_t)v13, MEMORY[0x263F8C968]);
    char v51 = 0;
    char v50 = 0;
    char v49 = 0;
    char v48 = 0;
    uint64_t v52 = v36.i64[0];
    int8x16_t v53 = vextq_s8((int8x16_t)v36, (int8x16_t)v37, 8uLL);
    int8x16_t v54 = vextq_s8((int8x16_t)v37, (int8x16_t)v38, 8uLL);
    int8x16_t v55 = vextq_s8((int8x16_t)v38, (int8x16_t)v39, 8uLL);
    uint64_t v56 = v39.i64[1];
    char v57 = 0;
    simd_float4 v58 = v43;
    simd_float4 v59 = v42;
    simd_float4 v60 = v41;
    simd_float4 v61 = v40;
    char v62 = 0;
    float v63 = v25;
    char v64 = 0;
    long long v65 = v46;
    long long v66 = v45;
    long long v67 = v44;
    uint64_t v68 = v27;
    uint64_t v69 = v26;
    char v70 = 0;
    sub_24B65F00C((uint64_t)&v52);
LABEL_11:
    sub_24B56CF38((uint64_t)&v52, (uint64_t)&v71, &qword_2697CCA20);
    return sub_24B56CF38((uint64_t)&v71, v47, &qword_2697CCA20);
  }
  __break(1u);
  return result;
}

uint64_t sub_24B6294EC(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24B6823B0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v37 = *a1;
  int v13 = a1[1];
  uint64_t v38 = *((void *)a1 + 1);
  uint64_t result = (*(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v2) + 0x4B8))(v10);
  if (result)
  {
    int v36 = v13;
    char v15 = (char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform;
    *(_OWORD *)char v15 = 0u;
    *((_OWORD *)v15 + 1) = 0u;
    *((_OWORD *)v15 + 2) = 0u;
    *((_OWORD *)v15 + 3) = 0u;
    v15[64] = 1;
    sub_24B682380();
    uint64_t v16 = sub_24B57CB70();
    uint64_t v35 = v5;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v16, v4);
    uint64_t v17 = sub_24B6824B0();
    os_log_type_t v18 = sub_24B682B30();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v34 = v8;
      uint64_t v20 = v19;
      uint64_t v21 = swift_slowAlloc();
      uint64_t v33 = v9;
      uint64_t v22 = v21;
      v41[0] = v21;
      *(_DWORD *)uint64_t v20 = 136380931;
      float32x4_t v32 = v12;
      uint64_t v39 = sub_24B5627B8(0xD00000000000001DLL, 0x800000024B691720, v41);
      sub_24B682CD0();
      *(_WORD *)(v20 + 12) = 2082;
      char v23 = v36;
      char v24 = v37;
      LOBYTE(v39) = v37;
      BYTE1(v39) = v36;
      uint64_t v40 = v38;
      uint64_t v25 = sub_24B682820();
      uint64_t v31 = v4;
      uint64_t v39 = sub_24B5627B8(v25, v26, v41);
      uint64_t v12 = v32;
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24B55E000, v17, v18, "ObjectCaptureSession.%{private}s: Called startCapturing in area mode with options = %{public}s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      uint64_t v27 = v22;
      uint64_t v9 = v33;
      MEMORY[0x24C5D6C00](v27, -1, -1);
      uint64_t v28 = v20;
      uint64_t v8 = v34;
      MEMORY[0x24C5D6C00](v28, -1, -1);

      uint64_t v29 = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v7, v31);
    }
    else
    {

      uint64_t v29 = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v7, v4);
      char v23 = v36;
      char v24 = v37;
    }
    MEMORY[0x270FA5388](v29);
    *(&v30 - 4) = (uint64_t)v12;
    *((unsigned char *)&v30 - 24) = v24;
    *((unsigned char *)&v30 - 23) = v23;
    *(&v30 - 2) = v38;
    *(&v30 - 1) = (uint64_t)v2;
    sub_24B682BD0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    return v39;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_24B629924@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, char *a4@<X3>, unsigned char *a5@<X8>)
{
  v193 = a5;
  uint64_t v194 = a1;
  uint64_t v197 = sub_24B6823B0();
  uint64_t v191 = *(void *)(v197 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v197);
  uint64_t v195 = (char *)&v176 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v198 = (char *)&v176 - v10;
  uint64_t v11 = sub_24B6824D0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  char v15 = (char *)&v176 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  v188 = (char *)&v176 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v176 - v21;
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = MEMORY[0x270FA5388]((char *)&v176 - v24);
  uint64_t v26 = MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)&v176 - v27;
  uint64_t v29 = MEMORY[0x270FA5388](v26);
  uint64_t v35 = (char *)&v176 - v34;
  if (a2)
  {
    uint64_t v54 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v54, v11);
    int8x16_t v55 = sub_24B6824B0();
    os_log_type_t v56 = sub_24B682B20();
    if (os_log_type_enabled(v55, v56))
    {
      uint64_t v57 = v11;
      simd_float4 v58 = (uint8_t *)swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      v215[0] = v59;
      *(_DWORD *)simd_float4 v58 = 136380675;
      double v217 = COERCE_DOUBLE(sub_24B5627B8(0xD00000000000001DLL, 0x800000024B691720, v215));
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v55, v56, "ObjectCaptureSession.%{private}s: Plane filtering is not supported in area mode!", v58, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v59, -1, -1);
      MEMORY[0x24C5D6C00](v58, -1, -1);

      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v57);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    }
LABEL_54:
    unsigned char *v193 = 0;
    return (id)sub_24B62F1C4(v194, MEMORY[0x263F90278], 0xD00000000000001DLL, 0x800000024B691720, "ObjectCaptureSession.%{private}s: startCapturing in area mode took CMTime time = %{public}s ms");
  }
  float32x4_t v186 = v30;
  uint64_t v187 = v29;
  uint64_t v180 = v31;
  float32x4_t v181 = v33;
  float32x4_t v185 = (void (*)(void, void))v22;
  uint64_t v183 = v32;
  uint64_t v196 = v11;
  int v36 = &a4[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureOptions];
  *(void *)int v36 = a2 & 0x100;
  *((void *)v36 + 1) = a3;
  v190 = v36;
  sub_24B680CCC();
  OCSignPostsAriadneDbgCode();
  kdebug_trace();
  uint64_t v37 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maskingManager;
  uint64_t v38 = *(void *)&a4[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maskingManager];
  uint64_t v39 = a4;
  if (v38)
  {
    uint64_t v40 = *(void (**)(uint64_t))(*(void *)v38 + 280);
    uint64_t v41 = swift_retain();
    v40(v41);
    swift_release();
  }
  sub_24B62B340();
  *(void *)&v39[v37] = 0;
  swift_release();
  *(void *)&v39[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_voxelIntegrationManager] = 0;
  swift_release();
  uint64_t v182 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformScanExtent;
  v39[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformScanExtent] = 0;
  sub_24B62FB04();
  simd_float4 v43 = v42;
  v192 = v39;
  id result = objc_msgSend(*(id *)&v39[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession], sel_runWithConfiguration_options_, v42, 8);
  uint64_t v45 = v196;
  if (*(unsigned char *)v190 == 2)
  {
    __break(1u);
    goto LABEL_57;
  }
  id v184 = v43;
  int v203 = 1000593162;
  uint64_t v46 = sub_24B568148();
  if ((v46 & 0x100000000) == 0)
  {
    float v47 = *(float *)&v46;
    int v203 = v46;
    uint64_t v48 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v35, v48, v45);
    char v49 = sub_24B6824B0();
    uint64_t v50 = v45;
    os_log_type_t v51 = sub_24B682B30();
    if (os_log_type_enabled(v49, v51))
    {
      uint64_t v52 = swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      v215[0] = v53;
      *(_DWORD *)uint64_t v52 = 136380931;
      uint64_t v189 = v12;
      double v217 = COERCE_DOUBLE(sub_24B5627B8(0xD00000000000001DLL, 0x800000024B691720, v215));
      uint64_t v12 = v189;
      sub_24B682CD0();
      *(_WORD *)(v52 + 12) = 2050;
      double v217 = v47;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v49, v51, "ObjectCaptureSession.%{private}s: Using initial voxel size for mesh refinement set by user default: %{public}f", (uint8_t *)v52, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v53, -1, -1);
      MEMORY[0x24C5D6C00](v52, -1, -1);

      uint64_t v45 = v196;
      (*(void (**)(char *, uint64_t))(v12 + 8))(v35, v196);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v12 + 8))(v35, v50);
      uint64_t v45 = v50;
    }
  }
  *(float *)&int v202 = 0.005;
  uint64_t v60 = sub_24B568178();
  if ((v60 & 0x100000000) == 0)
  {
    float v61 = *(float *)&v60;
    int v202 = v60;
    uint64_t v62 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v28, v62, v45);
    float v63 = sub_24B6824B0();
    os_log_type_t v64 = sub_24B682B30();
    if (os_log_type_enabled(v63, v64))
    {
      float v65 = v61;
      uint64_t v66 = swift_slowAlloc();
      uint64_t v67 = swift_slowAlloc();
      v215[0] = v67;
      *(_DWORD *)uint64_t v66 = 136380931;
      double v217 = COERCE_DOUBLE(sub_24B5627B8(0xD00000000000001DLL, 0x800000024B691720, v215));
      sub_24B682CD0();
      *(_WORD *)(v66 + 12) = 2050;
      double v217 = v65;
      uint64_t v45 = v196;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v63, v64, "ObjectCaptureSession.%{private}s: Using voxel size increment for mesh refinement set by user default: %{public}f", (uint8_t *)v66, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v67, -1, -1);
      MEMORY[0x24C5D6C00](v66, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v12 + 8))(v28, v45);
  }
  uint64_t v68 = sub_24B5681A8();
  if ((v68 & 0x100000000) != 0)
  {
    float v69 = 0.015;
    unint64_t v77 = sub_24B568050();
    if ((v77 & 0x100000000) != 0) {
      goto LABEL_20;
    }
  }
  else
  {
    float v69 = *(float *)&v68;
    uint64_t v70 = sub_24B57CB70();
    simd_float4x4 v71 = v186;
    (*(void (**)(void, uint64_t, uint64_t))(v12 + 16))(v186, v70, v45);
    float v72 = *(float *)&v202;
    long long v73 = sub_24B6824B0();
    os_log_type_t v74 = sub_24B682B30();
    if (os_log_type_enabled(v73, v74))
    {
      uint64_t v75 = swift_slowAlloc();
      uint64_t v76 = swift_slowAlloc();
      v215[0] = v76;
      *(_DWORD *)uint64_t v75 = 136380931;
      double v217 = COERCE_DOUBLE(sub_24B5627B8(0xD00000000000001DLL, 0x800000024B691720, v215));
      sub_24B682CD0();
      *(_WORD *)(v75 + 12) = 2050;
      double v217 = v72;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v73, v74, "ObjectCaptureSession.%{private}s: Using mesh refinement voxel size scan extent threshold set by user default: %{public}f", (uint8_t *)v75, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v76, -1, -1);
      MEMORY[0x24C5D6C00](v75, -1, -1);
    }

    (*(void (**)(void (*)(void, void, void), uint64_t))(v12 + 8))(v71, v45);
    unint64_t v77 = sub_24B568050();
    if ((v77 & 0x100000000) != 0)
    {
LABEL_20:
      id result = (id)OCMetalDevice();
      if (result)
      {
        uint64_t v78 = (uint64_t)result;
        char v79 = v192[v182];
        char v80 = *sub_24B568004();
        swift_beginAccess();
        float v81 = *(float *)&v203;
        id result = (id)swift_beginAccess();
        if (*v190 != 2)
        {
          uint64_t v82 = v190[1];
          float v83 = *(float *)&v202;
          uint64_t v84 = (*v190 >> 8) & 1;
          unint64_t v85 = sub_24B5A259C();
          uint64_t v86 = v85 | ((HIDWORD(v85) & 1) << 32);
          uint64_t v87 = v78;
          char v88 = v79;
          goto LABEL_29;
        }
        goto LABEL_58;
      }
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
      goto LABEL_60;
    }
  }
  float v89 = *(float *)&v77;
  uint64_t v90 = sub_24B57CB70();
  uint64_t v91 = v187;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v187, v90, v45);
  uint64_t v92 = sub_24B6824B0();
  os_log_type_t v93 = sub_24B682B20();
  if (os_log_type_enabled(v92, v93))
  {
    uint64_t v94 = swift_slowAlloc();
    uint64_t v95 = swift_slowAlloc();
    v215[0] = v95;
    *(_DWORD *)uint64_t v94 = 136380931;
    double v217 = COERCE_DOUBLE(sub_24B5627B8(0xD00000000000001DLL, 0x800000024B691720, v215));
    sub_24B682CD0();
    *(_WORD *)(v94 + 12) = 2048;
    double v217 = v89;
    uint64_t v45 = v196;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v92, v93, "ObjectCaptureSession.%{private}s: Using voxel size %fm read from ARKit scene reconstruction user defaults. Disabled automatic scan extent switching in area mode mesh\nmanager! Remove com.apple.recon3d.meshing.sdf_config.voxel_size or com.apple.arkit.sceneReconstruction.voxelSize user default to enable automatic scan extent switching.", (uint8_t *)v94, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v95, -1, -1);
    MEMORY[0x24C5D6C00](v94, -1, -1);
  }

  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v91, v45);
  id result = (id)OCMetalDevice();
  if (!result) {
    goto LABEL_59;
  }
  uint64_t v96 = (uint64_t)result;
  char v80 = *sub_24B568004();
  swift_beginAccess();
  float v81 = *(float *)&v203;
  id result = (id)swift_beginAccess();
  if (*v190 == 2)
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  uint64_t v82 = v190[1];
  float v83 = *(float *)&v202;
  uint64_t v84 = (*v190 >> 8) & 1;
  char v88 = sub_24B58BF8C();
  LOBYTE(v215[0]) = 0;
  uint64_t v86 = LODWORD(v89);
  uint64_t v87 = v96;
LABEL_29:
  sub_24B58BF94(v87, v86, v88, v80, v84, v82, 1, 400000, (uint64_t)&v204, v81, v83, v69);
  uint64_t v97 = *(void *)&v204;
  double v217 = v204;
  int v218 = v205;
  char v219 = v206;
  char v220 = v207;
  char v221 = v208;
  uint64_t v222 = v209;
  int v223 = v210;
  char v224 = v211;
  uint64_t v225 = v212;
  char v226 = v213;
  uint64_t v227 = v214;
  type metadata accessor for FreeformMeshManager(0);
  swift_unknownObjectRetain();
  uint64_t v98 = sub_24B58C1D4((uint64_t)&v217);
  uint64_t v99 = v198;
  if (!v98)
  {
    uint64_t v129 = sub_24B57CB70();
    uint64_t v130 = v181;
    (*(void (**)(void, uint64_t, uint64_t))(v12 + 16))(v181, v129, v45);
    char v131 = sub_24B6824B0();
    os_log_type_t v132 = sub_24B682B20();
    if (os_log_type_enabled(v131, v132))
    {
      uint64_t v133 = swift_slowAlloc();
      uint64_t v182 = v97;
      uint64_t v134 = (uint8_t *)v133;
      uint64_t v135 = swift_slowAlloc();
      v215[0] = v135;
      *(_DWORD *)uint64_t v134 = 136380675;
      uint64_t v201 = sub_24B5627B8(0xD00000000000001DLL, 0x800000024B691720, v215);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v131, v132, "ObjectCaptureSession.%{private}s: Failed to initialize MeshManager in area mode!", v134, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v135, -1, -1);
      MEMORY[0x24C5D6C00](v134, -1, -1);
      swift_unknownObjectRelease();
    }
    else
    {

      swift_unknownObjectRelease();
    }
    (*(void (**)(void (*)(void, void, void), uint64_t))(v12 + 8))(v130, v45);
    goto LABEL_54;
  }
  uint64_t v100 = v98;
  uint64_t v182 = v97;
  uint64_t v101 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_meshManager;
  uint64_t v102 = v192;
  *(void *)&v192[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_meshManager] = v98;
  swift_retain();
  swift_release();
  uint64_t v103 = *(void *)&v102[v101];
  if (v103)
  {
    uint64_t v104 = *(void (**)(char *, _UNKNOWN **))(*(void *)v103 + 168);
    swift_retain();
    uint64_t v105 = v102;
    v104(v102, &off_26FE8FCD8);
    swift_release();
  }
  uint64_t v179 = v100;
  uint64_t v106 = &v102[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox];
  *(_OWORD *)uint64_t v106 = 0u;
  *((_OWORD *)v106 + 1) = 0u;
  *((_OWORD *)v106 + 2) = 0u;
  *((_OWORD *)v106 + 3) = 0u;
  v106[64] = 1;
  sub_24B65E4B8();
  long long v107 = *(void **)&v102[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBoxAnchor];
  *(void *)&v102[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBoxAnchor] = 0;

  sub_24B61E8C4();
  sub_24B682380();
  uint64_t v178 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_internalMotionManager;
  uint64_t v108 = *(void *)&v102[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_internalMotionManager];
  if (v108)
  {
    long long v109 = *(void (**)(uint64_t))(*(void *)v108 + 152);
    uint64_t v110 = swift_retain();
    v109(v110);
    swift_release();
  }
  uint64_t v111 = sub_24B57CB70();
  float32x4_t v112 = *(void (**)(void))(v12 + 16);
  float32x4_t v113 = v185;
  v190 = (void *)v111;
  float32x4_t v186 = (void (*)(void, void, void))v112;
  uint64_t v187 = v12 + 16;
  v112(v185);
  uint64_t v114 = sub_24B6824B0();
  os_log_type_t v115 = sub_24B682B10();
  BOOL v116 = os_log_type_enabled(v114, v115);
  uint64_t v189 = v12;
  if (v116)
  {
    uint64_t v117 = swift_slowAlloc();
    float32x4_t v181 = (void (*)(void, void, void))swift_slowAlloc();
    v215[0] = (uint64_t)v181;
    *(_DWORD *)uint64_t v117 = 136380931;
    uint64_t v201 = sub_24B5627B8(0xD00000000000001DLL, 0x800000024B691720, v215);
    sub_24B682CD0();
    *(_WORD *)(v117 + 12) = 2082;
    uint64_t v177 = v117 + 14;
    sub_24B562F04((uint64_t *)&unk_2697CD150);
    uint64_t v118 = swift_allocObject();
    *(_OWORD *)(v118 + 16) = xmmword_24B684E60;
    swift_beginAccess();
    float32x4_t v119 = v195;
    sub_24B682380();
    sub_24B682390();
    double v121 = v120;
    uint64_t v122 = v191;
    (*(void (**)(char *, uint64_t))(v191 + 8))(v119, v197);
    uint64_t v123 = MEMORY[0x263F8D5B8];
    *(void *)(v118 + 56) = MEMORY[0x263F8D538];
    *(void *)(v118 + 64) = v123;
    *(double *)(v118 + 32) = v121 * 1000.0;
    uint64_t v124 = sub_24B6827F0();
    uint64_t v201 = sub_24B5627B8(v124, v125, v215);
    uint64_t v99 = v198;
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24B55E000, v114, v115, "ObjectCaptureSession.%{private}s: motion manager init take CMTime time = %{public}s ms", (uint8_t *)v117, 0x16u);
    uint64_t v126 = v181;
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v126, -1, -1);
    uint64_t v127 = v117;
    uint64_t v128 = v196;
    MEMORY[0x24C5D6C00](v127, -1, -1);

    float32x4_t v185 = *(void (**)(void, void))(v189 + 8);
    v185(v113, v128);
  }
  else
  {

    float32x4_t v185 = *(void (**)(void, void))(v12 + 8);
    v185(v113, v45);
    uint64_t v128 = v45;
    uint64_t v122 = v191;
    float32x4_t v119 = v195;
  }
  sub_24B682380();
  swift_beginAccess();
  float32x4_t v181 = *(void (**)(void, void, void))(v122 + 40);
  v181(v99, v119, v197);
  sub_24B62B8B8();
  uint64_t v136 = v183;
  v186(v183, v190, v128);
  uint64_t v137 = sub_24B6824B0();
  os_log_type_t v138 = sub_24B682B10();
  if (os_log_type_enabled(v137, v138))
  {
    uint64_t v139 = swift_slowAlloc();
    uint64_t v140 = swift_slowAlloc();
    v215[0] = v140;
    *(_DWORD *)uint64_t v139 = 136380931;
    uint64_t v200 = sub_24B5627B8(0xD00000000000001DLL, 0x800000024B691720, v215);
    sub_24B682CD0();
    *(_WORD *)(v139 + 12) = 2082;
    uint64_t v177 = v139 + 14;
    sub_24B562F04((uint64_t *)&unk_2697CD150);
    uint64_t v141 = swift_allocObject();
    *(_OWORD *)(v141 + 16) = xmmword_24B684E60;
    sub_24B682380();
    sub_24B682390();
    double v143 = v142;
    (*(void (**)(char *, uint64_t))(v191 + 8))(v195, v197);
    uint64_t v144 = MEMORY[0x263F8D5B8];
    *(void *)(v141 + 56) = MEMORY[0x263F8D538];
    *(void *)(v141 + 64) = v144;
    *(double *)(v141 + 32) = v143 * 1000.0;
    uint64_t v145 = sub_24B6827F0();
    uint64_t v200 = sub_24B5627B8(v145, v146, v215);
    uint64_t v99 = v198;
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24B55E000, v137, v138, "ObjectCaptureSession.%{private}s: Camera control init takes CMTime time = %{public}s ms", (uint8_t *)v139, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v140, -1, -1);
    float32x4_t v119 = v195;
    MEMORY[0x24C5D6C00](v139, -1, -1);

    uint64_t v147 = v136;
    uint64_t v148 = v196;
  }
  else
  {

    uint64_t v147 = v136;
    uint64_t v148 = v128;
  }
  v185(v147, v148);
  sub_24B682380();
  id result = (id)((uint64_t (*)(char *, char *, uint64_t))v181)(v99, v119, v197);
  id v149 = v192;
  if (v192[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_referenceTimestamp + 8])
  {
    uint64_t v150 = v180;
    uint64_t v151 = v196;
    v186(v180, v190, v196);
    uint64_t v152 = sub_24B6824B0();
    os_log_type_t v153 = sub_24B682B20();
    if (os_log_type_enabled(v152, v153))
    {
      uint64_t v154 = (uint8_t *)swift_slowAlloc();
      uint64_t v155 = swift_slowAlloc();
      v215[0] = v155;
      *(_DWORD *)uint64_t v154 = 136380675;
      uint64_t v200 = sub_24B5627B8(0xD00000000000001DLL, 0x800000024B691720, v215);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v152, v153, "ObjectCaptureSession.%{private}s: Capture manager couldn't initialize because reference timestamp is nil. Will try again after getting reference timestamp.", v154, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v155, -1, -1);
      MEMORY[0x24C5D6C00](v154, -1, -1);
    }

    v185(v150, v151);
    goto LABEL_48;
  }
  uint64_t v156 = *(void *)&v192[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl];
  uint64_t v151 = v196;
  if (v156)
  {
    double v157 = *(double *)&v192[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_referenceTimestamp];
    type metadata accessor for CaptureManager();
    memset(v215, 0, sizeof(v215));
    char v216 = 1;
    uint64_t v158 = *(void *)&v149[v178];
    v159 = *(void **)&v149[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
    swift_retain();
    id v160 = v159;
    swift_retain();
    *(void *)&v149[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureManager] = sub_24B5A9BE4((uint64_t)v215, v156, v158, v160, v157);
    swift_release();
LABEL_48:
    long long v161 = v188;
    v186(v188, v190, v151);
    long long v162 = sub_24B6824B0();
    os_log_type_t v163 = sub_24B682B10();
    if (os_log_type_enabled(v162, v163))
    {
      uint64_t v164 = swift_slowAlloc();
      v190 = (void *)swift_slowAlloc();
      uint64_t v200 = (uint64_t)v190;
      *(_DWORD *)uint64_t v164 = 136380931;
      uint64_t v199 = sub_24B5627B8(0xD00000000000001DLL, 0x800000024B691720, &v200);
      sub_24B682CD0();
      *(_WORD *)(v164 + 12) = 2082;
      uint64_t v187 = v164 + 14;
      sub_24B562F04((uint64_t *)&unk_2697CD150);
      uint64_t v165 = swift_allocObject();
      *(_OWORD *)(v165 + 16) = xmmword_24B684E60;
      v166 = v195;
      sub_24B682380();
      uint64_t v167 = v198;
      sub_24B682390();
      double v169 = v168;
      uint64_t v170 = v191;
      (*(void (**)(char *, uint64_t))(v191 + 8))(v166, v197);
      uint64_t v171 = MEMORY[0x263F8D5B8];
      *(void *)(v165 + 56) = MEMORY[0x263F8D538];
      *(void *)(v165 + 64) = v171;
      *(double *)(v165 + 32) = v169 * 1000.0;
      uint64_t v172 = sub_24B6827F0();
      uint64_t v199 = sub_24B5627B8(v172, v173, &v200);
      id v149 = v192;
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24B55E000, v162, v163, "ObjectCaptureSession.%{private}s: Init CaptureManager took = %{public}s ms", (uint8_t *)v164, 0x16u);
      uint64_t v174 = v190;
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v174, -1, -1);
      MEMORY[0x24C5D6C00](v164, -1, -1);

      v185(v188, v196);
    }
    else
    {

      v185(v161, v151);
      uint64_t v170 = v191;
      uint64_t v167 = v198;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_24B682560();
    swift_release();
    swift_release();
    uint64_t v175 = (void *)v200;
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v200 = 15;
    v149;
    sub_24B682570();
    uint64_t v200 = (uint64_t)v175;
    sub_24B612878((void **)&v200);
    sub_24B65A19C(v175);

    swift_release();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v170 + 8))(v167, v197);
    unsigned char *v193 = 1;
    return (id)sub_24B62F1C4(v194, MEMORY[0x263F90278], 0xD00000000000001DLL, 0x800000024B691720, "ObjectCaptureSession.%{private}s: startCapturing in area mode took CMTime time = %{public}s ms");
  }
LABEL_61:
  __break(1u);
  return result;
}

uint64_t sub_24B62B340()
{
  id v1 = v0;
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v32 - v7;
  uint64_t v9 = sub_24B6823B0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B682380();
  uint64_t v13 = (void *)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurface);
  swift_beginAccess();
  if (*v13)
  {
    uint64_t v35 = v10;
    if (OCProxySurfaceDestroy())
    {
      uint64_t v14 = sub_24B57CC7C();
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v8, v14, v2);
      char v15 = sub_24B6824B0();
      os_log_type_t v16 = sub_24B682B20();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = swift_slowAlloc();
        uint64_t v33 = v2;
        uint64_t v18 = (uint8_t *)v17;
        uint64_t v19 = (void *)swift_slowAlloc();
        uint64_t v34 = v9;
        uint64_t v20 = v19;
        v37[0] = v19;
        *(_DWORD *)uint64_t v18 = 136380675;
        v32[1] = v18 + 4;
        uint64_t v36 = sub_24B5627B8(0xD000000000000016, 0x800000024B690E60, (uint64_t *)v37);
        sub_24B682CD0();
        _os_log_impl(&dword_24B55E000, v15, v16, "ObjectCaptureSession.%{private}s: Failed to destroy proxy surface!", v18, 0xCu);
        swift_arrayDestroy();
        uint64_t v21 = v20;
        uint64_t v9 = v34;
        MEMORY[0x24C5D6C00](v21, -1, -1);
        uint64_t v22 = v18;
        uint64_t v2 = v33;
        MEMORY[0x24C5D6C00](v22, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    }
    uint64_t v23 = sub_24B57CC7C();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v23, v2);
    uint64_t v24 = sub_24B6824B0();
    os_log_type_t v25 = sub_24B682B30();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v34 = v9;
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = (void *)swift_slowAlloc();
      uint64_t v33 = v2;
      uint64_t v28 = v27;
      v37[0] = v27;
      *(_DWORD *)uint64_t v26 = 136380675;
      uint64_t v36 = sub_24B5627B8(0xD000000000000016, 0x800000024B690E60, (uint64_t *)v37);
      uint64_t v9 = v34;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v24, v25, "ObjectCaptureSession.%{private}s: Successfully stopped voxel integration session.", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v28, -1, -1);
      MEMORY[0x24C5D6C00](v26, -1, -1);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v33);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    }
    uint64_t v10 = v35;
  }
  (*(void (**)(id *__return_ptr))((*MEMORY[0x263F8EED0] & *v1) + 0x420))(v37);
  if (v37[0] == (id)14)
  {
    sub_24B65A19C((id)0xE);
    sub_24B65A19C((id)0xE);
  }
  else
  {
    sub_24B65A19C(v37[0]);
    sub_24B65A19C((id)0xE);
    uint64_t v29 = (char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pointCloud;
    swift_beginAccess();
    uint64_t v30 = *(void *)v29;
    *(_OWORD *)uint64_t v29 = 0u;
    *((_OWORD *)v29 + 1) = 0u;
    *((_OWORD *)v29 + 2) = 0u;
    *((_OWORD *)v29 + 3) = 0u;
    *((_OWORD *)v29 + 4) = 0u;
    *((_OWORD *)v29 + 5) = 0u;
    sub_24B659B3C(v30);
  }
  sub_24B63A450((uint64_t)v12, 0xD000000000000016, 0x800000024B690E60);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

void sub_24B62B8B8()
{
  id v1 = v0;
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v75 - v8;
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v78 = (char *)&v75 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v75 - v12;
  uint64_t v14 = *(void **)&v0[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession];
  id v15 = objc_msgSend(v14, sel_configuration);

  if (!v15)
  {
    __break(1u);
    goto LABEL_25;
  }
  id v16 = objc_msgSend(v14, sel_configuration);
  if (!v16)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v17 = v16;
  type metadata accessor for CameraControl();
  id v18 = objc_msgSend(v17, sel_videoFormat);

  id v19 = objc_msgSend(v18, sel_device);
  uint64_t v20 = sub_24B60D894((uint64_t)v19);
  uint64_t v21 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl;
  *(void *)&v1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl] = v20;
  swift_release();
  uint64_t v79 = v21;
  uint64_t v22 = *(void *)&v1[v21];
  if (!v22)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  unint64_t v77 = v9;
  uint64_t v23 = *(void (**)(uint64_t))(*(void *)v22 + 280);
  uint64_t v24 = swift_retain();
  v23(v24);
  swift_release();
  uint64_t v25 = sub_24B57CB70();
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  uint64_t v80 = v25;
  float v81 = v26;
  uint64_t v82 = v3 + 16;
  ((void (*)(char *))v26)(v13);
  uint64_t v27 = sub_24B6824B0();
  os_log_type_t v28 = sub_24B682B10();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = swift_slowAlloc();
    uint64_t v76 = v2;
    uint64_t v30 = (uint8_t *)v29;
    uint64_t v31 = v1;
    uint64_t v32 = swift_slowAlloc();
    uint64_t v84 = v32;
    *(_DWORD *)uint64_t v30 = 136380675;
    uint64_t v83 = sub_24B5627B8(0xD000000000000014, 0x800000024B691740, &v84);
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v27, v28, "ObjectCaptureSession.%{private}s: Camera auto white balance is locked.", v30, 0xCu);
    swift_arrayDestroy();
    uint64_t v33 = v32;
    id v1 = v31;
    MEMORY[0x24C5D6C00](v33, -1, -1);
    uint64_t v34 = v30;
    uint64_t v2 = v76;
    MEMORY[0x24C5D6C00](v34, -1, -1);
  }

  uint64_t v9 = *(char **)(v3 + 8);
  ((void (*)(char *, uint64_t))v9)(v13, v2);
  uint64_t v35 = v79;
  uint64_t v36 = *(void *)&v1[v79];
  if (!v36) {
    goto LABEL_27;
  }
  uint64_t v37 = *(void (**)(void))(*(void *)v36 + 200);
  swift_retain();
  v37(0);
  swift_release();
  uint64_t v38 = *(void *)&v1[v35];
  if (!v38)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v39 = *(void (**)(uint64_t))(*(void *)v38 + 208);
  uint64_t v40 = swift_retain();
  v39(v40);
  swift_release();
  uint64_t v41 = *(void *)&v1[v35];
  if (!v41)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  simd_float4 v42 = *(uint64_t (**)(uint64_t))(*(void *)v41 + 304);
  uint64_t v43 = swift_retain();
  char v44 = v42(v43);
  swift_release();
  uint64_t v45 = v78;
  v81(v78, v80, v2);
  uint64_t v46 = sub_24B6824B0();
  os_log_type_t v47 = sub_24B682B30();
  if (os_log_type_enabled(v46, v47))
  {
    uint64_t v48 = swift_slowAlloc();
    uint64_t v76 = swift_slowAlloc();
    uint64_t v84 = v76;
    *(_DWORD *)uint64_t v48 = 136380931;
    uint64_t v83 = sub_24B5627B8(0xD000000000000014, 0x800000024B691740, &v84);
    sub_24B682CD0();
    *(_WORD *)(v48 + 12) = 1026;
    LODWORD(v83) = v44 & 1;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v46, v47, "ObjectCaptureSession.%{private}s: Camera face driven AF and AE disabled = %{BOOL,public}d", (uint8_t *)v48, 0x12u);
    uint64_t v49 = v76;
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v49, -1, -1);
    uint64_t v50 = v48;
    uint64_t v35 = v79;
    MEMORY[0x24C5D6C00](v50, -1, -1);

    os_log_type_t v51 = v78;
  }
  else
  {

    os_log_type_t v51 = v45;
  }
  ((void (*)(char *, uint64_t))v9)(v51, v2);
  uint64_t v52 = sub_24B567CC0();
  if (v53) {
    goto LABEL_18;
  }
  uint64_t v54 = *(void *)&v1[v35];
  if (!v54)
  {
LABEL_30:
    __break(1u);
LABEL_31:

    __break(1u);
    return;
  }
  double v55 = *(double *)&v52;
  os_log_type_t v56 = *(uint64_t (**)(uint64_t, double))(*(void *)v54 + 264);
  uint64_t v57 = swift_retain();
  LOBYTE(v56) = v56(v57, v55);
  swift_release();
  if (v56)
  {
    uint64_t v78 = v9;
    simd_float4 v58 = v77;
    v81(v77, v80, v2);
    uint64_t v9 = v1;
    uint64_t v59 = v2;
    uint64_t v60 = sub_24B6824B0();
    os_log_type_t v61 = sub_24B682B30();
    if (!os_log_type_enabled(v60, v61))
    {

      float v69 = v58;
      uint64_t v70 = v59;
      goto LABEL_23;
    }
    uint64_t v82 = v3;
    uint64_t v76 = v59;
    uint64_t v62 = swift_slowAlloc();
    float v63 = v1;
    uint64_t v64 = swift_slowAlloc();
    uint64_t v84 = v64;
    *(_DWORD *)uint64_t v62 = 136380931;
    uint64_t v83 = sub_24B5627B8(0xD000000000000014, 0x800000024B691740, &v84);
    sub_24B682CD0();
    *(_WORD *)(v62 + 12) = 2050;
    uint64_t v65 = *(void *)&v63[v79];
    if (v65)
    {
      uint64_t v66 = *(double (**)(uint64_t))(*(void *)v65 + 184);
      uint64_t v67 = swift_retain();
      double v68 = v66(v67);
      swift_release();
      uint64_t v83 = *(void *)&v68;
      sub_24B682CD0();

      _os_log_impl(&dword_24B55E000, v60, v61, "ObjectCaptureSession.%{private}s: Camera active max exposure duration successfully set to %{public}f seconds", (uint8_t *)v62, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v64, -1, -1);
      MEMORY[0x24C5D6C00](v62, -1, -1);

      uint64_t v70 = v76;
      float v69 = v77;
LABEL_23:
      ((void (*)(char *, uint64_t))v78)(v69, v70);
      return;
    }
    goto LABEL_31;
  }
LABEL_18:
  v81(v6, v80, v2);
  simd_float4x4 v71 = sub_24B6824B0();
  os_log_type_t v72 = sub_24B682B30();
  if (os_log_type_enabled(v71, v72))
  {
    long long v73 = (uint8_t *)swift_slowAlloc();
    uint64_t v74 = swift_slowAlloc();
    uint64_t v84 = v74;
    *(_DWORD *)long long v73 = 136380675;
    uint64_t v83 = sub_24B5627B8(0xD000000000000014, 0x800000024B691740, &v84);
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v71, v72, "ObjectCaptureSession.%{private}s: Camera active max exposure duration un-specified, use auto exposure control.", v73, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v74, -1, -1);
    MEMORY[0x24C5D6C00](v73, -1, -1);
  }

  ((void (*)(char *, uint64_t))v9)(v6, v2);
}

uint64_t sub_24B62C228(unsigned __int8 *a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5)
{
  uint64_t v6 = v5;
  __n128 v50 = a4;
  __n128 v51 = a5;
  __n128 v48 = a2;
  __n128 v49 = a3;
  uint64_t v52 = sub_24B6824D0();
  uint64_t v8 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  uint64_t v10 = &v39[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_24B6823B0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  id v15 = &v39[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v16 = *a1;
  int v17 = a1[1];
  unint64_t v18 = *((void *)a1 + 1);
  uint64_t result = (*(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v6) + 0x4B8))(v13);
  if (result)
  {
    __break(1u);
  }
  else
  {
    int v44 = v16;
    int v46 = v17;
    unint64_t v47 = v18;
    uint64_t v45 = v15;
    sub_24B682380();
    uint64_t v20 = sub_24B57CB70();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v10, v20, v52);
    uint64_t v21 = sub_24B6824B0();
    os_log_type_t v22 = sub_24B682B30();
    int v23 = v22;
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v43 = v11;
      uint64_t v25 = v24;
      uint64_t v41 = swift_slowAlloc();
      v57[0] = v41;
      *(_DWORD *)uint64_t v25 = 136381187;
      uint64_t v42 = v12;
      v53.n128_u64[0] = sub_24B5627B8(0xD000000000000029, 0x800000024B691680, v57);
      sub_24B682CD0();
      *(_WORD *)(v25 + 12) = 2082;
      __n128 v53 = v48;
      __n128 v54 = v49;
      __n128 v55 = v50;
      __n128 v56 = v51;
      type metadata accessor for simd_float4x4(0);
      uint64_t v26 = sub_24B682820();
      v53.n128_u64[0] = sub_24B5627B8(v26, v27, v57);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 22) = 2082;
      char v28 = v44;
      v53.n128_u8[0] = v44;
      char v29 = v46;
      v53.n128_u8[1] = v46;
      int v40 = v23;
      unint64_t v30 = v47;
      v53.n128_u64[1] = v47;
      uint64_t v31 = sub_24B682820();
      v53.n128_u64[0] = sub_24B5627B8(v31, v32, v57);
      sub_24B682CD0();
      uint64_t v12 = v42;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24B55E000, v21, (os_log_type_t)v40, "ObjectCaptureSession.%{private}s: Called start capturing in object mode with boundingBox = %{public}s and options = %{public}s", (uint8_t *)v25, 0x20u);
      uint64_t v33 = v41;
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v33, -1, -1);
      uint64_t v34 = v25;
      uint64_t v11 = v43;
      MEMORY[0x24C5D6C00](v34, -1, -1);

      (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v52);
    }
    else
    {

      (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v52);
      unint64_t v30 = v47;
      char v29 = v46;
      char v28 = v44;
    }
    sub_24B680CC0();
    OCSignPostsAriadneDbgCode();
    uint64_t v35 = kdebug_trace();
    MEMORY[0x270FA5388](v35);
    uint64_t v36 = v45;
    *(void *)&v39[-96] = v45;
    *(void *)&v39[-88] = v6;
    v39[-80] = v28;
    v39[-79] = v29;
    *(void *)&v39[-72] = v30;
    __n128 v37 = v49;
    *(__n128 *)&v39[-64] = v48;
    *(__n128 *)&v39[-48] = v37;
    __n128 v38 = v51;
    *(__n128 *)&v39[-32] = v50;
    *(__n128 *)&v39[-16] = v38;
    sub_24B682BD0();
    (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v36, v11);
    return v53.n128_u8[0];
  }
  return result;
}

void sub_24B62C730(uint64_t a1@<X0>, void *a2@<X1>, __int16 a3@<W2>, uint64_t a4@<X3>, unsigned char *a5@<X8>, __n128 a6@<Q0>, __n128 a7@<Q1>, __n128 a8@<Q2>, __n128 a9@<Q3>)
{
  void (*v52)(CoreOC::OCBoundingBox *__return_ptr, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  uint64_t v61;
  void *v62;
  void *v63;
  simd_float4x4 *v64;
  simd_float4 *v65;
  simd_float4 v66;
  simd_float4 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t);
  uint64_t v72;
  id v73;
  id v74;
  void *v75;
  id v76;
  uint64_t v77;
  void (*v78)(void);
  NSObject *v79;
  os_log_type_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  double v84;
  double v85;
  uint64_t v86;
  CoreOC::OCBoundingBox *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  CoreOC::OCBoundingBox *v92;
  void (*v93)(char *, char *, CoreOC::OCBoundingBox *);
  uint64_t v94;
  void *v95;
  id v96;
  id v97;
  void *v98;
  uint64_t v99;
  id v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(uint64_t);
  uint64_t v106;
  uint64_t v107;
  NSObject *v108;
  os_log_type_t v109;
  BOOL v110;
  uint8_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void (*v115)(void);
  uint64_t v116;
  void (*v117)(uint64_t);
  uint64_t v118;
  uint64_t v119;
  uint64_t (*v120)(uint64_t);
  uint64_t v121;
  char v122;
  NSObject *v123;
  os_log_type_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  char v130;
  uint64_t v131;
  double v132;
  uint64_t (*v133)(uint64_t, double);
  uint64_t v134;
  NSObject *v135;
  uint64_t v136;
  os_log_type_t v137;
  uint64_t v138;
  uint64_t v139;
  double (*v140)(uint64_t);
  uint64_t v141;
  double v142;
  uint64_t v143;
  uint64_t v144;
  NSObject *v145;
  os_log_type_t v146;
  uint8_t *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  NSObject *v151;
  os_log_type_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  double v157;
  double v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  char *v162;
  uint64_t v163;
  float v164;
  NSObject *v165;
  os_log_type_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  simd_float4 v170;
  simd_float4 v171;
  uint64_t v172;
  uint64_t v173;
  float32x4_t v174;
  NSObject *v175;
  os_log_type_t v176;
  BOOL v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  NSObject *v182;
  os_log_type_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  char *v187;
  double v188;
  double v189;
  CoreOC::OCBoundingBox *v190;
  uint64_t v191;
  uint64_t v192;
  unint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  NSObject *v198;
  os_log_type_t v199;
  BOOL v200;
  char *v201;
  uint8_t *v202;
  void *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  void *v208;
  NSObject *v209;
  os_log_type_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  unint64_t v214;
  void (*v215)(void, void, void);
  char *v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  CoreOC::OCBoundingBox *v220;
  float v221;
  void (*v222)(uint64_t, float);
  uint64_t v223;
  float v224;
  float32x4_t v225;
  float32x4_t v226;
  float32x4_t v227;
  float32x4_t v228;
  float32x4_t v229;
  float32x4_t v230;
  float32x4_t v231;
  float32x4_t v232;
  float32x4_t v233;
  float32x4_t *v234;
  NSObject *v235;
  os_log_type_t v236;
  uint64_t v237;
  void *v238;
  uint64_t v239;
  char *v240;
  double v241;
  double v242;
  void (*v243)(char *, CoreOC::OCBoundingBox *);
  uint64_t v244;
  uint64_t v245;
  unint64_t v246;
  void *v247;
  void (*v248)(CoreOC::OCBoundingBox *, uint64_t);
  uint64_t v249;
  void *v250;
  char *v251;
  uint64_t v252;
  double v253;
  void *v254;
  id v255;
  uint64_t v256;
  void *rawValue;
  char *v258;
  simd_float4x4 *v259;
  simd_float4 v260;
  simd_float4 v261;
  simd_float4 v262;
  uint64_t v263;
  uint64_t v264;
  simd_float4 *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t (*v268)(uint64_t, uint64_t (*)(), uint64_t);
  char *v269;
  char v270;
  char *v271;
  NSObject *v272;
  os_log_type_t v273;
  uint8_t *v274;
  void *v275;
  const char *v276;
  void (*v277)(char *, uint64_t);
  char *v278;
  NSObject *v279;
  os_log_type_t v280;
  uint64_t v281;
  uint64_t v282;
  char *v283;
  double v284;
  double v285;
  void (*v286)(char *, CoreOC::OCBoundingBox *);
  char *v287;
  CoreOC::OCBoundingBox *v288;
  uint64_t v289;
  uint64_t v290;
  unint64_t v291;
  void (*v292)(void, void, void);
  uint64_t v293;
  char *v294;
  uint64_t v295;
  unsigned char *v296;
  char *v297;
  simd_float4 *v298;
  uint64_t v299;
  char *v300;
  CoreOC::OCBoundingBox *v301;
  char *v302;
  float32x4_t v303;
  float32x4_t v304;
  float32x4_t v305;
  float32x4_t v306;
  float32x4_t v307;
  char *v308;
  void (*v309)(char *, char *, CoreOC::OCBoundingBox *);
  CoreOC::OCBoundingBox *v310;
  float32x4_t v311;
  float32x4_t v312;
  unsigned char *v313;
  uint64_t v314;
  __n128 v315;
  __n128 v316;
  __n128 v317;
  __n128 v318;
  char *v319;
  uint64_t v320;
  CoreOC::OCBoundingBox *v321;
  CoreOC::OCBoundingBox *v322;
  uint64_t v323;
  void *v324;
  char *v325;
  float32x4_t v326;
  uint64_t v327;
  void (*v328)(void, void, void);
  uint64_t v329;
  uint64_t v330[4];
  float v331;
  _OWORD v332[4];
  char v333;
  CoreOC::OCVoxelCloud v334;
  uint64_t v335[18];
  CoreOC::OCBoundingBox v336;
  long long v337;
  long long v338;
  long long v339;
  long long v340;
  long long v341;
  float32x4_t v342[9];
  _OWORD v343[9];
  unsigned char v344[144];
  CoreOC::OCBoundingBox v345[2];
  CoreOC::OCBoundingBox v346;
  long long v347;
  long long v348;
  long long v349;
  long long v350;
  long long v351;
  simd_float4x4 v352;
  simd_float4x4 v353;

  v317 = a8;
  v318 = a9;
  v315 = a6;
  v316 = a7;
  v313 = a5;
  v314 = a1;
  uint64_t v12 = sub_24B6823B0();
  v320 = *(void *)(v12 - 8);
  v321 = (CoreOC::OCBoundingBox *)v12;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  v319 = (char *)&v293 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  v325 = (char *)&v293 - v15;
  v323 = sub_24B6824D0();
  v329 = *(void *)(v323 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v323);
  v300 = (char *)&v293 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v293 - v19;
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  v297 = (char *)&v293 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  v301 = (CoreOC::OCBoundingBox *)((char *)&v293 - v24);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  v311.i64[0] = (uint64_t)&v293 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  v302 = (char *)&v293 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  v305.i64[0] = (uint64_t)&v293 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  v304.i64[0] = (uint64_t)&v293 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  v312.i64[0] = (uint64_t)&v293 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  v303.i64[0] = (uint64_t)&v293 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  v308 = (char *)&v293 - v38;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  v306.i64[0] = (uint64_t)&v293 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  v307.i64[0] = (uint64_t)&v293 - v42;
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  uint64_t v45 = (CoreOC::OCBoundingBox *)((char *)&v293 - v44);
  uint64_t v46 = MEMORY[0x270FA5388](v43);
  __n128 v48 = (char *)&v293 - v47;
  uint64_t v49 = MEMORY[0x270FA5388](v46);
  __n128 v51 = (char *)&v293 - v50;
  uint64_t v52 = *(void (**)(CoreOC::OCBoundingBox *__return_ptr, uint64_t))((*MEMORY[0x263F8EED0] & *a2) + 0x420);
  v52(&v346, v49);
  v324 = a2;
  if (v346.transform.columns[0].i64[0] == 14)
  {
    sub_24B65A19C((id)0xE);
    __n128 v53 = 14;
  }
  else
  {
    sub_24B65A19C((id)v346.transform.columns[0].i64[0]);
    sub_24B65A19C((id)0xE);
    ((void (*)(CoreOC::OCBoundingBox *__return_ptr))v52)(&v346);
    if (v346.transform.columns[0].i64[0] != 12)
    {
      sub_24B65A19C((id)v346.transform.columns[0].i64[0]);
      sub_24B65A19C((id)0xC);
      int v205 = sub_24B57CB70();
      char v206 = v329;
      char v207 = v323;
      (*(void (**)(char *, uint64_t, uint64_t))(v329 + 16))(v51, v205, v323);
      char v208 = a2;
      uint64_t v209 = sub_24B6824B0();
      int v210 = sub_24B682B20();
      if (os_log_type_enabled(v209, v210))
      {
        char v211 = swift_slowAlloc();
        v328 = (void (*)(void, void, void))swift_slowAlloc();
        v346.transform.columns[0].i64[0] = (uint64_t)v328;
        *(_DWORD *)char v211 = 136380931;
        v345[0].transform.columns[0].i64[0] = sub_24B5627B8(0xD000000000000029, 0x800000024B691680, (uint64_t *)&v346);
        uint64_t v212 = sub_24B682CD0();
        *(_WORD *)(v211 + 12) = 2082;
        v327 = v211 + 14;
        v52(v345, v212);
        char v213 = sub_24B682820();
        v345[0].transform.columns[0].i64[0] = sub_24B5627B8(v213, v214, (uint64_t *)&v346);
        sub_24B682CD0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24B55E000, v209, v210, "ObjectCaptureSession.%{private}s: Start object-centric capturing expected the state to be .detecting or .ready but got %{public}s.\nNot starting capture!", (uint8_t *)v211, 0x16u);
        v215 = v328;
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v215, -1, -1);
        MEMORY[0x24C5D6C00](v211, -1, -1);

        (*(void (**)(char *, uint64_t))(v206 + 8))(v51, v323);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v206 + 8))(v51, v207);
      }
      v249 = v314;
      *v313 = 0;
      goto LABEL_85;
    }
    sub_24B65A19C((id)0xC);
    __n128 v53 = 12;
  }
  sub_24B65A19C((id)v53);
  ((void (*)(CoreOC::OCBoundingBox *__return_ptr))v52)(&v346);
  __n128 v54 = v323;
  if (v346.transform.columns[0].i64[0] == 12)
  {
    sub_24B65A19C((id)0xC);
    sub_24B65A19C((id)0xC);
    __n128 v55 = v329;
    __n128 v56 = v325;
    if (a3)
    {
      uint64_t v57 = sub_24B57CB70();
      (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v48, v57, v54);
      simd_float4 v58 = sub_24B6824B0();
      uint64_t v59 = sub_24B682B20();
      if (os_log_type_enabled(v58, v59))
      {
        uint64_t v60 = (uint8_t *)swift_slowAlloc();
        os_log_type_t v61 = swift_slowAlloc();
        v346.transform.columns[0].i64[0] = v61;
        *(_DWORD *)uint64_t v60 = 136380675;
        v345[0].transform.columns[0].i64[0] = sub_24B5627B8(0xD000000000000029, 0x800000024B691680, (uint64_t *)&v346);
        sub_24B682CD0();
        _os_log_impl(&dword_24B55E000, v58, v59, "ObjectCaptureSession.%{private}s: Plane filtering is not supported when starting object-centric capturing from .ready state!", v60, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v61, -1, -1);
        MEMORY[0x24C5D6C00](v60, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v55 + 8))(v48, v54);
LABEL_66:
      v249 = v314;
      *v313 = 0;
LABEL_85:
      sub_24B62F1C4(v249, MEMORY[0x263F90278], 0xD000000000000029, 0x800000024B691680, "ObjectCaptureSession.%{private}s: start object-centric caputring takes CMTime time = %{public}s ms");
      return;
    }
  }
  else
  {
    sub_24B65A19C((id)v346.transform.columns[0].i64[0]);
    sub_24B65A19C((id)0xC);
    __n128 v55 = v329;
    __n128 v56 = v325;
  }
  uint64_t v62 = v324;
  float v63 = (void *)((char *)v324 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureOptions);
  *float v63 = a3 & 0x101;
  v63[1] = a4;
  v296 = v63;
  sub_24B680CCC();
  OCSignPostsAriadneDbgCode();
  kdebug_trace();
  uint64_t v64 = (simd_float4x4 *)sub_24B682380();
  OCBoundingBox.init(transform:)(v345, v64);
  v346 = v345[0];
  LOBYTE(v347) = 0;
  sub_24B61E7BC((uint64_t)&v346);
  uint64_t v65 = (simd_float4 *)((char *)v62 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox);
  if ((*((unsigned char *)v62 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox + 64) & 1) == 0)
  {
    uint64_t v67 = v65[1];
    uint64_t v66 = v65[2];
    double v68 = v65[3].i64[0];
    float v69 = v65[3].i64[1];
    v346.transform.columns[0] = *v65;
    v346.transform.columns[1] = v67;
    v346.transform.columns[2] = v66;
    v346.transform.columns[3].i64[0] = v68;
    v346.transform.columns[3].i64[1] = v69;
    sub_24B67261C(*(void *)((char *)v62 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_staticSegmentID));
  }
  v298 = v65;
  v295 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_internalMotionManager;
  uint64_t v70 = *(void *)((char *)v62 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_internalMotionManager);
  if (v70)
  {
    simd_float4x4 v71 = *(void (**)(uint64_t))(*(void *)v70 + 152);
    os_log_type_t v72 = swift_retain();
    v71(v72);
    swift_release();
  }
  v294 = v20;
  long long v73 = objc_allocWithZone((Class)type metadata accessor for ObjectCaptureSession.BoundingBoxAnchor());
  uint64_t v74 = objc_msgSend(v73, sel_initWithTransform_, v315.n128_f64[0], v316.n128_f64[0], v317.n128_f64[0], v318.n128_f64[0]);
  sub_24B65E4B8();
  uint64_t v75 = *(void **)((char *)v62 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBoxAnchor);
  *(void *)((char *)v62 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBoxAnchor) = v74;
  uint64_t v76 = v74;

  sub_24B61E8C4();
  unint64_t v77 = sub_24B57CB70();
  uint64_t v78 = *(void (**)(void))(v55 + 16);
  v327 = v77;
  v328 = (void (*)(void, void, void))v78;
  v322 = (CoreOC::OCBoundingBox *)(v55 + 16);
  v78(v45);
  uint64_t v79 = sub_24B6824B0();
  uint64_t v80 = sub_24B682B10();
  if (os_log_type_enabled(v79, v80))
  {
    float v81 = swift_slowAlloc();
    v326.i64[0] = swift_slowAlloc();
    v346.transform.columns[0].i64[0] = v326.i64[0];
    *(_DWORD *)float v81 = 136380931;
    v345[0].transform.columns[0].i64[0] = sub_24B5627B8(0xD000000000000029, 0x800000024B691680, (uint64_t *)&v346);
    sub_24B682CD0();
    *(_WORD *)(v81 + 12) = 2082;
    v309 = (void (*)(char *, char *, CoreOC::OCBoundingBox *))(v81 + 14);
    sub_24B562F04((uint64_t *)&unk_2697CD150);
    uint64_t v82 = swift_allocObject();
    *(_OWORD *)(v82 + 16) = xmmword_24B684E60;
    swift_beginAccess();
    v310 = v45;
    uint64_t v83 = v319;
    sub_24B682380();
    sub_24B682390();
    unint64_t v85 = v84;
    uint64_t v86 = v320;
    uint64_t v87 = v321;
    (*(void (**)(char *, CoreOC::OCBoundingBox *))(v320 + 8))(v83, v321);
    char v88 = MEMORY[0x263F8D5B8];
    *(void *)(v82 + 56) = MEMORY[0x263F8D538];
    *(void *)(v82 + 64) = v88;
    *(double *)(v82 + 32) = v85 * 1000.0;
    __n128 v56 = v325;
    float v89 = sub_24B6827F0();
    v345[0].transform.columns[0].i64[0] = sub_24B5627B8(v89, v90, (uint64_t *)&v346);
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24B55E000, v79, v80, "ObjectCaptureSession.%{private}s: BBox and motion manager init take CMTime time = %{public}s ms", (uint8_t *)v81, 0x16u);
    uint64_t v91 = v326.i64[0];
    swift_arrayDestroy();
    __n128 v54 = v323;
    MEMORY[0x24C5D6C00](v91, -1, -1);
    MEMORY[0x24C5D6C00](v81, -1, -1);

    v326.i64[0] = *(void *)(v329 + 8);
    ((void (*)(CoreOC::OCBoundingBox *, uint64_t))v326.i64[0])(v310, v54);
  }
  else
  {

    v326.i64[0] = *(void *)(v55 + 8);
    ((void (*)(CoreOC::OCBoundingBox *, uint64_t))v326.i64[0])(v45, v54);
    uint64_t v86 = v320;
    uint64_t v87 = v321;
    uint64_t v83 = v319;
  }
  sub_24B682380();
  swift_beginAccess();
  os_log_type_t v93 = *(void (**)(char *, char *, CoreOC::OCBoundingBox *))(v86 + 40);
  uint64_t v92 = (CoreOC::OCBoundingBox *)(v86 + 40);
  v309 = v93;
  v310 = v92;
  v93(v56, v83, v87);
  uint64_t v94 = (uint64_t)v324;
  uint64_t v95 = *(void **)((char *)v324 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession);
  uint64_t v96 = objc_msgSend(v95, sel_configuration);

  if (!v96)
  {
    __break(1u);
    goto LABEL_88;
  }
  uint64_t v97 = objc_msgSend(v95, sel_configuration);
  if (!v97)
  {
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  uint64_t v98 = v97;
  uint64_t v99 = v54;
  type metadata accessor for CameraControl();
  uint64_t v100 = objc_msgSend(v98, sel_videoFormat);

  uint64_t v101 = objc_msgSend(v100, sel_device);
  uint64_t v102 = sub_24B60D894((uint64_t)v101);
  uint64_t v103 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl;
  *(void *)(v94 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl) = v102;
  swift_release();
  uint64_t v104 = *(void *)(v94 + v103);
  uint64_t v92 = v322;
  if (!v104)
  {
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  uint64_t v105 = *(void (**)(uint64_t))(*(void *)v104 + 280);
  uint64_t v106 = swift_retain();
  v105(v106);
  swift_release();
  long long v107 = v307.i64[0];
  v328(v307.i64[0], v327, v99);
  uint64_t v108 = sub_24B6824B0();
  long long v109 = sub_24B682B10();
  uint64_t v110 = os_log_type_enabled(v108, v109);
  v299 = v103;
  if (v110)
  {
    uint64_t v111 = (uint8_t *)swift_slowAlloc();
    float32x4_t v112 = swift_slowAlloc();
    v346.transform.columns[0].i64[0] = v112;
    *(_DWORD *)uint64_t v111 = 136380675;
    v345[0].transform.columns[0].i64[0] = sub_24B5627B8(0xD000000000000029, 0x800000024B691680, (uint64_t *)&v346);
    uint64_t v103 = v299;
    uint64_t v94 = (uint64_t)v324;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v108, v109, "ObjectCaptureSession.%{private}s: Camera auto white balance is locked.", v111, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v112, -1, -1);
    MEMORY[0x24C5D6C00](v111, -1, -1);
  }

  ((void (*)(uint64_t, uint64_t))v326.i64[0])(v107, v99);
  float32x4_t v113 = v99;
  uint64_t v92 = (CoreOC::OCBoundingBox *)v306.i64[0];
  uint64_t v114 = *(void *)(v94 + v103);
  if (!v114) {
    goto LABEL_93;
  }
  os_log_type_t v115 = *(void (**)(void))(*(void *)v114 + 200);
  swift_retain();
  v115(0);
  swift_release();
  BOOL v116 = *(void *)(v94 + v103);
  if (!v116)
  {
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  uint64_t v117 = *(void (**)(uint64_t))(*(void *)v116 + 208);
  uint64_t v118 = swift_retain();
  v117(v118);
  swift_release();
  float32x4_t v119 = *(void *)(v94 + v103);
  if (!v119)
  {
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
    goto LABEL_98;
  }
  double v120 = *(uint64_t (**)(uint64_t))(*(void *)v119 + 304);
  double v121 = swift_retain();
  uint64_t v122 = v120(v121);
  swift_release();
  v328(v92, v327, v99);
  uint64_t v123 = sub_24B6824B0();
  uint64_t v124 = sub_24B682B30();
  if (os_log_type_enabled(v123, v124))
  {
    unint64_t v125 = swift_slowAlloc();
    uint64_t v126 = swift_slowAlloc();
    v346.transform.columns[0].i64[0] = v126;
    *(_DWORD *)unint64_t v125 = 136380931;
    v345[0].transform.columns[0].i64[0] = sub_24B5627B8(0xD000000000000029, 0x800000024B691680, (uint64_t *)&v346);
    uint64_t v103 = v299;
    sub_24B682CD0();
    *(_WORD *)(v125 + 12) = 1026;
    v345[0].transform.columns[0].i32[0] = v122 & 1;
    float32x4_t v113 = v323;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v123, v124, "ObjectCaptureSession.%{private}s: Camera face driven AF and AE disabled = %{BOOL,public}d", (uint8_t *)v125, 0x12u);
    swift_arrayDestroy();
    uint64_t v127 = v126;
    uint64_t v94 = (uint64_t)v324;
    MEMORY[0x24C5D6C00](v127, -1, -1);
    MEMORY[0x24C5D6C00](v125, -1, -1);
  }

  ((void (*)(CoreOC::OCBoundingBox *, uint64_t))v326.i64[0])(v92, v113);
  uint64_t v128 = v308;
  *(double *)&uint64_t v129 = COERCE_DOUBLE(sub_24B567CC0());
  if (v130) {
    goto LABEL_34;
  }
  char v131 = *(void *)(v94 + v103);
  if (!v131)
  {
LABEL_98:
    __break(1u);
    goto LABEL_99;
  }
  os_log_type_t v132 = *(double *)&v129;
  uint64_t v133 = *(uint64_t (**)(uint64_t, double))(*(void *)v131 + 264);
  uint64_t v134 = swift_retain();
  LOBYTE(v133) = v133(v134, v132);
  swift_release();
  if ((v133 & 1) == 0)
  {
LABEL_34:
    uint64_t v144 = v303.i64[0];
    v328(v303.i64[0], v327, v113);
    uint64_t v145 = sub_24B6824B0();
    unint64_t v146 = sub_24B682B30();
    if (os_log_type_enabled(v145, v146))
    {
      uint64_t v147 = (uint8_t *)swift_slowAlloc();
      uint64_t v148 = swift_slowAlloc();
      v346.transform.columns[0].i64[0] = v148;
      *(_DWORD *)uint64_t v147 = 136380675;
      v345[0].transform.columns[0].i64[0] = sub_24B5627B8(0xD000000000000029, 0x800000024B691680, (uint64_t *)&v346);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v145, v146, "ObjectCaptureSession.%{private}s: Camera active max exposure duration un-specified, use auto exposure control.", v147, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v148, -1, -1);
      MEMORY[0x24C5D6C00](v147, -1, -1);
    }

    id v149 = v144;
    goto LABEL_37;
  }
  v328(v128, v327, v113);
  uint64_t v92 = (CoreOC::OCBoundingBox *)(id)v94;
  uint64_t v135 = sub_24B6824B0();
  uint64_t v136 = v94;
  uint64_t v137 = sub_24B682B30();
  if (!os_log_type_enabled(v135, v137))
  {

    id v149 = (uint64_t)v128;
LABEL_37:
    ((void (*)(uint64_t, uint64_t))v326.i64[0])(v149, v113);
LABEL_38:
    uint64_t v150 = v312.i64[0];
    v328(v312.i64[0], v327, v113);
    uint64_t v151 = sub_24B6824B0();
    uint64_t v152 = sub_24B682B10();
    if (os_log_type_enabled(v151, v152))
    {
      os_log_type_t v153 = swift_slowAlloc();
      v308 = (char *)swift_slowAlloc();
      v346.transform.columns[0].i64[0] = (uint64_t)v308;
      *(_DWORD *)os_log_type_t v153 = 136380931;
      v345[0].transform.columns[0].i64[0] = sub_24B5627B8(0xD000000000000029, 0x800000024B691680, (uint64_t *)&v346);
      sub_24B682CD0();
      *(_WORD *)(v153 + 12) = 2082;
      v307.i64[0] = v153 + 14;
      sub_24B562F04((uint64_t *)&unk_2697CD150);
      uint64_t v154 = swift_allocObject();
      *(_OWORD *)(v154 + 16) = xmmword_24B684E60;
      uint64_t v155 = v319;
      sub_24B682380();
      uint64_t v156 = v325;
      sub_24B682390();
      uint64_t v158 = v157;
      uint64_t v92 = v321;
      (*(void (**)(char *, CoreOC::OCBoundingBox *))(v320 + 8))(v155, v321);
      v159 = MEMORY[0x263F8D5B8];
      *(void *)(v154 + 56) = MEMORY[0x263F8D538];
      *(void *)(v154 + 64) = v159;
      *(double *)(v154 + 32) = v158 * 1000.0;
      id v160 = sub_24B6827F0();
      v345[0].transform.columns[0].i64[0] = sub_24B5627B8(v160, v161, (uint64_t *)&v346);
      float32x4_t v113 = v323;
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24B55E000, v151, v152, "ObjectCaptureSession.%{private}s: Camera control init takes CMTime time = %{public}s ms", (uint8_t *)v153, 0x16u);
      long long v162 = v308;
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v162, -1, -1);
      MEMORY[0x24C5D6C00](v153, -1, -1);

      ((void (*)(uint64_t, uint64_t))v326.i64[0])(v312.i64[0], v113);
    }
    else
    {

      ((void (*)(uint64_t, uint64_t))v326.i64[0])(v150, v113);
      uint64_t v92 = v321;
      uint64_t v156 = v325;
      uint64_t v155 = v319;
    }
    sub_24B682380();
    v309(v156, v155, v92);
    uint64_t v94 = (uint64_t)v324;
    sub_24B62B340();
    os_log_type_t v163 = v94 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurfaceConfig;
    sub_24B56CF38(v94 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurfaceConfig, (uint64_t)v344, &qword_2697CCA08);
    sub_24B56CF38((uint64_t)v344, (uint64_t)&v346, &qword_2697CCA08);
    sub_24B56CF38((uint64_t)v344, (uint64_t)v345, &qword_2697CCA08);
    if (sub_24B66DE3C((uint64_t)v345) == 1) {
      goto LABEL_96;
    }
    uint64_t v164 = v346.transform.columns[1].f32[2];
    uint64_t v92 = (CoreOC::OCBoundingBox *)v304.i64[0];
    v328(v304.i64[0], v327, v113);
    uint64_t v165 = sub_24B6824B0();
    v166 = sub_24B682B30();
    if (os_log_type_enabled(v165, v166))
    {
      uint64_t v167 = swift_slowAlloc();
      double v168 = swift_slowAlloc();
      v346.transform.columns[0].i64[0] = v168;
      *(_DWORD *)uint64_t v167 = 136446466;
      *(void *)&v343[0] = sub_24B5627B8(0xD000000000000029, 0x800000024B691680, (uint64_t *)&v346);
      sub_24B682CD0();
      *(_WORD *)(v167 + 12) = 2050;
      *(double *)v343 = v164;
      float32x4_t v113 = v323;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v165, v166, "ObjectCaptureSession.%{public}s: Depth confidence threshold scanning mode = %{public}f", (uint8_t *)v167, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v168, -1, -1);
      MEMORY[0x24C5D6C00](v167, -1, -1);
    }

    ((void (*)(CoreOC::OCBoundingBox *, uint64_t))v326.i64[0])(v92, v113);
    double v169 = v305.i64[0];
    if ((v298[4].i8[0] & 1) == 0)
    {
      uint64_t v171 = v298[1];
      uint64_t v170 = v298[2];
      uint64_t v172 = v298[3].i64[0];
      unint64_t v173 = v298[3].i64[1];
      v346.transform.columns[0] = *v298;
      v346.transform.columns[1] = v171;
      v346.transform.columns[2] = v170;
      v346.transform.columns[3].i64[0] = v172;
      v346.transform.columns[3].i64[1] = v173;
      uint64_t v92 = &v346;
      *(__n64 *)v174.f32 = OCBoundingBox.extent.getter();
      sub_24B6590C4(*(unsigned __int8 *)(v94 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__coverageEnabled), v342, v174, v164);
      v343[6] = v342[6];
      v343[7] = v342[7];
      v343[8] = v342[8];
      v343[2] = v342[2];
      v343[3] = v342[3];
      v343[4] = v342[4];
      v343[5] = v342[5];
      v343[0] = v342[0];
      v343[1] = v342[1];
      nullsub_1(v343);
      sub_24B56CF38((uint64_t)v343, v163, &qword_2697CCA08);
      v328(v169, v327, v113);
      uint64_t v94 = (uint64_t)(id)v94;
      uint64_t v175 = sub_24B6824B0();
      uint64_t v176 = sub_24B682B30();
      uint64_t v177 = os_log_type_enabled(v175, v176);
      v312.i64[0] = v163;
      if (v177)
      {
        uint64_t v178 = swift_slowAlloc();
        uint64_t v179 = v163;
        uint64_t v180 = swift_slowAlloc();
        v335[0] = v180;
        *(_DWORD *)uint64_t v178 = 136380931;
        v346.transform.columns[0].i64[0] = sub_24B5627B8(0xD000000000000029, 0x800000024B691680, v335);
        sub_24B682CD0();
        *(_WORD *)(v178 + 12) = 2050;
        sub_24B56CF38(v179, (uint64_t)&v336, &qword_2697CCA08);
        sub_24B56CF38((uint64_t)&v336, (uint64_t)&v346, &qword_2697CCA08);
        if (sub_24B66DE3C((uint64_t)&v346) == 1)
        {
LABEL_99:

          __break(1u);
          goto LABEL_100;
        }
        *(double *)&v334.voxels._rawValue = v346.transform.columns[2].f32[0];
        sub_24B682CD0();

        _os_log_impl(&dword_24B55E000, v175, v176, "ObjectCaptureSession.%{private}s: Voxel dimension = %{public}f", (uint8_t *)v178, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v180, -1, -1);
        MEMORY[0x24C5D6C00](v178, -1, -1);

        float32x4_t v181 = v329;
        float32x4_t v113 = v323;
        ((void (*)(uint64_t, uint64_t))v326.i64[0])(v169, v323);
        uint64_t v92 = (CoreOC::OCBoundingBox *)v311.i64[0];
        os_log_type_t v163 = v312.i64[0];
      }
      else
      {

        float32x4_t v181 = v329;
        ((void (*)(uint64_t, uint64_t))v326.i64[0])(v169, v113);
        uint64_t v92 = (CoreOC::OCBoundingBox *)v311.i64[0];
      }
      sub_24B56CF38(v163, (uint64_t)v335, &qword_2697CCA08);
      sub_24B56CF38((uint64_t)v335, (uint64_t)&v336, &qword_2697CCA08);
      if (sub_24B66DE3C((uint64_t)&v336) == 1) {
        goto LABEL_97;
      }
      v348 = v338;
      v349 = v339;
      v350 = v340;
      v351 = v341;
      v346 = v336;
      v347 = v337;
      if (!sub_24B62F564((long long *)&v346))
      {
        uint64_t v197 = v302;
        v328(v302, v327, v113);
        uint64_t v198 = sub_24B6824B0();
        uint64_t v199 = sub_24B682B20();
        uint64_t v200 = os_log_type_enabled(v198, v199);
        uint64_t v201 = v325;
        if (v200)
        {
          int v202 = (uint8_t *)swift_slowAlloc();
          int v203 = (void *)swift_slowAlloc();
          v334.voxels._rawValue = v203;
          *(_DWORD *)int v202 = 136380675;
          *(void *)&v332[0] = sub_24B5627B8(0xD000000000000029, 0x800000024B691680, (uint64_t *)&v334);
          sub_24B682CD0();
          _os_log_impl(&dword_24B55E000, v198, v199, "ObjectCaptureSession.%{private}s: Failed to start voxel integration!", v202, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24C5D6C00](v203, -1, -1);
          MEMORY[0x24C5D6C00](v202, -1, -1);

          double v204 = v302;
        }
        else
        {

          double v204 = v197;
        }
        ((void (*)(char *, uint64_t))v326.i64[0])(v204, v113);
        (*(void (**)(char *, CoreOC::OCBoundingBox *))(v320 + 8))(v201, v321);
        goto LABEL_66;
      }
      v308 = (char *)v94;
      v328(v92, v327, v113);
      uint64_t v182 = sub_24B6824B0();
      uint64_t v183 = sub_24B682B10();
      if (os_log_type_enabled(v182, v183))
      {
        id v184 = swift_slowAlloc();
        v307.i64[0] = swift_slowAlloc();
        v334.voxels._rawValue = (void *)v307.i64[0];
        *(_DWORD *)id v184 = 136380931;
        *(void *)&v332[0] = sub_24B5627B8(0xD000000000000029, 0x800000024B691680, (uint64_t *)&v334);
        v306.i64[0] = (uint64_t)v332 + 8;
        sub_24B682CD0();
        *(_WORD *)(v184 + 12) = 2082;
        v305.i64[0] = v184 + 14;
        sub_24B562F04((uint64_t *)&unk_2697CD150);
        float32x4_t v185 = swift_allocObject();
        *(_OWORD *)(v185 + 16) = xmmword_24B684E60;
        float32x4_t v186 = v319;
        sub_24B682380();
        uint64_t v187 = v325;
        sub_24B682390();
        uint64_t v189 = v188;
        v190 = v321;
        (*(void (**)(char *, CoreOC::OCBoundingBox *))(v320 + 8))(v186, v321);
        uint64_t v191 = MEMORY[0x263F8D5B8];
        *(void *)(v185 + 56) = MEMORY[0x263F8D538];
        *(void *)(v185 + 64) = v191;
        *(double *)(v185 + 32) = v189 * 1000.0;
        float32x4_t v113 = v323;
        v192 = sub_24B6827F0();
        *(void *)&v332[0] = sub_24B5627B8(v192, v193, (uint64_t *)&v334);
        uint64_t v194 = v329;
        sub_24B682CD0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24B55E000, v182, v183, "ObjectCaptureSession.%{private}s: Voxel integration restart takes CMTime time = %{public}s ms", (uint8_t *)v184, 0x16u);
        uint64_t v195 = v307.i64[0];
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v195, -1, -1);
        uint64_t v196 = v184;
        float32x4_t v181 = v194;
        MEMORY[0x24C5D6C00](v196, -1, -1);

        ((void (*)(uint64_t, uint64_t))v326.i64[0])(v311.i64[0], v113);
      }
      else
      {

        ((void (*)(CoreOC::OCBoundingBox *, uint64_t))v326.i64[0])(v92, v113);
        v190 = v321;
        uint64_t v187 = v325;
        float32x4_t v186 = v319;
      }
      sub_24B682380();
      v309(v187, v186, v190);
      char v216 = v308;
      sub_24B637E1C();
      double v217 = *(void *)&v216[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pgManager];
      int v218 = v320;
      char v219 = v187;
      char v220 = v301;
      if (v217)
      {
        uint64_t v92 = v301;
        sub_24B56CF38(v312.i64[0], (uint64_t)v332, &qword_2697CCA08);
        sub_24B56CF38((uint64_t)v332, (uint64_t)v330, &qword_2697CCA08);
        sub_24B56CF38((uint64_t)v332, (uint64_t)&v334, &qword_2697CCA08);
        if (sub_24B66DE3C((uint64_t)&v334) == 1)
        {
LABEL_101:
          __break(1u);
          goto LABEL_102;
        }
        char v221 = v331;
        uint64_t v222 = *(void (**)(uint64_t, float))(*(void *)v217 + 664);
        int v223 = swift_retain();
        v222(v223, v221);
        if (v298[4].i8[0])
        {
LABEL_102:
          __break(1u);
          goto LABEL_103;
        }
        *(double *)v352.columns[0].i64 = sub_24B5F8D74(*(float32x4_t *)v298, *(double *)v298[1].i64, *(double *)v298[2].i64, *(double *)v298[3].i64, *MEMORY[0x263EF89A8], *(float32x4_t *)(MEMORY[0x263EF89A8] + 16), *(float32x4_t *)(MEMORY[0x263EF89A8] + 32), *(float32x4_t *)(MEMORY[0x263EF89A8] + 48));
        v353 = __invert_f4(v352);
        v307 = (float32x4_t)v353.columns[0];
        v311 = (float32x4_t)v353.columns[1];
        v312 = (float32x4_t)v353.columns[2];
        v326 = (float32x4_t)v353.columns[3];
        char v224 = (*(float (**)(void))(*(void *)v217 + 656))();
        sub_24B5F900C(v224);
        v303 = v225;
        v304 = v226;
        v305 = v227;
        v306 = v228;
        swift_release();
        v229 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v307, v304.f32[0]), v311, *(float32x2_t *)v304.f32, 1), v312, v304, 2), v326, v304, 3);
        v230 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v307, v305.f32[0]), v311, *(float32x2_t *)v305.f32, 1), v312, v305, 2), v326, v305, 3);
        v231 = v326;
        v232 = v306;
        v233 = vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v307, v306.f32[0]), v311, *(float32x2_t *)v306.f32, 1), v312, v306, 2);
        v234 = (float32x4_t *)&v216[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__scaleWorldToObjectTransform];
        *v234 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v307, v303.f32[0]), v311, *(float32x2_t *)v303.f32, 1), v312, v303, 2), v326, v303, 3);
        v234[1] = v229;
        v234[2] = v230;
        v234[3] = vmlaq_laneq_f32(v233, v231, v232, 3);
        char v220 = v92;
        int v218 = v320;
      }
      v328(v220, v327, v113);
      v235 = sub_24B6824B0();
      v236 = sub_24B682B10();
      uint64_t v94 = v236;
      if (os_log_type_enabled(v235, v236))
      {
        v237 = swift_slowAlloc();
        v238 = (void *)swift_slowAlloc();
        v334.voxels._rawValue = v238;
        *(_DWORD *)v237 = 136380931;
        *(void *)&v332[0] = sub_24B5627B8(0xD000000000000029, 0x800000024B691680, (uint64_t *)&v334);
        sub_24B682CD0();
        *(_WORD *)(v237 + 12) = 2082;
        v326.i64[0] = v237 + 14;
        sub_24B562F04((uint64_t *)&unk_2697CD150);
        v239 = swift_allocObject();
        *(_OWORD *)(v239 + 16) = xmmword_24B684E60;
        v240 = v319;
        sub_24B682380();
        sub_24B682390();
        v242 = v241;
        v243 = *(void (**)(char *, CoreOC::OCBoundingBox *))(v218 + 8);
        uint64_t v92 = v321;
        v243(v240, v321);
        v244 = MEMORY[0x263F8D5B8];
        *(void *)(v239 + 56) = MEMORY[0x263F8D538];
        *(void *)(v239 + 64) = v244;
        *(double *)(v239 + 32) = v242 * 1000.0;
        v245 = sub_24B6827F0();
        *(void *)&v332[0] = sub_24B5627B8(v245, v246, (uint64_t *)&v334);
        float32x4_t v113 = v323;
        sub_24B682CD0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24B55E000, v235, (os_log_type_t)v94, "ObjectCaptureSession.%{private}s: Init PGManager if needed takes CMTime time = %{public}s ms", (uint8_t *)v237, 0x16u);
        swift_arrayDestroy();
        v247 = v238;
        char v219 = v325;
        MEMORY[0x24C5D6C00](v247, -1, -1);
        MEMORY[0x24C5D6C00](v237, -1, -1);

        v248 = *(void (**)(CoreOC::OCBoundingBox *, uint64_t))(v329 + 8);
        v248(v301, v113);
      }
      else
      {

        v248 = *(void (**)(CoreOC::OCBoundingBox *, uint64_t))(v181 + 8);
        v248(v220, v113);
        uint64_t v92 = v321;
        v240 = v319;
      }
      v250 = v324;
      sub_24B682380();
      v309(v219, v240, v92);
      v251 = v308;
      if ((v308[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_referenceTimestamp + 8] & 1) == 0)
      {
        v326.i64[0] = (uint64_t)v248;
        v252 = *(void *)((char *)v250 + v299);
        if (!v252)
        {
LABEL_100:
          __break(1u);
          goto LABEL_101;
        }
        v253 = *(double *)&v308[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_referenceTimestamp];
        type metadata accessor for CaptureManager();
        v332[0] = v315;
        v332[1] = v316;
        v332[2] = v317;
        v332[3] = v318;
        v333 = 0;
        uint64_t v92 = *(CoreOC::OCBoundingBox **)((char *)v250 + v295);
        v254 = *(void **)&v251[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
        swift_retain();
        v255 = v254;
        swift_retain();
        v256 = sub_24B5A9BE4((uint64_t)v332, v252, (uint64_t)v92, v255, v253);
        uint64_t v94 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureManager;
        *(void *)&v251[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureManager] = v256;
        swift_release();
        if (*v296 != 2)
        {
          swift_getKeyPath();
          swift_getKeyPath();
          sub_24B682560();
          swift_release();
          swift_release();
          rawValue = v334.voxels._rawValue;
          swift_getKeyPath();
          swift_getKeyPath();
          v334.voxels._rawValue = (void *)15;
          v258 = v251;
          sub_24B682570();
          v334.voxels._rawValue = rawValue;
          sub_24B612878(&v334.voxels._rawValue);
          sub_24B65A19C(rawValue);
          OCVoxelCloud.init(voxels:transform:)(&v334, MEMORY[0x263F8EE78], v259);
          v260 = v334.transform.columns[0];
          v261 = v334.transform.columns[1];
          v262 = v334.transform.columns[2];
          v263 = v334.transform.columns[3].i64[1];
          v264 = v334.transform.columns[3].i64[0];
          v265 = (simd_float4 *)&v258[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maskingVoxelCloud];
          v265->i64[0] = (uint64_t)v334.voxels._rawValue;
          v265->i64[1] = 0;
          v265[1] = v260;
          v265[2] = v261;
          v265[3] = v262;
          v265[4].i64[0] = v264;
          v265[4].i64[1] = v263;
          swift_bridgeObjectRelease();
          v266 = *(void *)&v251[v94];
          if (!v266) {
            goto LABEL_75;
          }
          v267 = swift_allocObject();
          *(void *)(v267 + 16) = v258;
          v268 = *(uint64_t (**)(uint64_t, uint64_t (*)(), uint64_t))(*(void *)v266 + 488);
          v269 = v258;
          swift_retain();
          v270 = v268(1, sub_24B66F1E4, v267);
          swift_release();
          swift_release();
          if (v270)
          {
            v271 = v297;
            v328(v297, v327, v113);
            v272 = sub_24B6824B0();
            v273 = sub_24B682B30();
            if (os_log_type_enabled(v272, v273))
            {
              v274 = (uint8_t *)swift_slowAlloc();
              v275 = (void *)swift_slowAlloc();
              v334.voxels._rawValue = v275;
              *(_DWORD *)v274 = 136380675;
              v330[0] = sub_24B5627B8(0xD000000000000029, 0x800000024B691680, (uint64_t *)&v334);
              sub_24B682CD0();
              v276 = "ObjectCaptureSession.%{private}s: AutomaticCapture: Take first shot success.";
LABEL_77:
              _os_log_impl(&dword_24B55E000, v272, v273, v276, v274, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x24C5D6C00](v275, -1, -1);
              MEMORY[0x24C5D6C00](v274, -1, -1);
            }
          }
          else
          {
LABEL_75:
            v271 = v294;
            v328(v294, v327, v113);
            v272 = sub_24B6824B0();
            v273 = sub_24B682B20();
            if (os_log_type_enabled(v272, v273))
            {
              v274 = (uint8_t *)swift_slowAlloc();
              v275 = (void *)swift_slowAlloc();
              v334.voxels._rawValue = v275;
              *(_DWORD *)v274 = 136380675;
              v330[0] = sub_24B5627B8(0xD000000000000029, 0x800000024B691680, (uint64_t *)&v334);
              sub_24B682CD0();
              v276 = "ObjectCaptureSession.%{private}s: AutomaticCapture: Take first shot fail!";
              goto LABEL_77;
            }
          }

          v277 = (void (*)(char *, uint64_t))v326.i64[0];
          ((void (*)(char *, uint64_t))v326.i64[0])(v271, v113);
          v278 = v300;
          v328(v300, v327, v113);
          v279 = sub_24B6824B0();
          v280 = sub_24B682B10();
          if (os_log_type_enabled(v279, v280))
          {
            v281 = swift_slowAlloc();
            v328 = (void (*)(void, void, void))swift_slowAlloc();
            v334.voxels._rawValue = v328;
            *(_DWORD *)v281 = 136380931;
            v330[0] = sub_24B5627B8(0xD000000000000029, 0x800000024B691680, (uint64_t *)&v334);
            sub_24B682CD0();
            *(_WORD *)(v281 + 12) = 2082;
            v327 = v281 + 14;
            sub_24B562F04((uint64_t *)&unk_2697CD150);
            v282 = swift_allocObject();
            *(_OWORD *)(v282 + 16) = xmmword_24B684E60;
            v283 = v319;
            sub_24B682380();
            sub_24B682390();
            v285 = v284;
            v286 = *(void (**)(char *, CoreOC::OCBoundingBox *))(v320 + 8);
            v287 = v283;
            v288 = v321;
            v286(v287, v321);
            v289 = MEMORY[0x263F8D5B8];
            *(void *)(v282 + 56) = MEMORY[0x263F8D538];
            *(void *)(v282 + 64) = v289;
            *(double *)(v282 + 32) = v285 * 1000.0;
            v290 = sub_24B6827F0();
            v330[0] = sub_24B5627B8(v290, v291, (uint64_t *)&v334);
            sub_24B682CD0();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_24B55E000, v279, v280, "ObjectCaptureSession.%{private}s: Init CaptureManager and takes first shot take CMTime time = %{public}s ms", (uint8_t *)v281, 0x16u);
            v292 = v328;
            swift_arrayDestroy();
            MEMORY[0x24C5D6C00](v292, -1, -1);
            MEMORY[0x24C5D6C00](v281, -1, -1);

            ((void (*)(char *, uint64_t))v326.i64[0])(v300, v323);
            v286(v325, v288);
          }
          else
          {

            v277(v278, v113);
            (*(void (**)(char *, CoreOC::OCBoundingBox *))(v320 + 8))(v325, v321);
          }
          v249 = v314;
          *v313 = 1;
          goto LABEL_85;
        }
        goto LABEL_90;
      }
LABEL_89:
      __break(1u);
LABEL_90:
      __break(1u);
      goto LABEL_91;
    }
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
  os_log_type_t v138 = swift_slowAlloc();
  v307.i64[0] = swift_slowAlloc();
  v346.transform.columns[0].i64[0] = v307.i64[0];
  *(_DWORD *)os_log_type_t v138 = 136380931;
  v345[0].transform.columns[0].i64[0] = sub_24B5627B8(0xD000000000000029, 0x800000024B691680, (uint64_t *)&v346);
  sub_24B682CD0();
  *(_WORD *)(v138 + 12) = 2050;
  uint64_t v139 = *(void *)(v136 + v103);
  if (v139)
  {
    uint64_t v140 = *(double (**)(uint64_t))(*(void *)v139 + 184);
    uint64_t v141 = swift_retain();
    double v142 = v140(v141);
    swift_release();
    *(double *)v345[0].transform.columns[0].i64 = v142;
    sub_24B682CD0();

    _os_log_impl(&dword_24B55E000, v135, v137, "ObjectCaptureSession.%{private}s: Camera active max exposure duration successfully set to %{public}f seconds", (uint8_t *)v138, 0x16u);
    double v143 = v307.i64[0];
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v143, -1, -1);
    MEMORY[0x24C5D6C00](v138, -1, -1);

    float32x4_t v113 = v323;
    ((void (*)(char *, uint64_t))v326.i64[0])(v308, v323);
    goto LABEL_38;
  }
LABEL_103:

  __break(1u);
}

uint64_t sub_24B62F1C4(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, unint64_t a4, const char *a5)
{
  uint64_t v29 = (char *)a4;
  uint64_t v30 = a5;
  uint64_t v28 = a3;
  uint64_t v6 = sub_24B6824D0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24B6823B0();
  uint64_t v31 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B682380();
  sub_24B562F04((uint64_t *)&unk_2697CD150);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_24B684E60;
  sub_24B682390();
  uint64_t v14 = MEMORY[0x263F8D5B8];
  *(void *)(v13 + 56) = MEMORY[0x263F8D538];
  *(void *)(v13 + 64) = v14;
  *(double *)(v13 + 32) = v15 * 1000.0;
  uint64_t v16 = sub_24B6827F0();
  unint64_t v18 = v17;
  uint64_t v19 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v19, v6);
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_24B6824B0();
  os_log_type_t v21 = a2();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v27 = v10;
    uint64_t v24 = v23;
    uint64_t v33 = v23;
    *(_DWORD *)uint64_t v22 = 136380931;
    uint64_t v26 = v6;
    uint64_t v32 = sub_24B5627B8(v28, (unint64_t)v29, &v33);
    uint64_t v29 = v9;
    sub_24B682CD0();
    *(_WORD *)(v22 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_24B5627B8(v16, v18, &v33);
    sub_24B682CD0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24B55E000, v20, v21, v30, (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v24, -1, -1);
    MEMORY[0x24C5D6C00](v22, -1, -1);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v29, v26);
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v12, v27);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v12, v10);
  }
}

BOOL sub_24B62F564(long long *a1)
{
  uint64_t v55 = *MEMORY[0x263EF8340];
  uint64_t v3 = sub_24B6824D0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v40 - v8;
  uint64_t v10 = sub_24B6823B0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B682380();
  long long v14 = a1[6];
  *(_OWORD *)(v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurfaceObjectOrigin) = a1[5];
  long long v15 = a1[7];
  long long v16 = a1[8];
  long long v52 = v14;
  long long v53 = v15;
  long long v54 = v16;
  long long v17 = a1[3];
  long long v48 = a1[2];
  long long v49 = v17;
  long long v18 = a1[5];
  long long v50 = a1[4];
  long long v51 = v18;
  long long v19 = a1[1];
  long long v46 = *a1;
  long long v47 = v19;
  swift_beginAccess();
  int v20 = OCProxySurfaceCreate();
  swift_endAccess();
  if (!v20)
  {
    uint64_t v29 = v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_worldToObjectTransformFromMobileSfM;
    *(_OWORD *)(v29 + 32) = 0u;
    *(_OWORD *)(v29 + 48) = 0u;
    *(_OWORD *)uint64_t v29 = 0u;
    *(_OWORD *)(v29 + 16) = 0u;
    *(unsigned char *)(v29 + 64) = 1;
    uint64_t v30 = v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_initialWorldToMobileSfMTransform;
    *(_OWORD *)uint64_t v30 = 0u;
    *(_OWORD *)(v30 + 16) = 0u;
    *(_OWORD *)(v30 + 32) = 0u;
    *(_OWORD *)(v30 + 48) = 0u;
    *(unsigned char *)(v30 + 64) = 1;
    *(unsigned char *)(v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForPoseCorrectionUsingMobileSfM) = 0;
    *(void *)(v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pauseTimeForPoseCorrection) = 0;
    *(unsigned char *)(v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForNewPlane) = 0;
    uint64_t v31 = sub_24B57CC7C();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v31, v3);
    uint64_t v32 = sub_24B6824B0();
    os_log_type_t v33 = sub_24B682B10();
    if (os_log_type_enabled(v32, v33))
    {
      LODWORD(v41) = 0;
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      uint64_t v43 = v10;
      uint64_t v36 = v35;
      v45[0] = v35;
      uint64_t v42 = v3;
      *(_DWORD *)uint64_t v34 = 136380675;
      uint64_t v44 = sub_24B5627B8(0xD000000000000019, 0x800000024B690DE0, v45);
      int v20 = (int)v41;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v32, v33, "ObjectCaptureSession.%{private}s: Reset voxel integration subsession data.", v34, 0xCu);
      swift_arrayDestroy();
      uint64_t v37 = v36;
      uint64_t v10 = v43;
      MEMORY[0x24C5D6C00](v37, -1, -1);
      MEMORY[0x24C5D6C00](v34, -1, -1);

      uint64_t v27 = *(void (**)(char *, uint64_t))(v4 + 8);
      uint64_t v28 = v7;
      goto LABEL_6;
    }

    uint64_t v27 = *(void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v28 = v7;
LABEL_9:
    uint64_t v38 = v3;
    goto LABEL_10;
  }
  uint64_t v21 = sub_24B57CC7C();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v9, v21, v3);
  uint64_t v22 = sub_24B6824B0();
  os_log_type_t v23 = sub_24B682B20();
  if (!os_log_type_enabled(v22, v23))
  {

    uint64_t v27 = *(void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v28 = v9;
    goto LABEL_9;
  }
  uint64_t v43 = v10;
  uint64_t v24 = (uint8_t *)swift_slowAlloc();
  uint64_t v25 = swift_slowAlloc();
  uint64_t v42 = v3;
  uint64_t v26 = v25;
  v45[0] = v25;
  uint64_t v41 = v13;
  *(_DWORD *)uint64_t v24 = 136380675;
  uint64_t v44 = sub_24B5627B8(0xD000000000000019, 0x800000024B690DE0, v45);
  uint64_t v10 = v43;
  uint64_t v13 = v41;
  sub_24B682CD0();
  _os_log_impl(&dword_24B55E000, v22, v23, "ObjectCaptureSession.%{private}s: Failed to create proxy surface!", v24, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x24C5D6C00](v26, -1, -1);
  MEMORY[0x24C5D6C00](v24, -1, -1);

  uint64_t v27 = *(void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v28 = v9;
LABEL_6:
  uint64_t v38 = v42;
LABEL_10:
  v27(v28, v38);
  sub_24B63A450((uint64_t)v13, 0xD000000000000019, 0x800000024B690DE0);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v20 == 0;
}

void sub_24B62FB04()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  unint64_t v146 = (char *)&v141 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v145 = (char *)&v141 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v141 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v143 = (uint64_t)&v141 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v147 = (char *)&v141 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  id v149 = (char *)&v141 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v148 = (char *)&v141 - v18;
  MEMORY[0x270FA5388](v17);
  int v20 = (char *)&v141 - v19;
  type metadata accessor for ARWorldTrackingConfigurationForObjectCapture();
  id v21 = sub_24B57C8CC();
  objc_msgSend(v21, sel_setFrameSemantics_, 24);
  id v22 = objc_msgSend((id)swift_getObjCClassFromObject(), sel_recommendedVideoFormatForHighResolutionFrameCapturing);
  if (!v22) {
    goto LABEL_79;
  }
  os_log_type_t v23 = v22;
  uint64_t v24 = sub_24B567F30();
  uint64_t v152 = v2;
  if ((v25 & 1) == 0)
  {
    uint64_t v26 = v24;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v28 = (char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maxPhotoDimensions;
    swift_beginAccess();
    uint64_t v29 = (*(uint64_t (**)(uint64_t, char *))(ObjectType + 80))(v26, v28);
    swift_endAccess();
    if (v29)
    {

      os_log_type_t v23 = (void *)v29;
    }
    uint64_t v2 = v152;
  }
  id v150 = v23;
  objc_msgSend(v21, sel_setVideoFormat_, v23);
  objc_msgSend(v21, sel_setAlwaysUsePrimaryCameraForTracking_, 1);
  int v30 = *((unsigned __int8 *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isHighQualityMacroModeSupported);
  if (v30 == 2) {
    goto LABEL_80;
  }
  uint64_t v151 = v1;
  uint64_t v144 = v10;
  if (v30)
  {
    objc_msgSend(v21, sel_setTimeOfFlightProjectorMode_, *MEMORY[0x263EF8EF8]);
    uint64_t v31 = sub_24B57CB70();
    uint64_t v141 = *(void (**)(char *))(v3 + 16);
    uint64_t v142 = v31;
    v141(v20);
    uint64_t v32 = sub_24B6824B0();
    os_log_type_t v33 = sub_24B682B30();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      v154[0] = v35;
      *(_DWORD *)uint64_t v34 = 136380675;
      double v153 = COERCE_DOUBLE(sub_24B5627B8(0xD000000000000015, 0x800000024B690F70, v154));
      uint64_t v2 = v152;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v32, v33, "ObjectCaptureSession.%{private}s: Set high quality mode for LiDAR point cloud.", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v35, -1, -1);
      MEMORY[0x24C5D6C00](v34, -1, -1);
    }

    uint64_t v36 = *(void (**)(char *, uint64_t))(v3 + 8);
    v36(v20, v2);
    uint64_t v37 = v148;
    ((void (*)(char *, uint64_t, uint64_t))v141)(v148, v142, v2);
    uint64_t v38 = sub_24B6824B0();
    os_log_type_t v39 = sub_24B682B30();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      v154[0] = v41;
      *(_DWORD *)uint64_t v40 = 136380675;
      double v153 = COERCE_DOUBLE(sub_24B5627B8(0xD000000000000015, 0x800000024B690F70, v154));
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v38, v39, "ObjectCaptureSession.%{private}s: Set framerate = 120 for LiDAR point cloud.", v40, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v41, -1, -1);
      uint64_t v42 = v40;
      uint64_t v2 = v152;
      MEMORY[0x24C5D6C00](v42, -1, -1);

      uint64_t v43 = v148;
    }
    else
    {

      uint64_t v43 = v37;
    }
    v36(v43, v2);
    objc_msgSend(v21, sel_setJasperFrameRate_, 120);
    uint64_t v1 = v151;
  }
  if (*((unsigned char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isToFSensorTypePeridot) == 1)
  {
    objc_msgSend(v21, sel_setJasperFrameRate_, 60);
    uint64_t v44 = sub_24B57CB70();
    uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    long long v46 = v149;
    v45(v149, v44, v2);
    long long v47 = sub_24B6824B0();
    os_log_type_t v48 = sub_24B682B30();
    if (os_log_type_enabled(v47, v48))
    {
      long long v49 = (uint8_t *)swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      uint64_t v148 = (char *)v45;
      uint64_t v51 = v50;
      v154[0] = v50;
      *(_DWORD *)long long v49 = 136380675;
      double v153 = COERCE_DOUBLE(sub_24B5627B8(0xD000000000000015, 0x800000024B690F70, v154));
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v47, v48, "ObjectCaptureSession.%{private}s: Adjusted framerate = 60 for LiDAR point cloud.", v49, 0xCu);
      swift_arrayDestroy();
      uint64_t v52 = v51;
      uint64_t v45 = (void (*)(char *, uint64_t, uint64_t))v148;
      MEMORY[0x24C5D6C00](v52, -1, -1);
      long long v53 = v49;
      uint64_t v2 = v152;
      MEMORY[0x24C5D6C00](v53, -1, -1);

      long long v54 = *(void (**)(char *, uint64_t))(v3 + 8);
      v54(v149, v2);
    }
    else
    {

      long long v54 = *(void (**)(char *, uint64_t))(v3 + 8);
      v54(v46, v2);
    }
    uint64_t v55 = v147;
    objc_msgSend(v21, sel_setDepthSensorNumberOfPointsMode_, 1);
    v45(v55, v44, v2);
    __n128 v56 = sub_24B6824B0();
    os_log_type_t v57 = sub_24B682B30();
    if (os_log_type_enabled(v56, v57))
    {
      simd_float4 v58 = (uint8_t *)swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      v154[0] = v59;
      *(_DWORD *)simd_float4 v58 = 136380675;
      double v153 = COERCE_DOUBLE(sub_24B5627B8(0xD000000000000015, 0x800000024B690F70, v154));
      uint64_t v2 = v152;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v56, v57, "ObjectCaptureSession.%{private}s: Set number of points = high, for LiDAR point cloud.", v58, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v59, -1, -1);
      MEMORY[0x24C5D6C00](v58, -1, -1);
    }

    v54(v55, v2);
    uint64_t v1 = v151;
  }
  objc_msgSend(v21, sel_setFocusPixelBlurScoreDeliveryEnabled_, 1);
  id v60 = v21;
  os_log_type_t v61 = (void *)sub_24B6827A0();
  objc_msgSend(v60, sel_setSlamConfiguration_, v61);

  if ((*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v1) + 0x4B8))())
  {
    objc_msgSend(v60, sel_setPlaneDetection_, 0);
    unint64_t v62 = sub_24B568050();
    if ((v62 & 0x100000000) != 0)
    {
      uint64_t v77 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformScanExtent;
      uint64_t v143 = sub_24B5771FC(*((unsigned char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformScanExtent));
      uint64_t v78 = sub_24B57CB70();
      uint64_t v75 = *(char **)(v3 + 16);
      id v149 = (char *)((v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000);
      uint64_t v79 = v144;
      uint64_t v142 = v78;
      ((void (*)(char *))v75)(v144);
      uint64_t v80 = v1;
      float v81 = sub_24B6824B0();
      os_log_type_t v82 = sub_24B682B30();
      if (os_log_type_enabled(v81, v82))
      {
        uint64_t v83 = swift_slowAlloc();
        uint64_t v141 = (void (*)(char *))v77;
        uint64_t v84 = v83;
        uint64_t v148 = (char *)swift_slowAlloc();
        v154[0] = (uint64_t)v148;
        *(_DWORD *)uint64_t v84 = 136381187;
        uint64_t v147 = v75;
        double v153 = COERCE_DOUBLE(sub_24B5627B8(0xD000000000000015, 0x800000024B690F70, v154));
        sub_24B682CD0();
        *(_WORD *)(v84 + 12) = 2080;
        sub_24B5771DC(v143);
        uint64_t v85 = sub_24B682A60();
        double v153 = COERCE_DOUBLE(sub_24B5627B8(v85, v86, v154));
        sub_24B682CD0();
        uint64_t v2 = v152;
        swift_bridgeObjectRelease();
        *(_WORD *)(v84 + 22) = 2082;
        LOBYTE(v153) = *((unsigned char *)v141 + (void)v151);
        uint64_t v87 = sub_24B682820();
        double v153 = COERCE_DOUBLE(sub_24B5627B8(v87, v88, v154));
        uint64_t v75 = v147;
        sub_24B682CD0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24B55E000, v81, v82, "ObjectCaptureSession.%{private}s: Computed voxel size %s from scan extent: %{public}s.", (uint8_t *)v84, 0x20u);
        float v89 = v148;
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v89, -1, -1);
        MEMORY[0x24C5D6C00](v84, -1, -1);

        uint64_t v74 = v3;
        uint64_t v90 = *(char **)(v3 + 8);
        uint64_t v91 = v144;
      }
      else
      {

        uint64_t v74 = v3;
        uint64_t v90 = *(char **)(v3 + 8);
        uint64_t v91 = v79;
      }
      uint64_t v148 = v90;
      ((void (*)(char *, uint64_t))v90)(v91, v2);
      uint64_t v92 = v145;
      id v93 = objc_msgSend(v60, sel_sceneReconstructionOptions);
      uint64_t v94 = v143;
      objc_msgSend(v93, sel_setVoxelSize_, v143);

      ((void (*)(char *, uint64_t, uint64_t))v75)(v92, v142, v2);
      uint64_t v95 = sub_24B6824B0();
      os_log_type_t v96 = sub_24B682B30();
      if (os_log_type_enabled(v95, v96))
      {
        uint64_t v97 = swift_slowAlloc();
        uint64_t v98 = v94;
        uint64_t v99 = swift_slowAlloc();
        v154[0] = v99;
        *(_DWORD *)uint64_t v97 = 136380931;
        double v153 = COERCE_DOUBLE(sub_24B5627B8(0xD000000000000015, 0x800000024B690F70, v154));
        sub_24B682CD0();
        *(_WORD *)(v97 + 12) = 2082;
        sub_24B5771DC(v98);
        uint64_t v100 = sub_24B682A60();
        double v153 = COERCE_DOUBLE(sub_24B5627B8(v100, v101, v154));
        sub_24B682CD0();
        uint64_t v2 = v152;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24B55E000, v95, v96, "ObjectCaptureSession.%{private}s: Set ARKit scene reconstruction voxel size = %{public}s", (uint8_t *)v97, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v99, -1, -1);
        MEMORY[0x24C5D6C00](v97, -1, -1);

        uint64_t v102 = v145;
      }
      else
      {

        uint64_t v102 = v92;
      }
      long long v73 = (void (*)(uint64_t, uint64_t))v148;
      ((void (*)(char *, uint64_t))v148)(v102, v2);
      uint64_t v1 = v151;
      uint64_t v76 = v146;
    }
    else
    {
      float v63 = *(float *)&v62;
      uint64_t v64 = sub_24B57CB70();
      uint64_t v65 = *(char **)(v3 + 16);
      id v149 = (char *)((v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000);
      uint64_t v66 = v143;
      uint64_t v147 = v65;
      ((void (*)(uint64_t, uint64_t, uint64_t))v65)(v143, v64, v2);
      uint64_t v67 = sub_24B6824B0();
      uint64_t v68 = v3;
      os_log_type_t v69 = sub_24B682B30();
      if (os_log_type_enabled(v67, v69))
      {
        uint64_t v70 = swift_slowAlloc();
        uint64_t v71 = swift_slowAlloc();
        v154[0] = v71;
        *(_DWORD *)uint64_t v70 = 136380931;
        double v153 = COERCE_DOUBLE(sub_24B5627B8(0xD000000000000015, 0x800000024B690F70, v154));
        sub_24B682CD0();
        *(_WORD *)(v70 + 12) = 2050;
        double v153 = v63;
        sub_24B682CD0();
        _os_log_impl(&dword_24B55E000, v67, v69, "ObjectCaptureSession.%{private}s: Using ARKit scene reconstruction voxel size %{public}f set by user default", (uint8_t *)v70, 0x16u);
        swift_arrayDestroy();
        uint64_t v72 = v71;
        uint64_t v2 = v152;
        MEMORY[0x24C5D6C00](v72, -1, -1);
        MEMORY[0x24C5D6C00](v70, -1, -1);
      }

      long long v73 = *(void (**)(uint64_t, uint64_t))(v68 + 8);
      v73(v66, v2);
      uint64_t v74 = v68;
      uint64_t v76 = v146;
      uint64_t v75 = v147;
    }
    objc_msgSend(v60, sel_setSceneReconstruction_, *MEMORY[0x263EF8EE8]);
    uint64_t v103 = sub_24B57CB70();
    ((void (*)(char *, uint64_t, uint64_t))v75)(v76, v103, v2);
    uint64_t v104 = sub_24B6824B0();
    os_log_type_t v105 = sub_24B682B30();
    if (os_log_type_enabled(v104, v105))
    {
      uint64_t v152 = v74;
      uint64_t v148 = (char *)v73;
      uint64_t v106 = (uint8_t *)swift_slowAlloc();
      long long v107 = v76;
      uint64_t v108 = swift_slowAlloc();
      v154[0] = v108;
      *(_DWORD *)uint64_t v106 = 136380675;
      double v153 = COERCE_DOUBLE(sub_24B5627B8(0xD000000000000015, 0x800000024B690F70, v154));
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v104, v105, "ObjectCaptureSession.%{private}s: Enabled scene reconstruction with object capture preset", v106, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v108, -1, -1);
      MEMORY[0x24C5D6C00](v106, -1, -1);

      ((void (*)(char *, uint64_t))v148)(v107, v2);
    }
    else
    {

      v73((uint64_t)v76, v2);
    }
  }
  else
  {
    objc_msgSend(v60, sel_setPlaneDetection_, 1);
  }
  id v109 = objc_msgSend(v60, sel_videoFormat);
  unsigned int v110 = objc_msgSend(v109, sel_isRecommendedForHighResolutionFrameCapturing);

  if (!v110)
  {
    __break(1u);
    goto LABEL_64;
  }
  id v111 = objc_msgSend(v60, sel_videoFormat);
  id v112 = objc_msgSend(v111, sel_captureDevicePosition);

  if (v112 != (id)1)
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  id v113 = objc_msgSend(v60, sel_videoFormat);
  id v114 = objc_msgSend(v113, sel_captureDeviceType);

  uint64_t v115 = sub_24B6827D0();
  uint64_t v117 = v116;
  if (v115 == sub_24B6827D0() && v117 == v118)
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_43;
  }
  char v119 = sub_24B682FA0();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v119 & 1) == 0)
  {
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
LABEL_43:
  double v120 = (char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maxPhotoDimensions;
  swift_beginAccess();
  if ((v120[8] & 1) == 0)
  {
LABEL_61:

    return;
  }
  id v121 = objc_msgSend(v60, sel_videoFormat);
  id v122 = objc_msgSend(v121, sel_framesPerSecond);

  if (v122 != (id)30) {
    goto LABEL_66;
  }
  id v123 = objc_msgSend(v60, sel_videoFormat);
  objc_msgSend(v123, sel_imageResolution);
  double v125 = v124;

  if ((~*(void *)&v125 & 0x7FF0000000000000) == 0)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  if (v125 <= -1.0)
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  if (v125 >= 4294967300.0)
  {
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (v125 != 1920)
  {
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  id v126 = objc_msgSend(v60, sel_videoFormat);
  objc_msgSend(v126, sel_imageResolution);
  double v128 = v127;

  if ((~*(void *)&v128 & 0x7FF0000000000000) == 0)
  {
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if (v128 <= -1.0)
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  if (v128 >= 4294967300.0)
  {
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  if (v128 != 1440)
  {
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  id v129 = objc_msgSend(v60, sel_videoFormat);
  id v130 = objc_msgSend(v129, sel_deviceFormat);

  LOBYTE(v129) = objc_msgSend(v130, sel_isVideoBinned);
  if (v129)
  {
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  id v131 = objc_msgSend(v60, sel_videoFormat);
  id v132 = objc_msgSend(v131, sel_deviceFormat);

  uint64_t v133 = sub_24B682C20();
  if (*(void *)(v133 + 16) < 2uLL)
  {
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  int v134 = *(_DWORD *)(v133 + 40);
  swift_bridgeObjectRelease();
  uint64_t v135 = sub_24B5F6688();
  if (v134 < 0 || v134 != *v135) {
    goto LABEL_77;
  }
  id v136 = objc_msgSend(v60, sel_videoFormat);
  id v137 = objc_msgSend(v136, sel_deviceFormat);

  uint64_t v138 = sub_24B682C20();
  if (*(void *)(v138 + 16) < 2uLL)
  {
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
    return;
  }
  int v139 = *(_DWORD *)(v138 + 44);
  swift_bridgeObjectRelease();
  int v140 = *(_DWORD *)sub_24B5F6694();

  if (v139 < 0 || v139 != v140)
  {
    __break(1u);
    goto LABEL_61;
  }
}

id sub_24B630F50(void *a1)
{
  id v97 = a1;
  v104[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v98 = sub_24B6824D0();
  uint64_t v96 = *(void *)(v98 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v98);
  uint64_t v95 = (char *)&v90 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v94 = (char *)&v90 - v5;
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v90 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v92 = (char *)&v90 - v9;
  uint64_t v10 = sub_24B562F04(&qword_2697CC1F0);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  id v93 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v90 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v90 - v16;
  uint64_t v18 = sub_24B6822E0();
  uint64_t v19 = *(char **)(v18 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  id v22 = (char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v90 - v23;
  uint64_t v25 = v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__replayVideoURL;
  swift_beginAccess();
  sub_24B563A6C(v25, (uint64_t)v17, &qword_2697CC1F0);
  uint64_t v26 = (uint64_t (*)(char *, uint64_t, uint64_t))*((void *)v19 + 6);
  if (v26(v17, 1, v18) == 1)
  {
    sub_24B5632A8((uint64_t)v17, &qword_2697CC1F0);
    uint64_t v27 = v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__recordVideoURL;
    swift_beginAccess();
    sub_24B563A6C(v27, (uint64_t)v15, &qword_2697CC1F0);
    if (v26(v15, 1, v18) == 1)
    {
      sub_24B5632A8((uint64_t)v15, &qword_2697CC1F0);
      uint64_t v28 = sub_24B57CB70();
      uint64_t v29 = v95;
      uint64_t v30 = v96;
      uint64_t v31 = v98;
      (*(void (**)(char *, uint64_t, uint64_t))(v96 + 16))(v95, v28, v98);
      uint64_t v32 = sub_24B6824B0();
      os_log_type_t v33 = sub_24B682B30();
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = (uint8_t *)swift_slowAlloc();
        uint64_t v35 = swift_slowAlloc();
        v103[0] = v35;
        *(_DWORD *)uint64_t v34 = 136380675;
        uint64_t v101 = sub_24B5627B8(0xD000000000000023, 0x800000024B690F00, v103);
        sub_24B682CD0();
        _os_log_impl(&dword_24B55E000, v32, v33, "ObjectCaptureSession.%{private}s: Using ARBaseConfiguration.", v34, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v35, -1, -1);
        MEMORY[0x24C5D6C00](v34, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v30 + 8))(v29, v31);
      id v36 = v97;
      id v37 = v97;
    }
    else
    {
      uint64_t v64 = (void (**)(char *, char *, uint64_t))v19;
      uint64_t v65 = v22;
      (*((void (**)(char *, char *, uint64_t))v19 + 4))(v22, v15, v18);
      uint64_t v66 = v1;
      uint64_t v67 = v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maxPhotoDimensions;
      swift_beginAccess();
      uint64_t v68 = v96;
      if (*(unsigned char *)(v67 + 8) != 1) {
        __break(1u);
      }
      os_log_type_t v69 = v93;
      v64[2](v93, v65, v18);
      ((void (*)(char *, void, uint64_t, uint64_t))v64[7])(v69, 0, 1, v18);
      int v70 = v26(v69, 1, v18);
      id v71 = v97;
      uint64_t v91 = v18;
      uint64_t v90 = v65;
      if (v70 == 1)
      {
        uint64_t v72 = 0;
      }
      else
      {
        uint64_t v72 = (void *)sub_24B682250();
        ((void (*)(char *, uint64_t))v64[1])(v69, v18);
      }
      uint64_t v81 = v98;
      id v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EF8FD0]), sel_initWithBaseConfiguration_fileURL_, v71, v72);

      os_log_type_t v82 = (void *)(v66 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__skippedFramesTimeStamps);
      swift_beginAccess();
      *os_log_type_t v82 = MEMORY[0x263F8EE88];
      swift_bridgeObjectRelease();
      objc_msgSend(objc_msgSend(v36, sel_recordingTechnique), sel_setExpectCustomData_, 1);
      swift_unknownObjectRelease();
      objc_msgSend(v36, sel_startRecording);
      uint64_t v83 = sub_24B57CB70();
      uint64_t v84 = v94;
      (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v94, v83, v81);
      uint64_t v85 = v68;
      unint64_t v86 = sub_24B6824B0();
      os_log_type_t v87 = sub_24B682B30();
      if (os_log_type_enabled(v86, v87))
      {
        unint64_t v88 = (uint8_t *)swift_slowAlloc();
        uint64_t v89 = swift_slowAlloc();
        v100[0] = v89;
        *(_DWORD *)unint64_t v88 = 136380675;
        uint64_t v99 = sub_24B5627B8(0xD000000000000023, 0x800000024B690F00, v100);
        sub_24B682CD0();
        _os_log_impl(&dword_24B55E000, v86, v87, "ObjectCaptureSession.%{private}s: Using ARRecordingConfiguration.", v88, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v89, -1, -1);
        MEMORY[0x24C5D6C00](v88, -1, -1);

        (*(void (**)(char *, uint64_t))(v85 + 8))(v84, v98);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v68 + 8))(v84, v81);
      }
      ((void (*)(char *, uint64_t))v64[1])(v90, v91);
    }
    return v36;
  }
  uint64_t v38 = v1;
  uint64_t v95 = v19;
  (*((void (**)(char *, char *, uint64_t))v19 + 4))(v24, v17, v18);
  os_log_type_t v39 = (void *)sub_24B682250();
  v104[0] = 0;
  uint64_t v40 = ARReplaySensorClassForMovieURL();

  id v41 = v104[0];
  uint64_t v42 = v18;
  if (!v40)
  {
    id v73 = v104[0];
    uint64_t v47 = v98;
    goto LABEL_15;
  }
  swift_getObjCClassMetadata();
  id v43 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v44 = (char *)v41;
  uint64_t v45 = (void *)sub_24B682250();
  id v46 = objc_msgSend(v43, sel_initWithSequenceURL_replayMode_, v45, 0);

  uint64_t v47 = v98;
  if (!v46)
  {
LABEL_15:
    uint64_t v74 = sub_24B57CB70();
    uint64_t v75 = v96;
    (*(void (**)(char *, uint64_t, uint64_t))(v96 + 16))(v8, v74, v47);
    uint64_t v76 = sub_24B6824B0();
    os_log_type_t v77 = sub_24B682B20();
    if (os_log_type_enabled(v76, v77))
    {
      uint64_t v78 = (uint8_t *)swift_slowAlloc();
      uint64_t v79 = (void *)swift_slowAlloc();
      uint64_t v91 = v42;
      uint64_t v80 = v79;
      v104[0] = v79;
      *(_DWORD *)uint64_t v78 = 136380675;
      v103[0] = sub_24B5627B8(0xD000000000000023, 0x800000024B690F00, (uint64_t *)v104);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v76, v77, "ObjectCaptureSession.%{private}s: Failed to create replay sensor!", v78, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v80, -1, -1);
      MEMORY[0x24C5D6C00](v78, -1, -1);

      (*(void (**)(char *, uint64_t))(v75 + 8))(v8, v98);
      (*((void (**)(char *, uint64_t))v95 + 1))(v24, v91);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v75 + 8))(v8, v47);
      (*((void (**)(char *, uint64_t))v95 + 1))(v24, v42);
    }

    return 0;
  }
  uint64_t v94 = v44;
  uint64_t v91 = v42;
  objc_msgSend(v46, sel_setReplaySensorDelegate_, v38);
  sub_24B57CAF4(0, &qword_2697CCCB8);
  sub_24B562F04(&qword_2697CCCC0);
  uint64_t v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_24B684E60;
  uint64_t v49 = type metadata accessor for ObjectCaptureFrameEvent();
  *(void *)(v48 + 56) = sub_24B562F04(&qword_2697CCCC8);
  *(void *)(v48 + 32) = v49;
  uint64_t v50 = (void *)MEMORY[0x24C5D4D20](v48);
  v104[0] = 0;
  id result = (id)sub_24B682A90();
  if (v104[0])
  {

    uint64_t v52 = (void *)sub_24B682A80();
    swift_bridgeObjectRelease();
    objc_msgSend(v46, sel_setCustomDataClasses_, v52);

    id v53 = objc_allocWithZone(MEMORY[0x263EF8FE8]);
    id v97 = objc_msgSend(v53, sel_initWithBaseConfiguration_replaySensor_, v97, v46);
    long long v54 = (void *)(v38 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__skippedFramesTimeStamps);
    swift_beginAccess();
    *long long v54 = MEMORY[0x263F8EE88];
    swift_bridgeObjectRelease();
    v103[0] = sub_24B6822D0();
    v103[1] = v55;
    sub_24B6821D0();
    uint64_t v101 = 46;
    unint64_t v102 = 0xE100000000000000;
    sub_24B682890();
    swift_bridgeObjectRelease();
    v100[0] = 0xD000000000000012;
    v100[1] = 0x800000024B690F30;
    sub_24B57C484();
    sub_24B682D10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24B631D68();
    swift_bridgeObjectRelease();
    uint64_t v56 = sub_24B57CB70();
    os_log_type_t v57 = v24;
    uint64_t v58 = v96;
    uint64_t v59 = v92;
    (*(void (**)(char *, uint64_t, uint64_t))(v96 + 16))(v92, v56, v47);
    id v60 = sub_24B6824B0();
    os_log_type_t v61 = sub_24B682B30();
    if (os_log_type_enabled(v60, v61))
    {
      unint64_t v62 = (uint8_t *)swift_slowAlloc();
      uint64_t v63 = swift_slowAlloc();
      v103[0] = v63;
      *(_DWORD *)unint64_t v62 = 136380675;
      uint64_t v101 = sub_24B5627B8(0xD000000000000023, 0x800000024B690F00, v103);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v60, v61, "ObjectCaptureSession.%{private}s: Using ARReplayConfiguration.", v62, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v63, -1, -1);
      MEMORY[0x24C5D6C00](v62, -1, -1);
      swift_unknownObjectRelease();

      (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v98);
    }
    else
    {
      swift_unknownObjectRelease();

      (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v47);
    }
    (*((void (**)(char *, uint64_t))v95 + 1))(v57, v91);

    return v97;
  }
  __break(1u);
  return result;
}

void sub_24B631D68()
{
  uint64_t v0 = sub_24B6824D0();
  MEMORY[0x270FA5388](v0);
  uint64_t v1 = sub_24B682810();
  MEMORY[0x270FA5388](v1 - 8);
  id v2 = objc_msgSend(self, sel_defaultManager);
  uint64_t v3 = (void *)sub_24B6827A0();
  unsigned int v4 = objc_msgSend(v2, sel_fileExistsAtPath_, v3);

  if (v4)
  {
    sub_24B682800();
    uint64_t v15 = sub_24B682790();
    uint64_t v16 = v5;
    *(void *)&v17[0] = 10;
    v17[1] = -1.7573882e159;
    sub_24B57C484();
    uint64_t v6 = sub_24B682CF0();
    uint64_t v7 = swift_bridgeObjectRelease();
    uint64_t v8 = *(void *)(v6 + 16);
    if (v8)
    {
      uint64_t v9 = (uint64_t *)(v6 + 40);
      do
      {
        uint64_t v11 = *(v9 - 1);
        uint64_t v10 = *v9;
        v17[0] = 0.0;
        MEMORY[0x270FA5388](v7);
        *(&v14 - 2) = (uint64_t)v17;
        if ((v10 & 0x1000000000000000) == 0)
        {
          if ((v10 & 0x2000000000000000) != 0)
          {
            uint64_t v15 = v11;
            uint64_t v16 = v10 & 0xFFFFFFFFFFFFFFLL;
            switch((char)v11)
            {
              case 0:
              case 9:
              case 10:
              case 11:
              case 12:
              case 13:
              case 32:
LABEL_12:
                swift_bridgeObjectRetain();
                goto LABEL_13;
              default:
                swift_bridgeObjectRetain();
                uint64_t v12 = (unsigned char *)_swift_stdlib_strtod_clocale();
                if (v12) {
LABEL_17:
                }
                  LOBYTE(v18) = *v12 == 0;
                else {
LABEL_13:
                }
                  LOBYTE(v18) = 0;
                break;
            }
            goto LABEL_14;
          }
          if ((v11 & 0x1000000000000000) != 0)
          {
            switch(*(unsigned char *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x20))
            {
              case 0:
              case 9:
              case 0xA:
              case 0xB:
              case 0xC:
              case 0xD:
              case 0x20:
                goto LABEL_12;
              default:
                swift_bridgeObjectRetain();
                uint64_t v12 = (unsigned char *)_swift_stdlib_strtod_clocale();
                if (!v12) {
                  goto LABEL_13;
                }
                goto LABEL_17;
            }
          }
        }
        swift_bridgeObjectRetain();
        sub_24B682E30();
LABEL_14:
        uint64_t v7 = swift_bridgeObjectRelease();
        if (v18)
        {
          double v13 = v17[0];
          swift_beginAccess();
          sub_24B657BE0(v17, v13);
          uint64_t v7 = swift_endAccess();
        }
        v9 += 2;
        --v8;
      }
      while (v8);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_24B6323E0(int a1)
{
  id v2 = v1;
  LODWORD(v3) = a1;
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  uint64_t v9 = sub_24B6824B0();
  os_log_type_t v10 = sub_24B682B30();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v31 = v2;
    uint64_t v12 = v11;
    uint64_t v13 = swift_slowAlloc();
    int v30 = v3;
    uint64_t v3 = v13;
    aBlock[0] = v13;
    *(_DWORD *)uint64_t v12 = 136380931;
    uint64_t v33 = sub_24B5627B8(0xD000000000000025, 0x800000024B690ED0, aBlock);
    sub_24B682CD0();
    *(_WORD *)(v12 + 12) = 2081;
    uint64_t v33 = sub_24B5627B8(0xD000000000000025, 0x800000024B690ED0, aBlock);
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v9, v10, "ObjectCaptureSession.%{private}s: Called %{private}s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    uint64_t v14 = v3;
    LOBYTE(v3) = v30;
    MEMORY[0x24C5D6C00](v14, -1, -1);
    uint64_t v15 = v12;
    id v2 = v31;
    MEMORY[0x24C5D6C00](v15, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_24B680C90();
  OCSignPostsAriadneDbgCode();
  kdebug_trace();
  uint64_t v16 = *(void **)&v2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession];
  id v17 = objc_msgSend(v16, sel_configuration);
  if (v17)
  {
    uint64_t v18 = v17;
    self;
    uint64_t v19 = swift_dynamicCastObjCClass();

    if (v19) {
      goto LABEL_7;
    }
  }
  id v20 = objc_msgSend(v16, sel_configuration);
  if (v20 && (uint64_t v21 = v20, self, v22 = swift_dynamicCastObjCClass(), v21, v22))
  {
LABEL_7:
    ObjectCaptureSession.takeStillImageDuringRecordOrReplay(isAutoCapture:)(v3 & 1);
  }
  else
  {
    uint64_t v23 = swift_allocObject();
    *(unsigned char *)(v23 + 16) = v3 & 1;
    *(void *)(v23 + 24) = v2;
    uint64_t v24 = v2;
    id v25 = (id)OCNonModularSPI_CapturePhotoSettings();
    uint64_t v26 = &v24[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maxPhotoDimensions];
    swift_beginAccess();
    if ((v26[8] & 1) == 0)
    {
      uint64_t v27 = *(void *)v26;
      if (v25) {
        objc_msgSend(v25, sel_setHighResolutionPhotoEnabled_, 0);
      }
      objc_msgSend(v25, sel_setMaxPhotoDimensions_, v27);
    }
    aBlock[4] = (uint64_t)sub_24B66DD68;
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_24B564734;
    aBlock[3] = (uint64_t)&unk_26FE905F8;
    uint64_t v28 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v16, sel_captureHighResolutionFrameWithPhotoSettings_completion_, v25, v28);
    _Block_release(v28);
    swift_release();
  }
}

Swift::Void __swiftcall ObjectCaptureSession.takeStillImageDuringRecordOrReplay(isAutoCapture:)(Swift::Bool isAutoCapture)
{
  uint64_t v3 = sub_24B6824D0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession), sel_currentFrame));
  if (v7)
  {
    id v15 = v7;
    sub_24B632EE4(v7, isAutoCapture);
    uint64_t v8 = v15;
  }
  else
  {
    uint64_t v9 = sub_24B57CC30();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v9, v3);
    os_log_type_t v10 = sub_24B6824B0();
    os_log_type_t v11 = sub_24B682B20();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v17 = v13;
      *(_DWORD *)uint64_t v12 = 136380675;
      uint64_t v16 = sub_24B5627B8(0xD000000000000032, 0x800000024B68F360, &v17);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v10, v11, "ObjectCaptureSession.%{private}s: arsession current frame is nil!", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v13, -1, -1);
      MEMORY[0x24C5D6C00](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

void sub_24B632A74(void *a1, void *a2, char a3)
{
  uint64_t v6 = sub_24B6824D0();
  id v7 = *(void **)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  os_log_type_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v35 - v11;
  if (a1)
  {
    id v38 = a1;
    sub_24B632EE4(v38, a3 & 1);
    uint64_t v13 = v38;
  }
  else
  {
    uint64_t v14 = sub_24B57CB70();
    id v15 = (void (*)(char *, uint64_t, uint64_t))v7[2];
    v15(v12, v14, v6);
    uint64_t v16 = sub_24B6824B0();
    os_log_type_t v17 = sub_24B682B20();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v36 = v14;
      uint64_t v18 = swift_slowAlloc();
      id v38 = v7;
      uint64_t v19 = (uint8_t *)v18;
      uint64_t v20 = swift_slowAlloc();
      id v37 = v10;
      uint64_t v21 = v20;
      uint64_t v40 = v20;
      uint64_t v35 = v15;
      *(_DWORD *)uint64_t v19 = 136380675;
      uint64_t v39 = sub_24B5627B8(0xD000000000000025, 0x800000024B690ED0, &v40);
      id v15 = v35;
      uint64_t v14 = v36;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v16, v17, "ObjectCaptureSession.%{private}s: Failed to capture high resolution frame!", v19, 0xCu);
      swift_arrayDestroy();
      uint64_t v22 = v21;
      os_log_type_t v10 = v37;
      MEMORY[0x24C5D6C00](v22, -1, -1);
      uint64_t v23 = v19;
      id v7 = v38;
      MEMORY[0x24C5D6C00](v23, -1, -1);
    }

    uint64_t v24 = (void (*)(char *, uint64_t))v7[1];
    v24(v12, v6);
    if (a2)
    {
      v15(v10, v14, v6);
      id v25 = a2;
      id v26 = a2;
      id v27 = a2;
      uint64_t v28 = sub_24B6824B0();
      os_log_type_t v29 = sub_24B682B20();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = swift_slowAlloc();
        uint64_t v31 = swift_slowAlloc();
        uint64_t v40 = v31;
        *(_DWORD *)uint64_t v30 = 136380931;
        uint64_t v39 = sub_24B5627B8(0xD000000000000025, 0x800000024B690ED0, &v40);
        id v38 = v7;
        sub_24B682CD0();
        *(_WORD *)(v30 + 12) = 2082;
        id v37 = v10;
        swift_getErrorValue();
        uint64_t v32 = sub_24B683020();
        uint64_t v39 = sub_24B5627B8(v32, v33, &v40);
        sub_24B682CD0();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_24B55E000, v28, v29, "ObjectCaptureSession.%{private}s: Error: %{public}s", (uint8_t *)v30, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v31, -1, -1);
        MEMORY[0x24C5D6C00](v30, -1, -1);

        uint64_t v34 = v37;
      }
      else
      {

        uint64_t v34 = v10;
      }
      v24(v34, v6);
    }
  }
}

uint64_t sub_24B632EE4(void *a1, int a2)
{
  id v258 = a1;
  uint64_t v243 = sub_24B682410();
  uint64_t v242 = *(void *)(v243 - 8);
  MEMORY[0x270FA5388](v243);
  v241 = (char *)&v224 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OCCaptureData(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v239 = (uint64_t)&v224 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v245 = type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  uint64_t v6 = MEMORY[0x270FA5388](v245);
  uint64_t v238 = (uint64_t)&v224 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  v248 = (char *)&v224 - v8;
  v253.i64[0] = sub_24B682C80();
  v251.i64[0] = *(void *)(v253.i64[0] - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v253.i64[0]);
  v246 = (char *)&v224 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  v249 = (char *)&v224 - v11;
  uint64_t v12 = sub_24B682C90();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v224 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_24B6824D0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  v235 = (char *)&v224 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  v244 = (char *)&v224 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  v247 = (char *)&v224 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  v234 = (char *)&v224 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  v236 = (char *)&v224 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  *(void *)&long long v233 = (char *)&v224 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  v237 = (char *)&v224 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  v254.i64[0] = (uint64_t)&v224 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v35 = (char *)&v224 - v34;
  uint64_t v36 = MEMORY[0x270FA5388](v33);
  id v38 = (char *)&v224 - v37;
  uint64_t v39 = MEMORY[0x270FA5388](v36);
  id v41 = (char *)&v224 - v40;
  MEMORY[0x270FA5388](v39);
  id v43 = (char *)&v224 - v42;
  uint64_t v44 = sub_24B57CB70();
  uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  uint64_t v255 = v15;
  uint64_t v256 = v16;
  int v240 = a2;
  uint64_t v257 = v16 + 16;
  v250 = v14;
  if (a2)
  {
    id v46 = v45;
    v45(v43, v44, v15);
    uint64_t v47 = sub_24B6824B0();
    os_log_type_t v48 = sub_24B682B30();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = (uint8_t *)swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      v260 = (void (*)(char *, uint64_t))v50;
      *(_DWORD *)uint64_t v49 = 136380675;
      *(void *)&v271[0] = sub_24B5627B8(0xD000000000000030, 0x800000024B691560, (uint64_t *)&v260);
      uint64_t v16 = v256;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v47, v48, "ObjectCaptureSession.%{private}s: Received callback for high-res image capture request initiated by automatic capture.", v49, 0xCu);
      swift_arrayDestroy();
      uint64_t v51 = v50;
      uint64_t v15 = v255;
      MEMORY[0x24C5D6C00](v51, -1, -1);
      MEMORY[0x24C5D6C00](v49, -1, -1);
    }

    uint64_t v52 = *(void (**)(char *, uint64_t))(v16 + 8);
    v52(v43, v15);
  }
  else
  {
    id v46 = v45;
    v45(v41, v44, v15);
    id v53 = sub_24B6824B0();
    os_log_type_t v54 = sub_24B682B30();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = (uint8_t *)swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      v260 = (void (*)(char *, uint64_t))v56;
      *(_DWORD *)uint64_t v55 = 136380675;
      *(void *)&v271[0] = sub_24B5627B8(0xD000000000000030, 0x800000024B691560, (uint64_t *)&v260);
      uint64_t v16 = v256;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v53, v54, "ObjectCaptureSession.%{private}s: self.takeStillImageCapturecapture request initiated by manual capture.", v55, 0xCu);
      swift_arrayDestroy();
      uint64_t v57 = v56;
      uint64_t v15 = v255;
      MEMORY[0x24C5D6C00](v57, -1, -1);
      MEMORY[0x24C5D6C00](v55, -1, -1);
    }

    uint64_t v52 = *(void (**)(char *, uint64_t))(v16 + 8);
    v52(v41, v15);
  }
  id v58 = v258;
  id v59 = objc_msgSend(v258, sel_sceneDepth);
  if (v59
    && (v60 = v59, id v61 = objc_msgSend(v59, sel_depthMap), v60, v61))
  {
  }
  else
  {
    uint64_t v62 = sub_24B57CB70();
    v46(v38, v62, v15);
    uint64_t v63 = sub_24B6824B0();
    os_log_type_t v64 = sub_24B682B20();
    if (os_log_type_enabled(v63, v64))
    {
      uint64_t v65 = (uint8_t *)swift_slowAlloc();
      uint64_t v66 = swift_slowAlloc();
      v260 = (void (*)(char *, uint64_t))v66;
      *(_DWORD *)uint64_t v65 = 136380675;
      *(void *)&v271[0] = sub_24B5627B8(0xD000000000000030, 0x800000024B691560, (uint64_t *)&v260);
      id v58 = v258;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v63, v64, "ObjectCaptureSession.%{private}s: No depth map is available in high-resolution ARFrame!", v65, 0xCu);
      swift_arrayDestroy();
      uint64_t v67 = v66;
      uint64_t v15 = v255;
      MEMORY[0x24C5D6C00](v67, -1, -1);
      MEMORY[0x24C5D6C00](v65, -1, -1);
    }

    v52(v38, v15);
  }
  id v68 = objc_msgSend(v58, sel_sceneDepth);
  os_log_type_t v69 = (void (*)(uint64_t, uint64_t, uint64_t))v46;
  if (v68
    && (int v70 = v68, v71 = objc_msgSend(v68, sel_confidenceMap),
                   v70,
                   v71))
  {

    uint64_t v72 = v251.i64[0];
  }
  else
  {
    uint64_t v73 = sub_24B57CB70();
    v46(v35, v73, v15);
    uint64_t v74 = sub_24B6824B0();
    os_log_type_t v75 = sub_24B682B20();
    BOOL v76 = os_log_type_enabled(v74, v75);
    uint64_t v72 = v251.i64[0];
    if (v76)
    {
      os_log_type_t v77 = (uint8_t *)swift_slowAlloc();
      uint64_t v78 = swift_slowAlloc();
      v260 = (void (*)(char *, uint64_t))v78;
      *(_DWORD *)os_log_type_t v77 = 136380675;
      *(void *)&v271[0] = sub_24B5627B8(0xD000000000000030, 0x800000024B691560, (uint64_t *)&v260);
      id v58 = v258;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v74, v75, "ObjectCaptureSession.%{private}s: No confidence map is available in high-resolution ARFrame!", v77, 0xCu);
      swift_arrayDestroy();
      uint64_t v79 = v78;
      uint64_t v15 = v255;
      MEMORY[0x24C5D6C00](v79, -1, -1);
      MEMORY[0x24C5D6C00](v77, -1, -1);
    }

    v52(v35, v15);
  }
  uint64_t v80 = (SEL *)&unk_2652DE000;
  id v81 = objc_msgSend(v58, sel_capturedPointCloudData);
  if (v81
    && (os_log_type_t v82 = v81,
        id v83 = objc_msgSend(v81, sel_depthPointCloud),
        v82,
        v83))
  {
  }
  else
  {
    uint64_t v84 = sub_24B57CB70();
    v69(v254.i64[0], v84, v15);
    uint64_t v85 = sub_24B6824B0();
    os_log_type_t v86 = sub_24B682B20();
    if (os_log_type_enabled(v85, v86))
    {
      os_log_type_t v87 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v87 = 0;
      _os_log_impl(&dword_24B55E000, v85, v86, "No point cloud data is available in high-resolution ARFrame!", v87, 2u);
      unint64_t v88 = v87;
      uint64_t v15 = v255;
      MEMORY[0x24C5D6C00](v88, -1, -1);
    }

    v52((char *)v254.i64[0], v15);
  }
  id v89 = objc_msgSend(v58, sel_camera);
  uint64_t v90 = v250;
  sub_24B682CA0();

  uint64_t v91 = v253.i64[0];
  int v92 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v72 + 48))(v90, 2, v253.i64[0]);
  if (!v92)
  {
    uint64_t v101 = v249;
    (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v249, v90, v91);
    unint64_t v102 = v246;
    (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v246, v101, v91);
    int v103 = (*(uint64_t (**)(char *, uint64_t))(v72 + 88))(v102, v91);
    if (v103 == *MEMORY[0x263F8C948])
    {
      uint64_t v104 = sub_24B57CB70();
      os_log_type_t v105 = v237;
      v69((uint64_t)v237, v104, v15);
      uint64_t v106 = sub_24B6824B0();
      os_log_type_t v107 = sub_24B682B20();
      if (os_log_type_enabled(v106, v107))
      {
        uint64_t v108 = (uint8_t *)swift_slowAlloc();
        uint64_t v109 = v15;
        uint64_t v110 = swift_slowAlloc();
        v260 = (void (*)(char *, uint64_t))v110;
        id v111 = v105;
        *(_DWORD *)uint64_t v108 = 136380675;
        *(void *)&v271[0] = sub_24B5627B8(0xD000000000000030, 0x800000024B691560, (uint64_t *)&v260);
        sub_24B682CD0();
        id v112 = "ObjectCaptureSession.%{private}s: Camera tracking is limited: initializing!";
LABEL_73:
        _os_log_impl(&dword_24B55E000, v106, v107, v112, v108, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v110, -1, -1);
        MEMORY[0x24C5D6C00](v108, -1, -1);

        v52(v111, v109);
        return (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v249, v253.i64[0]);
      }
    }
    else if (v103 == *MEMORY[0x263F8C958])
    {
      uint64_t v123 = sub_24B57CB70();
      os_log_type_t v105 = v236;
      v69((uint64_t)v236, v123, v15);
      uint64_t v106 = sub_24B6824B0();
      os_log_type_t v107 = sub_24B682B20();
      if (os_log_type_enabled(v106, v107))
      {
        uint64_t v108 = (uint8_t *)swift_slowAlloc();
        uint64_t v109 = v15;
        uint64_t v110 = swift_slowAlloc();
        v260 = (void (*)(char *, uint64_t))v110;
        id v111 = v105;
        *(_DWORD *)uint64_t v108 = 136380675;
        *(void *)&v271[0] = sub_24B5627B8(0xD000000000000030, 0x800000024B691560, (uint64_t *)&v260);
        sub_24B682CD0();
        id v112 = "ObjectCaptureSession.%{private}s: Camera tracking is limited: excessive motion!";
        goto LABEL_73;
      }
    }
    else if (v103 == *MEMORY[0x263F8C960])
    {
      uint64_t v216 = sub_24B57CB70();
      os_log_type_t v105 = v234;
      v69((uint64_t)v234, v216, v15);
      uint64_t v106 = sub_24B6824B0();
      os_log_type_t v107 = sub_24B682B20();
      if (os_log_type_enabled(v106, v107))
      {
        uint64_t v108 = (uint8_t *)swift_slowAlloc();
        uint64_t v109 = v15;
        uint64_t v110 = swift_slowAlloc();
        v260 = (void (*)(char *, uint64_t))v110;
        id v111 = v105;
        *(_DWORD *)uint64_t v108 = 136380675;
        *(void *)&v271[0] = sub_24B5627B8(0xD000000000000030, 0x800000024B691560, (uint64_t *)&v260);
        sub_24B682CD0();
        id v112 = "ObjectCaptureSession.%{private}s: Camera tracking is limited: insufficient features!";
        goto LABEL_73;
      }
    }
    else
    {
      if (v103 != *MEMORY[0x263F8C950]) {
        goto LABEL_77;
      }
      uint64_t v223 = sub_24B57CB70();
      os_log_type_t v105 = (char *)v233;
      v69(v233, v223, v15);
      uint64_t v106 = sub_24B6824B0();
      os_log_type_t v107 = sub_24B682B20();
      if (os_log_type_enabled(v106, v107))
      {
        uint64_t v108 = (uint8_t *)swift_slowAlloc();
        uint64_t v109 = v15;
        uint64_t v110 = swift_slowAlloc();
        v260 = (void (*)(char *, uint64_t))v110;
        id v111 = v105;
        *(_DWORD *)uint64_t v108 = 136380675;
        *(void *)&v271[0] = sub_24B5627B8(0xD000000000000030, 0x800000024B691560, (uint64_t *)&v260);
        sub_24B682CD0();
        id v112 = "ObjectCaptureSession.%{private}s: Camera tracking is limited: relocalizing!";
        goto LABEL_73;
      }
    }

    v52(v105, v15);
    return (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v249, v91);
  }
  if (v92 != 1)
  {
    objc_msgSend(v58, sel_timestamp);
    if (*(unsigned char *)(v252 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_referenceTimestamp + 8))
    {
      __break(1u);
    }
    else
    {
      double v114 = v113 - *(double *)(v252 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_referenceTimestamp);
      uint64_t v115 = sub_24B57CB70();
      uint64_t v116 = v244;
      v69((uint64_t)v244, v115, v15);
      uint64_t v117 = sub_24B6824B0();
      os_log_type_t v118 = sub_24B682B30();
      BOOL v119 = os_log_type_enabled(v117, v118);
      uint64_t v225 = (void (*)(char *, uint64_t, uint64_t))v69;
      if (v119)
      {
        uint64_t v120 = swift_slowAlloc();
        uint64_t v121 = swift_slowAlloc();
        v260 = (void (*)(char *, uint64_t))v121;
        *(_DWORD *)uint64_t v120 = 136380931;
        *(void *)&v271[0] = sub_24B5627B8(0xD000000000000030, 0x800000024B691560, (uint64_t *)&v260);
        sub_24B682CD0();
        *(_WORD *)(v120 + 12) = 2050;
        *(double *)v271 = v114;
        id v58 = v258;
        sub_24B682CD0();
        _os_log_impl(&dword_24B55E000, v117, v118, "ObjectCaptureSession.%{private}s: High-resolution pixel buffer %{public}f is retained.", (uint8_t *)v120, 0x16u);
        swift_arrayDestroy();
        uint64_t v122 = v121;
        uint64_t v80 = (SEL *)&unk_2652DE000;
        MEMORY[0x24C5D6C00](v122, -1, -1);
        MEMORY[0x24C5D6C00](v120, -1, -1);
      }

      v52(v116, v15);
      double v124 = (__CVBuffer *)objc_msgSend(v58, sel_capturedImage);
      id v125 = objc_msgSend(v58, sel_camera);
      objc_msgSend(v125, sel_intrinsics);
      v271[0] = v126;
      v271[1] = v127;
      v271[2] = v128;

      sub_24B6108E4(v124, (uint64_t)v271);
      id v129 = [v58 v80[303]];
      if (v129
        && (id v130 = v129,
            id v131 = objc_msgSend(v129, sel_depthPointCloud),
            v130,
            v131))
      {
        char v132 = sub_24B5AACAC();
        sub_24B5FAB10(v131, v132 & 1, (uint64_t)&v260);

        uint64_t v52 = v260;
        v250 = v261;
        v249 = v262;
        v247 = v263;
        v246 = v264;
        v244 = v265;
        v237 = v266;
        v236 = v267;
        v234 = v268;
      }
      else
      {
        uint64_t v52 = 0;
        v250 = 0;
        v249 = 0;
        v247 = 0;
        v246 = 0;
        v244 = 0;
        v237 = 0;
        v236 = 0;
        v234 = 0;
      }
      id v133 = objc_msgSend(v58, sel_camera);
      objc_msgSend(v133, sel_intrinsics);
      float32x4_t v254 = v134;
      float32x4_t v253 = v135;
      float32x4_t v251 = v136;

      id v137 = *(void **)(v252 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession);
      id v138 = objc_msgSend(v137, sel_configuration);
      if (v138)
      {
        int v139 = v138;
        self;
        uint64_t v140 = swift_dynamicCastObjCClass();

        if (v140) {
          goto LABEL_48;
        }
      }
      id v141 = objc_msgSend(v137, sel_configuration);
      if (v141)
      {
        uint64_t v142 = v141;
        self;
        uint64_t v143 = swift_dynamicCastObjCClass();

        if (v143)
        {
LABEL_48:
          id v144 = objc_msgSend(v258, sel_camera);
          objc_msgSend(v144, sel_intrinsics);
          float32x4_t v254 = v145;
          float32x4_t v253 = v146;
          float32x4_t v251 = v147;

          unsigned int v148 = *(_DWORD *)sub_24B5F6688();
          id v149 = (unsigned int *)sub_24B5F6694();
          LODWORD(v150) = 0;
          *(float *)&unsigned int v151 = (float)v148 / 1920.0;
          *((float *)&v150 + 1) = (float)*v149 / 1440.0;
          float32x4_t v254 = vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v151, v254.f32[0]), (float32x4_t)v150, *(float32x2_t *)v254.f32, 1), (float32x4_t)xmmword_24B687430, v254, 2);
          float32x4_t v253 = vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v151, v253.f32[0]), (float32x4_t)v150, *(float32x2_t *)v253.f32, 1), (float32x4_t)xmmword_24B687430, v253, 2);
          float32x4_t v251 = vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v151, v251.f32[0]), (float32x4_t)v150, *(float32x2_t *)v251.f32, 1), (float32x4_t)xmmword_24B687430, v251, 2);
        }
      }
      id v152 = v258;
      id v153 = objc_msgSend(v258, sel_camera);
      objc_msgSend(v153, sel_transform);
      long long v233 = v154;
      long long v232 = v155;
      long long v231 = v156;
      long long v230 = v157;

      id v158 = objc_msgSend(v152, sel_camera);
      v159 = (int *)v245;
      uint64_t v160 = (uint64_t)v248;
      sub_24B682CA0();

      wideToDepthCameraTransform()(v161);
      int8x16_t v226 = v162;
      int8x16_t v227 = v163;
      int8x16_t v228 = v164;
      int8x16_t v229 = v165;
      id v166 = [v152 (SEL)0x2652DEF18];
      id v167 = objc_msgSend(v166, sel_calibrationData);

      float32x4_t v168 = v253;
      *(float32x4_t *)uint64_t v160 = v254;
      *(float32x4_t *)(v160 + 16) = v168;
      long long v169 = v233;
      *(float32x4_t *)(v160 + 32) = v251;
      *(_OWORD *)(v160 + 48) = v169;
      long long v170 = v231;
      *(_OWORD *)(v160 + 64) = v232;
      *(_OWORD *)(v160 + 80) = v170;
      *(_OWORD *)(v160 + 96) = v230;
      uint64_t v171 = v160 + v159[7];
      int8x16_t v172 = v226;
      *(void *)uint64_t v171 = v226.i64[0];
      int8x16_t v173 = v227;
      *(int8x16_t *)(v171 + 8) = vextq_s8(v172, v227, 8uLL);
      int8x16_t v174 = v228;
      *(int8x16_t *)(v171 + 24) = vextq_s8(v173, v228, 8uLL);
      v173.i64[1] = v229.i64[1];
      *(int8x16_t *)(v171 + 40) = vextq_s8(v174, v229, 8uLL);
      *(void *)(v171 + 56) = v173.i64[1];
      *(unsigned char *)(v171 + 64) = 0;
      *(void *)(v160 + v159[8]) = v167;
      uint64_t v175 = v160 + v159[9];
      *(_OWORD *)(v175 + 32) = 0u;
      *(_OWORD *)(v175 + 48) = 0u;
      *(_OWORD *)uint64_t v175 = 0u;
      *(_OWORD *)(v175 + 16) = 0u;
      *(unsigned char *)(v175 + 64) = 1;
      id v176 = objc_msgSend(v152, sel_capturedImage);
      id v177 = objc_msgSend(v137, sel_configuration);
      if (!v177 || (uint64_t v178 = v177, self, v179 = swift_dynamicCastObjCClass(), v178, !v179))
      {
        id v180 = objc_msgSend(v137, sel_configuration);
        if (!v180 || (float32x4_t v181 = v180, self, v182 = swift_dynamicCastObjCClass(), v181, !v182))
        {
          id v184 = v258;
          goto LABEL_57;
        }
      }
      uint64_t v183 = v115;
      id v184 = v258;
      float32x4_t v185 = (__CVBuffer *)objc_msgSend(v258, sel_capturedImage);
      uint64_t PixelFormatType = CVPixelBufferGetPixelFormatType(v185);

      uint64_t v187 = *(void *)(v252 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_imageScaler);
      if (v187)
      {
        swift_retain();
        id v188 = objc_msgSend(v184, sel_capturedImage);
        memset(v269, 0, sizeof(v269));
        char v270 = 1;
        uint64_t v189 = *(unsigned int *)sub_24B5F6688();
        v190 = (unsigned int *)sub_24B5F6694();
        uint64_t v191 = (*(uint64_t (**)(id, _OWORD *, uint64_t, void, uint64_t))(*(void *)v187 + 184))(v188, v269, v189, *v190, PixelFormatType);
        swift_release();

        if (!v191)
        {
          sub_24B5AE238((uint64_t)v52);
          double v217 = v235;
          uint64_t v218 = v255;
          v225(v235, v183, v255);
          char v219 = sub_24B6824B0();
          os_log_type_t v220 = sub_24B682B20();
          if (os_log_type_enabled(v219, v220))
          {
            char v221 = (uint8_t *)swift_slowAlloc();
            uint64_t v222 = swift_slowAlloc();
            v260 = (void (*)(char *, uint64_t))v222;
            *(_DWORD *)char v221 = 136380675;
            uint64_t v259 = sub_24B5627B8(0xD000000000000030, 0x800000024B691560, (uint64_t *)&v260);
            sub_24B682CD0();
            _os_log_impl(&dword_24B55E000, v219, v220, "ObjectCaptureSession.%{private}s: failed to crop and scale image!", v221, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x24C5D6C00](v222, -1, -1);
            MEMORY[0x24C5D6C00](v221, -1, -1);
          }

          (*(void (**)(char *, uint64_t))(v256 + 8))(v217, v218);
          uint64_t v215 = (uint64_t)v248;
          return sub_24B65EF80(v215, type metadata accessor for ObjectCaptureSession.Frame.Camera);
        }

        id v176 = (id)v191;
LABEL_57:
        CFStringRef v192 = (const __CFString *)*MEMORY[0x263F0F248];
        id v193 = objc_msgSend(v184, sel_exifData);
        sub_24B682740();

        uint64_t v194 = (void *)sub_24B682710();
        id v195 = v258;
        swift_bridgeObjectRelease();
        CVBufferSetAttachment((CVBufferRef)v176, v192, v194, kCVAttachmentMode_ShouldPropagate);

        id v196 = objc_msgSend(v195, sel_tiffData);
        if (v196)
        {
          uint64_t v197 = v196;
          sub_24B682740();

          CFStringRef v198 = (const __CFString *)*MEMORY[0x263F0F518];
          uint64_t v199 = (void *)sub_24B682710();
          swift_bridgeObjectRelease();
          CVBufferSetAttachment((CVBufferRef)v176, v198, v199, kCVAttachmentMode_ShouldPropagate);
        }
        sub_24B65F2FC((uint64_t)objc_msgSend(v195, sel_deviceOrientation));
        CFStringRef v200 = (const __CFString *)*MEMORY[0x263F0F4C8];
        uint64_t v201 = (void *)sub_24B6830E0();
        CVBufferSetAttachment((CVBufferRef)v176, v200, v201, kCVAttachmentMode_ShouldPropagate);

        id v202 = objc_msgSend(v195, sel_sceneDepth);
        if (v202)
        {
          int v203 = v202;
          id v204 = objc_msgSend(v202, sel_depthMap);
        }
        else
        {
          id v204 = 0;
        }
        uint64_t v205 = v243;
        id v206 = objc_msgSend(v195, sel_sceneDepth);
        id v207 = objc_msgSend(v206, sel_confidenceMap);

        v260 = v52;
        v261 = v250;
        v262 = v249;
        v263 = v247;
        v264 = v246;
        v265 = v244;
        v266 = v237;
        v267 = v236;
        v268 = v234;
        id v208 = objc_msgSend(v195, sel_capturedPointCloudData);
        id v209 = objc_msgSend(v208, sel_depthPointCloud);

        uint64_t v210 = v238;
        sub_24B659A1C(v160, v238, type metadata accessor for ObjectCaptureSession.Frame.Camera);
        id v211 = objc_msgSend(v195, sel_rawFeaturePoints);
        id v212 = v176;
        uint64_t v213 = v239;
        sub_24B6735A4((uint64_t)v212, (uint64_t)v204, (uint64_t)v207, (uint64_t)&v260, (uint64_t)v209, v210, (uint64_t)v211, v240 & 1, v239, v114);
        uint64_t v214 = (uint64_t)v241;
        sub_24B682400();
        sub_24B61EF74(v213, v214);

        (*(void (**)(uint64_t, uint64_t))(v242 + 8))(v214, v205);
        sub_24B65EF80(v213, type metadata accessor for OCCaptureData);
        uint64_t v215 = v160;
        return sub_24B65EF80(v215, type metadata accessor for ObjectCaptureSession.Frame.Camera);
      }
    }
    sub_24B5AE238((uint64_t)v52);
    __break(1u);
LABEL_77:
    uint64_t result = sub_24B682EF0();
    __break(1u);
    return result;
  }
  uint64_t v93 = sub_24B57CB70();
  uint64_t v94 = v247;
  v69((uint64_t)v247, v93, v15);
  uint64_t v95 = sub_24B6824B0();
  os_log_type_t v96 = sub_24B682B20();
  if (os_log_type_enabled(v95, v96))
  {
    id v97 = (uint8_t *)swift_slowAlloc();
    uint64_t v98 = v15;
    uint64_t v99 = swift_slowAlloc();
    v260 = (void (*)(char *, uint64_t))v99;
    *(_DWORD *)id v97 = 136380675;
    *(void *)&v271[0] = sub_24B5627B8(0xD000000000000030, 0x800000024B691560, (uint64_t *)&v260);
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v95, v96, "ObjectCaptureSession.%{private}s: Camera tracking is not available!", v97, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v99, -1, -1);
    MEMORY[0x24C5D6C00](v97, -1, -1);

    return ((uint64_t (*)(char *, uint64_t))v52)(v94, v98);
  }
  else
  {

    return ((uint64_t (*)(char *, uint64_t))v52)(v94, v15);
  }
}

uint64_t sub_24B634F88()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v46 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v46 - v10;
  if (*((unsigned char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isClosed))
  {
    uint64_t v12 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v12, v2);
    uint64_t v13 = sub_24B6824B0();
    os_log_type_t v14 = sub_24B682B20();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v51 = v16;
      *(_DWORD *)uint64_t v15 = 136380675;
      uint64_t v50 = sub_24B5627B8(0x2870556E61656C63, 0xE900000000000029, &v51);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v13, v14, "ObjectCaptureSession.%{private}s: Resources have already been cleaned up!", v15, 0xCu);
      uint64_t v17 = 1;
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v16, -1, -1);
      MEMORY[0x24C5D6C00](v15, -1, -1);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      return v17;
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    return 1;
  }
  *((unsigned char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isClosed) = 1;
  uint64_t v18 = sub_24B57CB70();
  os_log_type_t v48 = *(void (**)(char *))(v3 + 16);
  uint64_t v49 = (char *)v18;
  v48(v11);
  uint64_t v19 = sub_24B6824B0();
  os_log_type_t v20 = sub_24B682B30();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v46 = v3 + 16;
    uint64_t v22 = (uint8_t *)v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v51 = v23;
    uint64_t v47 = v2;
    *(_DWORD *)uint64_t v22 = 136380675;
    uint64_t v50 = sub_24B5627B8(0x2870556E61656C63, 0xE900000000000029, &v51);
    uint64_t v2 = v47;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v19, v20, "ObjectCaptureSession.%{private}s: Starting resource clean up.", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v23, -1, -1);
    MEMORY[0x24C5D6C00](v22, -1, -1);
  }

  uint64_t v24 = *(void (**)(char *, uint64_t))(v3 + 8);
  v24(v11, v2);
  uint64_t result = (uint64_t)objc_msgSend(*(id *)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession), sel_pause);
  uint64_t v26 = *(void *)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_imageScaler);
  if (v26)
  {
    uint64_t v27 = *(void (**)(uint64_t))(*(void *)v26 + 168);
    uint64_t v28 = swift_retain();
    v27(v28);
    uint64_t v29 = swift_release();
    uint64_t v30 = *(void *)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_explicitFeedbackManager);
    if (v30)
    {
      uint64_t v31 = *(void (**)(uint64_t))(*(void *)v30 + 120);
      uint64_t v32 = swift_retain();
      v31(v32);
      uint64_t v29 = swift_release();
    }
    if (((*(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v1) + 0x4B8))(v29) & 1) == 0)
    {
      uint64_t v33 = *(void *)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maskingManager);
      if (v33)
      {
        uint64_t v34 = *(void (**)(uint64_t))(*(void *)v33 + 280);
        uint64_t v35 = swift_retain();
        v34(v35);
        swift_release();
      }
      sub_24B62B340();
    }
    uint64_t v36 = *(void *)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_internalMotionManager);
    if (v36)
    {
      uint64_t v37 = *(void (**)(uint64_t))(*(void *)v36 + 160);
      uint64_t v38 = swift_retain();
      v37(v38);
      swift_release();
    }
    sub_24B63EFAC();
    *(void *)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureManager) = 0;
    swift_release();
    *(void *)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_temporalDepthPointCloudCircularBuffer) = 0;
    swift_release();
    uint64_t v39 = *(void *)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pgManager);
    if (v39)
    {
      uint64_t v40 = *(void (**)(uint64_t))(*(void *)v39 + 608);
      uint64_t v41 = swift_retain();
      v40(v41);
      swift_release();
      return 0;
    }
    ((void (*)(char *, char *, uint64_t))v48)(v9, v49, v2);
    uint64_t v42 = sub_24B6824B0();
    os_log_type_t v43 = sub_24B682B30();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v49 = v9;
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      uint64_t v51 = v45;
      *(_DWORD *)uint64_t v44 = 136380675;
      uint64_t v50 = sub_24B5627B8(0x2870556E61656C63, 0xE900000000000029, &v51);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v42, v43, "ObjectCaptureSession.%{private}s: Finished resource clean up.", v44, 0xCu);
      uint64_t v17 = 1;
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v45, -1, -1);
      MEMORY[0x24C5D6C00](v44, -1, -1);

      v24(v49, v2);
      return v17;
    }

    v24(v9, v2);
    return 1;
  }
  __break(1u);
  return result;
}

void sub_24B6356BC(void **a1)
{
  uint64_t v2 = v1;
  *(void *)&long long v253 = type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
  MEMORY[0x270FA5388](v253);
  uint64_t v5 = (char *)&v226 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  uint64_t v273 = *(void *)(v6 - 8);
  uint64_t v274 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v233 = (uint64_t)&v226 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  v235 = (uint64_t *)((char *)&v226 - v9);
  uint64_t v10 = sub_24B562F04(&qword_2697CCC90);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v252 = (char *)&v226 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v242 = (uint64_t)&v226 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  v249 = (char *)&v226 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  v247 = (void (**)(uint64_t, uint64_t))((char *)&v226 - v18);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v246 = (uint64_t)&v226 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v259 = (uint64_t)&v226 - v22;
  MEMORY[0x270FA5388](v21);
  v248 = (char *)&v226 - v23;
  uint64_t v272 = sub_24B682410();
  uint64_t v269 = *(void *)(v272 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v272);
  v241 = (char *)&v226 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  v260 = (uint64_t *)((char *)&v226 - v27);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  int64_t v251 = (int64_t)&v226 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  v250 = (char *)&v226 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  *(void *)&long long v254 = (char *)&v226 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  v265 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v226 - v35);
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  v262 = (char *)&v226 - v37;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  v261 = (char *)&v226 - v39;
  MEMORY[0x270FA5388](v38);
  v264 = (char *)&v226 - v40;
  uint64_t v41 = sub_24B562F04(&qword_2697CCC98);
  uint64_t v42 = MEMORY[0x270FA5388](v41 - 8);
  *(void *)&long long v256 = (char *)&v226 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  *(void *)&long long v255 = (char *)&v226 - v45;
  uint64_t v46 = MEMORY[0x270FA5388](v44);
  os_log_type_t v48 = (char *)&v226 - v47;
  MEMORY[0x270FA5388](v46);
  v263 = (char *)&v226 - v49;
  uint64_t v50 = sub_24B6824D0();
  uint64_t v51 = *(void **)(v50 - 8);
  uint64_t v52 = MEMORY[0x270FA5388](v50);
  int v240 = (char *)&v226 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v52);
  uint64_t v55 = (char *)&v226 - v54;
  uint64_t v56 = (char *)*a1;
  uint64_t v57 = sub_24B57CB70();
  id v58 = (char *)v51[2];
  uint64_t v239 = v57;
  uint64_t v238 = v51 + 2;
  v237 = v58;
  ((void (*)(char *))v58)(v55);
  sub_24B66DD1C(v56);
  sub_24B66DD1C(v56);
  id v59 = sub_24B6824B0();
  os_log_type_t v60 = sub_24B682B30();
  int v61 = v60;
  BOOL v62 = os_log_type_enabled(v59, v60);
  uint64_t v243 = v5;
  uint64_t v257 = v50;
  if (v62)
  {
    uint64_t v63 = swift_slowAlloc();
    char v270 = (void *)swift_slowAlloc();
    uint64_t v275 = (uint64_t)v270;
    *(_DWORD *)uint64_t v63 = 136381187;
    LODWORD(v268) = v61;
    uint64_t v284 = sub_24B5627B8(0xD000000000000022, 0x800000024B690E80, &v275);
    v271 = v2;
    sub_24B682CD0();
    *(_WORD *)(v63 + 12) = 2081;
    uint64_t v284 = sub_24B5627B8(0xD000000000000022, 0x800000024B690E80, &v275);
    sub_24B682CD0();
    *(_WORD *)(v63 + 22) = 2082;
    uint64_t v284 = (uint64_t)v56;
    sub_24B66DD1C(v56);
    uint64_t v64 = sub_24B682820();
    uint64_t v284 = sub_24B5627B8(v64, v65, &v275);
    uint64_t v2 = v271;
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    sub_24B65A19C(v56);
    sub_24B65A19C(v56);
    _os_log_impl(&dword_24B55E000, v59, (os_log_type_t)v268, "ObjectCaptureSession.%{private}s: Called %{private}s with state = %{public}s", (uint8_t *)v63, 0x20u);
    uint64_t v66 = v270;
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v66, -1, -1);
    uint64_t v67 = v63;
    uint64_t v5 = v243;
    MEMORY[0x24C5D6C00](v67, -1, -1);

    id v68 = (void (*)(void, void))v51[1];
    os_log_type_t v69 = v55;
    uint64_t v70 = v257;
  }
  else
  {
    sub_24B65A19C(v56);
    sub_24B65A19C(v56);

    id v68 = (void (*)(void, void))v51[1];
    os_log_type_t v69 = v55;
    uint64_t v70 = v50;
  }
  v236 = (void (*)(char *, uint64_t))v68;
  v68(v69, v70);
  if ((unint64_t)(v56 - 7) < 0xA) {
    return;
  }
  char v270 = v51;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24B682560();
  swift_release();
  swift_release();
  id v71 = (void *)v275;
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v275 = 16;
  unint64_t v72 = v2;
  sub_24B682570();
  uint64_t v275 = (uint64_t)v71;
  sub_24B612878((void **)&v275);
  sub_24B65A19C(v71);
  uint64_t v73 = *(void **)(v72 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_stateAfterFinishing);
  *(void *)(v72 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_stateAfterFinishing) = v56;
  int8x16_t v228 = v56;
  sub_24B66DD1C(v56);
  sub_24B65E308(v73);
  char v74 = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *(void *)v72) + 0x4B8))();
  os_log_type_t v75 = &OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_worldToObjectTransformFromMobileSfM;
  unint64_t v267 = v72;
  if ((v74 & 1) == 0) {
    goto LABEL_57;
  }
  unint64_t v76 = v72 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformBoundingBox;
  uint64_t v77 = v272;
  if (*(unsigned char *)(v72 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformBoundingBox + 64)) {
    goto LABEL_107;
  }
  uint64_t v245 = *(void *)v76;
  unint64_t v244 = *(void *)(v76 + 8);
  uint64_t v243 = *(char **)(v76 + 16);
  uint64_t v242 = *(void *)(v76 + 24);
  v241 = *(char **)(v76 + 32);
  int v240 = *(char **)(v76 + 40);
  uint64_t v79 = *(void *)(v76 + 48);
  uint64_t v78 = *(void **)(v76 + 56);
  uint64_t v239 = v79;
  uint64_t v238 = v78;
  unint64_t v80 = v72 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_metadataMap;
  swift_beginAccess();
  v271 = (uint64_t *)v80;
  uint64_t v81 = *(void *)v80;
  uint64_t v82 = *(void *)(*(void *)v80 + 64);
  uint64_t v233 = *(void *)v80 + 64;
  uint64_t v83 = 1 << *(unsigned char *)(v81 + 32);
  uint64_t v84 = -1;
  if (v83 < 64) {
    uint64_t v84 = ~(-1 << v83);
  }
  unint64_t v85 = v84 & v82;
  v237 = (char *)OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_scaleForFreeformReconstruction;
  v236 = (void (*)(char *, uint64_t))OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_writingPublishers;
  uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v248;
  v249 = v248 + 73;
  uint64_t v252 = (char *)(v269 + 16);
  v250 = (char *)(v269 + 32);
  char v270 = (void *)(v273 + 56);
  v268 = (uint64_t **)(v273 + 48);
  v260 = (void *)(v269 + 8);
  int64_t v234 = (unint64_t)(v83 + 63) >> 6;
  *(void *)&long long v232 = v234 - 1;
  uint64_t v258 = v81;
  swift_bridgeObjectRetain();
  int64_t v251 = 0;
  uint64_t v87 = (uint64_t)v264;
  if (!v85) {
    goto LABEL_12;
  }
LABEL_10:
  uint64_t v257 = (v85 - 1) & v85;
  unint64_t v88 = __clz(__rbit64(v85)) | (v251 << 6);
  uint64_t v89 = (uint64_t)v263;
LABEL_11:
  uint64_t v90 = v258;
  (*(void (**)(char *, unint64_t, uint64_t))(v269 + 16))(v48, *(void *)(v258 + 48) + *(void *)(v269 + 72) * v88, v77);
  uint64_t v91 = *(void *)(v90 + 56) + *(void *)(v273 + 72) * v88;
  uint64_t v92 = sub_24B562F04((uint64_t *)&unk_2697CCCA0);
  sub_24B659A1C(v91, (uint64_t)&v48[*(int *)(v92 + 48)], type metadata accessor for ObjectCaptureSession.Metadata.Shot);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56))(v48, 0, 1, v92);
  while (1)
  {
    sub_24B56CF38((uint64_t)v48, v89, &qword_2697CCC98);
    uint64_t v5 = (char *)sub_24B562F04((uint64_t *)&unk_2697CCCA0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, char *))(*((void *)v5 - 1) + 48))(v89, 1, v5) == 1)
    {
LABEL_106:
      swift_release();
LABEL_107:
      uint64_t v219 = sub_24B6823D0();
      uint64_t v221 = v220;
      int v222 = *(_DWORD *)(v72 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_coverage);
      sub_24B64DF80();
      uint64_t v275 = 0x302E342E32;
      unint64_t v276 = 0xE500000000000000;
      uint64_t v277 = v219;
      uint64_t v278 = v221;
      LODWORD(v279) = v222;
      sub_24B682500();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      char v223 = sub_24B634F88();
      uint64_t v224 = v228;
      if (v223)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        sub_24B66DD1C(v224);
        sub_24B682560();
        swift_release();
        swift_release();
        uint64_t v225 = (void *)v275;
        swift_getKeyPath();
        swift_getKeyPath();
        uint64_t v275 = (uint64_t)v224;
        (id)v72;
        sub_24B682570();
        uint64_t v275 = (uint64_t)v225;
        sub_24B612878((void **)&v275);
        sub_24B65A19C(v225);
      }
      return;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))v250)(v87, v89, v77);
    uint64_t v97 = *v271;
    if (!*(void *)(*v271 + 16)) {
      goto LABEL_119;
    }
    swift_bridgeObjectRetain();
    unint64_t v98 = sub_24B59F008(v87);
    if (v99)
    {
      uint64_t v100 = v273;
      sub_24B659A1C(*(void *)(v97 + 56) + *(void *)(v273 + 72) * v98, isUniquelyReferenced_nonNull_native, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      uint64_t v101 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v100 + 56);
      uint64_t v102 = isUniquelyReferenced_nonNull_native;
      uint64_t v103 = 0;
    }
    else
    {
      uint64_t v101 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))*v270;
      uint64_t v102 = isUniquelyReferenced_nonNull_native;
      uint64_t v103 = 1;
    }
    v266 = v101;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v101)(v102, v103, 1, v274);
    swift_bridgeObjectRelease();
    os_log_type_t v75 = *v268;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))*v268)(isUniquelyReferenced_nonNull_native, 1, v274) == 1) {
      break;
    }
    char v104 = v249[*(int *)(v274 + 32)];
    sub_24B65EF80(isUniquelyReferenced_nonNull_native, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    if (v104)
    {
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
      goto LABEL_115;
    }
    os_log_type_t v105 = v48;
    uint64_t v275 = v245;
    unint64_t v276 = v244;
    uint64_t v277 = (uint64_t)v243;
    uint64_t v278 = v242;
    v279 = v241;
    v280 = v240;
    uint64_t v281 = v239;
    v282 = v238;
    *(double *)&long long v106 = OCBoundingBox.scaledTransform(scale:)(COERCE_FLOAT(*(_OWORD *)&v237[v72]));
    long long v256 = v106;
    long long v255 = v107;
    long long v254 = v108;
    long long v253 = v109;
    uint64_t v110 = *(void (**)(char *, char *, uint64_t))v252;
    id v111 = v261;
    (*(void (**)(char *, uint64_t, uint64_t))v252)(v261, v87, v77);
    id v112 = v271;
    swift_beginAccess();
    double v113 = v262;
    v110(v262, v111, v77);
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    double v114 = v265;
    v110((char *)v265, v113, v77);
    uint64_t v283 = *v112;
    uint64_t v115 = v283;
    *id v112 = 0x8000000000000000;
    unint64_t v72 = sub_24B59F008((uint64_t)v114);
    uint64_t v117 = *(void *)(v115 + 16);
    BOOL v118 = (v116 & 1) == 0;
    uint64_t v119 = v117 + v118;
    if (__OFADD__(v117, v118)) {
      goto LABEL_112;
    }
    char v120 = v116;
    if (*(void *)(v115 + 24) >= v119)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if ((v116 & 1) == 0) {
          goto LABEL_56;
        }
      }
      else
      {
        sub_24B656F58();
        if ((v120 & 1) == 0) {
          goto LABEL_56;
        }
      }
    }
    else
    {
      sub_24B6548E0(v119, isUniquelyReferenced_nonNull_native);
      unint64_t v121 = sub_24B59F008((uint64_t)v265);
      if ((v120 & 1) != (v122 & 1)) {
        goto LABEL_124;
      }
      unint64_t v72 = v121;
      if ((v120 & 1) == 0)
      {
LABEL_56:
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v266)(v259, 1, 1, v274);
        __break(1u);
LABEL_57:
        unint64_t v146 = v72 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_metadataMap;
        swift_beginAccess();
        v271 = (uint64_t *)v146;
        uint64_t v147 = *(void *)v146;
        uint64_t v148 = *(void *)(*(void *)v146 + 64);
        uint64_t v229 = *(void *)v146 + 64;
        uint64_t v149 = 1 << *(unsigned char *)(v147 + 32);
        uint64_t v150 = -1;
        if (v149 < 64) {
          uint64_t v150 = ~(-1 << v149);
        }
        unint64_t v151 = v150 & v148;
        uint64_t v246 = v75[420];
        v268 = (uint64_t **)(v269 + 16);
        v248 = (char *)(v269 + 32);
        v266 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v273 + 56);
        v265 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v273 + 48);
        v247 = (void (**)(uint64_t, uint64_t))(v269 + 8);
        v235 = v270 + 1;
        int64_t v234 = (unint64_t)(v149 + 63) >> 6;
        uint64_t v227 = v234 - 1;
        uint64_t v258 = v147;
        swift_bridgeObjectRetain();
        uint64_t v259 = 0;
        *(void *)&long long v152 = 136380931;
        long long v232 = v152;
        unint64_t v231 = 0x800000024B690E80;
        uint64_t v230 = MEMORY[0x263F8EE58] + 8;
        uint64_t v153 = v272;
        uint64_t v154 = v254;
        while (2)
        {
          uint64_t isUniquelyReferenced_nonNull_native = v256;
          if (v151)
          {
            unint64_t v155 = __clz(__rbit64(v151));
            uint64_t v156 = (v151 - 1) & v151;
            uint64_t v157 = v155 | (v259 << 6);
            goto LABEL_62;
          }
          uint64_t v161 = v259 + 1;
          if (__OFADD__(v259, 1)) {
            goto LABEL_113;
          }
          if (v161 < v234)
          {
            unint64_t v162 = *(void *)(v229 + 8 * v161);
            if (v162)
            {
LABEL_66:
              uint64_t v156 = (v162 - 1) & v162;
              uint64_t v157 = __clz(__rbit64(v162)) + (v161 << 6);
              uint64_t v259 = v161;
LABEL_62:
              uint64_t v158 = v258;
              (*(void (**)(void, uint64_t, uint64_t))(v269 + 16))(v256, *(void *)(v258 + 48) + *(void *)(v269 + 72) * v157, v153);
              uint64_t v159 = *(void *)(v158 + 56) + *(void *)(v273 + 72) * v157;
              uint64_t v160 = sub_24B562F04((uint64_t *)&unk_2697CCCA0);
              sub_24B659A1C(v159, isUniquelyReferenced_nonNull_native + *(int *)(v160 + 48), type metadata accessor for ObjectCaptureSession.Metadata.Shot);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v160 - 8) + 56))(isUniquelyReferenced_nonNull_native, 0, 1, v160);
LABEL_81:
              uint64_t v165 = v255;
              sub_24B56CF38(isUniquelyReferenced_nonNull_native, v255, &qword_2697CCC98);
              uint64_t v166 = sub_24B562F04((uint64_t *)&unk_2697CCCA0);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v166 - 8) + 48))(v165, 1, v166) == 1)goto LABEL_106; {
              uint64_t v167 = v165 + *(int *)(v166 + 48);
              }
              (*(void (**)(uint64_t, uint64_t, uint64_t))v248)(v154, v165, v153);
              sub_24B659A1C(v167 + *(int *)(v274 + 20), (uint64_t)v5, type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera);
              sub_24B65EF80(v167, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
              float32x4_t v168 = &v5[*(int *)(v253 + 40)];
              uint64_t v169 = *(void *)v168;
              v262 = (char *)*((void *)v168 + 1);
              uint64_t isUniquelyReferenced_nonNull_native = *((void *)v168 + 2);
              v264 = (char *)*((void *)v168 + 3);
              uint64_t v170 = *((void *)v168 + 4);
              v263 = (char *)*((void *)v168 + 5);
              unint64_t v171 = *((void *)v168 + 6);
              v261 = (char *)*((void *)v168 + 7);
              LOBYTE(v167) = v168[64];
              sub_24B65EF80((uint64_t)v5, type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera);
              char v270 = (void *)v156;
              if (v167)
              {
                uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v252;
                int8x16_t v172 = v247;
              }
              else
              {
                unint64_t v244 = v171;
                uint64_t v245 = v170;
                unint64_t v72 = (unint64_t)*v268;
                int8x16_t v173 = v250;
                ((void (*)(char *, uint64_t, uint64_t))*v268)(v250, v154, v153);
                int8x16_t v174 = v271;
                swift_beginAccess();
                int64_t v175 = v251;
                ((void (*)(int64_t, char *, uint64_t))v72)(v251, v173, v153);
                int v176 = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v177 = v153;
                int v178 = v176;
                uint64_t v179 = v260;
                ((void (*)(void *, int64_t, uint64_t))v72)(v260, v175, v177);
                uint64_t v283 = *v174;
                uint64_t v180 = v283;
                *int8x16_t v174 = 0x8000000000000000;
                unint64_t v182 = sub_24B59F008((uint64_t)v179);
                uint64_t v183 = *(void *)(v180 + 16);
                BOOL v184 = (v181 & 1) == 0;
                uint64_t v185 = v183 + v184;
                if (__OFADD__(v183, v184))
                {
                  __break(1u);
                  goto LABEL_111;
                }
                char v186 = v181;
                if (*(void *)(v180 + 24) >= v185)
                {
                  if (v178)
                  {
                    if ((v181 & 1) == 0) {
                      goto LABEL_105;
                    }
                  }
                  else
                  {
                    sub_24B656F58();
                    if ((v186 & 1) == 0) {
                      goto LABEL_105;
                    }
                  }
                }
                else
                {
                  sub_24B6548E0(v185, v178);
                  unint64_t v187 = sub_24B59F008((uint64_t)v260);
                  if ((v186 & 1) != (v188 & 1)) {
                    goto LABEL_124;
                  }
                  unint64_t v182 = v187;
                  if ((v186 & 1) == 0)
                  {
LABEL_105:
                    (*v266)((uint64_t)v249, 1, 1, v274);
                    __break(1u);
                    goto LABEL_106;
                  }
                }
                uint64_t v189 = v283;
                uint64_t v190 = v273;
                unint64_t v191 = *(void *)(v273 + 72) * v182;
                uint64_t v192 = (uint64_t)v249;
                sub_24B65A134(*(void *)(v283 + 56) + v191, (uint64_t)v249, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
                uint64_t v193 = v274;
                (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v190 + 56))(v192, 0, 1, v274);
                uint64_t v194 = (void *)(v192 + *(int *)(v193 + 20));
                id v195 = v262;
                v194[6] = v169;
                v194[7] = v195;
                id v196 = v264;
                v194[8] = isUniquelyReferenced_nonNull_native;
                v194[9] = v196;
                uint64_t v197 = v263;
                v194[10] = v245;
                v194[11] = v197;
                CFStringRef v198 = v261;
                v194[12] = v244;
                v194[13] = v198;
                uint64_t v199 = v192;
                uint64_t v200 = v242;
                sub_24B563A6C(v199, v242, &qword_2697CCC90);
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v190 + 48))(v200, 1, v193) == 1)
                {
                  sub_24B5632A8(v200, &qword_2697CCC90);
                  uint64_t v201 = v283;
                  uint64_t v202 = v272;
                  swift_arrayDestroy();
                  sub_24B655C8C(v182, v201);
                }
                else
                {
                  uint64_t v203 = v200;
                  uint64_t v204 = v233;
                  sub_24B65A134(v203, v233, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
                  sub_24B65A134(v204, *(void *)(v189 + 56) + v191, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
                  uint64_t v202 = v272;
                }
                uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v252;
                sub_24B5632A8((uint64_t)v249, &qword_2697CCC90);
                int8x16_t v172 = v247;
                uint64_t v205 = *v247;
                (*v247)((uint64_t)v260, v202);
                uint64_t *v271 = v283;
                v205(v251, v202);
                v205((uint64_t)v250, v202);
                swift_endAccess();
                id v206 = v240;
                ((void (*)(char *, uint64_t, uint64_t))v237)(v240, v239, v257);
                id v207 = v241;
                ((void (*)(char *, void, uint64_t))v72)(v241, v254, v202);
                id v208 = sub_24B6824B0();
                os_log_type_t v209 = sub_24B682B30();
                if (os_log_type_enabled(v208, v209))
                {
                  uint64_t v210 = swift_slowAlloc();
                  v264 = (char *)swift_slowAlloc();
                  uint64_t v275 = (uint64_t)v264;
                  *(_DWORD *)uint64_t v210 = v232;
                  *(void *)(v210 + 4) = sub_24B5627B8(0xD000000000000022, v231, &v275);
                  *(_WORD *)(v210 + 12) = 2082;
                  sub_24B65D13C(&qword_2697CC400, MEMORY[0x263F07508]);
                  uint64_t v211 = sub_24B682F90();
                  *(void *)(v210 + 14) = sub_24B5627B8(v211, v212, &v275);
                  swift_bridgeObjectRelease();
                  v205((uint64_t)v207, v202);
                  _os_log_impl(&dword_24B55E000, v208, v209, "ObjectCaptureSession.%{private}s: Updated metadata of the shot %{public}s with the latest mobileSfM transform.", (uint8_t *)v210, 0x16u);
                  uint64_t v213 = v264;
                  swift_arrayDestroy();
                  MEMORY[0x24C5D6C00](v213, -1, -1);
                  MEMORY[0x24C5D6C00](v210, -1, -1);
                }
                else
                {
                  v205((uint64_t)v207, v202);
                }

                v236(v206, v257);
                unint64_t v72 = v267;
                uint64_t v5 = v243;
                uint64_t v154 = v254;
              }
              sub_24B64DDAC();
              uint64_t v214 = *v271;
              if (!*(void *)(*v271 + 16)) {
                goto LABEL_117;
              }
              swift_bridgeObjectRetain();
              unint64_t v215 = sub_24B59F008(v154);
              if (v216)
              {
                sub_24B659A1C(*(void *)(v214 + 56) + *(void *)(v273 + 72) * v215, isUniquelyReferenced_nonNull_native, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
                uint64_t v217 = 0;
              }
              else
              {
                uint64_t v217 = 1;
              }
              uint64_t v218 = v274;
              (*v266)(isUniquelyReferenced_nonNull_native, v217, 1, v274);
              swift_bridgeObjectRelease();
              if ((*v265)(isUniquelyReferenced_nonNull_native, 1, v218) == 1) {
                goto LABEL_118;
              }
              sub_24B682500();
              swift_release();
              uint64_t v153 = v272;
              (*v172)(v154, v272);
              sub_24B65EF80(isUniquelyReferenced_nonNull_native, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
              unint64_t v151 = (unint64_t)v270;
              continue;
            }
            uint64_t v163 = v259 + 2;
            ++v259;
            if (v161 + 1 < v234)
            {
              unint64_t v162 = *(void *)(v229 + 8 * v163);
              if (v162)
              {
LABEL_69:
                uint64_t v161 = v163;
                goto LABEL_66;
              }
              uint64_t v259 = v161 + 1;
              if (v161 + 2 < v234)
              {
                unint64_t v162 = *(void *)(v229 + 8 * (v161 + 2));
                if (v162)
                {
                  v161 += 2;
                  goto LABEL_66;
                }
                uint64_t v163 = v161 + 3;
                uint64_t v259 = v161 + 2;
                if (v161 + 3 < v234)
                {
                  unint64_t v162 = *(void *)(v229 + 8 * v163);
                  if (!v162)
                  {
                    while (1)
                    {
                      uint64_t v161 = v163 + 1;
                      if (__OFADD__(v163, 1)) {
                        break;
                      }
                      if (v161 >= v234)
                      {
                        uint64_t v259 = v227;
                        goto LABEL_80;
                      }
                      unint64_t v162 = *(void *)(v229 + 8 * v161);
                      ++v163;
                      if (v162) {
                        goto LABEL_66;
                      }
                    }
LABEL_115:
                    __break(1u);
LABEL_116:
                    __break(1u);
LABEL_117:
                    (*v266)(isUniquelyReferenced_nonNull_native, 1, 1, v274);
LABEL_118:
                    __break(1u);
LABEL_119:
                    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*v270)(isUniquelyReferenced_nonNull_native, 1, 1, v274);
                    goto LABEL_120;
                  }
                  goto LABEL_69;
                }
              }
            }
          }
          break;
        }
LABEL_80:
        uint64_t v164 = sub_24B562F04((uint64_t *)&unk_2697CCCA0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v164 - 8) + 56))(isUniquelyReferenced_nonNull_native, 1, 1, v164);
        uint64_t v156 = 0;
        goto LABEL_81;
      }
    }
    uint64_t v123 = v283;
    uint64_t v124 = *(void *)(v273 + 72);
    unint64_t v125 = v124 * v72;
    uint64_t v126 = v259;
    sub_24B65A134(*(void *)(v283 + 56) + v124 * v72, v259, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    uint64_t v127 = v274;
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v266)(v126, 0, 1, v274);
    uint64_t v128 = v126 + *(int *)(v127 + 32);
    if (*(unsigned char *)(v128 + 73)) {
      goto LABEL_123;
    }
    long long v129 = v255;
    *(_OWORD *)uint64_t v128 = v256;
    *(_OWORD *)(v128 + 16) = v129;
    long long v130 = v253;
    *(_OWORD *)(v128 + 32) = v254;
    *(_OWORD *)(v128 + 48) = v130;
    uint64_t v131 = v126;
    uint64_t v132 = v246;
    sub_24B563A6C(v131, v246, &qword_2697CCC90);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v75)(v132, 1, v127) == 1)
    {
      sub_24B5632A8(v132, &qword_2697CCC90);
      uint64_t v133 = v283;
      uint64_t v77 = v272;
      swift_arrayDestroy();
      sub_24B655C8C(v72, v133);
    }
    else
    {
      uint64_t v134 = (uint64_t)v235;
      sub_24B65A134(v132, (uint64_t)v235, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      sub_24B65A134(v134, *(void *)(v123 + 56) + v125, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      uint64_t v77 = v272;
    }
    uint64_t v135 = (uint64_t)v264;
    sub_24B5632A8(v259, &qword_2697CCC90);
    float32x4_t v136 = (void (*)(char *, uint64_t))*v260;
    ((void (*)(unsigned int (**)(uint64_t, uint64_t, uint64_t), uint64_t))*v260)(v265, v77);
    id v137 = v271;
    uint64_t *v271 = v283;
    v136(v262, v77);
    v136(v261, v77);
    swift_endAccess();
    sub_24B64DDAC();
    uint64_t v138 = *v137;
    if (!*(void *)(*v137 + 16)) {
      goto LABEL_121;
    }
    swift_bridgeObjectRetain();
    unint64_t v139 = sub_24B59F008(v135);
    if (v140)
    {
      id v141 = v247;
      sub_24B659A1C(*(void *)(v138 + 56) + v139 * v124, (uint64_t)v247, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      uint64_t v142 = 0;
    }
    else
    {
      uint64_t v142 = 1;
      id v141 = v247;
    }
    uint64_t v143 = v274;
    ((void (*)(void (**)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))v266)(v141, v142, 1, v274);
    swift_bridgeObjectRelease();
    if (((unsigned int (*)(void (**)(uint64_t, uint64_t), uint64_t, uint64_t))v75)(v141, 1, v143) == 1) {
      goto LABEL_122;
    }
    uint64_t v144 = (uint64_t)&v263[*((int *)v5 + 12)];
    uint64_t v145 = (uint64_t)v141;
    sub_24B682500();
    swift_release();
    uint64_t v87 = (uint64_t)v264;
    v136(v264, v77);
    sub_24B65EF80(v145, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    sub_24B65EF80(v144, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    unint64_t v72 = v267;
    uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v248;
    os_log_type_t v48 = v105;
    unint64_t v85 = v257;
    if (v257) {
      goto LABEL_10;
    }
LABEL_12:
    int64_t v93 = v251 + 1;
    uint64_t v89 = (uint64_t)v263;
    if (__OFADD__(v251, 1)) {
      goto LABEL_114;
    }
    if (v93 < v234)
    {
      unint64_t v94 = *(void *)(v233 + 8 * v93);
      if (v94) {
        goto LABEL_15;
      }
      int64_t v95 = v251 + 2;
      ++v251;
      if (v93 + 1 < v234)
      {
        unint64_t v94 = *(void *)(v233 + 8 * v95);
        if (v94) {
          goto LABEL_18;
        }
        int64_t v251 = v93 + 1;
        if (v93 + 2 < v234)
        {
          unint64_t v94 = *(void *)(v233 + 8 * (v93 + 2));
          if (v94)
          {
            v93 += 2;
            goto LABEL_15;
          }
          int64_t v95 = v93 + 3;
          int64_t v251 = v93 + 2;
          if (v93 + 3 < v234)
          {
            unint64_t v94 = *(void *)(v233 + 8 * v95);
            if (v94)
            {
LABEL_18:
              int64_t v93 = v95;
LABEL_15:
              uint64_t v257 = (v94 - 1) & v94;
              unint64_t v88 = __clz(__rbit64(v94)) + (v93 << 6);
              int64_t v251 = v93;
              goto LABEL_11;
            }
            while (1)
            {
              int64_t v93 = v95 + 1;
              if (__OFADD__(v95, 1)) {
                goto LABEL_116;
              }
              if (v93 >= v234) {
                break;
              }
              unint64_t v94 = *(void *)(v233 + 8 * v93);
              ++v95;
              if (v94) {
                goto LABEL_15;
              }
            }
            int64_t v251 = v232;
          }
        }
      }
    }
    uint64_t v96 = sub_24B562F04((uint64_t *)&unk_2697CCCA0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 56))(v48, 1, 1, v96);
    uint64_t v257 = 0;
  }
LABEL_120:
  __break(1u);
LABEL_121:
  ((void (*)(void (**)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))v266)(v247, 1, 1, v274);
LABEL_122:
  __break(1u);
LABEL_123:
  __break(1u);
LABEL_124:
  sub_24B682FF0();
  __break(1u);
}

void (*sub_24B6377F4(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  uint64_t v3 = sub_24B682410();
  v2[4] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = v4;
  v2[5] = v4;
  uint64_t v6 = malloc(*(void *)(v4 + 64));
  v2[6] = v6;
  (*(void (**)(void))(v5 + 16))();
  v2[7] = sub_24B6584C8(v2, (uint64_t)v6);
  return sub_24B6378E4;
}

void sub_24B6378E4(void *a1)
{
  uint64_t v1 = (void *)*a1;
  uint64_t v2 = *(void **)(*a1 + 48);
  uint64_t v3 = *(void *)(*a1 + 32);
  uint64_t v4 = *(void *)(*a1 + 40);
  (*(void (**)(void, void))(*a1 + 56))(*a1, 0);
  (*(void (**)(void *, uint64_t))(v4 + 8))(v2, v3);
  free(v2);

  free(v1);
}

uint64_t sub_24B63795C()
{
  uint64_t v1 = v0;
  sub_24B62B340();
  uint64_t v2 = v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_tapPosition;
  *(_WORD *)(v2 + 32) = 256;
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  sub_24B61E6D0();
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_plane);
  *(void *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_plane) = 0;

  uint64_t v4 = v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_initialCameraTransform;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)uint64_t v4 = 0u;
  *(_OWORD *)(v4 + 16) = 0u;
  *(unsigned char *)(v4 + 64) = 1;
  uint64_t v5 = v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox;
  *(_OWORD *)uint64_t v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(unsigned char *)(v5 + 64) = 1;
  sub_24B65E4B8();
  uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBoxAnchor);
  *(void *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBoxAnchor) = 0;

  sub_24B61E8C4();
  uint64_t v7 = (_OWORD *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maskingVoxelCloud);
  v7[2] = 0u;
  v7[3] = 0u;
  v7[4] = 0u;
  *uint64_t v7 = 0u;
  v7[1] = 0u;
  swift_bridgeObjectRelease();
  *(void *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__mobileSfMPointCloudBuffer) = 0;
  swift_release();
  uint64_t v8 = (void *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotsInCurrentSegment);
  swift_beginAccess();
  *uint64_t v8 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_internalMotionManager);
  if (v9)
  {
    uint64_t v10 = *(void (**)(uint64_t))(*(void *)v9 + 160);
    uint64_t v11 = swift_retain();
    v10(v11);
    swift_release();
  }
  *(void *)(v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_temporalDepthPointCloudCircularBuffer) = 0;
  return swift_release();
}

uint64_t sub_24B637ADC()
{
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v0) + 0x4B8))(v4)) {
    goto LABEL_7;
  }
  if (*((unsigned char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isToFSensorTypePeridot)) {
    float v1 = 0.75;
  }
  else {
    float v1 = 0.8;
  }
  if (qword_2697CF6B0 != -1) {
    goto LABEL_13;
  }
  while (1)
  {
    sub_24B610448((uint64_t)v19, (__n128)xmmword_2697CF6C0, 0.01, v1);
    v18[6] = v19[6];
    v18[7] = v19[7];
    v18[8] = v19[8];
    void v18[2] = v19[2];
    void v18[3] = v19[3];
    v18[4] = v19[4];
    v18[5] = v19[5];
    v18[0] = v19[0];
    v18[1] = v19[1];
    nullsub_1(v18);
    sub_24B56CF38((uint64_t)v18, (uint64_t)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurfaceConfig, &qword_2697CCA08);
    if (!sub_24B62F564(v19)) {
      break;
    }
LABEL_7:
    uint64_t v7 = *(void *)((char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_staticSegmentID);
    BOOL v8 = __OFADD__(v7, 1);
    uint64_t v9 = v7 + 1;
    if (!v8)
    {
      *(void *)((char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_staticSegmentID) = v9;
      return 1;
    }
    __break(1u);
LABEL_13:
    swift_once();
  }
  uint64_t v11 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v11, v2);
  uint64_t v12 = sub_24B6824B0();
  os_log_type_t v13 = sub_24B682B20();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v17 = v15;
    *(_DWORD *)uint64_t v14 = 136380675;
    uint64_t v16 = sub_24B5627B8(0xD000000000000011, 0x800000024B690DC0, &v17);
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v12, v13, "ObjectCaptureSession.%{private}s: Failed to start voxel integration!", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v15, -1, -1);
    MEMORY[0x24C5D6C00](v14, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return 0;
}

uint64_t sub_24B637E1C()
{
  uint64_t v1 = sub_24B6824D0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v74 = v1;
  uint64_t v75 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  unint64_t v72 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v65 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v70 = (char *)&v65 - v8;
  uint64_t v9 = sub_24B682410();
  uint64_t v71 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24B562F04(&qword_2697CC1F0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_24B6822E0();
  uint64_t v15 = *(void *)(v73 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v73);
  uint64_t v18 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v65 - v20;
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v24 = (char *)&v65 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v65 - v25;
  if ((sub_24B61E490() & 1) != 0 && !*(void *)&v0[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pgManager])
  {
    id v68 = v0;
    uint64_t v69 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pgManager;
    uint64_t v34 = (uint64_t)&v0[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_snapshotURL];
    swift_beginAccess();
    sub_24B563A6C(v34, (uint64_t)v14, &qword_2697CC1F0);
    uint64_t v35 = v73;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, v73) == 1)
    {
      id v36 = objc_msgSend(self, sel_defaultManager);
      id v37 = objc_msgSend(v36, sel_temporaryDirectory);

      sub_24B6822B0();
      sub_24B682270();
      uint64_t v67 = v15;
      uint64_t v66 = *(void (**)(char *, uint64_t))(v15 + 8);
      v66(v21, v73);
      sub_24B682400();
      sub_24B6823D0();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v11, v9);
      uint64_t v38 = v26;
      sub_24B682270();
      uint64_t v35 = v73;
      swift_bridgeObjectRelease();
      v66(v24, v35);
      sub_24B5632A8((uint64_t)v14, &qword_2697CC1F0);
      uint64_t v39 = v74;
      uint64_t v40 = v67;
    }
    else
    {
      uint64_t v38 = v26;
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v26, v14, v35);
      uint64_t v39 = v74;
      uint64_t v40 = v15;
    }
    type metadata accessor for PGManager();
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v18, v38, v35);
    uint64_t v41 = (unsigned __int8 *)sub_24B5B3E98();
    if (v41[25]) {
      __int16 v42 = 256;
    }
    else {
      __int16 v42 = 0;
    }
    uint64_t v43 = sub_24B5B4D90((uint64_t)v18, *v41 | ((unint64_t)*((unsigned int *)v41 + 1) << 32), *((_DWORD *)v41 + 2), *((void *)v41 + 2), v42 | v41[24]);
    uint64_t v45 = v68;
    uint64_t v44 = v69;
    *(void *)&v68[v69] = v43;
    swift_release();
    uint64_t v46 = *(void *)&v45[v44];
    if (v46)
    {
      uint64_t v47 = *(void (**)(char *, _UNKNOWN **))(*(void *)v46 + 424);
      swift_retain();
      os_log_type_t v48 = v45;
      v47(v45, &off_26FE8FCB0);
      swift_release();
      uint64_t v49 = *(void *)&v45[v69];
      if (v49)
      {
        uint64_t v50 = *(void (**)(char *, _UNKNOWN **))(*(void *)v49 + 496);
        uint64_t v51 = v48;
        swift_retain();
        v50(v45, &off_26FE8FCC0);
        swift_release();
        uint64_t v52 = *(void *)&v45[v69];
        if (v52)
        {
          uint64_t v53 = *(void (**)(char *, _UNKNOWN **))(*(void *)v52 + 520);
          uint64_t v54 = v69;
          uint64_t v55 = v51;
          swift_retain();
          v53(v45, &off_26FE8FCF0);
          swift_release();
          uint64_t v56 = *(void *)&v45[v54];
          if (v56)
          {
            uint64_t v57 = *(void (**)(char *, _UNKNOWN **))(*(void *)v56 + 544);
            id v58 = v55;
            swift_retain();
            v57(v45, &off_26FE8FD00);
            swift_release();
          }
        }
      }
    }
    uint64_t v59 = sub_24B57CB70();
    os_log_type_t v60 = v70;
    (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v70, v59, v39);
    int v61 = sub_24B6824B0();
    os_log_type_t v62 = sub_24B682B30();
    if (os_log_type_enabled(v61, v62))
    {
      uint64_t v63 = (uint8_t *)swift_slowAlloc();
      uint64_t v64 = swift_slowAlloc();
      uint64_t v78 = v64;
      *(_DWORD *)uint64_t v63 = 136380675;
      uint64_t v76 = sub_24B5627B8(0xD000000000000017, 0x800000024B690D80, &v78);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v61, v62, "ObjectCaptureSession.%{private}s: Initialized mobileSfM in ObjectCaptureSession.", v63, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v64, -1, -1);
      MEMORY[0x24C5D6C00](v63, -1, -1);

      (*(void (**)(char *, uint64_t))(v75 + 8))(v60, v74);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v75 + 8))(v60, v39);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v38, v35);
  }
  else
  {
    uint64_t v27 = sub_24B57CB70();
    uint64_t v28 = v74;
    (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v7, v27, v74);
    uint64_t v29 = sub_24B6824B0();
    os_log_type_t v30 = sub_24B682B30();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      v77[0] = v32;
      *(_DWORD *)uint64_t v31 = 136380675;
      uint64_t v78 = sub_24B5627B8(0xD000000000000017, 0x800000024B690D80, v77);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v29, v30, "ObjectCaptureSession.%{private}s: mobileSfM has not been initialized or it has already been initialized in ObjectCaptureSession!", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v32, -1, -1);
      MEMORY[0x24C5D6C00](v31, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v7, v28);
  }
}

id ObjectCaptureSession.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void ObjectCaptureSession.init()()
{
}

uint64_t ObjectCaptureSession.startRecording(_:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24B57CC30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  uint64_t v9 = sub_24B6824B0();
  os_log_type_t v10 = sub_24B682B30();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v21 = a1;
    uint64_t v12 = v11;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v20 = v2;
    uint64_t v14 = v13;
    v23[0] = v13;
    *(_DWORD *)uint64_t v12 = 136380931;
    uint64_t v22 = sub_24B5627B8(0xD000000000000012, 0x800000024B68F3D0, v23);
    sub_24B682CD0();
    *(_WORD *)(v12 + 12) = 2081;
    uint64_t v22 = sub_24B5627B8(0xD000000000000012, 0x800000024B68F3D0, v23);
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v9, v10, "ObjectCaptureSession.%{private}s: Called %{private}s.", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    uint64_t v15 = v14;
    uint64_t v2 = v20;
    MEMORY[0x24C5D6C00](v15, -1, -1);
    uint64_t v16 = v12;
    a1 = v21;
    MEMORY[0x24C5D6C00](v16, -1, -1);
  }

  uint64_t v17 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  MEMORY[0x270FA5388](v17);
  *(&v19 - 2) = v2;
  *(&v19 - 1) = a1;
  sub_24B682BD0();
  return LOBYTE(v23[0]);
}

uint64_t sub_24B638C8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v6 = sub_24B562F04(&qword_2697CC1F0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24B6822E0();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a2, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  uint64_t v11 = a1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__recordVideoURL;
  swift_beginAccess();
  sub_24B56C254((uint64_t)v8, v11, &qword_2697CC1F0);
  uint64_t result = swift_endAccess();
  *a3 = 1;
  return result;
}

uint64_t ObjectCaptureSession.stopRecording(completionHandler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24B6824D0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24B57CC30();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  uint64_t v11 = sub_24B6824B0();
  os_log_type_t v12 = sub_24B682B30();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v21 = v3;
    uint64_t v14 = v13;
    uint64_t v19 = swift_slowAlloc();
    v23[0] = v19;
    *(_DWORD *)uint64_t v14 = 136380931;
    uint64_t v22 = sub_24B5627B8(0xD000000000000021, 0x800000024B68F3F0, v23);
    uint64_t v20 = a1;
    sub_24B682CD0();
    *(_WORD *)(v14 + 12) = 2081;
    uint64_t v22 = sub_24B5627B8(0xD000000000000021, 0x800000024B68F3F0, v23);
    a1 = v20;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v11, v12, "ObjectCaptureSession.%{private}s: Called %{private}s.", (uint8_t *)v14, 0x16u);
    uint64_t v15 = v19;
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v15, -1, -1);
    uint64_t v16 = v14;
    uint64_t v3 = v21;
    MEMORY[0x24C5D6C00](v16, -1, -1);
  }

  uint64_t v17 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  MEMORY[0x270FA5388](v17);
  *(&v19 - 4) = v3;
  *(&v19 - 3) = a1;
  *(&v19 - 2) = a2;
  sub_24B682BD0();
  return LOBYTE(v23[0]);
}

void sub_24B639090(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v8 = sub_24B6824D0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v12 = *(void **)&a1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession];
  id v13 = objc_msgSend(v12, sel_configuration);
  if (v13)
  {
    uint64_t v14 = v13;
    self;
    uint64_t v15 = swift_dynamicCastObjCClass();
    if (v15)
    {
      uint64_t v16 = (void *)v15;
      uint64_t v17 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v18 = (void *)swift_allocObject();
      void v18[2] = a2;
      void v18[3] = a3;
      v18[4] = v17;
      v18[5] = v16;
      aBlock[4] = (uint64_t)sub_24B66E928;
      aBlock[5] = (uint64_t)v18;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_24B639E5C;
      aBlock[3] = (uint64_t)&unk_26FE908A0;
      uint64_t v19 = _Block_copy(aBlock);
      swift_retain();
      id v20 = v14;
      swift_release();
      objc_msgSend(v16, sel_finishRecordingWithHandler_, v19);

      _Block_release(v19);
      char v21 = 1;
      goto LABEL_9;
    }
  }
  uint64_t v22 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v22, v8);
  uint64_t v23 = a1;
  uint64_t v24 = sub_24B6824B0();
  os_log_type_t v25 = sub_24B682B20();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 136380931;
    os_log_type_t v30 = a4;
    aBlock[0] = v27;
    id v32 = (id)sub_24B5627B8(0xD000000000000021, 0x800000024B68F3F0, aBlock);
    sub_24B682CD0();
    *(_WORD *)(v26 + 12) = 2082;
    id v32 = objc_msgSend(v12, sel_configuration);
    sub_24B562F04(&qword_2697CCA28);
    uint64_t v28 = sub_24B682820();
    id v32 = (id)sub_24B5627B8(v28, v29, aBlock);
    a4 = v30;
    sub_24B682CD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24B55E000, v24, v25, "ObjectCaptureSession.%{private}s: Invalid ARConfiguration: %{public}s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v27, -1, -1);
    MEMORY[0x24C5D6C00](v26, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  char v21 = 0;
LABEL_9:
  *a4 = v21;
}

void sub_24B639460(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v9 = sub_24B562F04(&qword_2697CC1F0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24B6822E0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a4 + 16;
  a2(a1);
  swift_beginAccess();
  uint64_t v17 = MEMORY[0x24C5D6CB0](a4 + 16);
  if (!v17)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    goto LABEL_7;
  }
  uint64_t v18 = (void *)v17;
  uint64_t v19 = v17 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__recordVideoURL;
  swift_beginAccess();
  sub_24B563A6C(v19, (uint64_t)v11, &qword_2697CC1F0);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
LABEL_7:
    sub_24B5632A8((uint64_t)v11, &qword_2697CC1F0);
    goto LABEL_8;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  v31[5] = sub_24B6822D0();
  v31[6] = v20;
  sub_24B6821D0();
  v31[0] = 46;
  v31[1] = 0xE100000000000000;
  sub_24B682890();
  swift_bridgeObjectRelease();
  v31[3] = 0xD000000000000012;
  v31[4] = 0x800000024B690F30;
  sub_24B57C484();
  uint64_t v21 = sub_24B682D10();
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v24 = MEMORY[0x24C5D6CB0](v16);
  if (v24)
  {
    os_log_type_t v25 = (void *)v24;
    sub_24B6397EC(v21, v23);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
LABEL_8:
  id v26 = objc_msgSend(a5, sel_templateConfiguration);
  if (v26)
  {
    uint64_t v27 = v26;
    swift_beginAccess();
    uint64_t v28 = MEMORY[0x24C5D6CB0](v16);
    if (v28)
    {
      unint64_t v29 = (void *)v28;
      id v30 = *(id *)(v28 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession);

      objc_msgSend(v30, sel_runWithConfiguration_options_, v27, 0);
      uint64_t v27 = v30;
    }
  }
}

uint64_t sub_24B6397EC(uint64_t a1, uint64_t a2)
{
  uint64_t v33 = a1;
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v32 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24B682810();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24B6822E0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v34 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (uint64_t *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__skippedFramesTimeStamps);
  uint64_t result = swift_beginAccess();
  uint64_t v16 = *v14;
  if (!*(void *)(*v14 + 16)) {
    return result;
  }
  uint64_t v30 = v11;
  uint64_t v31 = a2;
  v28[1] = v4;
  uint64_t v29 = v12;
  v28[0] = v5;
  uint64_t v37 = 0;
  unint64_t v38 = 0xE000000000000000;
  uint64_t v17 = v16 + 56;
  uint64_t v18 = 1 << *(unsigned char *)(v16 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  uint64_t v20 = v19 & *(void *)(v16 + 56);
  int64_t v21 = (unint64_t)(v18 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v22 = 0;
  while (1)
  {
    if (v20)
    {
      v20 &= v20 - 1;
      goto LABEL_6;
    }
    int64_t v24 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v24 >= v21) {
      goto LABEL_22;
    }
    uint64_t v25 = *(void *)(v17 + 8 * v24);
    ++v22;
    if (!v25)
    {
      int64_t v22 = v24 + 1;
      if (v24 + 1 >= v21) {
        goto LABEL_22;
      }
      uint64_t v25 = *(void *)(v17 + 8 * v22);
      if (!v25)
      {
        int64_t v22 = v24 + 2;
        if (v24 + 2 >= v21) {
          goto LABEL_22;
        }
        uint64_t v25 = *(void *)(v17 + 8 * v22);
        if (!v25) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v20 = (v25 - 1) & v25;
LABEL_6:
    uint64_t v35 = sub_24B682A40();
    unint64_t v36 = v23;
    swift_bridgeObjectRetain();
    sub_24B682890();
    swift_bridgeObjectRelease();
    MEMORY[0x24C5D4970](v35, v36);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v26 = v24 + 3;
  if (v26 >= v21)
  {
LABEL_22:
    swift_release();
    uint64_t v27 = v34;
    sub_24B682220();
    uint64_t v35 = v37;
    unint64_t v36 = v38;
    swift_bridgeObjectRetain();
    sub_24B682800();
    sub_24B57C484();
    sub_24B682D20();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v27, v30);
    return swift_bridgeObjectRelease();
  }
  uint64_t v25 = *(void *)(v17 + 8 * v26);
  if (v25)
  {
    int64_t v22 = v26;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v22 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v22 >= v21) {
      goto LABEL_22;
    }
    uint64_t v25 = *(void *)(v17 + 8 * v22);
    ++v26;
    if (v25) {
      goto LABEL_21;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_24B639E5C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t ObjectCaptureSession.setFrameEvent(frameEvent:)(void *a1)
{
  uint64_t v3 = *(NSObject **)&v1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = a1;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_24B65F0B0;
  *(void *)(v5 + 24) = v4;
  v11[4] = sub_24B5A2598;
  v11[5] = v5;
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 1107296256;
  _DWORD v11[2] = sub_24B58EFF8;
  v11[3] = &unk_26FE8EF80;
  uint64_t v6 = _Block_copy(v11);
  uint64_t v7 = v1;
  id v8 = a1;
  swift_retain();
  swift_release();
  dispatch_sync(v3, v6);
  _Block_release(v6);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t ObjectCaptureSession.getFrameEvent(timestamp:)(double a1)
{
  uint64_t v3 = sub_24B6824D0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession];
  id v8 = objc_msgSend(v7, sel_configuration);
  if (!v8)
  {
LABEL_9:
    uint64_t v16 = sub_24B57CC30();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v16, v3);
    uint64_t v17 = v1;
    uint64_t v18 = sub_24B6824B0();
    os_log_type_t v19 = sub_24B682B20();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      v27[0] = v21;
      *(_DWORD *)uint64_t v20 = 136380931;
      *(void *)&v26[0] = sub_24B5627B8(0xD000000000000019, 0x800000024B68F420, v27);
      sub_24B682CD0();
      *(_WORD *)(v20 + 12) = 2082;
      *(void *)&v26[0] = objc_msgSend(v7, sel_configuration);
      sub_24B562F04(&qword_2697CCA28);
      uint64_t v22 = sub_24B682820();
      *(void *)&v26[0] = sub_24B5627B8(v22, v23, v27);
      sub_24B682CD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24B55E000, v18, v19, "ObjectCaptureSession.%{private}s: Not a replay configuration: %{public}s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v21, -1, -1);
      MEMORY[0x24C5D6C00](v20, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return 0;
  }
  uint64_t v9 = v8;
  self;
  uint64_t v10 = (void *)swift_dynamicCastObjCClass();
  if (!v10)
  {

    goto LABEL_9;
  }
  id v11 = objc_msgSend(v10, sel_replaySensor);
  if (!v11)
  {
LABEL_7:

    return 0;
  }
  uint64_t v12 = v11;
  id v13 = objc_msgSend(v11, sel_customDataClasses);
  uint64_t v14 = sub_24B682AA0();

  uint64_t v15 = *(void *)(v14 + 16);
  swift_bridgeObjectRelease();
  if (!v15 || (v1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_referenceTimestamp + 8] & 1) != 0)
  {
    swift_unknownObjectRelease();
    goto LABEL_7;
  }
  if (objc_msgSend(v12, sel_customDataForTimestamp_, *(double *)&v1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_referenceTimestamp] + a1))
  {
    sub_24B682D50();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();

    memset(v26, 0, sizeof(v26));
  }
  sub_24B56CF38((uint64_t)v26, (uint64_t)v27, (uint64_t *)&unk_2697CCA30);
  if (!v27[3])
  {
    sub_24B5632A8((uint64_t)v27, (uint64_t *)&unk_2697CCA30);
    return 0;
  }
  type metadata accessor for ObjectCaptureFrameEvent();
  if (swift_dynamicCast()) {
    return v25[1];
  }
  else {
    return 0;
  }
}

uint64_t sub_24B63A450(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = sub_24B6824D0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24B6823B0();
  uint64_t v33 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  id v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B682380();
  sub_24B562F04((uint64_t *)&unk_2697CD150);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_24B684E60;
  sub_24B682390();
  uint64_t v13 = MEMORY[0x263F8D5B8];
  *(void *)(v12 + 56) = MEMORY[0x263F8D538];
  *(void *)(v12 + 64) = v13;
  *(double *)(v12 + 32) = v14 * 1000.0;
  uint64_t v32 = sub_24B6827F0();
  unint64_t v16 = v15;
  uint64_t v17 = sub_24B57CC7C();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v17, v5);
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_24B6824B0();
  os_log_type_t v19 = sub_24B682B10();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v30 = v8;
    uint64_t v21 = a2;
    unint64_t v22 = a3;
    uint64_t v23 = v20;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v31 = v9;
    uint64_t v25 = v24;
    uint64_t v35 = v24;
    *(_DWORD *)uint64_t v23 = 136380931;
    uint64_t v29 = v5;
    uint64_t v34 = sub_24B5627B8(v21, v22, &v35);
    uint64_t v26 = v33;
    sub_24B682CD0();
    *(_WORD *)(v23 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_24B5627B8(v32, v16, &v35);
    sub_24B682CD0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24B55E000, v18, v19, "=== ObjectCaptureSession.%{private}s takes CMTime time = %{public}s ms ===", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v25, -1, -1);
    MEMORY[0x24C5D6C00](v23, -1, -1);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v30, v29);
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v11, v31);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v11, v9);
  }
}

void sub_24B63A7F8(void *a1)
{
  uint64_t v2 = v1;
  unint64_t v80 = a1;
  uint64_t v3 = sub_24B6824D0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)v73 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)v73 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  unint64_t v16 = (char *)v73 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  os_log_type_t v19 = (char *)v73 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)v73 - v20;
  unint64_t v22 = (float32x4_t *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_tapPosition);
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_tapPosition + 33))
  {
    uint64_t v23 = sub_24B57CC7C();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v23, v3);
    uint64_t v24 = sub_24B6824B0();
    os_log_type_t v25 = sub_24B682B20();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = v3;
      uint64_t v28 = swift_slowAlloc();
      *(void *)&v84[0] = v28;
      *(_DWORD *)uint64_t v26 = 136380675;
      *(void *)&v83[0] = sub_24B5627B8(0xD00000000000002BLL, 0x800000024B6910D0, (uint64_t *)v84);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v24, v25, "ObjectCaptureSession.%{private}s: Failed to start voxel integration at tap point, tap point is nil!", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v28, -1, -1);
      MEMORY[0x24C5D6C00](v26, -1, -1);

      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v27);
      return;
    }

    uint64_t v45 = *(void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v46 = v7;
LABEL_17:
    v45(v46, v3);
    return;
  }
  if (v22[2].i8[0])
  {
    uint64_t v47 = sub_24B57CC7C();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v10, v47, v3);
    os_log_type_t v48 = sub_24B6824B0();
    os_log_type_t v49 = sub_24B682B20();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      uint64_t v51 = v3;
      uint64_t v52 = swift_slowAlloc();
      *(void *)&v84[0] = v52;
      *(_DWORD *)uint64_t v50 = 136380675;
      *(void *)&v83[0] = sub_24B5627B8(0xD00000000000002BLL, 0x800000024B6910D0, (uint64_t *)v84);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v48, v49, "ObjectCaptureSession.%{private}s: Failed to start voxel integration at tap point, tap point in world is nil!", v50, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v52, -1, -1);
      MEMORY[0x24C5D6C00](v50, -1, -1);

      (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v51);
      return;
    }

    uint64_t v45 = *(void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v46 = v10;
    goto LABEL_17;
  }
  float32x4_t v29 = vsubq_f32(v22[1], *(float32x4_t *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurfaceObjectOrigin));
  float32x4_t v30 = vmulq_f32(v29, v29);
  if (sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v30, 2), vaddq_f32(v30, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v30.f32, 1))).f32[0]) <= 0.3)
  {
    uint64_t v53 = sub_24B57CC7C();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v13, v53, v3);
    uint64_t v54 = sub_24B6824B0();
    os_log_type_t v55 = sub_24B682B30();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = swift_slowAlloc();
      uint64_t v79 = v3;
      uint64_t v57 = (uint8_t *)v56;
      uint64_t v58 = swift_slowAlloc();
      *(void *)&v84[0] = v58;
      *(_DWORD *)uint64_t v57 = 136380675;
      *(void *)&v83[0] = sub_24B5627B8(0xD00000000000002BLL, 0x800000024B6910D0, (uint64_t *)v84);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v54, v55, "ObjectCaptureSession.%{private}s: New tap point is too close to the old tap point, not restarting voxel integration!", v57, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v58, -1, -1);
      MEMORY[0x24C5D6C00](v57, -1, -1);

      (*(void (**)(char *, uint64_t))(v4 + 8))(v13, v79);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v4 + 8))(v13, v3);
    }
LABEL_41:
    *(unsigned char *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldRestartVoxelIntegration) = 0;
    return;
  }
  float32x4_t v78 = v22[1];
  sub_24B62B340();
  float32x4_t v31 = vsubq_f32(*(float32x4_t *)((char *)v80 + *(int *)(type metadata accessor for OCCaptureData(0) + 40) + 96), v78);
  float32x4_t v32 = vmulq_f32(v31, v31);
  float v33 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v32, 2), vaddq_f32(v32, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v32.f32, 1))).f32[0]);
  uint64_t v34 = sub_24B57CC7C();
  uint64_t v35 = v4 + 16;
  uint64_t v76 = *(void (**)(char *))(v4 + 16);
  uint64_t v77 = v34;
  v76(v21);
  unint64_t v36 = sub_24B6824B0();
  os_log_type_t v37 = sub_24B682B30();
  BOOL v38 = os_log_type_enabled(v36, v37);
  uint64_t v79 = v3;
  if (v38)
  {
    uint64_t v39 = swift_slowAlloc();
    uint64_t v74 = v4 + 16;
    uint64_t v40 = v39;
    uint64_t v75 = (void (*)(void, void))swift_slowAlloc();
    *(void *)&v84[0] = v75;
    *(_DWORD *)uint64_t v40 = 136380931;
    v73[1] = v40 + 4;
    *(void *)&v83[0] = sub_24B5627B8(0xD00000000000002BLL, 0x800000024B6910D0, (uint64_t *)v84);
    sub_24B682CD0();
    *(_WORD *)(v40 + 12) = 2050;
    *(double *)uint64_t v83 = v33;
    uint64_t v3 = v79;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v36, v37, "ObjectCaptureSession.%{private}s: Camera to tap point distance = %{public}fm", (uint8_t *)v40, 0x16u);
    uint64_t v41 = v75;
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v41, -1, -1);
    uint64_t v42 = v40;
    uint64_t v35 = v74;
    MEMORY[0x24C5D6C00](v42, -1, -1);
  }

  uint64_t v43 = *(void (**)(char *, uint64_t))(v4 + 8);
  v43(v21, v3);
  if (v33 <= 0.0)
  {
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  if (v33 > 0.5)
  {
    if (v33 <= 5.0)
    {
      float v59 = (float)(-1.0 / powf(2.5, v33 + 3.8)) + 0.03;
      goto LABEL_23;
    }
    int v44 = 1022739087;
  }
  else
  {
    int v44 = 1008981770;
  }
  float v59 = *(float *)&v44;
LABEL_23:
  if (v59 < 0.00999 || v59 > 0.03001) {
    goto LABEL_43;
  }
  float v60 = 0.75;
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isToFSensorTypePeridot))
  {
LABEL_34:
    sub_24B610448((uint64_t)v84, (__n128)v78, v59, v60);
    v83[6] = v84[6];
    v83[7] = v84[7];
    v83[8] = v84[8];
    v83[2] = v84[2];
    v83[3] = v84[3];
    v83[4] = v84[4];
    v83[5] = v84[5];
    v83[0] = v84[0];
    v83[1] = v84[1];
    nullsub_1(v83);
    sub_24B56CF38((uint64_t)v83, v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurfaceConfig, &qword_2697CCA08);
    BOOL v62 = sub_24B62F564(v84);
    uint64_t v75 = (void (*)(void, void))v43;
    if (!v62)
    {
      ((void (*)(char *, uint64_t, uint64_t))v76)(v19, v77, v3);
      uint64_t v63 = sub_24B6824B0();
      os_log_type_t v64 = sub_24B682B20();
      if (os_log_type_enabled(v63, v64))
      {
        uint64_t v65 = (uint8_t *)swift_slowAlloc();
        uint64_t v66 = swift_slowAlloc();
        uint64_t v82 = v66;
        uint64_t v74 = v35;
        *(_DWORD *)uint64_t v65 = 136380675;
        v78.i64[0] = (uint64_t)(v65 + 4);
        uint64_t v81 = sub_24B5627B8(0xD00000000000002BLL, 0x800000024B6910D0, &v82);
        sub_24B682CD0();
        _os_log_impl(&dword_24B55E000, v63, v64, "ObjectCaptureSession.%{private}s: Failed to start voxel integration at tap point!", v65, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v66, -1, -1);
        uint64_t v67 = v65;
        uint64_t v3 = v79;
        MEMORY[0x24C5D6C00](v67, -1, -1);
      }

      uint64_t v43 = (void (*)(char *, uint64_t))v75;
      v75(v19, v3);
    }
    uint64_t v68 = v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_voxelHashingRestartTime;
    *(void *)uint64_t v68 = *v80;
    *(unsigned char *)(v68 + 8) = 0;
    ((void (*)(char *, uint64_t, uint64_t))v76)(v16, v77, v3);
    uint64_t v69 = sub_24B6824B0();
    os_log_type_t v70 = sub_24B682B30();
    if (os_log_type_enabled(v69, v70))
    {
      uint64_t v71 = (uint8_t *)swift_slowAlloc();
      uint64_t v72 = swift_slowAlloc();
      uint64_t v82 = v72;
      *(_DWORD *)uint64_t v71 = 136380675;
      uint64_t v81 = sub_24B5627B8(0xD00000000000002BLL, 0x800000024B6910D0, &v82);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v69, v70, "ObjectCaptureSession.%{private}s: Successfully restarted voxel integration at tap point.", v71, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v72, -1, -1);
      MEMORY[0x24C5D6C00](v71, -1, -1);

      v75(v16, v79);
    }
    else
    {

      v43(v16, v3);
    }
    goto LABEL_41;
  }
  if (v33 > 0.5)
  {
    if (v33 <= 5.0)
    {
      float v60 = (float)(1.0 / (float)(exp2f(v33 + v33) * 3.0)) + 0.8;
      goto LABEL_32;
    }
    int v61 = 1061997773;
  }
  else
  {
    int v61 = 1064849900;
  }
  float v60 = *(float *)&v61;
LABEL_32:
  if (v60 >= 0.79999 && v60 <= 0.97001) {
    goto LABEL_34;
  }
LABEL_44:
  __break(1u);
}

uint64_t sub_24B63B3D0(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)&long long v69 = a4;
  *(void *)&long long v68 = a3;
  uint64_t v163 = *MEMORY[0x263EF8340];
  uint64_t v10 = sub_24B6824D0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  unint64_t v16 = (char *)&v58 - v15;
  uint64_t v17 = (void *)a1[2];
  if (!v17 || (uint64_t v18 = (void *)a1[3]) == 0 || !a1[4])
  {
    uint64_t v31 = sub_24B57CC7C();
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v31, v10);
    float32x4_t v32 = sub_24B6824B0();
    os_log_type_t v33 = sub_24B682B20();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      *(void *)&v155[0] = v35;
      *(_DWORD *)uint64_t v34 = 136380675;
      *(void *)&long long v119 = sub_24B5627B8(0xD00000000000008FLL, 0x800000024B691140, (uint64_t *)v155);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v32, v33, "ObjectCaptureSession.%{private}s: Invalid depth, confidence or pointcloud input!", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v35, -1, -1);
      MEMORY[0x24C5D6C00](v34, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    return 0;
  }
  uint64_t v19 = a1[11];
  char v20 = 0;
  int v21 = 1;
  switch(a2)
  {
    case 0:
      uint64_t v70 = 0;
      unint64_t v22 = v18;
      uint64_t v23 = v19;
      *(void *)&long long v69 = v17;
      id v24 = v22;
      LOBYTE(v155[0]) = BYTE4(a6) & 1;
      unint64_t v25 = *(void *)(v23 + 16);
      long long v26 = *MEMORY[0x263EF89A8];
      long long v27 = *(_OWORD *)(MEMORY[0x263EF89A8] + 32);
      long long v28 = *(_OWORD *)(MEMORY[0x263EF89A8] + 48);
      if ((a6 & 0x100000000) != 0) {
        goto LABEL_86;
      }
      if (*(float *)&a6 < 0.0) {
        goto LABEL_86;
      }
      long long v66 = *(_OWORD *)(MEMORY[0x263EF89A8] + 16);
      long long v67 = v26;
      long long v64 = v28;
      long long v65 = v27;
      sub_24B56CF38(a5, (uint64_t)&v119, &qword_2697CCD48);
      if (v126) {
        goto LABEL_86;
      }
      long long v62 = v120;
      long long v63 = v119;
      long long v60 = v122;
      long long v61 = v121;
      long long v58 = v124;
      long long v59 = v123;
      uint64_t v29 = v125;
      int v30 = DWORD2(v125);
      sub_24B56CF38(v68, (uint64_t)&v92, &qword_2697CC9A0);
      if (v96 == 1)
      {
LABEL_86:
        if (!HIDWORD(v25))
        {
          if (!OCPointCloudCreateWithRGB())
          {
LABEL_12:

            return v70;
          }
LABEL_11:
          uint64_t v70 = 0;
          goto LABEL_12;
        }
      }
      else
      {
        v155[0] = v63;
        v155[1] = v62;
        v155[2] = v61;
        v155[3] = v60;
        id v155[4] = v59;
        v155[5] = v58;
        uint64_t v156 = v29;
        int v157 = v30;
        int v158 = a6;
        long long v159 = v92;
        long long v160 = v93;
        long long v161 = v94;
        long long v162 = v95;
        if (!HIDWORD(v25))
        {
          if (!OCPointCloudCreateWithRGBAndPlaneClassification()) {
            goto LABEL_12;
          }
          goto LABEL_11;
        }
      }
      goto LABEL_82;
    case 1:
    case 3:
      goto LABEL_20;
    case 2:
      uint64_t v70 = 0;
      goto LABEL_22;
    case 4:
      uint64_t v37 = a1[11];
      BOOL v38 = (void *)a1[3];
      uint64_t v70 = 0;
      LODWORD(v67) = 2;
      goto LABEL_32;
    default:
      int v21 = 0;
      char v20 = 1;
LABEL_20:
      uint64_t v70 = 0;
      if ((a2 - 1) < 2)
      {
        if ((v20 & 1) == 0)
        {
LABEL_22:
          if ((a6 & 0x100000000) != 0) {
            goto LABEL_26;
          }
          if (*(float *)&a6 < 0.0) {
            goto LABEL_26;
          }
          sub_24B56CF38(a5, (uint64_t)&v146, &qword_2697CCD48);
          if (v154) {
            goto LABEL_26;
          }
          long long v66 = v147;
          long long v67 = v146;
          long long v64 = v149;
          long long v65 = v148;
          long long v62 = v151;
          long long v63 = v150;
          uint64_t v39 = v152;
          int v40 = v153;
          sub_24B56CF38(v68, (uint64_t)&v141, &qword_2697CC9A0);
          if (v145)
          {
LABEL_26:
            sub_24B66DE58((uint64_t)&v119);
          }
          else
          {
            long long v119 = v67;
            long long v120 = v66;
            long long v121 = v65;
            long long v122 = v64;
            long long v123 = v63;
            long long v124 = v62;
            *(void *)&long long v125 = v39;
            DWORD2(v125) = v40;
            LODWORD(v126) = a6;
            long long v127 = v141;
            long long v128 = v142;
            long long v129 = v143;
            long long v130 = v144;
            sub_24B66DE9C((uint64_t)&v119);
          }
          sub_24B56CF38((uint64_t)&v119, (uint64_t)v155, &qword_2697CCD38);
          sub_24B56CF38(v69, (uint64_t)&v136, &qword_2697CC9A0);
          if ((v140 & 1) != 0
            || (long long v69 = v136,
                long long v66 = v138,
                long long v67 = v137,
                long long v65 = v139,
                sub_24B56CF38(v68, (uint64_t)&v131, &qword_2697CC9A0),
                (v135 & 1) != 0))
          {
            sub_24B56BCBC((uint64_t)&v119);
          }
          else
          {
            long long v119 = v69;
            long long v120 = v67;
            long long v121 = v66;
            long long v122 = v65;
            long long v123 = v131;
            long long v124 = v132;
            long long v125 = v133;
            long long v126 = v134;
            sub_24B56D164((uint64_t)&v119);
          }
          sub_24B56CF38((uint64_t)&v119, (uint64_t)v118, &qword_2697CCD40);
          sub_24B56CF38((uint64_t)v155, (uint64_t)&v119, &qword_2697CCD38);
          if (sub_24B66DE80((uint64_t)&v119) == 1) {
            goto LABEL_45;
          }
          long long v105 = v119;
          long long v106 = v120;
          long long v107 = v121;
          long long v108 = v122;
          long long v109 = v123;
          long long v110 = v124;
          uint64_t v111 = v125;
          int v112 = DWORD2(v125);
          int v113 = v126;
          long long v68 = v128;
          long long v69 = v127;
          long long v114 = v127;
          long long v115 = v128;
          long long v66 = v130;
          long long v67 = v129;
          long long v116 = v129;
          long long v117 = v130;
          sub_24B56CF38((uint64_t)v118, (uint64_t)&v92, &qword_2697CCD40);
          if (sub_24B56DEE8((uint64_t)&v92) == 1)
          {
LABEL_45:
            sub_24B56CF38((uint64_t)v155, (uint64_t)&v92, &qword_2697CCD38);
            if (sub_24B66DE80((uint64_t)&v92) == 1)
            {
              sub_24B56CF38((uint64_t)v118, (uint64_t)&v71, &qword_2697CCD40);
              if (sub_24B56DEE8((uint64_t)&v71) == 1)
              {
                type metadata accessor for OCCaptureData(0);
                if (!OCPointCloudCreateFromDenseDepth()) {
                  return v70;
                }
              }
              else
              {
                long long v62 = v74;
                long long v63 = v73;
                long long v68 = v78;
                long long v69 = v71;
                long long v66 = v77;
                long long v67 = v72;
                long long v64 = v75;
                long long v65 = v76;
                type metadata accessor for OCCaptureData(0);
                if (!OCPointCloudCreateFromDenseDepthWithBoundingBox()) {
                  return v70;
                }
              }
            }
            else
            {
              long long v68 = v102;
              long long v69 = v101;
              long long v66 = v104;
              long long v67 = v103;
              long long v79 = v92;
              long long v80 = v93;
              long long v81 = v94;
              long long v82 = v95;
              long long v83 = v96;
              long long v84 = v97;
              uint64_t v85 = v98;
              int v86 = v99;
              int v87 = v100;
              long long v88 = v101;
              long long v89 = v102;
              long long v90 = v103;
              long long v91 = v104;
              type metadata accessor for OCCaptureData(0);
              if (!OCPointCloudCreateFromDenseDepthWithPlaneClassification()) {
                return v70;
              }
            }
          }
          else
          {
            long long v64 = v93;
            long long v65 = v92;
            long long v62 = v95;
            long long v63 = v94;
            type metadata accessor for OCCaptureData(0);
            if (!OCPointCloudCreateFromDenseDepthWithPlaneClassificationAndBoundingBox()) {
              return v70;
            }
          }
          uint64_t v70 = 0;
          return 0;
        }
        __break(1u);
LABEL_81:
        __break(1u);
      }
      if (a2 != 3)
      {
        uint64_t v45 = v18;
        id v46 = v17;
        id v47 = v45;
        uint64_t v48 = sub_24B57CC7C();
        (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v16, v48, v10);
        os_log_type_t v49 = sub_24B6824B0();
        os_log_type_t v50 = sub_24B682B20();
        if (os_log_type_enabled(v49, v50))
        {
          *(void *)&long long v69 = v46;
          uint64_t v51 = swift_slowAlloc();
          *(void *)&long long v68 = v47;
          uint64_t v52 = (uint8_t *)v51;
          uint64_t v53 = swift_slowAlloc();
          *(void *)&v155[0] = v53;
          *(_DWORD *)uint64_t v52 = 136380675;
          *(void *)&long long v119 = sub_24B5627B8(0xD00000000000008FLL, 0x800000024B691140, (uint64_t *)v155);
          sub_24B682CD0();
          _os_log_impl(&dword_24B55E000, v49, v50, "ObjectCaptureSession.%{private}s: Invalid point type!", v52, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24C5D6C00](v53, -1, -1);
          MEMORY[0x24C5D6C00](v52, -1, -1);
        }
        else
        {
        }
        (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
        return 0;
      }
      uint64_t v37 = v19;
      BOOL v38 = v18;
      LODWORD(v67) = v21;
      if (v20) {
        goto LABEL_81;
      }
LABEL_32:
      *(void *)&long long v66 = v17;
      id v41 = v38;
      LOBYTE(v155[0]) = BYTE4(a6) & 1;
      unint64_t v42 = *(void *)(v37 + 16);
      if ((a6 & 0x100000000) != 0) {
        goto LABEL_36;
      }
      if (*(float *)&a6 < 0.0) {
        goto LABEL_36;
      }
      sub_24B56CF38(a5, (uint64_t)&v146, &qword_2697CCD48);
      if (v154) {
        goto LABEL_36;
      }
      long long v64 = v147;
      long long v65 = v146;
      long long v62 = v149;
      long long v63 = v148;
      long long v60 = v151;
      long long v61 = v150;
      uint64_t v43 = v152;
      int v44 = v153;
      sub_24B56CF38(v68, (uint64_t)&v141, &qword_2697CC9A0);
      if (v145)
      {
LABEL_36:
        sub_24B66DE58((uint64_t)&v119);
      }
      else
      {
        long long v119 = v65;
        long long v120 = v64;
        long long v121 = v63;
        long long v122 = v62;
        long long v123 = v61;
        long long v124 = v60;
        *(void *)&long long v125 = v43;
        DWORD2(v125) = v44;
        LODWORD(v126) = a6;
        long long v127 = v141;
        long long v128 = v142;
        long long v129 = v143;
        long long v130 = v144;
        sub_24B66DE9C((uint64_t)&v119);
      }
      sub_24B56CF38((uint64_t)&v119, (uint64_t)v155, &qword_2697CCD38);
      sub_24B56CF38(v69, (uint64_t)&v136, &qword_2697CC9A0);
      if ((v140 & 1) != 0
        || (long long v69 = v136,
            long long v64 = v138,
            long long v65 = v137,
            long long v63 = v139,
            sub_24B56CF38(v68, (uint64_t)&v131, &qword_2697CC9A0),
            (v135 & 1) != 0))
      {
        sub_24B56BCBC((uint64_t)&v119);
      }
      else
      {
        long long v119 = v69;
        long long v120 = v65;
        long long v121 = v64;
        long long v122 = v63;
        long long v123 = v131;
        long long v124 = v132;
        long long v125 = v133;
        long long v126 = v134;
        sub_24B56D164((uint64_t)&v119);
      }
      sub_24B56CF38((uint64_t)&v119, (uint64_t)v118, &qword_2697CCD40);
      sub_24B56CF38((uint64_t)v155, (uint64_t)&v119, &qword_2697CCD38);
      if (sub_24B66DE80((uint64_t)&v119) != 1)
      {
        long long v105 = v119;
        long long v106 = v120;
        long long v107 = v121;
        long long v108 = v122;
        long long v109 = v123;
        long long v110 = v124;
        uint64_t v111 = v125;
        int v112 = DWORD2(v125);
        int v113 = v126;
        long long v68 = v128;
        long long v69 = v127;
        long long v114 = v127;
        long long v115 = v128;
        long long v64 = v130;
        long long v65 = v129;
        long long v116 = v129;
        long long v117 = v130;
        sub_24B56CF38((uint64_t)v118, (uint64_t)&v92, &qword_2697CCD40);
        if (sub_24B56DEE8((uint64_t)&v92) != 1)
        {
          if (!HIDWORD(v42))
          {
            long long v60 = v94;
            long long v61 = v95;
            long long v62 = v92;
            long long v63 = v93;
            type metadata accessor for OCCaptureData(0);
            uint64_t v56 = (void *)v66;
            if (!OCPointCloudCreateFromSparseAndDenseDepthWithPlaneClassificationAndBoundingBox()) {
              goto LABEL_66;
            }
            goto LABEL_65;
          }
          goto LABEL_82;
        }
      }
      sub_24B56CF38((uint64_t)v155, (uint64_t)&v92, &qword_2697CCD38);
      if (sub_24B66DE80((uint64_t)&v92) == 1)
      {
        sub_24B56CF38((uint64_t)v118, (uint64_t)&v71, &qword_2697CCD40);
        int v54 = sub_24B56DEE8((uint64_t)&v71);
        unint64_t v55 = HIDWORD(v42);
        if (v54 == 1)
        {
          if (!v55)
          {
            type metadata accessor for OCCaptureData(0);
            uint64_t v56 = (void *)v66;
            int v57 = OCPointCloudCreateFromSparseAndDenseDepth();
            goto LABEL_64;
          }
        }
        else if (!v55)
        {
          long long v62 = v73;
          long long v63 = v74;
          long long v60 = v71;
          long long v61 = v72;
          long long v68 = v76;
          long long v69 = v75;
          long long v64 = v78;
          long long v65 = v77;
          type metadata accessor for OCCaptureData(0);
          uint64_t v56 = (void *)v66;
          if (!OCPointCloudCreateFromSparseAndDenseDepthWithBoundingBox()) {
            goto LABEL_66;
          }
          goto LABEL_65;
        }
LABEL_82:
        sub_24B682EE0();
        __break(1u);
        JUMPOUT(0x24B63C3E4);
      }
      long long v79 = v92;
      long long v80 = v93;
      long long v81 = v94;
      long long v82 = v95;
      long long v83 = v96;
      long long v84 = v97;
      uint64_t v85 = v98;
      int v86 = v99;
      int v87 = v100;
      long long v68 = v102;
      long long v69 = v101;
      long long v88 = v101;
      long long v89 = v102;
      long long v64 = v104;
      long long v65 = v103;
      long long v90 = v103;
      long long v91 = v104;
      if (HIDWORD(v42)) {
        goto LABEL_82;
      }
      type metadata accessor for OCCaptureData(0);
      uint64_t v56 = (void *)v66;
      int v57 = OCPointCloudCreateFromSparseAndDenseDepthWithPlaneClassification();
LABEL_64:
      if (v57) {
LABEL_65:
      }
        uint64_t v70 = 0;
LABEL_66:

      return v70;
  }
}

void sub_24B63C3F8(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24B682C80();
  v158.n128_u64[0] = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v146 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24B682C90();
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v146 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v160 = (uint64_t)&v146 - v11;
  uint64_t v12 = sub_24B6824D0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v166 = v12;
  uint64_t v167 = v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  unint64_t v16 = (char *)&v146 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v146 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  v155.n128_u64[0] = (unint64_t)&v146 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  v157.n128_u64[0] = (unint64_t)&v146 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  *(void *)&long long v156 = (char *)&v146 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  char v154 = (char *)&v146 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  *(void *)&long long v153 = (char *)&v146 - v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v31 = (char *)&v146 - v30;
  float32x4_t v32 = (float32x4_t *)(a1 + *(int *)(type metadata accessor for OCCaptureData(0) + 40));
  float32x4_t v33 = v32[4];
  float32x4_t v161 = v32[3];
  float32x4_t v162 = v33;
  float32x4_t v34 = v32[5];
  long long v159 = v32;
  float32x4_t v35 = v32[6];
  float32x4_t v163 = v34;
  float32x4_t v164 = v35;
  v165.n128_u64[0] = a1;
  unint64_t v36 = *(__CVBuffer **)(a1 + 8);
  CVPixelBufferGetWidth(v36);
  CVPixelBufferGetHeight(v36);
  (*(void (**)(id *__return_ptr))((*MEMORY[0x263F8EED0] & *v2) + 0x420))(v171);
  if (v171[0] == (id)15)
  {
    sub_24B65A19C((id)0xF);
    sub_24B65A19C((id)0xF);
    if (*((unsigned char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForPoseCorrectionUsingMobileSfM))
    {
      uint64_t v37 = sub_24B57CC7C();
      uint64_t v39 = v166;
      uint64_t v38 = v167;
      (*(void (**)(char *, uint64_t, uint64_t))(v167 + 16))(v19, v37, v166);
      int v40 = sub_24B6824B0();
      os_log_type_t v41 = sub_24B682B30();
      if (os_log_type_enabled(v40, v41))
      {
        unint64_t v42 = (uint8_t *)swift_slowAlloc();
        uint64_t v43 = (void *)swift_slowAlloc();
        v171[0] = v43;
        *(_DWORD *)unint64_t v42 = 136380675;
        v170[0] = sub_24B5627B8(0xD000000000000017, 0x800000024B691120, (uint64_t *)v171);
        sub_24B682CD0();
        _os_log_impl(&dword_24B55E000, v40, v41, "ObjectCaptureSession.%{private}s: Waiting for corrected pose from mobileSfM!", v42, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v43, -1, -1);
        MEMORY[0x24C5D6C00](v42, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v38 + 8))(v19, v39);
      return;
    }
    uint64_t v53 = *((unsigned __int8 *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureOptions);
    uint64_t v54 = v166;
    if (v53 != 2)
    {
      if ((v53 & 1) != 0 && *((unsigned char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForNewPlane) == 1)
      {
        uint64_t v55 = sub_24B57CC7C();
        uint64_t v56 = v167;
        (*(void (**)(char *, uint64_t, uint64_t))(v167 + 16))(v31, v55, v54);
        int v57 = sub_24B6824B0();
        os_log_type_t v58 = sub_24B682B30();
        if (os_log_type_enabled(v57, v58))
        {
          uint64_t v59 = v56;
          long long v60 = (uint8_t *)swift_slowAlloc();
          long long v61 = (void *)swift_slowAlloc();
          v171[0] = v61;
          *(_DWORD *)long long v60 = 136380675;
          v170[0] = sub_24B5627B8(0xD000000000000017, 0x800000024B691120, (uint64_t *)v171);
          sub_24B682CD0();
          _os_log_impl(&dword_24B55E000, v57, v58, "ObjectCaptureSession.%{private}s: Waiting for a new plane to be found under the object!", v60, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24C5D6C00](v61, -1, -1);
          MEMORY[0x24C5D6C00](v60, -1, -1);

          (*(void (**)(char *, uint64_t))(v59 + 8))(v31, v54);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v56 + 8))(v31, v54);
        }
        return;
      }
      uint64_t v63 = *(void *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform);
      uint64_t v62 = *(void *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 8);
      uint64_t v146 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureOptions;
      uint64_t v147 = v62;
      uint64_t v64 = *(void *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 16);
      uint64_t v149 = *(void *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 24);
      uint64_t v148 = *(void *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 32);
      *(void *)&long long v151 = *(void *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 40);
      *(void *)&long long v150 = *(void *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 48);
      *(void *)&long long v152 = *(void *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 56);
      char v65 = *((unsigned char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 64);
      unint64_t v66 = v158.n128_u64[0];
      uint64_t v67 = v160;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v158.n128_u64[0] + 56))(v160, 1, 2, v4);
      sub_24B659A1C(v67, (uint64_t)v10, MEMORY[0x263F8C968]);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v10, 2, v4))
      {
        (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v6, v10, v4);
        int v91 = (*(uint64_t (**)(char *, uint64_t))(v66 + 88))(v6, v4);
        if (v91 != *MEMORY[0x263F8C948] && v91 != *MEMORY[0x263F8C960])
        {
          (*(void (**)(char *, uint64_t))(v66 + 8))(v6, v4);
          uint64_t v92 = sub_24B57CC7C();
          uint64_t v70 = v166;
          uint64_t v69 = v167;
          unint64_t v71 = v155.n128_u64[0];
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v167 + 16))(v155.n128_u64[0], v92, v166);
          long long v72 = sub_24B6824B0();
          os_log_type_t v93 = sub_24B682B30();
          if (os_log_type_enabled(v72, v93))
          {
            long long v94 = (uint8_t *)swift_slowAlloc();
            long long v95 = (void *)swift_slowAlloc();
            v171[0] = v95;
            *(_DWORD *)long long v94 = 136380675;
            v170[0] = sub_24B5627B8(0xD000000000000017, 0x800000024B691120, (uint64_t *)v171);
            sub_24B682CD0();
            _os_log_impl(&dword_24B55E000, v72, v93, "ObjectCaptureSession.%{private}s: Object tracking state is not acceptable!", v94, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x24C5D6C00](v95, -1, -1);
            long long v76 = v94;
            goto LABEL_33;
          }
          goto LABEL_34;
        }
      }
      if (v65)
      {
        uint64_t v68 = sub_24B57CC7C();
        uint64_t v70 = v166;
        uint64_t v69 = v167;
        unint64_t v71 = v157.n128_u64[0];
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v167 + 16))(v157.n128_u64[0], v68, v166);
        long long v72 = sub_24B6824B0();
        os_log_type_t v73 = sub_24B682B30();
        if (os_log_type_enabled(v72, v73))
        {
          long long v74 = (uint8_t *)swift_slowAlloc();
          long long v75 = (void *)swift_slowAlloc();
          v171[0] = v75;
          *(_DWORD *)long long v74 = 136380675;
          v170[0] = sub_24B5627B8(0xD000000000000017, 0x800000024B691120, (uint64_t *)v171);
          sub_24B682CD0();
          _os_log_impl(&dword_24B55E000, v72, v73, "ObjectCaptureSession.%{private}s: Object transform is not available in area mode.", v74, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24C5D6C00](v75, -1, -1);
          long long v76 = v74;
LABEL_33:
          MEMORY[0x24C5D6C00](v76, -1, -1);
        }
LABEL_34:

        (*(void (**)(unint64_t, uint64_t))(v69 + 8))(v71, v70);
LABEL_62:
        sub_24B65EF80(v160, MEMORY[0x263F8C968]);
        return;
      }
      long long v77 = (float32x4_t *)((char *)v2
                          + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_worldToObjectTransformFromMobileSfM);
      uint64_t v78 = v167;
      if (*((unsigned char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_worldToObjectTransformFromMobileSfM + 64))
      {
        int v44 = (double *)v165.n128_u64[0];
        if (*((unsigned char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox + 64))
        {
LABEL_67:
          __break(1u);
          goto LABEL_68;
        }
        v79.i64[0] = v63;
        v79.i64[1] = v147;
        v80.i64[0] = v64;
        v80.i64[1] = v149;
        v81.i64[0] = v148;
        v81.i64[1] = v151;
        v82.i64[0] = v150;
        v82.i64[1] = v152;
        sub_24B5F8E64((uint64_t)v171, v161, v162, v163, v164, *(float32x4_t *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox), *(float32x4_t *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox + 16), *(float32x4_t *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox + 32), *(float32x4_t *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox + 48), v79, v80, v81, v82);
        id v84 = v171[0];
        id v83 = v171[1];
        uint64_t v86 = v172;
        uint64_t v85 = v173;
        uint64_t v88 = v174;
        uint64_t v87 = v175;
        uint64_t v89 = v177;
        uint64_t v90 = v176;
      }
      else
      {
        float32x4_t v96 = v77[1];
        float32x4_t v97 = v77[2];
        float32x4_t v98 = v77[3];
        float32x4_t v99 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(*v77, v161.f32[0]), v96, *(float32x2_t *)v161.f32, 1), v97, v161, 2), v98, v161, 3);
        float32x4_t v100 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(*v77, v162.f32[0]), v96, *(float32x2_t *)v162.f32, 1), v97, v162, 2), v98, v162, 3);
        float32x4_t v101 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(*v77, v163.f32[0]), v96, *(float32x2_t *)v163.f32, 1), v97, v163, 2), v98, v163, 3);
        float32x4_t v102 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(*v77, v164.f32[0]), v96, *(float32x2_t *)v164.f32, 1), v97, v164, 2), v98, v164, 3);
        id v83 = (id)v99.i64[1];
        id v84 = (id)v99.i64[0];
        uint64_t v85 = v100.i64[1];
        uint64_t v86 = v100.i64[0];
        uint64_t v87 = v101.i64[1];
        uint64_t v88 = v101.i64[0];
        uint64_t v89 = v102.i64[1];
        uint64_t v90 = v102.i64[0];
        int v44 = (double *)v165.n128_u64[0];
      }
      uint64_t v103 = *(void *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_voxelIntegrationManager);
      uint64_t v104 = v166;
      if (v103)
      {
        v105.n128_u64[0] = (unint64_t)v84;
        v105.n128_u64[1] = (unint64_t)v83;
        __n128 v165 = v105;
        v105.n128_u64[0] = v86;
        v105.n128_u64[1] = v85;
        __n128 v158 = v105;
        v105.n128_u64[0] = v88;
        v105.n128_u64[1] = v87;
        __n128 v157 = v105;
        v105.n128_u64[0] = v90;
        v105.n128_u64[1] = v89;
        __n128 v155 = v105;
        double v106 = *v44;
        long long v107 = *(uint64_t (**)(uint64_t, __n128, __n128, __n128, __n128, double))(*(void *)v103 + 176);
        uint64_t v108 = swift_retain();
        LOBYTE(v107) = v107(v108, v165, v158, v157, v155, v106);
        swift_release();
        if (v107)
        {
          uint64_t v109 = sub_24B57CC7C();
          uint64_t v110 = v156;
          (*(void (**)(void, uint64_t, uint64_t))(v78 + 16))(v156, v109, v104);
          uint64_t v111 = sub_24B6824B0();
          os_log_type_t v112 = sub_24B682B30();
          if (!os_log_type_enabled(v111, v112))
          {
LABEL_41:

            (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v110, v104);
            goto LABEL_62;
          }
          int v113 = (uint8_t *)swift_slowAlloc();
          long long v114 = (void *)swift_slowAlloc();
          v171[0] = v114;
          *(_DWORD *)int v113 = 136380675;
          v170[0] = sub_24B5627B8(0xD000000000000017, 0x800000024B691120, (uint64_t *)v171);
          sub_24B682CD0();
          long long v115 = "ObjectCaptureSession.%{private}s: Camera motion too fast, dropping frame!";
LABEL_40:
          _os_log_impl(&dword_24B55E000, v111, v112, v115, v113, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24C5D6C00](v114, -1, -1);
          MEMORY[0x24C5D6C00](v113, -1, -1);
          goto LABEL_41;
        }
        uint64_t v116 = *((unsigned __int8 *)v2 + v146);
        if (v116 != 2)
        {
          if (v116)
          {
            uint64_t v121 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_plane;
            long long v122 = *(void **)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_plane);
            if (!v122)
            {
              uint64_t v145 = sub_24B57CC7C();
              uint64_t v110 = v153;
              (*(void (**)(void, uint64_t, uint64_t))(v78 + 16))(v153, v145, v104);
              uint64_t v111 = sub_24B6824B0();
              os_log_type_t v112 = sub_24B682B20();
              if (!os_log_type_enabled(v111, v112)) {
                goto LABEL_41;
              }
              int v113 = (uint8_t *)swift_slowAlloc();
              long long v114 = (void *)swift_slowAlloc();
              v171[0] = v114;
              *(_DWORD *)int v113 = 136380675;
              v170[0] = sub_24B5627B8(0xD000000000000017, 0x800000024B691120, (uint64_t *)v171);
              sub_24B682CD0();
              long long v115 = "ObjectCaptureSession.%{private}s: Voxel integration is paused till a new plane under the object is available";
              goto LABEL_40;
            }
            long long v123 = v122;
            getRotatedPlaneTransform(_:)(v124, v123);
            long long v156 = v125;
            long long v152 = v127;
            long long v153 = v126;
            long long v151 = v128;
            long long v129 = *(void **)((char *)v2 + v121);
            if (v129)
            {
              objc_msgSend(v129, sel_center);
              long long v150 = v130;
              long long v131 = [(ARPlaneAnchor *)v123 planeExtent];
              [(ARPlaneExtent *)v131 width];
              uint64_t v149 = v132;

              long long v133 = [(ARPlaneAnchor *)v123 planeExtent];
              [(ARPlaneExtent *)v133 height];
              uint64_t v148 = v134;

              sub_24B56CF38((uint64_t)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurfaceConfig, (uint64_t)v170, &qword_2697CCA08);
              sub_24B56CF38((uint64_t)v170, (uint64_t)v171, &qword_2697CCA08);
              if (sub_24B66DE3C((uint64_t)v171) != 1)
              {
                char v135 = (long long *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox);
                if ((*((unsigned char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox + 64) & 1) == 0)
                {
                  *(void *)&long long v136 = v149;
                  *((void *)&v136 + 1) = v148;
                  float32x4_t v178 = v161;
                  float32x4_t v179 = v162;
                  float32x4_t v180 = v163;
                  float32x4_t v181 = v164;
                  char v182 = 0;
                  long long v137 = v135[1];
                  long long v183 = *v135;
                  long long v184 = v137;
                  long long v138 = v135[3];
                  long long v185 = v135[2];
                  long long v186 = v138;
                  char v187 = 0;
                  long long v188 = v156;
                  long long v189 = v153;
                  long long v190 = v152;
                  long long v191 = v151;
                  long long v192 = v150;
                  long long v193 = v136;
                  long long v194 = 0uLL;
                  char v195 = 0;
                  LOBYTE(v169) = 0;
                  uint64_t v120 = sub_24B63B3D0(v44, v172, (uint64_t)&v178, (uint64_t)&v183, (uint64_t)&v188, 1014350479);

                  goto LABEL_53;
                }
LABEL_73:
                __break(1u);
                return;
              }
LABEL_72:
              __break(1u);
              goto LABEL_73;
            }
LABEL_71:
            __break(1u);
            goto LABEL_72;
          }
          sub_24B56CF38((uint64_t)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurfaceConfig, (uint64_t)v170, &qword_2697CCA08);
          sub_24B56CF38((uint64_t)v170, (uint64_t)v171, &qword_2697CCA08);
          if (sub_24B66DE3C((uint64_t)v171) != 1)
          {
            long long v117 = (long long *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox);
            if ((*((unsigned char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox + 64) & 1) == 0)
            {
              float32x4_t v178 = v161;
              float32x4_t v179 = v162;
              float32x4_t v180 = v163;
              float32x4_t v181 = v164;
              char v182 = 0;
              long long v118 = v117[1];
              long long v183 = *v117;
              long long v184 = v118;
              long long v119 = v117[3];
              long long v185 = v117[2];
              long long v186 = v119;
              char v187 = 0;
              long long v188 = 0u;
              long long v189 = 0u;
              long long v190 = 0u;
              long long v191 = 0u;
              long long v192 = 0u;
              long long v193 = 0u;
              char v195 = 1;
              LOBYTE(v169) = 1;
              long long v194 = 0u;
              uint64_t v120 = sub_24B63B3D0(v44, v172, (uint64_t)&v178, (uint64_t)&v183, (uint64_t)&v188, 0x100000000);
LABEL_53:
              if (!v120) {
                goto LABEL_62;
              }
              swift_beginAccess();
              if (OCProxySurfaceExecutePipeline())
              {
                uint64_t v139 = sub_24B57CC7C();
                char v140 = v154;
                (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v154, v139, v104);
                long long v141 = sub_24B6824B0();
                os_log_type_t v142 = sub_24B682B20();
                if (os_log_type_enabled(v141, v142))
                {
                  long long v143 = (uint8_t *)swift_slowAlloc();
                  uint64_t v144 = swift_slowAlloc();
                  v170[0] = v144;
                  *(_DWORD *)long long v143 = 136380675;
                  uint64_t v169 = sub_24B5627B8(0xD000000000000017, 0x800000024B691120, v170);
                  sub_24B682CD0();
                  _os_log_impl(&dword_24B55E000, v141, v142, "ObjectCaptureSession.%{private}s: Failed to run voxel integration pipeline in scanning mode!", v143, 0xCu);
                  swift_arrayDestroy();
                  MEMORY[0x24C5D6C00](v144, -1, -1);
                  MEMORY[0x24C5D6C00](v143, -1, -1);

                  (*(void (**)(char *, uint64_t))(v78 + 8))(v154, v104);
                }
                else
                {

                  (*(void (**)(char *, uint64_t))(v78 + 8))(v140, v104);
                }
                OCPointCloudRelease();
                goto LABEL_62;
              }
              OCPointCloudRelease();
              sub_24B65EF80(v160, MEMORY[0x263F8C968]);
              goto LABEL_21;
            }
            goto LABEL_70;
          }
LABEL_69:
          __break(1u);
LABEL_70:
          __break(1u);
          goto LABEL_71;
        }
LABEL_68:
        __break(1u);
        goto LABEL_69;
      }
LABEL_66:
      __break(1u);
      goto LABEL_67;
    }
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  sub_24B65A19C(v171[0]);
  sub_24B65A19C((id)0xF);
  sub_24B56CF38((uint64_t)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurfaceConfig, (uint64_t)v170, &qword_2697CCA08);
  sub_24B56CF38((uint64_t)v170, (uint64_t)v171, &qword_2697CCA08);
  if (sub_24B66DE3C((uint64_t)v171) == 1)
  {
    __break(1u);
    goto LABEL_65;
  }
  long long v183 = 0u;
  long long v184 = 0u;
  long long v185 = 0u;
  long long v186 = 0u;
  char v187 = 1;
  long long v188 = 0u;
  long long v189 = 0u;
  long long v190 = 0u;
  long long v191 = 0u;
  long long v192 = 0u;
  long long v193 = 0u;
  char v195 = 1;
  v178.i8[0] = 1;
  long long v194 = 0u;
  int v44 = (double *)v165.n128_u64[0];
  uint64_t v45 = sub_24B63B3D0(v165.n128_u64[0], v172, (uint64_t)&v183, (uint64_t)&v183, (uint64_t)&v188, 0x100000000);
  uint64_t v46 = v167;
  if (!v45) {
    return;
  }
  swift_beginAccess();
  if (OCProxySurfaceExecutePipeline())
  {
    uint64_t v47 = sub_24B57CC7C();
    uint64_t v48 = v166;
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v16, v47, v166);
    os_log_type_t v49 = sub_24B6824B0();
    os_log_type_t v50 = sub_24B682B20();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = (uint8_t *)swift_slowAlloc();
      uint64_t v52 = swift_slowAlloc();
      uint64_t v169 = v52;
      *(_DWORD *)uint64_t v51 = 136380675;
      uint64_t v168 = sub_24B5627B8(0xD000000000000017, 0x800000024B691120, &v169);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v49, v50, "ObjectCaptureSession.%{private}s: Failed to run voxel integration pipeline in scene mode!", v51, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v52, -1, -1);
      MEMORY[0x24C5D6C00](v51, -1, -1);

      (*(void (**)(char *, uint64_t))(v167 + 8))(v16, v48);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v46 + 8))(v16, v48);
    }
    OCPointCloudRelease();
    return;
  }
  OCPointCloudRelease();
LABEL_21:
  if ((*((unsigned char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_voxelHashingRestartTime + 8) & 1) != 0
    || *v44 - *(double *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_voxelHashingRestartTime) > 1.0)
  {
    sub_24B63E80C();
  }
}

void sub_24B63D96C(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  uint64_t v2 = v1;
  uint64_t v3 = sub_24B6824D0();
  uint64_t v152 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v127 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v127 - v7;
  uint64_t v9 = (void *)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pointCloud);
  swift_beginAccess();
  uint64_t v10 = *v9;
  if (*v9)
  {
    uint64_t v156 = v3;
    *(void *)&long long v157 = v8;
    unint64_t v11 = v9[1];
    uint64_t v12 = v9[2];
    uint64_t v149 = v9[3];
    *(void *)&long long v155 = v9[4];
    uint64_t v150 = v9[5];
    long long v151 = v6;
    *(void *)&long long v153 = v9[6];
    uint64_t v13 = v9[8];
    *(void *)&long long v154 = v9[7];
    uint64_t v15 = v9[9];
    uint64_t v14 = v9[10];
    uint64_t v16 = v9[11];
    swift_retain();
    swift_retain();
    swift_retain();
    if (sub_24B61E628())
    {
      sub_24B659B3C(v10);
      uint64_t v2 = v1;
      uint64_t v3 = v156;
      uint64_t v8 = (char *)v157;
    }
    else
    {
      unint64_t v146 = v16;
      unint64_t v147 = v15;
      unint64_t v142 = v11;
      unint64_t v143 = v14;
      unint64_t v148 = v13;
      uint64_t v144 = v12;
      unint64_t v145 = v10;
      unint64_t v17 = v150;
      (*(void (**)(id *__return_ptr))((*MEMORY[0x263F8EED0] & *v1) + 0x420))(v175);
      if (v175[0] == (id)15)
      {
        sub_24B65A19C((id)0xF);
        sub_24B65A19C((id)0xF);
        v141.n128_u64[0] = *v9;
        v140.n128_u64[0] = v9[1];
        v139.n128_u64[0] = v9[2];
        unint64_t v18 = v9[3];
        long long v137 = (uint64_t (*)())v9[4];
        v138.n128_u64[0] = v18;
        uint64_t v19 = v9[5];
        uint64_t v135 = v9[6];
        uint64_t v136 = v19;
        uint64_t v20 = v9[8];
        uint64_t v134 = v9[7];
        uint64_t v22 = v9[9];
        uint64_t v21 = v9[10];
        uint64_t v23 = v1;
        uint64_t v24 = (char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_currentFrame;
        uint64_t v25 = v9[11];
        swift_beginAccess();
        uint64_t v26 = type metadata accessor for ObjectCaptureSession.Frame(0);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v24, 1, v26) == 1)
        {
LABEL_52:
          __break(1u);
          goto LABEL_53;
        }
        uint64_t v27 = &v24[*(int *)(v26 + 48)];
        uint64_t v29 = *(void *)v27;
        uint64_t v28 = *((void *)v27 + 1);
        uint64_t v132 = *((void *)v27 + 2);
        uint64_t v133 = v28;
        uint64_t v30 = *((void *)v27 + 3);
        uint64_t v130 = *((void *)v27 + 4);
        uint64_t v131 = v30;
        uint64_t v31 = *((void *)v27 + 5);
        uint64_t v128 = *((void *)v27 + 7);
        uint64_t v129 = v31;
        long long v127 = *((_OWORD *)v27 + 4);
        uint64_t v32 = v141.n128_u64[0];
        unint64_t v33 = v140.n128_u64[0];
        *(void *)uint64_t v27 = v141.n128_u64[0];
        *((void *)v27 + 1) = v33;
        float32x4_t v35 = v137;
        unint64_t v34 = v138.n128_u64[0];
        *((void *)v27 + 2) = v139.n128_u64[0];
        *((void *)v27 + 3) = v34;
        uint64_t v37 = v135;
        uint64_t v36 = v136;
        *((void *)v27 + 4) = v35;
        *((void *)v27 + 5) = v36;
        uint64_t v38 = v134;
        *((void *)v27 + 6) = v37;
        *((void *)v27 + 7) = v38;
        *((void *)v27 + 8) = v20;
        *((void *)v27 + 9) = v22;
        *((void *)v27 + 10) = v21;
        *((void *)v27 + 11) = v25;
        sub_24B659AEC(v32);
        sub_24B659B3C(v29);
        uint64_t v3 = v156;
        uint64_t v8 = (char *)v157;
        unint64_t v39 = v154;
        unint64_t v40 = v150;
      }
      else
      {
        uint64_t v23 = v1;
        sub_24B65A19C(v175[0]);
        sub_24B65A19C((id)0xF);
        unint64_t v40 = v17;
        uint64_t v3 = v156;
        uint64_t v8 = (char *)v157;
        unint64_t v39 = v154;
      }
      v41.n128_u64[0] = v155;
      v41.n128_u64[1] = v40;
      __n128 v141 = v41;
      v41.n128_u64[0] = v153;
      v41.n128_u64[1] = v39;
      __n128 v140 = v41;
      v41.n128_u64[0] = v148;
      v41.n128_u64[1] = v147;
      __n128 v139 = v41;
      v41.n128_u64[0] = v143;
      v41.n128_u64[1] = v146;
      __n128 v138 = v41;
      unint64_t v42 = v23;
      if (*((unsigned char *)v23 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugSurfaceGeometryData) == 1)
      {
        unint64_t v43 = v40;
        uint64_t v150 = (uint64_t)v42;
        int v44 = sub_24B61DFE0();
        uint64_t v46 = v45;
        uint64_t v47 = type metadata accessor for ObjectCaptureSession.Frame(0);
        uint64_t v48 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 48);
        if (v48(v46, 1, v47) == 1)
        {
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
          goto LABEL_55;
        }
        os_log_type_t v49 = (_OWORD *)(v46 + *(int *)(v47 + 52));
        sub_24B56CF38((uint64_t)v49, (uint64_t)v174, (uint64_t *)&unk_2697CC9B0);
        sub_24B56CF38((uint64_t)v174, (uint64_t)v175, (uint64_t *)&unk_2697CC9B0);
        if (sub_24B66DE00((uint64_t)v175) != 1)
        {
          sub_24B5F96D8(v145, 0, (simd_float4 *)v173);
          simd_float4 v50 = v173[0].transform.columns[0];
          simd_float4 v51 = v173[0].transform.columns[1];
          simd_float4 v52 = v173[0].transform.columns[2];
          simd_float4 v53 = v173[0].transform.columns[3];
          v49[5] = *(_OWORD *)&v173[0].voxels._rawValue;
          v49[6] = v50;
          v49[7] = v51;
          v49[8] = v52;
          v49[9] = v53;
          swift_bridgeObjectRelease();
        }
        ((void (*)(unsigned char *, void))v44)(v172, 0);
        uint64_t v54 = sub_24B61DFE0();
        uint64_t v56 = v55;
        if (v48(v55, 1, v47) == 1) {
          goto LABEL_54;
        }
        uint64_t v57 = v56 + *(int *)(v47 + 52);
        sub_24B56CF38(v57, (uint64_t)v172, (uint64_t *)&unk_2697CC9B0);
        sub_24B56CF38((uint64_t)v172, (uint64_t)v173, (uint64_t *)&unk_2697CC9B0);
        if (sub_24B66DE00((uint64_t)v173) != 1)
        {
          sub_24B5F9D1C(v145, 0, v170, v141, v140, v139, v138);
          __n128 v58 = v170[1];
          __n128 v59 = v170[2];
          __n128 v60 = v170[3];
          __n128 v61 = v170[4];
          *(__n128 *)(v57 + 256) = v170[0];
          *(__n128 *)(v57 + 272) = v58;
          *(__n128 *)(v57 + 288) = v59;
          *(__n128 *)(v57 + 304) = v60;
          *(__n128 *)(v57 + 320) = v61;
          swift_bridgeObjectRelease();
        }
        ((void (*)(unsigned char *, void))v54)(v169, 0);
        uint64_t v62 = sub_24B61DFE0();
        uint64_t v64 = v63;
        if (v48(v63, 1, v47) == 1) {
          goto LABEL_56;
        }
        uint64_t v65 = v64 + *(int *)(v47 + 52);
        sub_24B56CF38(v65, (uint64_t)v169, (uint64_t *)&unk_2697CC9B0);
        sub_24B56CF38((uint64_t)v169, (uint64_t)v170, (uint64_t *)&unk_2697CC9B0);
        int v66 = sub_24B66DE00((uint64_t)v170);
        uint64_t v3 = v156;
        if (v66 == 1)
        {
          ((void (*)(unsigned char *, void))v62)(v171, 0);
        }
        else
        {
          v158.n128_u64[0] = v145;
          v158.n128_u64[1] = v142;
          uint64_t v159 = v144;
          uint64_t v160 = v155;
          unint64_t v161 = v43;
          long long v137 = v62;
          uint64_t v162 = v153;
          uint64_t v163 = v154;
          unint64_t v164 = v148;
          unint64_t v165 = v147;
          unint64_t v166 = v143;
          unint64_t v167 = v146;
          sub_24B5F9FFC(&v158, (uint64_t)v168);
          uint64_t v67 = *(void *)(v65 + 336);
          long long v68 = v168[1];
          long long v69 = v168[2];
          long long v70 = v168[3];
          long long v71 = v168[4];
          *(_OWORD *)(v65 + 336) = v168[0];
          *(_OWORD *)(v65 + 352) = v68;
          *(_OWORD *)(v65 + 368) = v69;
          *(_OWORD *)(v65 + 384) = v70;
          *(_OWORD *)(v65 + 400) = v71;
          sub_24B65A094(v67);
          ((void (*)(unsigned char *, void))v137)(v171, 0);
          uint64_t v3 = v156;
        }
        uint64_t v8 = (char *)v157;
        unint64_t v42 = (void *)v150;
      }
      uint64_t v2 = v42;
      if (*((unsigned char *)v42 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__coverageEnabled) == 1)
      {
        long long v72 = sub_24B61DFE0();
        uint64_t v74 = v73;
        uint64_t v75 = type metadata accessor for ObjectCaptureSession.Frame(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 48))(v74, 1, v75) == 1)
        {
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
          return;
        }
        long long v76 = (_OWORD *)(v74 + *(int *)(v75 + 52));
        sub_24B56CF38((uint64_t)v76, (uint64_t)v174, (uint64_t *)&unk_2697CC9B0);
        sub_24B56CF38((uint64_t)v174, (uint64_t)v175, (uint64_t *)&unk_2697CC9B0);
        if (sub_24B66DE00((uint64_t)v175) == 1)
        {
          ((void (*)(unsigned char *, void))v72)(v172, 0);
          uint64_t v77 = v145;
        }
        else
        {
          uint64_t v78 = v145;
          sub_24B5F96D8(v145, 1, (simd_float4 *)v173);
          simd_float4 v79 = v173[0].transform.columns[0];
          simd_float4 v80 = v173[0].transform.columns[1];
          simd_float4 v81 = v173[0].transform.columns[2];
          simd_float4 v82 = v173[0].transform.columns[3];
          v76[27] = *(_OWORD *)&v173[0].voxels._rawValue;
          v76[28] = v79;
          v76[29] = v80;
          v76[30] = v81;
          v76[31] = v82;
          swift_bridgeObjectRelease();
          ((void (*)(unsigned char *, void))v72)(v172, 0);
          uint64_t v77 = v78;
        }
        sub_24B659B3C(v77);
        uint64_t v8 = (char *)v157;
      }
      else
      {
        sub_24B659B3C(v145);
      }
    }
    uint64_t v6 = v151;
  }
  if (*((unsigned char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugDebugVoxels) == 1)
  {
    id v83 = v6;
    swift_beginAccess();
    uint64_t DebugVoxelCloud = OCProxySurfaceGetDebugVoxelCloud();
    uint64_t v85 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurfaceDebugVoxelCloud;
    *(void *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurfaceDebugVoxelCloud) = DebugVoxelCloud;
    if (DebugVoxelCloud)
    {
      unsigned int v86 = OCVoxelCloudSize();
      uint64_t v87 = (char *)OCVoxelCloudVoxels();
      uint64_t v88 = sub_24B658BE4(v87, v86);
      OCVoxelCloudTransformMatrix();
      long long v157 = v89;
      long long v154 = v91;
      long long v155 = v90;
      long long v153 = v92;
      os_log_type_t v93 = sub_24B61DFE0();
      uint64_t v95 = v94;
      uint64_t v96 = type metadata accessor for ObjectCaptureSession.Frame(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 48))(v95, 1, v96) == 1)
      {
        __break(1u);
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }
      uint64_t v97 = v95 + *(int *)(v96 + 52);
      sub_24B56CF38(v97, (uint64_t)v174, (uint64_t *)&unk_2697CC9B0);
      sub_24B56CF38((uint64_t)v174, (uint64_t)v175, (uint64_t *)&unk_2697CC9B0);
      if (sub_24B66DE00((uint64_t)v175) == 1)
      {
        swift_release();
      }
      else
      {
        OCVoxelCloud.init(voxels:transform:)(v173, (Swift::OpaquePointer)v88, v98);
        simd_float4 v107 = v173[0].transform.columns[0];
        simd_float4 v108 = v173[0].transform.columns[1];
        uint64_t v109 = v173[0].transform.columns[2].i64[0];
        uint64_t v110 = v173[0].transform.columns[3].i64[1];
        uint64_t v111 = v173[0].transform.columns[2].i64[1];
        uint64_t v112 = v173[0].transform.columns[3].i64[0];
        *(void *)(v97 + 160) = v173[0].voxels._rawValue;
        *(void *)(v97 + 168) = 0;
        *(simd_float4 *)(v97 + 176) = v107;
        *(simd_float4 *)(v97 + 192) = v108;
        *(void *)(v97 + 208) = v109;
        *(void *)(v97 + 216) = v111;
        *(void *)(v97 + 224) = v112;
        *(void *)(v97 + 232) = v110;
        swift_bridgeObjectRelease();
      }
      ((void (*)(unsigned char *, void))v93)(v172, 0);
    }
    else
    {
      uint64_t v99 = sub_24B57CC7C();
      uint64_t v100 = v152;
      (*(void (**)(char *, uint64_t, uint64_t))(v152 + 16))(v8, v99, v3);
      float32x4_t v101 = sub_24B6824B0();
      float32x4_t v102 = v8;
      os_log_type_t v103 = sub_24B682B20();
      if (os_log_type_enabled(v101, v103))
      {
        uint64_t v104 = (uint8_t *)swift_slowAlloc();
        __n128 v105 = (void *)swift_slowAlloc();
        *(void *)&long long v157 = v102;
        double v106 = v105;
        v175[0] = v105;
        long long v151 = v6;
        uint64_t v156 = v3;
        *(_DWORD *)uint64_t v104 = 136380675;
        v174[0] = sub_24B5627B8(0xD000000000000010, 0x800000024B691100, (uint64_t *)v175);
        id v83 = v151;
        sub_24B682CD0();
        _os_log_impl(&dword_24B55E000, v101, v103, "ObjectCaptureSession.%{private}s: Failed to get debug voxelcloud from voxel integration pipeline!", v104, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v106, -1, -1);
        MEMORY[0x24C5D6C00](v104, -1, -1);

        (*(void (**)(void, uint64_t))(v152 + 8))(v157, v156);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v100 + 8))(v102, v3);
      }
      *(void *)((char *)v2 + v85) = 0;
    }
    uint64_t v6 = v83;
  }
  if (*((unsigned char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugTsdfDepth) != 1) {
    return;
  }
  swift_beginAccess();
  uint64_t DepthImage = OCProxySurfaceCreateDepthImage();
  if (!DepthImage)
  {
    uint64_t v121 = sub_24B57CC7C();
    uint64_t v122 = v152;
    (*(void (**)(char *, uint64_t, uint64_t))(v152 + 16))(v6, v121, v3);
    long long v123 = sub_24B6824B0();
    os_log_type_t v124 = sub_24B682B20();
    if (os_log_type_enabled(v123, v124))
    {
      long long v125 = (uint8_t *)swift_slowAlloc();
      long long v126 = (void *)swift_slowAlloc();
      v175[0] = v126;
      *(_DWORD *)long long v125 = 136380675;
      v174[0] = sub_24B5627B8(0xD000000000000010, 0x800000024B691100, (uint64_t *)v175);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v123, v124, "ObjectCaptureSession.%{private}s: Failed to get TSDF depth image from voxel integration pipeline!", v125, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v126, -1, -1);
      MEMORY[0x24C5D6C00](v125, -1, -1);

      (*(void (**)(char *, uint64_t))(v122 + 8))(v6, v3);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v122 + 8))(v6, v3);
    }
    return;
  }
  id v114 = (id)DepthImage;
  long long v115 = sub_24B61DFE0();
  uint64_t v117 = v116;
  uint64_t v118 = type metadata accessor for ObjectCaptureSession.Frame(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v118 - 8) + 48))(v117, 1, v118) == 1) {
    goto LABEL_51;
  }
  uint64_t v119 = v117 + *(int *)(v118 + 52);
  sub_24B56CF38(v119, (uint64_t)v174, (uint64_t *)&unk_2697CC9B0);
  sub_24B56CF38((uint64_t)v174, (uint64_t)v175, (uint64_t *)&unk_2697CC9B0);
  if (sub_24B66DE00((uint64_t)v175) != 1)
  {
    uint64_t v120 = *(void **)(v119 + 240);
    *(void *)(v119 + 240) = v114;
    id v114 = v114;
  }
  ((void (*)(CoreOC::OCVoxelCloud *, void))v115)(v173, 0);
}

void sub_24B63E80C()
{
  uint64_t v1 = v0;
  swift_beginAccess();
  OCProxySurfaceCreateResults();
  if (v25)
  {
    int v2 = v28;
    uint64_t v22 = v30;
    id v23 = v27;
    uint64_t v17 = v31;
    uint64_t v18 = v29;
    uint64_t v20 = v34;
    uint64_t v21 = v32;
    uint64_t v19 = v36;
    uint64_t v15 = v35;
    uint64_t v16 = v33;
    type metadata accessor for OCDataBuffer();
    id v14 = v25;
    uint64_t v3 = sub_24B681D6C((uint64_t)v14);
    uint64_t v4 = (uint64_t *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pointCloud);
    swift_beginAccess();
    uint64_t v5 = *v4;
    id v24 = v26;
    *uint64_t v4 = v3;
    v4[1] = 0;
    v4[2] = 0;
    v4[3] = 0;
    v4[4] = v18;
    v4[5] = v22;
    v4[6] = v17;
    v4[7] = v21;
    v4[8] = v16;
    v4[9] = v20;
    v4[10] = v15;
    v4[11] = v19;
    swift_retain();
    sub_24B659B3C(v5);
    if (v24)
    {
      uint64_t v6 = sub_24B681D6C((uint64_t)v24);
      uint64_t v8 = sub_24B61EB94();
      if (*v7)
      {
        v7[1] = v6;
        swift_retain();
        swift_release();
      }
      ((void (*)(id *, void))v8)(&v25, 0);
      swift_release();
    }
    if (v23)
    {
      id v9 = v23;
      uint64_t v10 = sub_24B681D6C((uint64_t)v9);
      uint64_t v11 = v1;
      uint64_t v13 = sub_24B61EB94();
      if (*v12)
      {
        void v12[2] = v10;
        swift_retain();
        swift_release();
      }
      ((void (*)(id *, void))v13)(&v25, 0);
      swift_release();

      swift_release();
    }
    else
    {

      swift_release();
      uint64_t v11 = v1;
    }

    if (*(unsigned char *)(v11 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__coverageEnabled) == 1) {
      *(_DWORD *)(v11 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_coverage) = v2;
    }
  }
  else
  {
  }
}

uint64_t sub_24B63EAD8(void *a1, float64x2_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_24B6824D0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)v31 - v14;
  (*(void (**)(id *__return_ptr, uint64_t))((*MEMORY[0x263F8EED0] & *a1) + 0x420))(v32, v13);
  if (v32[0] == (id)14)
  {
    sub_24B65A19C((id)0xE);
    sub_24B65A19C((id)0xE);
    if ((*((unsigned char *)a1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_tapPosition + 33) & 1) == 0)
    {
      int32x2_t v16 = vmovn_s64(vcgtq_f64((float64x2_t)vdupq_n_s64(0x3EE4F8B588E368F1uLL), vabdq_f64(*(float64x2_t *)((char *)a1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_tapPosition), *a2)));
      if (v16.i32[0] & v16.i32[1])
      {
        sub_24B56CF38(a3, (uint64_t)v32, &qword_2697CCE10);
        if (v33 == 1)
        {
          uint64_t v17 = sub_24B57CB70();
          (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v15, v17, v8);
          uint64_t v18 = sub_24B6824B0();
          os_log_type_t v19 = sub_24B682B20();
          if (os_log_type_enabled(v18, v19))
          {
            uint64_t v20 = (uint8_t *)swift_slowAlloc();
            uint64_t v21 = swift_slowAlloc();
            v31[0] = v21;
            *(_DWORD *)uint64_t v20 = 136380675;
            float32x4_t v31[9] = sub_24B5627B8(0xD000000000000059, 0x800000024B6914C0, v31);
            sub_24B682CD0();
            _os_log_impl(&dword_24B55E000, v18, v19, "ObjectCaptureSession.%{private}s: Failed to set bounding box!", v20, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x24C5D6C00](v21, -1, -1);
            MEMORY[0x24C5D6C00](v20, -1, -1);
          }

          uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v15, v8);
        }
        else
        {
          sub_24B56CF38(a3, (uint64_t)v31, &qword_2697CCE10);
          sub_24B61E7BC((uint64_t)v31);
          sub_24B56CF38(a4, (uint64_t)a1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maskingVoxelCloud, &qword_2697CCE18);
          sub_24B66E8B4(a4);
          uint64_t result = swift_bridgeObjectRelease();
        }
        goto LABEL_12;
      }
    }
  }
  else
  {
    sub_24B65A19C(v32[0]);
    sub_24B65A19C((id)0xE);
  }
  uint64_t v23 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v23, v8);
  id v24 = sub_24B6824B0();
  os_log_type_t v25 = sub_24B682B20();
  if (os_log_type_enabled(v24, v25))
  {
    id v26 = (uint8_t *)swift_slowAlloc();
    id v27 = (void *)swift_slowAlloc();
    v32[0] = v27;
    *(_DWORD *)id v26 = 136380675;
    v31[0] = sub_24B5627B8(0xD000000000000059, 0x800000024B6914C0, (uint64_t *)v32);
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v24, v25, "ObjectCaptureSession.%{private}s: Not running bounding box detection because ObjectCaptureSession is not in detecting state or the tap position has changed!", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v27, -1, -1);
    MEMORY[0x24C5D6C00](v26, -1, -1);
  }

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
LABEL_12:
  uint64_t v28 = *(void *)((char *)a1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maskingManager);
  if (v28)
  {
    uint64_t v29 = *(void (**)(uint64_t))(*(void *)v28 + 296);
    uint64_t v30 = swift_retain();
    v29(v30);
    return swift_release();
  }
  return result;
}

uint64_t sub_24B63EFAC()
{
  uint64_t v1 = sub_24B562F04(&qword_2697CCE30);
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v32 - v5;
  uint64_t v7 = (void *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_uuidToShotAnchorsMap);
  swift_beginAccess();
  uint64_t v8 = *v7;
  uint64_t v10 = (void *)(*v7 + 64);
  uint64_t v9 = *v10;
  uint64_t v34 = v7;
  uint64_t v35 = v10;
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v9;
  uint64_t v14 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession;
  int64_t v36 = (unint64_t)(v11 + 63) >> 6;
  int64_t v33 = v36 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v16 = 0;
  if (!v13) {
    goto LABEL_8;
  }
LABEL_6:
  unint64_t v19 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  unint64_t v20 = v19 | (v16 << 6);
  while (2)
  {
    uint64_t v21 = *(void *)(v8 + 48);
    uint64_t v22 = sub_24B682410();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v4, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v20, v22);
    uint64_t v23 = *(void *)(v8 + 56);
    uint64_t v24 = sub_24B562F04(&qword_2697CCE38);
    os_log_type_t v25 = *(void **)(v23 + 8 * v20);
    *(void *)&v4[*(int *)(v24 + 48)] = v25;
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v4, 0, 1, v24);
    id v26 = v25;
    while (1)
    {
      sub_24B56CF38((uint64_t)v4, (uint64_t)v6, &qword_2697CCE30);
      uint64_t v31 = sub_24B562F04(&qword_2697CCE38);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v6, 1, v31) == 1)
      {
        swift_release();
        *uint64_t v34 = MEMORY[0x263F8EE80];
        return swift_bridgeObjectRelease();
      }
      uint64_t v17 = *(void **)&v6[*(int *)(v31 + 48)];
      objc_msgSend(*(id *)(v0 + v14), sel_removeAnchor_, v17);

      uint64_t v18 = sub_24B682410();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v6, v18);
      if (v13) {
        goto LABEL_6;
      }
LABEL_8:
      int64_t v27 = v16 + 1;
      if (__OFADD__(v16, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v27 < v36)
      {
        unint64_t v28 = v35[v27];
        if (v28) {
          goto LABEL_11;
        }
        int64_t v29 = v16 + 2;
        ++v16;
        if (v27 + 1 < v36)
        {
          unint64_t v28 = v35[v29];
          if (v28) {
            goto LABEL_14;
          }
          int64_t v16 = v27 + 1;
          if (v27 + 2 < v36)
          {
            unint64_t v28 = v35[v27 + 2];
            if (v28)
            {
              v27 += 2;
              goto LABEL_11;
            }
            int64_t v29 = v27 + 3;
            int64_t v16 = v27 + 2;
            if (v27 + 3 < v36) {
              break;
            }
          }
        }
      }
LABEL_25:
      uint64_t v30 = sub_24B562F04(&qword_2697CCE38);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v4, 1, 1, v30);
      unint64_t v13 = 0;
    }
    unint64_t v28 = v35[v29];
    if (v28)
    {
LABEL_14:
      int64_t v27 = v29;
LABEL_11:
      unint64_t v13 = (v28 - 1) & v28;
      unint64_t v20 = __clz(__rbit64(v28)) + (v27 << 6);
      int64_t v16 = v27;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v27 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v27 >= v36)
    {
      int64_t v16 = v33;
      goto LABEL_25;
    }
    unint64_t v28 = v35[v27];
    ++v29;
    if (v28) {
      goto LABEL_11;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_24B63F38C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24B6825D0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v37 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24B682640();
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t v36 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v34 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24B6824D0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  int64_t v16 = sub_24B6824B0();
  os_log_type_t v17 = sub_24B682B30();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v33 = a1;
    uint64_t v19 = v18;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v32 = v7;
    uint64_t v30 = v20;
    aBlock[0] = v20;
    *(_DWORD *)uint64_t v19 = 136381187;
    uint64_t v38 = sub_24B5627B8(0xD000000000000037, 0x800000024B68F440, aBlock);
    uint64_t v31 = v3;
    sub_24B682CD0();
    *(_WORD *)(v19 + 12) = 1026;
    LODWORD(v38) = a2 & 1;
    sub_24B682CD0();
    *(_WORD *)(v19 + 18) = 2050;
    uint64_t v38 = v33;
    uint64_t v3 = v31;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v16, v17, "ObjectCaptureSession.%{private}s: Received flippable signal %{BOOL,public}d for sample id %{public}llu", (uint8_t *)v19, 0x1Cu);
    uint64_t v21 = v30;
    swift_arrayDestroy();
    uint64_t v7 = v32;
    MEMORY[0x24C5D6C00](v21, -1, -1);
    uint64_t v22 = v19;
    a1 = v33;
    MEMORY[0x24C5D6C00](v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v3;
  *(void *)(v23 + 24) = a1;
  *(unsigned char *)(v23 + 32) = a2 & 1;
  aBlock[4] = (uint64_t)sub_24B65FC98;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24B566C04;
  aBlock[3] = (uint64_t)&unk_26FE8EFD0;
  uint64_t v24 = _Block_copy(aBlock);
  id v25 = v3;
  id v26 = v34;
  sub_24B6825F0();
  uint64_t v38 = MEMORY[0x263F8EE78];
  sub_24B65D13C((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
  sub_24B562F04((uint64_t *)&unk_2697CC490);
  sub_24B5678F4((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
  int64_t v27 = v37;
  sub_24B682D80();
  MEMORY[0x24C5D4CD0](0, v26, v27, v24);
  _Block_release(v24);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v27, v6);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v26, v36);
  return swift_release();
}

void sub_24B63F884(uint64_t a1)
{
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x24C5D6CB0](a1 + 16);
  if (v6)
  {
    uint64_t v7 = (unsigned char *)v6;
    uint64_t v8 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v8, v2);
    uint64_t v9 = sub_24B6824B0();
    os_log_type_t v10 = sub_24B682B30();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v14 = v12;
      *(_DWORD *)uint64_t v11 = 136380675;
      v13[1] = sub_24B5627B8(0xD000000000000023, 0x800000024B691360, &v14);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v9, v10, "ObjectCaptureSession.%{private}s: Pose correction timer has expired, using the last consistent pose before pause.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v12, -1, -1);
      MEMORY[0x24C5D6C00](v11, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v7[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForPoseCorrectionUsingMobileSfM] = 0;
  }
}

uint64_t sub_24B63FAB0@<X0>(uint64_t a1@<X0>, int8x16_t *a2@<X8>)
{
  uint64_t v243 = a2;
  uint64_t v241 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  uint64_t v249 = *(void *)(v241 - 8);
  MEMORY[0x270FA5388](v241);
  uint64_t v213 = (uint64_t)&v203 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v227 = (int *)type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
  uint64_t v5 = MEMORY[0x270FA5388](v227);
  uint64_t v219 = (uint64_t)&v203 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v226 = (uint64_t)&v203 - v7;
  uint64_t v8 = sub_24B562F04(&qword_2697CCC90);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  unint64_t v221 = (unint64_t)&v203 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v220 = (char *)&v203 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v224 = (uint64_t)&v203 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v211 = (uint64_t)&v203 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v214 = (uint64_t)&v203 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v222 = (uint64_t)&v203 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v238 = (uint64_t)&v203 - v21;
  uint64_t v22 = sub_24B562F04(&qword_2697CC460);
  MEMORY[0x270FA5388](v22 - 8);
  long long v253 = (char *)&v203 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v258 = sub_24B682410();
  uint64_t v254 = *(void *)(v258 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v258);
  unint64_t v230 = (unint64_t)&v203 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v225 = (char *)&v203 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  int8x16_t v228 = (char *)&v203 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  unint64_t v216 = (unint64_t)&v203 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v217 = (char *)&v203 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  unint64_t v212 = (char *)&v203 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  char v223 = (char *)&v203 - v37;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  unint64_t v215 = (char *)&v203 - v39;
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  uint64_t v218 = (char *)&v203 - v41;
  MEMORY[0x270FA5388](v40);
  unint64_t v251 = (unint64_t)&v203 - v42;
  uint64_t v43 = sub_24B6824D0();
  uint64_t v44 = *(void *)(v43 - 8);
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  unint64_t v231 = (char *)&v203 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = MEMORY[0x270FA5388](v45);
  os_log_type_t v49 = (char *)&v203 - v48;
  simd_float4 v50 = (int8x16_t *)MEMORY[0x263EF89A8];
  uint64_t v260 = v2;
  uint64_t v259 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForPoseCorrectionUsingMobileSfM;
  BOOL v51 = *(unsigned char *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForPoseCorrectionUsingMobileSfM) == 1;
  uint64_t v234 = v47;
  uint64_t v233 = v44;
  if (v51)
  {
    uint64_t v52 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v49, v52, v43);
    simd_float4 v53 = sub_24B6824B0();
    os_log_type_t v54 = sub_24B682B30();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = (uint8_t *)swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      uint64_t v267 = v56;
      *(_DWORD *)uint64_t v55 = 136380675;
      v266[6] = sub_24B5627B8(0xD000000000000020, 0x800000024B691490, &v267);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v53, v54, "ObjectCaptureSession.%{private}s: Skipping shots before pause.", v55, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v56, -1, -1);
      MEMORY[0x24C5D6C00](v55, -1, -1);

      (*(void (**)(char *, uint64_t))(v233 + 8))(v49, v234);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v44 + 8))(v49, v43);
    }
  }
  int8x16_t v247 = *v50;
  int8x16_t v246 = v50[1];
  int8x16_t v245 = v50[2];
  int8x16_t v244 = v50[3];
  uint64_t v57 = a1 + 64;
  uint64_t v58 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v59 = -1;
  if (v58 < 64) {
    uint64_t v59 = ~(-1 << v58);
  }
  unint64_t v60 = v59 & *(void *)(a1 + 64);
  __n128 v61 = (uint64_t *)(v260 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotFlippableMap);
  uint64_t v255 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pauseTimeForPoseCorrection;
  unint64_t v62 = v260 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotIDToUUIDMap;
  uint64_t v63 = (uint64_t *)(v260 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_metadataMap);
  swift_bridgeObjectRetain();
  swift_beginAccess();
  unint64_t v257 = v62;
  swift_beginAccess();
  uint64_t v242 = v63;
  swift_beginAccess();
  uint64_t v248 = 0;
  int64_t v64 = 0;
  int64_t v65 = (unint64_t)(v58 + 63) >> 6;
  long long v256 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v254 + 56);
  uint64_t v252 = v254 + 16;
  uint64_t v250 = v254 + 48;
  v237 = (void (**)(unint64_t, uint64_t, uint64_t))(v254 + 32);
  int v240 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v249 + 56);
  long long v232 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v249 + 48);
  uint64_t v239 = (void (**)(unint64_t, uint64_t))(v254 + 8);
LABEL_9:
  uint64_t v66 = (uint64_t)v253;
  while (1)
  {
    if (v60)
    {
      unint64_t v67 = __clz(__rbit64(v60));
      v60 &= v60 - 1;
      unint64_t v68 = v67 | (v64 << 6);
      goto LABEL_26;
    }
    int64_t v69 = v64 + 1;
    if (__OFADD__(v64, 1))
    {
      __break(1u);
      goto LABEL_115;
    }
    if (v69 >= v65) {
      goto LABEL_109;
    }
    unint64_t v70 = *(void *)(v57 + 8 * v69);
    ++v64;
    if (!v70)
    {
      int64_t v64 = v69 + 1;
      if (v69 + 1 >= v65) {
        goto LABEL_109;
      }
      unint64_t v70 = *(void *)(v57 + 8 * v64);
      if (!v70)
      {
        int64_t v64 = v69 + 2;
        if (v69 + 2 >= v65) {
          goto LABEL_109;
        }
        unint64_t v70 = *(void *)(v57 + 8 * v64);
        if (!v70) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v60 = (v70 - 1) & v70;
    unint64_t v68 = __clz(__rbit64(v70)) + (v64 << 6);
LABEL_26:
    uint64_t v72 = *v61;
    if (*(void *)(*v61 + 16))
    {
      uint64_t v73 = *(void *)(*(void *)(a1 + 48) + 8 * v68);
      uint64_t v74 = (int8x16_t *)(*(void *)(a1 + 56) + (v68 << 6));
      int8x16_t v75 = *v74;
      int8x16_t v263 = v74[1];
      simd_float4 v264 = (simd_float4)v75;
      int8x16_t v262 = v74[2];
      int8x16_t v261 = v74[3];
      unint64_t v76 = sub_24B5D43DC(v73);
      if ((v77 & 1) != 0
        && *(unsigned char *)(*(void *)(v72 + 56) + v76) == 1
        && (*(unsigned char *)(v260 + v259) != 1 || v73 >= *(void *)(v260 + v255)))
      {
        uint64_t v78 = *(void *)v257;
        if (*(void *)(*(void *)v257 + 16) && (unint64_t v79 = sub_24B5D43DC(v73), (v80 & 1) != 0))
        {
          uint64_t v81 = *(void *)(v78 + 56);
          uint64_t v82 = v254;
          v235.i64[0] = *(void *)(v254 + 72);
          uint64_t v83 = v258;
          uint64_t v236 = *(void *)(v254 + 16);
          ((void (*)(uint64_t, unint64_t, uint64_t))v236)(v66, v81 + v235.i64[0] * v79, v258);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v82 + 56))(v66, 0, 1, v83);
          id v84 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48);
          unint64_t v62 = v251;
          if (v84(v66, 1, v83) == 1) {
            goto LABEL_38;
          }
          (*v237)(v62, v66, v83);
          uint64_t v85 = *v242;
          if (!*(void *)(*v242 + 16))
          {
            uint64_t v89 = v238;
            (*v240)(v238, 1, 1, v241);
LABEL_108:
            sub_24B5632A8(v89, &qword_2697CCC90);
            (*v239)(v62, v258);
            goto LABEL_9;
          }
          int64_t v229 = v65;
          swift_bridgeObjectRetain();
          unint64_t v86 = sub_24B59F008(v62);
          if (v87)
          {
            uint64_t v88 = v249;
            uint64_t v89 = v238;
            sub_24B659A1C(*(void *)(v85 + 56) + *(void *)(v249 + 72) * v86, v238, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
            long long v90 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v88 + 56);
            uint64_t v91 = v89;
            uint64_t v92 = 0;
          }
          else
          {
            long long v90 = *v240;
            uint64_t v89 = v238;
            uint64_t v91 = v238;
            uint64_t v92 = 1;
          }
          uint64_t v93 = v241;
          v210.i64[0] = (uint64_t)v90;
          v90(v91, v92, 1, v241);
          swift_bridgeObjectRelease();
          uint64_t v94 = *v232;
          int v95 = (*v232)(v89, 1, v93);
          int64_t v65 = v229;
          if (v95 == 1) {
            goto LABEL_108;
          }
          os_log_type_t v209 = (unsigned int (*)(uint64_t, uint64_t, unint64_t))v94;
          sub_24B5632A8(v89, &qword_2697CCC90);
          uint64_t v96 = *v242;
          if (!*(void *)(*v242 + 16)) {
            goto LABEL_120;
          }
          swift_bridgeObjectRetain();
          unint64_t v97 = sub_24B59F008(v62);
          uint64_t v66 = (uint64_t)v253;
          if (v98)
          {
            uint64_t v99 = v222;
            sub_24B659A1C(*(void *)(v96 + 56) + *(void *)(v249 + 72) * v97, v222, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
            uint64_t v100 = 0;
          }
          else
          {
            uint64_t v100 = 1;
            uint64_t v99 = v222;
          }
          unint64_t v62 = v241;
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v210.i64[0])(v99, v100, 1, v241);
          swift_bridgeObjectRelease();
          if (v209(v99, 1, v62) == 1) {
            goto LABEL_121;
          }
          uint64_t v101 = v226;
          sub_24B659A1C(v99 + *(int *)(v62 + 20), v226, type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera);
          sub_24B65EF80(v99, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
          uint64_t v207 = v227[11];
          if (*(void *)(*(void *)(v101 + v207) + 16) > 1uLL)
          {
            uint64_t v103 = v258;
          }
          else
          {
            float32x4_t v102 = (float32x4_t *)(v101 + v227[10]);
            uint64_t v103 = v258;
            if ((v102[4].i8[0] & 1) == 0)
            {
              float32x4_t v205 = *v102;
              float32x4_t v206 = v102[1];
              float32x4_t v208 = v102[2];
              float32x4_t v210 = v102[3];
              v268.columns[1] = (simd_float4)v263;
              v268.columns[0] = v264;
              v268.columns[2] = (simd_float4)v262;
              v268.columns[3] = (simd_float4)v261;
              simd_float4x4 v269 = __invert_f4(v268);
              float32x4_t v205 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v269.columns[0], v205.f32[0]), (float32x4_t)v269.columns[1], *(float32x2_t *)v205.f32, 1), (float32x4_t)v269.columns[2], v205, 2), (float32x4_t)v269.columns[3], v205, 3);
              float32x4_t v206 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v269.columns[0], v206.f32[0]), (float32x4_t)v269.columns[1], *(float32x2_t *)v206.f32, 1), (float32x4_t)v269.columns[2], v206, 2), (float32x4_t)v269.columns[3], v206, 3);
              float32x4_t v208 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v269.columns[0], v208.f32[0]), (float32x4_t)v269.columns[1], *(float32x2_t *)v208.f32, 1), (float32x4_t)v269.columns[2], v208, 2), (float32x4_t)v269.columns[3], v208, 3);
              float32x4_t v210 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v269.columns[0], v210.f32[0]), (float32x4_t)v269.columns[1], *(float32x2_t *)v210.f32, 1), (float32x4_t)v269.columns[2], v210, 2), (float32x4_t)v269.columns[3], v210, 3);
              float v104 = sub_24B5FADE8(v205, *(int32x2_t *)v206.f32, (int32x4_t)v208);
              float v105 = sub_24B5FAE50(*(double *)v205.i64, *(double *)v206.i64, *(double *)v208.i64, v210);
              uint64_t v106 = v103;
              simd_float4 v107 = (void (*)(char *, char *, uint64_t))v236;
              ((void (*)(char *, unint64_t, uint64_t))v236)(v218, v251, v106);
              unint64_t v62 = (unint64_t)v242;
              swift_beginAccess();
              simd_float4 v108 = v215;
              v107(v215, v218, v258);
              v210.i32[0] = swift_isUniquelyReferenced_nonNull_native();
              v107(v223, v108, v258);
              uint64_t v265 = *(void *)v62;
              uint64_t v109 = v265;
              *(void *)unint64_t v62 = 0x8000000000000000;
              unint64_t v111 = sub_24B59F008((uint64_t)v223);
              uint64_t v112 = *(void *)(v109 + 16);
              BOOL v113 = (v110 & 1) == 0;
              uint64_t v114 = v112 + v113;
              if (__OFADD__(v112, v113)) {
                goto LABEL_118;
              }
              unint64_t v62 = v110;
              if (*(void *)(v109 + 24) >= v114)
              {
                if (v210.i8[0])
                {
                  if ((v110 & 1) == 0) {
                    goto LABEL_125;
                  }
                }
                else
                {
                  sub_24B656F58();
                  if ((v62 & 1) == 0) {
                    goto LABEL_125;
                  }
                }
              }
              else
              {
                sub_24B6548E0(v114, v210.i32[0]);
                unint64_t v115 = sub_24B59F008((uint64_t)v223);
                if ((v62 & 1) != (v116 & 1)) {
                  goto LABEL_127;
                }
                unint64_t v111 = v115;
                if ((v62 & 1) == 0) {
                  goto LABEL_125;
                }
              }
              uint64_t v117 = *(void *)(v265 + 56);
              uint64_t v118 = v249;
              v205.i64[0] = *(void *)(v249 + 72);
              uint64_t v119 = v214;
              sub_24B65A134(v117 + v205.i64[0] * v111, v214, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
              uint64_t v120 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v118 + 56);
              uint64_t v121 = v241;
              v210.i64[0] = (uint64_t)v120;
              v120(v119, 0, 1, v241);
              uint64_t v122 = v119 + *(int *)(v121 + 20);
              v206.i64[0] = v227[11];
              long long v123 = *(char **)(v122 + v206.i64[0]);
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v208.i64[0] = v122;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                long long v123 = sub_24B58ACBC(0, *((void *)v123 + 2) + 1, 1, v123);
              }
              unint64_t v126 = *((void *)v123 + 2);
              unint64_t v125 = *((void *)v123 + 3);
              unint64_t v127 = v126 + 1;
              if (v126 >= v125 >> 1)
              {
                unint64_t v204 = v126 + 1;
                long long v188 = sub_24B58ACBC((char *)(v125 > 1), v126 + 1, 1, v123);
                unint64_t v127 = v204;
                long long v123 = v188;
              }
              *((void *)v123 + 2) = v127;
              *(float *)&v123[4 * v126 + 32] = v104;
              *(void *)(v208.i64[0] + v206.i64[0]) = v123;
              uint64_t v128 = v214;
              sub_24B658904(v214, 1, &v265, v111, (uint64_t)v223);
              sub_24B5632A8(v128, &qword_2697CCC90);
              uint64_t v129 = *v239;
              uint64_t v130 = v258;
              (*v239)((unint64_t)v223, v258);
              *uint64_t v242 = v265;
              v129((unint64_t)v215, v130);
              v206.i64[0] = (uint64_t)v129;
              v129((unint64_t)v218, v130);
              swift_endAccess();
              uint64_t v131 = v212;
              ((void (*)(char *, unint64_t, uint64_t))v236)(v212, v251, v130);
              swift_beginAccess();
              ((void (*)(char *, char *, uint64_t))v236)(v217, v131, v130);
              v208.i32[0] = swift_isUniquelyReferenced_nonNull_native();
              unint64_t v62 = v216;
              ((void (*)(unint64_t, char *, uint64_t))v236)(v216, v217, v130);
              uint64_t v265 = *v242;
              uint64_t v132 = v265;
              *uint64_t v242 = 0x8000000000000000;
              unint64_t v134 = sub_24B59F008(v62);
              uint64_t v135 = *(void *)(v132 + 16);
              BOOL v136 = (v133 & 1) == 0;
              uint64_t v137 = v135 + v136;
              if (__OFADD__(v135, v136)) {
                goto LABEL_119;
              }
              unint64_t v62 = v241;
              if (*(void *)(v132 + 24) >= v137)
              {
                if (v208.i8[0])
                {
                  if ((v133 & 1) == 0) {
                    goto LABEL_126;
                  }
                }
                else
                {
                  LODWORD(v204) = v133;
                  sub_24B656F58();
                  if ((v204 & 1) == 0) {
                    goto LABEL_126;
                  }
                }
              }
              else
              {
                LODWORD(v204) = v133;
                sub_24B6548E0(v137, v208.i32[0]);
                unint64_t v138 = sub_24B59F008(v216);
                if ((v204 & 1) != (v139 & 1)) {
                  goto LABEL_127;
                }
                unint64_t v134 = v138;
                if ((v204 & 1) == 0) {
                  goto LABEL_126;
                }
              }
              uint64_t v140 = v211;
              sub_24B65A134(*(void *)(v265 + 56) + v134 * v205.i64[0], v211, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
              ((void (*)(uint64_t, void, uint64_t, unint64_t))v210.i64[0])(v140, 0, 1, v62);
              uint64_t v141 = v140 + *(int *)(v62 + 20);
              v205.i64[0] = v227[12];
              unint64_t v142 = *(char **)(v141 + v205.i64[0]);
              char v143 = swift_isUniquelyReferenced_nonNull_native();
              v208.i64[0] = v141;
              if ((v143 & 1) == 0) {
                unint64_t v142 = sub_24B58ACBC(0, *((void *)v142 + 2) + 1, 1, v142);
              }
              unint64_t v145 = *((void *)v142 + 2);
              unint64_t v144 = *((void *)v142 + 3);
              unint64_t v146 = v145 + 1;
              if (v145 >= v144 >> 1)
              {
                unint64_t v204 = v145 + 1;
                long long v189 = sub_24B58ACBC((char *)(v144 > 1), v145 + 1, 1, v142);
                unint64_t v146 = v204;
                unint64_t v142 = v189;
              }
              *((void *)v142 + 2) = v146;
              *(float *)&v142[4 * v145 + 32] = v105;
              *(void *)(v208.i64[0] + v205.i64[0]) = v142;
              uint64_t v147 = v211;
              uint64_t v148 = v216;
              sub_24B658904(v211, 1, &v265, v134, v216);
              sub_24B5632A8(v147, &qword_2697CCC90);
              uint64_t v149 = v148;
              uint64_t v103 = v258;
              uint64_t v150 = (void (*)(char *, uint64_t))v206.i64[0];
              ((void (*)(uint64_t, uint64_t))v206.i64[0])(v149, v258);
              *uint64_t v242 = v265;
              v150(v217, v103);
              v150(v212, v103);
              swift_endAccess();
            }
          }
          ((void (*)(char *, unint64_t, uint64_t))v236)(v228, v251, v103);
          long long v151 = v242;
          swift_beginAccess();
          uint64_t v152 = v225;
          ((void (*)(char *, char *, uint64_t))v236)(v225, v228, v103);
          v208.i32[0] = swift_isUniquelyReferenced_nonNull_native();
          ((void (*)(unint64_t, char *, uint64_t))v236)(v230, v152, v103);
          uint64_t v265 = *v151;
          uint64_t v153 = v265;
          *long long v151 = 0x8000000000000000;
          unint64_t v62 = sub_24B59F008(v230);
          uint64_t v155 = *(void *)(v153 + 16);
          BOOL v156 = (v154 & 1) == 0;
          uint64_t v157 = v155 + v156;
          if (__OFADD__(v155, v156)) {
            goto LABEL_116;
          }
          uint64_t v158 = (uint64_t)v220;
          if (*(void *)(v153 + 24) >= v157)
          {
            if (v208.i8[0])
            {
              if ((v154 & 1) == 0) {
                goto LABEL_124;
              }
            }
            else
            {
              LODWORD(v236) = v154;
              sub_24B656F58();
              if ((v236 & 1) == 0) {
                goto LABEL_124;
              }
            }
          }
          else
          {
            LODWORD(v236) = v154;
            sub_24B6548E0(v157, v208.i32[0]);
            unint64_t v159 = sub_24B59F008(v230);
            if ((v236 & 1) != (v160 & 1)) {
              goto LABEL_127;
            }
            unint64_t v62 = v159;
            if ((v236 & 1) == 0) {
              goto LABEL_124;
            }
          }
          uint64_t v236 = v265;
          uint64_t v161 = *(void *)(v265 + 56);
          v205.i64[0] = *(void *)(v249 + 72);
          v206.i64[0] = v205.i64[0] * v62;
          uint64_t v162 = v161 + v205.i64[0] * v62;
          v208.i64[0] = v62;
          uint64_t v163 = v224;
          sub_24B65A134(v162, v224, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
          uint64_t v164 = v241;
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v210.i64[0])(v163, 0, 1, v241);
          uint64_t v165 = v163 + *(int *)(v164 + 20) + v227[10];
          int8x16_t v167 = v263;
          int8x16_t v166 = (int8x16_t)v264;
          *(void *)uint64_t v165 = v264.i64[0];
          *(int8x16_t *)(v165 + 8) = vextq_s8(v166, v167, 8uLL);
          int8x16_t v168 = v262;
          *(int8x16_t *)(v165 + 24) = vextq_s8(v167, v262, 8uLL);
          v167.i64[1] = v261.i64[1];
          *(int8x16_t *)(v165 + 40) = vextq_s8(v168, v261, 8uLL);
          *(void *)(v165 + 56) = v167.i64[1];
          *(unsigned char *)(v165 + 64) = 0;
          sub_24B563A6C(v163, v158, &qword_2697CCC90);
          if (v209(v158, 1, v164) == 1)
          {
            sub_24B5632A8(v158, &qword_2697CCC90);
            uint64_t v169 = v265;
            int64_t v170 = v208.i64[0];
            unint64_t v62 = v258;
            swift_arrayDestroy();
            sub_24B655C8C(v170, v169);
          }
          else
          {
            uint64_t v171 = v213;
            sub_24B65A134(v158, v213, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
            sub_24B65A134(v171, *(void *)(v236 + 56) + v206.i64[0], type metadata accessor for ObjectCaptureSession.Metadata.Shot);
            unint64_t v62 = v258;
          }
          sub_24B5632A8(v224, &qword_2697CCC90);
          uint64_t v172 = *v239;
          (*v239)(v230, v62);
          *uint64_t v242 = v265;
          v172((unint64_t)v225, v62);
          v172((unint64_t)v228, v62);
          swift_endAccess();
          uint64_t v173 = *v242;
          if (!*(void *)(*v242 + 16)) {
            goto LABEL_122;
          }
          swift_bridgeObjectRetain();
          unint64_t v174 = sub_24B59F008(v251);
          uint64_t v236 = (uint64_t)v172;
          if (v175)
          {
            unint64_t v62 = v221;
            sub_24B659A1C(*(void *)(v173 + 56) + v174 * v205.i64[0], v221, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
            uint64_t v176 = 0;
          }
          else
          {
            uint64_t v176 = 1;
            unint64_t v62 = v221;
          }
          uint64_t v177 = v241;
          ((void (*)(unint64_t, uint64_t, uint64_t, uint64_t))v210.i64[0])(v62, v176, 1, v241);
          swift_bridgeObjectRelease();
          if (v209(v62, 1, v177) == 1) {
            goto LABEL_123;
          }
          uint64_t v178 = v219;
          sub_24B659A1C(v62 + *(int *)(v177 + 20), v219, type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera);
          sub_24B65EF80(v62, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
          uint64_t v179 = v178;
          uint64_t v180 = v226;
          sub_24B659A84(v179, v226, type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera);
          int64_t v65 = v229;
          if (v248 >= v73) {
            goto LABEL_96;
          }
          uint64_t v183 = *(void *)(v180 + v207);
          if (*(void *)(v183 + 16) != 2) {
            goto LABEL_96;
          }
          uint64_t v184 = *(void *)(v180 + v227[12]);
          uint64_t v185 = *(void *)(v184 + 16);
          if (!v185) {
            goto LABEL_117;
          }
          if (*(float *)(v183 + 32) > 1.0)
          {
            if (v185 == 1) {
              goto LABEL_117;
            }
LABEL_96:
            ((void (*)(unint64_t, uint64_t))v236)(v251, v258);
            goto LABEL_97;
          }
          if (v185 == 1) {
            goto LABEL_117;
          }
          if (*(float *)(v184 + 32) > 0.005 || *(float *)(v183 + 36) > 1.0) {
            goto LABEL_96;
          }
          v182.i32[0] = *(_DWORD *)(v184 + 36);
          float32x4_t v210 = v182;
          v181.i32[0] = 1000593162;
          float32x4_t v235 = v181;
          int8x16_t v186 = (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgeq_f32(v181, v182), 0);
          int8x16_t v247 = vbslq_s8(v186, (int8x16_t)v264, v247);
          int8x16_t v246 = vbslq_s8(v186, v263, v246);
          int8x16_t v245 = vbslq_s8(v186, v262, v245);
          int8x16_t v244 = vbslq_s8(v186, v261, v244);
          ((void (*)(unint64_t, uint64_t))v236)(v251, v258);
          uint64_t v187 = v248;
          if (v210.f32[0] <= v235.f32[0]) {
            uint64_t v187 = v73;
          }
          uint64_t v248 = v187;
LABEL_97:
          sub_24B65EF80(v180, type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera);
        }
        else
        {
          (*v256)(v66, 1, 1, v258);
LABEL_38:
          sub_24B5632A8(v66, &qword_2697CC460);
        }
      }
    }
  }
  int64_t v71 = v69 + 3;
  if (v71 >= v65)
  {
LABEL_109:
    uint64_t result = swift_release();
    uint64_t v191 = v248;
    if (!v248)
    {
      uint64_t v192 = sub_24B57CB70();
      uint64_t v193 = v233;
      long long v194 = v231;
      uint64_t v195 = v234;
      (*(void (**)(char *, uint64_t, uint64_t))(v233 + 16))(v231, v192, v234);
      id v196 = sub_24B6824B0();
      os_log_type_t v197 = sub_24B682B20();
      if (os_log_type_enabled(v196, v197))
      {
        CFStringRef v198 = (uint8_t *)swift_slowAlloc();
        uint64_t v199 = swift_slowAlloc();
        v266[0] = v199;
        *(_DWORD *)CFStringRef v198 = 136380675;
        uint64_t v265 = sub_24B5627B8(0xD000000000000020, 0x800000024B691490, v266);
        sub_24B682CD0();
        _os_log_impl(&dword_24B55E000, v196, v197, "ObjectCaptureSession.%{private}s: mobileSfM pose for the new camera shot is not consistent.", v198, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v199, -1, -1);
        MEMORY[0x24C5D6C00](v198, -1, -1);
      }

      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v193 + 8))(v194, v195);
    }
    uint64_t v200 = v243;
    v243->i64[0] = v191;
    int8x16_t v201 = v246;
    v200[1] = v247;
    v200[2] = v201;
    int8x16_t v202 = v244;
    v200[3] = v245;
    v200[4] = v202;
    return result;
  }
  unint64_t v70 = *(void *)(v57 + 8 * v71);
  if (v70)
  {
    int64_t v64 = v71;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v64 = v71 + 1;
    if (__OFADD__(v71, 1)) {
      break;
    }
    if (v64 >= v65) {
      goto LABEL_109;
    }
    unint64_t v70 = *(void *)(v57 + 8 * v64);
    ++v71;
    if (v70) {
      goto LABEL_25;
    }
  }
LABEL_115:
  __break(1u);
LABEL_116:
  __break(1u);
LABEL_117:
  __break(1u);
LABEL_118:
  __break(1u);
LABEL_119:
  __break(1u);
LABEL_120:
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v210.i64[0])(v222, 1, 1, v241);
LABEL_121:
  __break(1u);
LABEL_122:
  ((void (*)(unint64_t, uint64_t, uint64_t, uint64_t))v210.i64[0])(v221, 1, 1, v241);
LABEL_123:
  __break(1u);
LABEL_124:
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v210.i64[0])(v224, 1, 1, v241);
  __break(1u);
LABEL_125:
  (*v240)(v214, 1, 1, v241);
  __break(1u);
LABEL_126:
  ((void (*)(uint64_t, uint64_t, uint64_t, unint64_t))v210.i64[0])(v211, 1, 1, v62);
  __break(1u);
LABEL_127:
  uint64_t result = sub_24B682FF0();
  __break(1u);
  return result;
}

uint64_t sub_24B6419F0(uint64_t a1)
{
  uint64_t v45 = a1;
  uint64_t v1 = sub_24B6825D0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v43 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_24B682640();
  uint64_t v42 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v41 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24B6824D0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v35 - v10;
  uint64_t v12 = sub_24B57CB70();
  uint64_t v38 = *(void (**)(char *))(v6 + 16);
  uint64_t v39 = v12;
  v38(v11);
  uint64_t v13 = sub_24B6824B0();
  os_log_type_t v14 = sub_24B682B30();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v35 = v5;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v36 = v2;
    uint64_t v16 = (uint8_t *)v15;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v37 = v1;
    uint64_t v18 = v17;
    aBlock[0] = v17;
    *(_DWORD *)uint64_t v16 = 136380675;
    uint64_t v46 = sub_24B5627B8(0xD000000000000032, 0x800000024B68F480, aBlock);
    uint64_t v5 = v35;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v13, v14, "ObjectCaptureSession.%{private}s: Received mobileSfM pose updates for the camera shots.", v16, 0xCu);
    swift_arrayDestroy();
    uint64_t v19 = v18;
    uint64_t v1 = v37;
    MEMORY[0x24C5D6C00](v19, -1, -1);
    uint64_t v20 = v16;
    uint64_t v2 = v36;
    MEMORY[0x24C5D6C00](v20, -1, -1);
  }

  uint64_t v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  v21(v11, v5);
  uint64_t v22 = v45;
  if (*(void *)(v45 + 16))
  {
    uint64_t v23 = v40;
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v23;
    *(void *)(v24 + 24) = v22;
    aBlock[4] = (uint64_t)sub_24B65FE00;
    aBlock[5] = v24;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_24B566C04;
    aBlock[3] = (uint64_t)&unk_26FE8F020;
    uint64_t v25 = _Block_copy(aBlock);
    id v26 = v23;
    swift_bridgeObjectRetain();
    uint64_t v27 = v41;
    sub_24B6825F0();
    uint64_t v46 = MEMORY[0x263F8EE78];
    sub_24B65D13C((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
    sub_24B562F04((uint64_t *)&unk_2697CC490);
    sub_24B5678F4((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
    uint64_t v28 = v43;
    sub_24B682D80();
    MEMORY[0x24C5D4CD0](0, v27, v28, v25);
    _Block_release(v25);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v28, v1);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v27, v44);
    return swift_release();
  }
  else
  {
    ((void (*)(char *, uint64_t, uint64_t))v38)(v9, v39, v5);
    uint64_t v30 = sub_24B6824B0();
    uint64_t v31 = v9;
    os_log_type_t v32 = sub_24B682B20();
    if (os_log_type_enabled(v30, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      aBlock[0] = v34;
      *(_DWORD *)uint64_t v33 = 136380675;
      uint64_t v46 = sub_24B5627B8(0xD000000000000032, 0x800000024B68F480, aBlock);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v30, v32, "ObjectCaptureSession.%{private}s: Received empty list of mobileSfM pose updates for camera shots!", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v34, -1, -1);
      MEMORY[0x24C5D6C00](v33, -1, -1);
    }

    return ((uint64_t (*)(char *, uint64_t))v21)(v31, v5);
  }
}

uint64_t sub_24B642020(char *a1, uint64_t a2)
{
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void (***)(char *, uint64_t, char *))(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v195 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v195 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  char v223 = (char *)&v195 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  v222[0] = (char *)&v195 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  unint64_t v216 = (char *)&v195 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v220 = (char *)&v195 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  v221.i64[0] = (uint64_t)&v195 - v21;
  MEMORY[0x270FA5388](v20);
  unint64_t v23 = (unint64_t)&v195 - v22;
  uint64_t v24 = sub_24B562F04(&qword_2697CCC90);
  uint64_t v25 = MEMORY[0x270FA5388](v24 - 8);
  unint64_t v215 = (char *)&v195 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)&v195 - v27;
  uint64_t v29 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v225 = (char *)v29;
  uint64_t v226 = v30;
  MEMORY[0x270FA5388](v29);
  uint64_t v224 = (uint64_t)&v195 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_24B562F04(&qword_2697CC460);
  MEMORY[0x270FA5388](v32 - 8);
  uint64_t v34 = (char *)&v195 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_24B682410();
  uint64_t v228 = *(void *)(v35 - 8);
  uint64_t v229 = v35;
  uint64_t v36 = MEMORY[0x270FA5388](v35);
  uint64_t v219 = (char *)&v195 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v218 = (char *)&v195 - v39;
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  uint64_t v217 = (void (**)(char *, uint64_t, char *))((char *)&v195 - v41);
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  uint64_t v227 = (char *)&v195 - v43;
  (*(void (**)(int8x16_t *__return_ptr, uint64_t))((*MEMORY[0x263F8EED0] & *(void *)a1) + 0x420))(v236, v42);
  if (v236[0].i64[0] == 15)
  {
    uint64_t v214 = (char *)v4;
    sub_24B65A19C((id)0xF);
    sub_24B65A19C((id)0xF);
    sub_24B63FAB0(a2, v236);
    uint64_t v44 = v236[0].i64[0];
    uint64_t v45 = a1;
    if (v236[0].i64[0])
    {
      uint64_t v212 = a2;
      float32x4_t v208 = (float32x4_t)v236[1];
      float32x4_t v209 = (float32x4_t)v236[2];
      float32x4_t v210 = (float32x4_t)v236[3];
      int8x16_t v211 = v236[4];
      uint64_t v46 = (float32x4_t **)&a1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotFlippableMap];
      swift_beginAccess();
      uint64_t v48 = *v46;
      if (v48[1].i64[0])
      {
        unint64_t v49 = sub_24B5D43DC(v44);
        if (v50)
        {
          if (*(unsigned char *)(v48[3].i64[1] + v49) == 1)
          {
            uint64_t v213 = v45;
            BOOL v51 = &v45[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotIDToUUIDMap];
            swift_beginAccess();
            uint64_t v52 = *(void *)v51;
            if (*(void *)(v52 + 16) && (unint64_t v53 = sub_24B5D43DC(v44), (v54 & 1) != 0))
            {
              uint64_t v55 = *(void *)(v52 + 56);
              uint64_t v57 = v228;
              uint64_t v56 = v229;
              uint64_t v58 = v55 + *(void *)(v228 + 72) * v53;
              uint64_t v59 = v228 + 16;
              uint64_t v207 = *(void (**)(char *, uint64_t, uint64_t))(v228 + 16);
              v207(v34, v58, v229);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v34, 0, 1, v56);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v34, 1, v56) != 1)
              {
                uint64_t v206 = v59;
                uint64_t v60 = (uint64_t)v227;
                (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v227, v34, v56);
                __n128 v61 = (uint64_t *)&v213[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_metadataMap];
                swift_beginAccess();
                uint64_t v62 = *v61;
                if (!*(void *)(*v61 + 16))
                {
                  (*(void (**)(char *, uint64_t, uint64_t, char *))(v226 + 56))(v28, 1, 1, v225);
LABEL_28:
                  (*(void (**)(char *, uint64_t))(v57 + 8))(v227, v229);
                  uint64_t v73 = &qword_2697CCC90;
                  uint64_t v74 = (uint64_t)v28;
                  goto LABEL_17;
                }
                float32x4_t v205 = v61;
                swift_bridgeObjectRetain();
                unint64_t v63 = sub_24B59F008(v60);
                uint64_t v64 = v226;
                if (v65)
                {
                  sub_24B659A1C(*(void *)(v62 + 56) + *(void *)(v226 + 72) * v63, (uint64_t)v28, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
                  uint64_t v66 = 0;
                }
                else
                {
                  uint64_t v66 = 1;
                }
                uint64_t v85 = (int *)v225;
                uint64_t v203 = *(void (**)(char *, uint64_t, uint64_t, char *))(v64 + 56);
                uint64_t v204 = v64 + 56;
                v203(v28, v66, 1, v225);
                swift_bridgeObjectRelease();
                if ((*(unsigned int (**)(char *, uint64_t, int *))(v64 + 48))(v28, 1, v85) == 1) {
                  goto LABEL_28;
                }
                uint64_t v86 = (uint64_t)v28;
                uint64_t v87 = v224;
                sub_24B65A134(v86, v224, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
                uint64_t v88 = v85[5];
                uint64_t v89 = type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
                if ((*(unsigned char *)(v87 + v88 + *(int *)(v89 + 36) + 64) & 1) == 0)
                {
                  uint64_t v97 = sub_24B57CB70();
                  char v98 = v223;
                  uint64_t v99 = v214;
                  v5[2](v223, v97, v214);
                  uint64_t v100 = sub_24B6824B0();
                  os_log_type_t v101 = sub_24B682B30();
                  if (!os_log_type_enabled(v100, v101))
                  {

                    ((void (*)(char *, char *))v5[1])(v98, v99);
                    uint64_t v104 = v87;
                    goto LABEL_38;
                  }
                  uint64_t v102 = swift_slowAlloc();
                  uint64_t v103 = swift_slowAlloc();
                  v236[0].i64[0] = v103;
                  *(_DWORD *)uint64_t v102 = 136380931;
                  v235[0] = sub_24B5627B8(0xD000000000000032, 0x800000024B68F480, v236[0].i64);
                  sub_24B682CD0();
                  *(_WORD *)(v102 + 12) = 2050;
                  v235[0] = v44;
                  sub_24B682CD0();
                  _os_log_impl(&dword_24B55E000, v100, v101, "ObjectCaptureSession.%{private}s: Already computed world to object transform from\ncamera %{public}ld previously!", (uint8_t *)v102, 0x16u);
                  swift_arrayDestroy();
                  MEMORY[0x24C5D6C00](v103, -1, -1);
                  MEMORY[0x24C5D6C00](v102, -1, -1);

                  ((void (*)(char *, char *))v5[1])(v223, v99);
LABEL_36:
                  uint64_t v104 = v224;
LABEL_38:
                  sub_24B65EF80(v104, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
                  (*(void (**)(char *, uint64_t))(v228 + 8))(v227, v229);
LABEL_20:
                  uint64_t v83 = v212;
                  uint64_t v84 = (uint64_t)v213;
                  return sub_24B643B7C(v83, v84);
                }
                long long v90 = (char *)v89;
                sub_24B56CF38(v87 + v85[7], (uint64_t)v235, &qword_2697CC9C0);
                sub_24B56CF38((uint64_t)v235, (uint64_t)v236, &qword_2697CC9C0);
                int v91 = sub_24B56CF9C((uint64_t)v236);
                uint64_t v28 = v214;
                if (v91 == 1 || v238 == 1)
                {
                  uint64_t v92 = sub_24B57CB70();
                  v5[2]((char *)v23, v92, v28);
                  uint64_t v93 = sub_24B6824B0();
                  os_log_type_t v94 = sub_24B682B20();
                  if (!os_log_type_enabled(v93, v94))
                  {

                    ((void (*)(unint64_t, char *))v5[1])(v23, v28);
                    sub_24B65EF80(v224, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
                    (*(void (**)(char *, uint64_t))(v57 + 8))(v227, v229);
                    goto LABEL_20;
                  }
                  uint64_t v95 = swift_slowAlloc();
                  uint64_t v96 = swift_slowAlloc();
                  *(void *)&v230[0] = v96;
                  *(_DWORD *)uint64_t v95 = 136380931;
                  uint64_t v234 = sub_24B5627B8(0xD000000000000032, 0x800000024B68F480, (uint64_t *)v230);
                  sub_24B682CD0();
                  *(_WORD *)(v95 + 12) = 2050;
                  uint64_t v234 = v44;
                  sub_24B682CD0();
                  _os_log_impl(&dword_24B55E000, v93, v94, "ObjectCaptureSession.%{private}s: Not computing world to object transform from mobileSfM because camera %{public}ld does not contain segmentId!", (uint8_t *)v95, 0x16u);
                  swift_arrayDestroy();
                  MEMORY[0x24C5D6C00](v96, -1, -1);
                  MEMORY[0x24C5D6C00](v95, -1, -1);

                  ((void (*)(unint64_t, char *))v5[1])(v23, v214);
                  goto LABEL_36;
                }
                uint64_t v105 = v237;
                uint64_t v45 = v213;
                if (v237 != *(void *)&v213[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_staticSegmentID])
                {
                  uint64_t v226 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_staticSegmentID;
                  uint64_t v122 = sub_24B57CB70();
                  long long v123 = v5;
                  uint64_t v124 = (uint64_t)v222[0];
                  v5[2]((char *)v222[0], v122, v28);
                  unint64_t v125 = v45;
                  unint64_t v126 = sub_24B6824B0();
                  os_log_type_t v127 = sub_24B682B20();
                  if (os_log_type_enabled(v126, v127))
                  {
                    uint64_t v128 = swift_slowAlloc();
                    char v223 = (char *)swift_slowAlloc();
                    *(void *)&v230[0] = v223;
                    *(_DWORD *)uint64_t v128 = 136381443;
                    uint64_t v234 = sub_24B5627B8(0xD000000000000032, 0x800000024B68F480, (uint64_t *)v230);
                    uint64_t v225 = v125;
                    sub_24B682CD0();
                    *(_WORD *)(v128 + 12) = 2050;
                    uint64_t v234 = v105;
                    sub_24B682CD0();
                    *(_WORD *)(v128 + 22) = 2050;
                    uint64_t v234 = v44;
                    sub_24B682CD0();
                    *(_WORD *)(v128 + 32) = 2050;
                    uint64_t v234 = *(void *)&v45[v226];
                    unint64_t v125 = v225;
                    sub_24B682CD0();

                    _os_log_impl(&dword_24B55E000, v126, v127, "ObjectCaptureSession.%{private}s: Not computing world to object transform from mobileSfM because segmentId = %{public}ld of the latest camera %{public}ld does not match the current segmentId = %{public}ld", (uint8_t *)v128, 0x2Au);
                    uint64_t v129 = v223;
                    swift_arrayDestroy();
                    MEMORY[0x24C5D6C00](v129, -1, -1);
                    MEMORY[0x24C5D6C00](v128, -1, -1);

                    ((void (*)(id, char *))v123[1])(v222[0], v214);
                  }
                  else
                  {

                    ((void (*)(uint64_t, char *))v123[1])(v124, v28);
                  }
                  sub_24B65EF80(v224, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
                  (*(void (**)(char *, uint64_t))(v228 + 8))(v227, v229);
                  uint64_t v83 = v212;
                  uint64_t v84 = (uint64_t)v125;
                  return sub_24B643B7C(v83, v84);
                }
                uint64_t v106 = &v213[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_uuidToShotAnchorsMap];
                swift_beginAccess();
                uint64_t v107 = *(void *)v106;
                unint64_t v23 = (unint64_t)v227;
                uint64_t v44 = v228;
                if (*(void *)(v107 + 16))
                {
                  swift_bridgeObjectRetain();
                  unint64_t v108 = sub_24B59F008(v23);
                  if (v109)
                  {
                    char v223 = v90;
                    uint64_t v34 = (char *)*(id *)(*(void *)(v107 + 56) + 8 * v108);
                    swift_bridgeObjectRelease();
                    v45[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isPoseCorrectionUsingMobileSfMEnabled] = 1;
                    objc_msgSend(v34, sel_transform);
                    simd_float4x4 v241 = __invert_f4(v240);
                    float32x4_t v110 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v208, v241.columns[0].f32[0]), v209, *(float32x2_t *)v241.columns[0].f32, 1), v210, (float32x4_t)v241.columns[0], 2), (float32x4_t)v211, (float32x4_t)v241.columns[0], 3);
                    float32x4_t v111 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v208, v241.columns[1].f32[0]), v209, *(float32x2_t *)v241.columns[1].f32, 1), v210, (float32x4_t)v241.columns[1], 2), (float32x4_t)v211, (float32x4_t)v241.columns[1], 3);
                    float32x4_t v112 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v208, v241.columns[2].f32[0]), v209, *(float32x2_t *)v241.columns[2].f32, 1), v210, (float32x4_t)v241.columns[2], 2), (float32x4_t)v211, (float32x4_t)v241.columns[2], 3);
                    float32x4_t v113 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v208, v241.columns[3].f32[0]), v209, *(float32x2_t *)v241.columns[3].f32, 1), v210, (float32x4_t)v241.columns[3], 2), (float32x4_t)v211, (float32x4_t)v241.columns[3], 3);
                    uint64_t v48 = (float32x4_t *)&v45[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_worldToMobileSfMTransform];
                    *uint64_t v48 = v110;
                    v48[1] = v111;
                    v48[2] = v112;
                    v48[3] = v113;
                    v48[4].i8[0] = 0;
                    uint64_t v47 = (float32x4_t *)&v45[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_initialWorldToMobileSfMTransform];
                    if (v45[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_initialWorldToMobileSfMTransform + 64])
                    {
                      *uint64_t v47 = v110;
                      v47[1] = v111;
                      v47[2] = v112;
                      v47[3] = v113;
                      v47[4].i8[0] = 0;
                      uint64_t v114 = v110.i64[1];
                      uint64_t v115 = v110.i64[0];
                      uint64_t v116 = v111.i64[1];
                      uint64_t v117 = v111.i64[0];
                      uint64_t v118 = v112.i64[1];
                      uint64_t v119 = v112.i64[0];
                      uint64_t v120 = v113.i64[1];
                      uint64_t v121 = v113.i64[0];
                      goto LABEL_57;
                    }
LABEL_56:
                    uint64_t v121 = v47[3].i64[0];
                    uint64_t v120 = v47[3].i64[1];
                    uint64_t v119 = v47[2].i64[0];
                    uint64_t v118 = v47[2].i64[1];
                    uint64_t v117 = v47[1].i64[0];
                    uint64_t v116 = v47[1].i64[1];
                    char v139 = v47;
                    uint64_t v115 = v47->i64[0];
                    uint64_t v114 = v139->i64[1];
LABEL_57:
                    uint64_t v140 = (uint64_t)v5;
                    uint64_t v141 = v224;
                    v242.columns[0].i64[0] = v115;
                    v242.columns[0].i64[1] = v114;
                    v242.columns[1].i64[0] = v117;
                    v242.columns[1].i64[1] = v116;
                    v242.columns[2].i64[0] = v119;
                    v242.columns[2].i64[1] = v118;
                    v242.columns[3].i64[0] = v121;
                    v242.columns[3].i64[1] = v120;
                    simd_float4x4 v243 = __invert_f4(v242);
                    if (v45[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 64])
                    {

                      uint64_t v138 = v141;
                      goto LABEL_59;
                    }
                    float32x4_t v201 = (float32x4_t)v243.columns[0];
                    float32x4_t v202 = (float32x4_t)v243.columns[1];
                    float32x4_t v221 = (float32x4_t)v243.columns[2];
                    *(simd_float4 *)uint64_t v222 = v243.columns[3];
                    if (v45[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox + 64])
                    {
                      __break(1u);
                    }
                    else
                    {
                      *(double *)v142.columns[0].i64 = sub_24B5F8D74(*(float32x4_t *)&v45[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox], *(double *)&v45[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox+ 16], *(double *)&v45[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox+ 32], *(double *)&v45[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox+ 48], *(float32x4_t *)&v45[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform], *(float32x4_t *)&v45[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform+ 16], *(float32x4_t *)&v45[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform+ 32], *(float32x4_t *)&v45[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform+ 48]);
                      if (v48[4].i8[0])
                      {
                        __break(1u);
LABEL_81:
                        v203(v215, 1, 1, (char *)v44);
                        __break(1u);
                        goto LABEL_82;
                      }
                      float32x4_t v197 = *v48;
                      float32x4_t v198 = v48[1];
                      float32x4_t v199 = v48[2];
                      float32x4_t v200 = v48[3];
                      simd_float4x4 v244 = __invert_f4(v142);
                      float32x4_t v143 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v244.columns[0], v201.f32[0]), (float32x4_t)v244.columns[1], *(float32x2_t *)v201.f32, 1), (float32x4_t)v244.columns[2], v201, 2), (float32x4_t)v244.columns[3], v201, 3);
                      float32x4_t v144 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v244.columns[0], v202.f32[0]), (float32x4_t)v244.columns[1], *(float32x2_t *)v202.f32, 1), (float32x4_t)v244.columns[2], v202, 2), (float32x4_t)v244.columns[3], v202, 3);
                      float32x4_t v145 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v244.columns[0], v221.f32[0]), (float32x4_t)v244.columns[1], *(float32x2_t *)v221.f32, 1), (float32x4_t)v244.columns[2], v221, 2), (float32x4_t)v244.columns[3], v221, 3);
                      v244.columns[0] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v244.columns[0], *(float *)v222), (float32x4_t)v244.columns[1], (float32x2_t)v222[0], 1), (float32x4_t)v244.columns[2], *(float32x4_t *)v222, 2), (float32x4_t)v244.columns[3], *(float32x4_t *)v222, 3);
                      v244.columns[1] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v143, v197.f32[0]), v144, *(float32x2_t *)v197.f32, 1), v145, v197, 2), (float32x4_t)v244.columns[0], v197, 3);
                      v244.columns[2] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v143, v198.f32[0]), v144, *(float32x2_t *)v198.f32, 1), v145, v198, 2), (float32x4_t)v244.columns[0], v198, 3);
                      v244.columns[3] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v143, v199.f32[0]), v144, *(float32x2_t *)v199.f32, 1), v145, v199, 2), (float32x4_t)v244.columns[0], v199, 3);
                      float32x4_t v146 = v200;
                      float32x4_t v147 = vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v143, v200.f32[0]), v144, *(float32x2_t *)v200.f32, 1), v145, v200, 2);
                      uint64_t v148 = &v45[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_worldToObjectTransformFromMobileSfM];
                      *(simd_float4 *)uint64_t v148 = v244.columns[1];
                      *((_OWORD *)v148 + 1) = v244.columns[2];
                      *((_OWORD *)v148 + 2) = v244.columns[3];
                      *((float32x4_t *)v148 + 3) = vmlaq_laneq_f32(v147, (float32x4_t)v244.columns[0], v146, 3);
                      v148[64] = 0;
                      uint64_t v149 = sub_24B57CB70();
                      uint64_t v150 = v5[2];
                      v202.i64[0] = v149;
                      v221.i64[0] = (uint64_t)(v5 + 2);
                      v201.i64[0] = (uint64_t)v150;
                      ((void (*)(char *))v150)(v220);
                      long long v151 = v45;
                      uint64_t v152 = sub_24B6824B0();
                      LOBYTE(v141) = sub_24B682B30();
                      BOOL v153 = os_log_type_enabled(v152, (os_log_type_t)v141);
                      uint64_t v195 = v5;
                      id v196 = v34;
                      v222[0] = v151;
                      if (v153)
                      {
                        uint64_t v154 = swift_slowAlloc();
                        uint64_t v155 = swift_slowAlloc();
                        uint64_t v233 = v155;
                        *(_DWORD *)uint64_t v154 = 136380931;
                        *(void *)&v230[0] = sub_24B5627B8(0xD000000000000032, 0x800000024B68F480, &v233);
                        sub_24B682CD0();
                        *(_WORD *)(v154 + 12) = 2082;
                        if (v148[64])
                        {
LABEL_82:

                          __break(1u);
                          goto LABEL_83;
                        }
                        long long v157 = *((_OWORD *)v148 + 1);
                        long long v156 = *((_OWORD *)v148 + 2);
                        uint64_t v158 = *((void *)v148 + 6);
                        uint64_t v159 = *((void *)v148 + 7);
                        v230[0] = *(_OWORD *)v148;
                        v230[1] = v157;
                        v230[2] = v156;
                        uint64_t v231 = v158;
                        uint64_t v232 = v159;
                        type metadata accessor for simd_float4x4(0);
                        uint64_t v160 = sub_24B682820();
                        *(void *)&v230[0] = sub_24B5627B8(v160, v161, &v233);
                        sub_24B682CD0();
                        id v162 = v222[0];

                        swift_bridgeObjectRelease();
                        _os_log_impl(&dword_24B55E000, v152, (os_log_type_t)v141, "ObjectCaptureSession.%{private}s: Updated world to object transform %{public}s", (uint8_t *)v154, 0x16u);
                        swift_arrayDestroy();
                        uint64_t v163 = v155;
                        long long v151 = (char *)v162;
                        MEMORY[0x24C5D6C00](v163, -1, -1);
                        MEMORY[0x24C5D6C00](v154, -1, -1);

                        uint64_t v164 = v220;
                        uint64_t v220 = (char *)v5[1];
                        ((void (*)(char *, char *))v220)(v164, v214);
                        unint64_t v23 = (unint64_t)v227;
                      }
                      else
                      {

                        uint64_t v165 = v220;
                        uint64_t v220 = (char *)v5[1];
                        ((void (*)(char *, char *))v220)(v165, v214);
                      }
                      int8x16_t v166 = v205;
                      sub_24B616BC4();
                      v151[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForPoseCorrectionUsingMobileSfM] = 0;
                      uint64_t v5 = v217;
                      unint64_t v167 = v23;
                      uint64_t v168 = v229;
                      uint64_t v169 = v207;
                      v207((char *)v217, v167, v229);
                      swift_beginAccess();
                      uint64_t v28 = v218;
                      v169(v218, (uint64_t)v5, v168);
                      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                      uint64_t v140 = (uint64_t)v219;
                      v169(v219, (uint64_t)v28, v168);
                      uint64_t v233 = *v166;
                      uint64_t v171 = v233;
                      uint64_t *v166 = 0x8000000000000000;
                      unint64_t v23 = sub_24B59F008(v140);
                      uint64_t v173 = *(void *)(v171 + 16);
                      BOOL v174 = (v172 & 1) == 0;
                      uint64_t v175 = v173 + v174;
                      if (!__OFADD__(v173, v174))
                      {
                        LOBYTE(v141) = v172;
                        if (*(void *)(v171 + 24) < v175)
                        {
                          sub_24B6548E0(v175, isUniquelyReferenced_nonNull_native);
                          unint64_t v176 = sub_24B59F008(v140);
                          if ((v141 & 1) != (v177 & 1))
                          {
LABEL_83:
                            uint64_t result = sub_24B682FF0();
                            __break(1u);
                            return result;
                          }
                          unint64_t v23 = v176;
                          goto LABEL_72;
                        }
                        if (isUniquelyReferenced_nonNull_native)
                        {
LABEL_72:
                          uint64_t v178 = v228;
                          uint64_t v44 = (uint64_t)v225;
                          uint64_t v179 = v223;
                          if (v141)
                          {
                            uint64_t v180 = (uint64_t)v215;
                            sub_24B65A134(*(void *)(v233 + 56) + *(void *)(v226 + 72) * v23, (uint64_t)v215, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
                            v203((char *)v180, 0, 1, (char *)v44);
                            uint64_t v181 = v180 + *(int *)(v44 + 20) + (uint64_t)*((int *)v179 + 9);
                            int8x16_t v182 = (int8x16_t)v208;
                            int8x16_t v183 = (int8x16_t)v209;
                            *(void *)uint64_t v181 = v208.i64[0];
                            *(int8x16_t *)(v181 + 8) = vextq_s8(v182, v183, 8uLL);
                            int8x16_t v184 = (int8x16_t)v210;
                            *(int8x16_t *)(v181 + 24) = vextq_s8(v183, (int8x16_t)v210, 8uLL);
                            v183.i64[1] = v211.i64[1];
                            *(int8x16_t *)(v181 + 40) = vextq_s8(v184, v211, 8uLL);
                            *(void *)(v181 + 56) = v183.i64[1];
                            *(unsigned char *)(v181 + 64) = 0;
                            sub_24B658904(v180, 1, &v233, v23, v140);
                            sub_24B5632A8(v180, &qword_2697CCC90);
                            uint64_t v187 = *(void (**)(char *, uint64_t))(v178 + 8);
                            uint64_t v186 = v178 + 8;
                            uint64_t v185 = v187;
                            uint64_t v188 = v229;
                            v187((char *)v140, v229);
                            *float32x4_t v205 = v233;
                            v187(v28, v188);
                            v187((char *)v5, v188);
                            swift_endAccess();
                            long long v189 = v216;
                            long long v190 = v214;
                            ((void (*)(char *, uint64_t, char *))v201.i64[0])(v216, v202.i64[0], v214);
                            uint64_t v191 = sub_24B6824B0();
                            os_log_type_t v192 = sub_24B682B30();
                            if (os_log_type_enabled(v191, v192))
                            {
                              uint64_t v193 = (uint8_t *)swift_slowAlloc();
                              uint64_t v194 = swift_slowAlloc();
                              *(void *)&v230[0] = v194;
                              uint64_t v228 = v186;
                              *(_DWORD *)uint64_t v193 = 136380675;
                              uint64_t v233 = sub_24B5627B8(0xD000000000000032, 0x800000024B68F480, (uint64_t *)v230);
                              sub_24B682CD0();
                              _os_log_impl(&dword_24B55E000, v191, v192, "ObjectCaptureSession.%{private}s: Added initial camera to mobileSfM transform to a new camera shot.", v193, 0xCu);
                              swift_arrayDestroy();
                              MEMORY[0x24C5D6C00](v194, -1, -1);
                              MEMORY[0x24C5D6C00](v193, -1, -1);

                              ((void (*)(char *, char *))v220)(v189, v190);
                              sub_24B65EF80(v224, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
                              v185(v227, v229);
                            }
                            else
                            {

                              ((void (*)(char *, char *))v220)(v189, v190);
                              sub_24B65EF80(v224, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
                              v185(v227, v188);
                            }
                            uint64_t v83 = v212;
                            uint64_t v84 = (uint64_t)v222[0];
                            return sub_24B643B7C(v83, v84);
                          }
                          goto LABEL_81;
                        }
LABEL_79:
                        sub_24B656F58();
                        goto LABEL_72;
                      }
                    }
                    __break(1u);
                    goto LABEL_79;
                  }
                  swift_bridgeObjectRelease();
                }
                uint64_t v130 = sub_24B57CB70();
                uint64_t v131 = v5;
                uint64_t v132 = v221.i64[0];
                v5[2]((char *)v221.i64[0], v130, v28);
                int v133 = sub_24B6824B0();
                os_log_type_t v134 = sub_24B682B20();
                if (os_log_type_enabled(v133, v134))
                {
                  uint64_t v135 = v44;
                  BOOL v136 = (uint8_t *)swift_slowAlloc();
                  uint64_t v137 = swift_slowAlloc();
                  *(void *)&v230[0] = v137;
                  *(_DWORD *)BOOL v136 = 136380675;
                  uint64_t v233 = sub_24B5627B8(0xD000000000000032, 0x800000024B68F480, (uint64_t *)v230);
                  uint64_t v45 = v213;
                  sub_24B682CD0();
                  _os_log_impl(&dword_24B55E000, v133, v134, "ObjectCaptureSession.%{private}s: Shot anchor does not exist for the current camera pose!", v136, 0xCu);
                  swift_arrayDestroy();
                  MEMORY[0x24C5D6C00](v137, -1, -1);
                  MEMORY[0x24C5D6C00](v136, -1, -1);

                  ((void (*)(uint64_t, char *))v131[1])(v221.i64[0], v28);
                  sub_24B65EF80(v224, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
                  (*(void (**)(char *, uint64_t))(v135 + 8))(v227, v229);
LABEL_60:
                  uint64_t v83 = v212;
                  uint64_t v84 = (uint64_t)v45;
                  return sub_24B643B7C(v83, v84);
                }

                ((void (*)(uint64_t, char *))v5[1])(v132, v28);
                uint64_t v138 = v224;
LABEL_59:
                sub_24B65EF80(v138, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
                (*(void (**)(unint64_t, uint64_t))(v44 + 8))(v23, v229);
                goto LABEL_60;
              }
            }
            else
            {
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v228 + 56))(v34, 1, 1, v229);
            }
            uint64_t v73 = &qword_2697CC460;
            uint64_t v74 = (uint64_t)v34;
LABEL_17:
            sub_24B5632A8(v74, v73);
            uint64_t v75 = sub_24B57CB70();
            unint64_t v76 = v5;
            char v77 = v5[2];
            uint64_t v78 = v214;
            v77(v11, v75, v214);
            unint64_t v79 = sub_24B6824B0();
            os_log_type_t v80 = sub_24B682B20();
            if (os_log_type_enabled(v79, v80))
            {
              uint64_t v81 = (uint8_t *)swift_slowAlloc();
              uint64_t v82 = swift_slowAlloc();
              v236[0].i64[0] = v82;
              *(_DWORD *)uint64_t v81 = 136380675;
              v235[0] = sub_24B5627B8(0xD000000000000032, 0x800000024B68F480, v236[0].i64);
              sub_24B682CD0();
              _os_log_impl(&dword_24B55E000, v79, v80, "ObjectCaptureSession.%{private}s: Not computing world to object transform from mobileSfM because metadata for the latest shot is invalid!", v81, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x24C5D6C00](v82, -1, -1);
              MEMORY[0x24C5D6C00](v81, -1, -1);
            }

            ((void (*)(char *, char *))v76[1])(v11, v78);
            goto LABEL_20;
          }
LABEL_55:
          __break(1u);
          goto LABEL_56;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_55;
    }
    return sub_24B643B7C(a2, (uint64_t)a1);
  }
  else
  {
    sub_24B65A19C((id)v236[0].i64[0]);
    sub_24B65A19C((id)0xF);
    uint64_t v67 = sub_24B57CB70();
    v5[2](v8, v67, (char *)v4);
    unint64_t v68 = sub_24B6824B0();
    os_log_type_t v69 = sub_24B682B20();
    if (os_log_type_enabled(v68, v69))
    {
      unint64_t v70 = (uint8_t *)swift_slowAlloc();
      uint64_t v71 = swift_slowAlloc();
      v236[0].i64[0] = v71;
      *(_DWORD *)unint64_t v70 = 136380675;
      v235[0] = sub_24B5627B8(0xD000000000000032, 0x800000024B68F480, v236[0].i64);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v68, v69, "ObjectCaptureSession.%{private}s: Session not in scanning mode!", v70, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v71, -1, -1);
      MEMORY[0x24C5D6C00](v70, -1, -1);
    }

    return ((uint64_t (*)(char *, uint64_t))v5[1])(v8, v4);
  }
}

uint64_t sub_24B643B7C(uint64_t a1, uint64_t a2)
{
  uint64_t v99 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  uint64_t v4 = *(void *)(v99 - 8);
  MEMORY[0x270FA5388](v99);
  uint64_t v82 = (uint64_t)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24B562F04(&qword_2697CCC90);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v83 = (uint64_t)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v88 = (uint64_t)&v82 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v97 = (uint64_t)&v82 - v11;
  uint64_t v12 = sub_24B562F04(&qword_2697CC460);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_24B682410();
  uint64_t v16 = *(int **)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v92 = (char *)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  long long v90 = (char *)&v82 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v89 = (char *)&v82 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v105 = (char *)&v82 - v23;
  uint64_t v24 = *(void *)(a1 + 64);
  uint64_t v114 = a1 + 64;
  uint64_t v25 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v26 = -1;
  if (v25 < 64) {
    uint64_t v26 = ~(-1 << v25);
  }
  unint64_t v27 = v26 & v24;
  uint64_t v28 = (uint64_t **)(a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotIDToUUIDMap);
  uint64_t v29 = (uint64_t *)(a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_metadataMap);
  swift_bridgeObjectRetain();
  uint64_t v116 = v28;
  swift_beginAccess();
  uint64_t v100 = v29;
  swift_beginAccess();
  int64_t v30 = 0;
  unint64_t v31 = v25 + 63;
  uint64_t v32 = a1;
  int64_t v115 = v31 >> 6;
  uint64_t v33 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 14);
  uint64_t v106 = v16 + 4;
  os_log_type_t v101 = v16 + 12;
  uint64_t v96 = (void (**)(char *, char *, uint64_t))(v16 + 8);
  char v98 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  uint64_t v91 = v4;
  os_log_type_t v94 = (uint64_t **)(v4 + 48);
  uint64_t v102 = v16;
  uint64_t v95 = (void (**)(char *, uint64_t))(v16 + 2);
  uint64_t v84 = v32;
  uint64_t v85 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 14);
  while (v27)
  {
    unint64_t v34 = __clz(__rbit64(v27));
    v27 &= v27 - 1;
    unint64_t v35 = v34 | (v30 << 6);
LABEL_22:
    uint64_t v29 = *v116;
    if (!(*v116)[2]) {
      goto LABEL_4;
    }
    uint64_t v39 = *(void *)(v32 + 48);
    uint64_t v40 = (uint64_t *)(*(void *)(v32 + 56) + (v35 << 6));
    uint64_t v109 = v40[1];
    uint64_t v107 = *v40;
    uint64_t v111 = v40[3];
    uint64_t v108 = v40[2];
    uint64_t v113 = v40[5];
    uint64_t v110 = v40[4];
    uint64_t v41 = v40[7];
    uint64_t v112 = v40[6];
    unint64_t v42 = sub_24B5D43DC(*(void *)(v39 + 8 * v35));
    if ((v43 & 1) == 0)
    {
LABEL_4:
      (*v33)(v14, 1, 1, v15);
      goto LABEL_5;
    }
    uint64_t v104 = v41;
    uint64_t v44 = v29[7];
    uint64_t v29 = (uint64_t *)v102;
    uint64_t v103 = *((void *)v102 + 9);
    uint64_t v45 = (void (*)(char *, unint64_t, uint64_t))*((void *)v102 + 2);
    v45(v14, v44 + v103 * v42, v15);
    ((void (*)(char *, void, uint64_t, uint64_t))v29[7])(v14, 0, 1, v15);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v29[6])(v14, 1, v15) == 1)
    {
LABEL_5:
      sub_24B5632A8((uint64_t)v14, &qword_2697CC460);
    }
    else
    {
      uint64_t v46 = (uint64_t)v105;
      (*v96)(v105, v14, v15);
      uint64_t v29 = (uint64_t *)*v100;
      if (!*(void *)(*v100 + 16))
      {
        uint64_t v50 = v97;
        (*v98)(v97, 1, 1, v99);
        goto LABEL_31;
      }
      swift_bridgeObjectRetain();
      unint64_t v47 = sub_24B59F008(v46);
      if (v48)
      {
        uint64_t v49 = v91;
        uint64_t v50 = v97;
        sub_24B659A1C(v29[7] + *(void *)(v91 + 72) * v47, v97, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
        BOOL v51 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56);
        uint64_t v52 = v50;
        uint64_t v53 = 0;
      }
      else
      {
        BOOL v51 = *v98;
        uint64_t v50 = v97;
        uint64_t v52 = v97;
        uint64_t v53 = 1;
      }
      uint64_t v54 = v99;
      uint64_t v93 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t *))v51;
      v51(v52, v53, 1, v99);
      swift_bridgeObjectRelease();
      uint64_t v29 = *v94;
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))*v94)(v50, 1, v54) == 1)
      {
LABEL_31:
        sub_24B5632A8(v50, &qword_2697CCC90);
        (*v95)(v105, v15);
      }
      else
      {
        uint64_t v87 = v29;
        sub_24B5632A8(v50, &qword_2697CCC90);
        uint64_t v55 = v89;
        v45(v89, (unint64_t)v105, v15);
        uint64_t v56 = v100;
        swift_beginAccess();
        uint64_t v57 = v90;
        v45(v90, (unint64_t)v55, v15);
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v59 = (uint64_t)v92;
        v45(v92, (unint64_t)v57, v15);
        uint64_t v117 = *v56;
        uint64_t v29 = (uint64_t *)v117;
        *uint64_t v56 = 0x8000000000000000;
        unint64_t v61 = sub_24B59F008(v59);
        uint64_t v62 = v29[2];
        BOOL v63 = (v60 & 1) == 0;
        uint64_t v64 = v62 + v63;
        if (__OFADD__(v62, v63)) {
          goto LABEL_47;
        }
        char v65 = v60;
        if (v29[3] < v64)
        {
          sub_24B6548E0(v64, isUniquelyReferenced_nonNull_native);
          unint64_t v66 = sub_24B59F008((uint64_t)v92);
          uint64_t v33 = v85;
          if ((v65 & 1) != (v67 & 1)) {
            goto LABEL_49;
          }
          unint64_t v61 = v66;
          goto LABEL_36;
        }
        uint64_t v29 = (uint64_t *)v99;
        uint64_t v33 = v85;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_24B656F58();
LABEL_36:
          uint64_t v29 = (uint64_t *)v99;
        }
        if ((v65 & 1) == 0) {
          goto LABEL_48;
        }
        uint64_t v86 = v117;
        unint64_t v68 = *(void *)(v91 + 72) * v61;
        uint64_t v69 = v88;
        sub_24B65A134(*(void *)(v117 + 56) + v68, v88, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
        v93(v69, 0, 1, v29);
        uint64_t v70 = *((int *)v29 + 5);
        uint64_t v93 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t *))v61;
        uint64_t v71 = v29;
        uint64_t v72 = v69 + v70 + *(int *)(type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0) + 40);
        uint64_t v73 = v109;
        *(void *)uint64_t v72 = v107;
        *(void *)(v72 + 8) = v73;
        uint64_t v74 = v111;
        *(void *)(v72 + 16) = v108;
        *(void *)(v72 + 24) = v74;
        uint64_t v75 = v113;
        *(void *)(v72 + 32) = v110;
        *(void *)(v72 + 40) = v75;
        uint64_t v76 = v104;
        *(void *)(v72 + 48) = v112;
        *(void *)(v72 + 56) = v76;
        *(unsigned char *)(v72 + 64) = 0;
        uint64_t v77 = v83;
        sub_24B563A6C(v69, v83, &qword_2697CCC90);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t *))v87)(v77, 1, v71) == 1)
        {
          sub_24B5632A8(v77, &qword_2697CCC90);
          uint64_t v78 = v117;
          int64_t v79 = (int64_t)v93;
          swift_arrayDestroy();
          sub_24B655C8C(v79, v78);
        }
        else
        {
          uint64_t v80 = v82;
          sub_24B65A134(v77, v82, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
          sub_24B65A134(v80, *(void *)(v86 + 56) + v68, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
        }
        uint64_t v32 = v84;
        sub_24B5632A8(v88, &qword_2697CCC90);
        uint64_t v29 = (uint64_t *)*v95;
        (*v95)(v92, v15);
        *uint64_t v100 = v117;
        ((void (*)(char *, uint64_t))v29)(v90, v15);
        ((void (*)(char *, uint64_t))v29)(v89, v15);
        swift_endAccess();
        ((void (*)(char *, uint64_t))v29)(v105, v15);
      }
    }
  }
  int64_t v36 = v30 + 1;
  if (__OFADD__(v30, 1))
  {
    __break(1u);
    goto LABEL_46;
  }
  if (v36 >= v115) {
    return swift_release();
  }
  unint64_t v37 = *(void *)(v114 + 8 * v36);
  ++v30;
  if (v37) {
    goto LABEL_21;
  }
  int64_t v30 = v36 + 1;
  if (v36 + 1 >= v115) {
    return swift_release();
  }
  unint64_t v37 = *(void *)(v114 + 8 * v30);
  if (v37) {
    goto LABEL_21;
  }
  int64_t v30 = v36 + 2;
  if (v36 + 2 >= v115) {
    return swift_release();
  }
  unint64_t v37 = *(void *)(v114 + 8 * v30);
  if (v37)
  {
LABEL_21:
    unint64_t v27 = (v37 - 1) & v37;
    unint64_t v35 = __clz(__rbit64(v37)) + (v30 << 6);
    goto LABEL_22;
  }
  int64_t v38 = v36 + 3;
  if (v38 >= v115) {
    return swift_release();
  }
  unint64_t v37 = *(void *)(v114 + 8 * v38);
  if (v37)
  {
    int64_t v30 = v38;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v30 = v38 + 1;
    if (__OFADD__(v38, 1)) {
      break;
    }
    if (v30 >= v115) {
      return swift_release();
    }
    unint64_t v37 = *(void *)(v114 + 8 * v30);
    ++v38;
    if (v37) {
      goto LABEL_21;
    }
  }
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  v93(v88, 1, 1, v29);
  __break(1u);
LABEL_49:
  uint64_t result = sub_24B682FF0();
  __break(1u);
  return result;
}

uint64_t sub_24B6446BC(uint64_t a1)
{
  uint64_t v26 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24B6825D0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24B682640();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 16))
  {
    uint64_t v26 = *(void *)&v1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v1;
    *(void *)(v14 + 24) = a1;
    aBlock[4] = (uint64_t)sub_24B65FE20;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_24B566C04;
    aBlock[3] = (uint64_t)&unk_26FE8F070;
    uint64_t v15 = _Block_copy(aBlock);
    uint64_t v16 = v1;
    swift_bridgeObjectRetain();
    sub_24B6825F0();
    uint64_t v27 = MEMORY[0x263F8EE78];
    sub_24B65D13C((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
    sub_24B562F04((uint64_t *)&unk_2697CC490);
    sub_24B5678F4((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
    sub_24B682D80();
    MEMORY[0x24C5D4CD0](0, v13, v9, v15);
    _Block_release(v15);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return swift_release();
  }
  else
  {
    uint64_t v18 = sub_24B57CB70();
    uint64_t v19 = v3;
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v21 = v26;
    v20(v5, v18, v26);
    uint64_t v22 = sub_24B6824B0();
    os_log_type_t v23 = sub_24B682B00();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      aBlock[0] = v25;
      *(_DWORD *)uint64_t v24 = 136380675;
      uint64_t v27 = sub_24B5627B8(0xD00000000000002BLL, 0x800000024B68F4C0, aBlock);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v22, v23, "ObjectCaptureSession.%{private}s: Received empty list of invalid mobileSfM pose for camera shots!", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v25, -1, -1);
      MEMORY[0x24C5D6C00](v24, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v5, v21);
  }
}

uint64_t sub_24B644B4C(void *a1, uint64_t a2)
{
  uint64_t v69 = a2;
  uint64_t v3 = sub_24B562F04(&qword_2697CC460);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24B682410();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24B6824D0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)v55 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)v55 - v19;
  (*(void (**)(id *__return_ptr, uint64_t))((*MEMORY[0x263F8EED0] & *a1) + 0x420))(v73, v18);
  if (v73[0] == (id)15)
  {
    uint64_t v61 = v11;
    uint64_t v62 = v17;
    uint64_t v21 = v10;
    sub_24B65A19C((id)0xF);
    sub_24B65A19C((id)0xF);
    uint64_t v22 = *(void *)((char *)a1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureManager);
    if (v22)
    {
      uint64_t v23 = v69;
      uint64_t v68 = *(void *)(v69 + 16);
      if (v68)
      {
        uint64_t v70 = v9;
        uint64_t v65 = v10;
        v55[1] = a1;
        uint64_t v67 = v22;
        uint64_t v24 = (char *)a1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotIDToUUIDMap;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_beginAccess();
        uint64_t v25 = 0;
        uint64_t v71 = v7 + 48;
        uint64_t v72 = v7 + 16;
        unint64_t v66 = (void (**)(char *, char *, uint64_t))(v7 + 32);
        BOOL v63 = (void (**)(char *, uint64_t))(v7 + 8);
        uint64_t v59 = (void (**)(char *, uint64_t))(v61 + 8);
        char v60 = (void (**)(char *, uint64_t, uint64_t))(v61 + 16);
        *(void *)&long long v26 = 136381187;
        long long v57 = v26;
        unint64_t v56 = 0x800000024B68F4C0;
        v55[2] = MEMORY[0x263F8EE58] + 8;
        uint64_t v27 = v68;
        uint64_t v64 = v24;
        while (1)
        {
          uint64_t v28 = *(void *)v24;
          if (*(void *)(*(void *)v24 + 16)
            && (uint64_t v29 = *(void *)(v23 + 8 * v25 + 32), v30 = sub_24B5D43DC(v29), (v31 & 1) != 0))
          {
            (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v5, *(void *)(v28 + 56) + *(void *)(v7 + 72) * v30, v6);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
            {
              uint64_t v32 = v70;
              (*v66)(v70, v5, v6);
              uint64_t v33 = v67;
              if ((*(uint64_t (**)(char *))(*(void *)v67 + 512))(v32))
              {
                uint64_t v34 = sub_24B57CB70();
                unint64_t v35 = v62;
                (*v60)(v62, v34, v65);
                swift_retain();
                int64_t v36 = sub_24B6824B0();
                os_log_type_t v37 = sub_24B682B30();
                LODWORD(v61) = v37;
                if (os_log_type_enabled(v36, v37))
                {
                  uint64_t v38 = swift_slowAlloc();
                  uint64_t v58 = swift_slowAlloc();
                  uint64_t v74 = v58;
                  *(_DWORD *)uint64_t v38 = v57;
                  *(void *)(v38 + 4) = sub_24B5627B8(0xD00000000000002BLL, v56, &v74);
                  *(_WORD *)(v38 + 12) = 2050;
                  *(void *)(v38 + 14) = v29;
                  *(_WORD *)(v38 + 22) = 2050;
                  *(void *)(v38 + 24) = (*(uint64_t (**)(void))(*(void *)v33 + 888))();
                  swift_release();
                  _os_log_impl(&dword_24B55E000, v36, (os_log_type_t)v61, "ObjectCaptureSession.%{private}s: Deleted unknown state pose from AC pose graph: sampleID: %{public}ld, number of invalid AC shots: %{public}ld", (uint8_t *)v38, 0x20u);
                  uint64_t v39 = v58;
                  swift_arrayDestroy();
                  MEMORY[0x24C5D6C00](v39, -1, -1);
                  uint64_t v40 = v38;
                  uint64_t v23 = v69;
                  MEMORY[0x24C5D6C00](v40, -1, -1);
                }
                else
                {
                  swift_release();
                }

                (*v59)(v35, v65);
                (*v63)(v70, v6);
              }
              else
              {
                (*v63)(v32, v6);
              }
              uint64_t v27 = v68;
              uint64_t v24 = v64;
              goto LABEL_7;
            }
          }
          else
          {
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
          }
          sub_24B5632A8((uint64_t)v5, &qword_2697CC460);
LABEL_7:
          if (v27 == ++v25)
          {
            swift_bridgeObjectRelease();
            uint64_t v22 = v67;
            goto LABEL_26;
          }
        }
      }
      swift_retain();
LABEL_26:
      sub_24B64D92C();
      uint64_t v74 = (*(uint64_t (**)(void))(*(void *)v22 + 888))();
      sub_24B682500();
      swift_release();
      return swift_release();
    }
    else
    {
      uint64_t v48 = sub_24B57CB70();
      uint64_t v49 = v61;
      uint64_t v50 = v21;
      (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v20, v48, v21);
      BOOL v51 = sub_24B6824B0();
      uint64_t v52 = sub_24B682B20();
      if (os_log_type_enabled(v51, (os_log_type_t)v52))
      {
        uint64_t v53 = (uint8_t *)swift_slowAlloc();
        uint64_t v54 = (void *)swift_slowAlloc();
        v73[0] = v54;
        *(_DWORD *)uint64_t v53 = 136380675;
        uint64_t v74 = sub_24B5627B8(0xD00000000000002BLL, 0x800000024B68F4C0, (uint64_t *)v73);
        sub_24B682CD0();
        _os_log_impl(&dword_24B55E000, v51, (os_log_type_t)v52, "ObjectCaptureSession.%{private}s: Failed to update invalid shot pose - capture manager has not been initialized!", v53, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v54, -1, -1);
        MEMORY[0x24C5D6C00](v53, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v20, v50);
    }
  }
  else
  {
    sub_24B65A19C(v73[0]);
    sub_24B65A19C((id)0xF);
    uint64_t v41 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v41, v10);
    unint64_t v42 = sub_24B6824B0();
    os_log_type_t v43 = sub_24B682B20();
    uint64_t v44 = v11;
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v45 = (uint8_t *)swift_slowAlloc();
      uint64_t v46 = (void *)swift_slowAlloc();
      v73[0] = v46;
      *(_DWORD *)uint64_t v45 = 136380675;
      uint64_t v74 = sub_24B5627B8(0xD00000000000002BLL, 0x800000024B68F4C0, (uint64_t *)v73);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v42, v43, "ObjectCaptureSession.%{private}s: Session not in scanning mode!", v45, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v46, -1, -1);
      MEMORY[0x24C5D6C00](v45, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v14, v10);
  }
}

uint64_t sub_24B645470(uint64_t a1)
{
  uint64_t v3 = sub_24B6825D0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24B682640();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = *(void *)&v1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(void *)(v11 + 24) = a1;
  aBlock[4] = sub_24B65FE40;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B566C04;
  aBlock[3] = &unk_26FE8F0C0;
  uint64_t v12 = _Block_copy(aBlock);
  uint64_t v13 = v1;
  swift_bridgeObjectRetain();
  sub_24B6825F0();
  v15[1] = MEMORY[0x263F8EE78];
  sub_24B65D13C((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
  sub_24B562F04((uint64_t *)&unk_2697CC490);
  sub_24B5678F4((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
  sub_24B682D80();
  MEMORY[0x24C5D4CD0](0, v10, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

uint64_t sub_24B64573C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_24B6824D0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B64D5A4();
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  sub_24B682500();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v7 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_24B6824B0();
  os_log_type_t v9 = sub_24B682B30();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v14 = v11;
    *(_DWORD *)uint64_t v10 = 136380931;
    uint64_t v13 = sub_24B5627B8(0xD000000000000022, 0x800000024B691460, &v14);
    sub_24B682CD0();
    *(_WORD *)(v10 + 12) = 2050;
    uint64_t v13 = *(void *)(a2 + 16);
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24B55E000, v8, v9, "ObjectCaptureSession.%{private}s: Published %{public}ld updated mesh anchors", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v11, -1, -1);
    MEMORY[0x24C5D6C00](v10, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_24B6459B0(char a1)
{
  char v2 = a1 & 1;
  uint64_t v3 = sub_24B6825D0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24B682640();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = *(void *)&v1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = v2;
  *(void *)(v11 + 24) = v1;
  aBlock[4] = sub_24B65FE48;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B566C04;
  aBlock[3] = &unk_26FE8F110;
  uint64_t v12 = _Block_copy(aBlock);
  uint64_t v13 = v1;
  sub_24B6825F0();
  v15[1] = MEMORY[0x263F8EE78];
  sub_24B65D13C((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
  sub_24B562F04((uint64_t *)&unk_2697CC490);
  sub_24B5678F4((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
  sub_24B682D80();
  MEMORY[0x24C5D4CD0](0, v10, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

uint64_t sub_24B645C78(char a1, uint64_t a2)
{
  int v33 = a1 & 1;
  uint64_t v3 = sub_24B6824D0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v28 - v8;
  uint64_t v10 = sub_24B57CB70();
  unint64_t v30 = *(void (**)(char *))(v4 + 16);
  uint64_t v31 = v10;
  v30(v9);
  uint64_t v11 = sub_24B6824B0();
  os_log_type_t v12 = sub_24B682B30();
  BOOL v13 = os_log_type_enabled(v11, v12);
  uint64_t v32 = v4;
  if (v13)
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v29 = v7;
    uint64_t v15 = v14;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v35 = v16;
    *(_DWORD *)uint64_t v15 = 136380931;
    uint64_t v34 = sub_24B5627B8(0xD000000000000027, 0x800000024B691430, &v35);
    sub_24B682CD0();
    *(_WORD *)(v15 + 12) = 2082;
    LOBYTE(v34) = v33;
    uint64_t v17 = sub_24B682820();
    uint64_t v34 = sub_24B5627B8(v17, v18, &v35);
    uint64_t v4 = v32;
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24B55E000, v11, v12, "ObjectCaptureSession.%{private}s: Received request from area mode mesh manager\nto update scan extent to: %{public}s.", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v16, -1, -1);
    uint64_t v19 = v15;
    uint64_t v7 = v29;
    MEMORY[0x24C5D6C00](v19, -1, -1);
  }

  uint64_t v20 = *(void (**)(char *, uint64_t))(v4 + 8);
  v20(v9, v3);
  *(unsigned char *)(a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformScanExtent) = v33;
  sub_24B62FB04();
  uint64_t v22 = v21;
  objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession), sel_runWithConfiguration_options_, v21, 8);
  ((void (*)(char *, uint64_t, uint64_t))v30)(v7, v31, v3);
  uint64_t v23 = sub_24B6824B0();
  os_log_type_t v24 = sub_24B682B30();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v35 = v26;
    *(_DWORD *)uint64_t v25 = 136380675;
    uint64_t v34 = sub_24B5627B8(0xD000000000000027, 0x800000024B691430, &v35);
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v23, v24, "ObjectCaptureSession.%{private}s: Restarted scene reconstruction with updated voxel size.", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v26, -1, -1);
    MEMORY[0x24C5D6C00](v25, -1, -1);
  }
  else
  {
  }
  return ((uint64_t (*)(char *, uint64_t))v20)(v7, v3);
}

uint64_t sub_24B646084(char a1)
{
  return sub_24B6459B0(a1 & 1);
}

uint64_t sub_24B64608C(int a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v34 = a2;
  LODWORD(v6) = a1;
  uint64_t v7 = sub_24B6825D0();
  uint64_t v38 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  os_log_type_t v37 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24B682640();
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t v36 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24B6824D0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  uint64_t v17 = sub_24B6824B0();
  os_log_type_t v18 = sub_24B682B30();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v32 = v4;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v33 = v7;
    uint64_t v20 = (uint8_t *)v19;
    uint64_t v21 = swift_slowAlloc();
    int v31 = v6;
    uint64_t v6 = v21;
    aBlock[0] = v21;
    unint64_t v30 = v11;
    *(_DWORD *)uint64_t v20 = 136380675;
    uint64_t v39 = sub_24B5627B8(0xD000000000000031, 0x800000024B68F4F0, aBlock);
    uint64_t v4 = v32;
    uint64_t v11 = v30;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v17, v18, "ObjectCaptureSession.%{private}s: Received finalize input callback.", v20, 0xCu);
    swift_arrayDestroy();
    uint64_t v22 = v6;
    LOBYTE(v6) = v31;
    MEMORY[0x24C5D6C00](v22, -1, -1);
    uint64_t v23 = v20;
    uint64_t v7 = v33;
    MEMORY[0x24C5D6C00](v23, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = v34;
  *(void *)(v24 + 16) = v4;
  *(void *)(v24 + 24) = v25;
  *(unsigned char *)(v24 + 32) = a3 & 1;
  *(unsigned char *)(v24 + 33) = v6 & 1;
  aBlock[4] = (uint64_t)sub_24B65FE8C;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24B566C04;
  aBlock[3] = (uint64_t)&unk_26FE8F160;
  uint64_t v26 = _Block_copy(aBlock);
  id v27 = v4;
  sub_24B6825F0();
  uint64_t v39 = MEMORY[0x263F8EE78];
  sub_24B65D13C((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
  sub_24B562F04((uint64_t *)&unk_2697CC490);
  sub_24B5678F4((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
  uint64_t v28 = v37;
  sub_24B682D80();
  MEMORY[0x24C5D4CD0](0, v11, v28, v26);
  _Block_release(v26);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v28, v7);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v36);
  return swift_release();
}

uint64_t sub_24B646548(char *a1, uint64_t a2, int a3, int a4)
{
  int v42 = a3;
  uint64_t v41 = a2;
  uint64_t v6 = sub_24B6824D0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  unint64_t v47 = &v38[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v38[-v10];
  uint64_t v12 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pgManager;
  uint64_t v13 = *(void *)&a1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pgManager];
  if (v13)
  {
    uint64_t v14 = *(void (**)(uint64_t))(*(void *)v13 + 632);
    uint64_t v15 = swift_retain();
    v14(v15);
    swift_release();
  }
  uint64_t v16 = sub_24B57CB70();
  uint64_t v17 = *(void (**)(void))(v7 + 16);
  uint64_t v45 = v16;
  uint64_t v46 = v7 + 16;
  uint64_t v44 = (void (*)(unsigned char *, uint64_t, uint64_t))v17;
  v17(v11);
  os_log_type_t v18 = sub_24B6824B0();
  os_log_type_t v19 = sub_24B682B30();
  if (os_log_type_enabled(v18, v19))
  {
    int v39 = a4;
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v40 = v6;
    uint64_t v22 = v21;
    v50[0] = v21;
    *(_DWORD *)uint64_t v20 = 136380675;
    uint64_t v49 = sub_24B5627B8(0xD000000000000031, 0x800000024B68F4F0, v50);
    LOBYTE(a4) = v39;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v18, v19, "ObjectCaptureSession.%{private}s: Mobile sfm has been disabled gracefully.", v20, 0xCu);
    swift_arrayDestroy();
    uint64_t v23 = v22;
    uint64_t v6 = v40;
    MEMORY[0x24C5D6C00](v23, -1, -1);
    MEMORY[0x24C5D6C00](v20, -1, -1);
  }

  os_log_type_t v43 = *(void (**)(unsigned char *, uint64_t))(v7 + 8);
  v43(v11, v6);
  *(void *)&a1[v12] = 0;
  swift_release();
  uint64_t v24 = &a1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_estimatedReconstructionTime];
  swift_beginAccess();
  *(void *)uint64_t v24 = v41;
  v24[8] = v42 & 1;
  sub_24B613218();
  uint64_t v25 = *(void **)&a1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_stateAfterFinishing];
  if (v25 != (void *)18)
  {
    if (a4)
    {
      uint64_t v26 = v6;
      sub_24B66DD1C(*(id *)&a1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_stateAfterFinishing]);
    }
    else
    {
      if (v25 == (void *)17)
      {
        sub_24B66DD1C((id)0x11);
        sub_24B65A19C((id)0x11);
        sub_24B65A19C((id)0x11);
        swift_getKeyPath();
        swift_getKeyPath();
        sub_24B682560();
        swift_release();
        swift_release();
        id v27 = (void *)v49;
        swift_getKeyPath();
        swift_getKeyPath();
        uint64_t v49 = 5;
        a1;
        sub_24B682570();
        uint64_t v49 = (uint64_t)v27;
        sub_24B612878((void **)&v49);
        sub_24B65A19C(v27);
        goto LABEL_12;
      }
      uint64_t v26 = v6;
      sub_24B66DD1C(*(id *)&a1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_stateAfterFinishing]);
      sub_24B66DD1C(v25);
      sub_24B65A19C(v25);
      sub_24B65A19C((id)0x11);
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_24B66DD1C(v25);
    sub_24B682560();
    swift_release();
    swift_release();
    uint64_t v28 = (void *)v49;
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v49 = (uint64_t)v25;
    a1;
    sub_24B682570();
    uint64_t v49 = (uint64_t)v28;
    sub_24B612878((void **)&v49);
    sub_24B65A19C(v28);
    sub_24B65E308(v25);
    uint64_t v6 = v26;
  }
LABEL_12:
  uint64_t v29 = v47;
  v44(v47, v45, v6);
  unint64_t v30 = sub_24B6824B0();
  os_log_type_t v31 = sub_24B682B30();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    uint64_t v33 = v6;
    uint64_t v34 = swift_slowAlloc();
    uint64_t v49 = v34;
    *(_DWORD *)uint64_t v32 = 136380675;
    uint64_t v48 = sub_24B5627B8(0xD000000000000031, 0x800000024B68F4F0, &v49);
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v30, v31, "ObjectCaptureSession.%{private}s: MobileSfM exited gracefully and the snapshot was written if applicable.", v32, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v34, -1, -1);
    MEMORY[0x24C5D6C00](v32, -1, -1);

    uint64_t v35 = v29;
    uint64_t v36 = v33;
  }
  else
  {

    uint64_t v35 = v29;
    uint64_t v36 = v6;
  }
  return ((uint64_t (*)(unsigned char *, uint64_t))v43)(v35, v36);
}

uint64_t sub_24B646B70(int a1, uint64_t a2, char a3)
{
  return sub_24B64608C(a1, a2, a3 & 1);
}

uint64_t sub_24B646B78(uint64_t a1)
{
  uint64_t v3 = sub_24B6825D0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24B682640();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = *(void *)&v1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(void *)(v11 + 24) = a1;
  aBlock[4] = sub_24B65FF04;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B566C04;
  aBlock[3] = &unk_26FE8F1B0;
  uint64_t v12 = _Block_copy(aBlock);
  uint64_t v13 = v1;
  swift_retain();
  sub_24B6825F0();
  v15[1] = MEMORY[0x263F8EE78];
  sub_24B65D13C((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
  sub_24B562F04((uint64_t *)&unk_2697CC490);
  sub_24B5678F4((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
  sub_24B682D80();
  MEMORY[0x24C5D4CD0](0, v10, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

void sub_24B646E44(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(id *__return_ptr, uint64_t))((*MEMORY[0x263F8EED0] & *a1) + 0x420))(&v19, v6);
  if (v19 == (id)15)
  {
    sub_24B65A19C((id)0xF);
    sub_24B65A19C((id)0xF);
    uint64_t v9 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v9, v4);
    uint64_t v10 = sub_24B6824B0();
    os_log_type_t v11 = sub_24B682B30();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v17 = a2;
      uint64_t v13 = (uint8_t *)v12;
      uint64_t v14 = (void *)swift_slowAlloc();
      id v19 = v14;
      *(_DWORD *)uint64_t v13 = 136380675;
      uint64_t v18 = sub_24B5627B8(0xD000000000000023, 0x800000024B691400, (uint64_t *)&v19);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v10, v11, "ObjectCaptureSession.%{private}s: Updated mobileSfM point cloud.", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v14, -1, -1);
      uint64_t v15 = v13;
      a2 = v17;
      MEMORY[0x24C5D6C00](v15, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    *(void *)((char *)a1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__mobileSfMPointCloudBuffer) = a2;
    swift_retain();
    swift_release();
  }
  else
  {
    sub_24B65A19C(v19);
    sub_24B65A19C((id)0xF);
  }
}

Swift::Void __swiftcall ObjectCaptureSession.session(_:didUpdate:)(ARSession _, ARFrame didUpdate)
{
}

Swift::Void __swiftcall ObjectCaptureSession.session(_:didAdd:)(ARSession _, Swift::OpaquePointer didAdd)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24B6825D0();
  uint64_t v31 = *(void *)(v6 - 8);
  uint64_t v32 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v29 = (char *)&isa - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_24B682640();
  uint64_t v28 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  id v27 = (char *)&isa - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24B6824D0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&isa - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  swift_bridgeObjectRetain_n();
  uint64_t v14 = sub_24B6824B0();
  os_log_type_t v15 = sub_24B682B10();
  if (os_log_type_enabled(v14, v15))
  {
    isa = _.super.isa;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    aBlock[0] = v17;
    *(_DWORD *)uint64_t v16 = 136380931;
    uint64_t v33 = sub_24B5627B8(0xD000000000000012, 0x800000024B68F530, aBlock);
    sub_24B682CD0();
    *(_WORD *)(v16 + 12) = 2050;
    if ((unint64_t)didAdd._rawValue >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_24B682F00();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v18 = *(void *)(((unint64_t)didAdd._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v33 = v18;
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24B55E000, v14, v15, "ObjectCaptureSession.%{private}s: has been called. #anchors = %{public}ld", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v17, -1, -1);
    MEMORY[0x24C5D6C00](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    _.super.isa = isa;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  if ((*((unsigned char *)v3 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__bypassAllAlgos) & 1) == 0)
  {
    uint64_t v19 = swift_allocObject();
    *(Swift::OpaquePointer *)(v19 + 16) = didAdd;
    *(void *)(v19 + 24) = v3;
    *(ARSession *)(v19 + 32) = _;
    aBlock[4] = (uint64_t)sub_24B660DCC;
    aBlock[5] = v19;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_24B566C04;
    aBlock[3] = (uint64_t)&unk_26FE8F200;
    uint64_t v20 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    id v21 = v3;
    uint64_t v22 = _.super.isa;
    uint64_t v23 = v27;
    sub_24B6825F0();
    uint64_t v33 = MEMORY[0x263F8EE78];
    sub_24B65D13C((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
    sub_24B562F04((uint64_t *)&unk_2697CC490);
    sub_24B5678F4((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
    uint64_t v24 = v29;
    uint64_t v25 = v32;
    sub_24B682D80();
    MEMORY[0x24C5D4CD0](0, v23, v24, v20);
    _Block_release(v20);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v24, v25);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v23, v30);
    swift_release();
  }
}

void sub_24B6476B8(unint64_t a1, uint64_t isUniquelyReferenced_nonNull_native, void *a3)
{
  uint64_t v6 = sub_24B682C90();
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (uint64_t)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  unint64_t v11 = (unint64_t)&v40 - v10;
  uint64_t v49 = sub_24B682410();
  uint64_t v45 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v51 = (uint64_t)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v48 = sub_24B682F00();
    if (v48) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v48 = v13;
    if (v13)
    {
LABEL_3:
      uint64_t v40 = a3;
      unint64_t v41 = v11;
      uint64_t v42 = v9;
      uint64_t v43 = isUniquelyReferenced_nonNull_native;
      uint64_t v14 = (void *)(isUniquelyReferenced_nonNull_native + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_planeMap);
      unint64_t v50 = a1 & 0xC000000000000001;
      uint64_t v44 = v45 + 16;
      uint64_t v46 = (void (**)(uint64_t, uint64_t))(v45 + 8);
      unint64_t v47 = a1;
      uint64_t v15 = 4;
      a3 = (void *)v48;
      while (1)
      {
        if (v50) {
          id v16 = (id)MEMORY[0x24C5D4F60](v15 - 4, a1);
        }
        else {
          id v16 = *(id *)(a1 + 8 * v15);
        }
        uint64_t v17 = v16;
        uint64_t v18 = (void *)(v15 - 3);
        if (__OFADD__(v15 - 4, 1))
        {
          __break(1u);
LABEL_25:
          __break(1u);
LABEL_26:
          __break(1u);
          goto LABEL_27;
        }
        self;
        uint64_t v19 = swift_dynamicCastObjCClass();
        if (v19) {
          break;
        }
LABEL_6:

        ++v15;
        if (v18 == a3)
        {
          swift_bridgeObjectRelease();
          uint64_t v9 = v42;
          int isUniquelyReferenced_nonNull_native = v43;
          a3 = v40;
          unint64_t v11 = v41;
          goto LABEL_29;
        }
      }
      uint64_t v20 = (void *)v19;
      id v21 = v17;
      id v22 = objc_msgSend(v20, sel_identifier);
      uint64_t v9 = v51;
      sub_24B6823F0();

      swift_beginAccess();
      a1 = (unint64_t)v21;
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v52 = (void *)*v14;
      a3 = v52;
      *uint64_t v14 = 0x8000000000000000;
      unint64_t v11 = sub_24B59F008(v9);
      uint64_t v24 = a3[2];
      BOOL v25 = (v23 & 1) == 0;
      uint64_t v26 = v24 + v25;
      if (__OFADD__(v24, v25)) {
        goto LABEL_25;
      }
      uint64_t v9 = v23;
      if (a3[3] < v26)
      {
        sub_24B655864(v26, isUniquelyReferenced_nonNull_native, &qword_2697CCD60);
        unint64_t v27 = sub_24B59F008(v51);
        if ((v9 & 1) != (v28 & 1))
        {
          sub_24B682FF0();
          __break(1u);
          return;
        }
        unint64_t v11 = v27;
        a3 = v52;
        if ((v9 & 1) == 0) {
          goto LABEL_19;
        }
LABEL_4:
        int isUniquelyReferenced_nonNull_native = a3[7];
        uint64_t v9 = 8 * v11;

        *(void *)(isUniquelyReferenced_nonNull_native + 8 * v11) = v20;
LABEL_5:
        *uint64_t v14 = a3;
        swift_bridgeObjectRelease();
        (*v46)(v51, v49);
        swift_endAccess();

        a1 = v47;
        a3 = (void *)v48;
        goto LABEL_6;
      }
      if (isUniquelyReferenced_nonNull_native)
      {
        a3 = v52;
        if (v23) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_24B65794C(&qword_2697CCD60);
        a3 = v52;
        if (v9) {
          goto LABEL_4;
        }
      }
LABEL_19:
      a3[(v11 >> 6) + 8] |= 1 << v11;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v45 + 16))(a3[6] + *(void *)(v45 + 72) * v11, v51, v49);
      *(void *)(a3[7] + 8 * v11) = v20;
      uint64_t v29 = a3[2];
      BOOL v30 = __OFADD__(v29, 1);
      uint64_t v31 = v29 + 1;
      if (v30) {
        goto LABEL_26;
      }
      a3[2] = v31;
      goto LABEL_5;
    }
  }
  swift_bridgeObjectRelease();
LABEL_29:
  id v32 = objc_msgSend(a3, sel_currentFrame, v40, v41, v42, v43, v44);
  if (v32)
  {
    uint64_t v33 = v32;
    uint64_t v34 = *(void **)(isUniquelyReferenced_nonNull_native + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_plane);
    if (v34)
    {
      id v35 = v34;
      id v36 = objc_msgSend(v33, sel_camera);
      sub_24B682CA0();

      uint64_t v37 = sub_24B682C80();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v9, 2, 2, v37);
      LOBYTE(v36) = sub_24B682C70();
      uint64_t v38 = (uint64_t (*)(void))MEMORY[0x263F8C968];
      sub_24B65EF80(v9, MEMORY[0x263F8C968]);
      sub_24B65EF80(v11, v38);
      if (v36)
      {
        int v39 = *(void **)(isUniquelyReferenced_nonNull_native + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_prevPlane);
        *(void *)(isUniquelyReferenced_nonNull_native + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_prevPlane) = v34;

        uint64_t v33 = v39;
      }
      else
      {

        uint64_t v33 = v35;
      }
    }
  }
  sub_24B647BC0();
}

void sub_24B647BC0()
{
  uint64_t v1 = v0;
  uint64_t v69 = sub_24B6824D0();
  char v2 = *(void (***)(char *, uint64_t, uint64_t))(v69 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v69);
  uint64_t v5 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v68 = (char *)&v67 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v67 - v8;
  uint64_t v10 = sub_24B682410();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(_OWORD *__return_ptr, uint64_t))((*MEMORY[0x263F8EED0] & *v0) + 0x420))(v73, v12);
  uint64_t v15 = &unk_2697CF000;
  id v16 = (void *)&unk_2697CF000;
  if (*(void *)&v73[0] != 15)
  {
    sub_24B65A19C(*(id *)&v73[0]);
    sub_24B65A19C((id)0xF);
    unint64_t v27 = (char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_tapPosition;
    if (*((unsigned char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_tapPosition + 33))
    {
      char v28 = *(void **)((char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_plane);
      *(void *)((char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_plane) = 0;
    }
    else
    {
      char v29 = v27[32];
      long long v30 = *((_OWORD *)v27 + 1);
      v73[0] = *(_OWORD *)v27;
      v73[1] = v30;
      char v74 = v29 & 1;
      uint64_t v31 = sub_24B64CF90((uint64_t)v73);
      char v28 = *(void **)((char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_plane);
      *(void *)((char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_plane) = v31;
    }

    goto LABEL_30;
  }
  uint64_t v67 = v2;
  sub_24B65A19C((id)0xF);
  sub_24B65A19C((id)0xF);
  uint64_t v17 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_plane;
  uint64_t v18 = *(void **)((char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_plane);
  uint64_t v19 = (void *)((char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_planeMap);
  swift_beginAccess();
  if (v18)
  {
    uint64_t v20 = *v19;
    id v21 = v18;
    swift_bridgeObjectRetain();
    id v22 = objc_msgSend(v21, sel_identifier);
    sub_24B6823F0();

    if (*(void *)(v20 + 16) && (unint64_t v23 = sub_24B59F008((uint64_t)v14), (v24 & 1) != 0))
    {
      BOOL v25 = *(void **)(*(void *)(v20 + 56) + 8 * v23);
      id v26 = v25;
    }
    else
    {
      BOOL v25 = 0;
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    BOOL v25 = 0;
  }
  id v32 = *(void **)((char *)v1 + v17);
  *(void *)((char *)v1 + v17) = v25;

  uint64_t v15 = &unk_2697CF000;
  uint64_t v33 = v69;
  if (!*(void *)((char *)v1 + v17))
  {
    id v16 = &unk_2697CF000;
    unint64_t v41 = *(void **)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_prevPlane);
    if (v41)
    {
      uint64_t v42 = v41;
      uint64_t v43 = sub_24B57CB70();
      uint64_t v44 = v67;
      v67[2](v9, v43, v33);
      uint64_t v45 = sub_24B6824B0();
      os_log_type_t v46 = sub_24B682B30();
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v47 = swift_slowAlloc();
        uint64_t v68 = v42;
        uint64_t v48 = (uint8_t *)v47;
        uint64_t v33 = swift_slowAlloc();
        v72[0] = v33;
        *(_DWORD *)uint64_t v48 = 136380675;
        uint64_t v70 = sub_24B5627B8(0x6C50657461647075, 0xED00002928656E61, v72);
        id v16 = (void *)&unk_2697CF000;
        uint64_t v15 = (void *)&unk_2697CF000;
        sub_24B682CD0();
        _os_log_impl(&dword_24B55E000, v45, v46, "ObjectCaptureSession.%{private}s: Plane under the object was removed, looking for another plane close to the old plane.", v48, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v33, -1, -1);
        uint64_t v49 = v48;
        uint64_t v42 = v68;
        MEMORY[0x24C5D6C00](v49, -1, -1);

        uint64_t v51 = v44[1];
        unint64_t v50 = (char *)(v44 + 1);
        ((void (*)(char *, uint64_t))v51)(v9, v69);
      }
      else
      {

        long long v57 = v44[1];
        unint64_t v50 = (char *)(v44 + 1);
        ((void (*)(char *, uint64_t))v57)(v9, v33);
      }
      id v58 = sub_24B64CB88(v42);
      uint64_t v53 = *(NSObject **)((char *)v1 + v17);
      *(void *)((char *)v1 + v17) = v58;

      if (*(void *)((char *)v1 + v17)) {
        goto LABEL_30;
      }
      __break(1u);
    }
    else
    {
      uint64_t v17 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForNewPlane;
      if (*((unsigned char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForNewPlane)) {
        goto LABEL_30;
      }
      uint64_t v52 = sub_24B57CB70();
      uint64_t v42 = (char *)v67;
      unint64_t v50 = v68;
      v67[2](v68, v52, v33);
      uint64_t v53 = sub_24B6824B0();
      os_log_type_t v54 = sub_24B682B20();
      if (os_log_type_enabled(v53, v54))
      {
        uint64_t v55 = (uint8_t *)swift_slowAlloc();
        uint64_t v56 = swift_slowAlloc();
        v72[0] = v56;
        *(_DWORD *)uint64_t v55 = 136380675;
        uint64_t v70 = sub_24B5627B8(0x6C50657461647075, 0xED00002928656E61, v72);
        uint64_t v15 = (void *)&unk_2697CF000;
        sub_24B682CD0();
        _os_log_impl(&dword_24B55E000, v53, v54, "ObjectCaptureSession.%{private}s: Plane under the object was removed, cloudn't find another plane close to the old plane. Setting should wait for plane = true.", v55, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v56, -1, -1);
        MEMORY[0x24C5D6C00](v55, -1, -1);

        (*((void (**)(char *, uint64_t))v42 + 1))(v68, v69);
LABEL_29:
        *((unsigned char *)v1 + v17) = 1;
        goto LABEL_30;
      }
    }

    (*((void (**)(char *, uint64_t))v42 + 1))(v50, v33);
    goto LABEL_29;
  }
  uint64_t v34 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForNewPlane;
  id v16 = (void *)&unk_2697CF000;
  if (*((unsigned char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForNewPlane) == 1)
  {
    uint64_t v35 = sub_24B57CB70();
    id v36 = v67;
    v67[2](v5, v35, v33);
    uint64_t v37 = sub_24B6824B0();
    os_log_type_t v38 = sub_24B682B30();
    if (os_log_type_enabled(v37, v38))
    {
      int v39 = (uint8_t *)swift_slowAlloc();
      uint64_t v68 = (char *)swift_slowAlloc();
      v72[0] = (uint64_t)v68;
      *(_DWORD *)int v39 = 136380675;
      uint64_t v70 = sub_24B5627B8(0x6C50657461647075, 0xED00002928656E61, v72);
      uint64_t v15 = (void *)&unk_2697CF000;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v37, v38, "ObjectCaptureSession.%{private}s: Found a new plane under the object after it was removed. Setting should wait for plane = false.", v39, 0xCu);
      uint64_t v40 = v68;
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v40, -1, -1);
      MEMORY[0x24C5D6C00](v39, -1, -1);

      ((void (*)(char *, uint64_t))v36[1])(v5, v69);
    }
    else
    {

      ((void (*)(char *, uint64_t))v36[1])(v5, v33);
    }
    *((unsigned char *)v1 + v34) = 0;
  }
LABEL_30:
  uint64_t v59 = v15[249];
  char v60 = *(void **)((char *)v1 + v59);
  uint64_t v61 = *(void **)((char *)v1 + v16[250]);
  id v62 = v61;
  id v63 = v60;
  sub_24B660E40(v60, v61);

  if (*((unsigned char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugPlaneDetection) == 1)
  {
    sub_24B64D6BC();
    uint64_t v64 = (void *)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_planeMap);
    swift_beginAccess();
    uint64_t v65 = *(void **)((char *)v1 + v59);
    uint64_t v70 = *v64;
    uint64_t v71 = v65;
    id v66 = v65;
    swift_bridgeObjectRetain();
    sub_24B682500();

    swift_bridgeObjectRelease();
    swift_release();
  }
}

Swift::Void __swiftcall ObjectCaptureSession.session(_:didUpdate:)(ARSession _, Swift::OpaquePointer didUpdate)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24B6825D0();
  uint64_t v31 = *(void *)(v6 - 8);
  uint64_t v32 = v6;
  MEMORY[0x270FA5388](v6);
  char v29 = (char *)&isa - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_24B682640();
  uint64_t v28 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  unint64_t v27 = (char *)&isa - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24B6824D0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&isa - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  swift_bridgeObjectRetain_n();
  uint64_t v14 = sub_24B6824B0();
  os_log_type_t v15 = sub_24B682B10();
  if (os_log_type_enabled(v14, v15))
  {
    isa = _.super.isa;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    aBlock[0] = v17;
    *(_DWORD *)uint64_t v16 = 136380931;
    uint64_t v33 = sub_24B5627B8(0xD000000000000015, 0x800000024B68F550, aBlock);
    sub_24B682CD0();
    *(_WORD *)(v16 + 12) = 2050;
    if ((unint64_t)didUpdate._rawValue >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_24B682F00();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v18 = *(void *)(((unint64_t)didUpdate._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v33 = v18;
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24B55E000, v14, v15, "ObjectCaptureSession.%{private}s: has been called. #anchors = %{public}ld", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v17, -1, -1);
    MEMORY[0x24C5D6C00](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    _.super.isa = isa;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  if ((*((unsigned char *)v3 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__bypassAllAlgos) & 1) == 0)
  {
    uint64_t v19 = swift_allocObject();
    *(Swift::OpaquePointer *)(v19 + 16) = didUpdate;
    *(void *)(v19 + 24) = v3;
    *(ARSession *)(v19 + 32) = _;
    aBlock[4] = (uint64_t)sub_24B660DDC;
    aBlock[5] = v19;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_24B566C04;
    aBlock[3] = (uint64_t)&unk_26FE8F250;
    uint64_t v20 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    id v21 = v3;
    id v22 = _.super.isa;
    unint64_t v23 = v27;
    sub_24B6825F0();
    uint64_t v33 = MEMORY[0x263F8EE78];
    sub_24B65D13C((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
    sub_24B562F04((uint64_t *)&unk_2697CC490);
    sub_24B5678F4((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
    char v24 = v29;
    uint64_t v25 = v32;
    sub_24B682D80();
    MEMORY[0x24C5D4CD0](0, v23, v24, v20);
    _Block_release(v20);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v24, v25);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v23, v30);
    swift_release();
  }
}

void sub_24B6489A8(unint64_t a1, void *a2, void *a3)
{
  id v332 = a3;
  uint64_t v5 = sub_24B682C90();
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  v325 = (char *)v300 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  v324 = (char *)v300 - v8;
  uint64_t v9 = sub_24B562F04(&qword_2697CCC90);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v314 = (uint64_t)v300 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v315 = (uint64_t)v300 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  v333 = (char *)v300 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  v345 = (char *)v300 - v17;
  MEMORY[0x270FA5388](v16);
  v346 = (char *)v300 - v18;
  uint64_t v19 = sub_24B562F04(&qword_2697CC460);
  MEMORY[0x270FA5388](v19 - 8);
  unint64_t v21 = (unint64_t)v300 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v353 = sub_24B6824D0();
  v374 = *(char **)(v353 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v353);
  v337 = (char *)v300 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  v307 = (char *)v300 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  v321 = (char *)v300 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  v349 = (char *)v300 - v29;
  MEMORY[0x270FA5388](v28);
  v331 = (char *)v300 - v30;
  uint64_t v372 = sub_24B682410();
  uint64_t v338 = *(void *)(v372 - 8);
  uint64_t v31 = MEMORY[0x270FA5388](v372);
  v318 = (char *)v300 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v35 = (void (*)(void, __n128, __n128, __n128, __n128))((char *)v300 - v34);
  uint64_t v36 = MEMORY[0x270FA5388](v33);
  os_log_type_t v38 = (char *)v300 - v37;
  uint64_t v39 = MEMORY[0x270FA5388](v36);
  v316 = (char *)v300 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  v320 = (char *)v300 - v42;
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  v319 = (char *)v300 - v44;
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  v335 = (char *)v300 - v46;
  uint64_t v47 = MEMORY[0x270FA5388](v45);
  v344 = (char *)v300 - v48;
  uint64_t v49 = MEMORY[0x270FA5388](v47);
  v352 = (char *)v300 - v50;
  uint64_t v51 = MEMORY[0x270FA5388](v49);
  v368 = (void (*)(void, __n128, __n128, __n128, __n128))((char *)v300 - v52);
  MEMORY[0x270FA5388](v51);
  v322 = (char *)v300 - v53;
  unint64_t v336 = sub_24B5D7320(MEMORY[0x263F8EE78]);
  if (a1 >> 62) {
    goto LABEL_120;
  }
  uint64_t v54 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v54)
  {
LABEL_121:
    swift_bridgeObjectRelease();
    v280 = &unk_2697CF000;
    unint64_t v279 = v336;
    goto LABEL_122;
  }
LABEL_3:
  uint64_t v370 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformCanAutoCaptureStart;
  uint64_t v371 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_meshManager;
  uint64_t v55 = (char *)a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_metadataMap;
  uint64_t v56 = (char *)a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotUUIDToIDMap;
  uint64_t v343 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_writingPublishers;
  long long v57 = (char *)a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_uuidToShotAnchorsMap;
  uint64_t v301 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureManager;
  v323 = (simd_float4 *)((char *)a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox);
  uint64_t v312 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pgManager;
  uint64_t v313 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_scaleForObjectCentricReconstruction;
  v326 = (void *)((char *)a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_planeMap);
  unint64_t v363 = a1 & 0xC000000000000001;
  uint64_t v317 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_staticSegmentID;
  v311 = (char *)a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotsInCurrentSegment;
  swift_beginAccess();
  v365 = v55;
  swift_beginAccess();
  v302 = v56;
  swift_beginAccess();
  v304 = v57;
  unint64_t v58 = v363;
  swift_beginAccess();
  int v369 = 0;
  uint64_t v362 = a1 & 0xFFFFFFFFFFFFFF8;
  v367 = (int *)(v338 + 16);
  v366 = (void (**)(char *, uint64_t))(v338 + 8);
  v350 = (void (**)(char *, uint64_t))(v374 + 8);
  v351 = (void (**)(char *, uint64_t, uint64_t))(v374 + 16);
  unint64_t v361 = v338 + 56;
  v359 = (unsigned int (**)(unint64_t, uint64_t, uint64_t))(v338 + 48);
  v358 = (void (**)(uint64_t, unint64_t, uint64_t))(v338 + 32);
  v300[1] = (char *)v375 + 8;
  *(void *)&long long v59 = 136380931;
  long long v339 = v59;
  unint64_t v334 = (unint64_t)"session(_:didAdd:)";
  unint64_t v306 = 0x800000024B68F550;
  uint64_t v305 = MEMORY[0x263F8EE58] + 8;
  v357 = a2;
  unint64_t v354 = a1;
  unint64_t v360 = v21;
  v310 = v35;
  v303 = v38;
  v373 = (char *)v54;
  unint64_t v21 = 0;
  while (1)
  {
    if (v58)
    {
      id v60 = (id)MEMORY[0x24C5D4F60](v21, a1);
    }
    else
    {
      if (v21 >= *(void *)(v362 + 16)) {
        goto LABEL_119;
      }
      id v60 = *(id *)(a1 + 8 * v21 + 32);
    }
    uint64_t v61 = v60;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      swift_bridgeObjectRetain();
      uint64_t v54 = sub_24B682F00();
      if (!v54) {
        goto LABEL_121;
      }
      goto LABEL_3;
    }
    v374 = (char *)(v21 + 1);
    self;
    uint64_t v62 = swift_dynamicCastObjCClass();
    if (v62) {
      break;
    }
    type metadata accessor for ObjectCaptureSession.BoundingBoxAnchor();
    uint64_t v63 = swift_dynamicCastClass();
    if (v63)
    {
      uint64_t v83 = (void *)v63;
      id v84 = v61;
      OCBoundingBox.init(transform:)(v376, (simd_float4x4 *)objc_msgSend(v83, sel_transform));
      simd_float4 v85 = v376[0].transform.columns[1];
      simd_float4 v86 = v376[0].transform.columns[2];
      simd_float4 v87 = v376[0].transform.columns[3];
      uint64_t v88 = v323;
      simd_float4 v364 = v376[0].transform.columns[0];
      simd_float4 *v323 = v376[0].transform.columns[0];
      v88[1] = v85;
      simd_float4 v355 = v86;
      simd_float4 v356 = v85;
      v88[2] = v86;
      v88[3] = v87;
      simd_float4 v348 = v87;
      v88[4].i8[0] = 0;
      (*(void (**)(_OWORD *__return_ptr))((*MEMORY[0x263F8EED0] & *a2) + 0x420))(v375);
      if (*(void *)&v375[0] == 15)
      {
        sub_24B65A19C((id)0xF);
        sub_24B65A19C((id)0xF);
        v375[0] = v364;
        v375[1] = v356;
        v375[2] = v355;
        v375[3] = v348;
        sub_24B67261C(*(void *)((char *)a2 + v317));
      }
      else
      {
        sub_24B65A19C(*(id *)&v375[0]);
        sub_24B65A19C((id)0xF);
      }
      os_log_type_t v38 = v331;
      uint64_t v111 = sub_24B57CB70();
      v341 = *v351;
      uint64_t v342 = v111;
      uint64_t v35 = (void (*)(void, __n128, __n128, __n128, __n128))v353;
      ((void (*)(char *))v341)(v38);
      id v112 = v84;
      uint64_t v113 = sub_24B6824B0();
      os_log_type_t v114 = sub_24B682B30();
      BOOL v115 = os_log_type_enabled(v113, v114);
      v309[0] = v112;
      if (v115)
      {
        uint64_t v116 = swift_slowAlloc();
        os_log_type_t v38 = (char *)swift_slowAlloc();
        v376[0].transform.columns[0].i64[0] = (uint64_t)v38;
        *(_DWORD *)uint64_t v116 = v339;
        *(void *)(v116 + 4) = sub_24B5627B8(0xD000000000000015, v334 | 0x8000000000000000, (uint64_t *)v376);
        *(_WORD *)(v116 + 12) = 2082;
        objc_msgSend(v83, sel_transform);
        *(int32x2_t *)&double v121 = sub_24B5F87F0(v117, v118, v119, v120);
        uint64_t v122 = MEMORY[0x24C5D4AA0](v121);
        unint64_t v124 = v123;
        swift_bridgeObjectRelease();
        uint64_t v125 = v122;
        unint64_t v58 = v363;
        *(void *)(v116 + 14) = sub_24B5627B8(v125, v124, (uint64_t *)v376);

        a2 = v357;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24B55E000, v113, v114, "ObjectCaptureSession.%{private}s: Bounding box anchor updated: %{public}s", (uint8_t *)v116, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v38, -1, -1);
        MEMORY[0x24C5D6C00](v116, -1, -1);

        unint64_t v126 = *v350;
        os_log_type_t v127 = v331;
      }
      else
      {

        unint64_t v126 = *v350;
        os_log_type_t v127 = v38;
      }
      v340 = v126;
      v126(v127, (uint64_t)v35);
      unint64_t v128 = v360;
      a1 = v354;
      uint64_t v129 = (uint64_t)v368;
      if (v323[4].i8[0]) {
        goto LABEL_141;
      }
      simd_float4 v131 = v323[1];
      simd_float4 v130 = v323[2];
      uint64_t v132 = v323[3].i64[0];
      uint64_t v133 = v323[3].i64[1];
      v376[0].transform.columns[0] = *v323;
      v376[0].transform.columns[1] = v131;
      v376[0].transform.columns[2] = v130;
      v376[0].transform.columns[3].i64[1] = v133;
      v376[0].transform.columns[3].i64[0] = v132;
      v134.n128_f64[0] = OCBoundingBox.scaledTransform(scale:)(COERCE_FLOAT(*(_OWORD *)((char *)a2 + v313)));
      uint64_t v135 = *(void *)((char *)a2 + v312);
      __n128 v329 = v136;
      __n128 v330 = v134;
      __n128 v327 = v138;
      __n128 v328 = v137;
      if (v135)
      {
        uint64_t v139 = *(void *)((char *)a2 + v317);
        uint64_t v35 = *(void (**)(void, __n128, __n128, __n128, __n128))(*(void *)v135 + 600);
        os_log_type_t v38 = (char *)(*(void *)v135 + 600);
        swift_retain();
        v35(v139, v330, v329, v328, v327);
        uint64_t v129 = (uint64_t)v368;
        swift_release();
      }
      uint64_t v140 = *(void *)v311;
      uint64_t v141 = *(void *)(*(void *)v311 + 16);
      uint64_t v308 = *(void *)v311;
      if (v141)
      {
        v300[0] = v361 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
        uint64_t v142 = v338;
        uint64_t v143 = v140 + ((*(unsigned __int8 *)(v338 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v338 + 80));
        swift_bridgeObjectRetain();
        swift_beginAccess();
        v356.i64[0] = *(void *)(v142 + 72);
        v364.i64[0] = *(void *)(v142 + 16);
        os_log_type_t v38 = v346;
        while (1)
        {
          uint64_t v146 = v372;
          ((void (*)(unint64_t, uint64_t, uint64_t))v364.i64[0])(v128, v143, v372);
          v355.i64[0] = *(void *)v361;
          ((void (*)(unint64_t, void, uint64_t, uint64_t))v355.i64[0])(v128, 0, 1, v146);
          if ((*v359)(v128, 1, v146) == 1) {
            goto LABEL_72;
          }
          (*v358)(v129, v128, v146);
          uint64_t v147 = *v365;
          if (*(void *)(*v365 + 16))
          {
            swift_bridgeObjectRetain();
            unint64_t v148 = sub_24B59F008(v129);
            if (v149)
            {
              unint64_t v150 = v148;
              uint64_t v145 = (uint64_t)v38;
              uint64_t v151 = *(void *)(v147 + 56);
              uint64_t v73 = (int *)type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
              uint64_t v152 = *((void *)v73 - 1);
              sub_24B659A1C(v151 + *(void *)(v152 + 72) * v150, v145, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
              (*(void (**)(uint64_t, void, uint64_t, int *))(v152 + 56))(v145, 0, 1, v73);
              a1 = v354;
            }
            else
            {
              uint64_t v73 = (int *)type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
              (*(void (**)(char *, uint64_t, uint64_t, int *))(*((void *)v73 - 1) + 56))(v38, 1, 1, v73);
              uint64_t v145 = (uint64_t)v38;
            }
            swift_bridgeObjectRelease();
            type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
            uint64_t v153 = *((void *)v73 - 1);
            uint64_t v154 = v153;
            uint64_t v155 = *(unsigned int (**)(unint64_t, uint64_t, int *))(v153 + 48);
            uint64_t v35 = (void (*)(void, __n128, __n128, __n128, __n128))(v153 + 48);
            if (v155(v145, 1, v73) != 1)
            {
              v348.i64[0] = v154;
              sub_24B5632A8(v145, &qword_2697CCC90);
              ((void (*)(char *, void (*)(void, __n128, __n128, __n128, __n128), uint64_t))v364.i64[0])(v352, v368, v372);
              long long v156 = sub_24B61E03C();
              long long v157 = sub_24B6377F4(v377);
              a1 = v158;
              if (v155(v158, 1, v73) == 1) {
                goto LABEL_138;
              }
              uint64_t v159 = a1 + v73[7];
              sub_24B56CF38(v159, (uint64_t)v375, &qword_2697CC9C0);
              sub_24B56CF38((uint64_t)v375, (uint64_t)v376, &qword_2697CC9C0);
              if (sub_24B56CF9C((uint64_t)v376) != 1)
              {
                __n128 v160 = v329;
                *(__n128 *)uint64_t v159 = v330;
                *(__n128 *)(v159 + 16) = v160;
                __n128 v161 = v327;
                *(__n128 *)(v159 + 32) = v328;
                *(__n128 *)(v159 + 48) = v161;
              }
              ((void (*)(void *, void))v157)(v377, 0);
              id v162 = *v366;
              (*v366)(v352, v372);
              ((void (*)(uint64_t *, void))v156)(v378, 0);
              a1 = (unint64_t)v345;
              sub_24B64DDAC();
              uint64_t v163 = *v365;
              if (!*(void *)(*v365 + 16)) {
                goto LABEL_139;
              }
              v347 = v155;
              swift_bridgeObjectRetain();
              unint64_t v164 = sub_24B59F008((uint64_t)v368);
              if (v165)
              {
                uint64_t v166 = v348.i64[0];
                sub_24B659A1C(*(void *)(v163 + 56) + *(void *)(v348.i64[0] + 72) * v164, a1, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
                uint64_t v167 = 0;
              }
              else
              {
                uint64_t v167 = 1;
                uint64_t v166 = v348.i64[0];
              }
              v348.i64[0] = (uint64_t)v162;
              (*(void (**)(unint64_t, uint64_t, uint64_t, int *))(v166 + 56))(a1, v167, 1, v73);
              swift_bridgeObjectRelease();
              if (v347(a1, 1, v73) == 1) {
                goto LABEL_140;
              }
              sub_24B682500();
              swift_release();
              sub_24B65EF80(a1, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
              uint64_t v168 = v349;
              uint64_t v169 = v353;
              v341(v349, v342, v353);
              int64_t v170 = v344;
              uint64_t v171 = (void (*)(void, __n128, __n128, __n128, __n128))v372;
              ((void (*)(char *, void (*)(void, __n128, __n128, __n128, __n128), uint64_t))v364.i64[0])(v344, v368, v372);
              char v172 = sub_24B6824B0();
              os_log_type_t v173 = sub_24B682B30();
              if (os_log_type_enabled(v172, v173))
              {
                uint64_t v174 = swift_slowAlloc();
                uint64_t v35 = v171;
                uint64_t v175 = swift_slowAlloc();
                v378[0] = v175;
                *(_DWORD *)uint64_t v174 = v339;
                *(void *)(v174 + 4) = sub_24B5627B8(0xD000000000000015, v334 | 0x8000000000000000, v378);
                *(_WORD *)(v174 + 12) = 2082;
                sub_24B65D13C(&qword_2697CC400, MEMORY[0x263F07508]);
                uint64_t v176 = sub_24B682F90();
                *(void *)(v174 + 14) = sub_24B5627B8(v176, v177, v378);
                swift_bridgeObjectRelease();
                uint64_t v178 = v170;
                uint64_t v179 = (void (*)(void (*)(void, __n128, __n128, __n128, __n128), void (*)(void, __n128, __n128, __n128, __n128)))v348.i64[0];
                ((void (*)(char *, void (*)(void, __n128, __n128, __n128, __n128)))v348.i64[0])(v178, v35);
                _os_log_impl(&dword_24B55E000, v172, v173, "ObjectCaptureSession.%{private}s: Published bounding box update for shot %{public}s", (uint8_t *)v174, 0x16u);
                swift_arrayDestroy();
                MEMORY[0x24C5D6C00](v175, -1, -1);
                MEMORY[0x24C5D6C00](v174, -1, -1);

                v340(v349, v353);
                uint64_t v129 = (uint64_t)v368;
                v179(v368, v35);
                a1 = v354;
                os_log_type_t v38 = v346;
              }
              else
              {

                uint64_t v180 = v170;
                uint64_t v181 = (void (*)(void (*)(void, __n128, __n128, __n128, __n128), void (*)(void, __n128, __n128, __n128, __n128)))v348.i64[0];
                ((void (*)(char *, void (*)(void, __n128, __n128, __n128, __n128)))v348.i64[0])(v180, v171);
                v340(v168, v169);
                uint64_t v35 = v368;
                v181(v368, v171);
                a1 = v354;
                os_log_type_t v38 = v346;
                uint64_t v129 = (uint64_t)v35;
              }
              goto LABEL_47;
            }
          }
          else
          {
            uint64_t v144 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v144 - 8) + 56))(v38, 1, 1, v144);
            uint64_t v145 = (uint64_t)v38;
          }
          sub_24B5632A8(v145, &qword_2697CCC90);
          uint64_t v129 = (uint64_t)v368;
          (*v366)((char *)v368, v372);
          os_log_type_t v38 = (char *)v145;
LABEL_47:
          unint64_t v128 = v360;
          unint64_t v58 = v363;
          v143 += v356.i64[0];
          if (!--v141)
          {
            uint64_t v35 = (void (*)(void, __n128, __n128, __n128, __n128))v355.i64[0];
            ((void (*)(unint64_t, uint64_t, uint64_t, uint64_t))v355.i64[0])(v360, 1, 1, v372);
            goto LABEL_72;
          }
        }
      }
      uint64_t v35 = *(void (**)(void, __n128, __n128, __n128, __n128))v361;
      swift_bridgeObjectRetain();
      ((void (*)(unint64_t, uint64_t, uint64_t, uint64_t))v35)(v128, 1, 1, v372);
LABEL_72:
      id v193 = v309[0];

      swift_bridgeObjectRelease();
      a2 = v357;
LABEL_106:
      if (v374 == v373)
      {
        swift_bridgeObjectRelease();
        unint64_t v279 = v336;
        v280 = (void *)&unk_2697CF000;
        if ((v369 & 1) == 0)
        {
LABEL_122:
          uint64_t v284 = *(void *)((char *)a2 + v280[235]);
          if (v284 && *(void *)(v279 + 16))
          {
            v285 = *(void (**)(unint64_t))(*(void *)v284 + 592);
            swift_retain();
            v285(v279);
            swift_release();
          }
          swift_bridgeObjectRelease();
          id v286 = objc_msgSend(v332, sel_currentFrame);
          if (v286)
          {
            v287 = v286;
            id v288 = objc_msgSend(v286, sel_camera);
            uint64_t v289 = (uint64_t)v324;
            sub_24B682CA0();

            uint64_t v290 = sub_24B682C80();
            v291 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v290 - 8) + 56);
            uint64_t v292 = (uint64_t)v325;
            v291(v325, 2, 2, v290);
            LOBYTE(v288) = sub_24B682C70();
            v293 = (uint64_t (*)(void))MEMORY[0x263F8C968];
            sub_24B65EF80(v292, MEMORY[0x263F8C968]);
            sub_24B65EF80(v289, v293);
            if (v288)
            {
              v294 = *(void **)((char *)a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_plane);
              if (v294)
              {
                v374 = v294;
                id v295 = objc_msgSend(v287, sel_camera);
                uint64_t v296 = (uint64_t)v324;
                sub_24B682CA0();

                uint64_t v297 = (uint64_t)v325;
                v291(v325, 2, 2, v290);
                LOBYTE(v295) = sub_24B682C70();
                v298 = (uint64_t (*)(void))MEMORY[0x263F8C968];
                sub_24B65EF80(v297, MEMORY[0x263F8C968]);
                sub_24B65EF80(v296, v298);
                if (v295)
                {
                  v299 = *(void **)((char *)a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_prevPlane);
                  *(void *)((char *)a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_prevPlane) = v294;
                }
                else
                {
                  v299 = v374;
                }
              }
              sub_24B647BC0();
            }
          }
          return;
        }
LABEL_114:
        uint64_t v281 = *(void *)((char *)a2 + v371);
        if (v281)
        {
          v282 = *(void (**)(uint64_t))(*(void *)v281 + 400);
          uint64_t v283 = swift_retain();
          v282(v283);
          swift_release();
          v280 = (void *)&unk_2697CF000;
        }
        goto LABEL_122;
      }
      unint64_t v21 = (unint64_t)v374;
    }
    else
    {
      type metadata accessor for ObjectCaptureSession.ShotAnchor();
      uint64_t v64 = swift_dynamicCastClass();
      if (v64)
      {
        uint64_t v89 = (void *)v64;
        id v90 = v61;
        uint64_t v91 = sub_24B57CB70();
        uint64_t v92 = *v351;
        uint64_t v93 = v321;
        uint64_t v94 = v353;
        (*v351)(v321, v91, v353);
        uint64_t v95 = (unsigned int (*)(unint64_t, uint64_t, int *))v90;
        uint64_t v96 = sub_24B6824B0();
        os_log_type_t v97 = sub_24B682B30();
        v364.i32[0] = v97;
        BOOL v98 = os_log_type_enabled(v96, v97);
        v355.i64[0] = (uint64_t)v92;
        v347 = v95;
        v348.i64[0] = v91;
        if (v98)
        {
          uint64_t v99 = swift_slowAlloc();
          v356.i64[0] = swift_slowAlloc();
          v376[0].transform.columns[0].i64[0] = v356.i64[0];
          *(_DWORD *)uint64_t v99 = v339;
          *(void *)(v99 + 4) = sub_24B5627B8(0xD000000000000015, v306, (uint64_t *)v376);
          *(_WORD *)(v99 + 12) = 2082;
          uint64_t v100 = v95;
          id v101 = objc_msgSend(v89, sel_description);
          uint64_t v102 = sub_24B6827D0();
          unint64_t v104 = v103;

          a2 = v357;
          *(void *)(v99 + 14) = sub_24B5627B8(v102, v104, (uint64_t *)v376);

          unint64_t v58 = v363;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24B55E000, v96, (os_log_type_t)v364.i8[0], "ObjectCaptureSession.%{private}s: Received shot anchor update: %{public}s", (uint8_t *)v99, 0x16u);
          uint64_t v105 = v356.i64[0];
          swift_arrayDestroy();
          MEMORY[0x24C5D6C00](v105, -1, -1);
          MEMORY[0x24C5D6C00](v99, -1, -1);
        }
        else
        {
        }
        v356.i64[0] = (uint64_t)*v350;
        ((void (*)(char *, uint64_t))v356.i64[0])(v93, v94);
        os_log_type_t v38 = v333;
        int8x16_t v182 = v337;
        uint64_t v183 = (uint64_t)v335;
        id v184 = objc_msgSend(v89, sel_identifier);
        sub_24B6823F0();

        uint64_t v185 = *v365;
        if (*(void *)(*v365 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v186 = sub_24B59F008(v183);
          if (v187)
          {
            unint64_t v188 = v186;
            uint64_t v189 = *(void *)(v185 + 56);
            uint64_t v190 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
            uint64_t v191 = *(void *)(v190 - 8);
            sub_24B659A1C(v189 + *(void *)(v191 + 72) * v188, (uint64_t)v333, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v191 + 56))(v333, 0, 1, v190);
            int8x16_t v182 = v337;
            os_log_type_t v38 = v333;
            uint64_t v192 = v190;
          }
          else
          {
            uint64_t v194 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v194 - 8) + 56))(v38, 1, 1, v194);
            uint64_t v192 = v194;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v192 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v192 - 8) + 56))(v38, 1, 1, v192);
        }
        uint64_t v195 = *v366;
        uint64_t v196 = v372;
        (*v366)(v335, v372);
        type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
        uint64_t v197 = *(void *)(v192 - 8);
        float32x4_t v198 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v197 + 48);
        uint64_t v342 = v192;
        v340 = (void (*)(char *, uint64_t))(v197 + 48);
        v330.n128_u64[0] = (unint64_t)v198;
        int v199 = v198(v38, 1, v192);
        uint64_t v200 = sub_24B5632A8((uint64_t)v38, &qword_2697CCC90);
        v364.i64[0] = (uint64_t)v195;
        if (v199 == 1) {
          goto LABEL_94;
        }
        v341 = (void (*)(char *, uint64_t, uint64_t))v197;
        id v201 = objc_msgSend(v89, sel_identifier);
        float32x4_t v202 = v319;
        sub_24B6823F0();

        objc_msgSend(v89, sel_transform);
        __n128 v328 = v204;
        __n128 v329 = v203;
        __n128 v327 = v205;
        *(__n128 *)v309 = v206;
        uint64_t v207 = v365;
        swift_beginAccess();
        uint64_t v73 = v367;
        float32x4_t v208 = *(void (**)(char *, unint64_t, uint64_t))v367;
        a1 = (unint64_t)v320;
        (*(void (**)(char *, char *, uint64_t))v367)(v320, v202, v196);
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v210 = (uint64_t)v316;
        v208(v316, a1, v196);
        *(void *)&v375[0] = *v207;
        uint64_t v211 = *(void *)&v375[0];
        *uint64_t v207 = 0x8000000000000000;
        unint64_t v213 = sub_24B59F008(v210);
        uint64_t v214 = *(void *)(v211 + 16);
        BOOL v215 = (v212 & 1) == 0;
        uint64_t v216 = v214 + v215;
        if (__OFADD__(v214, v215)) {
          goto LABEL_137;
        }
        char v217 = v212;
        if (*(void *)(v211 + 24) >= v216)
        {
          uint64_t v220 = (void (*)(uint64_t, uint64_t))v364.i64[0];
          float32x4_t v221 = v341;
          if (isUniquelyReferenced_nonNull_native)
          {
            if ((v212 & 1) == 0) {
              goto LABEL_112;
            }
          }
          else
          {
            sub_24B656F58();
            if ((v217 & 1) == 0) {
              goto LABEL_112;
            }
          }
        }
        else
        {
          sub_24B6548E0(v216, isUniquelyReferenced_nonNull_native);
          unint64_t v218 = sub_24B59F008(v210);
          uint64_t v220 = (void (*)(uint64_t, uint64_t))v364.i64[0];
          float32x4_t v221 = v341;
          if ((v217 & 1) != (v219 & 1)) {
            goto LABEL_144;
          }
          unint64_t v213 = v218;
          if ((v217 & 1) == 0)
          {
LABEL_112:
            (*((void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v221 + 7))(v315, 1, 1, v342);
            __break(1u);
LABEL_113:
            swift_bridgeObjectRelease();
            unint64_t v279 = v336;
            v280 = (void *)&unk_2697CF000;
            goto LABEL_114;
          }
        }
        uint64_t v222 = *((void *)v221 + 9);
        uint64_t v223 = v315;
        sub_24B65A134(*(void *)(*(void *)&v375[0] + 56) + v222 * v213, v315, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
        a1 = *((void *)v221 + 7);
        uint64_t v224 = (void (*)(char *, uint64_t, uint64_t))((char *)v221 + 56);
        uint64_t v225 = v342;
        v341 = v224;
        ((void (*)(uint64_t, void, uint64_t, uint64_t))a1)(v223, 0, 1, v342);
        uint64_t v226 = (__n128 *)(v223 + *(int *)(v225 + 20));
        __n128 v227 = v328;
        v226[3] = v329;
        v226[4] = v227;
        __n128 v228 = *(__n128 *)v309;
        v226[5] = v327;
        v226[6] = v228;
        sub_24B658904(v223, 1, (uint64_t *)v375, v213, v210);
        sub_24B5632A8(v223, &qword_2697CCC90);
        uint64_t v229 = v372;
        v220(v210, v372);
        void *v365 = *(void *)&v375[0];
        v220((uint64_t)v320, v229);
        v220((uint64_t)v319, v229);
        swift_endAccess();
        id v230 = objc_msgSend(v89, sel_identifier);
        os_log_type_t v38 = v303;
        sub_24B6823F0();

        uint64_t v231 = *(void *)v302;
        if (*(void *)(*(void *)v302 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v232 = sub_24B59F008((uint64_t)v38);
          if (v233)
          {
            uint64_t v234 = *(void *)(*(void *)(v231 + 56) + 8 * v232);
            swift_bridgeObjectRelease();
            v220((uint64_t)v38, v372);
            objc_msgSend(v89, sel_transform);
            __n128 v328 = v236;
            __n128 v329 = v235;
            __n128 v327 = v237;
            *(__n128 *)v309 = v238;
            uint64_t v239 = v336;
            char v240 = swift_isUniquelyReferenced_nonNull_native();
            v376[0].transform.columns[0].i64[0] = v239;
            sub_24B656C60(v234, v240, v329, v328, v327, *(__n128 *)v309);
            unint64_t v336 = v376[0].transform.columns[0].i64[0];
            swift_bridgeObjectRelease();
LABEL_88:
            sub_24B64DDAC();
            id v241 = objc_msgSend(v89, sel_identifier);
            uint64_t v242 = (uint64_t)v310;
            sub_24B6823F0();

            uint64_t v243 = *v365;
            if (!*(void *)(*v365 + 16)) {
              goto LABEL_142;
            }
            swift_bridgeObjectRetain();
            unint64_t v244 = sub_24B59F008(v242);
            if (v245)
            {
              uint64_t v246 = v314;
              sub_24B659A1C(*(void *)(v243 + 56) + v244 * v222, v314, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
              uint64_t v247 = 0;
            }
            else
            {
              uint64_t v247 = 1;
              uint64_t v246 = v314;
            }
            unint64_t v58 = v363;
            uint64_t v248 = v342;
            ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))a1)(v246, v247, 1, v342);
            swift_bridgeObjectRelease();
            if (((uint64_t (*)(uint64_t, uint64_t, uint64_t))v330.n128_u64[0])(v246, 1, v248) == 1) {
              goto LABEL_143;
            }
            v220((uint64_t)v310, v372);
            sub_24B682500();
            swift_release();
            uint64_t v200 = sub_24B65EF80(v246, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
            a2 = v357;
            int8x16_t v182 = v337;
LABEL_94:
            (*(void (**)(CoreOC::OCBoundingBox *__return_ptr, uint64_t))((*MEMORY[0x263F8EED0] & *a2) + 0x420))(v376, v200);
            uint64_t v249 = (void (*)(char *, uint64_t, uint64_t))v355.i64[0];
            if (v376[0].transform.columns[0].i64[0] == 15)
            {
              sub_24B65A19C((id)0xF);
              sub_24B65A19C((id)0xF);
              if (*(void *)(*(void *)v304 + 16))
              {
                uint64_t v250 = *(void *)((char *)a2 + v301);
                if (v250)
                {
                  swift_retain();
                  id v251 = objc_msgSend(v89, sel_identifier);
                  uint64_t v252 = v318;
                  sub_24B6823F0();

                  objc_msgSend(v89, sel_transform);
                  LOBYTE(v251) = (*(uint64_t (**)(char *))(*(void *)v250 + 504))(v252);
                  ((void (*)(char *, uint64_t))v364.i64[0])(v252, v372);
                  if (v251)
                  {
                    os_log_type_t v38 = v307;
                    uint64_t v35 = (void (*)(void, __n128, __n128, __n128, __n128))v353;
                    v249(v307, v348.i64[0], v353);
                    long long v253 = v347;
                    uint64_t v254 = sub_24B6824B0();
                    os_log_type_t v255 = sub_24B682B30();
                    int v256 = v255;
                    if (os_log_type_enabled(v254, v255))
                    {
                      uint64_t v257 = swift_slowAlloc();
                      v355.i64[0] = swift_slowAlloc();
                      v376[0].transform.columns[0].i64[0] = v355.i64[0];
                      *(_DWORD *)uint64_t v257 = v339;
                      v348.i64[0] = (uint64_t)v254;
                      *(void *)&v375[0] = sub_24B5627B8(0xD000000000000015, v334 | 0x8000000000000000, (uint64_t *)v376);
                      sub_24B682CD0();
                      *(_WORD *)(v257 + 12) = 2082;
                      uint64_t v342 = v257 + 14;
                      id v258 = objc_msgSend(v89, sel_identifier);
                      LODWORD(v347) = v256;
                      uint64_t v259 = v318;
                      sub_24B6823F0();

                      uint64_t v260 = sub_24B6823D0();
                      unint64_t v262 = v261;
                      ((void (*)(char *, uint64_t))v364.i64[0])(v259, v372);
                      *(void *)&v375[0] = sub_24B5627B8(v260, v262, (uint64_t *)v376);
                      sub_24B682CD0();

                      swift_bridgeObjectRelease();
                      int8x16_t v263 = (void *)v348.i64[0];
                      _os_log_impl(&dword_24B55E000, (os_log_t)v348.i64[0], (os_log_type_t)v347, "ObjectCaptureSession.%{private}s: Update shot with id = %{public}s for automatic capture.", (uint8_t *)v257, 0x16u);
                      uint64_t v35 = (void (*)(void, __n128, __n128, __n128, __n128))v355.i64[0];
                      swift_arrayDestroy();
                      MEMORY[0x24C5D6C00](v35, -1, -1);
                      uint64_t v264 = v257;
                      a2 = v357;
                      MEMORY[0x24C5D6C00](v264, -1, -1);

                      swift_release();
                      uint64_t v265 = v38;
                      v266 = (void (*)(void, __n128, __n128, __n128, __n128))v353;
                    }
                    else
                    {

                      swift_release();
                      uint64_t v265 = v38;
                      v266 = v35;
                    }
                    ((void (*)(char *, void (*)(void, __n128, __n128, __n128, __n128)))v356.i64[0])(v265, v266);
LABEL_105:
                    a1 = v354;
                    goto LABEL_106;
                  }
                  swift_release();
                }
              }
            }
            else
            {
              sub_24B65A19C((id)v376[0].transform.columns[0].i64[0]);
              sub_24B65A19C((id)0xF);
            }
            uint64_t v35 = (void (*)(void, __n128, __n128, __n128, __n128))v353;
            v249(v182, v348.i64[0], v353);
            uint64_t v267 = v347;
            simd_float4x4 v268 = v182;
            simd_float4x4 v269 = sub_24B6824B0();
            os_log_type_t v270 = sub_24B682B20();
            if (os_log_type_enabled(v269, v270))
            {
              uint64_t v271 = swift_slowAlloc();
              uint64_t v272 = swift_slowAlloc();
              v376[0].transform.columns[0].i64[0] = v272;
              *(_DWORD *)uint64_t v271 = v339;
              *(void *)(v271 + 4) = sub_24B5627B8(0xD000000000000015, v334 | 0x8000000000000000, (uint64_t *)v376);
              *(_WORD *)(v271 + 12) = 2082;
              id v273 = objc_msgSend(v89, sel_identifier);
              uint64_t v274 = v318;
              sub_24B6823F0();

              os_log_type_t v38 = (char *)sub_24B6823D0();
              unint64_t v276 = v275;
              ((void (*)(char *, uint64_t))v364.i64[0])(v274, v372);
              *(void *)(v271 + 14) = sub_24B5627B8((uint64_t)v38, v276, (uint64_t *)v376);

              swift_bridgeObjectRelease();
              _os_log_impl(&dword_24B55E000, v269, v270, "ObjectCaptureSession.%{private}s: Failed to update shot with id = %{public}s for automatic capture!", (uint8_t *)v271, 0x16u);
              swift_arrayDestroy();
              uint64_t v277 = v272;
              unint64_t v58 = v363;
              MEMORY[0x24C5D6C00](v277, -1, -1);
              MEMORY[0x24C5D6C00](v271, -1, -1);

              uint64_t v278 = v337;
            }
            else
            {

              uint64_t v278 = v268;
            }
            ((void (*)(char *, void (*)(void, __n128, __n128, __n128, __n128)))v356.i64[0])(v278, v35);
            a2 = v357;
            goto LABEL_105;
          }
          swift_bridgeObjectRelease();
        }
        v220((uint64_t)v38, v372);
        goto LABEL_88;
      }
      self;
      uint64_t v65 = swift_dynamicCastObjCClass();
      if (!v65)
      {

        goto LABEL_106;
      }
      uint64_t v66 = v65;
      *((unsigned char *)a2 + v370) = 1;
      uint64_t v35 = *(void (**)(void, __n128, __n128, __n128, __n128))((*MEMORY[0x263F8EED0] & *a2) + 0x420);
      os_log_type_t v38 = (char *)((*MEMORY[0x263F8EED0] & *a2) + 1056);
      id v67 = v61;
      ((void (*)(CoreOC::OCBoundingBox *__return_ptr))v35)(v376);
      if (v376[0].transform.columns[0].i64[0] != 15)
      {
        sub_24B65A19C((id)v376[0].transform.columns[0].i64[0]);
        sub_24B65A19C((id)0xF);
LABEL_28:

        goto LABEL_106;
      }
      sub_24B65A19C((id)0xF);
      sub_24B65A19C((id)0xF);
      uint64_t v68 = *(void *)((char *)a2 + v371);
      if (!v68) {
        goto LABEL_28;
      }
      uint64_t v35 = *(void (**)(void, __n128, __n128, __n128, __n128))(*(void *)v68 + 360);
      os_log_type_t v38 = (char *)(*(void *)v68 + 360);
      swift_retain();
      char v69 = ((uint64_t (*)(uint64_t))v35)(v66);
      swift_release();

      if ((v69 & 1) == 0) {
        goto LABEL_106;
      }
      ++v21;
      int v369 = 1;
      if (v374 == v373) {
        goto LABEL_113;
      }
    }
  }
  uint64_t v70 = (void *)v62;
  id v71 = v61;
  id v72 = objc_msgSend(v70, sel_identifier);
  os_log_type_t v38 = v322;
  sub_24B6823F0();

  uint64_t v35 = (void (*)(void, __n128, __n128, __n128, __n128))v326;
  swift_beginAccess();
  uint64_t v73 = (int *)v71;
  int v74 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&v375[0] = *(void *)v35;
  uint64_t v75 = *(void *)&v375[0];
  *(void *)uint64_t v35 = 0x8000000000000000;
  unint64_t v77 = sub_24B59F008((uint64_t)v38);
  uint64_t v78 = *(void *)(v75 + 16);
  BOOL v79 = (v76 & 1) == 0;
  uint64_t v80 = v78 + v79;
  if (!__OFADD__(v78, v79))
  {
    a1 = v76;
    if (*(void *)(v75 + 24) >= v80)
    {
      if ((v74 & 1) == 0) {
        sub_24B65794C(&qword_2697CCD60);
      }
    }
    else
    {
      sub_24B655864(v80, v74, &qword_2697CCD60);
      unint64_t v81 = sub_24B59F008((uint64_t)v38);
      if ((a1 & 1) != (v82 & 1)) {
        goto LABEL_144;
      }
      unint64_t v77 = v81;
    }
    unint64_t v58 = v363;
    uint64_t v106 = *(void **)&v375[0];
    if (a1)
    {
      uint64_t v35 = *(void (**)(void, __n128, __n128, __n128, __n128))(*(void *)&v375[0] + 56);
      uint64_t v107 = 8 * v77;

      *(void *)((char *)v35 + v107) = v70;
    }
    else
    {
      *(void *)(*(void *)&v375[0] + 8 * (v77 >> 6) + 64) |= 1 << v77;
      (*(void (**)(unint64_t, char *, uint64_t))(v338 + 16))(v106[6] + *(void *)(v338 + 72) * v77, v38, v372);
      *(void *)(v106[7] + 8 * v77) = v70;
      uint64_t v108 = v106[2];
      BOOL v109 = __OFADD__(v108, 1);
      uint64_t v110 = v108 + 1;
      if (v109) {
        goto LABEL_136;
      }
      v106[2] = v110;
    }
    void *v326 = v106;
    swift_bridgeObjectRelease();
    (*v366)(v38, v372);
    swift_endAccess();

    goto LABEL_105;
  }
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  (*(void (**)(unint64_t, uint64_t, uint64_t, int *))(v348.i64[0] + 56))(a1, 1, 1, v73);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))a1)(v314, 1, 1, v342);
LABEL_143:
  __break(1u);
LABEL_144:
  sub_24B682FF0();
  __break(1u);
}

Swift::Void __swiftcall ObjectCaptureSession.session(_:didRemove:)(ARSession _, Swift::OpaquePointer didRemove)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24B6825D0();
  uint64_t v31 = *(void *)(v6 - 8);
  uint64_t v32 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v29 = (char *)&isa - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_24B682640();
  uint64_t v28 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v27 = (char *)&isa - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24B6824D0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&isa - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  swift_bridgeObjectRetain_n();
  uint64_t v14 = sub_24B6824B0();
  os_log_type_t v15 = sub_24B682B10();
  if (os_log_type_enabled(v14, v15))
  {
    isa = _.super.isa;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    aBlock[0] = v17;
    *(_DWORD *)uint64_t v16 = 136380931;
    uint64_t v33 = sub_24B5627B8(0xD000000000000015, 0x800000024B68F570, aBlock);
    sub_24B682CD0();
    *(_WORD *)(v16 + 12) = 2050;
    if ((unint64_t)didRemove._rawValue >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_24B682F00();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v18 = *(void *)(((unint64_t)didRemove._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v33 = v18;
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24B55E000, v14, v15, "ObjectCaptureSession.%{private}s has been called. #anchors = %{public}ld", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v17, -1, -1);
    MEMORY[0x24C5D6C00](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    _.super.isa = isa;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  if ((*((unsigned char *)v3 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__bypassAllAlgos) & 1) == 0)
  {
    uint64_t v19 = swift_allocObject();
    *(Swift::OpaquePointer *)(v19 + 16) = didRemove;
    *(void *)(v19 + 24) = v3;
    *(ARSession *)(v19 + 32) = _;
    aBlock[4] = (uint64_t)sub_24B660E34;
    aBlock[5] = v19;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_24B566C04;
    aBlock[3] = (uint64_t)&unk_26FE8F2A0;
    uint64_t v20 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    id v21 = v3;
    uint64_t v22 = _.super.isa;
    uint64_t v23 = v27;
    sub_24B6825F0();
    uint64_t v33 = MEMORY[0x263F8EE78];
    sub_24B65D13C((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
    sub_24B562F04((uint64_t *)&unk_2697CC490);
    sub_24B5678F4((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
    uint64_t v24 = v29;
    uint64_t v25 = v32;
    sub_24B682D80();
    MEMORY[0x24C5D4CD0](0, v23, v24, v20);
    _Block_release(v20);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v24, v25);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v23, v30);
    swift_release();
  }
}

void sub_24B64B4EC(unint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_24B682C90();
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v43 = (char *)&v40 - v10;
  uint64_t v11 = sub_24B682410();
  uint64_t v44 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v49 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_24B682F00();
    if (v13) {
      goto LABEL_3;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v13) {
    goto LABEL_18;
  }
LABEL_3:
  if (v13 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v47 = v11;
  uint64_t v40 = a3;
  uint64_t v41 = v9;
  uint64_t v14 = 0;
  uint64_t v42 = a2;
  os_log_type_t v15 = (uint64_t *)(a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_planeMap);
  unint64_t v48 = a1 & 0xC000000000000001;
  uint64_t v46 = (void (**)(unint64_t, uint64_t))(v44 + 8);
  uint64_t v45 = (v44 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  do
  {
    if (v48) {
      id v19 = (id)MEMORY[0x24C5D4F60](v14, a1);
    }
    else {
      id v19 = *(id *)(a1 + 8 * v14 + 32);
    }
    uint64_t v16 = v19;
    self;
    uint64_t v20 = swift_dynamicCastObjCClass();
    if (v20)
    {
      id v21 = (void *)v20;
      id v22 = v16;
      id v23 = objc_msgSend(v21, sel_identifier);
      uint64_t v24 = (uint64_t)v49;
      sub_24B6823F0();

      swift_beginAccess();
      swift_bridgeObjectRetain();
      unint64_t v25 = sub_24B59F008(v24);
      char v27 = v26;
      swift_bridgeObjectRelease();
      if (v27)
      {
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v29 = *v15;
        uint64_t v50 = *v15;
        *os_log_type_t v15 = 0x8000000000000000;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_24B65794C(&qword_2697CCD60);
          uint64_t v29 = v50;
        }
        uint64_t v18 = *(void (**)(unint64_t, uint64_t))(v44 + 8);
        uint64_t v17 = v47;
        v18(*(void *)(v29 + 48) + *(void *)(v44 + 72) * v25, v47);
        uint64_t v30 = v50;
        uint64_t v16 = *(void **)(*(void *)(v50 + 56) + 8 * v25);
        sub_24B6561A4(v25, v50);
        *os_log_type_t v15 = v30;
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v16 = 0;
        uint64_t v17 = v47;
        uint64_t v18 = *v46;
      }
      v18((unint64_t)v49, v17);
      swift_endAccess();
    }
    ++v14;
  }
  while (v13 != v14);
  swift_bridgeObjectRelease();
  uint64_t v9 = v41;
  a2 = v42;
  a3 = v40;
LABEL_19:
  id v31 = objc_msgSend(a3, sel_currentFrame, v40, v41, v42);
  if (v31)
  {
    uint64_t v32 = v31;
    uint64_t v33 = *(void **)(a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_plane);
    if (v33)
    {
      id v34 = v33;
      id v35 = objc_msgSend(v32, sel_camera);
      uint64_t v36 = (uint64_t)v43;
      sub_24B682CA0();

      uint64_t v37 = sub_24B682C80();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v9, 2, 2, v37);
      LOBYTE(v35) = sub_24B682C70();
      os_log_type_t v38 = (uint64_t (*)(void))MEMORY[0x263F8C968];
      sub_24B65EF80((uint64_t)v9, MEMORY[0x263F8C968]);
      sub_24B65EF80(v36, v38);
      if (v35)
      {
        uint64_t v39 = *(void **)(a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_prevPlane);
        *(void *)(a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_prevPlane) = v33;

        uint64_t v32 = v39;
      }
      else
      {

        uint64_t v32 = v34;
      }
    }
  }
  sub_24B647BC0();
}

uint64_t sub_24B64B968(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(id, uint64_t))
{
  sub_24B57CAF4(0, &qword_2697CCA40);
  uint64_t v8 = sub_24B6829A0();
  id v9 = a3;
  id v10 = a1;
  a5(v9, v8);

  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall ObjectCaptureSession.session(_:cameraDidChangeTrackingState:)(ARSession _, ARCamera cameraDidChangeTrackingState)
{
}

uint64_t sub_24B64BA10(unsigned char *a1, uint64_t a2)
{
  uint64_t v4 = sub_24B682680();
  uint64_t v92 = *(void *)(v4 - 8);
  uint64_t v93 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  id v90 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v91 = (char *)&v78 - v7;
  uint64_t v8 = sub_24B562F04((uint64_t *)&unk_2697CCA10);
  MEMORY[0x270FA5388](v8 - 8);
  id v10 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_24B6824D0();
  uint64_t v11 = *(void *)(v94 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v94);
  uint64_t v14 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v78 - v16;
  MEMORY[0x270FA5388](v15);
  id v19 = (char *)&v78 - v18;
  uint64_t v20 = sub_24B682C90();
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  id v23 = (char *)&v78 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v21);
  char v26 = (char *)&v78 - v25;
  if (a1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isPoseCorrectionUsingMobileSfMEnabled] != 1) {
    return result;
  }
  uint64_t v88 = (uint64_t)v10;
  uint64_t v89 = (void (*)(void, void))v19;
  uint64_t v95 = a1;
  simd_float4 v87 = v17;
  sub_24B682CA0();
  uint64_t v27 = sub_24B682C80();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
  uint64_t v30 = v28 + 56;
  v29(v23, 2, 2, v27);
  char v31 = sub_24B682C70();
  uint64_t v32 = (uint64_t (*)(void))MEMORY[0x263F8C968];
  sub_24B65EF80((uint64_t)v23, MEMORY[0x263F8C968]);
  sub_24B65EF80((uint64_t)v26, v32);
  if ((v31 & 1) == 0)
  {
    BOOL v79 = v26;
    uint64_t v78 = v23;
    uint64_t v80 = v30;
    unint64_t v81 = v29;
    uint64_t v82 = v27;
    uint64_t v83 = a2;
    id v84 = v14;
    uint64_t v33 = v95;
    sub_24B616BC4();
    v33[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForPoseCorrectionUsingMobileSfM] = 1;
    uint64_t v34 = sub_24B57CB70();
    uint64_t v35 = v11;
    uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    uint64_t v37 = v89;
    uint64_t v38 = v94;
    v36((char *)v89, v34, v94);
    uint64_t v39 = sub_24B6824B0();
    os_log_type_t v40 = sub_24B682B30();
    BOOL v41 = os_log_type_enabled(v39, v40);
    simd_float4 v85 = v36;
    uint64_t v86 = v35;
    if (v41)
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      v98[0] = v43;
      *(_DWORD *)uint64_t v42 = 136380675;
      uint64_t v97 = sub_24B5627B8(0xD000000000000028, 0x800000024B691330, v98);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v39, v40, "ObjectCaptureSession.%{private}s: Set should wait for pose correction using  mobileSfM.", v42, 0xCu);
      swift_arrayDestroy();
      uint64_t v44 = v43;
      uint64_t v38 = v94;
      MEMORY[0x24C5D6C00](v44, -1, -1);
      uint64_t v35 = v86;
      MEMORY[0x24C5D6C00](v42, -1, -1);
    }

    uint64_t v45 = *(void (**)(void, uint64_t))(v35 + 8);
    v45(v37, v38);
    uint64_t v46 = (double *)v88;
    uint64_t v47 = (uint64_t)&v95[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_currentFrame];
    swift_beginAccess();
    sub_24B563A6C(v47, (uint64_t)v46, (uint64_t *)&unk_2697CCA10);
    uint64_t v48 = type metadata accessor for ObjectCaptureSession.Frame(0);
    uint64_t result = (*(uint64_t (**)(double *, uint64_t, uint64_t))(*(void *)(v48 - 8) + 48))(v46, 1, v48);
    if (result == 1) {
      goto LABEL_23;
    }
    double v49 = *v46 * 1000.0;
    uint64_t result = sub_24B65EF80((uint64_t)v46, type metadata accessor for ObjectCaptureSession.Frame);
    if ((~*(void *)&v49 & 0x7FF0000000000000) != 0)
    {
      if (v49 > -9.22337204e18)
      {
        if (v49 < 9.22337204e18)
        {
          uint64_t v50 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pauseTimeForPoseCorrection;
          uint64_t v51 = v95;
          *(void *)&v95[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pauseTimeForPoseCorrection] = (uint64_t)v49;
          uint64_t v52 = v87;
          v85(v87, v34, v38);
          uint64_t v53 = v51;
          uint64_t v54 = sub_24B6824B0();
          os_log_type_t v55 = sub_24B682B30();
          if (os_log_type_enabled(v54, v55))
          {
            uint64_t v56 = swift_slowAlloc();
            uint64_t v88 = swift_slowAlloc();
            uint64_t v97 = v88;
            *(_DWORD *)uint64_t v56 = 136380931;
            uint64_t v96 = sub_24B5627B8(0xD000000000000028, 0x800000024B691330, &v97);
            uint64_t v89 = v45;
            uint64_t v57 = v38;
            uint64_t v58 = v86;
            sub_24B682CD0();
            *(_WORD *)(v56 + 12) = 2050;
            uint64_t v96 = *(void *)&v51[v50];
            sub_24B682CD0();

            _os_log_impl(&dword_24B55E000, v54, v55, "ObjectCaptureSession.%{private}s: Set pause time for pose correction = %{public}ld", (uint8_t *)v56, 0x16u);
            uint64_t v59 = v88;
            swift_arrayDestroy();
            MEMORY[0x24C5D6C00](v59, -1, -1);
            MEMORY[0x24C5D6C00](v56, -1, -1);

            uint64_t v11 = v58;
            v89(v52, v57);
          }
          else
          {

            uint64_t v60 = v38;
            uint64_t v11 = v35;
            v45(v52, v60);
          }
          uint64_t v14 = v84;
          uint64_t v27 = v82;
          uint64_t v29 = v81;
          id v23 = v78;
          char v26 = v79;
          goto LABEL_13;
        }
        goto LABEL_22;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    return result;
  }
LABEL_13:
  sub_24B682CA0();
  v29(v23, 2, 2, v27);
  char v61 = sub_24B682C70();
  uint64_t v62 = (uint64_t (*)(void))MEMORY[0x263F8C968];
  sub_24B65EF80((uint64_t)v23, MEMORY[0x263F8C968]);
  uint64_t result = sub_24B65EF80((uint64_t)v26, v62);
  uint64_t v63 = v95;
  if ((v61 & 1) != 0
    && v95[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForPoseCorrectionUsingMobileSfM] == 1)
  {
    uint64_t v64 = v14;
    sub_24B616BC4();
    *(void *)&v63[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_poseCorrectionTimerWorkItem] = sub_24B61D524();
    swift_release();
    uint64_t v65 = v90;
    sub_24B682660();
    uint64_t v66 = v91;
    MEMORY[0x24C5D47E0](v65, 10.0);
    uint64_t v67 = v11;
    uint64_t v68 = *(void (**)(char *, uint64_t))(v92 + 8);
    char v69 = v65;
    uint64_t v70 = v93;
    v68(v69, v93);
    swift_retain();
    sub_24B682BA0();
    swift_release();
    v68(v66, v70);
    uint64_t v71 = sub_24B57CB70();
    uint64_t v72 = v94;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v64, v71, v94);
    uint64_t v73 = v63;
    int v74 = sub_24B6824B0();
    os_log_type_t v75 = sub_24B682B30();
    if (os_log_type_enabled(v74, v75))
    {
      uint64_t v76 = swift_slowAlloc();
      uint64_t v77 = swift_slowAlloc();
      uint64_t v97 = v77;
      *(_DWORD *)uint64_t v76 = 136380931;
      uint64_t v96 = sub_24B5627B8(0xD000000000000028, 0x800000024B691330, &v97);
      sub_24B682CD0();
      *(_WORD *)(v76 + 12) = 2050;
      uint64_t v96 = 0x4024000000000000;
      sub_24B682CD0();

      _os_log_impl(&dword_24B55E000, v74, v75, "ObjectCaptureSession.%{private}s: Set set wait for pose correction timer to %{public}f seconds.", (uint8_t *)v76, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v77, -1, -1);
      MEMORY[0x24C5D6C00](v76, -1, -1);
    }
    else
    {
    }
    return (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v64, v72);
  }
  return result;
}

Swift::Void __swiftcall ObjectCaptureSession.sessionWasInterrupted(_:)(ARSession a1)
{
}

Swift::Void __swiftcall ObjectCaptureSession.sessionInterruptionEnded(_:)(ARSession a1)
{
}

uint64_t sub_24B64C584(unsigned char *a1)
{
  uint64_t v2 = sub_24B562F04((uint64_t *)&unk_2697CCA10);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (double *)((char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_24B6824D0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v32 - v11;
  if (a1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isPoseCorrectionUsingMobileSfMEnabled] == 1)
  {
    sub_24B616BC4();
    a1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForPoseCorrectionUsingMobileSfM] = 1;
    uint64_t v13 = sub_24B57CB70();
    uint64_t v33 = *(void (**)(char *))(v6 + 16);
    uint64_t v34 = (uint64_t (*)(char *, uint64_t))v13;
    v33(v12);
    uint64_t v14 = sub_24B6824B0();
    os_log_type_t v15 = sub_24B682B30();
    BOOL v16 = os_log_type_enabled(v14, v15);
    uint64_t v35 = v9;
    uint64_t v36 = v5;
    if (v16)
    {
      uint64_t v32 = v6;
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      v39[0] = v18;
      *(_DWORD *)uint64_t v17 = 136380675;
      uint64_t v38 = sub_24B5627B8(0xD000000000000026, 0x800000024B691290, v39);
      uint64_t v6 = v32;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v14, v15, "ObjectCaptureSession.%{private}s: Set should wait for pose correction using mobileSfM", v17, 0xCu);
      swift_arrayDestroy();
      uint64_t v19 = v18;
      uint64_t v5 = v36;
      MEMORY[0x24C5D6C00](v19, -1, -1);
      uint64_t v20 = v17;
      uint64_t v9 = v35;
      MEMORY[0x24C5D6C00](v20, -1, -1);
    }

    uint64_t v21 = *(void (**)(char *, uint64_t))(v6 + 8);
    v21(v12, v5);
    uint64_t v22 = (uint64_t)&a1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_currentFrame];
    swift_beginAccess();
    sub_24B563A6C(v22, (uint64_t)v4, (uint64_t *)&unk_2697CCA10);
    uint64_t v23 = type metadata accessor for ObjectCaptureSession.Frame(0);
    uint64_t result = (*(uint64_t (**)(double *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v4, 1, v23);
    if (result == 1) {
      goto LABEL_15;
    }
    double v24 = *v4 * 1000.0;
    uint64_t result = sub_24B65EF80((uint64_t)v4, type metadata accessor for ObjectCaptureSession.Frame);
    if ((~*(void *)&v24 & 0x7FF0000000000000) != 0)
    {
      if (v24 > -9.22337204e18)
      {
        if (v24 < 9.22337204e18)
        {
          uint64_t v25 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pauseTimeForPoseCorrection;
          *(void *)&a1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pauseTimeForPoseCorrection] = (uint64_t)v24;
          ((void (*)(char *, uint64_t (*)(char *, uint64_t), uint64_t))v33)(v9, v34, v5);
          char v26 = a1;
          uint64_t v27 = sub_24B6824B0();
          os_log_type_t v28 = sub_24B682B30();
          if (os_log_type_enabled(v27, v28))
          {
            uint64_t v29 = swift_slowAlloc();
            uint64_t v30 = swift_slowAlloc();
            uint64_t v34 = (uint64_t (*)(char *, uint64_t))v21;
            uint64_t v31 = v30;
            uint64_t v38 = v30;
            *(_DWORD *)uint64_t v29 = 136380931;
            uint64_t v37 = sub_24B5627B8(0xD000000000000026, 0x800000024B691290, &v38);
            sub_24B682CD0();
            *(_WORD *)(v29 + 12) = 2050;
            uint64_t v37 = *(void *)&a1[v25];
            sub_24B682CD0();

            _os_log_impl(&dword_24B55E000, v27, v28, "ObjectCaptureSession.%{private}s: Set pause time for pose correction = %{public}ld", (uint8_t *)v29, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x24C5D6C00](v31, -1, -1);
            MEMORY[0x24C5D6C00](v29, -1, -1);

            return v34(v35, v36);
          }
          else
          {

            return ((uint64_t (*)(char *, uint64_t))v21)(v9, v5);
          }
        }
        goto LABEL_14;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
  }
  return result;
}

void ObjectCaptureSession.session(_:didFailWithError:)(uint64_t a1, void *a2)
{
}

uint64_t ObjectCaptureSession.session(_:didChange:)(uint64_t a1, uint64_t a2)
{
  return sub_24B662550(a2);
}

id sub_24B64CB88(void *a1)
{
  os_log_type_t v28 = a1;
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v27 - v7;
  uint64_t v9 = v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_tapPosition;
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_tapPosition + 33) & 1) != 0
    || (char v10 = *(unsigned char *)(v9 + 32),
        long long v11 = *(_OWORD *)(v9 + 16),
        v31[0] = *(_OWORD *)v9,
        v31[1] = v11,
        char v32 = v10 & 1,
        (uint64_t v12 = (void *)sub_24B64CF90((uint64_t)v31)) == 0))
  {
    uint64_t v20 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v20, v2);
    uint64_t v21 = sub_24B6824B0();
    os_log_type_t v22 = sub_24B682B20();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v30 = v24;
      *(_DWORD *)uint64_t v23 = 136380675;
      double v29 = COERCE_DOUBLE(sub_24B5627B8(0xD00000000000001FLL, 0x800000024B691390, &v30));
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v21, v22, "ObjectCaptureSession.%{private}s: Failed to recompute the nearest plane under the object, using the old plane without anchor updates!", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v24, -1, -1);
      MEMORY[0x24C5D6C00](v23, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    uint64_t v13 = v12;
    float v14 = sub_24B5F9644(v28, v12);
    if (v14 <= 0.01) {
      return v13;
    }
    uint64_t v15 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v8, v15, v2);
    BOOL v16 = sub_24B6824B0();
    os_log_type_t v17 = sub_24B682B20();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v30 = v19;
      *(_DWORD *)uint64_t v18 = 136380931;
      double v29 = COERCE_DOUBLE(sub_24B5627B8(0xD00000000000001FLL, 0x800000024B691390, &v30));
      sub_24B682CD0();
      *(_WORD *)(v18 + 12) = 2050;
      double v29 = v14;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v16, v17, "ObjectCaptureSession.%{private}s: Recomputed plane is too far (%{public}f meters) from old plane, using the old plane without anchor updates!", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v19, -1, -1);
      MEMORY[0x24C5D6C00](v18, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }
  uint64_t v25 = v28;

  return v25;
}

uint64_t sub_24B64CF90(uint64_t a1)
{
  uint64_t v3 = sub_24B6824D0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  char v10 = (char *)&v33 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v33 - v11;
  sub_24B56CF38(a1 + 16, (uint64_t)v37, &qword_2697CCD68);
  sub_24B56CF38((uint64_t)v37, (uint64_t)&v38, &qword_2697CCD68);
  if (v39)
  {
    uint64_t v13 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v13, v3);
    float v14 = sub_24B6824B0();
    os_log_type_t v15 = sub_24B682B20();
    if (os_log_type_enabled(v14, v15))
    {
      BOOL v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      v35[0] = v17;
      *(_DWORD *)BOOL v16 = 136380675;
      uint64_t v36 = sub_24B5627B8(0xD00000000000001FLL, 0x800000024B6913B0, v35);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v14, v15, "ObjectCaptureSession.%{private}s: Failed to compute nearest plane below tap position because worldPoint is nil!", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v17, -1, -1);
      MEMORY[0x24C5D6C00](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    return 0;
  }
  float32x4_t v33 = v38;
  uint64_t v18 = v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_planeMap;
  swift_beginAccess();
  if (!*(void *)(*(void *)v18 + 16))
  {
    uint64_t v27 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v10, v27, v3);
    os_log_type_t v28 = sub_24B6824B0();
    os_log_type_t v29 = sub_24B682B20();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v36 = v31;
      *(_DWORD *)uint64_t v30 = 136380675;
      double v34 = COERCE_DOUBLE(sub_24B5627B8(0xD00000000000001FLL, 0x800000024B6913B0, &v36));
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v28, v29, "ObjectCaptureSession.%{private}s: Failed to compute nearest plane below tap position because no planes were detected!", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v31, -1, -1);
      MEMORY[0x24C5D6C00](v30, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
    return 0;
  }
  uint64_t v19 = swift_bridgeObjectRetain();
  sub_24B65E6F4(v19, v33);
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  if (!v21)
  {
    uint64_t v22 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v12, v22, v3);
    uint64_t v23 = sub_24B6824B0();
    os_log_type_t v24 = sub_24B682B20();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v36 = v26;
      *(_DWORD *)uint64_t v25 = 136381443;
      double v34 = COERCE_DOUBLE(sub_24B5627B8(0xD00000000000001FLL, 0x800000024B6913B0, &v36));
      sub_24B682CD0();
      *(_WORD *)(v25 + 12) = 2050;
      double v34 = v33.f32[0];
      sub_24B682CD0();
      *(_WORD *)(v25 + 22) = 2050;
      double v34 = v33.f32[1];
      sub_24B682CD0();
      *(_WORD *)(v25 + 32) = 2050;
      double v34 = v33.f32[2];
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v23, v24, "ObjectCaptureSession.%{private}s: Failed to compute nearest plane below world tap point x=%{public}f, y=%{public}f, z=%{public}f", (uint8_t *)v25, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v26, -1, -1);
      MEMORY[0x24C5D6C00](v25, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v12, v3);
    return 0;
  }
  return v21;
}

uint64_t sub_24B64D520()
{
  return sub_24B64DBEC(&qword_2697CCA48);
}

uint64_t sub_24B64D52C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 232))();
  *a2 = result;
  return result;
}

uint64_t sub_24B64D57C()
{
  return sub_24B64DCDC((void (*)(void))sub_24B64D520, &qword_2697CCA48, &qword_2697CCA50);
}

uint64_t sub_24B64D5A4()
{
  return sub_24B64DDB8(&qword_2697CCA58);
}

uint64_t sub_24B64D5B0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 280))();
  *a2 = result;
  return result;
}

uint64_t sub_24B64D608()
{
  return sub_24B64DEB0((void (*)(void))sub_24B64D5A4, &qword_2697CCA58, &qword_2697CCA60);
}

uint64_t sub_24B64D630()
{
  return sub_24B64DF8C(&qword_2697CCA68);
}

uint64_t sub_24B64D63C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 328))();
  *a2 = result;
  return result;
}

uint64_t sub_24B64D694()
{
  return sub_24B64E0C8((void (*)(void))sub_24B64D630, &qword_2697CCA68, &qword_2697CCA70);
}

uint64_t sub_24B64D6BC()
{
  return sub_24B64E1B4(&qword_2697CCA78);
}

uint64_t sub_24B64D6C8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 376))();
  *a2 = result;
  return result;
}

uint64_t sub_24B64D720()
{
  return sub_24B64E2F0((void (*)(void))sub_24B64D6BC, &qword_2697CCA78, &qword_2697CCA80);
}

uint64_t sub_24B64D748()
{
  return sub_24B64E3DC(&qword_2697CCA88);
}

uint64_t sub_24B64D754@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 424))();
  *a2 = result;
  return result;
}

uint64_t sub_24B64D7AC()
{
  return sub_24B64E518((void (*)(void))sub_24B64D748, &qword_2697CCA88, &qword_2697CCA90);
}

uint64_t sub_24B64D7D4()
{
  return sub_24B64E604(&qword_2697CCA98);
}

uint64_t sub_24B64D7E0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 472))();
  *a2 = result;
  return result;
}

uint64_t sub_24B64D838()
{
  return sub_24B64E740((void (*)(void))sub_24B64D7D4, &qword_2697CCA98, &qword_2697CCAA0);
}

uint64_t sub_24B64D860()
{
  return sub_24B64E82C(&qword_2697CCAA8);
}

uint64_t sub_24B64D86C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 520))();
  *a2 = result;
  return result;
}

uint64_t sub_24B64D8C0(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 120) = *a1;
  swift_retain();

  return swift_release();
}

uint64_t sub_24B64D904()
{
  return sub_24B64E8D0((void (*)(void))sub_24B64D860, &qword_2697CCAA8, &qword_2697CCAB0);
}

uint64_t sub_24B64D92C()
{
  if (*(void *)(v0 + 128))
  {
    uint64_t v1 = *(void *)(v0 + 128);
  }
  else
  {
    uint64_t v2 = v0;
    sub_24B562F04(&qword_2697CCAB8);
    swift_allocObject();
    uint64_t v1 = sub_24B682510();
    *(void *)(v2 + 128) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_24B64D9A8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 568))();
  *a2 = result;
  return result;
}

uint64_t sub_24B64D9FC(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 136) = *a1;
  swift_retain();

  return swift_release();
}

uint64_t sub_24B64DA40()
{
  if (*(void *)(v0 + 136))
  {
    uint64_t v1 = *(void *)(v0 + 136);
  }
  else
  {
    uint64_t v2 = v0;
    sub_24B64D92C();
    sub_24B562F04(&qword_2697CCAB8);
    sub_24B5678F4(&qword_2697CCAC0, &qword_2697CCAB8);
    uint64_t v1 = sub_24B682580();
    swift_release();
    *(void *)(v2 + 136) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_24B64DB04(uint64_t a1)
{
  *(void *)(v1 + 136) = a1;
  return swift_release();
}

uint64_t ObjectCaptureSessionObservingPublishers.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t ObjectCaptureSessionObservingPublishers.__deallocating_deinit()
{
  ObjectCaptureSessionObservingPublishers.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_24B64DBE0()
{
  return sub_24B64DBEC(&qword_2697CCAC8);
}

uint64_t sub_24B64DBEC(uint64_t *a1)
{
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = *(void *)(v1 + 16);
  }
  else
  {
    uint64_t v3 = v1;
    sub_24B562F04(a1);
    swift_allocObject();
    uint64_t v2 = sub_24B682510();
    *(void *)(v3 + 16) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_24B64DC68@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 216))();
  *a2 = result;
  return result;
}

uint64_t sub_24B64DCB4()
{
  return sub_24B64DCDC((void (*)(void))sub_24B64DBE0, &qword_2697CCAC8, &qword_2697CCAD0);
}

uint64_t sub_24B64DCDC(void (*a1)(void), uint64_t *a2, unint64_t *a3)
{
  if (*(void *)(v3 + 24))
  {
    uint64_t v4 = *(void *)(v3 + 24);
  }
  else
  {
    uint64_t v7 = v3;
    a1();
    sub_24B562F04(a2);
    sub_24B5678F4(a3, a2);
    uint64_t v4 = sub_24B682580();
    swift_release();
    *(void *)(v7 + 24) = v4;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v4;
}

uint64_t sub_24B64DDAC()
{
  return sub_24B64DDB8(&qword_2697CCAD8);
}

uint64_t sub_24B64DDB8(uint64_t *a1)
{
  if (*(void *)(v1 + 32))
  {
    uint64_t v2 = *(void *)(v1 + 32);
  }
  else
  {
    uint64_t v3 = v1;
    sub_24B562F04(a1);
    swift_allocObject();
    uint64_t v2 = sub_24B682510();
    *(void *)(v3 + 32) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_24B64DE34@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 264))();
  *a2 = result;
  return result;
}

uint64_t sub_24B64DE88()
{
  return sub_24B64DEB0((void (*)(void))sub_24B64DDAC, &qword_2697CCAD8, &qword_2697CCAE0);
}

uint64_t sub_24B64DEB0(void (*a1)(void), uint64_t *a2, unint64_t *a3)
{
  if (*(void *)(v3 + 40))
  {
    uint64_t v4 = *(void *)(v3 + 40);
  }
  else
  {
    uint64_t v7 = v3;
    a1();
    sub_24B562F04(a2);
    sub_24B5678F4(a3, a2);
    uint64_t v4 = sub_24B682580();
    swift_release();
    *(void *)(v7 + 40) = v4;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v4;
}

uint64_t sub_24B64DF80()
{
  return sub_24B64DF8C(&qword_2697CCAE8);
}

uint64_t sub_24B64DF8C(uint64_t *a1)
{
  if (*(void *)(v1 + 48))
  {
    uint64_t v2 = *(void *)(v1 + 48);
  }
  else
  {
    uint64_t v3 = v1;
    sub_24B562F04(a1);
    swift_allocObject();
    uint64_t v2 = sub_24B682510();
    *(void *)(v3 + 48) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_24B64E008@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 312))();
  *a2 = result;
  return result;
}

uint64_t sub_24B64E05C(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 56) = *a1;
  swift_retain();

  return swift_release();
}

uint64_t sub_24B64E0A0()
{
  return sub_24B64E0C8((void (*)(void))sub_24B64DF80, &qword_2697CCAE8, &qword_2697CCAF0);
}

uint64_t sub_24B64E0C8(void (*a1)(void), uint64_t *a2, unint64_t *a3)
{
  if (*(void *)(v3 + 56))
  {
    uint64_t v4 = *(void *)(v3 + 56);
  }
  else
  {
    uint64_t v7 = v3;
    a1();
    sub_24B562F04(a2);
    sub_24B5678F4(a3, a2);
    uint64_t v4 = sub_24B682580();
    swift_release();
    *(void *)(v7 + 56) = v4;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v4;
}

uint64_t sub_24B64E198(uint64_t a1)
{
  *(void *)(v1 + 56) = a1;
  return swift_release();
}

uint64_t sub_24B64E1A8()
{
  return sub_24B64E1B4(&qword_2697CCAF8);
}

uint64_t sub_24B64E1B4(uint64_t *a1)
{
  if (*(void *)(v1 + 64))
  {
    uint64_t v2 = *(void *)(v1 + 64);
  }
  else
  {
    uint64_t v3 = v1;
    sub_24B562F04(a1);
    swift_allocObject();
    uint64_t v2 = sub_24B682510();
    *(void *)(v3 + 64) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_24B64E230@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 360))();
  *a2 = result;
  return result;
}

uint64_t sub_24B64E284(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 72) = *a1;
  swift_retain();

  return swift_release();
}

uint64_t sub_24B64E2C8()
{
  return sub_24B64E2F0((void (*)(void))sub_24B64E1A8, &qword_2697CCAF8, &qword_2697CCB00);
}

uint64_t sub_24B64E2F0(void (*a1)(void), uint64_t *a2, unint64_t *a3)
{
  if (*(void *)(v3 + 72))
  {
    uint64_t v4 = *(void *)(v3 + 72);
  }
  else
  {
    uint64_t v7 = v3;
    a1();
    sub_24B562F04(a2);
    sub_24B5678F4(a3, a2);
    uint64_t v4 = sub_24B682580();
    swift_release();
    *(void *)(v7 + 72) = v4;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v4;
}

uint64_t sub_24B64E3C0(uint64_t a1)
{
  *(void *)(v1 + 72) = a1;
  return swift_release();
}

uint64_t sub_24B64E3D0()
{
  return sub_24B64E3DC(&qword_2697CCB08);
}

uint64_t sub_24B64E3DC(uint64_t *a1)
{
  if (*(void *)(v1 + 80))
  {
    uint64_t v2 = *(void *)(v1 + 80);
  }
  else
  {
    uint64_t v3 = v1;
    sub_24B562F04(a1);
    swift_allocObject();
    uint64_t v2 = sub_24B682510();
    *(void *)(v3 + 80) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_24B64E458@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 408))();
  *a2 = result;
  return result;
}

uint64_t sub_24B64E4AC(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 88) = *a1;
  swift_retain();

  return swift_release();
}

uint64_t sub_24B64E4F0()
{
  return sub_24B64E518((void (*)(void))sub_24B64E3D0, &qword_2697CCB08, &qword_2697CCB10);
}

uint64_t sub_24B64E518(void (*a1)(void), uint64_t *a2, unint64_t *a3)
{
  if (*(void *)(v3 + 88))
  {
    uint64_t v4 = *(void *)(v3 + 88);
  }
  else
  {
    uint64_t v7 = v3;
    a1();
    sub_24B562F04(a2);
    sub_24B5678F4(a3, a2);
    uint64_t v4 = sub_24B682580();
    swift_release();
    *(void *)(v7 + 88) = v4;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v4;
}

uint64_t sub_24B64E5E8(uint64_t a1)
{
  *(void *)(v1 + 88) = a1;
  return swift_release();
}

uint64_t sub_24B64E5F8()
{
  return sub_24B64E604(&qword_2697CCA58);
}

uint64_t sub_24B64E604(uint64_t *a1)
{
  if (*(void *)(v1 + 96))
  {
    uint64_t v2 = *(void *)(v1 + 96);
  }
  else
  {
    uint64_t v3 = v1;
    sub_24B562F04(a1);
    swift_allocObject();
    uint64_t v2 = sub_24B682510();
    *(void *)(v3 + 96) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_24B64E680@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 456))();
  *a2 = result;
  return result;
}

uint64_t sub_24B64E6D4(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 104) = *a1;
  swift_retain();

  return swift_release();
}

uint64_t sub_24B64E718()
{
  return sub_24B64E740((void (*)(void))sub_24B64E5F8, &qword_2697CCA58, &qword_2697CCA60);
}

uint64_t sub_24B64E740(void (*a1)(void), uint64_t *a2, unint64_t *a3)
{
  if (*(void *)(v3 + 104))
  {
    uint64_t v4 = *(void *)(v3 + 104);
  }
  else
  {
    uint64_t v7 = v3;
    a1();
    sub_24B562F04(a2);
    sub_24B5678F4(a3, a2);
    uint64_t v4 = sub_24B682580();
    swift_release();
    *(void *)(v7 + 104) = v4;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v4;
}

uint64_t sub_24B64E810(uint64_t a1)
{
  *(void *)(v1 + 104) = a1;
  return swift_release();
}

uint64_t sub_24B64E820()
{
  return sub_24B64E82C(&qword_2697CCB18);
}

uint64_t sub_24B64E82C(uint64_t *a1)
{
  if (*(void *)(v1 + 112))
  {
    uint64_t v2 = *(void *)(v1 + 112);
  }
  else
  {
    uint64_t v3 = v1;
    sub_24B562F04(a1);
    swift_allocObject();
    uint64_t v2 = sub_24B682510();
    *(void *)(v3 + 112) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_24B64E8A8()
{
  return sub_24B64E8D0((void (*)(void))sub_24B64E820, &qword_2697CCB18, (unint64_t *)&unk_2697CCB20);
}

uint64_t sub_24B64E8D0(void (*a1)(void), uint64_t *a2, unint64_t *a3)
{
  if (*(void *)(v3 + 120))
  {
    uint64_t v4 = *(void *)(v3 + 120);
  }
  else
  {
    uint64_t v7 = v3;
    a1();
    sub_24B562F04(a2);
    sub_24B5678F4(a3, a2);
    uint64_t v4 = sub_24B682580();
    swift_release();
    *(void *)(v7 + 120) = v4;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v4;
}

uint64_t sub_24B64E9A0(uint64_t a1)
{
  *(void *)(v1 + 120) = a1;
  return swift_release();
}

double ObjectCaptureSessionWritingPublishers.init()()
{
  double result = 0.0;
  v0[6] = 0u;
  v0[7] = 0u;
  v0[4] = 0u;
  v0[5] = 0u;
  v0[2] = 0u;
  v0[3] = 0u;
  v0[1] = 0u;
  return result;
}

uint64_t ObjectCaptureSessionWritingPublishers.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t ObjectCaptureSessionWritingPublishers.__deallocating_deinit()
{
  ObjectCaptureSessionWritingPublishers.deinit();

  return swift_deallocClassInstance();
}

uint64_t ObjectCaptureSessionWritingPublishers.send(shot:shotMetadata:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_24B562F04(&qword_2697CC800);
  uint64_t v5 = v4 - 8;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *a1;
  uint64_t v9 = (void *)a1[1];
  char v10 = (void *)a1[2];
  uint64_t v12 = (void *)a1[3];
  uint64_t v11 = (void *)a1[4];
  sub_24B64DBE0();
  uint64_t v13 = (uint64_t)v7 + *(int *)(v5 + 56);
  *uint64_t v7 = v8;
  v7[1] = v9;
  v7[2] = v10;
  v7[3] = v12;
  v7[4] = v11;
  sub_24B659A1C(a2, v13, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
  id v14 = v11;
  id v15 = v9;
  id v16 = v10;
  id v17 = v12;
  sub_24B682500();
  swift_release();
  return sub_24B5632A8((uint64_t)v7, &qword_2697CC800);
}

uint64_t ObjectCaptureSessionWritingPublishers.send(shotMetadata:)()
{
  sub_24B64DDAC();
  sub_24B682500();

  return swift_release();
}

Swift::Void __swiftcall ObjectCaptureSessionWritingPublishers.send(sessionMetadata:)(CoreOC::ObjectCaptureSession::Metadata::Session *sessionMetadata)
{
}

uint64_t ObjectCaptureSessionWritingPublishers.send(depthPointCloud:timestamp:)()
{
  return swift_release();
}

Swift::Void __swiftcall ObjectCaptureSessionWritingPublishers.sendComplete()()
{
}

uint64_t ObjectCaptureSessionFrameSPI.depthPointCloud.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  return sub_24B659CF4(v2);
}

uint64_t ObjectCaptureSessionFrameSPI.voxelCloud.getter@<X0>(_OWORD *a1@<X8>)
{
  long long v2 = v1[6];
  *a1 = v1[5];
  a1[1] = v2;
  long long v3 = v1[8];
  a1[2] = v1[7];
  a1[3] = v3;
  a1[4] = v1[9];
  return swift_bridgeObjectRetain();
}

uint64_t ObjectCaptureSessionFrameSPI.debugVoxelCloud.getter@<X0>(_OWORD *a1@<X8>)
{
  long long v2 = v1[11];
  *a1 = v1[10];
  a1[1] = v2;
  long long v3 = v1[13];
  a1[2] = v1[12];
  a1[3] = v3;
  a1[4] = v1[14];
  return swift_bridgeObjectRetain();
}

void *ObjectCaptureSessionFrameSPI.tsdfDepth.getter()
{
  uint64_t v1 = *(void **)(v0 + 240);
  id v2 = v1;
  return v1;
}

uint64_t ObjectCaptureSessionFrameSPI.pointCloud.getter@<X0>(_OWORD *a1@<X8>)
{
  long long v2 = v1[17];
  *a1 = v1[16];
  a1[1] = v2;
  long long v3 = v1[19];
  a1[2] = v1[18];
  a1[3] = v3;
  a1[4] = v1[20];
  return swift_bridgeObjectRetain();
}

uint64_t ObjectCaptureSessionFrameSPI.triangleMesh.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[42];
  uint64_t v3 = v1[43];
  uint64_t v4 = v1[44];
  uint64_t v5 = v1[45];
  uint64_t v6 = v1[46];
  uint64_t v7 = v1[47];
  uint64_t v8 = v1[48];
  uint64_t v9 = v1[49];
  uint64_t v10 = v1[50];
  uint64_t v11 = v1[51];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  return sub_24B659DA0(v2);
}

void *ObjectCaptureSessionFrameSPI.plane.getter()
{
  uint64_t v1 = *(void **)(v0 + 416);
  id v2 = v1;
  return v1;
}

uint64_t ObjectCaptureSessionFrameSPI.coverageVoxelCloud.getter@<X0>(_OWORD *a1@<X8>)
{
  long long v2 = v1[28];
  *a1 = v1[27];
  a1[1] = v2;
  long long v3 = v1[30];
  a1[2] = v1[29];
  a1[3] = v3;
  a1[4] = v1[31];
  return swift_bridgeObjectRetain();
}

uint64_t ObjectCaptureSessionFrameSPI.maskingVoxelCloud.getter@<X0>(_OWORD *a1@<X8>)
{
  long long v2 = v1[33];
  *a1 = v1[32];
  a1[1] = v2;
  long long v3 = v1[35];
  a1[2] = v1[34];
  a1[3] = v3;
  a1[4] = v1[36];
  return swift_bridgeObjectRetain();
}

float ObjectCaptureSessionFrameSPI.luxLevel.getter()
{
  return *(float *)(v0 + 592);
}

void *ObjectCaptureSessionFrameSPI.rawFeaturePoints.getter()
{
  uint64_t v1 = *(void **)(v0 + 600);
  id v2 = v1;
  return v1;
}

uint64_t ObjectCaptureSessionFrameSPI.objectContour.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t ObjectCaptureSessionFrameSPI.ratioObjectInFOVThreshold.getter()
{
  return *(unsigned int *)(v0 + 616) | ((unint64_t)*(unsigned __int8 *)(v0 + 620) << 32);
}

double ObjectCaptureSessionFrameSPI.captureFactors.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 632);
  uint64_t v3 = *(void *)(v1 + 648);
  int v4 = *(_DWORD *)(v1 + 664);
  char v5 = *(unsigned char *)(v1 + 668);
  char v6 = *(unsigned char *)(v1 + 669);
  char v7 = *(unsigned char *)(v1 + 670);
  char v8 = *(unsigned char *)(v1 + 671);
  char v9 = *(unsigned char *)(v1 + 672);
  char v10 = *(unsigned char *)(v1 + 673);
  char v11 = *(unsigned char *)(v1 + 674);
  char v12 = *(unsigned char *)(v1 + 675);
  char v13 = *(unsigned char *)(v1 + 676);
  *(_DWORD *)a1 = *(_DWORD *)(v1 + 624);
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = *(void *)(v1 + 640);
  *(void *)(a1 + 24) = v3;
  double result = *(double *)(v1 + 656);
  *(double *)(a1 + 32) = result;
  *(_DWORD *)(a1 + 40) = v4;
  *(unsigned char *)(a1 + 44) = v5;
  *(unsigned char *)(a1 + 45) = v6;
  *(unsigned char *)(a1 + 46) = v7;
  *(unsigned char *)(a1 + 47) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  *(unsigned char *)(a1 + 49) = v10;
  *(unsigned char *)(a1 + 50) = v11;
  *(unsigned char *)(a1 + 51) = v12;
  *(unsigned char *)(a1 + 52) = v13;
  return result;
}

uint64_t ObjectCaptureSessionFrameSPI.angularSpeeds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24B64F01C(char a1, char *a2)
{
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24B57CC30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  char v9 = sub_24B6824B0();
  os_log_type_t v10 = sub_24B682B30();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)uint64_t v11 = 136380931;
    uint64_t v21 = sub_24B5627B8(0xD00000000000001BLL, 0x800000024B68F590, aBlock);
    sub_24B682CD0();
    *(_WORD *)(v11 + 12) = 1026;
    LODWORD(v21) = a1 & 1;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v9, v10, "ObjectCaptureSession.%{private}s: [SPI]set debug tap position: %{BOOL,public}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v12, -1, -1);
    MEMORY[0x24C5D6C00](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  char v13 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(unsigned char *)(v14 + 24) = a1 & 1;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_24B6627EC;
  *(void *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_24B5A2598;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24B58EFF8;
  aBlock[3] = (uint64_t)&unk_26FE8F318;
  id v16 = _Block_copy(aBlock);
  id v17 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_24B64F36C()
{
  return sub_24B653B78();
}

uint64_t sub_24B64F384(char a1, char *a2)
{
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24B57CC30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  char v9 = sub_24B6824B0();
  os_log_type_t v10 = sub_24B682B30();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)uint64_t v11 = 136380931;
    uint64_t v21 = sub_24B5627B8(0xD00000000000001ELL, 0x800000024B68F5B0, aBlock);
    sub_24B682CD0();
    *(_WORD *)(v11 + 12) = 1026;
    LODWORD(v21) = a1 & 1;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v9, v10, "ObjectCaptureSession.%{private}s: [SPI]set debug plane detection: %{BOOL,public}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v12, -1, -1);
    MEMORY[0x24C5D6C00](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  char v13 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(unsigned char *)(v14 + 24) = a1 & 1;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_24B66282C;
  *(void *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_24B5A2598;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24B58EFF8;
  aBlock[3] = (uint64_t)&unk_26FE8F390;
  id v16 = _Block_copy(aBlock);
  id v17 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_24B64F6D4()
{
  return sub_24B653B78();
}

uint64_t sub_24B64F6EC(char a1, char *a2)
{
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24B57CC30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  char v9 = sub_24B6824B0();
  os_log_type_t v10 = sub_24B682B30();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)uint64_t v11 = 136380931;
    uint64_t v21 = sub_24B5627B8(0xD00000000000001CLL, 0x800000024B68F5D0, aBlock);
    sub_24B682CD0();
    *(_WORD *)(v11 + 12) = 1026;
    LODWORD(v21) = a1 & 1;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v9, v10, "ObjectCaptureSession.%{private}s: [SPI]set debug masking voxel: %{BOOL,public}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v12, -1, -1);
    MEMORY[0x24C5D6C00](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  char v13 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(unsigned char *)(v14 + 24) = a1 & 1;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_24B66286C;
  *(void *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_24B5A2598;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24B58EFF8;
  aBlock[3] = (uint64_t)&unk_26FE8F408;
  id v16 = _Block_copy(aBlock);
  id v17 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_24B64FA3C()
{
  return sub_24B653B78();
}

uint64_t sub_24B64FA54(char a1, char *a2)
{
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24B57CC30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  char v9 = sub_24B6824B0();
  os_log_type_t v10 = sub_24B682B30();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)uint64_t v11 = 136380931;
    uint64_t v21 = sub_24B5627B8(0xD00000000000001DLL, 0x800000024B68F5F0, aBlock);
    sub_24B682CD0();
    *(_WORD *)(v11 + 12) = 1026;
    LODWORD(v21) = a1 & 1;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v9, v10, "ObjectCaptureSession.%{private}s: [SPI]set debug camera control: %{BOOL,public}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v12, -1, -1);
    MEMORY[0x24C5D6C00](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  char v13 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(unsigned char *)(v14 + 24) = a1 & 1;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_24B6628AC;
  *(void *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_24B5A2598;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24B58EFF8;
  aBlock[3] = (uint64_t)&unk_26FE8F480;
  id v16 = _Block_copy(aBlock);
  id v17 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_24B64FDA4()
{
  return sub_24B653B78();
}

uint64_t sub_24B64FDBC(char a1, char *a2)
{
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24B57CC30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  char v9 = sub_24B6824B0();
  os_log_type_t v10 = sub_24B682B30();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)uint64_t v11 = 136380931;
    uint64_t v21 = sub_24B5627B8(0xD00000000000001BLL, 0x800000024B68F610, aBlock);
    sub_24B682CD0();
    *(_WORD *)(v11 + 12) = 1026;
    LODWORD(v21) = a1 & 1;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v9, v10, "ObjectCaptureSession.%{private}s: [SPI]set debug debug voxels: %{BOOL,public}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v12, -1, -1);
    MEMORY[0x24C5D6C00](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  char v13 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(unsigned char *)(v14 + 24) = a1 & 1;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_24B6628EC;
  *(void *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_24B5A2598;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24B58EFF8;
  aBlock[3] = (uint64_t)&unk_26FE8F4F8;
  id v16 = _Block_copy(aBlock);
  id v17 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_24B65010C()
{
  return sub_24B653B78();
}

uint64_t sub_24B650124(char a1, char *a2)
{
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24B57CC30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  char v9 = sub_24B6824B0();
  os_log_type_t v10 = sub_24B682B30();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)uint64_t v11 = 136380931;
    uint64_t v21 = sub_24B5627B8(0xD000000000000019, 0x800000024B68F630, aBlock);
    sub_24B682CD0();
    *(_WORD *)(v11 + 12) = 1026;
    LODWORD(v21) = a1 & 1;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v9, v10, "ObjectCaptureSession.%{private}s: [SPI]set debug tsdf depth: %{BOOL,public}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v12, -1, -1);
    MEMORY[0x24C5D6C00](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  char v13 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(unsigned char *)(v14 + 24) = a1 & 1;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_24B66292C;
  *(void *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_24B5A2598;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24B58EFF8;
  aBlock[3] = (uint64_t)&unk_26FE8F570;
  id v16 = _Block_copy(aBlock);
  id v17 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_24B650474()
{
  return sub_24B653B78();
}

uint64_t sub_24B65048C(char a1, char *a2)
{
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24B57CC30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  char v9 = sub_24B6824B0();
  os_log_type_t v10 = sub_24B682B30();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)uint64_t v11 = 136380931;
    uint64_t v21 = sub_24B5627B8(0xD000000000000023, 0x800000024B68F650, aBlock);
    sub_24B682CD0();
    *(_WORD *)(v11 + 12) = 1026;
    LODWORD(v21) = a1 & 1;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v9, v10, "ObjectCaptureSession.%{private}s: [SPI]set debug surface geometry data: %{BOOL,public}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v12, -1, -1);
    MEMORY[0x24C5D6C00](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  char v13 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(unsigned char *)(v14 + 24) = a1 & 1;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_24B66296C;
  *(void *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_24B5A2598;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24B58EFF8;
  aBlock[3] = (uint64_t)&unk_26FE8F5E8;
  id v16 = _Block_copy(aBlock);
  id v17 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_24B6507DC()
{
  return sub_24B653B78();
}

uint64_t sub_24B6507F4(char a1, char *a2)
{
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24B57CC30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  char v9 = sub_24B6824B0();
  os_log_type_t v10 = sub_24B682B30();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)uint64_t v11 = 136380931;
    uint64_t v21 = sub_24B5627B8(0xD000000000000023, 0x800000024B68F680, aBlock);
    sub_24B682CD0();
    *(_WORD *)(v11 + 12) = 1026;
    LODWORD(v21) = a1 & 1;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v9, v10, "ObjectCaptureSession.%{private}s: [SPI]set debug coverage guide voxels: %{BOOL,public}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v12, -1, -1);
    MEMORY[0x24C5D6C00](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  char v13 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(unsigned char *)(v14 + 24) = a1 & 1;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_24B6629AC;
  *(void *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_24B5A2598;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24B58EFF8;
  aBlock[3] = (uint64_t)&unk_26FE8F660;
  id v16 = _Block_copy(aBlock);
  id v17 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_24B650B44()
{
  return sub_24B653B78();
}

uint64_t sub_24B650B5C(char a1, char *a2)
{
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24B57CC30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  char v9 = sub_24B6824B0();
  os_log_type_t v10 = sub_24B682B30();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)uint64_t v11 = 136380931;
    uint64_t v21 = sub_24B5627B8(0xD000000000000027, 0x800000024B68F6B0, aBlock);
    sub_24B682CD0();
    *(_WORD *)(v11 + 12) = 1026;
    LODWORD(v21) = a1 & 1;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v9, v10, "ObjectCaptureSession.%{private}s: [SPI]set debug explicit feedback enabled: %{BOOL,public}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v12, -1, -1);
    MEMORY[0x24C5D6C00](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  char v13 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(unsigned char *)(v14 + 24) = a1 & 1;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_24B6629EC;
  *(void *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_24B5A2598;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24B58EFF8;
  aBlock[3] = (uint64_t)&unk_26FE8F6D8;
  id v16 = _Block_copy(aBlock);
  id v17 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_24B650EAC(char a1, char *a2)
{
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24B57CC30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  char v9 = sub_24B6824B0();
  os_log_type_t v10 = sub_24B682B30();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)uint64_t v11 = 136380931;
    uint64_t v21 = sub_24B5627B8(0xD000000000000022, 0x800000024B68F6E0, aBlock);
    sub_24B682CD0();
    *(_WORD *)(v11 + 12) = 1026;
    LODWORD(v21) = a1 & 1;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v9, v10, "ObjectCaptureSession.%{private}s: [SPI]set debug auto capture enabled: %{BOOL,public}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v12, -1, -1);
    MEMORY[0x24C5D6C00](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  char v13 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(unsigned char *)(v14 + 24) = a1 & 1;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_24B662A14;
  *(void *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_24B5A2598;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24B58EFF8;
  aBlock[3] = (uint64_t)&unk_26FE8F750;
  id v16 = _Block_copy(aBlock);
  id v17 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_24B6511FC(uint64_t a1, int a2, char *a3)
{
  LODWORD(v4) = a2;
  uint64_t v6 = sub_24B6824D0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  os_log_type_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v31 - v11;
  uint64_t v13 = sub_24B57CC30();
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  if (v4)
  {
    v14(v10, v13, v6);
    uint64_t v15 = sub_24B6824B0();
    os_log_type_t v16 = sub_24B682B30();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v33 = a1;
      id v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      LODWORD(v32) = v4;
      uint64_t v4 = v18;
      aBlock[0] = v18;
      *(_DWORD *)id v17 = 136380675;
      uint64_t v34 = sub_24B5627B8(0xD00000000000001ALL, 0x800000024B68F710, aBlock);
      a1 = v33;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v15, v16, "ObjectCaptureSession.%{private}s: [SPI]removed capture cool down time adjustment.", v17, 0xCu);
      swift_arrayDestroy();
      uint64_t v19 = v4;
      LOBYTE(v4) = v32;
      MEMORY[0x24C5D6C00](v19, -1, -1);
      MEMORY[0x24C5D6C00](v17, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  else
  {
    v14(v12, v13, v6);
    uint64_t v20 = sub_24B6824B0();
    os_log_type_t v21 = sub_24B682B30();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      aBlock[0] = v32;
      *(_DWORD *)uint64_t v22 = 136380931;
      uint64_t v33 = a1;
      uint64_t v34 = sub_24B5627B8(0xD00000000000001ALL, 0x800000024B68F710, aBlock);
      a1 = v33;
      sub_24B682CD0();
      *(_WORD *)(v22 + 12) = 2050;
      uint64_t v34 = a1;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v20, v21, "ObjectCaptureSession.%{private}s: [SPI]adjusted capture cool down time: %{public}f", (uint8_t *)v22, 0x16u);
      uint64_t v23 = v32;
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v23, -1, -1);
      MEMORY[0x24C5D6C00](v22, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  os_log_type_t v24 = *(NSObject **)&a3[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a3;
  *(void *)(v25 + 24) = a1;
  *(unsigned char *)(v25 + 32) = v4 & 1;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_24B662A74;
  *(void *)(v26 + 24) = v25;
  aBlock[4] = (uint64_t)sub_24B5A2598;
  aBlock[5] = v26;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24B58EFF8;
  aBlock[3] = (uint64_t)&unk_26FE8F7C8;
  uint64_t v27 = _Block_copy(aBlock);
  os_log_type_t v28 = a3;
  swift_retain();
  swift_release();
  dispatch_sync(v24, v27);
  _Block_release(v27);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_24B6516A8(uint64_t a1, char *a2)
{
  BOOL v41 = a2;
  uint64_t v3 = sub_24B6822E0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v33 - v8;
  uint64_t v10 = sub_24B6824D0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24B57CC30();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v39 = v10;
  v15(v13, v14, v10);
  float32x4_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v38(v9, a1, v3);
  os_log_type_t v16 = sub_24B6824B0();
  os_log_type_t v17 = sub_24B682B30();
  int v18 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v37 = v7;
    uint64_t v20 = v19;
    uint64_t v35 = swift_slowAlloc();
    aBlock[0] = v35;
    *(_DWORD *)uint64_t v20 = 136381187;
    int v34 = v18;
    uint64_t v42 = sub_24B5627B8(0xD000000000000019, 0x800000024B68F730, aBlock);
    uint64_t v36 = a1;
    sub_24B682CD0();
    *(_WORD *)(v20 + 12) = 2160;
    uint64_t v42 = 1752392040;
    sub_24B682CD0();
    *(_WORD *)(v20 + 22) = 2081;
    uint64_t v33 = v20 + 24;
    sub_24B65D13C(&qword_2697CCB30, MEMORY[0x263F06EA8]);
    uint64_t v21 = sub_24B682F90();
    uint64_t v42 = sub_24B5627B8(v21, v22, aBlock);
    a1 = v36;
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    _os_log_impl(&dword_24B55E000, v16, (os_log_type_t)v34, "ObjectCaptureSession.%{private}s: [SPI]set replay video URL: %{private,mask.hash}s", (uint8_t *)v20, 0x20u);
    uint64_t v23 = v35;
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v23, -1, -1);
    uint64_t v24 = v20;
    uint64_t v7 = v37;
    MEMORY[0x24C5D6C00](v24, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v39);
  uint64_t v25 = v41;
  uint64_t v26 = *(NSObject **)&v41[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  v38(v7, a1, v3);
  unint64_t v27 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v25;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v28 + v27, v7, v3);
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = sub_24B662B70;
  *(void *)(v29 + 24) = v28;
  aBlock[4] = (uint64_t)sub_24B5A2598;
  aBlock[5] = v29;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24B58EFF8;
  aBlock[3] = (uint64_t)&unk_26FE8F840;
  uint64_t v30 = _Block_copy(aBlock);
  id v31 = v25;
  swift_retain();
  swift_release();
  dispatch_sync(v26, v30);
  _Block_release(v30);
  LOBYTE(v26) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v26) {
    __break(1u);
  }
  return result;
}

uint64_t sub_24B651BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24B562F04(&qword_2697CC1F0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24B6822E0();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a2, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  uint64_t v9 = a1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__replayVideoURL;
  swift_beginAccess();
  sub_24B56C254((uint64_t)v6, v9, &qword_2697CC1F0);
  return swift_endAccess();
}

uint64_t sub_24B651D04()
{
  return sub_24B682BD0();
}

uint64_t sub_24B651D78(char a1, char *a2)
{
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24B57CC30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  uint64_t v9 = sub_24B6824B0();
  os_log_type_t v10 = sub_24B682B30();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)uint64_t v11 = 136380931;
    uint64_t v21 = sub_24B5627B8(0xD000000000000022, 0x800000024B68F750, aBlock);
    sub_24B682CD0();
    *(_WORD *)(v11 + 12) = 1026;
    LODWORD(v21) = a1 & 1;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v9, v10, "ObjectCaptureSession.%{private}s: [SPI]set debug write all frame data: %{BOOL,public}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v12, -1, -1);
    MEMORY[0x24C5D6C00](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v13 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(unsigned char *)(v14 + 24) = a1 & 1;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_24B662C54;
  *(void *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_24B5A2598;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24B58EFF8;
  aBlock[3] = (uint64_t)&unk_26FE8F8B8;
  os_log_type_t v16 = _Block_copy(aBlock);
  os_log_type_t v17 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_24B6520C8()
{
  return sub_24B653B78();
}

uint64_t sub_24B6520E0(char a1, char *a2)
{
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24B57CC30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  uint64_t v9 = sub_24B6824B0();
  os_log_type_t v10 = sub_24B682B30();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)uint64_t v11 = 136380931;
    uint64_t v21 = sub_24B5627B8(0xD000000000000017, 0x800000024B68F780, aBlock);
    sub_24B682CD0();
    *(_WORD *)(v11 + 12) = 1026;
    LODWORD(v21) = a1 & 1;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v9, v10, "ObjectCaptureSession.%{private}s: [SPI]set run arkit only: %{BOOL,public}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v12, -1, -1);
    MEMORY[0x24C5D6C00](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v13 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(unsigned char *)(v14 + 24) = a1 & 1;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_24B662C94;
  *(void *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_24B5A2598;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24B58EFF8;
  aBlock[3] = (uint64_t)&unk_26FE8F930;
  os_log_type_t v16 = _Block_copy(aBlock);
  os_log_type_t v17 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_24B652430(char a1, char *a2)
{
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24B57CC30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  uint64_t v9 = sub_24B6824B0();
  os_log_type_t v10 = sub_24B682B30();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)uint64_t v11 = 136380931;
    uint64_t v21 = sub_24B5627B8(0xD000000000000022, 0x800000024B68F7A0, aBlock);
    sub_24B682CD0();
    *(_WORD *)(v11 + 12) = 1026;
    LODWORD(v21) = a1 & 1;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v9, v10, "ObjectCaptureSession.%{private}s: [SPI]set voxel integration enabled: %{BOOL,public}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v12, -1, -1);
    MEMORY[0x24C5D6C00](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v13 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(unsigned char *)(v14 + 24) = a1 & 1;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_24B662CBC;
  *(void *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_24B5A2598;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24B58EFF8;
  aBlock[3] = (uint64_t)&unk_26FE8F9A8;
  os_log_type_t v16 = _Block_copy(aBlock);
  os_log_type_t v17 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_24B652780(char a1, char *a2)
{
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24B57CC30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  uint64_t v9 = sub_24B6824B0();
  os_log_type_t v10 = sub_24B682B30();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)uint64_t v11 = 136380931;
    uint64_t v21 = sub_24B5627B8(0xD000000000000022, 0x800000024B68F7D0, aBlock);
    sub_24B682CD0();
    *(_WORD *)(v11 + 12) = 1026;
    LODWORD(v21) = a1 & 1;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v9, v10, "ObjectCaptureSession.%{private}s: [SPI]set explicit feedback enabled: %{BOOL,public}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v12, -1, -1);
    MEMORY[0x24C5D6C00](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v13 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(unsigned char *)(v14 + 24) = a1 & 1;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_24B662CE4;
  *(void *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_24B5A2598;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24B58EFF8;
  aBlock[3] = (uint64_t)&unk_26FE8FA20;
  os_log_type_t v16 = _Block_copy(aBlock);
  os_log_type_t v17 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_24B652AD0(char a1, char *a2)
{
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24B57CC30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  uint64_t v9 = sub_24B6824B0();
  os_log_type_t v10 = sub_24B682B30();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)uint64_t v11 = 136380931;
    uint64_t v21 = sub_24B5627B8(0xD000000000000016, 0x800000024B68F800, aBlock);
    sub_24B682CD0();
    *(_WORD *)(v11 + 12) = 1026;
    LODWORD(v21) = a1 & 1;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v9, v10, "ObjectCaptureSession.%{private}s: [SPI]set coverage enabled: %{BOOL,public}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v12, -1, -1);
    MEMORY[0x24C5D6C00](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v13 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(unsigned char *)(v14 + 24) = a1 & 1;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_24B662D0C;
  *(void *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_24B5A2598;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24B58EFF8;
  aBlock[3] = (uint64_t)&unk_26FE8FA98;
  os_log_type_t v16 = _Block_copy(aBlock);
  os_log_type_t v17 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_24B652E20(char a1, char *a2)
{
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24B57CC30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  uint64_t v9 = sub_24B6824B0();
  os_log_type_t v10 = sub_24B682B30();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)uint64_t v11 = 136380931;
    uint64_t v21 = sub_24B5627B8(0xD000000000000016, 0x800000024B68F820, aBlock);
    sub_24B682CD0();
    *(_WORD *)(v11 + 12) = 1026;
    LODWORD(v21) = a1 & 1;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v9, v10, "ObjectCaptureSession.%{private}s: [SPI]set automatic capture enabled: %{BOOL,public}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v12, -1, -1);
    MEMORY[0x24C5D6C00](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v13 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(unsigned char *)(v14 + 24) = a1 & 1;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_24B662D34;
  *(void *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_24B5A2598;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24B58EFF8;
  aBlock[3] = (uint64_t)&unk_26FE8FB10;
  os_log_type_t v16 = _Block_copy(aBlock);
  os_log_type_t v17 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_24B653170(char a1, char *a2)
{
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24B57CC30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  uint64_t v9 = sub_24B6824B0();
  os_log_type_t v10 = sub_24B682B30();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)uint64_t v11 = 136380931;
    uint64_t v21 = sub_24B5627B8(0xD00000000000001BLL, 0x800000024B68F840, aBlock);
    sub_24B682CD0();
    *(_WORD *)(v11 + 12) = 1026;
    LODWORD(v21) = a1 & 1;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v9, v10, "ObjectCaptureSession.%{private}s: [SPI]set mobileSfM enabled: %{BOOL,public}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v12, -1, -1);
    MEMORY[0x24C5D6C00](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v13 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(unsigned char *)(v14 + 24) = a1 & 1;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_24B662D5C;
  *(void *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_24B5A2598;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24B58EFF8;
  aBlock[3] = (uint64_t)&unk_26FE8FB88;
  os_log_type_t v16 = _Block_copy(aBlock);
  os_log_type_t v17 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_24B6534C0(char a1, char *a2)
{
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24B57CC30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  uint64_t v9 = sub_24B6824B0();
  os_log_type_t v10 = sub_24B682B30();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)uint64_t v11 = 136380931;
    uint64_t v21 = sub_24B5627B8(0xD000000000000022, 0x800000024B68F860, aBlock);
    sub_24B682CD0();
    *(_WORD *)(v11 + 12) = 1026;
    LODWORD(v21) = a1 & 1;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v9, v10, "ObjectCaptureSession.%{private}s: [SPI]set mobileSfM enabled: %{BOOL,public}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v12, -1, -1);
    MEMORY[0x24C5D6C00](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v13 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(unsigned char *)(v14 + 24) = a1 & 1;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_24B662D84;
  *(void *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_24B5A2598;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24B58EFF8;
  aBlock[3] = (uint64_t)&unk_26FE8FC00;
  os_log_type_t v16 = _Block_copy(aBlock);
  os_log_type_t v17 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_24B653810(char a1, char *a2)
{
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24B57CC30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  uint64_t v9 = sub_24B6824B0();
  os_log_type_t v10 = sub_24B682B30();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)uint64_t v11 = 136380931;
    uint64_t v21 = sub_24B5627B8(0xD000000000000024, 0x800000024B68F890, aBlock);
    sub_24B682CD0();
    *(_WORD *)(v11 + 12) = 1026;
    LODWORD(v21) = a1 & 1;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v9, v10, "ObjectCaptureSession.%{private}s: [SPI]set Capture Rate Control enabled: %{BOOL,public}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v12, -1, -1);
    MEMORY[0x24C5D6C00](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v13 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(unsigned char *)(v14 + 24) = a1 & 1;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_24B662DAC;
  *(void *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_24B5A2598;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24B58EFF8;
  aBlock[3] = (uint64_t)&unk_26FE8FC78;
  os_log_type_t v16 = _Block_copy(aBlock);
  os_log_type_t v17 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_24B653B60()
{
  return sub_24B653B78();
}

uint64_t sub_24B653B78()
{
  sub_24B682BD0();
  return v1;
}

void *static ObjectCaptureSessionSPI.readHEICToShots(heicFolderURL:)(uint64_t a1)
{
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24B6822E0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ObjectCaptureImageFolderReader();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  uint64_t v10 = ObjectCaptureImageFolderReader.__allocating_init(url:)((uint64_t)v9);
  uint64_t v11 = (*(uint64_t (**)(void))(*(void *)v10 + 160))();
  type metadata accessor for SegmentIDConverter();
  uint64_t v12 = sub_24B5FCDCC();
  char v13 = (*(uint64_t (**)(void))(*(void *)v10 + 184))();
  (*(void (**)(void))(*(void *)v12 + 120))(v13 & 1);
  if (v11)
  {
    swift_release();
    sub_24B562F04(&qword_2697CCB38);
    uint64_t result = (void *)swift_allocObject();
    result[2] = v11;
    result[3] = sub_24B662DEC;
    result[4] = v12;
  }
  else
  {
    uint64_t v15 = sub_24B57CC30();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v15, v2);
    os_log_type_t v16 = sub_24B6824B0();
    os_log_type_t v17 = sub_24B682B20();
    if (os_log_type_enabled(v16, v17))
    {
      int v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      v21[0] = v3;
      uint64_t v20 = v19;
      uint64_t v22 = v19;
      *(_DWORD *)int v18 = 136380675;
      v21[1] = sub_24B5627B8(0xD00000000000001FLL, 0x800000024B68F8C0, &v22);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v16, v17, "ObjectCaptureSession.%{private}s: Error reading PG samples!", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v20, -1, -1);
      MEMORY[0x24C5D6C00](v18, -1, -1);
      swift_release();

      swift_release();
      (*(void (**)(char *, uint64_t))(v21[0] + 8))(v5, v2);
    }
    else
    {

      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    return 0;
  }
  return result;
}

uint64_t static ObjectCaptureSessionSPI.makeSessionMetaDataForHEICBundle(bundleID:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_24B682890();
  *(void *)a1 = 0x302E342E32;
  *(void *)(a1 + 8) = 0xE500000000000000;
  *(void *)(a1 + 16) = 0x6965685F6D6F7266;
  *(void *)(a1 + 24) = 0xEA00000000005F63;
  *(_DWORD *)(a1 + 32) = 0;
  return result;
}

uint64_t ObjectCaptureSessionSPI.deinit()
{
  return v0;
}

uint64_t ObjectCaptureSessionSPI.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

id sub_24B65403C()
{
  return *v0;
}

uint64_t sub_24B654044()
{
  return sub_24B6827D0();
}

uint64_t sub_24B654054(uint64_t a1)
{
  uint64_t v2 = sub_24B65D13C(&qword_2697CCD58, type metadata accessor for ARError);

  return MEMORY[0x270EEF7E8](a1, v2);
}

uint64_t sub_24B6540C0(uint64_t a1)
{
  uint64_t v2 = sub_24B65D13C(&qword_2697CCD58, type metadata accessor for ARError);

  return MEMORY[0x270EEF7A0](a1, v2);
}

uint64_t sub_24B65412C(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_24B65D13C(&qword_2697CCD58, type metadata accessor for ARError);
  id v5 = a1;

  return MEMORY[0x270EEF790](v5, a2, v4);
}

uint64_t sub_24B6541BC()
{
  id v1 = *v0;
  uint64_t v2 = sub_24B682CB0();

  return v2;
}

uint64_t sub_24B6541F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24B65D13C(&qword_2697CCD58, type metadata accessor for ARError);

  return MEMORY[0x270EEF7D0](a1, a2, v4);
}

uint64_t sub_24B654270()
{
  return sub_24B6830D0();
}

uint64_t sub_24B6542D0(uint64_t a1)
{
  uint64_t v2 = sub_24B65D13C(&qword_2697CCED8, type metadata accessor for ARError);

  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_24B65433C(uint64_t a1)
{
  uint64_t v2 = sub_24B65D13C(&qword_2697CCED8, type metadata accessor for ARError);

  return MEMORY[0x270EF2668](a1, v2);
}

uint64_t sub_24B6543A8(uint64_t a1)
{
  uint64_t v2 = sub_24B65D13C(&qword_2697CCD58, type metadata accessor for ARError);

  return MEMORY[0x270EEF788](a1, v2);
}

uint64_t sub_24B654414(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24B65D13C(&qword_2697CCD58, type metadata accessor for ARError);

  return MEMORY[0x270EEF7B8](a1, a2, a3, v6);
}

uint64_t sub_24B654498(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    char v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_24B562F04(&qword_2697CCD10);
  uint64_t v10 = *(void *)(sub_24B682410() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  char v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_24B682EE0();
    __break(1u);
    return result;
  }
  void v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_24B682410() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_24B65F55C(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

void *sub_24B654700(void *a1)
{
  return sub_24B5A3934(0, a1[2], 0, a1);
}

uint64_t sub_24B654714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_24B59F008(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_24B656F58();
      uint64_t v9 = v21;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_24B682410();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    uint64_t v12 = *(void *)(v9 + 56);
    uint64_t v13 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
    uint64_t v20 = *(void *)(v13 - 8);
    sub_24B65A134(v12 + *(void *)(v20 + 72) * v6, a2, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    sub_24B655C8C(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    size_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
    size_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }

  return v14(v15, v16, 1, v17);
}

uint64_t sub_24B6548E0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  uint64_t v49 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v54 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24B682410();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v51 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_24B562F04(&qword_2697CCCB0);
  int v50 = a2;
  uint64_t v11 = v10;
  uint64_t v12 = sub_24B682F20();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  uint64_t v46 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  uint64_t v44 = v2;
  int64_t v45 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v47 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v52 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
  uint64_t v53 = v7;
  uint64_t v18 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  uint64_t v48 = v11;
  uint64_t v21 = v51;
  while (1)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v45) {
      break;
    }
    uint64_t v26 = v46;
    unint64_t v27 = v46[v25];
    ++v20;
    if (!v27)
    {
      int64_t v20 = v25 + 1;
      if (v25 + 1 >= v45) {
        goto LABEL_34;
      }
      unint64_t v27 = v46[v20];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v45)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v44;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v46[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v20 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v45) {
              goto LABEL_34;
            }
            unint64_t v27 = v46[v20];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v28;
      }
    }
LABEL_21:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v20 << 6);
    uint64_t v21 = v51;
LABEL_22:
    uint64_t v29 = v8;
    uint64_t v30 = *(void *)(v8 + 72);
    unint64_t v31 = *(void *)(v11 + 48) + v30 * v24;
    if (v50)
    {
      (*v52)(v21, v31, v53);
      uint64_t v32 = *(void *)(v11 + 56);
      uint64_t v33 = *(void *)(v49 + 72);
      sub_24B65A134(v32 + v33 * v24, v54, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    }
    else
    {
      (*v47)(v21, v31, v53);
      uint64_t v34 = *(void *)(v11 + 56);
      uint64_t v33 = *(void *)(v49 + 72);
      sub_24B659A1C(v34 + v33 * v24, v54, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    }
    sub_24B65D13C(&qword_2697CC408, MEMORY[0x263F07508]);
    uint64_t result = sub_24B682750();
    uint64_t v35 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v36 = result & ~v35;
    unint64_t v37 = v36 >> 6;
    if (((-1 << v36) & ~*(void *)(v18 + 8 * (v36 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v36) & ~*(void *)(v18 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v21 = v51;
    }
    else
    {
      char v38 = 0;
      unint64_t v39 = (unint64_t)(63 - v35) >> 6;
      uint64_t v21 = v51;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v40 = v37 == v39;
        if (v37 == v39) {
          unint64_t v37 = 0;
        }
        v38 |= v40;
        uint64_t v41 = *(void *)(v18 + 8 * v37);
      }
      while (v41 == -1);
      unint64_t v22 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(void *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*v52)((char *)(*(void *)(v13 + 48) + v30 * v22), (unint64_t)v21, v53);
    uint64_t result = sub_24B65A134(v54, *(void *)(v13 + 56) + v33 * v22, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    ++*(void *)(v13 + 16);
    uint64_t v11 = v48;
    uint64_t v8 = v29;
  }
  swift_release();
  uint64_t v3 = v44;
  uint64_t v26 = v46;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v42 = 1 << *(unsigned char *)(v11 + 32);
  if (v42 >= 64) {
    bzero(v26, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v26 = -1 << v42;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v13;
  return result;
}

uint64_t sub_24B654DF8(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v41 = sub_24B682410();
  uint64_t v5 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_24B562F04(&qword_2697CCD00);
  int v40 = a2;
  uint64_t result = sub_24B682F20();
  uint64_t v10 = result;
  if (*(void *)(v8 + 16))
  {
    unint64_t v36 = v3;
    int64_t v11 = 0;
    uint64_t v12 = *(void *)(v8 + 64);
    char v38 = (void *)(v8 + 64);
    uint64_t v13 = 1 << *(unsigned char *)(v8 + 32);
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v12;
    int64_t v37 = (unint64_t)(v13 + 63) >> 6;
    unint64_t v39 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v16 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
    uint64_t v17 = result + 64;
    while (1)
    {
      if (v15)
      {
        unint64_t v19 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v20 = v19 | (v11 << 6);
      }
      else
      {
        int64_t v21 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v38;
        if (v21 >= v37) {
          goto LABEL_34;
        }
        unint64_t v22 = v38[v21];
        ++v11;
        if (!v22)
        {
          int64_t v11 = v21 + 1;
          if (v21 + 1 >= v37) {
            goto LABEL_34;
          }
          unint64_t v22 = v38[v11];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v37)
            {
LABEL_34:
              if ((v40 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v36;
                goto LABEL_41;
              }
              uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
              if (v35 >= 64) {
                bzero(v38, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *char v38 = -1 << v35;
              }
              uint64_t v3 = v36;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v22 = v38[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v11 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_43;
                }
                if (v11 >= v37) {
                  goto LABEL_34;
                }
                unint64_t v22 = v38[v11];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v11 = v23;
          }
        }
LABEL_21:
        unint64_t v15 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v11 << 6);
      }
      uint64_t v24 = *(void *)(*(void *)(v8 + 48) + 8 * v20);
      uint64_t v25 = v5;
      uint64_t v26 = *(void *)(v5 + 72);
      unint64_t v27 = *(void *)(v8 + 56) + v26 * v20;
      if (v40) {
        (*v16)(v7, v27, v41);
      }
      else {
        (*v39)(v7, v27, v41);
      }
      uint64_t result = sub_24B683080();
      uint64_t v28 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v29 = result & ~v28;
      unint64_t v30 = v29 >> 6;
      if (((-1 << v29) & ~*(void *)(v17 + 8 * (v29 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v29) & ~*(void *)(v17 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v31 = 0;
        unint64_t v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v33 = v30 == v32;
          if (v30 == v32) {
            unint64_t v30 = 0;
          }
          v31 |= v33;
          uint64_t v34 = *(void *)(v17 + 8 * v30);
        }
        while (v34 == -1);
        unint64_t v18 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(void *)(v17 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v10 + 48) + 8 * v18) = v24;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v16)(*(void *)(v10 + 56) + v26 * v18, v7, v41);
      ++*(void *)(v10 + 16);
      uint64_t v5 = v25;
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_24B6551A0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_24B682410();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_24B562F04(&qword_2697CCD08);
  int v42 = a2;
  uint64_t v10 = sub_24B682F20();
  uint64_t v11 = v10;
  if (*(void *)(v9 + 16))
  {
    int64_t v37 = v2;
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 64);
    unint64_t v39 = (void *)(v9 + 64);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    int64_t v38 = (unint64_t)(v12 + 63) >> 6;
    int v40 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
    uint64_t v16 = v10 + 64;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    uint64_t v44 = v5;
    for (i = v6; ; uint64_t v6 = i)
    {
      if (v15)
      {
        unint64_t v20 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v21 = v20 | (v18 << 6);
      }
      else
      {
        int64_t v22 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v38) {
          goto LABEL_34;
        }
        unint64_t v23 = v39[v22];
        ++v18;
        if (!v23)
        {
          int64_t v18 = v22 + 1;
          if (v22 + 1 >= v38) {
            goto LABEL_34;
          }
          unint64_t v23 = v39[v18];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v38)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v37;
              if (v42)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v9 + 32);
                if (v36 >= 64) {
                  bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v39 = -1 << v36;
                }
                *(void *)(v9 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v39[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v18 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_41;
                }
                if (v18 >= v38) {
                  goto LABEL_34;
                }
                unint64_t v23 = v39[v18];
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v18 = v24;
          }
        }
LABEL_21:
        unint64_t v15 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v18 << 6);
      }
      uint64_t v25 = *(void *)(v6 + 72);
      unint64_t v26 = *(void *)(v9 + 48) + v25 * v21;
      if (v42) {
        (*v43)(v8, v26, v44);
      }
      else {
        (*v40)(v8, v26, v44);
      }
      uint64_t v27 = v9;
      uint64_t v28 = *(void *)(*(void *)(v9 + 56) + 8 * v21);
      sub_24B65D13C(&qword_2697CC408, MEMORY[0x263F07508]);
      uint64_t result = sub_24B682750();
      uint64_t v29 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v16 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v19 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v43)(*(void *)(v11 + 48) + v25 * v19, v8, v44);
      *(void *)(*(void *)(v11 + 56) + 8 * v19) = v28;
      ++*(void *)(v11 + 16);
      uint64_t v9 = v27;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_24B6555C4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_24B562F04(&qword_2697CCE08);
  uint64_t result = sub_24B682F20();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v33 = a2;
    char v32 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v30 = -1 << v10;
    uint64_t v31 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v17 = v16 | (v8 << 6);
      }
      else
      {
        int64_t v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v18 >= v13) {
          goto LABEL_31;
        }
        unint64_t v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          int64_t v8 = v18 + 1;
          if (v18 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v19 = v9[v8];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_31:
              if ((v33 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v32;
                goto LABEL_38;
              }
              if (v31 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                *uint64_t v9 = v30;
              }
              uint64_t v3 = v32;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v8 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v19 = v9[v8];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v20;
          }
        }
LABEL_21:
        unint64_t v12 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v5 + 48) + 8 * v17);
      char v22 = *(unsigned char *)(*(void *)(v5 + 56) + v17);
      uint64_t result = sub_24B683080();
      uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v7 + 48) + 8 * v15) = v21;
      *(unsigned char *)(*(void *)(v7 + 56) + v15) = v22;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_24B655864(uint64_t a1, int a2, uint64_t *a3)
{
  uint64_t v5 = v3;
  uint64_t v7 = sub_24B682410();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v3;
  sub_24B562F04(a3);
  int v48 = a2;
  uint64_t v12 = sub_24B682F20();
  uint64_t v13 = v11;
  uint64_t v14 = v12;
  if (!*(void *)(v13 + 16)) {
    goto LABEL_41;
  }
  uint64_t v15 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v16 = *(void *)(v13 + 64);
  uint64_t v44 = (void *)(v13 + 64);
  if (v15 < 64) {
    uint64_t v17 = ~(-1 << v15);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v16;
  int v42 = v5;
  int64_t v43 = (unint64_t)(v15 + 63) >> 6;
  int64_t v45 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v47 = v8;
  unint64_t v19 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
  uint64_t v20 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v22 = 0;
  for (i = v13; ; uint64_t v13 = i)
  {
    if (v18)
    {
      unint64_t v24 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v25 = v24 | (v22 << 6);
      goto LABEL_22;
    }
    int64_t v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v26 >= v43) {
      break;
    }
    unint64_t v27 = v44;
    unint64_t v28 = v44[v26];
    ++v22;
    if (!v28)
    {
      int64_t v22 = v26 + 1;
      if (v26 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v28 = v44[v22];
      if (!v28)
      {
        int64_t v29 = v26 + 2;
        if (v29 >= v43)
        {
LABEL_34:
          swift_release();
          uint64_t v5 = v42;
          if ((v48 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v28 = v44[v29];
        if (!v28)
        {
          while (1)
          {
            int64_t v22 = v29 + 1;
            if (__OFADD__(v29, 1)) {
              goto LABEL_43;
            }
            if (v22 >= v43) {
              goto LABEL_34;
            }
            unint64_t v28 = v44[v22];
            ++v29;
            if (v28) {
              goto LABEL_21;
            }
          }
        }
        int64_t v22 = v29;
      }
    }
LABEL_21:
    unint64_t v18 = (v28 - 1) & v28;
    unint64_t v25 = __clz(__rbit64(v28)) + (v22 << 6);
LABEL_22:
    uint64_t v30 = *(void *)(v47 + 72);
    unint64_t v31 = *(void *)(v13 + 48) + v30 * v25;
    if (v48)
    {
      (*v19)(v10, v31, v7);
      id v32 = *(id *)(*(void *)(v13 + 56) + 8 * v25);
    }
    else
    {
      (*v45)(v10, v31, v7);
      id v32 = *(id *)(*(void *)(v13 + 56) + 8 * v25);
    }
    sub_24B65D13C(&qword_2697CC408, MEMORY[0x263F07508]);
    uint64_t result = sub_24B682750();
    uint64_t v33 = -1 << *(unsigned char *)(v14 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v20 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v34) & ~*(void *)(v20 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v20 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v23 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v20 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v19)(*(void *)(v14 + 48) + v30 * v23, v10, v7);
    *(void *)(*(void *)(v14 + 56) + 8 * v23) = v32;
    ++*(void *)(v14 + 16);
  }
  swift_release();
  uint64_t v5 = v42;
  unint64_t v27 = v44;
  if ((v48 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v13 + 32);
  if (v40 >= 64) {
    bzero(v27, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v27 = -1 << v40;
  }
  *(void *)(v13 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v5 = v14;
  return result;
}

unint64_t sub_24B655C8C(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24B682410();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a2 + 64;
  uint64_t v10 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(void *)(a2 + 64 + 8 * (v11 >> 6))) != 0)
  {
    uint64_t v12 = ~v10;
    unint64_t result = sub_24B682D90();
    if ((*(void *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      unint64_t v39 = (result + 1) & v12;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v40 = v13;
      unint64_t v37 = (uint64_t (**)(char *, uint64_t))(v13 - 8);
      BOOL v38 = v14;
      uint64_t v36 = v12;
      do
      {
        uint64_t v16 = v9;
        uint64_t v17 = v15;
        int64_t v18 = v15 * v11;
        v38(v8, *(void *)(a2 + 48) + v15 * v11, v4);
        sub_24B65D13C(&qword_2697CC408, MEMORY[0x263F07508]);
        uint64_t v19 = sub_24B682750();
        unint64_t result = (*v37)(v8, v4);
        unint64_t v20 = v19 & v12;
        if (a1 >= (uint64_t)v39)
        {
          if (v20 >= v39 && a1 >= (uint64_t)v20)
          {
LABEL_16:
            if (v17 * a1 < v18
              || *(void *)(a2 + 48) + v17 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v18 + v17))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v17 * a1 != v18)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v23 = *(void *)(a2 + 56);
            uint64_t v24 = *(void *)(*(void *)(type metadata accessor for ObjectCaptureSession.Metadata.Shot(0) - 8) + 72);
            int64_t v25 = v24 * a1;
            unint64_t result = v23 + v24 * a1;
            int64_t v26 = v24 * v11;
            unint64_t v27 = v23 + v24 * v11 + v24;
            BOOL v28 = v25 < v26 || result >= v27;
            uint64_t v9 = v16;
            if (v28)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
              a1 = v11;
              uint64_t v12 = v36;
            }
            else
            {
              a1 = v11;
              uint64_t v12 = v36;
              if (v25 != v26)
              {
                unint64_t result = swift_arrayInitWithTakeBackToFront();
                a1 = v11;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v20 >= v39 || a1 >= (uint64_t)v20)
        {
          goto LABEL_16;
        }
        uint64_t v9 = v16;
LABEL_5:
        unint64_t v11 = (v11 + 1) & v12;
        uint64_t v15 = v17;
      }
      while (((*(void *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    int64_t v29 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v30 = *v29;
    uint64_t v31 = (-1 << a1) - 1;
  }
  else
  {
    int64_t v29 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v29;
    uint64_t v30 = (-1 << a1) - 1;
  }
  *int64_t v29 = v31 & v30;
  uint64_t v32 = *(void *)(a2 + 16);
  BOOL v33 = __OFSUB__(v32, 1);
  uint64_t v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_24B655FD4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_24B682D90();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        uint64_t v10 = (void *)(v9 + 8 * v6);
        unint64_t result = sub_24B683080();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11) {
            goto LABEL_6;
          }
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        uint64_t v14 = (void *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1) {
          *uint64_t v14 = *v10;
        }
        uint64_t v15 = *(void *)(a2 + 56);
        uint64_t v16 = *(void *)(*(void *)(sub_24B682410() - 8) + 72);
        int64_t v17 = v16 * v3;
        unint64_t result = v15 + v16 * v3;
        int64_t v18 = v16 * v6;
        unint64_t v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v17 == v18) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << result) - 1;
  }
  *uint64_t v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_24B6561A4(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24B682410();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v34 = a2 + 64;
    unint64_t result = sub_24B682D90();
    uint64_t v12 = v34;
    if ((*(void *)(v34 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v31 = (result + 1) & v11;
      uint64_t v32 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v33 = v5 + 16;
      uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v10;
        v32(v8, *(void *)(a2 + 48) + v14 * v10, v4);
        sub_24B65D13C(&qword_2697CC408, MEMORY[0x263F07508]);
        uint64_t v17 = sub_24B682750();
        unint64_t result = (*v13)(v8, v4);
        unint64_t v18 = v17 & v11;
        if (a1 >= (uint64_t)v31)
        {
          if (v18 >= v31 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v21 = *(void *)(a2 + 48);
            uint64_t v14 = v15;
            unint64_t result = v21 + v15 * a1;
            if (v15 * a1 < v16 || result >= v21 + v16 + v15)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v22 = *(void *)(a2 + 56);
            uint64_t v23 = (void *)(v22 + 8 * a1);
            uint64_t v24 = (void *)(v22 + 8 * v10);
            uint64_t v12 = v34;
            if (a1 != v10 || (a1 = v10, v23 >= v24 + 1))
            {
              *uint64_t v23 = *v24;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v31 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v34;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    BOOL v25 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << a1) - 1;
  }
  else
  {
    BOOL v25 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  *BOOL v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_24B65649C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_24B682410();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_24B59F008(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    unint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t v22 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
      return sub_24B659A84(a1, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v14, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_24B656F58();
    goto LABEL_7;
  }
  sub_24B6548E0(v17, a3 & 1);
  unint64_t v24 = sub_24B59F008(a2);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_14:
    uint64_t result = sub_24B682FF0();
    __break(1u);
    return result;
  }
  unint64_t v14 = v24;
  unint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_24B656DBC(v14, (uint64_t)v11, a1, v20);
}

void sub_24B656670(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_24B682410();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_24B59F008(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    unint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];

      *(void *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_24B65794C(&qword_2697CCD18);
    goto LABEL_7;
  }
  sub_24B655864(v17, a3 & 1, &qword_2697CCD18);
  unint64_t v22 = sub_24B59F008(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    sub_24B682FF0();
    __break(1u);
    return;
  }
  unint64_t v14 = v22;
  unint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_24B5E5248(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_24B656828(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_24B5D43DC(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_24B657298();
      goto LABEL_7;
    }
    sub_24B654DF8(v13, a3 & 1);
    unint64_t v24 = sub_24B5D43DC(a2);
    if ((v14 & 1) == (v25 & 1))
    {
      unint64_t v10 = v24;
      BOOL v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_24B682FF0();
    __break(1u);
    return result;
  }
LABEL_7:
  BOOL v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7];
    uint64_t v18 = sub_24B682410();
    uint64_t v19 = *(void *)(v18 - 8);
    unint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 40);
    uint64_t v21 = v18;
    uint64_t v22 = v17 + *(void *)(v19 + 72) * v10;
    return v20(v22, a1, v21);
  }
LABEL_13:

  return sub_24B656EAC(v10, a2, a1, v16);
}

uint64_t sub_24B656990(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_24B682410();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v12 = (void *)*v3;
  unint64_t v14 = sub_24B59F008(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    unint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      *(void *)(v20[7] + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_24B657528();
    goto LABEL_7;
  }
  sub_24B6551A0(result, a3 & 1);
  uint64_t result = sub_24B59F008(a2);
  if ((v18 & 1) != (v21 & 1))
  {
LABEL_14:
    uint64_t result = sub_24B682FF0();
    __break(1u);
    return result;
  }
  unint64_t v14 = result;
  unint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_24B5E5248(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_24B656B2C(char a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_24B5D43DC(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_24B6577BC();
LABEL_7:
    BOOL v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      *(unsigned char *)(v16[7] + v10) = a1 & 1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(void *)(v16[6] + 8 * v10) = a2;
    *(unsigned char *)(v16[7] + v10) = a1 & 1;
    uint64_t v18 = v16[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (!v19)
    {
      v16[2] = v20;
      return result;
    }
    goto LABEL_14;
  }
  sub_24B6555C4(result, a3 & 1);
  uint64_t result = sub_24B5D43DC(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    unint64_t v10 = result;
    BOOL v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_24B682FF0();
  __break(1u);
  return result;
}

uint64_t sub_24B656C60(uint64_t a1, char a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6)
{
  uint64_t v7 = v6;
  uint64_t v10 = *v6;
  unint64_t v12 = sub_24B5D43DC(a1);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a2 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a2 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_24B5D5CDC();
LABEL_7:
    uint64_t v18 = (void *)*v7;
    if (v16)
    {
LABEL_8:
      BOOL v19 = (__n128 *)(v18[7] + (v12 << 6));
      *BOOL v19 = a3;
      v19[1] = a4;
      v19[2] = a5;
      v19[3] = a6;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(void *)(v18[6] + 8 * v12) = a1;
    char v21 = (__n128 *)(v18[7] + (v12 << 6));
    *char v21 = a3;
    v21[1] = a4;
    void v21[2] = a5;
    void v21[3] = a6;
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      void v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_24B5D4EC0(result, a2 & 1);
  uint64_t result = sub_24B5D43DC(a1);
  if ((v16 & 1) == (v20 & 1))
  {
    unint64_t v12 = result;
    uint64_t v18 = (void *)*v7;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_24B682FF0();
  __break(1u);
  return result;
}

uint64_t sub_24B656DBC(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_24B682410();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t v10 = a4[7];
  uint64_t v11 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  uint64_t result = sub_24B65A134(a3, v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

uint64_t sub_24B656EAC(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = sub_24B682410();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1, a3, v8);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

void *sub_24B656F58()
{
  uint64_t v1 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  uint64_t v29 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1 - 8);
  int64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24B682410();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B562F04(&qword_2697CCCB0);
  uint64_t v24 = v0;
  uint64_t v8 = *v0;
  uint64_t v9 = sub_24B682F10();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16))
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    *uint64_t v24 = v10;
    return result;
  }
  uint64_t result = (void *)(v9 + 64);
  unint64_t v12 = (unint64_t)((1 << *(unsigned char *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12) {
    uint64_t result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  }
  int64_t v13 = 0;
  *(void *)(v10 + 16) = *(void *)(v8 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v8 + 64);
  uint64_t v25 = v8 + 64;
  int64_t v26 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v27 = v5 + 32;
  uint64_t v28 = v5 + 16;
  while (1)
  {
    if (v16)
    {
      unint64_t v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v26) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v25 + 8 * v13);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v16 = (v22 - 1) & v22;
    unint64_t v18 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v5 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(void *)(v8 + 48) + v19, v4);
    unint64_t v20 = *(void *)(v29 + 72) * v18;
    sub_24B659A1C(*(void *)(v8 + 56) + v20, (uint64_t)v3, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(void *)(v10 + 48) + v19, v7, v4);
    uint64_t result = (void *)sub_24B65A134((uint64_t)v3, *(void *)(v10 + 56) + v20, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v26) {
    goto LABEL_23;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_24B657298()
{
  uint64_t v1 = sub_24B682410();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B562F04(&qword_2697CCD00);
  int64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_24B682F10();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    *int64_t v23 = v7;
    return result;
  }
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v5 + 48) + 8 * v15);
    unint64_t v18 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 56) + v18, v1);
    *(void *)(*(void *)(v7 + 48) + v16) = v17;
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 56) + v18, v4, v1);
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_24B657528()
{
  uint64_t v1 = sub_24B682410();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B562F04(&qword_2697CCD08);
  int64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_24B682F10();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    *int64_t v23 = v7;
    return result;
  }
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v5 + 56) + v17);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_24B6577BC()
{
  uint64_t v1 = v0;
  sub_24B562F04(&qword_2697CCE08);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24B682F10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    char v16 = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_24B65794C(uint64_t *a1)
{
  uint64_t v3 = sub_24B682410();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B562F04(a1);
  uint64_t v26 = v1;
  uint64_t v7 = *v1;
  uint64_t v8 = sub_24B682F10();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v26 = v9;
    return result;
  }
  id result = (id)(v8 + 64);
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 64 + 8 * v11) {
    id result = memmove(result, (const void *)(v7 + 64), 8 * v11);
  }
  uint64_t v27 = v7 + 64;
  int64_t v13 = 0;
  *(void *)(v9 + 16) = *(void *)(v7 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v7 + 64);
  uint64_t v30 = v4 + 16;
  int64_t v28 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v29 = v4 + 32;
  while (1)
  {
    if (v16)
    {
      unint64_t v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v28) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v27 + 8 * v22);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v28) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v27 + 8 * v13);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v16 = (v23 - 1) & v23;
    unint64_t v18 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_12:
    unint64_t v19 = *(void *)(v4 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, *(void *)(v7 + 48) + v19, v3);
    uint64_t v20 = 8 * v18;
    int64_t v21 = *(void **)(*(void *)(v7 + 56) + v20);
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(void *)(v9 + 48) + v19, v6, v3);
    *(void *)(*(void *)(v9 + 56) + v20) = v21;
    id result = v21;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v28) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v27 + 8 * v24);
  if (v23)
  {
    int64_t v13 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v13 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v13 >= v28) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v27 + 8 * v13);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_24B657BE0(double *a1, double a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_24B683080();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_8:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_24B657F88(v9, isUniquelyReferenced_nonNull_native, a2);
    *uint64_t v3 = v15;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_9;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  double v11 = *(double *)(v10 + 8 * v9);
  if (v11 != a2)
  {
    uint64_t v13 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v13;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_8;
      }
      double v11 = *(double *)(v10 + 8 * v9);
    }
    while (v11 != a2);
  }
  uint64_t result = 0;
  a2 = v11;
LABEL_9:
  *a1 = a2;
  return result;
}

uint64_t sub_24B657CF0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_24B562F04(&qword_2697CCCE8);
  uint64_t result = sub_24B682E10();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    uint64_t v27 = v1;
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *uint64_t v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = sub_24B683080();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_24B657F88(uint64_t result, char a2, double a3)
{
  unint64_t v4 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a2 & 1) != 0) {
    goto LABEL_14;
  }
  if (a2)
  {
    sub_24B657CF0();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_24B6580BC();
      goto LABEL_14;
    }
    sub_24B658254();
  }
  uint64_t v8 = *v3;
  uint64_t result = sub_24B683080();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  unint64_t v4 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(double *)(v10 + 8 * v4) == a3)
    {
LABEL_13:
      uint64_t result = sub_24B682FE0();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        unint64_t v4 = (v4 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
          break;
        }
        if (*(double *)(v10 + 8 * v4) == a3) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (v4 >> 6) + 56) |= 1 << v4;
  *(double *)(*(void *)(v12 + 48) + 8 * v4) = a3;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

void *sub_24B6580BC()
{
  uint64_t v1 = v0;
  sub_24B562F04(&qword_2697CCCE8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24B682E00();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_24B658254()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_24B562F04(&qword_2697CCCE8);
  uint64_t result = sub_24B682E10();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = sub_24B683080();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

void (*sub_24B6584C8(void *a1, uint64_t a2))(uint64_t a1)
{
  uint64_t v4 = malloc(0x68uLL);
  *a1 = v4;
  uint64_t v5 = sub_24B682410();
  v4[8] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = v6;
  v4[9] = v6;
  uint64_t v8 = malloc(*(void *)(v6 + 64));
  v4[10] = v8;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  (*(void (**)(void *, uint64_t, uint64_t))(v7 + 16))(v8, a2, v5);
  v4[11] = sub_24B5F2570(v4);
  v4[12] = sub_24B658680(v4 + 4, (uint64_t)v8, isUniquelyReferenced_nonNull_native);
  return sub_24B6585E8;
}

void sub_24B6585E8(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 88);
  uint64_t v4 = *(void *)(*(void *)a1 + 72);
  uint64_t v3 = *(void **)(*(void *)a1 + 80);
  uint64_t v5 = *(void *)(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 96))();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v5);
  v2(v1, 0);
  free(v3);

  free(v1);
}

void (*sub_24B658680(void *a1, uint64_t a2, char a3))(uint64_t **a1)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  *uint64_t v8 = a2;
  v8[1] = v3;
  uint64_t v9 = sub_24B562F04(&qword_2697CCC90);
  int64_t v10 = malloc(*(void *)(*(void *)(v9 - 8) + 64));
  v8[2] = v10;
  uint64_t v11 = *v3;
  unint64_t v13 = sub_24B59F008(a2);
  *((unsigned char *)v8 + 32) = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    char v17 = v12;
    uint64_t v18 = *(void *)(v11 + 24);
    if (v18 >= v16 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v13;
      if (v17)
      {
LABEL_8:
        uint64_t v19 = *(void *)(*v4 + 56);
        uint64_t v20 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
        uint64_t v21 = *(void *)(v20 - 8);
        sub_24B65A134(v19 + *(void *)(v21 + 72) * v13, (uint64_t)v10, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
        uint64_t v22 = 0;
LABEL_12:
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v10, v22, 1, v20);
        return sub_24B6588A4;
      }
LABEL_11:
      uint64_t v20 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
      uint64_t v21 = *(void *)(v20 - 8);
      uint64_t v22 = 1;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a3 & 1) == 0)
    {
      sub_24B656F58();
      goto LABEL_7;
    }
    sub_24B6548E0(v16, a3 & 1);
    unint64_t v23 = sub_24B59F008(a2);
    if ((v17 & 1) == (v24 & 1))
    {
      unint64_t v13 = v23;
      v8[3] = v23;
      if (v17) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  sub_24B682410();
  uint64_t result = (void (*)(uint64_t **))sub_24B682FF0();
  __break(1u);
  return result;
}

void sub_24B6588A4(uint64_t **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (void *)(*a1)[2];
  sub_24B658904((uint64_t)v2, *((unsigned __int8 *)*a1 + 32), (uint64_t *)(*a1)[1], (*a1)[3], **a1);
  sub_24B5632A8((uint64_t)v2, &qword_2697CCC90);
  free(v2);

  free(v1);
}

unint64_t sub_24B658904(uint64_t a1, int a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v23 = a5;
  unint64_t v25 = a4;
  int v26 = a2;
  uint64_t v7 = sub_24B682410();
  uint64_t v24 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24B562F04(&qword_2697CCC90);
  MEMORY[0x270FA5388](v10 - 8);
  char v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  char v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v23 - v18;
  sub_24B563A6C(a1, (uint64_t)v12, &qword_2697CCC90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    unint64_t result = sub_24B5632A8((uint64_t)v12, &qword_2697CCC90);
    if (v26)
    {
      int64_t v21 = v25;
      swift_arrayDestroy();
      return sub_24B655C8C(v21, *a3);
    }
  }
  else
  {
    sub_24B65A134((uint64_t)v12, (uint64_t)v19, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    uint64_t v22 = (void *)*a3;
    if (v26)
    {
      return sub_24B65A134((uint64_t)v19, v22[7] + *(void *)(v14 + 72) * v25, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v9, v23, v7);
      sub_24B65A134((uint64_t)v19, (uint64_t)v17, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      return sub_24B656DBC(v25, (uint64_t)v9, (uint64_t)v17, v22);
    }
  }
  return result;
}

uint64_t sub_24B658BE4(char *a1, uint64_t a2)
{
  if (!a2) {
    return MEMORY[0x263F8EE78];
  }
  if (a2 > 0)
  {
    sub_24B562F04(&qword_2697CCD30);
    uint64_t v4 = (char *)swift_allocObject();
    size_t v5 = j__malloc_size(v4);
    *((void *)v4 + 2) = a2;
    *((void *)v4 + 3) = 2 * ((uint64_t)(v5 - 32) / 48);
    uint64_t v6 = v4 + 32;
    if (&v4[48 * a2 + 32] <= a1 || v6 >= &a1[48 * a2])
    {
      memcpy(v6, a1, 48 * a2);
      return (uint64_t)v4;
    }
  }
  uint64_t result = sub_24B682F40();
  __break(1u);
  return result;
}

uint64_t _s6CoreOC20ObjectCaptureSessionC5ErrorO2eeoiySbAE_AEtFZ_0(id *a1, void **a2)
{
  id v2 = *a1;
  uint64_t v3 = *a2;
  switch((unint64_t)*a1)
  {
    case 0uLL:
      if (v3) {
        goto LABEL_17;
      }
      goto LABEL_7;
    case 1uLL:
      if (v3 == (void *)1) {
        goto LABEL_7;
      }
      goto LABEL_17;
    case 2uLL:
      if (v3 != (void *)2) {
        goto LABEL_17;
      }
      goto LABEL_7;
    case 3uLL:
      if (v3 != (void *)3) {
        goto LABEL_17;
      }
      goto LABEL_7;
    case 4uLL:
      if (v3 != (void *)4) {
        goto LABEL_17;
      }
      goto LABEL_7;
    case 5uLL:
      if (v3 != (void *)5) {
        goto LABEL_17;
      }
      goto LABEL_7;
    case 6uLL:
      if (v3 != (void *)6) {
        goto LABEL_17;
      }
LABEL_7:
      uint64_t v5 = 1;
      break;
    default:
      if ((unint64_t)v3 < 7)
      {
LABEL_17:
        sub_24B5E88F8(*a1);
        uint64_t v5 = 0;
      }
      else
      {
        id v4 = v2;
        uint64_t v5 = 1;
      }
      break;
  }
  sub_24B5E88F8(v3);
  sub_24B5E896C(v2);
  sub_24B5E896C(v3);
  return v5;
}

BOOL _s6CoreOC20ObjectCaptureSessionC5StateO2eeoiySbAE_AEtFZ_0(id *a1, id *a2)
{
  id v2 = (char *)*a1;
  uint64_t v3 = (char *)*a2;
  switch((unint64_t)*a1)
  {
    case 7uLL:
      if (v3 != (char *)7) {
        goto LABEL_28;
      }
      BOOL v4 = 1;
      uint64_t v5 = 7;
      break;
    case 8uLL:
      if (v3 != (char *)8) {
        goto LABEL_28;
      }
      BOOL v4 = 1;
      uint64_t v5 = 8;
      break;
    case 9uLL:
      if (v3 != (char *)9) {
        goto LABEL_28;
      }
      BOOL v4 = 1;
      uint64_t v5 = 9;
      break;
    case 0xAuLL:
      if (v3 != (char *)10) {
        goto LABEL_28;
      }
      BOOL v4 = 1;
      uint64_t v5 = 10;
      break;
    case 0xBuLL:
      if (v3 != (char *)11) {
        goto LABEL_28;
      }
      BOOL v4 = 1;
      uint64_t v5 = 11;
      break;
    case 0xCuLL:
      if (v3 != (char *)12) {
        goto LABEL_28;
      }
      BOOL v4 = 1;
      uint64_t v5 = 12;
      break;
    case 0xDuLL:
      if (v3 != (char *)13) {
        goto LABEL_28;
      }
      BOOL v4 = 1;
      uint64_t v5 = 13;
      break;
    case 0xEuLL:
      if (v3 != (char *)14) {
        goto LABEL_28;
      }
      BOOL v4 = 1;
      uint64_t v5 = 14;
      break;
    case 0xFuLL:
      if (v3 != (char *)15) {
        goto LABEL_28;
      }
      BOOL v4 = 1;
      uint64_t v5 = 15;
      break;
    case 0x10uLL:
      if (v3 != (char *)16) {
        goto LABEL_28;
      }
      BOOL v4 = 1;
      uint64_t v5 = 16;
      break;
    case 0x11uLL:
      if (v3 != (char *)17) {
        goto LABEL_28;
      }
      BOOL v4 = 1;
      uint64_t v5 = 17;
      break;
    default:
      if ((unint64_t)(v3 - 7) < 0xB)
      {
LABEL_28:
        sub_24B66DD1C(*a2);
        sub_24B66DD1C(v2);
        BOOL v4 = 0;
        uint64_t v5 = (uint64_t)v2;
      }
      else
      {
        switch((unint64_t)v2)
        {
          case 0uLL:
            if (!v3) {
              goto LABEL_33;
            }
            goto LABEL_7;
          case 1uLL:
            if (v3 == (char *)1) {
              goto LABEL_33;
            }
            goto LABEL_7;
          case 2uLL:
            if (v3 != (char *)2) {
              goto LABEL_7;
            }
            goto LABEL_33;
          case 3uLL:
            if (v3 != (char *)3) {
              goto LABEL_7;
            }
            goto LABEL_33;
          case 4uLL:
            if (v3 != (char *)4) {
              goto LABEL_7;
            }
            goto LABEL_33;
          case 5uLL:
            if (v3 != (char *)5) {
              goto LABEL_7;
            }
            goto LABEL_33;
          case 6uLL:
            if (v3 == (char *)6)
            {
LABEL_33:
              BOOL v4 = 1;
            }
            else
            {
LABEL_7:
              BOOL v4 = 0;
LABEL_31:
              sub_24B5E88F8(*a1);
              sub_24B5E88F8(v2);
            }
            sub_24B66DD1C(v3);
            sub_24B66DD1C(v3);
            sub_24B66DD1C(v3);
            sub_24B66DD1C(v2);
            sub_24B5E896C(v2);
            sub_24B5E896C(v3);
            sub_24B65A19C(v2);
            sub_24B65A19C(v3);
            uint64_t v5 = (uint64_t)v3;
            uint64_t v3 = v2;
            break;
          default:
            BOOL v4 = (unint64_t)v3 > 6;
            goto LABEL_31;
        }
      }
      break;
  }
  sub_24B65A19C((id)v5);
  sub_24B65A19C(v3);
  return v4;
}

__int32 *sub_24B6590C4@<X0>(int a1@<W0>, float32x4_t *a2@<X8>, float32x4_t a3@<Q0>, float32_t a4@<S1>)
{
  float32x4_t v35 = a3;
  uint64_t v7 = sub_24B6824D0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  float v11 = fmaxf(powf((float)(vmuls_lane_f32(vmulq_lane_f32(v35, *(float32x2_t *)v35.f32, 1).f32[0], v35, 2) * 0.000000064)/ 0.0083902, 0.33333), 0.004);
  uint64_t result = (__int32 *)OCProxySurfaceNumVoxelsAlongAxisInVoxelBlock();
  *(float *)v13.i32 = v11 * (float)result;
  *(float32x2_t *)v14.f32 = vdiv_f32(vmul_f32(*(float32x2_t *)v35.f32, (float32x2_t)0x3F0000003F000000), (float32x2_t)vdup_lane_s32(v13, 0));
  v14.f32[2] = vmuls_lane_f32(0.5, v35, 2) / *(float *)v13.i32;
  v14.i32[3] = 0;
  int8x16_t v15 = (int8x16_t)vrndpq_f32(v14);
  float v16 = *(float *)v15.i32 + *(float *)v15.i32;
  v15.i32[0] = vextq_s8(v15, v15, 8uLL).u32[0];
  *(float32x2_t *)v15.i8 = vadd_f32(*(float32x2_t *)v15.i8, *(float32x2_t *)v15.i8);
  float v17 = vmuls_lane_f32(v16, *(float32x2_t *)v15.i8, 1) * *(float *)v15.i32;
  if ((~LODWORD(v17) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v17 <= -1.0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v17 >= 4295000000.0)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  unsigned int v18 = v17;
  if (v17 >= 0x2710) {
    unsigned int v18 = 10000;
  }
  if (v18 <= 1) {
    int v19 = 1;
  }
  else {
    int v19 = v18;
  }
  uint64_t v20 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v20, v7);
  int64_t v21 = sub_24B6824B0();
  os_log_type_t v22 = sub_24B682B30();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v33 = v7;
    uint64_t v24 = v23;
    uint64_t v32 = swift_slowAlloc();
    uint64_t v37 = v32;
    *(_DWORD *)uint64_t v24 = 136381187;
    v36.i64[0] = sub_24B5627B8(0xD00000000000006ELL, 0x800000024B6916B0, &v37);
    int v34 = a1;
    sub_24B682CD0();
    *(_WORD *)(v24 + 12) = 1026;
    v36.i32[0] = v19;
    sub_24B682CD0();
    *(_WORD *)(v24 + 18) = 2082;
    float32x4_t v36 = v35;
    sub_24B562F04((uint64_t *)&unk_2697CC440);
    sub_24B5678F4((unint64_t *)&qword_2697CC0F0, (uint64_t *)&unk_2697CC440);
    LOBYTE(a1) = v34;
    uint64_t v25 = sub_24B682FD0();
    v36.i64[0] = sub_24B5627B8(v25, v26, &v37);
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24B55E000, v21, v22, "ObjectCaptureSession.%{private}s: Computed voxel integration capacity = %{public}u for the bounding box of size %{public}s", (uint8_t *)v24, 0x1Cu);
    uint64_t v27 = v32;
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v27, -1, -1);
    MEMORY[0x24C5D6C00](v24, -1, -1);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v33);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  int v28 = *sub_24B567EB4();
  __int32 v29 = *(_DWORD *)sub_24B5F6688();
  uint64_t result = (__int32 *)sub_24B5F6694();
  __int32 v30 = *result;
  a2->i32[0] = 1;
  a2->i8[4] = 1;
  a2[1].i64[0] = 0x100000004;
  a2[1].f32[2] = a4;
  a2[1].i32[3] = v19;
  a2[2].f32[0] = v11;
  a2[2].i8[4] = 33;
  a2[2].i64[1] = 0x3D4CCCCD3F83D70ALL;
  a2[3].i32[0] = 1084227584;
  a2[4] = v35;
  a2[5].i64[0] = 0;
  a2[5].i64[1] = 0;
  a2[6].i64[0] = 644245094500000;
  a2[6].i32[2] = v28;
  a2[6].i8[12] = 0;
  a2[7].i32[0] = 1;
  a2[7].i32[1] = v29;
  a2[7].i32[2] = v30;
  a2[7].i8[12] = a1 & 1;
  a2[8].i32[0] = 1048576000;
  return result;
}

unint64_t sub_24B65951C(uint64_t a1)
{
  uint64_t v2 = sub_24B562F04(&qword_2697CCE48);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    sub_24B562F04(&qword_2697CCD00);
    uint64_t v7 = (void *)sub_24B682F30();
    uint64_t v8 = (char *)v5 + *(int *)(v2 + 48);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v10 = *(void *)(v3 + 72);
    while (1)
    {
      sub_24B563A6C(v9, (uint64_t)v5, &qword_2697CCE48);
      uint64_t v11 = *v5;
      unint64_t result = sub_24B5D43DC(*v5);
      if (v13) {
        break;
      }
      unint64_t v14 = result;
      *(void *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v7[6] + 8 * result) = v11;
      uint64_t v15 = v7[7];
      uint64_t v16 = sub_24B682410();
      unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v15 + *(void *)(*(void *)(v16 - 8) + 72) * v14, v8, v16);
      uint64_t v17 = v7[2];
      BOOL v18 = __OFADD__(v17, 1);
      uint64_t v19 = v17 + 1;
      if (v18) {
        goto LABEL_10;
      }
      v7[2] = v19;
      v9 += v10;
      if (!--v6) {
        return (unint64_t)v7;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

unint64_t sub_24B6596E4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_24B562F04(&qword_2697CCE08);
    uint64_t v3 = (void *)sub_24B682F30();
    for (uint64_t i = (unsigned char *)(a1 + 40); ; i += 16)
    {
      uint64_t v5 = *((void *)i - 1);
      char v6 = *i;
      unint64_t result = sub_24B5D43DC(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v3[6] + 8 * result) = v5;
      *(unsigned char *)(v3[7] + result) = v6;
      uint64_t v9 = v3[2];
      BOOL v10 = __OFADD__(v9, 1);
      uint64_t v11 = v9 + 1;
      if (v10) {
        goto LABEL_10;
      }
      v3[2] = v11;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

uint64_t _s6CoreOC20ObjectCaptureSessionC24isCurrentDeviceSupportedSbvgZ_0()
{
  uint64_t v0 = sub_24B6824D0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v4 = sub_24B5F699C();
  if ((v4 & 1) == 0)
  {
    uint64_t v5 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
    char v6 = sub_24B6824B0();
    os_log_type_t v7 = sub_24B682B20();
    if (os_log_type_enabled(v6, v7))
    {
      char v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v12 = v9;
      *(_DWORD *)char v8 = 136380675;
      uint64_t v11 = sub_24B5627B8(0xD000000000000018, 0x800000024B691930, &v12);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v6, v7, "ObjectCaptureSession.%{private}s: The device is not supported on this device", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v9, -1, -1);
      MEMORY[0x24C5D6C00](v8, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return v4 & 1;
}

uint64_t type metadata accessor for ObjectCaptureSession.Frame.Camera(uint64_t a1)
{
  return sub_24B56BBFC(a1, (uint64_t *)&unk_2697D00F8);
}

uint64_t type metadata accessor for ObjectCaptureSession.Frame.Object(uint64_t a1)
{
  return sub_24B56BBFC(a1, (uint64_t *)&unk_2697D0108);
}

uint64_t type metadata accessor for ObjectCaptureSession.Frame(uint64_t a1)
{
  return sub_24B56BBFC(a1, (uint64_t *)&unk_2697D00E8);
}

uint64_t sub_24B659A1C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24B659A84(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_24B659AEC(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_24B659B3C(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_24B659B88(void *a1)
{
}

id sub_24B659B90(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,void *a53)
{
  if (STACK[0x338])
  {
    id v55 = (id)STACK[0x2E8];
    sub_24B659CF4((uint64_t)result);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v53 = a31;
    sub_24B659DA0(a43);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v54 = a53;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return v55;
  }
  return result;
}

uint64_t sub_24B659CF4(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24B659DA0(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

#error "24B659F08: call analysis failed (funcsize=84)"

uint64_t sub_24B659F30(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,void *a53)
{
  if (STACK[0x338])
  {
    id v53 = (void *)STACK[0x2E8];
    sub_24B5AE238(result);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    sub_24B65A094(a43);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24B65A094(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for ObjectCaptureSession.Mesh.Anchor(uint64_t a1)
{
  return sub_24B56BBFC(a1, (uint64_t *)&unk_2697D0118);
}

uint64_t type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(uint64_t a1)
{
  return sub_24B56BBFC(a1, qword_2697D0138);
}

uint64_t type metadata accessor for ObjectCaptureSession.Metadata.Shot(uint64_t a1)
{
  return sub_24B56BBFC(a1, (uint64_t *)&unk_2697D0128);
}

uint64_t sub_24B65A134(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_24B65A19C(id a1)
{
  if ((char *)a1 - 7 >= (char *)0xB) {
    sub_24B5E896C(a1);
  }
}

uint64_t type metadata accessor for ObjectCaptureSessionObservingPublishers()
{
  return self;
}

uint64_t type metadata accessor for ObjectCaptureSessionWritingPublishers()
{
  return self;
}

uint64_t sub_24B65A1F8()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24B65A230()
{
  uint64_t v1 = (unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isOverCaptureEnabled);
  uint64_t result = swift_beginAccess();
  *uint64_t v1 = 1;
  return result;
}

uint64_t sub_24B65A280(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24B65A290()
{
  return swift_release();
}

uint64_t sub_24B65A298(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v203 = a1;
  __n128 v204 = a2;
  uint64_t v211 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v211 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v211);
  char v8 = (char *)&v185 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v200 = (char *)&v185 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  float32x4_t v198 = (char *)&v185 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v195 = (char *)&v185 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  id v193 = (char *)&v185 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v196 = (char *)&v185 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  unint64_t v188 = (char *)&v185 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  char v187 = (char *)&v185 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v189 = (char *)&v185 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v197 = (char *)&v185 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  int v199 = (char *)&v185 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v210 = (char *)&v185 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  id v201 = (char *)&v185 - v32;
  MEMORY[0x270FA5388](v31);
  int v34 = (char *)&v185 - v33;
  uint64_t v35 = sub_24B562F04(&qword_2697CC1F0);
  uint64_t v36 = MEMORY[0x270FA5388](v35 - 8);
  uint64_t v208 = (uint64_t)&v185 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v36);
  unint64_t v39 = (char *)&v185 - v38;
  uint64_t v205 = sub_24B6823B0();
  uint64_t v40 = *(void *)(v205 - 8);
  MEMORY[0x270FA5388](v205);
  __n128 v206 = (char *)&v185 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B682380();
  uint64_t v209 = a3;
  sub_24B563A6C(a3, (uint64_t)v39, &qword_2697CC1F0);
  uint64_t v42 = sub_24B6822E0();
  uint64_t v43 = *(void *)(v42 - 8);
  int v44 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 48))(v39, 1, v42);
  uint64_t v207 = v40;
  uint64_t v194 = v3;
  if (v44 == 1)
  {
    sub_24B5632A8((uint64_t)v39, &qword_2697CC1F0);
    uint64_t v202 = 0;
    unint64_t v45 = 0xE000000000000000;
  }
  else
  {
    uint64_t v202 = sub_24B6821E0();
    unint64_t v45 = v46;
    (*(void (**)(char *, uint64_t))(v43 + 8))(v39, v42);
  }
  uint64_t v47 = type metadata accessor for MemoryLogger();
  uint64_t v49 = v47 + 88;
  int v48 = *(void (**)(unint64_t, unint64_t))(v47 + 88);
  uint64_t v192 = v47;
  uint64_t v190 = v48;
  v48(0xD00000000000002DLL, 0x800000024B6917F0);
  uint64_t v50 = sub_24B57CB70();
  uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v213 = v50;
  uint64_t v214 = v51;
  uint64_t v52 = v211;
  uint64_t v215 = v5 + 16;
  ((void (*)(char *))v51)(v34);
  swift_bridgeObjectRetain();
  id v53 = sub_24B6824B0();
  os_log_type_t v54 = sub_24B682B30();
  BOOL v55 = os_log_type_enabled(v53, v54);
  uint64_t v216 = v5;
  uint64_t v191 = v49;
  if (v55)
  {
    uint64_t v56 = swift_slowAlloc();
    unint64_t v186 = v8;
    uint64_t v57 = v56;
    uint64_t v58 = swift_slowAlloc();
    uint64_t v218 = v58;
    *(_DWORD *)uint64_t v57 = 136381187;
    uint64_t v220 = sub_24B5627B8(0xD00000000000003ALL, 0x800000024B691820, &v218);
    sub_24B682CD0();
    *(_WORD *)(v57 + 12) = 2160;
    uint64_t v220 = 1752392040;
    sub_24B682CD0();
    *(_WORD *)(v57 + 22) = 2081;
    swift_bridgeObjectRetain();
    uint64_t v220 = sub_24B5627B8(v202, v45, &v218);
    sub_24B682CD0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24B55E000, v53, v54, "ObjectCaptureSession.%{private}s: Snapshot URL: %{private,mask.hash}s", (uint8_t *)v57, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v58, -1, -1);
    uint64_t v59 = v57;
    char v8 = v186;
    MEMORY[0x24C5D6C00](v59, -1, -1);

    uint64_t v60 = v216;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v60 = v5;
  }
  char v61 = *(void (**)(char *, uint64_t))(v60 + 8);
  v61(v34, v52);
  uint64_t v62 = v52;
  uint64_t v63 = v210;
  uint64_t v64 = v208;
  sub_24B563A6C(v209, v208, &qword_2697CC1F0);
  uint64_t v65 = v212;
  uint64_t v66 = (uint64_t)&v212[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_snapshotURL];
  swift_beginAccess();
  sub_24B56C254(v64, v66, &qword_2697CC1F0);
  swift_endAccess();
  if ((_s6CoreOC20ObjectCaptureSessionC24isCurrentDeviceSupportedSbvgZ_0() & 1) == 0)
  {
    v214(v8, v213, v62);
    char v69 = sub_24B6824B0();
    os_log_type_t v70 = sub_24B682B20();
    if (os_log_type_enabled(v69, v70))
    {
      uint64_t v71 = (uint8_t *)swift_slowAlloc();
      uint64_t v72 = swift_slowAlloc();
      uint64_t v218 = v72;
      *(_DWORD *)uint64_t v71 = 136380675;
      uint64_t v220 = sub_24B5627B8(0xD00000000000003ALL, 0x800000024B691820, &v218);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v69, v70, "ObjectCaptureSession.%{private}s: Unsupported device. Failed to initiate an ObjectCaptureSession!", v71, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v72, -1, -1);
      MEMORY[0x24C5D6C00](v71, -1, -1);
    }

    goto LABEL_40;
  }
  if (v203) {
    OCMetalInitWithDevice();
  }
  uint64_t v67 = v204;
  if (v204) {
    id v68 = v204;
  }
  else {
    id v68 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F01788]), sel_init);
  }
  uint64_t v73 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_motionManager;
  int v74 = *(void **)&v65[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_motionManager];
  *(void *)&v65[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_motionManager] = v68;
  id v75 = v67;

  uint64_t result = *(void *)&v65[v73];
  if (!result)
  {
    __break(1u);
    goto LABEL_73;
  }
  uint64_t result = (uint64_t)objc_msgSend((id)result, sel_isDeviceMotionAvailable);
  if ((result & 1) == 0)
  {
    char v8 = v201;
    v214(v201, v213, v62);
    simd_float4 v85 = sub_24B6824B0();
    os_log_type_t v86 = sub_24B682B20();
    if (os_log_type_enabled(v85, v86))
    {
      simd_float4 v87 = (uint8_t *)swift_slowAlloc();
      uint64_t v88 = swift_slowAlloc();
      uint64_t v218 = v88;
      *(_DWORD *)simd_float4 v87 = 136380675;
      uint64_t v220 = sub_24B5627B8(0xD00000000000003ALL, 0x800000024B691820, &v218);
      sub_24B682CD0();
      uint64_t v89 = "ObjectCaptureSession.%{private}s: The device-motion service is not available on this device!";
LABEL_38:
      _os_log_impl(&dword_24B55E000, v85, v86, v89, v87, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v88, -1, -1);
      MEMORY[0x24C5D6C00](v87, -1, -1);
    }
LABEL_39:

LABEL_40:
    v61(v8, v62);
    unint64_t v124 = v206;
    uint64_t v123 = v207;
    sub_24B5E8908();
    swift_allocError();
    *uint64_t v125 = 0;
    swift_willThrow();
LABEL_41:
    sub_24B61CAA8();
    return (*(uint64_t (**)(char *, uint64_t))(v123 + 8))(v124, v205);
  }
  uint64_t v77 = *(void **)&v65[v73];
  if (!v77)
  {
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  type metadata accessor for MotionManager();
  *(void *)&v65[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_internalMotionManager] = sub_24B563E2C(v77);
  swift_release();
  v214(v63, v213, v62);
  uint64_t v78 = sub_24B6824B0();
  os_log_type_t v79 = sub_24B682B30();
  if (os_log_type_enabled(v78, v79))
  {
    uint64_t v80 = v61;
    unint64_t v81 = v63;
    uint64_t v82 = (uint8_t *)swift_slowAlloc();
    uint64_t v83 = swift_slowAlloc();
    uint64_t v218 = v83;
    *(_DWORD *)uint64_t v82 = 136380675;
    uint64_t v220 = sub_24B5627B8(0xD00000000000003ALL, 0x800000024B691820, &v218);
    uint64_t v65 = v212;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v78, v79, "ObjectCaptureSession.%{private}s: Initialize object-centric capture mode properties.", v82, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v83, -1, -1);
    MEMORY[0x24C5D6C00](v82, -1, -1);

    id v84 = v81;
    char v61 = v80;
    v80(v84, v62);
  }
  else
  {

    v61(v63, v62);
  }
  type metadata accessor for VoxelIntegrationManager();
  sub_24B681A34();
  *(void *)&v65[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_voxelIntegrationManager] = v90;
  swift_release();
  type metadata accessor for MaskingManager();
  uint64_t v91 = sub_24B5653B8(256, 192);
  if (!v91)
  {
    char v8 = v200;
    v214(v200, v213, v62);
    simd_float4 v85 = sub_24B6824B0();
    os_log_type_t v86 = sub_24B682B20();
    if (os_log_type_enabled(v85, v86))
    {
      simd_float4 v87 = (uint8_t *)swift_slowAlloc();
      uint64_t v88 = swift_slowAlloc();
      uint64_t v218 = v88;
      *(_DWORD *)simd_float4 v87 = 136380675;
      uint64_t v220 = sub_24B5627B8(0xD00000000000003ALL, 0x800000024B691820, &v218);
      sub_24B682CD0();
      uint64_t v89 = "ObjectCaptureSession.%{private}s: Failed to create masking manager!";
      goto LABEL_38;
    }
    goto LABEL_39;
  }
  uint64_t v92 = (char *)v91;
  uint64_t v93 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maskingManager;
  *(void *)&v65[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maskingManager] = v91;
  swift_retain();
  uint64_t result = swift_release();
  uint64_t v94 = *(void *)&v65[v93];
  if (!v94)
  {
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  uint64_t v95 = *(uint64_t (**)(uint64_t))(*(void *)v94 + 272);
  uint64_t v96 = swift_retain();
  char v97 = v95(v96);
  swift_release();
  if ((v97 & 1) == 0)
  {
    unint64_t v126 = v199;
    v214(v199, v213, v62);
    os_log_type_t v127 = sub_24B6824B0();
    os_log_type_t v128 = sub_24B682B20();
    if (!os_log_type_enabled(v127, v128))
    {

      __n128 v134 = v126;
LABEL_49:
      v61(v134, v62);
      unint64_t v124 = v206;
      uint64_t v123 = v207;
      sub_24B5E8908();
      swift_allocError();
      *__n128 v136 = 0;
      swift_willThrow();
      swift_release();
      goto LABEL_41;
    }
    uint64_t v129 = v126;
    simd_float4 v130 = (uint8_t *)swift_slowAlloc();
    uint64_t v131 = swift_slowAlloc();
    uint64_t v210 = v92;
    uint64_t v132 = v131;
    uint64_t v218 = v131;
    *(_DWORD *)simd_float4 v130 = 136380675;
    uint64_t v220 = sub_24B5627B8(0xD00000000000003ALL, 0x800000024B691820, &v218);
    sub_24B682CD0();
    uint64_t v133 = "ObjectCaptureSession.%{private}s: Failed to start masking manager!";
    goto LABEL_47;
  }
  type metadata accessor for ExplicitFeedbackManager();
  sub_24B5A305C((uint64_t)&v219);
  uint64_t v98 = sub_24B5A3074(&v219);
  if (!v98)
  {
    uint64_t v129 = v198;
    v214(v198, v213, v62);
    os_log_type_t v127 = sub_24B6824B0();
    os_log_type_t v128 = sub_24B682B20();
    if (!os_log_type_enabled(v127, v128))
    {
LABEL_48:

      __n128 v134 = v129;
      goto LABEL_49;
    }
    simd_float4 v130 = (uint8_t *)swift_slowAlloc();
    uint64_t v135 = swift_slowAlloc();
    uint64_t v210 = v92;
    uint64_t v132 = v135;
    uint64_t v218 = v135;
    *(_DWORD *)simd_float4 v130 = 136380675;
    uint64_t v220 = sub_24B5627B8(0xD00000000000003ALL, 0x800000024B691820, &v218);
    sub_24B682CD0();
    uint64_t v133 = "ObjectCaptureSession.%{private}s: Failed to create explicit feedback manager!";
LABEL_47:
    _os_log_impl(&dword_24B55E000, v127, v128, v133, v130, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v132, -1, -1);
    MEMORY[0x24C5D6C00](v130, -1, -1);
    goto LABEL_48;
  }
  uint64_t v99 = v98;
  uint64_t v100 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_explicitFeedbackManager;
  id v101 = v212;
  *(void *)&v212[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_explicitFeedbackManager] = v98;
  swift_retain();
  uint64_t result = swift_release();
  uint64_t v102 = *(void *)&v101[v100];
  if (!v102)
  {
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  unint64_t v103 = *(uint64_t (**)(uint64_t))(*(void *)v102 + 112);
  uint64_t v104 = swift_retain();
  char v105 = v103(v104);
  swift_release();
  if ((v105 & 1) == 0)
  {
    __n128 v137 = v197;
    v214(v197, v213, v62);
    __n128 v138 = sub_24B6824B0();
    os_log_type_t v139 = sub_24B682B20();
    if (os_log_type_enabled(v138, v139))
    {
      uint64_t v140 = v137;
      uint64_t v141 = (uint8_t *)swift_slowAlloc();
      uint64_t v142 = swift_slowAlloc();
      uint64_t v210 = v92;
      uint64_t v143 = v142;
      uint64_t v218 = v142;
      uint64_t v209 = v99;
      *(_DWORD *)uint64_t v141 = 136380675;
      uint64_t v220 = sub_24B5627B8(0xD00000000000003ALL, 0x800000024B691820, &v218);
      sub_24B682CD0();
      uint64_t v144 = "ObjectCaptureSession.%{private}s: Failed to start explicit feedback manager!";
LABEL_54:
      _os_log_impl(&dword_24B55E000, v138, v139, v144, v141, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v143, -1, -1);
      MEMORY[0x24C5D6C00](v141, -1, -1);

      uint64_t v146 = v140;
LABEL_56:
      v61(v146, v62);
      unint64_t v124 = v206;
      uint64_t v123 = v207;
      sub_24B5E8908();
      swift_allocError();
      void *v147 = 0;
      swift_willThrow();
      swift_release();
      swift_release();
      goto LABEL_41;
    }
LABEL_55:

    uint64_t v146 = v137;
    goto LABEL_56;
  }
  type metadata accessor for ImageScaler();
  uint64_t v106 = sub_24B66F410();
  if (!v106)
  {
    __n128 v137 = v195;
    v214(v195, v213, v62);
    __n128 v138 = sub_24B6824B0();
    os_log_type_t v139 = sub_24B682B20();
    if (os_log_type_enabled(v138, v139))
    {
      uint64_t v140 = v137;
      uint64_t v141 = (uint8_t *)swift_slowAlloc();
      uint64_t v145 = swift_slowAlloc();
      uint64_t v210 = v92;
      uint64_t v143 = v145;
      uint64_t v218 = v145;
      uint64_t v209 = v99;
      *(_DWORD *)uint64_t v141 = 136380675;
      uint64_t v220 = sub_24B5627B8(0xD00000000000003ALL, 0x800000024B691820, &v218);
      sub_24B682CD0();
      uint64_t v144 = "ObjectCaptureSession.%{private}s: Failed to create image scaler!";
      goto LABEL_54;
    }
    goto LABEL_55;
  }
  uint64_t v107 = v106;
  uint64_t v108 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_imageScaler;
  BOOL v109 = v212;
  *(void *)&v212[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_imageScaler] = v106;
  swift_retain();
  uint64_t result = swift_release();
  uint64_t v110 = *(void *)&v109[v108];
  if (!v110)
  {
LABEL_76:
    __break(1u);
    return result;
  }
  uint64_t v111 = *(uint64_t (**)(uint64_t))(*(void *)v110 + 160);
  uint64_t v112 = swift_retain();
  char v113 = v111(v112);
  swift_release();
  uint64_t v208 = v107;
  if ((v113 & 1) == 0)
  {
    unint64_t v148 = v189;
    v214(v189, v213, v62);
    char v149 = sub_24B6824B0();
    os_log_type_t v150 = sub_24B682B20();
    if (os_log_type_enabled(v149, v150))
    {
      uint64_t v151 = v148;
      uint64_t v152 = (uint8_t *)swift_slowAlloc();
      uint64_t v153 = swift_slowAlloc();
      uint64_t v210 = v92;
      uint64_t v154 = v153;
      uint64_t v218 = v153;
      uint64_t v209 = v99;
      *(_DWORD *)uint64_t v152 = 136380675;
      uint64_t v220 = sub_24B5627B8(0xD00000000000003ALL, 0x800000024B691820, &v218);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v149, v150, "ObjectCaptureSession.%{private}s: Failed to start image scaler!", v152, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v154, -1, -1);
      MEMORY[0x24C5D6C00](v152, -1, -1);

      uint64_t v155 = v151;
    }
    else
    {

      uint64_t v155 = v148;
    }
    v61(v155, v62);
    unint64_t v124 = v206;
    uint64_t v123 = v207;
    sub_24B5E8908();
    swift_allocError();
    *int64_t v170 = 0;
    swift_willThrow();
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_41;
  }
  char IsTimeOfFlightOCMacroModeSupported = OCNonModularSPI_AVCaptureDevice_IsTimeOfFlightOCMacroModeSupported();
  BOOL v115 = v212;
  v212[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isHighQualityMacroModeSupported] = IsTimeOfFlightOCMacroModeSupported;
  int IsTimeOfFlightSensorType80 = OCNonModularSPI_AVCaptureDevice_IsTimeOfFlightSensorType80();
  v115[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isToFSensorTypePeridot] = IsTimeOfFlightSensorType80;
  uint64_t v209 = v99;
  uint64_t v210 = v92;
  if (IsTimeOfFlightSensorType80)
  {
    int8x16_t v117 = v187;
    v214(v187, v213, v62);
    int8x16_t v118 = sub_24B6824B0();
    os_log_type_t v119 = sub_24B682B30();
    if (os_log_type_enabled(v118, v119))
    {
      int8x16_t v120 = (uint8_t *)swift_slowAlloc();
      uint64_t v121 = swift_slowAlloc();
      uint64_t v218 = v121;
      *(_DWORD *)int8x16_t v120 = 136380675;
      uint64_t v220 = sub_24B5627B8(0xD00000000000003ALL, 0x800000024B691820, &v218);
      uint64_t v62 = v211;
      sub_24B682CD0();
      uint64_t v122 = "ObjectCaptureSession.%{private}s: ToF sensor type 80";
LABEL_61:
      _os_log_impl(&dword_24B55E000, v118, v119, v122, v120, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v121, -1, -1);
      MEMORY[0x24C5D6C00](v120, -1, -1);
    }
  }
  else
  {
    int8x16_t v117 = v188;
    v214(v188, v213, v62);
    int8x16_t v118 = sub_24B6824B0();
    os_log_type_t v119 = sub_24B682B30();
    if (os_log_type_enabled(v118, v119))
    {
      int8x16_t v120 = (uint8_t *)swift_slowAlloc();
      uint64_t v121 = swift_slowAlloc();
      uint64_t v218 = v121;
      *(_DWORD *)int8x16_t v120 = 136380675;
      uint64_t v220 = sub_24B5627B8(0xD00000000000003ALL, 0x800000024B691820, &v218);
      uint64_t v62 = v211;
      sub_24B682CD0();
      uint64_t v122 = "ObjectCaptureSession.%{private}s: ToF sensor type 74";
      goto LABEL_61;
    }
  }

  v61(v117, v62);
  swift_getKeyPath();
  swift_getKeyPath();
  long long v156 = v212;
  sub_24B682560();
  swift_release();
  swift_release();
  long long v157 = (void *)v218;
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v218 = 10;
  id v158 = v156;
  sub_24B682570();
  uint64_t v218 = (uint64_t)v157;
  sub_24B612878((void **)&v218);
  sub_24B65A19C(v157);
  uint64_t v159 = v196;
  v214(v196, v213, v62);
  __n128 v160 = (char *)v158;
  __n128 v161 = sub_24B6824B0();
  os_log_type_t v162 = sub_24B682B30();
  int v163 = v162;
  if (os_log_type_enabled(v161, v162))
  {
    uint64_t v164 = swift_slowAlloc();
    LODWORD(v204) = v163;
    uint64_t v165 = v164;
    uint64_t v166 = swift_slowAlloc();
    uint64_t v218 = v166;
    *(_DWORD *)uint64_t v165 = 136380931;
    uint64_t v220 = sub_24B5627B8(0xD00000000000003ALL, 0x800000024B691820, &v218);
    sub_24B682CD0();
    *(_WORD *)(v165 + 12) = 2082;
    uint64_t v203 = v165 + 14;
    sub_24B682410();
    sub_24B65D13C(&qword_2697CC400, MEMORY[0x263F07508]);
    uint64_t v167 = sub_24B682F90();
    uint64_t v220 = sub_24B5627B8(v167, v168, &v218);
    uint64_t v62 = v211;
    sub_24B682CD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24B55E000, v161, (os_log_type_t)v204, "ObjectCaptureSession.%{private}s: Session identifier: %{public}s", (uint8_t *)v165, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v166, -1, -1);
    MEMORY[0x24C5D6C00](v165, -1, -1);

    uint64_t v169 = v196;
  }
  else
  {

    uint64_t v169 = v159;
  }
  v61(v169, v62);
  uint64_t v171 = v193;
  uint64_t v172 = *(void *)&v212[v93];
  if (v172)
  {
    os_log_type_t v173 = *(void (**)(char *, _UNKNOWN **))(*(void *)v172 + 176);
    uint64_t v174 = v160;
    swift_retain();
    v173(v160, &off_26FE8FCA0);
    swift_release();
  }
  *(void *)&v160[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_poseCorrectionTimerWorkItem] = sub_24B61D524();
  swift_release();
  objc_msgSend(*(id *)&v160[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession], sel__addObserver_, v160);
  type metadata accessor for ObjectCaptureSessionSPI();
  uint64_t v175 = swift_allocObject();
  uint64_t v176 = (uint64_t *)&v160[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_spi];
  swift_beginAccess();
  *uint64_t v176 = v175;
  swift_release();
  sub_24B680C84();
  OCSignPostsAriadneDbgCode();
  sub_24B680D44();
  sub_24B682840();
  uint64_t v177 = kdebug_trace_string();
  swift_release();
  *(void *)&v160[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_traceDebugId] = v177;
  sub_24B680C3C();
  OCSignPostsAriadneDbgCode();
  kdebug_trace();
  sub_24B680C9C();
  OCSignPostsAriadneDbgCode();
  kdebug_trace();
  sub_24B65E9D8(0xD000000000000019, 0x800000024B691890, "ObjectCaptureSession.%{private}s: pnp_measurement_window_start %{public}s");
  id v178 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v178, sel_addObserver_selector_name_object_, v160, sel_logThermalStateChange, *MEMORY[0x263F08458], 0);

  v214(v171, v213, v62);
  uint64_t v179 = sub_24B6824B0();
  os_log_type_t v180 = sub_24B682B30();
  if (os_log_type_enabled(v179, v180))
  {
    uint64_t v181 = (uint8_t *)swift_slowAlloc();
    uint64_t v182 = swift_slowAlloc();
    uint64_t v220 = v182;
    *(_DWORD *)uint64_t v181 = 136380675;
    uint64_t v217 = sub_24B5627B8(0xD00000000000003ALL, 0x800000024B691820, &v220);
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v179, v180, "ObjectCaptureSession.%{private}s: Session is created.", v181, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v182, -1, -1);
    MEMORY[0x24C5D6C00](v181, -1, -1);
  }

  v61(v171, v62);
  id v184 = v206;
  uint64_t v183 = v207;
  v190(0xD000000000000023, 0x800000024B691860);
  swift_release();
  swift_release();
  swift_release();
  sub_24B61CAA8();
  return (*(uint64_t (**)(char *, uint64_t))(v183 + 8))(v184, v205);
}

id sub_24B65C024(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v92 = a4;
  uint64_t v90 = a3;
  uint64_t v89 = a2;
  uint64_t v88 = a1;
  uint64_t v101 = sub_24B6824D0();
  uint64_t v100 = *(void *)(v101 - 8);
  MEMORY[0x270FA5388](v101);
  uint64_t v99 = (char *)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_24B6825D0();
  MEMORY[0x270FA5388](v98);
  uint64_t v95 = (char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_24B682BC0();
  uint64_t v96 = *(void *)(v97 - 8);
  MEMORY[0x270FA5388](v97);
  uint64_t v93 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24B682B90();
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = sub_24B682640();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v10 = sub_24B562F04(&qword_2697CC9F8);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_observingPublishers;
  type metadata accessor for ObjectCaptureSessionObservingPublishers();
  uint64_t v15 = (_OWORD *)swift_allocObject();
  v15[1] = 0u;
  void v15[2] = 0u;
  v15[3] = 0u;
  v15[4] = 0u;
  v15[5] = 0u;
  v15[6] = 0u;
  v15[7] = 0u;
  v15[8] = 0u;
  *(void *)&v4[v14] = v15;
  uint64_t v16 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_writingPublishers;
  type metadata accessor for ObjectCaptureSessionWritingPublishers();
  uint64_t v17 = (_OWORD *)swift_allocObject();
  v17[1] = 0u;
  double v17[2] = 0u;
  v17[3] = 0u;
  v17[4] = 0u;
  v17[5] = 0u;
  v17[6] = 0u;
  v17[7] = 0u;
  *(void *)&v4[v16] = v17;
  *(void *)&v4[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_spi] = 0;
  uint64_t v18 = &v4[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_estimatedReconstructionTime];
  *(void *)uint64_t v18 = 0;
  v18[8] = 1;
  v4[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectFlippable] = 1;
  v4[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isOverCaptureEnabled] = 0;
  v4[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isFreeformModeEnabled] = 0;
  uint64_t v19 = &v4[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__canTakeManualShot];
  LOBYTE(aBlock[0]) = 0;
  uint64_t v20 = v4;
  sub_24B682530();
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v19, v13, v10);
  uint64_t v21 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue;
  sub_24B57CAF4(0, (unint64_t *)&qword_2697CC0B8);
  sub_24B682610();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_24B65D13C((unint64_t *)&qword_2697CC350, MEMORY[0x263F8F0F8]);
  sub_24B562F04(&qword_2697CC0C0);
  uint64_t v94 = MEMORY[0x263F8D4B8];
  sub_24B5678F4((unint64_t *)&qword_2697CC360, &qword_2697CC0C0);
  sub_24B682D80();
  (*(void (**)(char *, void, uint64_t))(v96 + 104))(v93, *MEMORY[0x263F8F130], v97);
  *(void *)&v20[v21] = sub_24B682C00();
  sub_24B682400();
  *(void *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_stateOnPause] = 10;
  *(void *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_stateAfterFinishing] = 18;
  uint64_t v22 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_currentFrame];
  uint64_t v23 = type metadata accessor for ObjectCaptureSession.Frame(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
  uint64_t v24 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_planeMap;
  uint64_t v25 = MEMORY[0x263F8EE78];
  *(void *)&v20[v24] = sub_24B611148(MEMORY[0x263F8EE78], &qword_2697CCE68, &qword_2697CCD60);
  uint64_t v26 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform];
  long long v27 = *(_OWORD *)(MEMORY[0x263EF89A8] + 16);
  long long v28 = *(_OWORD *)(MEMORY[0x263EF89A8] + 32);
  uint64_t v30 = *(void *)(MEMORY[0x263EF89A8] + 48);
  uint64_t v29 = *(void *)(MEMORY[0x263EF89A8] + 56);
  *(_OWORD *)uint64_t v26 = *MEMORY[0x263EF89A8];
  *((_OWORD *)v26 + 1) = v27;
  *((_OWORD *)v26 + 2) = v28;
  *((void *)v26 + 6) = v30;
  *((void *)v26 + 7) = v29;
  v26[64] = 0;
  uint64_t v31 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_metadataMap;
  *(void *)&v20[v31] = sub_24B610F18(v25);
  *(void *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_frameIndex] = 0;
  uint64_t v32 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_referenceTimestamp];
  *(void *)uint64_t v32 = 0;
  id v32[8] = 1;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_needToStopMotionManager] = 0;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isHighQualityMacroModeSupported] = 2;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isToFSensorTypePeridot] = 0;
  uint64_t v33 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_snapshotURL];
  uint64_t v34 = sub_24B6822E0();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v96 = *(void *)(v35 + 56);
  uint64_t v97 = v35 + 56;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v96)(v33, 1, 1, v34);
  uint64_t v36 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_mobileSfMUserDefaultValue;
  v20[v36] = sub_24B567C00();
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isClosed] = 0;
  *(_DWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectInFOVRatio] = 0;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_centerOfObjectInFOV] = _Q0;
  uint64_t v42 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_uuidToShotAnchorsMap;
  *(void *)&v20[v42] = sub_24B611148(v25, &qword_2697CCE58, &qword_2697CCD18);
  uint64_t v43 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotUUIDToIDMap;
  *(void *)&v20[v43] = sub_24B611334(v25);
  uint64_t v44 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotIDToUUIDMap;
  *(void *)&v20[v44] = sub_24B65951C(v25);
  uint64_t v45 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotFlippableMap;
  *(void *)&v20[v45] = sub_24B6596E4(v25);
  *(void *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_numInitialShotsBeforeFlippableDecision] = 10;
  unint64_t v46 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maxPhotoDimensions];
  *(void *)unint64_t v46 = 0;
  v46[8] = 1;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isPoseCorrectionUsingMobileSfMEnabled] = 0;
  *(void *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_numPoseUpdatesToCheckForConsistency] = 2;
  *(_DWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_mobileSfMPoseUpdateRotationDiffThreshold] = 1065353216;
  *(_DWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_mobileSfMPoseUpdateTranslationDiffThreshold] = 1000593162;
  *(void *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_waitTimeThresholdForPoseCorrectionInSec] = 0x4024000000000000;
  uint64_t v47 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_poseCorrectionTimerWorkItem;
  aBlock[4] = (uint64_t)nullsub_1;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24B566C04;
  aBlock[3] = (uint64_t)&unk_26FE90940;
  _Block_copy(aBlock);
  uint64_t v105 = v25;
  sub_24B65D13C((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
  sub_24B562F04((uint64_t *)&unk_2697CC490);
  sub_24B5678F4((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
  sub_24B682D80();
  sub_24B6826C0();
  swift_allocObject();
  *(void *)&v20[v47] = sub_24B6826A0();
  int v48 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_worldToMobileSfMTransform];
  *(_OWORD *)int v48 = 0u;
  *((_OWORD *)v48 + 1) = 0u;
  *((_OWORD *)v48 + 2) = 0u;
  *((_OWORD *)v48 + 3) = 0u;
  v48[64] = 1;
  *(_DWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_consecutiveObjectFlippabilityCount] = 0;
  *(_DWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_minConsecutiveObjectFlippabilityCount] = 5;
  *(_DWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_minShotFlippableMapSize] = 5;
  *(_OWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureOptions] = xmmword_24B687400;
  uint64_t v49 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_tapPosition];
  *(_OWORD *)uint64_t v49 = 0u;
  *((_OWORD *)v49 + 1) = 0u;
  v49[32] = 0;
  v49[33] = 1;
  *(void *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_plane] = 0;
  *(void *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_prevPlane] = 0;
  *(_DWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_yDistanceThresholdBetweenPrevAndCurrPlanes] = 1008981770;
  uint64_t v50 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_initialCameraTransform];
  *((_OWORD *)v50 + 2) = 0u;
  *((_OWORD *)v50 + 3) = 0u;
  *(_OWORD *)uint64_t v50 = 0u;
  *((_OWORD *)v50 + 1) = 0u;
  v50[64] = 1;
  uint64_t v51 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox];
  *(_OWORD *)uint64_t v51 = 0u;
  *((_OWORD *)v51 + 1) = 0u;
  *((_OWORD *)v51 + 2) = 0u;
  *((_OWORD *)v51 + 3) = 0u;
  v51[64] = 1;
  *(_OWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_scaleForObjectCentricReconstruction] = xmmword_24B685A70;
  uint64_t v52 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maskingVoxelCloud];
  *uint64_t v52 = 0u;
  v52[1] = 0u;
  v52[2] = 0u;
  v52[3] = 0u;
  v52[4] = 0u;
  *(void *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBoxAnchor] = 0;
  *(_DWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_coverage] = 0;
  *(void *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_staticSegmentID] = -1;
  *(void *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotsInCurrentSegment] = v25;
  *(void *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_temporalDepthPointCloudCircularBuffer] = 0;
  *(void *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_temporalDepthPointCloudUpdateInterval] = 0x3FA10CB295E9E1B1;
  *(void *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_temporalDepthPointCloudCacheInterval] = 0x4008000000000000;
  id v53 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformBoundingBox];
  *(_OWORD *)id v53 = 0u;
  *((_OWORD *)v53 + 1) = 0u;
  *((_OWORD *)v53 + 2) = 0u;
  *((_OWORD *)v53 + 3) = 0u;
  v53[64] = 1;
  *(_OWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_scaleForFreeformReconstruction] = xmmword_24B685A70;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldCreateFreeformMeshBuffersFromHeap] = 1;
  *(void *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformMeshHeapVertexCapacity] = 400000;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformScanExtent] = 0;
  *(_DWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformMeshRefinementInitialVoxelSize] = 1000593162;
  *(_DWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformMeshRefinementVoxelSizeIncrement] = 1000593162;
  *(_DWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformMeshRefinementVoxelSizeScanExtentThreshold] = 1014350479;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformCanAutoCaptureStart] = 0;
  *(void *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurface] = 0;
  os_log_type_t v54 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurfaceObjectOrigin];
  *os_log_type_t v54 = 0;
  v54[1] = 0;
  uint64_t v55 = (uint64_t)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurfaceConfig];
  sub_24B65D184((uint64_t)v104);
  sub_24B56CF38((uint64_t)v104, v55, &qword_2697CCA08);
  *(void *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurfaceDebugVoxelCloud] = 0;
  uint64_t v56 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pointCloud];
  v56[4] = 0u;
  v56[5] = 0u;
  v56[2] = 0u;
  v56[3] = 0u;
  *uint64_t v56 = 0u;
  v56[1] = 0u;
  uint64_t v57 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_intrinsicsFromLastFrame];
  *((_OWORD *)v57 + 1) = 0u;
  *((_OWORD *)v57 + 2) = 0u;
  *(_OWORD *)uint64_t v57 = 0u;
  v57[48] = 1;
  uint64_t v58 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_imageHeightFromLastFrame];
  *(void *)uint64_t v58 = 0;
  v58[8] = 1;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldRestartVoxelIntegration] = 0;
  uint64_t v59 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_voxelHashingRestartTime];
  *(void *)uint64_t v59 = 0;
  v59[8] = 1;
  uint64_t v60 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_worldToObjectTransformFromMobileSfM];
  *((_OWORD *)v60 + 2) = 0u;
  *((_OWORD *)v60 + 3) = 0u;
  *(_OWORD *)uint64_t v60 = 0u;
  *((_OWORD *)v60 + 1) = 0u;
  v60[64] = 1;
  char v61 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_initialWorldToMobileSfMTransform];
  *(_OWORD *)char v61 = 0u;
  *((_OWORD *)v61 + 1) = 0u;
  *((_OWORD *)v61 + 2) = 0u;
  *((_OWORD *)v61 + 3) = 0u;
  v61[64] = 1;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForPoseCorrectionUsingMobileSfM] = 0;
  *(void *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pauseTimeForPoseCorrection] = 0;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForNewPlane] = 0;
  *(void *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_voxelIntegrationManager] = 0;
  *(void *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maskingManager] = 0;
  *(void *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_explicitFeedbackManager] = 0;
  *(void *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_imageScaler] = 0;
  *(void *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_motionManager] = 0;
  *(void *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_internalMotionManager] = 0;
  *(void *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pgManager] = 0;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isPgManagerTornDown] = 0;
  *(void *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_meshManager] = 0;
  *(void *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl] = 0;
  *(void *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureManager] = 0;
  *(void *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_traceDebugId] = 0;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugTapPosition] = 0;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugPlaneDetection] = 0;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugMaskingVoxel] = 0;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugCameraControl] = 0;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugDebugVoxels] = 0;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugTsdfDepth] = 0;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugSurfaceGeometryData] = 0;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugCoverageGuideVoxels] = 0;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugExplicitFeedbackEnabled] = 0;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugAutoCaptureEnabled] = 0;
  uint64_t v62 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugAdjustedCaptureCoolDown];
  *(void *)uint64_t v62 = 0;
  v62[8] = 1;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugWriteAllFramesData] = 0;
  uint64_t v63 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugOCBundleWriteDisabled;
  v20[v63] = *sub_24B567D88();
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__bypassAllAlgos] = 0;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__voxelIntegrationEnabled] = 1;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__explicitFeedbackEnabled] = 1;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__coverageEnabled] = 0;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__autoCaptureEnabled] = 1;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__mobileSfMEnabled] = 1;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__mobileSfMiPhoneOverride] = 0;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__captureRateControlEnabled] = 1;
  *(void *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__mobileSfMPointCloudBuffer] = 0;
  uint64_t v64 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__scaleWorldToObjectTransform];
  long long v65 = *(_OWORD *)(MEMORY[0x263EF89A8] + 16);
  long long v66 = *(_OWORD *)(MEMORY[0x263EF89A8] + 32);
  long long v67 = *(_OWORD *)(MEMORY[0x263EF89A8] + 48);
  *uint64_t v64 = *MEMORY[0x263EF89A8];
  v64[1] = v65;
  v64[2] = v66;
  v64[3] = v67;
  id v68 = (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))v96;
  ((void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))v96)(&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__replayVideoURL], 1, 1, v34);
  v68(&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__recordVideoURL], 1, 1, v34);
  *(void *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__skippedFramesTimeStamps] = MEMORY[0x263F8EE88];
  uint64_t v69 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_configuration;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_configuration] = 0;
  uint64_t v70 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v99, v70, v101);
  uint64_t v71 = v20;
  uint64_t v72 = sub_24B6824B0();
  os_log_type_t v73 = sub_24B682B30();
  if (os_log_type_enabled(v72, v73))
  {
    uint64_t v74 = swift_slowAlloc();
    uint64_t v75 = swift_slowAlloc();
    aBlock[0] = v75;
    *(_DWORD *)uint64_t v74 = 136380931;
    uint64_t v105 = sub_24B5627B8(0xD000000000000034, 0x800000024B6918D0, aBlock);
    sub_24B682CD0();
    *(_WORD *)(v74 + 12) = 2082;
    LOBYTE(v105) = v20[v69];
    uint64_t v76 = sub_24B682820();
    uint64_t v105 = sub_24B5627B8(v76, v77, aBlock);
    sub_24B682CD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24B55E000, v72, v73, "ObjectCaptureSession.%{private}s: Initialize with configuration: %{public}s.", (uint8_t *)v74, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v75, -1, -1);
    MEMORY[0x24C5D6C00](v74, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v100 + 8))(v99, v101);
  uint64_t v78 = v92;
  uint64_t v79 = v91;
  uint64_t v80 = v90;
  uint64_t v81 = v89;
  uint64_t v82 = v88;
  if (v88) {
    id v83 = v88;
  }
  else {
    id v83 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EF8FF8]), sel_init);
  }
  *(void *)&v71[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession] = v83;
  swift_beginAccess();
  uint64_t v105 = 10;
  id v84 = v82;
  sub_24B682530();
  swift_endAccess();

  simd_float4 v85 = (objc_class *)type metadata accessor for ObjectCaptureSession(0);
  v102.receiver = v71;
  v102.super_class = v85;
  id v86 = objc_msgSendSuper2(&v102, sel_init);
  sub_24B65A298(v81, v80, v78);

  if (v79) {
  sub_24B5632A8(v78, &qword_2697CC1F0);
  }
  return v86;
}

uint64_t sub_24B65D13C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double sub_24B65D184(uint64_t a1)
{
  *(void *)a1 = 0x200000000;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(void *)(a1 + 136) = 0;
  return result;
}

id sub_24B65D1B8(void *a1, uint64_t a2, void *a3, uint64_t a4, unsigned __int8 *a5)
{
  uint64_t v95 = a4;
  uint64_t v93 = a3;
  uint64_t v92 = a2;
  uint64_t v91 = a1;
  uint64_t v105 = sub_24B6824D0();
  uint64_t v104 = *(void *)(v105 - 8);
  MEMORY[0x270FA5388](v105);
  unint64_t v103 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_24B6825D0();
  MEMORY[0x270FA5388](v101);
  uint64_t v100 = (char *)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_24B682BC0();
  uint64_t v98 = *(void *)(v99 - 8);
  MEMORY[0x270FA5388](v99);
  uint64_t v96 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24B682B90();
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = sub_24B682640();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v12 = sub_24B562F04(&qword_2697CC9F8);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v102 = *a5;
  uint64_t v16 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_observingPublishers;
  type metadata accessor for ObjectCaptureSessionObservingPublishers();
  uint64_t v17 = (_OWORD *)swift_allocObject();
  v17[1] = 0u;
  double v17[2] = 0u;
  v17[3] = 0u;
  v17[4] = 0u;
  v17[5] = 0u;
  v17[6] = 0u;
  v17[7] = 0u;
  v17[8] = 0u;
  *(void *)&v5[v16] = v17;
  uint64_t v18 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_writingPublishers;
  type metadata accessor for ObjectCaptureSessionWritingPublishers();
  uint64_t v19 = (_OWORD *)swift_allocObject();
  v19[1] = 0u;
  v19[2] = 0u;
  v19[3] = 0u;
  v19[4] = 0u;
  v19[5] = 0u;
  v19[6] = 0u;
  v19[7] = 0u;
  *(void *)&v5[v18] = v19;
  *(void *)&v5[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_spi] = 0;
  uint64_t v20 = &v5[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_estimatedReconstructionTime];
  *(void *)uint64_t v20 = 0;
  uint64_t v20[8] = 1;
  v5[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectFlippable] = 1;
  v5[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isOverCaptureEnabled] = 0;
  v5[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isFreeformModeEnabled] = 0;
  uint64_t v21 = &v5[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__canTakeManualShot];
  LOBYTE(aBlock[0]) = 0;
  uint64_t v22 = v5;
  sub_24B682530();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v21, v15, v12);
  uint64_t v23 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue;
  sub_24B57CAF4(0, (unint64_t *)&qword_2697CC0B8);
  sub_24B682610();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_24B65D13C((unint64_t *)&qword_2697CC350, MEMORY[0x263F8F0F8]);
  sub_24B562F04(&qword_2697CC0C0);
  uint64_t v97 = MEMORY[0x263F8D4B8];
  sub_24B5678F4((unint64_t *)&qword_2697CC360, &qword_2697CC0C0);
  sub_24B682D80();
  (*(void (**)(char *, void, uint64_t))(v98 + 104))(v96, *MEMORY[0x263F8F130], v99);
  *(void *)&v22[v23] = sub_24B682C00();
  sub_24B682400();
  *(void *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_stateOnPause] = 10;
  *(void *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_stateAfterFinishing] = 18;
  uint64_t v24 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_currentFrame];
  uint64_t v25 = type metadata accessor for ObjectCaptureSession.Frame(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 1, 1, v25);
  uint64_t v26 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_planeMap;
  uint64_t v27 = MEMORY[0x263F8EE78];
  *(void *)&v22[v26] = sub_24B611148(MEMORY[0x263F8EE78], &qword_2697CCE68, &qword_2697CCD60);
  long long v28 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform];
  long long v29 = *(_OWORD *)(MEMORY[0x263EF89A8] + 16);
  long long v30 = *(_OWORD *)(MEMORY[0x263EF89A8] + 32);
  uint64_t v32 = *(void *)(MEMORY[0x263EF89A8] + 48);
  uint64_t v31 = *(void *)(MEMORY[0x263EF89A8] + 56);
  *(_OWORD *)long long v28 = *MEMORY[0x263EF89A8];
  *((_OWORD *)v28 + 1) = v29;
  *((_OWORD *)v28 + 2) = v30;
  *((void *)v28 + 6) = v32;
  *((void *)v28 + 7) = v31;
  v28[64] = 0;
  uint64_t v33 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_metadataMap;
  *(void *)&v22[v33] = sub_24B610F18(v27);
  *(void *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_frameIndex] = 0;
  uint64_t v34 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_referenceTimestamp];
  *(void *)uint64_t v34 = 0;
  v34[8] = 1;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_needToStopMotionManager] = 0;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isHighQualityMacroModeSupported] = 2;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isToFSensorTypePeridot] = 0;
  uint64_t v35 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_snapshotURL];
  uint64_t v36 = sub_24B6822E0();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v98 = *(void *)(v37 + 56);
  uint64_t v99 = v37 + 56;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v98)(v35, 1, 1, v36);
  uint64_t v38 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_mobileSfMUserDefaultValue;
  v22[v38] = sub_24B567C00();
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isClosed] = 0;
  *(_DWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectInFOVRatio] = 0;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_centerOfObjectInFOV] = _Q0;
  uint64_t v44 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_uuidToShotAnchorsMap;
  *(void *)&v22[v44] = sub_24B611148(v27, &qword_2697CCE58, &qword_2697CCD18);
  uint64_t v45 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotUUIDToIDMap;
  *(void *)&v22[v45] = sub_24B611334(v27);
  uint64_t v46 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotIDToUUIDMap;
  *(void *)&v22[v46] = sub_24B65951C(v27);
  uint64_t v47 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotFlippableMap;
  *(void *)&v22[v47] = sub_24B6596E4(v27);
  *(void *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_numInitialShotsBeforeFlippableDecision] = 10;
  int v48 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maxPhotoDimensions];
  *(void *)int v48 = 0;
  v48[8] = 1;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isPoseCorrectionUsingMobileSfMEnabled] = 0;
  *(void *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_numPoseUpdatesToCheckForConsistency] = 2;
  *(_DWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_mobileSfMPoseUpdateRotationDiffThreshold] = 1065353216;
  *(_DWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_mobileSfMPoseUpdateTranslationDiffThreshold] = 1000593162;
  *(void *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_waitTimeThresholdForPoseCorrectionInSec] = 0x4024000000000000;
  uint64_t v49 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_poseCorrectionTimerWorkItem;
  aBlock[4] = (uint64_t)nullsub_1;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24B566C04;
  aBlock[3] = (uint64_t)&unk_26FE90918;
  _Block_copy(aBlock);
  uint64_t v109 = v27;
  sub_24B65D13C((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
  sub_24B562F04((uint64_t *)&unk_2697CC490);
  sub_24B5678F4((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
  sub_24B682D80();
  sub_24B6826C0();
  swift_allocObject();
  *(void *)&v22[v49] = sub_24B6826A0();
  uint64_t v50 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_worldToMobileSfMTransform];
  *(_OWORD *)uint64_t v50 = 0u;
  *((_OWORD *)v50 + 1) = 0u;
  *((_OWORD *)v50 + 2) = 0u;
  *((_OWORD *)v50 + 3) = 0u;
  v50[64] = 1;
  *(_DWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_consecutiveObjectFlippabilityCount] = 0;
  *(_DWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_minConsecutiveObjectFlippabilityCount] = 5;
  *(_DWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_minShotFlippableMapSize] = 5;
  *(_OWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureOptions] = xmmword_24B687400;
  uint64_t v51 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_tapPosition];
  *(_OWORD *)uint64_t v51 = 0u;
  *((_OWORD *)v51 + 1) = 0u;
  v51[32] = 0;
  v51[33] = 1;
  *(void *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_plane] = 0;
  *(void *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_prevPlane] = 0;
  *(_DWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_yDistanceThresholdBetweenPrevAndCurrPlanes] = 1008981770;
  uint64_t v52 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_initialCameraTransform];
  *((_OWORD *)v52 + 2) = 0u;
  *((_OWORD *)v52 + 3) = 0u;
  *(_OWORD *)uint64_t v52 = 0u;
  *((_OWORD *)v52 + 1) = 0u;
  v52[64] = 1;
  id v53 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox];
  *(_OWORD *)id v53 = 0u;
  *((_OWORD *)v53 + 1) = 0u;
  *((_OWORD *)v53 + 2) = 0u;
  *((_OWORD *)v53 + 3) = 0u;
  v53[64] = 1;
  *(_OWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_scaleForObjectCentricReconstruction] = xmmword_24B685A70;
  os_log_type_t v54 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maskingVoxelCloud];
  *os_log_type_t v54 = 0u;
  v54[1] = 0u;
  v54[2] = 0u;
  v54[3] = 0u;
  v54[4] = 0u;
  *(void *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBoxAnchor] = 0;
  *(_DWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_coverage] = 0;
  *(void *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_staticSegmentID] = -1;
  *(void *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotsInCurrentSegment] = v27;
  *(void *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_temporalDepthPointCloudCircularBuffer] = 0;
  *(void *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_temporalDepthPointCloudUpdateInterval] = 0x3FA10CB295E9E1B1;
  *(void *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_temporalDepthPointCloudCacheInterval] = 0x4008000000000000;
  uint64_t v55 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformBoundingBox];
  *(_OWORD *)uint64_t v55 = 0u;
  *((_OWORD *)v55 + 1) = 0u;
  *((_OWORD *)v55 + 2) = 0u;
  *((_OWORD *)v55 + 3) = 0u;
  v55[64] = 1;
  *(_OWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_scaleForFreeformReconstruction] = xmmword_24B685A70;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldCreateFreeformMeshBuffersFromHeap] = 1;
  *(void *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformMeshHeapVertexCapacity] = 400000;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformScanExtent] = 0;
  *(_DWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformMeshRefinementInitialVoxelSize] = 1000593162;
  *(_DWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformMeshRefinementVoxelSizeIncrement] = 1000593162;
  *(_DWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformMeshRefinementVoxelSizeScanExtentThreshold] = 1014350479;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformCanAutoCaptureStart] = 0;
  *(void *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurface] = 0;
  uint64_t v56 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurfaceObjectOrigin];
  *uint64_t v56 = 0;
  v56[1] = 0;
  uint64_t v57 = (uint64_t)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurfaceConfig];
  sub_24B65D184((uint64_t)v108);
  sub_24B56CF38((uint64_t)v108, v57, &qword_2697CCA08);
  *(void *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurfaceDebugVoxelCloud] = 0;
  uint64_t v58 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pointCloud];
  v58[4] = 0u;
  v58[5] = 0u;
  v58[2] = 0u;
  v58[3] = 0u;
  *uint64_t v58 = 0u;
  v58[1] = 0u;
  uint64_t v59 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_intrinsicsFromLastFrame];
  *((_OWORD *)v59 + 1) = 0u;
  *((_OWORD *)v59 + 2) = 0u;
  *(_OWORD *)uint64_t v59 = 0u;
  v59[48] = 1;
  uint64_t v60 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_imageHeightFromLastFrame];
  *(void *)uint64_t v60 = 0;
  v60[8] = 1;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldRestartVoxelIntegration] = 0;
  char v61 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_voxelHashingRestartTime];
  *(void *)char v61 = 0;
  v61[8] = 1;
  uint64_t v62 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_worldToObjectTransformFromMobileSfM];
  *((_OWORD *)v62 + 2) = 0u;
  *((_OWORD *)v62 + 3) = 0u;
  *(_OWORD *)uint64_t v62 = 0u;
  *((_OWORD *)v62 + 1) = 0u;
  v62[64] = 1;
  uint64_t v63 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_initialWorldToMobileSfMTransform];
  *(_OWORD *)uint64_t v63 = 0u;
  *((_OWORD *)v63 + 1) = 0u;
  *((_OWORD *)v63 + 2) = 0u;
  *((_OWORD *)v63 + 3) = 0u;
  v63[64] = 1;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForPoseCorrectionUsingMobileSfM] = 0;
  *(void *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pauseTimeForPoseCorrection] = 0;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForNewPlane] = 0;
  *(void *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_voxelIntegrationManager] = 0;
  *(void *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maskingManager] = 0;
  *(void *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_explicitFeedbackManager] = 0;
  *(void *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_imageScaler] = 0;
  *(void *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_motionManager] = 0;
  *(void *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_internalMotionManager] = 0;
  *(void *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pgManager] = 0;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isPgManagerTornDown] = 0;
  *(void *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_meshManager] = 0;
  *(void *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl] = 0;
  *(void *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureManager] = 0;
  *(void *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_traceDebugId] = 0;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugTapPosition] = 0;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugPlaneDetection] = 0;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugMaskingVoxel] = 0;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugCameraControl] = 0;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugDebugVoxels] = 0;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugTsdfDepth] = 0;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugSurfaceGeometryData] = 0;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugCoverageGuideVoxels] = 0;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugExplicitFeedbackEnabled] = 0;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugAutoCaptureEnabled] = 0;
  uint64_t v64 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugAdjustedCaptureCoolDown];
  *(void *)uint64_t v64 = 0;
  v64[8] = 1;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugWriteAllFramesData] = 0;
  uint64_t v65 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugOCBundleWriteDisabled;
  v22[v65] = *sub_24B567D88();
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__bypassAllAlgos] = 0;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__voxelIntegrationEnabled] = 1;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__explicitFeedbackEnabled] = 1;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__coverageEnabled] = 0;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__autoCaptureEnabled] = 1;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__mobileSfMEnabled] = 1;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__mobileSfMiPhoneOverride] = 0;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__captureRateControlEnabled] = 1;
  *(void *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__mobileSfMPointCloudBuffer] = 0;
  long long v66 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__scaleWorldToObjectTransform];
  long long v67 = *(_OWORD *)(MEMORY[0x263EF89A8] + 16);
  long long v68 = *(_OWORD *)(MEMORY[0x263EF89A8] + 32);
  long long v69 = *(_OWORD *)(MEMORY[0x263EF89A8] + 48);
  _OWORD *v66 = *MEMORY[0x263EF89A8];
  v66[1] = v67;
  v66[2] = v68;
  float v66[3] = v69;
  uint64_t v70 = (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))v98;
  ((void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))v98)(&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__replayVideoURL], 1, 1, v36);
  v70(&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__recordVideoURL], 1, 1, v36);
  *(void *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__skippedFramesTimeStamps] = MEMORY[0x263F8EE88];
  uint64_t v71 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_configuration;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_configuration] = v102;
  uint64_t v72 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v104 + 16))(v103, v72, v105);
  os_log_type_t v73 = v22;
  uint64_t v74 = sub_24B6824B0();
  os_log_type_t v75 = sub_24B682B30();
  if (os_log_type_enabled(v74, v75))
  {
    uint64_t v76 = swift_slowAlloc();
    uint64_t v77 = swift_slowAlloc();
    aBlock[0] = v77;
    *(_DWORD *)uint64_t v76 = 136380931;
    uint64_t v109 = sub_24B5627B8(0xD000000000000042, 0x800000024B6917A0, aBlock);
    sub_24B682CD0();
    *(_WORD *)(v76 + 12) = 2082;
    LOBYTE(v109) = v22[v71];
    uint64_t v78 = sub_24B682820();
    uint64_t v109 = sub_24B5627B8(v78, v79, aBlock);
    sub_24B682CD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24B55E000, v74, v75, "ObjectCaptureSession.%{private}s: Initialize with configuration: %{public}s.", (uint8_t *)v76, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v77, -1, -1);
    MEMORY[0x24C5D6C00](v76, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v104 + 8))(v103, v105);
  uint64_t v80 = v95;
  uint64_t v81 = v94;
  uint64_t v82 = v93;
  uint64_t v83 = v92;
  id v84 = v91;
  if (v91) {
    id v85 = v91;
  }
  else {
    id v85 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EF8FF8]), sel_init);
  }
  *(void *)&v73[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession] = v85;
  swift_beginAccess();
  uint64_t v109 = 10;
  id v86 = v84;
  sub_24B682530();
  swift_endAccess();

  simd_float4 v87 = (objc_class *)type metadata accessor for ObjectCaptureSession(0);
  v106.receiver = v73;
  v106.super_class = v87;
  id v88 = objc_msgSendSuper2(&v106, sel_init);
  sub_24B65A298(v83, v82, v80);

  if (v81) {
  sub_24B5632A8(v80, &qword_2697CC1F0);
  }
  return v88;
}

uint64_t type metadata accessor for ObjectCaptureSession(uint64_t a1)
{
  return sub_24B56BBFC(a1, (uint64_t *)&unk_2697D00D8);
}

void sub_24B65E308(id a1)
{
  if (a1 != (id)18) {
    sub_24B65A19C(a1);
  }
}

uint64_t sub_24B65E318@<X0>(unsigned char *a1@<X8>)
{
  return sub_24B61534C(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_24B65E344@<X0>(char *a1@<X8>)
{
  return sub_24B615D20(*(void *)(v1 + 16), *(unsigned char *)(v1 + 24), *(void **)(v1 + 32), a1);
}

uint64_t sub_24B65E378@<X0>(char *a1@<X8>)
{
  return sub_24B617118(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_24B65E3A4@<X0>(char *a1@<X8>)
{
  return sub_24B617D64(*(void *)(v1 + 16), *(void **)(v1 + 24), a1, *(double *)(v1 + 32), *(double *)(v1 + 40));
}

uint64_t sub_24B65E3D4()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_24B65E40C()
{
  uint64_t v1 = *(unsigned char **)(v0 + 24);
  (*(void (**)(id *__return_ptr))((*MEMORY[0x263F8EED0] & **(void **)(v0 + 16)) + 0x420))(&v2);
  if (v2 == (id)14)
  {
    sub_24B65A19C((id)0xE);
    sub_24B65A19C((id)0xE);
    *uint64_t v1 = 1;
  }
  else
  {
    sub_24B65A19C(v2);
    sub_24B65A19C((id)0xE);
  }
}

uint64_t sub_24B65E4A8()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24B65E4B8()
{
  uint64_t v1 = sub_24B6824D0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t result = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBoxAnchor);
  if (v6)
  {
    uint64_t v7 = *(void **)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession);
    id v8 = v6;
    objc_msgSend(v7, sel_removeAnchor_, v8);
    uint64_t v9 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v9, v1);
    uint64_t v10 = sub_24B6824B0();
    os_log_type_t v11 = sub_24B682B30();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v15 = v13;
      *(_DWORD *)uint64_t v12 = 136380675;
      uint64_t v14 = sub_24B5627B8(0xD000000000000011, 0x800000024B68FE70, &v15);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v10, v11, "ObjectCaptureSession.%{private}s: Existing bounding box anchor removed.", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v13, -1, -1);
      MEMORY[0x24C5D6C00](v12, -1, -1);
    }
    else
    {
    }
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  return result;
}

void sub_24B65E6F4(uint64_t a1, float32x4_t a2)
{
  uint64_t v3 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  float32x4_t v35 = (float32x4_t)vdupq_laneq_s32((int32x4_t)a2, 2);
  float32x4_t v36 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)a2.f32, 1);
  float v8 = a2.f32[1] + -0.02;
  swift_bridgeObjectRetain();
  uint64_t v34 = 0;
  int64_t v9 = 0;
  float v10 = 3.4028e38;
  if (v6) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v13 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v13 < v7)
    {
      unint64_t v14 = *(void *)(v3 + 8 * v13);
      ++v9;
      if (v14) {
        goto LABEL_22;
      }
      int64_t v9 = v13 + 1;
      if (v13 + 1 >= v7) {
        goto LABEL_29;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v9);
      if (v14) {
        goto LABEL_22;
      }
      int64_t v9 = v13 + 2;
      if (v13 + 2 >= v7) {
        goto LABEL_29;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v9);
      if (v14) {
        goto LABEL_22;
      }
      int64_t v9 = v13 + 3;
      if (v13 + 3 >= v7) {
        goto LABEL_29;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v9);
      if (v14)
      {
LABEL_22:
        unint64_t v6 = (v14 - 1) & v14;
        for (unint64_t i = __clz(__rbit64(v14)) + (v9 << 6); ; unint64_t i = v11 | (v9 << 6))
        {
          uint64_t v16 = (ARPlaneAnchor *)*(id *)(*(void *)(a1 + 56) + 8 * i);
          getRotatedPlaneTransform(_:)(v17, v16);
          simd_float4x4 v40 = __invert_f4(v39);
          float32x4_t v38 = vaddq_f32((float32x4_t)v40.columns[3], vmlaq_f32(vmlaq_f32(vmulq_n_f32((float32x4_t)v40.columns[0], a2.f32[0]), v36, (float32x4_t)v40.columns[1]), v35, (float32x4_t)v40.columns[2]));
          [(ARPlaneAnchor *)v16 center];
          float v19 = vabds_f32(v18, v38.f32[0]);
          uint64_t v20 = [(ARPlaneAnchor *)v16 planeExtent];
          [(ARPlaneExtent *)v20 width];
          float v22 = v21;

          if ((float)(v22 * 0.5) < v19) {
            goto LABEL_5;
          }
          *(float *)&double v23 = v22 * 0.5;
          [(ARPlaneAnchor *)v16 center];
          float v25 = vabds_f32(v24, v38.f32[2]);
          uint64_t v26 = [(ARPlaneAnchor *)v16 planeExtent];
          [(ARPlaneExtent *)v26 height];
          float v28 = v27;

          if ((float)(v28 * 0.5) < v25
            || (*(float *)&double v29 = v28 * 0.5,
                [(ARPlaneAnchor *)v16 transform],
                *(float *)&double v31 = v30,
                v30 > v8)
            || ([(ARPlaneAnchor *)v16 transform], LODWORD(v33) = vsubq_f32(a2, v32).i32[1],
                                                                     v33 >= v10))
          {
LABEL_5:

            if (!v6) {
              goto LABEL_7;
            }
          }
          else
          {

            float v10 = v33;
            uint64_t v34 = v16;
            if (!v6) {
              goto LABEL_7;
            }
          }
LABEL_6:
          unint64_t v11 = __clz(__rbit64(v6));
          v6 &= v6 - 1;
        }
      }
      int64_t v15 = v13 + 4;
      if (v15 < v7)
      {
        unint64_t v14 = *(void *)(v3 + 8 * v15);
        if (v14)
        {
          int64_t v9 = v15;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v9 = v15 + 1;
          if (__OFADD__(v15, 1)) {
            goto LABEL_31;
          }
          if (v9 >= v7) {
            break;
          }
          unint64_t v14 = *(void *)(v3 + 8 * v9);
          ++v15;
          if (v14) {
            goto LABEL_22;
          }
        }
      }
    }
LABEL_29:
    swift_release();
    return;
  }
  __break(1u);
LABEL_31:
  __break(1u);
}

uint64_t sub_24B65E9D8(uint64_t a1, unint64_t a2, const char *a3)
{
  uint64_t v31 = a1;
  unint64_t v32 = a2;
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  int64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24B6823B0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
  int64_t v13 = (void *)sub_24B6827A0();
  objc_msgSend(v12, sel_setDateFormat_, v13);

  sub_24B6823A0();
  unint64_t v14 = (void *)sub_24B682350();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  id v15 = objc_msgSend(v12, sel_stringFromDate_, v14);

  uint64_t v16 = sub_24B6827D0();
  unint64_t v18 = v17;

  uint64_t v19 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v19, v4);
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_24B6824B0();
  os_log_type_t v21 = sub_24B682B30();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    double v29 = a3;
    uint64_t v23 = v22;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v30 = v5;
    uint64_t v25 = v16;
    uint64_t v26 = v24;
    uint64_t v34 = v24;
    *(_DWORD *)uint64_t v23 = 136380931;
    uint64_t v27 = sub_24B5627B8(v31, v32, &v34);
    unint64_t v32 = v4;
    uint64_t v33 = v27;
    sub_24B682CD0();
    *(_WORD *)(v23 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_24B5627B8(v25, v18, &v34);
    sub_24B682CD0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24B55E000, v20, v21, v29, (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v26, -1, -1);
    MEMORY[0x24C5D6C00](v23, -1, -1);

    return (*(uint64_t (**)(char *, unint64_t))(v30 + 8))(v7, v32);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_24B65ED78@<X0>(char *a1@<X8>)
{
  return sub_24B619D30(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_24B65EDA8()
{
  return sub_24B65EE90((uint64_t (*)(unint64_t, uint64_t))sub_24B61A4CC);
}

uint64_t sub_24B65EDC0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24B65EDD4()
{
  uint64_t v1 = sub_24B6823B0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6 + 8, v5);
}

uint64_t sub_24B65EE78()
{
  return sub_24B65EE90((uint64_t (*)(unint64_t, uint64_t))sub_24B61ADC4);
}

uint64_t sub_24B65EE90(uint64_t (*a1)(unint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(sub_24B6823B0() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v1 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));

  return a1(v1 + v3, v4);
}

uint64_t sub_24B65EF30()
{
  return sub_24B61BD0C(*(char **)(v0 + 16));
}

uint64_t sub_24B65EF38()
{
  return MEMORY[0x270FA0238](v0, 88, 15);
}

void sub_24B65EF70()
{
  sub_24B61C674(*(void **)(v0 + 80), *(float32x4_t *)(v0 + 16), *(float32x4_t *)(v0 + 32), *(float32x4_t *)(v0 + 48), *(int8x16_t *)(v0 + 64));
}

uint64_t sub_24B65EF80(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

double sub_24B65EFE0(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_WORD *)(a1 + 224) = 256;
  return result;
}

uint64_t sub_24B65F00C(uint64_t result)
{
  *(unsigned char *)(result + 225) = 0;
  return result;
}

uint64_t sub_24B65F014@<X0>(unsigned char *a1@<X8>)
{
  return sub_24B638C8C(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

void sub_24B65F040(char *a1@<X8>)
{
  sub_24B639090(*(char **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

uint64_t sub_24B65F070()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_24B65F0B0()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void **)(v0 + 24);
  id v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                             + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession), sel_configuration));
  if (v3)
  {
    id v16 = v3;
    self;
    uint64_t v4 = swift_dynamicCastObjCClass();
    if (v4 && (*(unsigned char *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_referenceTimestamp + 8) & 1) == 0)
    {
      uint64_t v5 = (void *)v4;
      double v6 = *(double *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_referenceTimestamp);
      int64_t v7 = (void *)MEMORY[0x263F8EED0];
      double v8 = v6 + (*(double (**)(void))((*MEMORY[0x263F8EED0] & *v1) + 0x78))();
      type metadata accessor for ObjectCaptureFrameEvent();
      uint64_t v9 = (*(void *(**)(char *__return_ptr))((*v7 & *v1) + 0x90))((char *)&v18 + 1);
      uint64_t v10 = (*(void *(**)(uint64_t *__return_ptr, void *))((*v7 & *v1) + 0xA8))(&v18, v9);
      char v17 = v18;
      double v11 = (*(double (**)(void *))((*v7 & *v1) + 0xC0))(v10);
      double v13 = v12;
      uint64_t v14 = (*(uint64_t (**)(void))((*v7 & *v1) + 0xD8))();
      id v15 = ObjectCaptureFrameEvent.__allocating_init(timestamp:gesture:scanStatus:position:boxTransform:)((unsigned char *)&v18 + 1, &v17, v14, v8, v11, v13);
      objc_msgSend(objc_msgSend(v5, sel_recordingTechnique), sel_recordCustomData_forTimestamp_, v15, v8);
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_24B65F2EC()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24B65F2FC(uint64_t a1)
{
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)(a1 - 1) < 4) {
    return dword_24B687440[a1 - 1];
  }
  uint64_t v7 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v7, v2);
  double v8 = sub_24B6824B0();
  os_log_type_t v9 = sub_24B682B20();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v15 = v11;
    *(_DWORD *)uint64_t v10 = 136380931;
    uint64_t v14 = sub_24B5627B8(0xD000000000000036, 0x800000024B6915D0, &v15);
    sub_24B682CD0();
    *(_WORD *)(v10 + 12) = 2082;
    uint64_t v14 = a1;
    type metadata accessor for UIDeviceOrientation(0);
    uint64_t v12 = sub_24B682820();
    uint64_t v14 = sub_24B5627B8(v12, v13, &v15);
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24B55E000, v8, v9, "ObjectCaptureSession.%{private}s: Unsupported device orientation detected: %{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v11, -1, -1);
    MEMORY[0x24C5D6C00](v10, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return 1;
}

uint64_t sub_24B65F55C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(sub_24B682410() - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_24B682F40();
  __break(1u);
  return result;
}

uint64_t sub_24B65F928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_24B6825D0();
  uint64_t v20 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_24B682640();
  uint64_t v10 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  unint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B56CF38(a1, (uint64_t)v23, &qword_2697CCE10);
  sub_24B56CF38(a2, (uint64_t)v24, &qword_2697CCE18);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v3;
  long long v14 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)a3;
  *(_OWORD *)(v13 + 48) = v14;
  *(unsigned char *)(v13 + 64) = *(unsigned char *)(a3 + 32);
  sub_24B56CF38((uint64_t)v23, v13 + 80, &qword_2697CCE10);
  sub_24B56CF38((uint64_t)v24, v13 + 160, &qword_2697CCE18);
  aBlock[4] = sub_24B66E8A0;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B566C04;
  aBlock[3] = &unk_26FE90850;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = v3;
  sub_24B66E8B4((uint64_t)v24);
  sub_24B6825F0();
  uint64_t v21 = MEMORY[0x263F8EE78];
  sub_24B65D13C((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
  sub_24B562F04((uint64_t *)&unk_2697CC490);
  sub_24B5678F4((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
  sub_24B682D80();
  MEMORY[0x24C5D4CD0](0, v12, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v19);
  return swift_release();
}

void sub_24B65FC98()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  char v3 = *(unsigned char *)(v0 + 32);
  (*(void (**)(id *__return_ptr))((*MEMORY[0x263F8EED0] & *v1) + 0x420))(v8);
  if (v8[0] == (id)15)
  {
    sub_24B65A19C((id)0xF);
    sub_24B65A19C((id)0xF);
    if (v2 < 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v4 = (char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotFlippableMap;
      swift_beginAccess();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v7 = *(void *)v4;
      *(void *)uint64_t v4 = 0x8000000000000000;
      sub_24B656B2C(v3, v2, isUniquelyReferenced_nonNull_native);
      *(void *)uint64_t v4 = v7;
      swift_bridgeObjectRelease();
      swift_endAccess();
      if (*(void *)(*(void *)v4 + 16) >= 0xAuLL)
      {
        double v6 = (char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectFlippable;
        swift_beginAccess();
        *double v6 = v3;
        sub_24B613648();
      }
    }
  }
  else
  {
    sub_24B65A19C(v8[0]);
    sub_24B65A19C((id)0xF);
  }
}

uint64_t sub_24B65FDE8()
{
  return sub_24B65FEB4(MEMORY[0x263F8EEA0]);
}

uint64_t sub_24B65FE00()
{
  return sub_24B642020(*(char **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_24B65FE08()
{
  return sub_24B65FEB4(MEMORY[0x263F8EEA0]);
}

uint64_t sub_24B65FE20()
{
  return sub_24B644B4C(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_24B65FE28()
{
  return sub_24B65FEB4(MEMORY[0x263F8EEA0]);
}

uint64_t sub_24B65FE40()
{
  return sub_24B64573C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_24B65FE48()
{
  return sub_24B645C78(*(unsigned char *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_24B65FE54()
{
  return MEMORY[0x270FA0238](v0, 34, 7);
}

uint64_t sub_24B65FE8C()
{
  return sub_24B646548(*(char **)(v0 + 16), *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(unsigned __int8 *)(v0 + 33));
}

uint64_t sub_24B65FE9C()
{
  return sub_24B65FEB4(MEMORY[0x263F8EED8]);
}

uint64_t sub_24B65FEB4(void (*a1)(void))
{
  a1(*(void *)(v1 + 24));

  return MEMORY[0x270FA0238](v1, 32, 7);
}

void sub_24B65FF04()
{
  sub_24B646E44(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

id sub_24B65FF0C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for OCCaptureData(0);
  MEMORY[0x270FA5388](v4 - 8);
  double v6 = (char *)&v127 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  uint64_t v7 = MEMORY[0x270FA5388](v148);
  uint64_t v149 = (uint64_t)&v127 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (_OWORD *)((char *)&v127 - v9);
  uint64_t v11 = sub_24B6824D0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v127 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  *(void *)&long long v144 = (char *)&v127 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v127 - v19;
  id result = (id)MEMORY[0x270FA5388](v18);
  uint64_t v23 = (char *)&v127 - v22;
  uint64_t v24 = *(void *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_frameIndex);
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
    __break(1u);
    goto LABEL_36;
  }
  *(void *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_frameIndex) = v26;
  if (__ROR8__(0xEEEEEEEEEEEEEEEFLL * v26 + 0x888888888888888, 1) <= 0x888888888888888uLL)
  {
    *(void *)&long long v142 = v10;
    uint64_t v27 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v23, v27, v11);
    float v28 = sub_24B6824B0();
    uint64_t v29 = v11;
    os_log_type_t v30 = sub_24B682B30();
    if (os_log_type_enabled(v28, v30))
    {
      *(void *)&long long v143 = v12;
      uint64_t v31 = swift_slowAlloc();
      uint64_t v145 = v2;
      unint64_t v32 = (uint8_t *)v31;
      uint64_t v33 = swift_slowAlloc();
      uint64_t v146 = v6;
      uint64_t v34 = v33;
      uint64_t v150 = v33;
      *(void *)&long long v147 = v15;
      *(_DWORD *)unint64_t v32 = 136380675;
      *(void *)&v159[0] = sub_24B5627B8(0xD000000000000015, 0x800000024B68F550, &v150);
      uint64_t v12 = v143;
      uint64_t v15 = (char *)v147;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v28, v30, "ObjectCaptureSession.%{private}s: has been called.", v32, 0xCu);
      swift_arrayDestroy();
      uint64_t v35 = v34;
      double v6 = v146;
      MEMORY[0x24C5D6C00](v35, -1, -1);
      float32x4_t v36 = v32;
      uint64_t v2 = v145;
      MEMORY[0x24C5D6C00](v36, -1, -1);
    }

    id result = (id)(*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v23, v29);
    uint64_t v11 = v29;
    uint64_t v10 = (_OWORD *)v142;
  }
  if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__bypassAllAlgos) & 1) == 0)
  {
    id v37 = objc_msgSend(a1, sel_smoothedSceneDepth);
    uint64_t v146 = v6;
    *(void *)&long long v147 = v15;
    if (v37
      && (float32x4_t v38 = v37, v39 = objc_msgSend(v37, sel_depthMap), v38, v39))
    {
    }
    else
    {
      uint64_t v40 = sub_24B57CB70();
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v20, v40, v11);
      uint64_t v41 = sub_24B6824B0();
      os_log_type_t v42 = sub_24B682B20();
      if (os_log_type_enabled(v41, v42))
      {
        *(void *)&long long v142 = v10;
        uint64_t v43 = (uint8_t *)swift_slowAlloc();
        uint64_t v44 = swift_slowAlloc();
        uint64_t v150 = v44;
        *(void *)&long long v143 = v12;
        *(_DWORD *)uint64_t v43 = 136380675;
        *(void *)&v159[0] = sub_24B5627B8(0xD000000000000015, 0x800000024B68F550, &v150);
        uint64_t v10 = (_OWORD *)v142;
        uint64_t v12 = v143;
        sub_24B682CD0();
        _os_log_impl(&dword_24B55E000, v41, v42, "ObjectCaptureSession.%{private}s: No depth map is available in ARFrame!", v43, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v44, -1, -1);
        MEMORY[0x24C5D6C00](v43, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v12 + 8))(v20, v11);
      uint64_t v15 = (char *)v147;
    }
    id v45 = objc_msgSend(a1, sel_depthConfidenceData);

    if (!v45)
    {
      uint64_t v46 = sub_24B57CB70();
      uint64_t v47 = v144;
      (*(void (**)(void, uint64_t, uint64_t))(v12 + 16))(v144, v46, v11);
      int v48 = sub_24B6824B0();
      os_log_type_t v49 = sub_24B682B20();
      if (os_log_type_enabled(v48, v49))
      {
        *(void *)&long long v143 = v12;
        uint64_t v50 = (uint8_t *)swift_slowAlloc();
        uint64_t v51 = swift_slowAlloc();
        uint64_t v150 = v51;
        *(_DWORD *)uint64_t v50 = 136380675;
        *(void *)&v159[0] = sub_24B5627B8(0xD000000000000015, 0x800000024B68F550, &v150);
        uint64_t v12 = v143;
        uint64_t v15 = (char *)v147;
        sub_24B682CD0();
        _os_log_impl(&dword_24B55E000, v48, v49, "ObjectCaptureSession.%{private}s: No confidence map is available in ARFrame!", v50, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v51, -1, -1);
        MEMORY[0x24C5D6C00](v50, -1, -1);

        (*(void (**)(void, uint64_t))(v12 + 8))(v144, v11);
      }
      else
      {

        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v47, v11);
      }
    }
    id v52 = objc_msgSend(a1, sel_capturedPointCloudData);
    if (v52
      && (id v53 = v52,
          id v54 = objc_msgSend(v52, sel_depthPointCloud),
          v53,
          v54))
    {
    }
    else
    {
      uint64_t v55 = sub_24B57CB70();
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v55, v11);
      uint64_t v56 = sub_24B6824B0();
      os_log_type_t v57 = sub_24B682B20();
      if (os_log_type_enabled(v56, v57))
      {
        *(void *)&long long v143 = v12;
        uint64_t v58 = (uint8_t *)swift_slowAlloc();
        uint64_t v59 = swift_slowAlloc();
        uint64_t v150 = v59;
        *(_DWORD *)uint64_t v58 = 136380675;
        *(void *)&v159[0] = sub_24B5627B8(0xD000000000000015, 0x800000024B68F550, &v150);
        sub_24B682CD0();
        _os_log_impl(&dword_24B55E000, v56, v57, "ObjectCaptureSession.%{private}s: No point cloud data is available in ARFrame!", v58, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v59, -1, -1);
        MEMORY[0x24C5D6C00](v58, -1, -1);

        (*(void (**)(void, uint64_t))(v143 + 8))(v147, v11);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
      }
    }
    uint64_t v60 = v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_referenceTimestamp;
    if (*(unsigned char *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_referenceTimestamp + 8) == 1)
    {
      objc_msgSend(a1, sel_timestamp);
      *(void *)uint64_t v60 = v61;
      *(unsigned char *)(v60 + 8) = 0;
    }
    id result = objc_msgSend(a1, sel_timestamp);
    if ((*(unsigned char *)(v60 + 8) & 1) == 0)
    {
      double v63 = v62;
      double v64 = *(double *)v60;
      uint64_t v65 = (__CVBuffer *)objc_msgSend(a1, sel_capturedImage);
      id v66 = objc_msgSend(a1, sel_camera);
      objc_msgSend(v66, sel_intrinsics);
      v159[0] = v67;
      v159[1] = v68;
      v159[2] = v69;

      sub_24B6108E4(v65, (uint64_t)v159);
      id v70 = objc_msgSend(a1, sel_camera);
      objc_msgSend(v70, sel_intrinsics);
      long long v147 = v71;
      long long v144 = v72;
      long long v143 = v73;

      uint64_t v74 = v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_intrinsicsFromLastFrame;
      long long v75 = v144;
      *(_OWORD *)uint64_t v74 = v147;
      *(_OWORD *)(v74 + 16) = v75;
      *(_OWORD *)(v74 + 32) = v143;
      *(unsigned char *)(v74 + 48) = 0;
      id v76 = objc_msgSend(a1, sel_camera);
      objc_msgSend(v76, sel_imageResolution);
      uint64_t v78 = v77;

      uint64_t v79 = v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_imageHeightFromLastFrame;
      *(void *)uint64_t v79 = v78;
      *(unsigned char *)(v79 + 8) = 0;
      id v80 = objc_msgSend(a1, sel_capturedPointCloudData);
      uint64_t v145 = v2;
      if (v80
        && (uint64_t v81 = v80,
            id v82 = objc_msgSend(v80, sel_depthPointCloud),
            v81,
            v82))
      {
        char v83 = sub_24B5AACAC();
        sub_24B5FAB10(v82, v83 & 1, (uint64_t)&v150);

        uint64_t v84 = v151;
        uint64_t v128 = v150;
        uint64_t v130 = v152;
        uint64_t v85 = v154;
        uint64_t v129 = v153;
        uint64_t v134 = v155;
        uint64_t v133 = v156;
        uint64_t v132 = v157;
        uint64_t v131 = v158;
      }
      else
      {
        uint64_t v128 = 0;
        uint64_t v84 = 0;
        uint64_t v130 = 0;
        uint64_t v129 = 0;
        uint64_t v85 = 0;
        uint64_t v134 = 0;
        uint64_t v133 = 0;
        uint64_t v132 = 0;
        uint64_t v131 = 0;
      }
      double v86 = v63 - v64;
      id v87 = objc_msgSend(a1, sel_camera);
      objc_msgSend(v87, sel_intrinsics);
      long long v147 = v88;
      long long v144 = v89;
      long long v143 = v90;

      id v91 = objc_msgSend(a1, sel_camera);
      objc_msgSend(v91, sel_transform);
      long long v142 = v92;
      long long v141 = v93;
      long long v140 = v94;
      long long v139 = v95;

      id v96 = objc_msgSend(a1, sel_camera);
      uint64_t v97 = (int *)v148;
      sub_24B682CA0();

      wideToDepthCameraTransform()(v98);
      int8x16_t v135 = v99;
      int8x16_t v136 = v100;
      int8x16_t v137 = v101;
      int8x16_t v138 = v102;
      id v103 = objc_msgSend(a1, sel_camera);
      id v104 = objc_msgSend(v103, sel_calibrationData);

      long long v105 = v144;
      *uint64_t v10 = v147;
      v10[1] = v105;
      long long v106 = v142;
      v10[2] = v143;
      v10[3] = v106;
      long long v107 = v140;
      v10[4] = v141;
      v10[5] = v107;
      v10[6] = v139;
      uint64_t v108 = (char *)v10 + v97[7];
      int8x16_t v109 = v135;
      *(void *)uint64_t v108 = v135.i64[0];
      int8x16_t v110 = v136;
      *(int8x16_t *)(v108 + 8) = vextq_s8(v109, v136, 8uLL);
      int8x16_t v111 = v137;
      *(int8x16_t *)(v108 + 24) = vextq_s8(v110, v137, 8uLL);
      v110.i64[1] = v138.i64[1];
      *(int8x16_t *)(v108 + 40) = vextq_s8(v111, v138, 8uLL);
      *((void *)v108 + 7) = v110.i64[1];
      v108[64] = 0;
      *(void *)((char *)v10 + v97[8]) = v104;
      uint64_t v112 = (char *)v10 + v97[9];
      *((_OWORD *)v112 + 2) = 0u;
      *((_OWORD *)v112 + 3) = 0u;
      *(_OWORD *)uint64_t v112 = 0u;
      *((_OWORD *)v112 + 1) = 0u;
      v112[64] = 1;
      id v113 = objc_msgSend(a1, sel_capturedImage);
      id v114 = objc_msgSend(a1, sel_smoothedSceneDepth);
      if (v114)
      {
        BOOL v115 = v114;
        id v116 = objc_msgSend(v114, sel_depthMap);
      }
      else
      {
        id v116 = 0;
      }
      uint64_t v117 = v128;
      uint64_t v118 = v130;
      uint64_t v119 = v129;
      id v120 = objc_msgSend(a1, sel_depthConfidenceData);
      uint64_t v150 = v117;
      uint64_t v151 = v84;
      uint64_t v152 = v118;
      uint64_t v153 = v119;
      uint64_t v154 = v85;
      uint64_t v155 = v134;
      uint64_t v156 = v133;
      uint64_t v157 = v132;
      uint64_t v158 = v131;
      id v121 = objc_msgSend(a1, sel_capturedPointCloudData);
      id v122 = objc_msgSend(v121, sel_depthPointCloud);

      uint64_t v123 = v149;
      sub_24B659A1C((uint64_t)v10, v149, type metadata accessor for ObjectCaptureSession.Frame.Camera);
      id v124 = objc_msgSend(a1, sel_rawFeaturePoints);
      char v125 = sub_24B5AACAC();
      uint64_t v126 = (uint64_t)v146;
      sub_24B6735A4((uint64_t)v113, (uint64_t)v116, (uint64_t)v120, (uint64_t)&v150, (uint64_t)v122, v123, (uint64_t)v124, v125 & 1, (uint64_t)v146, v86);
      sub_24B61EBF0(v126);
      sub_24B65EF80(v126, type metadata accessor for OCCaptureData);
      return (id)sub_24B65EF80((uint64_t)v10, type metadata accessor for ObjectCaptureSession.Frame.Camera);
    }
LABEL_36:
    __break(1u);
  }
  return result;
}

void sub_24B660DCC()
{
  sub_24B6476B8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

void sub_24B660DDC()
{
  sub_24B6489A8(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_24B660DEC()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_24B660E34()
{
  sub_24B64B4EC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

void sub_24B660E40(void *a1, void *a2)
{
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v36 - v9;
  if (a1)
  {
    if (a2)
    {
      id v37 = a1;
      id v11 = a2;
      objc_msgSend(v37, sel_center);
      float32x4_t v36 = v12;
      objc_msgSend(v11, sel_center);
      float32x4_t v14 = vsubq_f32(v36, v13);
      float32x4_t v15 = vmulq_f32(v14, v14);
      if (sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v15, 2), vaddq_f32(v15, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v15.f32, 1))).f32[0]) <= 0.001)
      {

        id v35 = v37;
      }
      else
      {
        uint64_t v16 = sub_24B57CB70();
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v16, v4);
        id v17 = v37;
        uint64_t v18 = sub_24B6824B0();
        os_log_type_t v19 = sub_24B682B30();
        if (os_log_type_enabled(v18, v19))
        {
          uint64_t v20 = swift_slowAlloc();
          id v37 = (id)swift_slowAlloc();
          uint64_t v39 = (uint64_t)v37;
          *(_DWORD *)uint64_t v20 = 136380931;
          *(void *)&long long v38 = sub_24B5627B8(0xD000000000000022, 0x800000024B6913D0, &v39);
          sub_24B682CD0();
          *(_WORD *)(v20 + 12) = 2080;
          objc_msgSend(v17, sel_center, v20 + 14);
          long long v38 = v21;
          sub_24B562F04((uint64_t *)&unk_2697CC440);
          sub_24B5678F4((unint64_t *)&qword_2697CC0F0, (uint64_t *)&unk_2697CC440);
          uint64_t v22 = sub_24B682FD0();
          *(void *)&long long v38 = sub_24B5627B8(v22, v23, &v39);
          sub_24B682CD0();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24B55E000, v18, v19, "ObjectCaptureSession.%{private}s: Updated plane with center %s", (uint8_t *)v20, 0x16u);
          id v24 = v37;
          swift_arrayDestroy();
          MEMORY[0x24C5D6C00](v24, -1, -1);
          MEMORY[0x24C5D6C00](v20, -1, -1);
        }
        else
        {
        }
        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      }
    }
    else
    {
      id v25 = a1;
      uint64_t v26 = sub_24B57CB70();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v26, v4);
      id v27 = v25;
      float v28 = sub_24B6824B0();
      os_log_type_t v29 = sub_24B682B30();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = swift_slowAlloc();
        uint64_t v31 = swift_slowAlloc();
        uint64_t v39 = v31;
        *(_DWORD *)uint64_t v30 = 136380931;
        *(void *)&long long v38 = sub_24B5627B8(0xD000000000000022, 0x800000024B6913D0, &v39);
        sub_24B682CD0();
        *(_WORD *)(v30 + 12) = 2080;
        id v37 = (id)(v30 + 14);
        objc_msgSend(v27, sel_center);
        long long v38 = v32;
        sub_24B562F04((uint64_t *)&unk_2697CC440);
        sub_24B5678F4((unint64_t *)&qword_2697CC0F0, (uint64_t *)&unk_2697CC440);
        uint64_t v33 = sub_24B682FD0();
        *(void *)&long long v38 = sub_24B5627B8(v33, v34, &v39);
        sub_24B682CD0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24B55E000, v28, v29, "ObjectCaptureSession.%{private}s: Updated plane with center %s", (uint8_t *)v30, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v31, -1, -1);
        MEMORY[0x24C5D6C00](v30, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
  }
}

uint64_t sub_24B6613C0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24B6825D0();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x270FA5388](v4);
  float32x4_t v36 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24B682640();
  uint64_t v34 = *(void *)(v6 - 8);
  uint64_t v35 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v33 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_24B682C90();
  MEMORY[0x270FA5388](v32);
  uint64_t v8 = sub_24B6824D0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  id v13 = a1;
  float32x4_t v14 = sub_24B6824B0();
  os_log_type_t v15 = sub_24B682B30();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    aBlock[0] = v30;
    *(_DWORD *)uint64_t v16 = 136380931;
    uint64_t v39 = sub_24B5627B8(0xD000000000000028, 0x800000024B691330, aBlock);
    uint64_t v31 = v1;
    sub_24B682CD0();
    *(_WORD *)(v16 + 12) = 2082;
    uint64_t v29 = v8;
    sub_24B682CA0();
    uint64_t v17 = sub_24B682820();
    uint64_t v39 = sub_24B5627B8(v17, v18, aBlock);
    uint64_t v2 = v31;
    sub_24B682CD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24B55E000, v14, v15, "ObjectCaptureSession.%{private}s: ARCamera did change tracking state to %{public}s", (uint8_t *)v16, 0x16u);
    uint64_t v19 = v30;
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v19, -1, -1);
    MEMORY[0x24C5D6C00](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v29);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v2;
  *(void *)(v20 + 24) = v13;
  aBlock[4] = (uint64_t)sub_24B66E818;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24B566C04;
  aBlock[3] = (uint64_t)&unk_26FE907B0;
  long long v21 = _Block_copy(aBlock);
  id v22 = v13;
  id v23 = v2;
  id v24 = v33;
  sub_24B6825F0();
  uint64_t v39 = MEMORY[0x263F8EE78];
  sub_24B65D13C((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
  sub_24B562F04((uint64_t *)&unk_2697CC490);
  sub_24B5678F4((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
  id v25 = v36;
  uint64_t v26 = v38;
  sub_24B682D80();
  MEMORY[0x24C5D4CD0](0, v24, v25, v21);
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v25, v26);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v24, v35);
  return swift_release();
}

uint64_t sub_24B661920(uint64_t a1, unint64_t a2, const char *a3)
{
  uint64_t v6 = sub_24B6824D0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  id v11 = sub_24B6824B0();
  os_log_type_t v12 = sub_24B682B30();
  if (os_log_type_enabled(v11, v12))
  {
    unint64_t v17 = a2;
    unint64_t v18 = a3;
    uint64_t v13 = a1;
    float32x4_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v20 = v15;
    *(_DWORD *)float32x4_t v14 = 136380675;
    uint64_t v19 = sub_24B5627B8(v13, v17, &v20);
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v11, v12, v18, v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v15, -1, -1);
    MEMORY[0x24C5D6C00](v14, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t _s6CoreOC20ObjectCaptureSessionC34sessionShouldAttemptRelocalizationySbSo9ARSessionCF_0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24B6825D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24B682640();
  uint64_t v29 = *(void *)(v6 - 8);
  uint64_t v30 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v28 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24B6824D0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  uint64_t v13 = sub_24B6824B0();
  os_log_type_t v14 = sub_24B682B30();
  if (os_log_type_enabled(v13, v14))
  {
    id v25 = v1;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v27 = v2;
    uint64_t v16 = (uint8_t *)v15;
    uint64_t v17 = swift_slowAlloc();
    aBlock[0] = v17;
    uint64_t v26 = v5;
    *(_DWORD *)uint64_t v16 = 136380675;
    uint64_t v31 = sub_24B5627B8(0xD000000000000026, 0x800000024B691290, aBlock);
    uint64_t v1 = v25;
    uint64_t v5 = v26;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v13, v14, "ObjectCaptureSession.%{private}s: has been called.", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v17, -1, -1);
    unint64_t v18 = v16;
    uint64_t v2 = v27;
    MEMORY[0x24C5D6C00](v18, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v1;
  aBlock[4] = (uint64_t)sub_24B66E810;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24B566C04;
  aBlock[3] = (uint64_t)&unk_26FE90760;
  uint64_t v20 = _Block_copy(aBlock);
  id v21 = v1;
  id v22 = v28;
  sub_24B6825F0();
  uint64_t v31 = MEMORY[0x263F8EE78];
  sub_24B65D13C((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
  sub_24B562F04((uint64_t *)&unk_2697CC490);
  sub_24B5678F4((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
  sub_24B682D80();
  MEMORY[0x24C5D4CD0](0, v22, v5, v20);
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v22, v30);
  swift_release();
  return 1;
}

void sub_24B661FA0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24B6825D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v37 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_24B682640();
  uint64_t v36 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v35 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24B6824D0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  uint64_t v13 = sub_24B6824B0();
  os_log_type_t v14 = sub_24B682B30();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v34 = v4;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v32 = a1;
    uint64_t v16 = (uint8_t *)v15;
    uint64_t v17 = (void *)swift_slowAlloc();
    aBlock[0] = v17;
    uint64_t v33 = v2;
    *(_DWORD *)uint64_t v16 = 136380675;
    uint64_t v40 = sub_24B5627B8(0xD00000000000001CLL, 0x800000024B691270, (uint64_t *)aBlock);
    uint64_t v2 = v33;
    uint64_t v4 = v34;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v13, v14, "ObjectCaptureSession.%{private}s: has been called.", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v17, -1, -1);
    unint64_t v18 = v16;
    a1 = v32;
    MEMORY[0x24C5D6C00](v18, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  aBlock[0] = a1;
  id v19 = a1;
  sub_24B562F04(&qword_2697CC0A8);
  type metadata accessor for ARError(0);
  if (swift_dynamicCast())
  {
    uint64_t v20 = (void *)v40;
    id v21 = (void *)swift_allocObject();
    void v21[2] = v20;
    void v21[3] = v2;
    v21[4] = a1;
    aBlock[4] = sub_24B66E5A0;
    aBlock[5] = v21;
    aBlock[0] = (void *)MEMORY[0x263EF8330];
    aBlock[1] = (void *)1107296256;
    aBlock[2] = sub_24B566C04;
    aBlock[3] = &unk_26FE90710;
    id v22 = _Block_copy(aBlock);
    id v23 = a1;
    id v24 = v20;
    id v25 = v2;
    id v26 = v24;
    id v27 = v25;
    uint64_t v28 = v35;
    sub_24B6825F0();
    uint64_t v40 = MEMORY[0x263F8EE78];
    sub_24B65D13C((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
    sub_24B562F04((uint64_t *)&unk_2697CC490);
    sub_24B5678F4((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
    uint64_t v29 = v37;
    sub_24B682D80();
    MEMORY[0x24C5D4CD0](0, v28, v29, v22);
    _Block_release(v22);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v29, v4);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v28, v38);
    swift_release();
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v30 = a1;
    sub_24B682560();
    swift_release();
    swift_release();
    uint64_t v31 = aBlock[0];
    swift_getKeyPath();
    swift_getKeyPath();
    aBlock[0] = a1;
    v2;
    sub_24B682570();
    aBlock[0] = v31;
    sub_24B612878(aBlock);
    sub_24B65A19C(v31);
  }
}

uint64_t sub_24B662550(uint64_t a1)
{
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  uint64_t v7 = sub_24B6824B0();
  os_log_type_t v8 = sub_24B682B30();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v15 = v10;
    *(_DWORD *)uint64_t v9 = 136380931;
    uint64_t v14 = sub_24B5627B8(0xD000000000000015, 0x800000024B691250, &v15);
    sub_24B682CD0();
    *(_WORD *)(v9 + 12) = 2082;
    uint64_t v14 = a1;
    type metadata accessor for ARSessionState(0);
    uint64_t v11 = sub_24B682820();
    uint64_t v14 = sub_24B5627B8(v11, v12, &v15);
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24B55E000, v7, v8, "ObjectCaptureSession.%{private}s: has been called. The session state did change to %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v10, -1, -1);
    MEMORY[0x24C5D6C00](v9, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t type metadata accessor for ObjectCaptureSession.BoundingBoxAnchor()
{
  return self;
}

uint64_t sub_24B6627B4()
{
  return MEMORY[0x270FA0238](v0, 25, 7);
}

void sub_24B6627EC()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugTapPosition) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_24B662804()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_24B662814(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(*(void *)(v1 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugTapPosition);
}

void sub_24B66282C()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugPlaneDetection) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_24B662844()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_24B662854(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(*(void *)(v1 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugPlaneDetection);
}

void sub_24B66286C()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugMaskingVoxel) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_24B662884()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_24B662894(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(*(void *)(v1 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugMaskingVoxel);
}

void sub_24B6628AC()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugCameraControl) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_24B6628C4()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_24B6628D4(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(*(void *)(v1 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugCameraControl);
}

void sub_24B6628EC()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugDebugVoxels) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_24B662904()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_24B662914(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(*(void *)(v1 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugDebugVoxels);
}

void sub_24B66292C()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugTsdfDepth) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_24B662944()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_24B662954(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(*(void *)(v1 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugTsdfDepth);
}

void sub_24B66296C()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugSurfaceGeometryData) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_24B662984()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_24B662994(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(*(void *)(v1 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugSurfaceGeometryData);
}

void sub_24B6629AC()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugCoverageGuideVoxels) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_24B6629C4()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_24B6629D4(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(*(void *)(v1 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugCoverageGuideVoxels);
}

void sub_24B6629EC()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugExplicitFeedbackEnabled) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_24B662A04()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_24B662A14()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugAutoCaptureEnabled) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_24B662A2C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24B662A3C()
{
  return MEMORY[0x270FA0238](v0, 33, 7);
}

void sub_24B662A74()
{
  char v1 = *(unsigned char *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugAdjustedCaptureCoolDown;
  *(void *)uint64_t v2 = *(void *)(v0 + 24);
  *(unsigned char *)(v2 + 8) = v1;
}

uint64_t sub_24B662A94()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24B662AA4()
{
  uint64_t v1 = sub_24B6822E0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_24B662B70()
{
  uint64_t v1 = *(void *)(sub_24B6822E0() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_24B651BCC(v2, v3);
}

uint64_t sub_24B662BD4()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24B662BE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__replayVideoURL;
  swift_beginAccess();
  return sub_24B563A6C(v3, a1, &qword_2697CC1F0);
}

void sub_24B662C54()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugWriteAllFramesData) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_24B662C6C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_24B662C7C(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(*(void *)(v1 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugWriteAllFramesData);
}

void sub_24B662C94()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__bypassAllAlgos) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_24B662CAC()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_24B662CBC()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__voxelIntegrationEnabled) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_24B662CD4()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_24B662CE4()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__explicitFeedbackEnabled) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_24B662CFC()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_24B662D0C()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__coverageEnabled) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_24B662D24()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_24B662D34()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__autoCaptureEnabled) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_24B662D4C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_24B662D5C()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__mobileSfMEnabled) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_24B662D74()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_24B662D84()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__mobileSfMiPhoneOverride) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_24B662D9C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_24B662DAC()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__captureRateControlEnabled) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_24B662DC4()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_24B662DD4(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(*(void *)(v1 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugOCBundleWriteDisabled);
}

__n128 sub_24B662DEC@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (int *)sub_24B562F04(&qword_2697CCD50);
  sub_24B56D1EC(v17, (double *)(a1 + v3[12]), v1);
  uint64_t v4 = *(void *)v17;
  long long v16 = *(_OWORD *)&v17[8];
  uint64_t v5 = *(void *)&v17[24];
  uint64_t v6 = v18;
  uint64_t v7 = sub_24B56DF04((uint64_t)v17);
  uint64_t v8 = v20;
  __n128 result = *(__n128 *)v17;
  long long v10 = *(_OWORD *)&v17[16];
  long long v11 = v18;
  long long v12 = v19;
  uint64_t v13 = a1 + v3[16];
  uint64_t v14 = a1 + v3[20];
  *(void *)a1 = v4;
  *(_OWORD *)(a1 + 8) = v16;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)uint64_t v13 = v7;
  *(unsigned char *)(v13 + 8) = v15 & 1;
  *(__n128 *)uint64_t v14 = result;
  *(_OWORD *)(v14 + 16) = v10;
  *(_OWORD *)(v14 + 32) = v11;
  *(_OWORD *)(v14 + 48) = v12;
  *(void *)(v14 + 64) = v8;
  return result;
}

unint64_t sub_24B662EB8()
{
  unint64_t result = qword_2697CCB40;
  if (!qword_2697CCB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697CCB40);
  }
  return result;
}

unint64_t sub_24B662F14()
{
  unint64_t result = qword_2697CCB50;
  if (!qword_2697CCB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697CCB50);
  }
  return result;
}

unint64_t sub_24B662F6C()
{
  unint64_t result = qword_2697CCB58;
  if (!qword_2697CCB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697CCB58);
  }
  return result;
}

unint64_t sub_24B662FC4()
{
  unint64_t result = qword_2697CCB60;
  if (!qword_2697CCB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697CCB60);
  }
  return result;
}

uint64_t sub_24B663018()
{
  return type metadata accessor for ObjectCaptureSession(0);
}

void sub_24B663020()
{
  sub_24B66F198(319, &qword_2697CCB70, (uint64_t)&type metadata for ObjectCaptureSession.State, MEMORY[0x263EFDE58]);
  if (v0 <= 0x3F)
  {
    sub_24B66F198(319, &qword_2697CCB78, MEMORY[0x263F8D4F8], MEMORY[0x263EFDE58]);
    if (v1 <= 0x3F)
    {
      sub_24B682410();
      if (v2 <= 0x3F)
      {
        sub_24B663AE4(319, &qword_2697CCB80, (void (*)(uint64_t))type metadata accessor for ObjectCaptureSession.Frame);
        if (v3 <= 0x3F)
        {
          sub_24B663AE4(319, (unint64_t *)&qword_2697CC5D8, MEMORY[0x263F06EA8]);
          if (v4 <= 0x3F) {
            swift_updateClassMetadata2();
          }
        }
      }
    }
  }
}

uint64_t method lookup function for ObjectCaptureSession(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ObjectCaptureSession);
}

uint64_t dispatch thunk of ObjectCaptureSession.state.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x420))();
}

uint64_t dispatch thunk of ObjectCaptureSession.$state.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x438))();
}

uint64_t dispatch thunk of ObjectCaptureSession.spi.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x450))();
}

uint64_t dispatch thunk of ObjectCaptureSession.estimatedReconstructionTime.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x468))();
}

uint64_t dispatch thunk of ObjectCaptureSession.objectFlippable.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x480))();
}

uint64_t dispatch thunk of ObjectCaptureSession.isOverCaptureEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x498))();
}

uint64_t dispatch thunk of ObjectCaptureSession.enableOverCapture()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x4B0))();
}

uint64_t dispatch thunk of ObjectCaptureSession.isFreeformModeEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x4B8))();
}

uint64_t dispatch thunk of ObjectCaptureSession.canTakeManualShot.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x4D0))();
}

uint64_t dispatch thunk of ObjectCaptureSession.$canTakeManualShot.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x4E8))();
}

uint64_t dispatch thunk of ObjectCaptureSession.__allocating_init(arSession:mtlDevice:motionManager:snapshotURL:)()
{
  return (*(uint64_t (**)(void))(v0 + 1280))();
}

uint64_t dispatch thunk of ObjectCaptureSession.__allocating_init(arSession:mtlDevice:motionManager:snapshotURL:configuration:)()
{
  return (*(uint64_t (**)(void))(v0 + 1288))();
}

uint64_t dispatch thunk of ObjectCaptureSession.run()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x510))();
}

uint64_t dispatch thunk of ObjectCaptureSession.pause()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x518))();
}

uint64_t dispatch thunk of ObjectCaptureSession.pause(fastResuming:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x520))();
}

uint64_t dispatch thunk of ObjectCaptureSession.resume()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x528))();
}

uint64_t dispatch thunk of ObjectCaptureSession.detectObject(at:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x530))();
}

uint64_t dispatch thunk of ObjectCaptureSession.startCapturing(inside:)(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 64);
  unint64_t v3 = *(uint64_t (**)(_OWORD *))((*MEMORY[0x263F8EED0] & *v1) + 0x538);
  long long v4 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v4;
  long long v5 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v5;
  char v8 = v2;
  return v3(v7) & 1;
}

uint64_t dispatch thunk of ObjectCaptureSession.startCapturing(inside:with:)(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 64);
  unint64_t v3 = *(uint64_t (**)(_OWORD *))((*MEMORY[0x263F8EED0] & *v1) + 0x540);
  long long v4 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v4;
  long long v5 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v5;
  char v8 = v2;
  return v3(v7) & 1;
}

uint64_t dispatch thunk of ObjectCaptureSession.finish()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x548))();
}

uint64_t dispatch thunk of ObjectCaptureSession.cancel()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x550))();
}

uint64_t dispatch thunk of ObjectCaptureSession.takeManualShot()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x558))();
}

uint64_t dispatch thunk of ObjectCaptureSession.resetCapturePoseGraph()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x560))();
}

uint64_t dispatch thunk of ObjectCaptureSession.updateFreeformScanVolume(boundingBox:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x568))();
}

uint64_t dispatch thunk of ObjectCaptureSession.captureCoolDownTime.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x570))();
}

void sub_24B663AE4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_24B682CC0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for ObjectCaptureSession.Configuration(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ObjectCaptureSession.Configuration(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24B663CA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ObjectCaptureSession.Configuration()
{
  return &type metadata for ObjectCaptureSession.Configuration;
}

ValueMetadata *type metadata accessor for ObjectCaptureSession.HardwareSpecs()
{
  return &type metadata for ObjectCaptureSession.HardwareSpecs;
}

void *initializeBufferWithCopyOfBuffer for ObjectCaptureSession.Error(void *a1, void **a2)
{
  int v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    id v4 = v3;
  }
  *a1 = v3;
  return a1;
}

void destroy for ObjectCaptureSession.Error(void **a1)
{
  unint64_t v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF) {
}
  }

void **assignWithCopy for ObjectCaptureSession.Error(void **a1, void **a2)
{
  int v3 = *a1;
  id v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF) {
      id v7 = v4;
    }
    *a1 = v4;
  }
  else if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    *a1 = *a2;
  }
  else
  {
    id v5 = v4;
    unsigned int v6 = *a1;
    *a1 = v4;
  }
  return a1;
}

void *initializeWithTake for ObjectCaptureSession.Error(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

void **assignWithTake for ObjectCaptureSession.Error(void **a1, unint64_t *a2)
{
  int v3 = *a1;
  unint64_t v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF) {
    goto LABEL_6;
  }
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectCaptureSession.Error(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFF9 && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483641);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 6;
  if (v4 >= 8) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureSession.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF9)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483641;
    if (a3 >= 0x7FFFFFF9) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFF9) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 6;
    }
  }
  return result;
}

uint64_t sub_24B663EF0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_24B663F08(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for ObjectCaptureSession.Error()
{
  return &type metadata for ObjectCaptureSession.Error;
}

void destroy for ObjectCaptureSession.State(void **a1)
{
  uint64_t v1 = *a1;
  int v2 = -1;
  if ((unint64_t)v1 < 0xFFFFFFFF) {
    int v2 = (int)v1;
  }
  if (v2 - 7 < 0 && (unint64_t)v1 >= 7) {
}
  }

void *_s6CoreOC20ObjectCaptureSessionC5StateOwCP_0(void *a1, void **a2)
{
  uint64_t v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    unsigned int v4 = *a2;
  }
  if ((int)v4 - 7 < 0 && (unint64_t)v3 >= 7) {
    id v5 = v3;
  }
  *a1 = v3;
  return a1;
}

void **assignWithCopy for ObjectCaptureSession.State(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)v3 >= 0xFFFFFFFF) {
    int v5 = -1;
  }
  else {
    int v5 = (int)v3;
  }
  int v6 = v5 - 7;
  id v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    unsigned int v4 = *a2;
  }
  int v8 = v4 - 7;
  if ((v6 & 0x80000000) == 0)
  {
    if ((v8 & 0x80000000) == 0)
    {
LABEL_15:
      *a1 = v7;
      return a1;
    }
LABEL_13:
    if ((unint64_t)v7 >= 7) {
      id v10 = v7;
    }
    goto LABEL_15;
  }
  if ((v8 & 0x80000000) == 0)
  {
    if ((unint64_t)v3 >= 7)
    {

      id v7 = *a2;
    }
    goto LABEL_15;
  }
  if ((unint64_t)v3 < 7) {
    goto LABEL_13;
  }
  if ((unint64_t)v7 >= 7)
  {
    id v12 = v7;
    uint64_t v13 = *a1;
    *a1 = v7;
  }
  else
  {

    *a1 = *a2;
  }
  return a1;
}

void **assignWithTake for ObjectCaptureSession.State(void **a1, unint64_t *a2)
{
  uint64_t v3 = *a1;
  int v4 = -1;
  if ((unint64_t)v3 < 0xFFFFFFFF) {
    int v4 = (int)v3;
  }
  unint64_t v5 = *a2;
  if (v4 - 7 >= 0) {
    goto LABEL_4;
  }
  LODWORD(v7) = -1;
  if (v5 < 0xFFFFFFFF) {
    unint64_t v7 = *a2;
  }
  if ((int)v7 - 7 < 0)
  {
    if ((unint64_t)v3 >= 7)
    {
      if (v5 >= 7)
      {
        *a1 = (void *)v5;

        return a1;
      }
      goto LABEL_13;
    }
  }
  else if ((unint64_t)v3 >= 7)
  {
LABEL_13:
  }
LABEL_4:
  *a1 = (void *)v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectCaptureSession.State(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFED && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483630);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 7;
  if (v4 < 0) {
    int v4 = -1;
  }
  unsigned int v5 = v4 + 1;
  unsigned int v6 = v4 - 10;
  if (v5 >= 0xC) {
    return v6;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureSession.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFEE)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483630;
    if (a3 >= 0x7FFFFFEE) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFEE) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 17;
    }
  }
  return result;
}

uint64_t sub_24B6641B8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 7;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

void *sub_24B6641DC(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFF8)
  {
    int v2 = -2147483641;
  }
  else
  {
    if (!a2) {
      return result;
    }
    int v2 = 6;
  }
  *unint64_t result = v2 + a2;
  return result;
}

ValueMetadata *type metadata accessor for ObjectCaptureSession.State()
{
  return &type metadata for ObjectCaptureSession.State;
}

uint64_t *initializeBufferWithCopyOfBuffer for ObjectCaptureSession.Frame(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    id v25 = (uint64_t *)(v24 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    unsigned int v5 = (void *)a2[1];
    *a1 = *a2;
    a1[1] = (uint64_t)v5;
    unsigned int v6 = (void *)a2[2];
    int8x16_t v110 = (void *)a2[3];
    a1[2] = (uint64_t)v6;
    a1[3] = (uint64_t)v110;
    uint64_t v7 = a3[8];
    int v8 = (_OWORD *)((char *)a1 + v7);
    uint64_t v9 = (char *)a2 + v7;
    long long v10 = *(_OWORD *)((char *)a2 + v7 + 16);
    *int v8 = *(_OWORD *)((char *)a2 + v7);
    v8[1] = v10;
    long long v11 = *(_OWORD *)((char *)a2 + v7 + 96);
    long long v12 = *(_OWORD *)((char *)a2 + v7 + 64);
    v8[5] = *(_OWORD *)((char *)a2 + v7 + 80);
    v8[6] = v11;
    long long v13 = *(_OWORD *)((char *)a2 + v7 + 48);
    v8[2] = *(_OWORD *)((char *)a2 + v7 + 32);
    id v8[3] = v13;
    v8[4] = v12;
    uint64_t v14 = (int *)type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
    uint64_t v15 = v14[6];
    __dst = (char *)v8 + v15;
    long long v16 = &v9[v15];
    uint64_t v17 = sub_24B682C80();
    uint64_t v18 = *(void *)(v17 - 8);
    long long v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    id v20 = v5;
    id v21 = v6;
    id v22 = v110;
    uint64_t v108 = v19;
    uint64_t v109 = v17;
    if (v19(v16, 2, v17))
    {
      uint64_t v23 = sub_24B682C90();
      memcpy(__dst, v16, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(__dst, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 2, v17);
    }
    uint64_t v26 = v14[7];
    id v27 = (char *)v8 + v26;
    uint64_t v28 = &v9[v26];
    long long v29 = *((_OWORD *)v28 + 3);
    *((_OWORD *)v27 + 2) = *((_OWORD *)v28 + 2);
    *((_OWORD *)v27 + 3) = v29;
    v27[64] = v28[64];
    long long v30 = *((_OWORD *)v28 + 1);
    *(_OWORD *)id v27 = *(_OWORD *)v28;
    *((_OWORD *)v27 + 1) = v30;
    uint64_t v31 = v14[8];
    uint64_t v32 = *(void **)&v9[v31];
    *(void *)((char *)v8 + v31) = v32;
    uint64_t v33 = v14[9];
    uint64_t v34 = (char *)v8 + v33;
    uint64_t v35 = &v9[v33];
    long long v36 = *((_OWORD *)v35 + 3);
    *((_OWORD *)v34 + 2) = *((_OWORD *)v35 + 2);
    *((_OWORD *)v34 + 3) = v36;
    v34[64] = v35[64];
    long long v37 = *((_OWORD *)v35 + 1);
    *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
    *((_OWORD *)v34 + 1) = v37;
    id v25 = a1;
    uint64_t v38 = a3[9];
    uint64_t v39 = (_OWORD *)((char *)a1 + v38);
    uint64_t v40 = (_OWORD *)((char *)a2 + v38);
    uint64_t v41 = type metadata accessor for ObjectCaptureSession.Frame.Object(0);
    uint64_t v42 = *(void *)(v41 - 8);
    uint64_t v43 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v42 + 48);
    id v44 = v32;
    if (v43(v40, 1, v41))
    {
      uint64_t v45 = sub_24B562F04(&qword_2697CC9A8);
      memcpy(v39, v40, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      long long v46 = v40[1];
      *uint64_t v39 = *v40;
      v39[1] = v46;
      long long v47 = v40[3];
      v39[2] = v40[2];
      uint64_t v39[3] = v47;
      long long v48 = v40[5];
      unsigned char v39[4] = v40[4];
      v39[5] = v48;
      long long v49 = v40[7];
      v39[6] = v40[6];
      v39[7] = v49;
      uint64_t v50 = *(int *)(v41 + 24);
      uint64_t v51 = (char *)v39 + v50;
      id v52 = (char *)v40 + v50;
      if (v108((char *)v40 + v50, 2, v109))
      {
        uint64_t v53 = sub_24B682C90();
        memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v51, v52, v109);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v51, 0, 2, v109);
      }
      *(void *)((char *)v39 + *(int *)(v41 + 28)) = *(void *)((char *)v40 + *(int *)(v41 + 28));
      id v54 = *(void (**)(_OWORD *, void, uint64_t, uint64_t))(v42 + 56);
      swift_bridgeObjectRetain();
      v54(v39, 0, 1, v41);
    }
    uint64_t v55 = a3[11];
    *(_DWORD *)((char *)a1 + a3[10]) = *(_DWORD *)((char *)a2 + a3[10]);
    *(uint64_t *)((char *)a1 + v55) = *(uint64_t *)((char *)a2 + v55);
    uint64_t v56 = a3[12];
    os_log_type_t v57 = (char *)a1 + v56;
    uint64_t v58 = (char *)a2 + v56;
    if (*(void *)v58)
    {
      uint64_t v59 = *((void *)v58 + 1);
      uint64_t v60 = *((void *)v58 + 2);
      *(void *)os_log_type_t v57 = *(void *)v58;
      *((void *)v57 + 1) = v59;
      *((void *)v57 + 2) = v60;
      long long v61 = *((_OWORD *)v58 + 3);
      *((_OWORD *)v57 + 2) = *((_OWORD *)v58 + 2);
      *((_OWORD *)v57 + 3) = v61;
      long long v62 = *((_OWORD *)v58 + 5);
      *((_OWORD *)v57 + 4) = *((_OWORD *)v58 + 4);
      *((_OWORD *)v57 + 5) = v62;
      swift_retain();
      swift_retain();
      swift_retain();
    }
    else
    {
      long long v63 = *((_OWORD *)v58 + 3);
      *((_OWORD *)v57 + 2) = *((_OWORD *)v58 + 2);
      *((_OWORD *)v57 + 3) = v63;
      long long v64 = *((_OWORD *)v58 + 5);
      *((_OWORD *)v57 + 4) = *((_OWORD *)v58 + 4);
      *((_OWORD *)v57 + 5) = v64;
      long long v65 = *((_OWORD *)v58 + 1);
      *(_OWORD *)os_log_type_t v57 = *(_OWORD *)v58;
      *((_OWORD *)v57 + 1) = v65;
    }
    uint64_t v66 = a3[13];
    long long v67 = (char *)a1 + v66;
    long long v68 = (char *)a2 + v66;
    uint64_t v69 = *(uint64_t *)((char *)a2 + v66 + 680);
    if (v69)
    {
      if (*(void *)v68)
      {
        uint64_t v70 = *((void *)v68 + 1);
        uint64_t v71 = *((void *)v68 + 2);
        *(void *)long long v67 = *(void *)v68;
        *((void *)v67 + 1) = v70;
        uint64_t v72 = v69;
        uint64_t v73 = *((void *)v68 + 3);
        uint64_t v74 = *((void *)v68 + 4);
        *((void *)v67 + 2) = v71;
        *((void *)v67 + 3) = v73;
        uint64_t v75 = *((void *)v68 + 5);
        uint64_t v76 = *((void *)v68 + 6);
        *((void *)v67 + 4) = v74;
        *((void *)v67 + 5) = v75;
        uint64_t v78 = *((void *)v68 + 7);
        uint64_t v77 = *((void *)v68 + 8);
        *((void *)v67 + 6) = v76;
        *((void *)v67 + 7) = v78;
        *((void *)v67 + 8) = v77;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v69 = v72;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v79 = *((_OWORD *)v68 + 3);
        *((_OWORD *)v67 + 2) = *((_OWORD *)v68 + 2);
        *((_OWORD *)v67 + 3) = v79;
        *((void *)v67 + 8) = *((void *)v68 + 8);
        long long v80 = *((_OWORD *)v68 + 1);
        *(_OWORD *)long long v67 = *(_OWORD *)v68;
        *((_OWORD *)v67 + 1) = v80;
      }
      *((void *)v67 + 10) = *((void *)v68 + 10);
      long long v81 = *((_OWORD *)v68 + 7);
      *((_OWORD *)v67 + 6) = *((_OWORD *)v68 + 6);
      *((_OWORD *)v67 + 7) = v81;
      long long v82 = *((_OWORD *)v68 + 9);
      *((_OWORD *)v67 + 8) = *((_OWORD *)v68 + 8);
      *((_OWORD *)v67 + 9) = v82;
      *((void *)v67 + 20) = *((void *)v68 + 20);
      long long v83 = *((_OWORD *)v68 + 14);
      *((_OWORD *)v67 + 13) = *((_OWORD *)v68 + 13);
      *((_OWORD *)v67 + 14) = v83;
      long long v84 = *((_OWORD *)v68 + 12);
      *((_OWORD *)v67 + 11) = *((_OWORD *)v68 + 11);
      *((_OWORD *)v67 + 12) = v84;
      uint64_t v85 = (void *)*((void *)v68 + 30);
      *((void *)v67 + 30) = v85;
      *((void *)v67 + 32) = *((void *)v68 + 32);
      long long v86 = *((_OWORD *)v68 + 20);
      *((_OWORD *)v67 + 19) = *((_OWORD *)v68 + 19);
      *((_OWORD *)v67 + 20) = v86;
      long long v87 = *((_OWORD *)v68 + 18);
      *((_OWORD *)v67 + 17) = *((_OWORD *)v68 + 17);
      *((_OWORD *)v67 + 18) = v87;
      uint64_t v88 = *((void *)v68 + 42);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v89 = v85;
      swift_bridgeObjectRetain();
      if (v88)
      {
        uint64_t v90 = *((void *)v68 + 43);
        *((void *)v67 + 42) = v88;
        *((void *)v67 + 43) = v90;
        long long v91 = *((_OWORD *)v68 + 23);
        *((_OWORD *)v67 + 22) = *((_OWORD *)v68 + 22);
        *((_OWORD *)v67 + 23) = v91;
        long long v92 = *((_OWORD *)v68 + 25);
        *((_OWORD *)v67 + 24) = *((_OWORD *)v68 + 24);
        *((_OWORD *)v67 + 25) = v92;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v93 = *((_OWORD *)v68 + 24);
        *((_OWORD *)v67 + 23) = *((_OWORD *)v68 + 23);
        *((_OWORD *)v67 + 24) = v93;
        *((_OWORD *)v67 + 25) = *((_OWORD *)v68 + 25);
        long long v94 = *((_OWORD *)v68 + 22);
        *((_OWORD *)v67 + 21) = *((_OWORD *)v68 + 21);
        *((_OWORD *)v67 + 22) = v94;
      }
      id v25 = a1;
      long long v95 = (void *)*((void *)v68 + 52);
      *((void *)v67 + 52) = v95;
      *((void *)v67 + 54) = *((void *)v68 + 54);
      long long v96 = *((_OWORD *)v68 + 29);
      *((_OWORD *)v67 + 28) = *((_OWORD *)v68 + 28);
      *((_OWORD *)v67 + 29) = v96;
      long long v97 = *((_OWORD *)v68 + 31);
      *((_OWORD *)v67 + 30) = *((_OWORD *)v68 + 30);
      *((_OWORD *)v67 + 31) = v97;
      *((void *)v67 + 64) = *((void *)v68 + 64);
      long long v98 = *((_OWORD *)v68 + 33);
      long long v99 = *((_OWORD *)v68 + 34);
      long long v100 = *((_OWORD *)v68 + 36);
      *((_OWORD *)v67 + 35) = *((_OWORD *)v68 + 35);
      *((_OWORD *)v67 + 36) = v100;
      *((_OWORD *)v67 + 33) = v98;
      *((_OWORD *)v67 + 34) = v99;
      *((_DWORD *)v67 + 148) = *((_DWORD *)v68 + 148);
      int8x16_t v101 = (void *)*((void *)v68 + 75);
      *((void *)v67 + 75) = v101;
      *((void *)v67 + 76) = *((void *)v68 + 76);
      v67[620] = v68[620];
      *((_DWORD *)v67 + 154) = *((_DWORD *)v68 + 154);
      long long v102 = *((_OWORD *)v68 + 39);
      long long v103 = *((_OWORD *)v68 + 40);
      long long v104 = *((_OWORD *)v68 + 41);
      *(void *)(v67 + 669) = *(void *)(v68 + 669);
      *((_OWORD *)v67 + 40) = v103;
      *((_OWORD *)v67 + 41) = v104;
      *((_OWORD *)v67 + 39) = v102;
      *((void *)v67 + 85) = v69;
      id v105 = v95;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v106 = v101;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      memcpy((char *)a1 + v66, (char *)a2 + v66, 0x2B0uLL);
    }
  }
  return v25;
}

uint64_t destroy for ObjectCaptureSession.Frame(id *a1, int *a2)
{
  int v4 = (char *)a1 + a2[8];
  uint64_t v5 = type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  unsigned int v6 = &v4[*(int *)(v5 + 24)];
  uint64_t v7 = sub_24B682C80();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 2, v7)) {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  }

  long long v10 = (char *)a1 + a2[9];
  uint64_t v11 = type metadata accessor for ObjectCaptureSession.Frame.Object(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {
    long long v12 = &v10[*(int *)(v11 + 24)];
    if (!v9(v12, 2, v7)) {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    }
    swift_bridgeObjectRelease();
  }
  uint64_t result = *(uint64_t *)((char *)a1 + a2[12]);
  if (result)
  {
    swift_release();
    swift_release();
    uint64_t result = swift_release();
  }
  uint64_t v14 = (id *)((char *)a1 + a2[13]);
  if (v14[85])
  {
    if (*v14)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    if (v14[42])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for ObjectCaptureSession.Frame(void *a1, void *a2, int *a3)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  int v4 = (void *)a2[2];
  id v106 = (void *)a2[3];
  a1[2] = v4;
  a1[3] = v106;
  uint64_t v5 = a3[8];
  unsigned int v6 = (_OWORD *)((char *)a1 + v5);
  uint64_t v7 = (char *)a2 + v5;
  long long v8 = *(_OWORD *)((char *)a2 + v5 + 16);
  *unsigned int v6 = *(_OWORD *)((char *)a2 + v5);
  v6[1] = v8;
  long long v9 = *(_OWORD *)((char *)a2 + v5 + 96);
  long long v10 = *(_OWORD *)((char *)a2 + v5 + 64);
  v6[5] = *(_OWORD *)((char *)a2 + v5 + 80);
  v6[6] = v9;
  long long v11 = *(_OWORD *)((char *)a2 + v5 + 48);
  v6[2] = *(_OWORD *)((char *)a2 + v5 + 32);
  id v6[3] = v11;
  v6[4] = v10;
  long long v12 = (int *)type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  uint64_t v13 = v12[6];
  __dst = (char *)v6 + v13;
  uint64_t v14 = &v7[v13];
  uint64_t v15 = sub_24B682C80();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  id v18 = v3;
  id v19 = v4;
  id v20 = v106;
  long long v104 = v17;
  uint64_t v105 = v15;
  if (v17(v14, 2, v15))
  {
    uint64_t v21 = sub_24B682C90();
    memcpy(__dst, v14, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(__dst, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 2, v15);
  }
  uint64_t v22 = v12[7];
  uint64_t v23 = (char *)v6 + v22;
  uint64_t v24 = &v7[v22];
  long long v25 = *((_OWORD *)v24 + 3);
  *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
  *((_OWORD *)v23 + 3) = v25;
  v23[64] = v24[64];
  long long v26 = *((_OWORD *)v24 + 1);
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v26;
  uint64_t v27 = v12[8];
  uint64_t v28 = *(void **)&v7[v27];
  *(void *)((char *)v6 + v27) = v28;
  uint64_t v29 = v12[9];
  long long v30 = (char *)v6 + v29;
  uint64_t v31 = &v7[v29];
  long long v32 = *((_OWORD *)v31 + 3);
  *((_OWORD *)v30 + 2) = *((_OWORD *)v31 + 2);
  *((_OWORD *)v30 + 3) = v32;
  v30[64] = v31[64];
  long long v33 = *((_OWORD *)v31 + 1);
  *(_OWORD *)long long v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v33;
  uint64_t v34 = a1;
  uint64_t v35 = a3[9];
  long long v36 = (_OWORD *)((char *)a1 + v35);
  long long v37 = (_OWORD *)((char *)a2 + v35);
  uint64_t v38 = type metadata accessor for ObjectCaptureSession.Frame.Object(0);
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v39 + 48);
  id v41 = v28;
  if (v40(v37, 1, v38))
  {
    uint64_t v42 = sub_24B562F04(&qword_2697CC9A8);
    memcpy(v36, v37, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    long long v43 = v37[1];
    *long long v36 = *v37;
    v36[1] = v43;
    long long v44 = v37[3];
    v36[2] = v37[2];
    v36[3] = v44;
    long long v45 = v37[5];
    v36[4] = v37[4];
    v36[5] = v45;
    long long v46 = v37[7];
    v36[6] = v37[6];
    v36[7] = v46;
    uint64_t v47 = *(int *)(v38 + 24);
    long long v48 = (char *)v36 + v47;
    long long v49 = (char *)v37 + v47;
    if (v104((char *)v37 + v47, 2, v105))
    {
      uint64_t v50 = sub_24B682C90();
      memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v48, v49, v105);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v48, 0, 2, v105);
    }
    *(void *)((char *)v36 + *(int *)(v38 + 28)) = *(void *)((char *)v37 + *(int *)(v38 + 28));
    uint64_t v51 = *(void (**)(_OWORD *, void, uint64_t, uint64_t))(v39 + 56);
    swift_bridgeObjectRetain();
    v51(v36, 0, 1, v38);
    uint64_t v34 = a1;
  }
  uint64_t v52 = a3[11];
  *(_DWORD *)((char *)v34 + a3[10]) = *(_DWORD *)((char *)a2 + a3[10]);
  *(void *)((char *)v34 + v52) = *(void *)((char *)a2 + v52);
  uint64_t v53 = a3[12];
  id v54 = (char *)v34 + v53;
  uint64_t v55 = (char *)a2 + v53;
  if (*(void *)v55)
  {
    uint64_t v56 = *((void *)v55 + 1);
    uint64_t v57 = *((void *)v55 + 2);
    *(void *)id v54 = *(void *)v55;
    *((void *)v54 + 1) = v56;
    *((void *)v54 + 2) = v57;
    long long v58 = *((_OWORD *)v55 + 3);
    *((_OWORD *)v54 + 2) = *((_OWORD *)v55 + 2);
    *((_OWORD *)v54 + 3) = v58;
    long long v59 = *((_OWORD *)v55 + 5);
    *((_OWORD *)v54 + 4) = *((_OWORD *)v55 + 4);
    *((_OWORD *)v54 + 5) = v59;
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v60 = *((_OWORD *)v55 + 3);
    *((_OWORD *)v54 + 2) = *((_OWORD *)v55 + 2);
    *((_OWORD *)v54 + 3) = v60;
    long long v61 = *((_OWORD *)v55 + 5);
    *((_OWORD *)v54 + 4) = *((_OWORD *)v55 + 4);
    *((_OWORD *)v54 + 5) = v61;
    long long v62 = *((_OWORD *)v55 + 1);
    *(_OWORD *)id v54 = *(_OWORD *)v55;
    *((_OWORD *)v54 + 1) = v62;
  }
  uint64_t v63 = a3[13];
  long long v64 = (char *)v34 + v63;
  long long v65 = (char *)a2 + v63;
  uint64_t v66 = *(void *)((char *)a2 + v63 + 680);
  if (v66)
  {
    if (*(void *)v65)
    {
      uint64_t v67 = *((void *)v65 + 1);
      uint64_t v68 = *((void *)v65 + 2);
      *(void *)long long v64 = *(void *)v65;
      *((void *)v64 + 1) = v67;
      uint64_t v111 = v66;
      uint64_t v69 = *((void *)v65 + 3);
      uint64_t v70 = *((void *)v65 + 4);
      *((void *)v64 + 2) = v68;
      *((void *)v64 + 3) = v69;
      uint64_t v71 = *((void *)v65 + 5);
      uint64_t v72 = *((void *)v65 + 6);
      *((void *)v64 + 4) = v70;
      *((void *)v64 + 5) = v71;
      uint64_t v74 = *((void *)v65 + 7);
      uint64_t v73 = *((void *)v65 + 8);
      *((void *)v64 + 6) = v72;
      *((void *)v64 + 7) = v74;
      *((void *)v64 + 8) = v73;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v66 = v111;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v75 = *((_OWORD *)v65 + 3);
      *((_OWORD *)v64 + 2) = *((_OWORD *)v65 + 2);
      *((_OWORD *)v64 + 3) = v75;
      *((void *)v64 + 8) = *((void *)v65 + 8);
      long long v76 = *((_OWORD *)v65 + 1);
      *(_OWORD *)long long v64 = *(_OWORD *)v65;
      *((_OWORD *)v64 + 1) = v76;
    }
    *((void *)v64 + 10) = *((void *)v65 + 10);
    long long v77 = *((_OWORD *)v65 + 7);
    *((_OWORD *)v64 + 6) = *((_OWORD *)v65 + 6);
    *((_OWORD *)v64 + 7) = v77;
    long long v78 = *((_OWORD *)v65 + 9);
    *((_OWORD *)v64 + 8) = *((_OWORD *)v65 + 8);
    *((_OWORD *)v64 + 9) = v78;
    *((void *)v64 + 20) = *((void *)v65 + 20);
    long long v79 = *((_OWORD *)v65 + 14);
    *((_OWORD *)v64 + 13) = *((_OWORD *)v65 + 13);
    *((_OWORD *)v64 + 14) = v79;
    long long v80 = *((_OWORD *)v65 + 12);
    *((_OWORD *)v64 + 11) = *((_OWORD *)v65 + 11);
    *((_OWORD *)v64 + 12) = v80;
    long long v81 = (void *)*((void *)v65 + 30);
    *((void *)v64 + 30) = v81;
    *((void *)v64 + 32) = *((void *)v65 + 32);
    long long v82 = *((_OWORD *)v65 + 20);
    *((_OWORD *)v64 + 19) = *((_OWORD *)v65 + 19);
    *((_OWORD *)v64 + 20) = v82;
    long long v83 = *((_OWORD *)v65 + 18);
    *((_OWORD *)v64 + 17) = *((_OWORD *)v65 + 17);
    *((_OWORD *)v64 + 18) = v83;
    uint64_t v84 = *((void *)v65 + 42);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v85 = v81;
    swift_bridgeObjectRetain();
    if (v84)
    {
      uint64_t v86 = *((void *)v65 + 43);
      *((void *)v64 + 42) = v84;
      *((void *)v64 + 43) = v86;
      long long v87 = *((_OWORD *)v65 + 23);
      *((_OWORD *)v64 + 22) = *((_OWORD *)v65 + 22);
      *((_OWORD *)v64 + 23) = v87;
      long long v88 = *((_OWORD *)v65 + 25);
      *((_OWORD *)v64 + 24) = *((_OWORD *)v65 + 24);
      *((_OWORD *)v64 + 25) = v88;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v89 = *((_OWORD *)v65 + 24);
      *((_OWORD *)v64 + 23) = *((_OWORD *)v65 + 23);
      *((_OWORD *)v64 + 24) = v89;
      *((_OWORD *)v64 + 25) = *((_OWORD *)v65 + 25);
      long long v90 = *((_OWORD *)v65 + 22);
      *((_OWORD *)v64 + 21) = *((_OWORD *)v65 + 21);
      *((_OWORD *)v64 + 22) = v90;
    }
    uint64_t v34 = a1;
    long long v91 = (void *)*((void *)v65 + 52);
    *((void *)v64 + 52) = v91;
    *((void *)v64 + 54) = *((void *)v65 + 54);
    long long v92 = *((_OWORD *)v65 + 29);
    *((_OWORD *)v64 + 28) = *((_OWORD *)v65 + 28);
    *((_OWORD *)v64 + 29) = v92;
    long long v93 = *((_OWORD *)v65 + 31);
    *((_OWORD *)v64 + 30) = *((_OWORD *)v65 + 30);
    *((_OWORD *)v64 + 31) = v93;
    *((void *)v64 + 64) = *((void *)v65 + 64);
    long long v94 = *((_OWORD *)v65 + 33);
    long long v95 = *((_OWORD *)v65 + 34);
    long long v96 = *((_OWORD *)v65 + 36);
    *((_OWORD *)v64 + 35) = *((_OWORD *)v65 + 35);
    *((_OWORD *)v64 + 36) = v96;
    *((_OWORD *)v64 + 33) = v94;
    *((_OWORD *)v64 + 34) = v95;
    *((_DWORD *)v64 + 148) = *((_DWORD *)v65 + 148);
    long long v97 = (void *)*((void *)v65 + 75);
    *((void *)v64 + 75) = v97;
    *((void *)v64 + 76) = *((void *)v65 + 76);
    v64[620] = v65[620];
    *((_DWORD *)v64 + 154) = *((_DWORD *)v65 + 154);
    long long v98 = *((_OWORD *)v65 + 39);
    long long v99 = *((_OWORD *)v65 + 40);
    long long v100 = *((_OWORD *)v65 + 41);
    *(void *)(v64 + 669) = *(void *)(v65 + 669);
    *((_OWORD *)v64 + 40) = v99;
    *((_OWORD *)v64 + 41) = v100;
    *((_OWORD *)v64 + 39) = v98;
    *((void *)v64 + 85) = v66;
    id v101 = v91;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v102 = v97;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy((char *)v34 + v63, (char *)a2 + v63, 0x2B0uLL);
  }
  return v34;
}

void *assignWithCopy for ObjectCaptureSession.Frame(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  unsigned int v6 = (void *)a2[1];
  uint64_t v7 = (void *)a1[1];
  a1[1] = v6;
  id v8 = v6;

  long long v9 = (void *)a1[2];
  long long v10 = (void *)a2[2];
  a1[2] = v10;
  id v11 = v10;

  long long v12 = (void *)a1[3];
  uint64_t v13 = (void *)a2[3];
  a1[3] = v13;
  id v14 = v13;

  uint64_t v157 = a2;
  uint64_t v159 = a3;
  uint64_t v15 = a3[8];
  uint64_t v16 = (_OWORD *)((char *)a1 + v15);
  uint64_t v17 = (char *)a2 + v15;
  *uint64_t v16 = *(_OWORD *)((char *)a2 + v15);
  v16[1] = *(_OWORD *)((char *)a2 + v15 + 16);
  v16[2] = *(_OWORD *)((char *)a2 + v15 + 32);
  v16[3] = *(_OWORD *)((char *)a2 + v15 + 48);
  v16[4] = *(_OWORD *)((char *)a2 + v15 + 64);
  v16[5] = *(_OWORD *)((char *)a2 + v15 + 80);
  v16[6] = *(_OWORD *)((char *)a2 + v15 + 96);
  id v18 = (int *)type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  uint64_t v19 = v18[6];
  id v20 = (char *)v16 + v19;
  uint64_t v21 = &v17[v19];
  uint64_t v22 = sub_24B682C80();
  uint64_t v156 = *(void *)(v22 - 8);
  uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v156 + 48);
  unsigned int v24 = v23(v20, 2, v22);
  uint64_t v155 = v23;
  unsigned int v25 = v23(v21, 2, v22);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v156 + 16))(v20, v21, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v156 + 56))(v20, 0, 2, v22);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v156 + 8))(v20, v22);
LABEL_6:
    uint64_t v26 = sub_24B682C90();
    memcpy(v20, v21, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v156 + 24))(v20, v21, v22);
LABEL_7:
  uint64_t v27 = v157;
  uint64_t v28 = v18[7];
  uint64_t v29 = (char *)v16 + v28;
  long long v30 = &v17[v28];
  *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
  long long v31 = *((_OWORD *)v30 + 1);
  long long v32 = *((_OWORD *)v30 + 2);
  long long v33 = *((_OWORD *)v30 + 3);
  v29[64] = v30[64];
  *((_OWORD *)v29 + 2) = v32;
  *((_OWORD *)v29 + 3) = v33;
  *((_OWORD *)v29 + 1) = v31;
  uint64_t v34 = v18[8];
  uint64_t v35 = *(void **)((char *)v16 + v34);
  long long v36 = *(void **)&v17[v34];
  *(void *)((char *)v16 + v34) = v36;
  id v37 = v36;

  uint64_t v38 = v18[9];
  uint64_t v39 = (char *)v16 + v38;
  uint64_t v40 = &v17[v38];
  *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
  long long v41 = *((_OWORD *)v40 + 1);
  long long v42 = *((_OWORD *)v40 + 2);
  long long v43 = *((_OWORD *)v40 + 3);
  v39[64] = v40[64];
  *((_OWORD *)v39 + 2) = v42;
  *((_OWORD *)v39 + 3) = v43;
  *((_OWORD *)v39 + 1) = v41;
  uint64_t v44 = v159[9];
  uint64_t v158 = a1;
  long long v45 = (long long *)((char *)a1 + v44);
  long long v46 = (long long *)((char *)v27 + v44);
  uint64_t v47 = type metadata accessor for ObjectCaptureSession.Frame.Object(0);
  uint64_t v48 = *(void *)(v47 - 8);
  long long v49 = *(uint64_t (**)(long long *, uint64_t, uint64_t))(v48 + 48);
  int v50 = v49(v45, 1, v47);
  int v51 = v49(v46, 1, v47);
  if (v50)
  {
    if (!v51)
    {
      long long v52 = *v46;
      long long v53 = v46[1];
      long long v54 = v46[3];
      v45[2] = v46[2];
      uint64_t v45[3] = v54;
      *long long v45 = v52;
      v45[1] = v53;
      long long v55 = v46[4];
      long long v56 = v46[5];
      long long v57 = v46[7];
      v45[6] = v46[6];
      v45[7] = v57;
      v45[4] = v55;
      v45[5] = v56;
      uint64_t v58 = *(int *)(v47 + 24);
      long long v59 = (char *)v45 + v58;
      long long v60 = (char *)v46 + v58;
      if (v155((char *)v46 + v58, 2, v22))
      {
        uint64_t v61 = sub_24B682C90();
        memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v156 + 16))(v59, v60, v22);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v156 + 56))(v59, 0, 2, v22);
      }
      *(void *)((char *)v45 + *(int *)(v47 + 28)) = *(void *)((char *)v46 + *(int *)(v47 + 28));
      uint64_t v68 = *(void (**)(long long *, void, uint64_t, uint64_t))(v48 + 56);
      swift_bridgeObjectRetain();
      v68(v45, 0, 1, v47);
      goto LABEL_20;
    }
LABEL_13:
    uint64_t v62 = sub_24B562F04(&qword_2697CC9A8);
    memcpy(v45, v46, *(void *)(*(void *)(v62 - 8) + 64));
LABEL_20:
    uint64_t v69 = v158;
    goto LABEL_21;
  }
  if (v51)
  {
    sub_24B65EF80((uint64_t)v45, type metadata accessor for ObjectCaptureSession.Frame.Object);
    goto LABEL_13;
  }
  *long long v45 = *v46;
  v45[1] = v46[1];
  v45[2] = v46[2];
  uint64_t v45[3] = v46[3];
  v45[4] = v46[4];
  v45[5] = v46[5];
  v45[6] = v46[6];
  v45[7] = v46[7];
  uint64_t v63 = *(int *)(v47 + 24);
  long long v64 = (char *)v45 + v63;
  long long v65 = (char *)v46 + v63;
  unsigned int v66 = v155((char *)v45 + v63, 2, v22);
  unsigned int v67 = v155(v65, 2, v22);
  if (!v66)
  {
    if (!v67)
    {
      (*(void (**)(char *, char *, uint64_t))(v156 + 24))(v64, v65, v22);
      goto LABEL_59;
    }
    (*(void (**)(char *, uint64_t))(v156 + 8))(v64, v22);
    goto LABEL_58;
  }
  if (v67)
  {
LABEL_58:
    uint64_t v154 = sub_24B682C90();
    memcpy(v64, v65, *(void *)(*(void *)(v154 - 8) + 64));
    goto LABEL_59;
  }
  (*(void (**)(char *, char *, uint64_t))(v156 + 16))(v64, v65, v22);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v156 + 56))(v64, 0, 2, v22);
LABEL_59:
  uint64_t v69 = v158;
  *(void *)((char *)v45 + *(int *)(v47 + 28)) = *(void *)((char *)v46 + *(int *)(v47 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_21:
  *(_DWORD *)((char *)v69 + v159[10]) = *(_DWORD *)((char *)v27 + v159[10]);
  *(void *)((char *)v69 + v159[11]) = *(void *)((char *)v27 + v159[11]);
  uint64_t v70 = v159[12];
  uint64_t v71 = (uint64_t)v69 + v70;
  uint64_t v72 = (uint64_t)v27 + v70;
  uint64_t v73 = *(void *)((char *)v27 + v70);
  if (*(void *)((char *)v69 + v70))
  {
    if (v73)
    {
      *(void *)uint64_t v71 = v73;
      swift_retain();
      swift_release();
      *(void *)(v71 + 8) = *(void *)(v72 + 8);
      swift_retain();
      swift_release();
      *(void *)(v71 + 16) = *(void *)(v72 + 16);
      swift_retain();
      swift_release();
      *(_OWORD *)(v71 + 32) = *(_OWORD *)(v72 + 32);
      *(_OWORD *)(v71 + 48) = *(_OWORD *)(v72 + 48);
      *(_OWORD *)(v71 + 64) = *(_OWORD *)(v72 + 64);
      *(_OWORD *)(v71 + 80) = *(_OWORD *)(v72 + 80);
    }
    else
    {
      sub_24B665F58((uint64_t)v69 + v70);
      long long v77 = *(_OWORD *)(v72 + 16);
      *(_OWORD *)uint64_t v71 = *(_OWORD *)v72;
      *(_OWORD *)(v71 + 16) = v77;
      long long v78 = *(_OWORD *)(v72 + 80);
      long long v80 = *(_OWORD *)(v72 + 32);
      long long v79 = *(_OWORD *)(v72 + 48);
      *(_OWORD *)(v71 + 64) = *(_OWORD *)(v72 + 64);
      *(_OWORD *)(v71 + 80) = v78;
      *(_OWORD *)(v71 + 32) = v80;
      *(_OWORD *)(v71 + 48) = v79;
    }
  }
  else if (v73)
  {
    *(void *)uint64_t v71 = v73;
    *(void *)(v71 + 8) = *(void *)(v72 + 8);
    *(void *)(v71 + 16) = *(void *)(v72 + 16);
    long long v74 = *(_OWORD *)(v72 + 32);
    long long v75 = *(_OWORD *)(v72 + 48);
    long long v76 = *(_OWORD *)(v72 + 80);
    *(_OWORD *)(v71 + 64) = *(_OWORD *)(v72 + 64);
    *(_OWORD *)(v71 + 80) = v76;
    *(_OWORD *)(v71 + 32) = v74;
    *(_OWORD *)(v71 + 48) = v75;
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v81 = *(_OWORD *)(v72 + 16);
    *(_OWORD *)uint64_t v71 = *(_OWORD *)v72;
    *(_OWORD *)(v71 + 16) = v81;
    long long v82 = *(_OWORD *)(v72 + 32);
    long long v83 = *(_OWORD *)(v72 + 48);
    long long v84 = *(_OWORD *)(v72 + 80);
    *(_OWORD *)(v71 + 64) = *(_OWORD *)(v72 + 64);
    *(_OWORD *)(v71 + 80) = v84;
    *(_OWORD *)(v71 + 32) = v82;
    *(_OWORD *)(v71 + 48) = v83;
  }
  uint64_t v85 = v159[13];
  uint64_t v86 = (uint64_t)v69 + v85;
  long long v87 = (void *)((char *)v27 + v85);
  uint64_t v88 = v87[85];
  if (*(void *)(v86 + 680))
  {
    if (v88)
    {
      uint64_t v89 = *v87;
      if (*(void *)v86)
      {
        if (v89)
        {
          *(void *)uint64_t v86 = v89;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v86 + 8) = v87[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v86 + 16) = v87[2];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v86 + 24) = v87[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v86 + 32) = v87[4];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v86 + 40) = v87[5];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v86 + 48) = v87[6];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v86 + 56) = v87[7];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v86 + 64) = v87[8];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_24B5AE6C4(v86);
          *(_OWORD *)uint64_t v86 = *(_OWORD *)v87;
          long long v91 = *((_OWORD *)v87 + 2);
          long long v90 = *((_OWORD *)v87 + 3);
          long long v92 = *((_OWORD *)v87 + 1);
          *(void *)(v86 + 64) = v87[8];
          *(_OWORD *)(v86 + 32) = v91;
          *(_OWORD *)(v86 + 48) = v90;
          *(_OWORD *)(v86 + 16) = v92;
        }
      }
      else if (v89)
      {
        *(void *)uint64_t v86 = v89;
        *(void *)(v86 + 8) = v87[1];
        *(void *)(v86 + 16) = v87[2];
        *(void *)(v86 + 24) = v87[3];
        *(void *)(v86 + 32) = v87[4];
        *(void *)(v86 + 40) = v87[5];
        *(void *)(v86 + 48) = v87[6];
        *(void *)(v86 + 56) = v87[7];
        *(void *)(v86 + 64) = v87[8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)uint64_t v86 = *(_OWORD *)v87;
        long long v128 = *((_OWORD *)v87 + 1);
        long long v129 = *((_OWORD *)v87 + 2);
        long long v130 = *((_OWORD *)v87 + 3);
        *(void *)(v86 + 64) = v87[8];
        *(_OWORD *)(v86 + 32) = v129;
        *(_OWORD *)(v86 + 48) = v130;
        *(_OWORD *)(v86 + 16) = v128;
      }
      *(void *)(v86 + 80) = v87[10];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_OWORD *)(v86 + 96) = *((_OWORD *)v87 + 6);
      *(_OWORD *)(v86 + 112) = *((_OWORD *)v87 + 7);
      *(_OWORD *)(v86 + 128) = *((_OWORD *)v87 + 8);
      *(_OWORD *)(v86 + 144) = *((_OWORD *)v87 + 9);
      *(void *)(v86 + 160) = v87[20];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_OWORD *)(v86 + 176) = *((_OWORD *)v87 + 11);
      *(_OWORD *)(v86 + 192) = *((_OWORD *)v87 + 12);
      *(_OWORD *)(v86 + 208) = *((_OWORD *)v87 + 13);
      *(_OWORD *)(v86 + 224) = *((_OWORD *)v87 + 14);
      uint64_t v131 = *(void **)(v86 + 240);
      uint64_t v132 = (void *)v87[30];
      *(void *)(v86 + 240) = v132;
      id v133 = v132;

      *(void *)(v86 + 256) = v87[32];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_OWORD *)(v86 + 272) = *((_OWORD *)v87 + 17);
      *(_OWORD *)(v86 + 288) = *((_OWORD *)v87 + 18);
      *(_OWORD *)(v86 + 304) = *((_OWORD *)v87 + 19);
      *(_OWORD *)(v86 + 320) = *((_OWORD *)v87 + 20);
      uint64_t v134 = (_OWORD *)(v86 + 336);
      int8x16_t v135 = v87 + 42;
      uint64_t v136 = v87[42];
      if (*(void *)(v86 + 336))
      {
        if (v136)
        {
          *(void *)(v86 + 336) = v136;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v86 + 344) = v87[43];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_OWORD *)(v86 + 352) = *((_OWORD *)v87 + 22);
          *(_OWORD *)(v86 + 368) = *((_OWORD *)v87 + 23);
          *(_OWORD *)(v86 + 384) = *((_OWORD *)v87 + 24);
          *(_OWORD *)(v86 + 400) = *((_OWORD *)v87 + 25);
        }
        else
        {
          sub_24B665F80(v86 + 336);
          *uint64_t v134 = *v135;
          long long v140 = *((_OWORD *)v87 + 25);
          long long v142 = *((_OWORD *)v87 + 22);
          long long v141 = *((_OWORD *)v87 + 23);
          *(_OWORD *)(v86 + 384) = *((_OWORD *)v87 + 24);
          *(_OWORD *)(v86 + 400) = v140;
          *(_OWORD *)(v86 + 352) = v142;
          *(_OWORD *)(v86 + 368) = v141;
        }
      }
      else if (v136)
      {
        *(void *)(v86 + 336) = v136;
        *(void *)(v86 + 344) = v87[43];
        long long v137 = *((_OWORD *)v87 + 22);
        long long v138 = *((_OWORD *)v87 + 23);
        long long v139 = *((_OWORD *)v87 + 25);
        *(_OWORD *)(v86 + 384) = *((_OWORD *)v87 + 24);
        *(_OWORD *)(v86 + 400) = v139;
        *(_OWORD *)(v86 + 352) = v137;
        *(_OWORD *)(v86 + 368) = v138;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *uint64_t v134 = *v135;
        long long v143 = *((_OWORD *)v87 + 22);
        long long v144 = *((_OWORD *)v87 + 23);
        long long v145 = *((_OWORD *)v87 + 25);
        *(_OWORD *)(v86 + 384) = *((_OWORD *)v87 + 24);
        *(_OWORD *)(v86 + 400) = v145;
        *(_OWORD *)(v86 + 352) = v143;
        *(_OWORD *)(v86 + 368) = v144;
      }
      uint64_t v146 = *(void **)(v86 + 416);
      long long v147 = (void *)v87[52];
      *(void *)(v86 + 416) = v147;
      id v148 = v147;

      *(void *)(v86 + 432) = v87[54];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_OWORD *)(v86 + 448) = *((_OWORD *)v87 + 28);
      *(_OWORD *)(v86 + 464) = *((_OWORD *)v87 + 29);
      *(_OWORD *)(v86 + 480) = *((_OWORD *)v87 + 30);
      *(_OWORD *)(v86 + 496) = *((_OWORD *)v87 + 31);
      *(void *)(v86 + 512) = v87[64];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_OWORD *)(v86 + 528) = *((_OWORD *)v87 + 33);
      *(_OWORD *)(v86 + 544) = *((_OWORD *)v87 + 34);
      *(_OWORD *)(v86 + 560) = *((_OWORD *)v87 + 35);
      *(_OWORD *)(v86 + 576) = *((_OWORD *)v87 + 36);
      *(_DWORD *)(v86 + 592) = *((_DWORD *)v87 + 148);
      uint64_t v149 = *(void **)(v86 + 600);
      uint64_t v150 = (void *)v87[75];
      *(void *)(v86 + 600) = v150;
      id v151 = v150;

      *(void *)(v86 + 608) = v87[76];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v152 = *((_DWORD *)v87 + 154);
      *(unsigned char *)(v86 + 620) = *((unsigned char *)v87 + 620);
      *(_DWORD *)(v86 + 616) = v152;
      *(_DWORD *)(v86 + 624) = *((_DWORD *)v87 + 156);
      *(void *)(v86 + 632) = v87[79];
      *(_DWORD *)(v86 + 640) = *((_DWORD *)v87 + 160);
      *(_DWORD *)(v86 + 644) = *((_DWORD *)v87 + 161);
      *(void *)(v86 + 648) = v87[81];
      *(_DWORD *)(v86 + 656) = *((_DWORD *)v87 + 164);
      *(_DWORD *)(v86 + 660) = *((_DWORD *)v87 + 165);
      *(_DWORD *)(v86 + 664) = *((_DWORD *)v87 + 166);
      *(unsigned char *)(v86 + 668) = *((unsigned char *)v87 + 668);
      *(unsigned char *)(v86 + 669) = *((unsigned char *)v87 + 669);
      *(unsigned char *)(v86 + 670) = *((unsigned char *)v87 + 670);
      *(unsigned char *)(v86 + 671) = *((unsigned char *)v87 + 671);
      *(unsigned char *)(v86 + 672) = *((unsigned char *)v87 + 672);
      *(unsigned char *)(v86 + 673) = *((unsigned char *)v87 + 673);
      *(unsigned char *)(v86 + 674) = *((unsigned char *)v87 + 674);
      *(unsigned char *)(v86 + 675) = *((unsigned char *)v87 + 675);
      *(unsigned char *)(v86 + 676) = *((unsigned char *)v87 + 676);
      *(void *)(v86 + 680) = v87[85];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return v158;
    }
    sub_24B665FD4(v86);
LABEL_37:
    memcpy((void *)v86, v87, 0x2B0uLL);
    return v158;
  }
  if (!v88) {
    goto LABEL_37;
  }
  if (*v87)
  {
    *(void *)uint64_t v86 = *v87;
    *(void *)(v86 + 8) = v87[1];
    *(void *)(v86 + 16) = v87[2];
    *(void *)(v86 + 24) = v87[3];
    *(void *)(v86 + 32) = v87[4];
    *(void *)(v86 + 40) = v87[5];
    *(void *)(v86 + 48) = v87[6];
    *(void *)(v86 + 56) = v87[7];
    *(void *)(v86 + 64) = v87[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v86 = *(_OWORD *)v87;
    long long v93 = *((_OWORD *)v87 + 1);
    long long v94 = *((_OWORD *)v87 + 2);
    long long v95 = *((_OWORD *)v87 + 3);
    *(void *)(v86 + 64) = v87[8];
    *(_OWORD *)(v86 + 32) = v94;
    *(_OWORD *)(v86 + 48) = v95;
    *(_OWORD *)(v86 + 16) = v93;
  }
  *(void *)(v86 + 80) = v87[10];
  long long v96 = *((_OWORD *)v87 + 6);
  long long v97 = *((_OWORD *)v87 + 7);
  long long v98 = *((_OWORD *)v87 + 9);
  *(_OWORD *)(v86 + 128) = *((_OWORD *)v87 + 8);
  *(_OWORD *)(v86 + 144) = v98;
  *(_OWORD *)(v86 + 96) = v96;
  *(_OWORD *)(v86 + 112) = v97;
  *(void *)(v86 + 160) = v87[20];
  long long v99 = *((_OWORD *)v87 + 11);
  long long v100 = *((_OWORD *)v87 + 12);
  long long v101 = *((_OWORD *)v87 + 14);
  *(_OWORD *)(v86 + 208) = *((_OWORD *)v87 + 13);
  *(_OWORD *)(v86 + 224) = v101;
  *(_OWORD *)(v86 + 176) = v99;
  *(_OWORD *)(v86 + 192) = v100;
  id v102 = (void *)v87[30];
  *(void *)(v86 + 240) = v102;
  *(void *)(v86 + 256) = v87[32];
  long long v103 = *((_OWORD *)v87 + 17);
  long long v104 = *((_OWORD *)v87 + 18);
  long long v105 = *((_OWORD *)v87 + 20);
  *(_OWORD *)(v86 + 304) = *((_OWORD *)v87 + 19);
  *(_OWORD *)(v86 + 320) = v105;
  *(_OWORD *)(v86 + 272) = v103;
  *(_OWORD *)(v86 + 288) = v104;
  uint64_t v106 = v87[42];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v107 = v102;
  swift_bridgeObjectRetain();
  if (v106)
  {
    *(void *)(v86 + 336) = v106;
    *(void *)(v86 + 344) = v87[43];
    long long v108 = *((_OWORD *)v87 + 22);
    long long v109 = *((_OWORD *)v87 + 23);
    long long v110 = *((_OWORD *)v87 + 25);
    *(_OWORD *)(v86 + 384) = *((_OWORD *)v87 + 24);
    *(_OWORD *)(v86 + 400) = v110;
    *(_OWORD *)(v86 + 352) = v108;
    *(_OWORD *)(v86 + 368) = v109;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v86 + 336) = *((_OWORD *)v87 + 21);
    long long v111 = *((_OWORD *)v87 + 22);
    long long v112 = *((_OWORD *)v87 + 23);
    long long v113 = *((_OWORD *)v87 + 25);
    *(_OWORD *)(v86 + 384) = *((_OWORD *)v87 + 24);
    *(_OWORD *)(v86 + 400) = v113;
    *(_OWORD *)(v86 + 352) = v111;
    *(_OWORD *)(v86 + 368) = v112;
  }
  id v114 = (void *)v87[52];
  *(void *)(v86 + 416) = v114;
  *(void *)(v86 + 432) = v87[54];
  long long v115 = *((_OWORD *)v87 + 28);
  long long v116 = *((_OWORD *)v87 + 29);
  long long v117 = *((_OWORD *)v87 + 31);
  *(_OWORD *)(v86 + 480) = *((_OWORD *)v87 + 30);
  *(_OWORD *)(v86 + 496) = v117;
  *(_OWORD *)(v86 + 448) = v115;
  *(_OWORD *)(v86 + 464) = v116;
  *(void *)(v86 + 512) = v87[64];
  long long v118 = *((_OWORD *)v87 + 33);
  long long v119 = *((_OWORD *)v87 + 34);
  long long v120 = *((_OWORD *)v87 + 36);
  *(_OWORD *)(v86 + 560) = *((_OWORD *)v87 + 35);
  *(_OWORD *)(v86 + 576) = v120;
  *(_OWORD *)(v86 + 528) = v118;
  *(_OWORD *)(v86 + 544) = v119;
  *(_DWORD *)(v86 + 592) = *((_DWORD *)v87 + 148);
  id v121 = (void *)v87[75];
  *(void *)(v86 + 600) = v121;
  *(void *)(v86 + 608) = v87[76];
  int v122 = *((_DWORD *)v87 + 154);
  *(unsigned char *)(v86 + 620) = *((unsigned char *)v87 + 620);
  *(_DWORD *)(v86 + 616) = v122;
  long long v123 = *((_OWORD *)v87 + 39);
  long long v124 = *((_OWORD *)v87 + 40);
  long long v125 = *((_OWORD *)v87 + 41);
  *(void *)(v86 + 669) = *(uint64_t *)((char *)v87 + 669);
  *(_OWORD *)(v86 + 640) = v124;
  *(_OWORD *)(v86 + 656) = v125;
  *(_OWORD *)(v86 + 624) = v123;
  *(void *)(v86 + 680) = v87[85];
  id v126 = v114;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v127 = v121;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v158;
}

uint64_t sub_24B665F58(uint64_t a1)
{
  return a1;
}

uint64_t sub_24B665F80(uint64_t a1)
{
  return a1;
}

uint64_t sub_24B665FD4(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for ObjectCaptureSession.Frame(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v5 = a3[8];
  unsigned int v6 = (_OWORD *)(a1 + v5);
  uint64_t v7 = a2 + v5;
  long long v8 = *(_OWORD *)(a2 + v5 + 16);
  *unsigned int v6 = *(_OWORD *)(a2 + v5);
  v6[1] = v8;
  long long v9 = *(_OWORD *)(a2 + v5 + 48);
  v6[2] = *(_OWORD *)(a2 + v5 + 32);
  id v6[3] = v9;
  long long v10 = *(_OWORD *)(a2 + v5 + 80);
  v6[4] = *(_OWORD *)(a2 + v5 + 64);
  v6[5] = v10;
  v6[6] = *(_OWORD *)(a2 + v5 + 96);
  id v11 = (int *)type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  uint64_t v12 = v11[6];
  uint64_t v13 = (char *)v6 + v12;
  id v14 = (const void *)(v7 + v12);
  uint64_t v15 = sub_24B682C80();
  uint64_t v16 = *(void *)(v15 - 8);
  long long v53 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
  uint64_t v52 = v16;
  if (v53(v14, 2, v15))
  {
    uint64_t v17 = sub_24B682C90();
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 2, v15);
  }
  uint64_t v18 = v11[7];
  uint64_t v19 = (char *)v6 + v18;
  uint64_t v20 = v7 + v18;
  long long v21 = *(_OWORD *)(v20 + 48);
  *((_OWORD *)v19 + 2) = *(_OWORD *)(v20 + 32);
  *((_OWORD *)v19 + 3) = v21;
  v19[64] = *(unsigned char *)(v20 + 64);
  long long v22 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *((_OWORD *)v19 + 1) = v22;
  *(void *)((char *)v6 + v11[8]) = *(void *)(v7 + v11[8]);
  uint64_t v23 = v11[9];
  unsigned int v24 = (char *)v6 + v23;
  uint64_t v25 = v7 + v23;
  long long v26 = *(_OWORD *)(v25 + 48);
  *((_OWORD *)v24 + 2) = *(_OWORD *)(v25 + 32);
  *((_OWORD *)v24 + 3) = v26;
  v24[64] = *(unsigned char *)(v25 + 64);
  long long v27 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)unsigned int v24 = *(_OWORD *)v25;
  *((_OWORD *)v24 + 1) = v27;
  uint64_t v28 = a3;
  uint64_t v29 = a3[9];
  long long v30 = (_OWORD *)(a1 + v29);
  long long v31 = (_OWORD *)(a2 + v29);
  uint64_t v32 = type metadata accessor for ObjectCaptureSession.Frame.Object(0);
  uint64_t v33 = *(void *)(v32 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
  {
    uint64_t v34 = sub_24B562F04(&qword_2697CC9A8);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    long long v35 = v31[1];
    *long long v30 = *v31;
    v30[1] = v35;
    long long v36 = v31[3];
    v30[2] = v31[2];
    v30[3] = v36;
    long long v37 = v31[5];
    v30[4] = v31[4];
    v30[5] = v37;
    long long v38 = v31[7];
    v30[6] = v31[6];
    v30[7] = v38;
    uint64_t v39 = *(int *)(v32 + 24);
    __dst = (char *)v30 + v39;
    uint64_t v40 = (char *)v31 + v39;
    if (v53((char *)v31 + v39, 2, v15))
    {
      uint64_t v41 = sub_24B682C90();
      memcpy(__dst, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v52 + 32))(__dst, v40, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(__dst, 0, 2, v15);
      uint64_t v28 = a3;
    }
    *(void *)((char *)v30 + *(int *)(v32 + 28)) = *(void *)((char *)v31 + *(int *)(v32 + 28));
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  }
  uint64_t v42 = v28[11];
  *(_DWORD *)(a1 + v28[10]) = *(_DWORD *)(a2 + v28[10]);
  *(void *)(a1 + v42) = *(void *)(a2 + v42);
  uint64_t v43 = v28[12];
  uint64_t v44 = v28[13];
  long long v45 = (_OWORD *)(a1 + v43);
  long long v46 = (_OWORD *)(a2 + v43);
  long long v47 = v46[3];
  v45[2] = v46[2];
  uint64_t v45[3] = v47;
  long long v48 = v46[5];
  v45[4] = v46[4];
  v45[5] = v48;
  long long v49 = v46[1];
  *long long v45 = *v46;
  v45[1] = v49;
  memcpy((void *)(a1 + v44), (const void *)(a2 + v44), 0x2B0uLL);
  return a1;
}

void *assignWithTake for ObjectCaptureSession.Frame(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  unsigned int v6 = (void *)a1[1];
  a1[1] = a2[1];

  uint64_t v7 = (void *)a1[2];
  a1[2] = a2[2];

  long long v8 = (void *)a1[3];
  a1[3] = a2[3];

  long long v103 = a2;
  long long v105 = a3;
  uint64_t v9 = a3[8];
  long long v10 = (_OWORD *)((char *)a1 + v9);
  id v11 = (char *)a2 + v9;
  long long v12 = *(_OWORD *)((char *)a2 + v9 + 16);
  *long long v10 = *(_OWORD *)((char *)a2 + v9);
  v10[1] = v12;
  long long v13 = *(_OWORD *)((char *)a2 + v9 + 48);
  v10[2] = *(_OWORD *)((char *)a2 + v9 + 32);
  v10[3] = v13;
  long long v14 = *(_OWORD *)((char *)a2 + v9 + 80);
  v10[4] = *(_OWORD *)((char *)a2 + v9 + 64);
  v10[5] = v14;
  v10[6] = *(_OWORD *)((char *)a2 + v9 + 96);
  uint64_t v15 = (int *)type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  uint64_t v16 = v15[6];
  uint64_t v17 = (char *)v10 + v16;
  uint64_t v18 = &v11[v16];
  uint64_t v19 = sub_24B682C80();
  uint64_t v102 = *(void *)(v19 - 8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v102 + 48);
  int v21 = v20(v17, 2, v19);
  long long v101 = v20;
  int v22 = v20(v18, 2, v19);
  if (v21)
  {
    if (v22)
    {
      uint64_t v23 = sub_24B682C90();
      memcpy(v17, v18, *(void *)(*(void *)(v23 - 8) + 64));
      unsigned int v24 = v105;
      uint64_t v25 = v19;
      goto LABEL_9;
    }
    uint64_t v25 = v19;
    (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v17, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v102 + 56))(v17, 0, 2, v19);
  }
  else
  {
    uint64_t v25 = v19;
    if (v22)
    {
      (*(void (**)(char *, uint64_t))(v102 + 8))(v17, v19);
      uint64_t v26 = sub_24B682C90();
      memcpy(v17, v18, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v102 + 40))(v17, v18, v19);
    }
  }
  unsigned int v24 = v105;
LABEL_9:
  long long v27 = v103;
  uint64_t v28 = v15[7];
  uint64_t v29 = (char *)v10 + v28;
  long long v30 = &v11[v28];
  long long v31 = *((_OWORD *)v30 + 3);
  *((_OWORD *)v29 + 2) = *((_OWORD *)v30 + 2);
  *((_OWORD *)v29 + 3) = v31;
  v29[64] = v30[64];
  long long v32 = *((_OWORD *)v30 + 1);
  *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
  *((_OWORD *)v29 + 1) = v32;
  uint64_t v33 = v15[8];
  uint64_t v34 = *(void **)((char *)v10 + v33);
  *(void *)((char *)v10 + v33) = *(void *)&v11[v33];

  uint64_t v35 = v15[9];
  long long v36 = (char *)v10 + v35;
  long long v37 = &v11[v35];
  long long v38 = *((_OWORD *)v37 + 3);
  *((_OWORD *)v36 + 2) = *((_OWORD *)v37 + 2);
  *((_OWORD *)v36 + 3) = v38;
  v36[64] = v37[64];
  long long v39 = *((_OWORD *)v37 + 1);
  *(_OWORD *)long long v36 = *(_OWORD *)v37;
  *((_OWORD *)v36 + 1) = v39;
  uint64_t v40 = v24[9];
  long long v104 = a1;
  uint64_t v41 = (char *)a1 + v40;
  uint64_t v42 = (char *)v27 + v40;
  uint64_t v43 = type metadata accessor for ObjectCaptureSession.Frame.Object(0);
  uint64_t v44 = *(void *)(v43 - 8);
  long long v45 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v44 + 48);
  int v46 = v45(v41, 1, v43);
  int v47 = v45(v42, 1, v43);
  if (!v46)
  {
    if (v47)
    {
      sub_24B65EF80((uint64_t)v41, type metadata accessor for ObjectCaptureSession.Frame.Object);
      goto LABEL_15;
    }
    long long v58 = *((_OWORD *)v42 + 1);
    *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
    *((_OWORD *)v41 + 1) = v58;
    long long v59 = *((_OWORD *)v42 + 3);
    *((_OWORD *)v41 + 2) = *((_OWORD *)v42 + 2);
    *((_OWORD *)v41 + 3) = v59;
    long long v60 = *((_OWORD *)v42 + 5);
    *((_OWORD *)v41 + 4) = *((_OWORD *)v42 + 4);
    *((_OWORD *)v41 + 5) = v60;
    long long v61 = *((_OWORD *)v42 + 7);
    *((_OWORD *)v41 + 6) = *((_OWORD *)v42 + 6);
    *((_OWORD *)v41 + 7) = v61;
    uint64_t v62 = *(int *)(v43 + 24);
    uint64_t v63 = &v41[v62];
    long long v64 = &v42[v62];
    int v65 = v101(&v41[v62], 2, v25);
    int v66 = v101(v64, 2, v25);
    if (v65)
    {
      if (!v66)
      {
        (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v63, v64, v25);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v102 + 56))(v63, 0, 2, v25);
LABEL_24:
        long long v55 = v104;
        *(void *)&v41[*(int *)(v43 + 28)] = *(void *)&v42[*(int *)(v43 + 28)];
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
    }
    else
    {
      if (!v66)
      {
        (*(void (**)(char *, char *, uint64_t))(v102 + 40))(v63, v64, v25);
        goto LABEL_24;
      }
      (*(void (**)(char *, uint64_t))(v102 + 8))(v63, v25);
    }
    uint64_t v67 = sub_24B682C90();
    memcpy(v63, v64, *(void *)(*(void *)(v67 - 8) + 64));
    goto LABEL_24;
  }
  if (v47)
  {
LABEL_15:
    uint64_t v57 = sub_24B562F04(&qword_2697CC9A8);
    memcpy(v41, v42, *(void *)(*(void *)(v57 - 8) + 64));
    long long v55 = v104;
    goto LABEL_25;
  }
  long long v48 = *((_OWORD *)v42 + 1);
  *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
  *((_OWORD *)v41 + 1) = v48;
  long long v49 = *((_OWORD *)v42 + 3);
  *((_OWORD *)v41 + 2) = *((_OWORD *)v42 + 2);
  *((_OWORD *)v41 + 3) = v49;
  long long v50 = *((_OWORD *)v42 + 5);
  *((_OWORD *)v41 + 4) = *((_OWORD *)v42 + 4);
  *((_OWORD *)v41 + 5) = v50;
  long long v51 = *((_OWORD *)v42 + 7);
  *((_OWORD *)v41 + 6) = *((_OWORD *)v42 + 6);
  *((_OWORD *)v41 + 7) = v51;
  uint64_t v52 = *(int *)(v43 + 24);
  long long v53 = &v41[v52];
  long long v54 = &v42[v52];
  long long v55 = v104;
  if (v101(&v42[v52], 2, v25))
  {
    uint64_t v56 = sub_24B682C90();
    memcpy(v53, v54, *(void *)(*(void *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v53, v54, v25);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v102 + 56))(v53, 0, 2, v25);
  }
  *(void *)&v41[*(int *)(v43 + 28)] = *(void *)&v42[*(int *)(v43 + 28)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
LABEL_25:
  uint64_t v68 = v105[11];
  *(_DWORD *)((char *)v55 + v105[10]) = *(_DWORD *)((char *)v27 + v105[10]);
  *(void *)((char *)v55 + v68) = *(void *)((char *)v27 + v68);
  uint64_t v69 = v105[12];
  uint64_t v70 = (uint64_t)v55 + v69;
  uint64_t v71 = (uint64_t)v27 + v69;
  if (*(void *)((char *)v55 + v69))
  {
    if (*(void *)v71)
    {
      *(void *)uint64_t v70 = *(void *)v71;
      swift_release();
      *(void *)(v70 + 8) = *(void *)(v71 + 8);
      swift_release();
      *(void *)(v70 + 16) = *(void *)(v71 + 16);
      swift_release();
      long long v72 = *(_OWORD *)(v71 + 48);
      *(_OWORD *)(v70 + 32) = *(_OWORD *)(v71 + 32);
      *(_OWORD *)(v70 + 48) = v72;
      long long v73 = *(_OWORD *)(v71 + 80);
      *(_OWORD *)(v70 + 64) = *(_OWORD *)(v71 + 64);
      *(_OWORD *)(v70 + 80) = v73;
      goto LABEL_30;
    }
    sub_24B665F58(v70);
  }
  long long v74 = *(_OWORD *)(v71 + 48);
  *(_OWORD *)(v70 + 32) = *(_OWORD *)(v71 + 32);
  *(_OWORD *)(v70 + 48) = v74;
  long long v75 = *(_OWORD *)(v71 + 80);
  *(_OWORD *)(v70 + 64) = *(_OWORD *)(v71 + 64);
  *(_OWORD *)(v70 + 80) = v75;
  long long v76 = *(_OWORD *)(v71 + 16);
  *(_OWORD *)uint64_t v70 = *(_OWORD *)v71;
  *(_OWORD *)(v70 + 16) = v76;
LABEL_30:
  uint64_t v77 = v105[13];
  long long v78 = (void *)((char *)v55 + v77);
  long long v79 = (void *)((char *)v27 + v77);
  if (*(void *)((char *)v55 + v77 + 680))
  {
    if (v79[85])
    {
      if (*v78)
      {
        if (*v79)
        {
          *long long v78 = *v79;
          swift_bridgeObjectRelease();
          v78[1] = v79[1];
          swift_bridgeObjectRelease();
          v78[2] = v79[2];
          swift_bridgeObjectRelease();
          v78[3] = v79[3];
          swift_bridgeObjectRelease();
          v78[4] = v79[4];
          swift_bridgeObjectRelease();
          v78[5] = v79[5];
          swift_bridgeObjectRelease();
          v78[6] = v79[6];
          swift_bridgeObjectRelease();
          v78[7] = v79[7];
          swift_bridgeObjectRelease();
          v78[8] = v79[8];
          swift_bridgeObjectRelease();
          goto LABEL_39;
        }
        sub_24B5AE6C4((uint64_t)v78);
      }
      long long v80 = *((_OWORD *)v79 + 3);
      *((_OWORD *)v78 + 2) = *((_OWORD *)v79 + 2);
      *((_OWORD *)v78 + 3) = v80;
      v78[8] = v79[8];
      long long v81 = *((_OWORD *)v79 + 1);
      *(_OWORD *)long long v78 = *(_OWORD *)v79;
      *((_OWORD *)v78 + 1) = v81;
LABEL_39:
      v78[10] = v79[10];
      swift_bridgeObjectRelease();
      long long v82 = *((_OWORD *)v79 + 7);
      *((_OWORD *)v78 + 6) = *((_OWORD *)v79 + 6);
      *((_OWORD *)v78 + 7) = v82;
      long long v83 = *((_OWORD *)v79 + 9);
      *((_OWORD *)v78 + 8) = *((_OWORD *)v79 + 8);
      *((_OWORD *)v78 + 9) = v83;
      v78[20] = v79[20];
      swift_bridgeObjectRelease();
      long long v84 = *((_OWORD *)v79 + 12);
      *((_OWORD *)v78 + 11) = *((_OWORD *)v79 + 11);
      *((_OWORD *)v78 + 12) = v84;
      long long v85 = *((_OWORD *)v79 + 14);
      *((_OWORD *)v78 + 13) = *((_OWORD *)v79 + 13);
      *((_OWORD *)v78 + 14) = v85;
      uint64_t v86 = (void *)v78[30];
      v78[30] = v79[30];

      v78[32] = v79[32];
      swift_bridgeObjectRelease();
      long long v87 = *((_OWORD *)v79 + 18);
      *((_OWORD *)v78 + 17) = *((_OWORD *)v79 + 17);
      *((_OWORD *)v78 + 18) = v87;
      long long v88 = *((_OWORD *)v79 + 20);
      *((_OWORD *)v78 + 19) = *((_OWORD *)v79 + 19);
      *((_OWORD *)v78 + 20) = v88;
      if (v78[42])
      {
        uint64_t v89 = v79[42];
        if (v89)
        {
          v78[42] = v89;
          swift_bridgeObjectRelease();
          v78[43] = v79[43];
          swift_bridgeObjectRelease();
          long long v90 = *((_OWORD *)v79 + 23);
          *((_OWORD *)v78 + 22) = *((_OWORD *)v79 + 22);
          *((_OWORD *)v78 + 23) = v90;
          long long v91 = *((_OWORD *)v79 + 25);
          *((_OWORD *)v78 + 24) = *((_OWORD *)v79 + 24);
          *((_OWORD *)v78 + 25) = v91;
LABEL_44:
          long long v94 = (void *)v78[52];
          v78[52] = v79[52];

          v78[54] = v79[54];
          swift_bridgeObjectRelease();
          long long v95 = *((_OWORD *)v79 + 29);
          *((_OWORD *)v78 + 28) = *((_OWORD *)v79 + 28);
          *((_OWORD *)v78 + 29) = v95;
          long long v96 = *((_OWORD *)v79 + 31);
          *((_OWORD *)v78 + 30) = *((_OWORD *)v79 + 30);
          *((_OWORD *)v78 + 31) = v96;
          v78[64] = v79[64];
          swift_bridgeObjectRelease();
          long long v97 = *((_OWORD *)v79 + 34);
          *((_OWORD *)v78 + 33) = *((_OWORD *)v79 + 33);
          *((_OWORD *)v78 + 34) = v97;
          long long v98 = *((_OWORD *)v79 + 36);
          *((_OWORD *)v78 + 35) = *((_OWORD *)v79 + 35);
          *((_OWORD *)v78 + 36) = v98;
          *((_DWORD *)v78 + 148) = *((_DWORD *)v79 + 148);
          long long v99 = (void *)v78[75];
          v78[75] = v79[75];

          v78[76] = v79[76];
          swift_bridgeObjectRelease();
          *((_DWORD *)v78 + 154) = *((_DWORD *)v79 + 154);
          *((unsigned char *)v78 + 620) = *((unsigned char *)v79 + 620);
          *((_DWORD *)v78 + 156) = *((_DWORD *)v79 + 156);
          v78[79] = v79[79];
          v78[80] = v79[80];
          v78[81] = v79[81];
          v78[82] = v79[82];
          *((_DWORD *)v78 + 166) = *((_DWORD *)v79 + 166);
          *((unsigned char *)v78 + 668) = *((unsigned char *)v79 + 668);
          *((unsigned char *)v78 + 669) = *((unsigned char *)v79 + 669);
          *((unsigned char *)v78 + 670) = *((unsigned char *)v79 + 670);
          *((unsigned char *)v78 + 671) = *((unsigned char *)v79 + 671);
          *((unsigned char *)v78 + 672) = *((unsigned char *)v79 + 672);
          *((unsigned char *)v78 + 673) = *((unsigned char *)v79 + 673);
          *((unsigned char *)v78 + 674) = *((unsigned char *)v79 + 674);
          *((unsigned char *)v78 + 675) = *((unsigned char *)v79 + 675);
          *((unsigned char *)v78 + 676) = *((unsigned char *)v79 + 676);
          v78[85] = v79[85];
          swift_bridgeObjectRelease();
          return v55;
        }
        sub_24B665F80((uint64_t)(v78 + 42));
      }
      long long v92 = *((_OWORD *)v79 + 24);
      *((_OWORD *)v78 + 23) = *((_OWORD *)v79 + 23);
      *((_OWORD *)v78 + 24) = v92;
      *((_OWORD *)v78 + 25) = *((_OWORD *)v79 + 25);
      long long v93 = *((_OWORD *)v79 + 22);
      *((_OWORD *)v78 + 21) = *((_OWORD *)v79 + 21);
      *((_OWORD *)v78 + 22) = v93;
      goto LABEL_44;
    }
    sub_24B665FD4((uint64_t)v78);
  }
  memcpy(v78, v79, 0x2B0uLL);
  return v55;
}

uint64_t getEnumTagSinglePayload for ObjectCaptureSession.Frame(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24B666CDC);
}

uint64_t sub_24B666CDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 32);
      long long v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_24B562F04(&qword_2697CC9A8);
      long long v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 36);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureSession.Frame(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24B666E20);
}

uint64_t sub_24B666E20(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 32);
      long long v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_24B562F04(&qword_2697CC9A8);
      long long v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 36);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_24B666F50()
{
  type metadata accessor for ObjectCaptureSession.Frame.Camera(319);
  if (v0 <= 0x3F)
  {
    sub_24B663AE4(319, (unint64_t *)&unk_2697CCB88, (void (*)(uint64_t))type metadata accessor for ObjectCaptureSession.Frame.Object);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

ValueMetadata *type metadata accessor for ObjectCaptureSession.Frame.Feedback()
{
  return &type metadata for ObjectCaptureSession.Frame.Feedback;
}

void *initializeBufferWithCopyOfBuffer for ObjectCaptureSession.Frame.Camera(_OWORD *a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v7;
    long long v8 = *((_OWORD *)a2 + 3);
    a1[2] = *((_OWORD *)a2 + 2);
    a1[3] = v8;
    long long v9 = *((_OWORD *)a2 + 5);
    a1[4] = *((_OWORD *)a2 + 4);
    a1[5] = v9;
    uint64_t v10 = a3[6];
    uint64_t v11 = (char *)a1 + v10;
    long long v12 = (char *)a2 + v10;
    a1[6] = *((_OWORD *)a2 + 6);
    uint64_t v13 = sub_24B682C80();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 2, v13))
    {
      uint64_t v15 = sub_24B682C90();
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 2, v13);
    }
    uint64_t v17 = a3[7];
    uint64_t v18 = a3[8];
    uint64_t v19 = (char *)v4 + v17;
    uint64_t v20 = (uint64_t)a2 + v17;
    v19[64] = *(unsigned char *)(v20 + 64);
    long long v21 = *(_OWORD *)(v20 + 48);
    *((_OWORD *)v19 + 2) = *(_OWORD *)(v20 + 32);
    *((_OWORD *)v19 + 3) = v21;
    long long v22 = *(_OWORD *)(v20 + 16);
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    *((_OWORD *)v19 + 1) = v22;
    uint64_t v23 = *(void **)((char *)a2 + v18);
    *(void *)((char *)v4 + v18) = v23;
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)v4 + v24;
    uint64_t v26 = (uint64_t)a2 + v24;
    long long v27 = *(_OWORD *)(v26 + 48);
    *((_OWORD *)v25 + 2) = *(_OWORD *)(v26 + 32);
    *((_OWORD *)v25 + 3) = v27;
    v25[64] = *(unsigned char *)(v26 + 64);
    long long v28 = *(_OWORD *)(v26 + 16);
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
    *((_OWORD *)v25 + 1) = v28;
    id v29 = v23;
  }
  return v4;
}

void destroy for ObjectCaptureSession.Frame.Camera(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_24B682C80();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 2, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  long long v7 = *(void **)(a1 + *(int *)(a2 + 32));
}

_OWORD *initializeWithCopy for ObjectCaptureSession.Frame.Camera(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  long long v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v9 = a3[6];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  a1[6] = a2[6];
  uint64_t v12 = sub_24B682C80();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 2, v12))
  {
    uint64_t v14 = sub_24B682C90();
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 2, v12);
  }
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (char *)a1 + v15;
  uint64_t v18 = (char *)a2 + v15;
  v17[64] = v18[64];
  long long v19 = *((_OWORD *)v18 + 3);
  *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
  *((_OWORD *)v17 + 3) = v19;
  long long v20 = *((_OWORD *)v18 + 1);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v20;
  long long v21 = *(void **)((char *)a2 + v16);
  *(void *)((char *)a1 + v16) = v21;
  uint64_t v22 = a3[9];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  long long v25 = *((_OWORD *)v24 + 3);
  *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
  *((_OWORD *)v23 + 3) = v25;
  v23[64] = v24[64];
  long long v26 = *((_OWORD *)v24 + 1);
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v26;
  id v27 = v21;
  return a1;
}

_OWORD *assignWithCopy for ObjectCaptureSession.Frame.Camera(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  uint64_t v6 = a3[6];
  long long v7 = (char *)a1 + v6;
  long long v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24B682C80();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 2, v9);
  int v13 = v11(v8, 2, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_24B682C90();
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 2, v9);
LABEL_7:
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  long long v18 = *((_OWORD *)v17 + 1);
  long long v19 = *((_OWORD *)v17 + 2);
  long long v20 = *((_OWORD *)v17 + 3);
  v16[64] = v17[64];
  *((_OWORD *)v16 + 2) = v19;
  *((_OWORD *)v16 + 3) = v20;
  *((_OWORD *)v16 + 1) = v18;
  uint64_t v21 = a3[8];
  uint64_t v22 = *(void **)((char *)a1 + v21);
  uint64_t v23 = *(void **)((char *)a2 + v21);
  *(void *)((char *)a1 + v21) = v23;
  id v24 = v23;

  uint64_t v25 = a3[9];
  long long v26 = (char *)a1 + v25;
  id v27 = (char *)a2 + v25;
  *(_OWORD *)long long v26 = *(_OWORD *)v27;
  long long v28 = *((_OWORD *)v27 + 1);
  long long v29 = *((_OWORD *)v27 + 2);
  long long v30 = *((_OWORD *)v27 + 3);
  v26[64] = v27[64];
  *((_OWORD *)v26 + 2) = v29;
  *((_OWORD *)v26 + 3) = v30;
  *((_OWORD *)v26 + 1) = v28;
  return a1;
}

_OWORD *initializeWithTake for ObjectCaptureSession.Frame.Camera(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  long long v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v9 = a3[6];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  a1[6] = a2[6];
  uint64_t v12 = sub_24B682C80();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 2, v12))
  {
    uint64_t v14 = sub_24B682C90();
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 2, v12);
  }
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (char *)a1 + v15;
  long long v18 = (char *)a2 + v15;
  v17[64] = v18[64];
  long long v19 = *((_OWORD *)v18 + 3);
  *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
  *((_OWORD *)v17 + 3) = v19;
  long long v20 = *((_OWORD *)v18 + 1);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v20;
  *(void *)((char *)a1 + v16) = *(void *)((char *)a2 + v16);
  uint64_t v21 = a3[9];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  long long v24 = *((_OWORD *)v23 + 3);
  *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
  *((_OWORD *)v22 + 3) = v24;
  v22[64] = v23[64];
  long long v25 = *((_OWORD *)v23 + 1);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *((_OWORD *)v22 + 1) = v25;
  return a1;
}

_OWORD *assignWithTake for ObjectCaptureSession.Frame.Camera(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  long long v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v9 = a3[6];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  a1[6] = a2[6];
  uint64_t v12 = sub_24B682C80();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 2, v12);
  int v16 = v14(v11, 2, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_24B682C90();
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 2, v12);
LABEL_7:
  uint64_t v18 = a3[7];
  uint64_t v19 = a3[8];
  long long v20 = (char *)a1 + v18;
  uint64_t v21 = (char *)a2 + v18;
  v20[64] = v21[64];
  long long v22 = *((_OWORD *)v21 + 3);
  *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
  *((_OWORD *)v20 + 3) = v22;
  long long v23 = *((_OWORD *)v21 + 1);
  *(_OWORD *)long long v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + 1) = v23;
  long long v24 = *(void **)((char *)a1 + v19);
  *(void *)((char *)a1 + v19) = *(void *)((char *)a2 + v19);

  uint64_t v25 = a3[9];
  long long v26 = (char *)a1 + v25;
  id v27 = (char *)a2 + v25;
  long long v28 = *((_OWORD *)v27 + 3);
  *((_OWORD *)v26 + 2) = *((_OWORD *)v27 + 2);
  *((_OWORD *)v26 + 3) = v28;
  v26[64] = v27[64];
  long long v29 = *((_OWORD *)v27 + 1);
  *(_OWORD *)long long v26 = *(_OWORD *)v27;
  *((_OWORD *)v26 + 1) = v29;
  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectCaptureSession.Frame.Camera(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24B667A8C);
}

uint64_t sub_24B667A8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24B682C90();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 32));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    int v13 = v12 - 1;
    if (v13 < 0) {
      int v13 = -1;
    }
    return (v13 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureSession.Frame.Camera(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24B667B70);
}

uint64_t sub_24B667B70(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24B682C90();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32)) = a2;
  }
  return result;
}

uint64_t sub_24B667C30()
{
  uint64_t result = sub_24B682C90();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ObjectCaptureSession.Frame.Object(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v7;
    long long v8 = *((_OWORD *)a2 + 3);
    a1[2] = *((_OWORD *)a2 + 2);
    a1[3] = v8;
    long long v9 = *((_OWORD *)a2 + 5);
    a1[4] = *((_OWORD *)a2 + 4);
    a1[5] = v9;
    long long v10 = *((_OWORD *)a2 + 7);
    uint64_t v11 = *(int *)(a3 + 24);
    unint64_t v12 = (char *)a1 + v11;
    int v13 = (char *)a2 + v11;
    a1[6] = *((_OWORD *)a2 + 6);
    a1[7] = v10;
    uint64_t v14 = sub_24B682C80();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 2, v14))
    {
      uint64_t v16 = sub_24B682C90();
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 2, v14);
    }
    *(void *)((char *)v4 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for ObjectCaptureSession.Frame.Object(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = sub_24B682C80();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 2, v3)) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  }

  return swift_bridgeObjectRelease();
}

_OWORD *initializeWithCopy for ObjectCaptureSession.Frame.Object(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  long long v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  long long v9 = a2[7];
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  unint64_t v12 = (char *)a2 + v10;
  a1[6] = a2[6];
  a1[7] = v9;
  uint64_t v13 = sub_24B682C80();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 2, v13))
  {
    uint64_t v15 = sub_24B682C90();
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 2, v13);
  }
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  return a1;
}

_OWORD *assignWithCopy for ObjectCaptureSession.Frame.Object(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  uint64_t v6 = *(int *)(a3 + 24);
  long long v7 = (char *)a1 + v6;
  long long v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24B682C80();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 2, v9);
  int v13 = v11(v8, 2, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_24B682C90();
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 2, v9);
LABEL_7:
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for ObjectCaptureSession.Frame.Object(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  long long v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  long long v9 = a2[7];
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  int v12 = (char *)a2 + v10;
  a1[6] = a2[6];
  a1[7] = v9;
  uint64_t v13 = sub_24B682C80();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 2, v13))
  {
    uint64_t v15 = sub_24B682C90();
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 2, v13);
  }
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

_OWORD *assignWithTake for ObjectCaptureSession.Frame.Object(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  long long v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  long long v9 = a2[7];
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  int v12 = (char *)a2 + v10;
  a1[6] = a2[6];
  a1[7] = v9;
  uint64_t v13 = sub_24B682C80();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 2, v13);
  int v17 = v15(v12, 2, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = sub_24B682C90();
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 2, v13);
LABEL_7:
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectCaptureSession.Frame.Object(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24B668580);
}

uint64_t sub_24B668580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24B682C90();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    int v13 = v12 - 1;
    if (v13 < 0) {
      int v13 = -1;
    }
    return (v13 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureSession.Frame.Object(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24B668664);
}

uint64_t sub_24B668664(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24B682C90();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = a2;
  }
  return result;
}

uint64_t sub_24B668724()
{
  uint64_t result = sub_24B682C90();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s5FrameV10PointCloudVwxx()
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t _s5FrameV10PointCloudVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t _s5FrameV10PointCloudVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  return a1;
}

__n128 _s5FrameV10PointCloudVwtk(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t _s5FrameV10PointCloudVwta(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  return a1;
}

uint64_t _s5FrameV10PointCloudVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s5FrameV10PointCloudVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ObjectCaptureSession.Frame.PointCloud()
{
  return &type metadata for ObjectCaptureSession.Frame.PointCloud;
}

ValueMetadata *type metadata accessor for ObjectCaptureSession.Mesh()
{
  return &type metadata for ObjectCaptureSession.Mesh;
}

void *initializeBufferWithCopyOfBuffer for ObjectCaptureSession.Mesh.Anchor(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *a2;
    *a1 = *a2;
    a1 = (void *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24B682410();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = *(void **)((char *)a2 + v8);
    *(void *)((char *)a1 + v8) = v10;
    uint64_t v11 = *(void **)((char *)a2 + v9);
    *(void *)((char *)a1 + v9) = v11;
    uint64_t v12 = a3[7];
    uint64_t v13 = a3[8];
    uint64_t v14 = *(void **)((char *)a2 + v12);
    *(void *)((char *)a1 + v12) = v14;
    uint64_t v15 = *(void **)((char *)a2 + v13);
    *(void *)((char *)a1 + v13) = v15;
    uint64_t v16 = a3[9];
    uint64_t v17 = a3[10];
    uint64_t v18 = (_OWORD *)((char *)a1 + v16);
    uint64_t v19 = (_OWORD *)((char *)a2 + v16);
    long long v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    long long v21 = v19[3];
    void v18[2] = v19[2];
    void v18[3] = v21;
    *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
    uint64_t v22 = a3[12];
    *(_OWORD *)((char *)a1 + a3[11]) = *(_OWORD *)((char *)a2 + a3[11]);
    *(_OWORD *)((char *)a1 + v22) = *(_OWORD *)((char *)a2 + v22);
    *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
    id v23 = v10;
    id v24 = v11;
    id v25 = v14;
    id v26 = v15;
  }
  return a1;
}

void destroy for ObjectCaptureSession.Mesh.Anchor(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_24B682410();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);

  int v5 = *(void **)(a1 + a2[8]);
}

uint64_t initializeWithCopy for ObjectCaptureSession.Mesh.Anchor(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24B682410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  uint64_t v10 = *(void **)(a2 + v8);
  *(void *)(a1 + v8) = v10;
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = *(void **)(a2 + v11);
  *(void *)(a1 + v11) = v13;
  uint64_t v14 = *(void **)(a2 + v12);
  *(void *)(a1 + v12) = v14;
  uint64_t v15 = a3[9];
  uint64_t v16 = a3[10];
  uint64_t v17 = (_OWORD *)(a1 + v15);
  uint64_t v18 = (_OWORD *)(a2 + v15);
  long long v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  long long v20 = v18[3];
  double v17[2] = v18[2];
  v17[3] = v20;
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  uint64_t v21 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v21) = *(_OWORD *)(a2 + v21);
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  id v22 = v9;
  id v23 = v10;
  id v24 = v13;
  id v25 = v14;
  return a1;
}

uint64_t assignWithCopy for ObjectCaptureSession.Mesh.Anchor(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24B682410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)(a2 + v7);
  uint64_t v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  uint64_t v11 = a3[6];
  uint64_t v12 = *(void **)(a2 + v11);
  uint64_t v13 = *(void **)(a1 + v11);
  *(void *)(a1 + v11) = v12;
  id v14 = v12;

  uint64_t v15 = a3[7];
  uint64_t v16 = *(void **)(a2 + v15);
  uint64_t v17 = *(void **)(a1 + v15);
  *(void *)(a1 + v15) = v16;
  id v18 = v16;

  uint64_t v19 = a3[8];
  long long v20 = *(void **)(a1 + v19);
  uint64_t v21 = *(void **)(a2 + v19);
  *(void *)(a1 + v19) = v21;
  id v22 = v21;

  uint64_t v23 = a3[9];
  id v24 = (_OWORD *)(a1 + v23);
  id v25 = (_OWORD *)(a2 + v23);
  *id v24 = *v25;
  v24[1] = v25[1];
  void v24[2] = v25[2];
  v24[3] = v25[3];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  return a1;
}

uint64_t initializeWithTake for ObjectCaptureSession.Mesh.Anchor(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24B682410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[9];
  uint64_t v10 = a3[10];
  uint64_t v11 = (_OWORD *)(a1 + v9);
  uint64_t v12 = (_OWORD *)(a2 + v9);
  long long v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  long long v14 = v12[3];
  _DWORD v11[2] = v12[2];
  v11[3] = v14;
  *(void *)(a1 + v10) = *(void *)(a2 + v10);
  uint64_t v15 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  return a1;
}

uint64_t assignWithTake for ObjectCaptureSession.Mesh.Anchor(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24B682410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  uint64_t v9 = a3[6];
  uint64_t v10 = *(void **)(a1 + v9);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);

  uint64_t v11 = a3[7];
  uint64_t v12 = *(void **)(a1 + v11);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);

  uint64_t v13 = a3[8];
  long long v14 = *(void **)(a1 + v13);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);

  uint64_t v15 = a3[9];
  uint64_t v16 = a3[10];
  uint64_t v17 = (_OWORD *)(a1 + v15);
  id v18 = (_OWORD *)(a2 + v15);
  long long v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  long long v20 = v18[3];
  double v17[2] = v18[2];
  v17[3] = v20;
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  uint64_t v21 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v21) = *(_OWORD *)(a2 + v21);
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectCaptureSession.Mesh.Anchor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24B66902C);
}

uint64_t sub_24B66902C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24B682410();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureSession.Mesh.Anchor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24B669100);
}

uint64_t sub_24B669100(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24B682410();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_24B6691BC()
{
  uint64_t result = sub_24B682410();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void destroy for ObjectCaptureSession.Shot(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
}

void *initializeWithCopy for ObjectCaptureSession.Shot(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = (void *)a2[2];
  int v5 = (void *)a2[3];
  a1[2] = v4;
  a1[3] = v5;
  uint64_t v6 = (void *)a2[4];
  a1[4] = v6;
  id v7 = v3;
  id v8 = v4;
  id v9 = v5;
  id v10 = v6;
  return a1;
}

void *assignWithCopy for ObjectCaptureSession.Shot(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = (void *)a2[1];
  int v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  id v7 = (void *)a1[2];
  id v8 = (void *)a2[2];
  a1[2] = v8;
  id v9 = v8;

  id v10 = (void *)a1[3];
  uint64_t v11 = (void *)a2[3];
  a1[3] = v11;
  id v12 = v11;

  uint64_t v13 = (void *)a1[4];
  long long v14 = (void *)a2[4];
  a1[4] = v14;
  id v15 = v14;

  return a1;
}

uint64_t assignWithTake for ObjectCaptureSession.Shot(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;

  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  int v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectCaptureSession.Shot(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureSession.Shot(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ObjectCaptureSession.Shot()
{
  return &type metadata for ObjectCaptureSession.Shot;
}

ValueMetadata *type metadata accessor for ObjectCaptureSession.Metadata()
{
  return &type metadata for ObjectCaptureSession.Metadata;
}

uint64_t initializeWithCopy for ObjectCaptureSession.Metadata.Session(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ObjectCaptureSession.Metadata.Session(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  return a1;
}

__n128 initializeWithTake for ObjectCaptureSession.Metadata.Session(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ObjectCaptureSession.Metadata.Session(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectCaptureSession.Metadata.Session(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 36)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureSession.Metadata.Session(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 36) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 36) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ObjectCaptureSession.Metadata.Session()
{
  return &type metadata for ObjectCaptureSession.Metadata.Session;
}

uint64_t _s6CoreOC20ObjectCaptureSessionC8MetadataO7SessionV10ProvenanceVwxx_0()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ObjectCaptureSession.Metadata.Session.Provenance(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ObjectCaptureSession.Metadata.Session.Provenance(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for ObjectCaptureSession.Metadata.Session.Provenance(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void *assignWithTake for ObjectCaptureSession.Metadata.Session.Provenance(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectCaptureSession.Metadata.Session.Provenance(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureSession.Metadata.Session.Provenance(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ObjectCaptureSession.Metadata.Session.Provenance()
{
  return &type metadata for ObjectCaptureSession.Metadata.Session.Provenance;
}

void *initializeBufferWithCopyOfBuffer for ObjectCaptureSession.Metadata.Shot(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    id v8 = (_OWORD *)((char *)a1 + v7);
    id v9 = (char *)a2 + v7;
    long long v10 = *(_OWORD *)((char *)a2 + v7 + 16);
    *id v8 = *(_OWORD *)((char *)a2 + v7);
    v8[1] = v10;
    long long v11 = *(_OWORD *)((char *)a2 + v7 + 80);
    v8[4] = *(_OWORD *)((char *)a2 + v7 + 64);
    v8[5] = v11;
    v8[6] = *(_OWORD *)((char *)a2 + v7 + 96);
    long long v12 = *(_OWORD *)((char *)a2 + v7 + 48);
    v8[2] = *(_OWORD *)((char *)a2 + v7 + 32);
    id v8[3] = v12;
    uint64_t v13 = (int *)type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
    uint64_t v14 = v13[6];
    id v15 = (char *)v8 + v14;
    uint64_t v16 = &v9[v14];
    uint64_t v17 = sub_24B682C80();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 2, v17))
    {
      uint64_t v19 = sub_24B682C90();
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 2, v17);
    }
    uint64_t v21 = v13[7];
    long long v75 = *(void **)&v9[v21];
    *(void *)((char *)v8 + v21) = v75;
    uint64_t v22 = v13[8];
    uint64_t v23 = (char *)v8 + v22;
    id v24 = &v9[v22];
    long long v25 = *((_OWORD *)v24 + 3);
    *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
    *((_OWORD *)v23 + 3) = v25;
    v23[64] = v24[64];
    long long v26 = *((_OWORD *)v24 + 1);
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    *((_OWORD *)v23 + 1) = v26;
    uint64_t v27 = v13[9];
    long long v28 = (char *)v8 + v27;
    long long v29 = &v9[v27];
    v28[64] = v29[64];
    long long v30 = *((_OWORD *)v29 + 3);
    *((_OWORD *)v28 + 2) = *((_OWORD *)v29 + 2);
    *((_OWORD *)v28 + 3) = v30;
    long long v31 = *((_OWORD *)v29 + 1);
    *(_OWORD *)long long v28 = *(_OWORD *)v29;
    *((_OWORD *)v28 + 1) = v31;
    uint64_t v32 = v13[10];
    uint64_t v33 = (char *)v8 + v32;
    uint64_t v34 = &v9[v32];
    v33[64] = v34[64];
    long long v35 = *((_OWORD *)v34 + 3);
    *((_OWORD *)v33 + 2) = *((_OWORD *)v34 + 2);
    *((_OWORD *)v33 + 3) = v35;
    long long v36 = *((_OWORD *)v34 + 1);
    *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
    *((_OWORD *)v33 + 1) = v36;
    *(void *)((char *)v8 + v13[11]) = *(void *)&v9[v13[11]];
    *(void *)((char *)v8 + v13[12]) = *(void *)&v9[v13[12]];
    uint64_t v37 = a3[6];
    __dst = (char *)v4 + v37;
    long long v38 = (char *)a2 + v37;
    uint64_t v39 = sub_24B682410();
    uint64_t v40 = *(void *)(v39 - 8);
    uint64_t v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
    id v42 = v75;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v41(v38, 1, v39))
    {
      uint64_t v43 = sub_24B562F04(&qword_2697CC460);
      memcpy(__dst, v38, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 16))(__dst, v38, v39);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(__dst, 0, 1, v39);
    }
    uint64_t v44 = a3[7];
    long long v45 = (char *)v4 + v44;
    int v46 = (char *)a2 + v44;
    int v47 = (void *)*((void *)v46 + 16);
    if (v47 == (void *)1)
    {
      long long v48 = *((_OWORD *)v46 + 7);
      *((_OWORD *)v45 + 6) = *((_OWORD *)v46 + 6);
      *((_OWORD *)v45 + 7) = v48;
      *((_OWORD *)v45 + 8) = *((_OWORD *)v46 + 8);
      v45[144] = v46[144];
      long long v49 = *((_OWORD *)v46 + 3);
      *((_OWORD *)v45 + 2) = *((_OWORD *)v46 + 2);
      *((_OWORD *)v45 + 3) = v49;
      long long v50 = *((_OWORD *)v46 + 5);
      *((_OWORD *)v45 + 4) = *((_OWORD *)v46 + 4);
      *((_OWORD *)v45 + 5) = v50;
      long long v51 = *((_OWORD *)v46 + 1);
      *(_OWORD *)long long v45 = *(_OWORD *)v46;
      *((_OWORD *)v45 + 1) = v51;
    }
    else
    {
      long long v52 = *((_OWORD *)v46 + 1);
      *(_OWORD *)long long v45 = *(_OWORD *)v46;
      *((_OWORD *)v45 + 1) = v52;
      long long v53 = *((_OWORD *)v46 + 3);
      *((_OWORD *)v45 + 2) = *((_OWORD *)v46 + 2);
      *((_OWORD *)v45 + 3) = v53;
      long long v54 = *((_OWORD *)v46 + 5);
      *((_OWORD *)v45 + 4) = *((_OWORD *)v46 + 4);
      *((_OWORD *)v45 + 5) = v54;
      long long v55 = *((_OWORD *)v46 + 7);
      *((_OWORD *)v45 + 6) = *((_OWORD *)v46 + 6);
      *((_OWORD *)v45 + 7) = v55;
      v45[144] = v46[144];
      uint64_t v56 = *((void *)v46 + 17);
      *((void *)v45 + 16) = v47;
      *((void *)v45 + 17) = v56;
      id v57 = v47;
    }
    uint64_t v58 = a3[8];
    uint64_t v59 = a3[9];
    long long v60 = (_OWORD *)((char *)v4 + v58);
    long long v61 = (_OWORD *)((char *)a2 + v58);
    long long v62 = v61[3];
    v60[2] = v61[2];
    float32x4_t v60[3] = v62;
    *(_OWORD *)((char *)v60 + 58) = *(_OWORD *)((char *)v61 + 58);
    long long v63 = v61[1];
    _OWORD *v60 = *v61;
    v60[1] = v63;
    *((unsigned char *)v4 + v59) = *((unsigned char *)a2 + v59);
    uint64_t v64 = a3[10];
    uint64_t v65 = a3[11];
    int v66 = (_OWORD *)((char *)v4 + v64);
    uint64_t v67 = (_OWORD *)((char *)a2 + v64);
    _OWORD *v66 = *v67;
    *(_OWORD *)((char *)v66 + 9) = *(_OWORD *)((char *)v67 + 9);
    uint64_t v68 = *(void **)((char *)a2 + v65);
    *(void *)((char *)v4 + v65) = v68;
    uint64_t v69 = a3[12];
    uint64_t v70 = a3[13];
    uint64_t v71 = (char *)v4 + v69;
    long long v72 = (char *)a2 + v69;
    *(void *)uint64_t v71 = *(void *)v72;
    v71[8] = v72[8];
    *(void *)((char *)v4 + v70) = *(void *)((char *)a2 + v70);
    id v73 = v68;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for ObjectCaptureSession.Metadata.Shot(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
  uint64_t v6 = v4 + *(int *)(v5 + 24);
  uint64_t v7 = sub_24B682C80();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 2, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = a1 + a2[6];
  uint64_t v10 = sub_24B682410();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  long long v12 = *(void **)(a1 + a2[7] + 128);
  if (v12 != (void *)1) {

  }
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ObjectCaptureSession.Metadata.Shot(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (_OWORD *)((char *)a1 + v6);
  uint64_t v8 = (char *)a2 + v6;
  long long v9 = *(_OWORD *)((char *)a2 + v6 + 16);
  *uint64_t v7 = *(_OWORD *)((char *)a2 + v6);
  v7[1] = v9;
  long long v10 = *(_OWORD *)((char *)a2 + v6 + 80);
  _OWORD v7[4] = *(_OWORD *)((char *)a2 + v6 + 64);
  v7[5] = v10;
  v7[6] = *(_OWORD *)((char *)a2 + v6 + 96);
  long long v11 = *(_OWORD *)((char *)a2 + v6 + 48);
  v7[2] = *(_OWORD *)((char *)a2 + v6 + 32);
  v7[3] = v11;
  long long v12 = (int *)type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
  uint64_t v13 = v12[6];
  uint64_t v14 = (char *)v7 + v13;
  id v15 = &v8[v13];
  uint64_t v16 = sub_24B682C80();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 2, v16))
  {
    uint64_t v18 = sub_24B682C90();
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 2, v16);
  }
  uint64_t v19 = v12[7];
  uint64_t v20 = *(void **)&v8[v19];
  *(void *)((char *)v7 + v19) = v20;
  uint64_t v21 = v12[8];
  uint64_t v22 = (char *)v7 + v21;
  uint64_t v23 = &v8[v21];
  long long v24 = *((_OWORD *)v23 + 3);
  *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
  *((_OWORD *)v22 + 3) = v24;
  v22[64] = v23[64];
  long long v25 = *((_OWORD *)v23 + 1);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *((_OWORD *)v22 + 1) = v25;
  uint64_t v26 = v12[9];
  uint64_t v27 = (char *)v7 + v26;
  long long v28 = &v8[v26];
  v27[64] = v28[64];
  long long v29 = *((_OWORD *)v28 + 3);
  *((_OWORD *)v27 + 2) = *((_OWORD *)v28 + 2);
  *((_OWORD *)v27 + 3) = v29;
  long long v30 = *((_OWORD *)v28 + 1);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  *((_OWORD *)v27 + 1) = v30;
  uint64_t v31 = v12[10];
  uint64_t v32 = (char *)v7 + v31;
  uint64_t v33 = &v8[v31];
  v32[64] = v33[64];
  long long v34 = *((_OWORD *)v33 + 3);
  *((_OWORD *)v32 + 2) = *((_OWORD *)v33 + 2);
  *((_OWORD *)v32 + 3) = v34;
  long long v35 = *((_OWORD *)v33 + 1);
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  *((_OWORD *)v32 + 1) = v35;
  *(void *)((char *)v7 + v12[11]) = *(void *)&v8[v12[11]];
  *(void *)((char *)v7 + v12[12]) = *(void *)&v8[v12[12]];
  uint64_t v36 = a3[6];
  __dst = (char *)a1 + v36;
  long long v75 = a3;
  uint64_t v37 = (char *)a2 + v36;
  uint64_t v38 = sub_24B682410();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
  id v41 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v40(v37, 1, v38))
  {
    uint64_t v42 = sub_24B562F04(&qword_2697CC460);
    memcpy(__dst, v37, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(__dst, v37, v38);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(__dst, 0, 1, v38);
  }
  uint64_t v43 = v75[7];
  uint64_t v44 = (char *)a1 + v43;
  long long v45 = (char *)a2 + v43;
  int v46 = (void *)*((void *)v45 + 16);
  if (v46 == (void *)1)
  {
    long long v47 = *((_OWORD *)v45 + 7);
    *((_OWORD *)v44 + 6) = *((_OWORD *)v45 + 6);
    *((_OWORD *)v44 + 7) = v47;
    *((_OWORD *)v44 + 8) = *((_OWORD *)v45 + 8);
    v44[144] = v45[144];
    long long v48 = *((_OWORD *)v45 + 3);
    *((_OWORD *)v44 + 2) = *((_OWORD *)v45 + 2);
    *((_OWORD *)v44 + 3) = v48;
    long long v49 = *((_OWORD *)v45 + 5);
    *((_OWORD *)v44 + 4) = *((_OWORD *)v45 + 4);
    *((_OWORD *)v44 + 5) = v49;
    long long v50 = *((_OWORD *)v45 + 1);
    *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
    *((_OWORD *)v44 + 1) = v50;
  }
  else
  {
    long long v51 = *((_OWORD *)v45 + 1);
    *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
    *((_OWORD *)v44 + 1) = v51;
    long long v52 = *((_OWORD *)v45 + 3);
    *((_OWORD *)v44 + 2) = *((_OWORD *)v45 + 2);
    *((_OWORD *)v44 + 3) = v52;
    long long v53 = *((_OWORD *)v45 + 5);
    *((_OWORD *)v44 + 4) = *((_OWORD *)v45 + 4);
    *((_OWORD *)v44 + 5) = v53;
    long long v54 = *((_OWORD *)v45 + 7);
    *((_OWORD *)v44 + 6) = *((_OWORD *)v45 + 6);
    *((_OWORD *)v44 + 7) = v54;
    v44[144] = v45[144];
    uint64_t v55 = *((void *)v45 + 17);
    *((void *)v44 + 16) = v46;
    *((void *)v44 + 17) = v55;
    id v56 = v46;
  }
  uint64_t v57 = v75[8];
  uint64_t v58 = v75[9];
  uint64_t v59 = (_OWORD *)((char *)a1 + v57);
  long long v60 = (_OWORD *)((char *)a2 + v57);
  long long v61 = v60[3];
  v59[2] = v60[2];
  float32x4_t v59[3] = v61;
  *(_OWORD *)((char *)v59 + 58) = *(_OWORD *)((char *)v60 + 58);
  long long v62 = v60[1];
  *uint64_t v59 = *v60;
  v59[1] = v62;
  *((unsigned char *)a1 + v58) = *((unsigned char *)a2 + v58);
  uint64_t v63 = v75[10];
  uint64_t v64 = v75[11];
  uint64_t v65 = (_OWORD *)((char *)a1 + v63);
  int v66 = (_OWORD *)((char *)a2 + v63);
  *uint64_t v65 = *v66;
  *(_OWORD *)((char *)v65 + 9) = *(_OWORD *)((char *)v66 + 9);
  uint64_t v67 = *(void **)((char *)a2 + v64);
  *(void *)((char *)a1 + v64) = v67;
  uint64_t v68 = v75[12];
  uint64_t v69 = v75[13];
  uint64_t v70 = (char *)a1 + v68;
  uint64_t v71 = (char *)a2 + v68;
  *(void *)uint64_t v70 = *(void *)v71;
  v70[8] = v71[8];
  *(void *)((char *)a1 + v69) = *(void *)((char *)a2 + v69);
  id v72 = v67;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ObjectCaptureSession.Metadata.Shot(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v3 = a3[5];
  uint64_t v4 = (_OWORD *)((char *)a1 + v3);
  uint64_t v5 = (char *)a2 + v3;
  *uint64_t v4 = *(_OWORD *)((char *)a2 + v3);
  v4[1] = *(_OWORD *)((char *)a2 + v3 + 16);
  v4[2] = *(_OWORD *)((char *)a2 + v3 + 32);
  v4[3] = *(_OWORD *)((char *)a2 + v3 + 48);
  v4[4] = *(_OWORD *)((char *)a2 + v3 + 64);
  v4[5] = *(_OWORD *)((char *)a2 + v3 + 80);
  v4[6] = *(_OWORD *)((char *)a2 + v3 + 96);
  uint64_t v6 = (int *)type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
  uint64_t v7 = v6[6];
  uint64_t v8 = (char *)v4 + v7;
  long long v9 = &v5[v7];
  uint64_t v10 = sub_24B682C80();
  uint64_t v11 = *(void *)(v10 - 8);
  long long v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 2, v10);
  int v14 = v12(v9, 2, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 2, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_24B682C90();
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = v6[7];
  uint64_t v17 = *(void **)((char *)v4 + v16);
  uint64_t v18 = *(void **)&v5[v16];
  *(void *)((char *)v4 + v16) = v18;
  id v19 = v18;

  uint64_t v20 = v6[8];
  uint64_t v21 = (char *)v4 + v20;
  uint64_t v22 = &v5[v20];
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  long long v23 = *((_OWORD *)v22 + 1);
  long long v24 = *((_OWORD *)v22 + 2);
  long long v25 = *((_OWORD *)v22 + 3);
  v21[64] = v22[64];
  *((_OWORD *)v21 + 2) = v24;
  *((_OWORD *)v21 + 3) = v25;
  *((_OWORD *)v21 + 1) = v23;
  uint64_t v26 = v6[9];
  uint64_t v27 = (char *)v4 + v26;
  long long v28 = &v5[v26];
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  long long v29 = *((_OWORD *)v28 + 1);
  long long v30 = *((_OWORD *)v28 + 2);
  long long v31 = *((_OWORD *)v28 + 3);
  v27[64] = v28[64];
  *((_OWORD *)v27 + 2) = v30;
  *((_OWORD *)v27 + 3) = v31;
  *((_OWORD *)v27 + 1) = v29;
  uint64_t v32 = v6[10];
  uint64_t v33 = (char *)v4 + v32;
  long long v34 = &v5[v32];
  *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
  long long v35 = *((_OWORD *)v34 + 1);
  long long v36 = *((_OWORD *)v34 + 2);
  long long v37 = *((_OWORD *)v34 + 3);
  v33[64] = v34[64];
  *((_OWORD *)v33 + 2) = v36;
  *((_OWORD *)v33 + 3) = v37;
  *((_OWORD *)v33 + 1) = v35;
  *(void *)((char *)v4 + v6[11]) = *(void *)&v5[v6[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v4 + v6[12]) = *(void *)&v5[v6[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v38 = a3[6];
  uint64_t v39 = (char *)a1 + v38;
  uint64_t v40 = (char *)a2 + v38;
  uint64_t v41 = sub_24B682410();
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48);
  int v44 = v43(v39, 1, v41);
  int v45 = v43(v40, 1, v41);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v39, v41);
LABEL_12:
    uint64_t v46 = sub_24B562F04(&qword_2697CC460);
    memcpy(v39, v40, *(void *)(*(void *)(v46 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v42 + 24))(v39, v40, v41);
LABEL_13:
  uint64_t v47 = a3[7];
  uint64_t v48 = (uint64_t)a1 + v47;
  long long v49 = (char *)a2 + v47;
  long long v50 = *(void **)((char *)a1 + v47 + 128);
  uint64_t v51 = *(void *)((char *)a2 + v47 + 128);
  if (v50 == (void *)1)
  {
    if (v51 == 1)
    {
      long long v52 = *((_OWORD *)v49 + 1);
      *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
      *(_OWORD *)(v48 + 16) = v52;
      long long v53 = *((_OWORD *)v49 + 2);
      long long v54 = *((_OWORD *)v49 + 3);
      long long v55 = *((_OWORD *)v49 + 5);
      *(_OWORD *)(v48 + 64) = *((_OWORD *)v49 + 4);
      *(_OWORD *)(v48 + 80) = v55;
      *(_OWORD *)(v48 + 32) = v53;
      *(_OWORD *)(v48 + 48) = v54;
      long long v56 = *((_OWORD *)v49 + 6);
      long long v57 = *((_OWORD *)v49 + 7);
      long long v58 = *((_OWORD *)v49 + 8);
      *(unsigned char *)(v48 + 144) = v49[144];
      *(_OWORD *)(v48 + 112) = v57;
      *(_OWORD *)(v48 + 128) = v58;
      *(_OWORD *)(v48 + 96) = v56;
    }
    else
    {
      long long v66 = *(_OWORD *)v49;
      long long v67 = *((_OWORD *)v49 + 1);
      long long v68 = *((_OWORD *)v49 + 3);
      *(_OWORD *)(v48 + 32) = *((_OWORD *)v49 + 2);
      *(_OWORD *)(v48 + 48) = v68;
      *(_OWORD *)uint64_t v48 = v66;
      *(_OWORD *)(v48 + 16) = v67;
      long long v69 = *((_OWORD *)v49 + 4);
      long long v70 = *((_OWORD *)v49 + 5);
      long long v71 = *((_OWORD *)v49 + 7);
      *(_OWORD *)(v48 + 96) = *((_OWORD *)v49 + 6);
      *(_OWORD *)(v48 + 112) = v71;
      *(_OWORD *)(v48 + 64) = v69;
      *(_OWORD *)(v48 + 80) = v70;
      id v72 = (void *)*((void *)v49 + 16);
      *(void *)(v48 + 128) = v72;
      uint64_t v73 = *((void *)v49 + 17);
      *(unsigned char *)(v48 + 144) = v49[144];
      *(void *)(v48 + 136) = v73;
      id v74 = v72;
    }
  }
  else if (v51 == 1)
  {
    sub_24B66A80C(v48);
    long long v59 = *((_OWORD *)v49 + 1);
    *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
    *(_OWORD *)(v48 + 16) = v59;
    long long v60 = *((_OWORD *)v49 + 5);
    long long v62 = *((_OWORD *)v49 + 2);
    long long v61 = *((_OWORD *)v49 + 3);
    *(_OWORD *)(v48 + 64) = *((_OWORD *)v49 + 4);
    *(_OWORD *)(v48 + 80) = v60;
    *(_OWORD *)(v48 + 32) = v62;
    *(_OWORD *)(v48 + 48) = v61;
    long long v64 = *((_OWORD *)v49 + 7);
    long long v63 = *((_OWORD *)v49 + 8);
    long long v65 = *((_OWORD *)v49 + 6);
    *(unsigned char *)(v48 + 144) = v49[144];
    *(_OWORD *)(v48 + 112) = v64;
    *(_OWORD *)(v48 + 128) = v63;
    *(_OWORD *)(v48 + 96) = v65;
  }
  else
  {
    *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
    *(_OWORD *)(v48 + 16) = *((_OWORD *)v49 + 1);
    *(_OWORD *)(v48 + 32) = *((_OWORD *)v49 + 2);
    *(_OWORD *)(v48 + 48) = *((_OWORD *)v49 + 3);
    *(_OWORD *)(v48 + 64) = *((_OWORD *)v49 + 4);
    *(_OWORD *)(v48 + 80) = *((_OWORD *)v49 + 5);
    *(_OWORD *)(v48 + 96) = *((_OWORD *)v49 + 6);
    *(_OWORD *)(v48 + 112) = *((_OWORD *)v49 + 7);
    long long v75 = (void *)*((void *)v49 + 16);
    *(void *)(v48 + 128) = v75;
    id v76 = v75;

    uint64_t v77 = *((void *)v49 + 17);
    *(unsigned char *)(v48 + 144) = v49[144];
    *(void *)(v48 + 136) = v77;
  }
  uint64_t v78 = a3[8];
  long long v79 = (_OWORD *)((char *)a1 + v78);
  long long v80 = (_OWORD *)((char *)a2 + v78);
  *long long v79 = *v80;
  long long v81 = v80[1];
  long long v82 = v80[2];
  long long v83 = v80[3];
  *(_OWORD *)((char *)v79 + 58) = *(_OWORD *)((char *)v80 + 58);
  v79[2] = v82;
  v79[3] = v83;
  v79[1] = v81;
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v84 = a3[10];
  long long v85 = (_OWORD *)((char *)a1 + v84);
  uint64_t v86 = (long long *)((char *)a2 + v84);
  long long v87 = *v86;
  *(_OWORD *)((char *)v85 + 9) = *(long long *)((char *)v86 + 9);
  *long long v85 = v87;
  uint64_t v88 = a3[11];
  uint64_t v89 = *(void **)((char *)a1 + v88);
  long long v90 = *(void **)((char *)a2 + v88);
  *(void *)((char *)a1 + v88) = v90;
  id v91 = v90;

  uint64_t v92 = a3[12];
  long long v93 = (char *)a1 + v92;
  long long v94 = (char *)a2 + v92;
  uint64_t v95 = *(void *)v94;
  v93[8] = v94[8];
  *(void *)long long v93 = v95;
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24B66A80C(uint64_t a1)
{
  return a1;
}

void *initializeWithTake for ObjectCaptureSession.Metadata.Shot(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (_OWORD *)((char *)a1 + v6);
  uint64_t v8 = (char *)a2 + v6;
  long long v9 = *(_OWORD *)((char *)a2 + v6 + 16);
  *uint64_t v7 = *(_OWORD *)((char *)a2 + v6);
  v7[1] = v9;
  long long v10 = *(_OWORD *)((char *)a2 + v6 + 80);
  _OWORD v7[4] = *(_OWORD *)((char *)a2 + v6 + 64);
  v7[5] = v10;
  v7[6] = *(_OWORD *)((char *)a2 + v6 + 96);
  long long v11 = *(_OWORD *)((char *)a2 + v6 + 48);
  v7[2] = *(_OWORD *)((char *)a2 + v6 + 32);
  v7[3] = v11;
  long long v12 = (int *)type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
  uint64_t v13 = v12[6];
  int v14 = (char *)v7 + v13;
  uint64_t v15 = &v8[v13];
  uint64_t v16 = sub_24B682C80();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 2, v16))
  {
    uint64_t v18 = sub_24B682C90();
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 2, v16);
  }
  *(void *)((char *)v7 + v12[7]) = *(void *)&v8[v12[7]];
  uint64_t v19 = v12[8];
  uint64_t v20 = (char *)v7 + v19;
  uint64_t v21 = &v8[v19];
  long long v22 = *((_OWORD *)v21 + 3);
  *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
  *((_OWORD *)v20 + 3) = v22;
  v20[64] = v21[64];
  long long v23 = *((_OWORD *)v21 + 1);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + 1) = v23;
  uint64_t v24 = v12[9];
  long long v25 = (char *)v7 + v24;
  uint64_t v26 = &v8[v24];
  v25[64] = v26[64];
  long long v27 = *((_OWORD *)v26 + 3);
  *((_OWORD *)v25 + 2) = *((_OWORD *)v26 + 2);
  *((_OWORD *)v25 + 3) = v27;
  long long v28 = *((_OWORD *)v26 + 1);
  *(_OWORD *)long long v25 = *(_OWORD *)v26;
  *((_OWORD *)v25 + 1) = v28;
  uint64_t v29 = v12[10];
  long long v30 = (char *)v7 + v29;
  long long v31 = &v8[v29];
  v30[64] = v31[64];
  long long v32 = *((_OWORD *)v31 + 3);
  *((_OWORD *)v30 + 2) = *((_OWORD *)v31 + 2);
  *((_OWORD *)v30 + 3) = v32;
  long long v33 = *((_OWORD *)v31 + 1);
  *(_OWORD *)long long v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v33;
  *(void *)((char *)v7 + v12[11]) = *(void *)&v8[v12[11]];
  *(void *)((char *)v7 + v12[12]) = *(void *)&v8[v12[12]];
  uint64_t v34 = a3[6];
  long long v35 = (char *)a1 + v34;
  long long v36 = (char *)a2 + v34;
  uint64_t v37 = sub_24B682410();
  uint64_t v38 = *(void *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
  {
    uint64_t v39 = sub_24B562F04(&qword_2697CC460);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v35, v36, v37);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  }
  uint64_t v40 = a3[7];
  uint64_t v41 = a3[8];
  uint64_t v42 = (char *)a1 + v40;
  uint64_t v43 = (char *)a2 + v40;
  v42[144] = v43[144];
  long long v44 = *((_OWORD *)v43 + 5);
  *((_OWORD *)v42 + 4) = *((_OWORD *)v43 + 4);
  *((_OWORD *)v42 + 5) = v44;
  long long v45 = *((_OWORD *)v43 + 3);
  *((_OWORD *)v42 + 2) = *((_OWORD *)v43 + 2);
  *((_OWORD *)v42 + 3) = v45;
  long long v46 = *((_OWORD *)v43 + 8);
  long long v47 = *((_OWORD *)v43 + 6);
  *((_OWORD *)v42 + 7) = *((_OWORD *)v43 + 7);
  *((_OWORD *)v42 + 8) = v46;
  *((_OWORD *)v42 + 6) = v47;
  long long v48 = *((_OWORD *)v43 + 1);
  *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
  *((_OWORD *)v42 + 1) = v48;
  long long v49 = (_OWORD *)((char *)a1 + v41);
  long long v50 = (_OWORD *)((char *)a2 + v41);
  *(_OWORD *)((char *)v49 + 58) = *(_OWORD *)((char *)v50 + 58);
  long long v51 = v50[3];
  v49[2] = v50[2];
  v49[3] = v51;
  long long v52 = v50[1];
  *long long v49 = *v50;
  v49[1] = v52;
  uint64_t v53 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  long long v54 = (_OWORD *)((char *)a1 + v53);
  long long v55 = (_OWORD *)((char *)a2 + v53);
  *long long v54 = *v55;
  *(_OWORD *)((char *)v54 + 9) = *(_OWORD *)((char *)v55 + 9);
  uint64_t v56 = a3[12];
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  long long v57 = (char *)a1 + v56;
  long long v58 = (char *)a2 + v56;
  *(void *)long long v57 = *(void *)v58;
  v57[8] = v58[8];
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  return a1;
}

void *assignWithTake for ObjectCaptureSession.Metadata.Shot(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v3 = a3[5];
  uint64_t v4 = (_OWORD *)((char *)a1 + v3);
  uint64_t v5 = (char *)a2 + v3;
  long long v6 = *(_OWORD *)((char *)a2 + v3 + 16);
  *uint64_t v4 = *(_OWORD *)((char *)a2 + v3);
  v4[1] = v6;
  long long v7 = *(_OWORD *)((char *)a2 + v3 + 48);
  v4[2] = *(_OWORD *)((char *)a2 + v3 + 32);
  v4[3] = v7;
  long long v8 = *(_OWORD *)((char *)a2 + v3 + 80);
  v4[4] = *(_OWORD *)((char *)a2 + v3 + 64);
  v4[5] = v8;
  v4[6] = *(_OWORD *)((char *)a2 + v3 + 96);
  long long v9 = (int *)type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
  uint64_t v10 = v9[6];
  long long v11 = (char *)v4 + v10;
  long long v12 = &v5[v10];
  uint64_t v13 = sub_24B682C80();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 2, v13);
  int v17 = v15(v12, 2, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 2, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    uint64_t v18 = sub_24B682C90();
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
LABEL_7:
  uint64_t v19 = v9[7];
  uint64_t v20 = *(void **)((char *)v4 + v19);
  *(void *)((char *)v4 + v19) = *(void *)&v5[v19];

  uint64_t v21 = v9[8];
  long long v22 = (char *)v4 + v21;
  long long v23 = &v5[v21];
  long long v24 = *((_OWORD *)v23 + 3);
  *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
  *((_OWORD *)v22 + 3) = v24;
  v22[64] = v23[64];
  long long v25 = *((_OWORD *)v23 + 1);
  *(_OWORD *)long long v22 = *(_OWORD *)v23;
  *((_OWORD *)v22 + 1) = v25;
  uint64_t v26 = v9[9];
  long long v27 = (char *)v4 + v26;
  long long v28 = &v5[v26];
  long long v29 = *((_OWORD *)v28 + 3);
  *((_OWORD *)v27 + 2) = *((_OWORD *)v28 + 2);
  *((_OWORD *)v27 + 3) = v29;
  v27[64] = v28[64];
  long long v30 = *((_OWORD *)v28 + 1);
  *(_OWORD *)long long v27 = *(_OWORD *)v28;
  *((_OWORD *)v27 + 1) = v30;
  uint64_t v31 = v9[10];
  long long v32 = (char *)v4 + v31;
  long long v33 = &v5[v31];
  v32[64] = v33[64];
  long long v34 = *((_OWORD *)v33 + 3);
  *((_OWORD *)v32 + 2) = *((_OWORD *)v33 + 2);
  *((_OWORD *)v32 + 3) = v34;
  long long v35 = *((_OWORD *)v33 + 1);
  *(_OWORD *)long long v32 = *(_OWORD *)v33;
  *((_OWORD *)v32 + 1) = v35;
  *(void *)((char *)v4 + v9[11]) = *(void *)&v5[v9[11]];
  swift_bridgeObjectRelease();
  *(void *)((char *)v4 + v9[12]) = *(void *)&v5[v9[12]];
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[6];
  uint64_t v37 = (char *)a1 + v36;
  uint64_t v38 = (char *)a2 + v36;
  uint64_t v39 = sub_24B682410();
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v41 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48);
  int v42 = v41(v37, 1, v39);
  int v43 = v41(v38, 1, v39);
  if (v42)
  {
    if (!v43)
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v37, v38, v39);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v43)
  {
    (*(void (**)(char *, uint64_t))(v40 + 8))(v37, v39);
LABEL_12:
    uint64_t v44 = sub_24B562F04(&qword_2697CC460);
    memcpy(v37, v38, *(void *)(*(void *)(v44 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v40 + 40))(v37, v38, v39);
LABEL_13:
  uint64_t v45 = a3[7];
  uint64_t v46 = (uint64_t)a1 + v45;
  long long v47 = (char *)a2 + v45;
  long long v48 = *(void **)((char *)a1 + v45 + 128);
  if (v48 != (void *)1)
  {
    uint64_t v49 = *((void *)v47 + 16);
    if (v49 != 1)
    {
      long long v54 = *((_OWORD *)v47 + 1);
      *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
      *(_OWORD *)(v46 + 16) = v54;
      long long v55 = *((_OWORD *)v47 + 3);
      *(_OWORD *)(v46 + 32) = *((_OWORD *)v47 + 2);
      *(_OWORD *)(v46 + 48) = v55;
      long long v56 = *((_OWORD *)v47 + 5);
      *(_OWORD *)(v46 + 64) = *((_OWORD *)v47 + 4);
      *(_OWORD *)(v46 + 80) = v56;
      long long v57 = *((_OWORD *)v47 + 7);
      *(_OWORD *)(v46 + 96) = *((_OWORD *)v47 + 6);
      *(_OWORD *)(v46 + 112) = v57;
      *(void *)(v46 + 128) = v49;

      *(void *)(v46 + 136) = *((void *)v47 + 17);
      *(unsigned char *)(v46 + 144) = v47[144];
      goto LABEL_18;
    }
    sub_24B66A80C(v46);
  }
  long long v50 = *((_OWORD *)v47 + 7);
  *(_OWORD *)(v46 + 96) = *((_OWORD *)v47 + 6);
  *(_OWORD *)(v46 + 112) = v50;
  *(_OWORD *)(v46 + 128) = *((_OWORD *)v47 + 8);
  *(unsigned char *)(v46 + 144) = v47[144];
  long long v51 = *((_OWORD *)v47 + 3);
  *(_OWORD *)(v46 + 32) = *((_OWORD *)v47 + 2);
  *(_OWORD *)(v46 + 48) = v51;
  long long v52 = *((_OWORD *)v47 + 5);
  *(_OWORD *)(v46 + 64) = *((_OWORD *)v47 + 4);
  *(_OWORD *)(v46 + 80) = v52;
  long long v53 = *((_OWORD *)v47 + 1);
  *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
  *(_OWORD *)(v46 + 16) = v53;
LABEL_18:
  uint64_t v58 = a3[8];
  uint64_t v59 = a3[9];
  long long v60 = (_OWORD *)((char *)a1 + v58);
  long long v61 = (_OWORD *)((char *)a2 + v58);
  long long v62 = v61[3];
  v60[2] = v61[2];
  float32x4_t v60[3] = v62;
  *(_OWORD *)((char *)v60 + 58) = *(_OWORD *)((char *)v61 + 58);
  long long v63 = v61[1];
  _OWORD *v60 = *v61;
  v60[1] = v63;
  *((unsigned char *)a1 + v59) = *((unsigned char *)a2 + v59);
  uint64_t v64 = a3[10];
  uint64_t v65 = a3[11];
  long long v66 = (_OWORD *)((char *)a1 + v64);
  long long v67 = (_OWORD *)((char *)a2 + v64);
  _OWORD *v66 = *v67;
  *(_OWORD *)((char *)v66 + 9) = *(_OWORD *)((char *)v67 + 9);
  long long v68 = *(void **)((char *)a1 + v65);
  *(void *)((char *)a1 + v65) = *(void *)((char *)a2 + v65);

  uint64_t v69 = a3[12];
  uint64_t v70 = a3[13];
  long long v71 = (char *)a1 + v69;
  id v72 = (char *)a2 + v69;
  *(void *)long long v71 = *(void *)v72;
  v71[8] = v72[8];
  *(void *)((char *)a1 + v70) = *(void *)((char *)a2 + v70);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectCaptureSession.Metadata.Shot(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24B66B088);
}

uint64_t sub_24B66B088(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_5:
    long long v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = sub_24B562F04(&qword_2697CC460);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[6];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + a3[13]);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureSession.Metadata.Shot(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24B66B1B0);
}

uint64_t sub_24B66B1B0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
  }
  else
  {
    uint64_t result = sub_24B562F04(&qword_2697CC460);
    if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
    {
      *(void *)(a1 + a4[13]) = (a2 - 1);
      return result;
    }
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[6];
  }
  unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);

  return v13(a1 + v11, a2, a2, v9);
}

void sub_24B66B2C0()
{
  type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(319);
  if (v0 <= 0x3F)
  {
    sub_24B663AE4(319, &qword_2697CC138, MEMORY[0x263F07508]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *initializeBufferWithCopyOfBuffer for ObjectCaptureSession.Metadata.Shot.Camera(_OWORD *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v7;
    long long v8 = *((_OWORD *)a2 + 3);
    a1[2] = *((_OWORD *)a2 + 2);
    a1[3] = v8;
    long long v9 = *((_OWORD *)a2 + 5);
    a1[4] = *((_OWORD *)a2 + 4);
    a1[5] = v9;
    uint64_t v10 = a3[6];
    uint64_t v11 = (char *)a1 + v10;
    long long v12 = (char *)a2 + v10;
    a1[6] = *((_OWORD *)a2 + 6);
    uint64_t v13 = sub_24B682C80();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 2, v13))
    {
      uint64_t v15 = sub_24B682C90();
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 2, v13);
    }
    uint64_t v17 = a3[7];
    uint64_t v18 = a3[8];
    uint64_t v19 = *(void **)((char *)a2 + v17);
    *(void *)((char *)v4 + v17) = v19;
    uint64_t v20 = (char *)v4 + v18;
    uint64_t v21 = (uint64_t)a2 + v18;
    v20[64] = *(unsigned char *)(v21 + 64);
    long long v22 = *(_OWORD *)(v21 + 48);
    *((_OWORD *)v20 + 2) = *(_OWORD *)(v21 + 32);
    *((_OWORD *)v20 + 3) = v22;
    long long v23 = *(_OWORD *)(v21 + 16);
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    *((_OWORD *)v20 + 1) = v23;
    uint64_t v24 = a3[9];
    uint64_t v25 = a3[10];
    uint64_t v26 = (char *)v4 + v24;
    uint64_t v27 = (uint64_t)a2 + v24;
    v26[64] = *(unsigned char *)(v27 + 64);
    long long v28 = *(_OWORD *)(v27 + 48);
    *((_OWORD *)v26 + 2) = *(_OWORD *)(v27 + 32);
    *((_OWORD *)v26 + 3) = v28;
    long long v29 = *(_OWORD *)(v27 + 16);
    *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
    *((_OWORD *)v26 + 1) = v29;
    long long v30 = (char *)v4 + v25;
    uint64_t v31 = (uint64_t)a2 + v25;
    v30[64] = *(unsigned char *)(v31 + 64);
    long long v32 = *(_OWORD *)(v31 + 48);
    *((_OWORD *)v30 + 2) = *(_OWORD *)(v31 + 32);
    *((_OWORD *)v30 + 3) = v32;
    long long v33 = *(_OWORD *)(v31 + 16);
    *(_OWORD *)long long v30 = *(_OWORD *)v31;
    *((_OWORD *)v30 + 1) = v33;
    uint64_t v34 = a3[12];
    *(void *)((char *)v4 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    *(void *)((char *)v4 + v34) = *(uint64_t *)((char *)a2 + v34);
    id v35 = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for ObjectCaptureSession.Metadata.Shot.Camera(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_24B682C80();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 2, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

_OWORD *initializeWithCopy for ObjectCaptureSession.Metadata.Shot.Camera(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  long long v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v9 = a3[6];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  a1[6] = a2[6];
  uint64_t v12 = sub_24B682C80();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 2, v12))
  {
    uint64_t v14 = sub_24B682C90();
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 2, v12);
  }
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = *(void **)((char *)a2 + v15);
  *(void *)((char *)a1 + v15) = v17;
  uint64_t v18 = (char *)a1 + v16;
  uint64_t v19 = (char *)a2 + v16;
  v18[64] = v19[64];
  long long v20 = *((_OWORD *)v19 + 3);
  *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
  *((_OWORD *)v18 + 3) = v20;
  long long v21 = *((_OWORD *)v19 + 1);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v21;
  uint64_t v22 = a3[9];
  uint64_t v23 = a3[10];
  uint64_t v24 = (char *)a1 + v22;
  uint64_t v25 = (char *)a2 + v22;
  v24[64] = v25[64];
  long long v26 = *((_OWORD *)v25 + 3);
  *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
  *((_OWORD *)v24 + 3) = v26;
  long long v27 = *((_OWORD *)v25 + 1);
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *((_OWORD *)v24 + 1) = v27;
  long long v28 = (char *)a1 + v23;
  long long v29 = (char *)a2 + v23;
  v28[64] = v29[64];
  long long v30 = *((_OWORD *)v29 + 3);
  *((_OWORD *)v28 + 2) = *((_OWORD *)v29 + 2);
  *((_OWORD *)v28 + 3) = v30;
  long long v31 = *((_OWORD *)v29 + 1);
  *(_OWORD *)long long v28 = *(_OWORD *)v29;
  *((_OWORD *)v28 + 1) = v31;
  uint64_t v32 = a3[12];
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  *(void *)((char *)a1 + v32) = *(void *)((char *)a2 + v32);
  id v33 = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_OWORD *assignWithCopy for ObjectCaptureSession.Metadata.Shot.Camera(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  uint64_t v6 = a3[6];
  long long v7 = (char *)a1 + v6;
  long long v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24B682C80();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 2, v9);
  int v13 = v11(v8, 2, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_24B682C90();
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 2, v9);
LABEL_7:
  uint64_t v15 = a3[7];
  uint64_t v16 = *(void **)((char *)a1 + v15);
  uint64_t v17 = *(void **)((char *)a2 + v15);
  *(void *)((char *)a1 + v15) = v17;
  id v18 = v17;

  uint64_t v19 = a3[8];
  long long v20 = (char *)a1 + v19;
  long long v21 = (char *)a2 + v19;
  *(_OWORD *)long long v20 = *(_OWORD *)v21;
  long long v22 = *((_OWORD *)v21 + 1);
  long long v23 = *((_OWORD *)v21 + 2);
  long long v24 = *((_OWORD *)v21 + 3);
  v20[64] = v21[64];
  *((_OWORD *)v20 + 2) = v23;
  *((_OWORD *)v20 + 3) = v24;
  *((_OWORD *)v20 + 1) = v22;
  uint64_t v25 = a3[9];
  long long v26 = (char *)a1 + v25;
  long long v27 = (char *)a2 + v25;
  *(_OWORD *)long long v26 = *(_OWORD *)v27;
  long long v28 = *((_OWORD *)v27 + 1);
  long long v29 = *((_OWORD *)v27 + 2);
  long long v30 = *((_OWORD *)v27 + 3);
  v26[64] = v27[64];
  *((_OWORD *)v26 + 2) = v29;
  *((_OWORD *)v26 + 3) = v30;
  *((_OWORD *)v26 + 1) = v28;
  uint64_t v31 = a3[10];
  uint64_t v32 = (char *)a1 + v31;
  id v33 = (char *)a2 + v31;
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  long long v34 = *((_OWORD *)v33 + 1);
  long long v35 = *((_OWORD *)v33 + 2);
  long long v36 = *((_OWORD *)v33 + 3);
  v32[64] = v33[64];
  *((_OWORD *)v32 + 2) = v35;
  *((_OWORD *)v32 + 3) = v36;
  *((_OWORD *)v32 + 1) = v34;
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for ObjectCaptureSession.Metadata.Shot.Camera(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  long long v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v9 = a3[6];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  a1[6] = a2[6];
  uint64_t v12 = sub_24B682C80();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 2, v12))
  {
    uint64_t v14 = sub_24B682C90();
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 2, v12);
  }
  uint64_t v15 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  v16[64] = v17[64];
  long long v18 = *((_OWORD *)v17 + 3);
  *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
  *((_OWORD *)v16 + 3) = v18;
  long long v19 = *((_OWORD *)v17 + 1);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v19;
  uint64_t v20 = a3[9];
  uint64_t v21 = a3[10];
  long long v22 = (char *)a1 + v20;
  long long v23 = (char *)a2 + v20;
  v22[64] = v23[64];
  long long v24 = *((_OWORD *)v23 + 3);
  *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
  *((_OWORD *)v22 + 3) = v24;
  long long v25 = *((_OWORD *)v23 + 1);
  *(_OWORD *)long long v22 = *(_OWORD *)v23;
  *((_OWORD *)v22 + 1) = v25;
  long long v26 = (char *)a1 + v21;
  long long v27 = (char *)a2 + v21;
  v26[64] = v27[64];
  long long v28 = *((_OWORD *)v27 + 3);
  *((_OWORD *)v26 + 2) = *((_OWORD *)v27 + 2);
  *((_OWORD *)v26 + 3) = v28;
  long long v29 = *((_OWORD *)v27 + 1);
  *(_OWORD *)long long v26 = *(_OWORD *)v27;
  *((_OWORD *)v26 + 1) = v29;
  uint64_t v30 = a3[12];
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  *(void *)((char *)a1 + v30) = *(void *)((char *)a2 + v30);
  return a1;
}

_OWORD *assignWithTake for ObjectCaptureSession.Metadata.Shot.Camera(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  long long v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v9 = a3[6];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  a1[6] = a2[6];
  uint64_t v12 = sub_24B682C80();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 2, v12);
  int v16 = v14(v11, 2, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_24B682C90();
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 2, v12);
LABEL_7:
  uint64_t v18 = a3[7];
  long long v19 = *(void **)((char *)a1 + v18);
  *(void *)((char *)a1 + v18) = *(void *)((char *)a2 + v18);

  uint64_t v20 = a3[8];
  uint64_t v21 = a3[9];
  long long v22 = (char *)a1 + v20;
  long long v23 = (char *)a2 + v20;
  v22[64] = v23[64];
  long long v24 = *((_OWORD *)v23 + 3);
  *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
  *((_OWORD *)v22 + 3) = v24;
  long long v25 = *((_OWORD *)v23 + 1);
  *(_OWORD *)long long v22 = *(_OWORD *)v23;
  *((_OWORD *)v22 + 1) = v25;
  long long v26 = (char *)a1 + v21;
  long long v27 = (char *)a2 + v21;
  v26[64] = v27[64];
  long long v28 = *((_OWORD *)v27 + 3);
  *((_OWORD *)v26 + 2) = *((_OWORD *)v27 + 2);
  *((_OWORD *)v26 + 3) = v28;
  long long v29 = *((_OWORD *)v27 + 1);
  *(_OWORD *)long long v26 = *(_OWORD *)v27;
  *((_OWORD *)v26 + 1) = v29;
  uint64_t v30 = a3[10];
  uint64_t v31 = a3[11];
  uint64_t v32 = (char *)a1 + v30;
  id v33 = (char *)a2 + v30;
  long long v34 = *(_OWORD *)v33;
  long long v35 = *((_OWORD *)v33 + 1);
  long long v36 = *((_OWORD *)v33 + 2);
  long long v37 = *((_OWORD *)v33 + 3);
  v32[64] = v33[64];
  *((_OWORD *)v32 + 2) = v36;
  *((_OWORD *)v32 + 3) = v37;
  *(_OWORD *)uint64_t v32 = v34;
  *((_OWORD *)v32 + 1) = v35;
  *(void *)((char *)a1 + v31) = *(void *)((char *)a2 + v31);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectCaptureSession.Metadata.Shot.Camera(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24B66BF74);
}

uint64_t sub_24B66BF74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24B682C90();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 44));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureSession.Metadata.Shot.Camera(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24B66C04C);
}

uint64_t sub_24B66C04C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24B682C90();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 44)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_24B66C10C()
{
  uint64_t result = sub_24B682C90();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ObjectCaptureSession.Metadata.Shot.CaptureMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24B66C2A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ObjectCaptureSession.Metadata.Shot.CaptureMode()
{
  return &type metadata for ObjectCaptureSession.Metadata.Shot.CaptureMode;
}

void destroy for ObjectCaptureSession.Metadata.Shot.Object(uint64_t a1)
{
}

uint64_t initializeWithCopy for ObjectCaptureSession.Metadata.Shot.Object(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  long long v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  uint64_t v7 = *(void **)(a2 + 128);
  uint64_t v8 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = v7;
  *(void *)(a1 + 136) = v8;
  id v9 = v7;
  return a1;
}

uint64_t assignWithCopy for ObjectCaptureSession.Metadata.Shot.Object(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  long long v4 = *(void **)(a1 + 128);
  long long v5 = *(void **)(a2 + 128);
  *(void *)(a1 + 128) = v5;
  id v6 = v5;

  uint64_t v7 = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 136) = v7;
  return a1;
}

__n128 initializeWithTake for ObjectCaptureSession.Metadata.Shot.Object(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for ObjectCaptureSession.Metadata.Shot.Object(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  long long v8 = *(void **)(a1 + 128);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);

  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectCaptureSession.Metadata.Shot.Object(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 145)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 128);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureSession.Metadata.Shot.Object(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 144) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 145) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 145) = 0;
    }
    if (a2) {
      *(void *)(result + 128) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ObjectCaptureSession.Metadata.Shot.Object()
{
  return &type metadata for ObjectCaptureSession.Metadata.Shot.Object;
}

__n128 initializeWithCopy for ObjectCaptureSession.Metadata.Shot.Scene(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ObjectCaptureSession.Metadata.Shot.Scene(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 73)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureSession.Metadata.Shot.Scene(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 73) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ObjectCaptureSession.Metadata.Shot.Scene()
{
  return &type metadata for ObjectCaptureSession.Metadata.Shot.Scene;
}

uint64_t getEnumTagSinglePayload for ObjectCaptureSession.CaptureOptions(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[16]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureSession.CaptureOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ObjectCaptureSession.CaptureOptions()
{
  return &type metadata for ObjectCaptureSession.CaptureOptions;
}

uint64_t type metadata accessor for ObjectCaptureSession.ShotAnchor()
{
  return self;
}

__n128 initializeWithCopy for ObjectCaptureSession.CameraInfos(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  long long v7 = a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  __n128 result = (__n128)a2[11];
  long long v11 = a2[12];
  long long v12 = a2[13];
  *(unsigned char *)(a1 + 224) = *((unsigned char *)a2 + 224);
  *(_OWORD *)(a1 + 192) = v11;
  *(_OWORD *)(a1 + 208) = v12;
  *(__n128 *)(a1 + 176) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ObjectCaptureSession.CameraInfos(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 225)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureSession.CameraInfos(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 216) = 0;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 224) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 225) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ObjectCaptureSession.CameraInfos()
{
  return &type metadata for ObjectCaptureSession.CameraInfos;
}

uint64_t method lookup function for ObjectCaptureSessionObservingPublishers(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ObjectCaptureSessionObservingPublishers);
}

uint64_t dispatch thunk of ObjectCaptureSessionObservingPublishers.framePublisher.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of ObjectCaptureSessionObservingPublishers.meshPublisher.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of ObjectCaptureSessionObservingPublishers.tapPositionPublisher.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of ObjectCaptureSessionObservingPublishers.planeDetectionPublisher.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t dispatch thunk of ObjectCaptureSessionObservingPublishers.explicitFeedbackPublisher.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t dispatch thunk of ObjectCaptureSessionObservingPublishers.cameraControlPublisher.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 472))();
}

uint64_t dispatch thunk of ObjectCaptureSessionObservingPublishers.shotCameraPosePublisher.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 520))();
}

uint64_t dispatch thunk of ObjectCaptureSessionObservingPublishers.shotCameraInvalidPoseNumPublisher.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 568))();
}

uint64_t method lookup function for ObjectCaptureSessionWritingPublishers(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ObjectCaptureSessionWritingPublishers);
}

uint64_t dispatch thunk of ObjectCaptureSessionWritingPublishers.shotPublisher.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of ObjectCaptureSessionWritingPublishers.shotMetadataPublisher.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of ObjectCaptureSessionWritingPublishers.sessionMetadataPublisher.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of ObjectCaptureSessionWritingPublishers.planesPublisher.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t dispatch thunk of ObjectCaptureSessionWritingPublishers.depthPointCloudPublisher.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of ObjectCaptureSessionWritingPublishers.meshPublisher.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 456))();
}

uint64_t dispatch thunk of ObjectCaptureSessionWritingPublishers.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 528))();
}

uint64_t destroy for ObjectCaptureSessionFrameSPI(uint64_t a1)
{
  if (*(void *)a1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 336))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ObjectCaptureSessionFrameSPI(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    uint64_t v5 = *(void *)(a2 + 16);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    uint64_t v6 = *(void *)(a2 + 24);
    uint64_t v7 = *(void *)(a2 + 32);
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = v6;
    uint64_t v8 = *(void *)(a2 + 40);
    uint64_t v9 = *(void *)(a2 + 48);
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = v8;
    uint64_t v10 = *(void *)(a2 + 56);
    uint64_t v11 = *(void *)(a2 + 64);
    *(void *)(a1 + 48) = v9;
    *(void *)(a1 + 56) = v10;
    *(void *)(a1 + 64) = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v12 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v12;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    long long v13 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v13;
  }
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  long long v14 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v14;
  long long v15 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v15;
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  long long v16 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v16;
  long long v17 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v17;
  uint64_t v18 = *(void **)(a2 + 240);
  *(void *)(a1 + 240) = v18;
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  long long v19 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v19;
  long long v20 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v20;
  uint64_t v21 = *(void *)(a2 + 336);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v22 = v18;
  swift_bridgeObjectRetain();
  if (v21)
  {
    uint64_t v23 = *(void *)(a2 + 344);
    *(void *)(a1 + 336) = v21;
    *(void *)(a1 + 344) = v23;
    long long v24 = *(_OWORD *)(a2 + 368);
    *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
    *(_OWORD *)(a1 + 368) = v24;
    long long v25 = *(_OWORD *)(a2 + 400);
    *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
    *(_OWORD *)(a1 + 400) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v26 = *(_OWORD *)(a2 + 384);
    *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
    *(_OWORD *)(a1 + 384) = v26;
    *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
    long long v27 = *(_OWORD *)(a2 + 352);
    *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
    *(_OWORD *)(a1 + 352) = v27;
  }
  long long v28 = *(void **)(a2 + 416);
  *(void *)(a1 + 416) = v28;
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  long long v29 = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = v29;
  long long v30 = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 496) = v30;
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  long long v31 = *(_OWORD *)(a2 + 528);
  long long v32 = *(_OWORD *)(a2 + 544);
  long long v33 = *(_OWORD *)(a2 + 576);
  *(_OWORD *)(a1 + 560) = *(_OWORD *)(a2 + 560);
  *(_OWORD *)(a1 + 576) = v33;
  *(_OWORD *)(a1 + 528) = v31;
  *(_OWORD *)(a1 + 544) = v32;
  *(_DWORD *)(a1 + 592) = *(_DWORD *)(a2 + 592);
  long long v34 = *(void **)(a2 + 600);
  *(void *)(a1 + 600) = v34;
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  *(unsigned char *)(a1 + 620) = *(unsigned char *)(a2 + 620);
  *(_DWORD *)(a1 + 616) = *(_DWORD *)(a2 + 616);
  long long v35 = *(_OWORD *)(a2 + 624);
  long long v36 = *(_OWORD *)(a2 + 640);
  long long v37 = *(_OWORD *)(a2 + 656);
  *(void *)(a1 + 669) = *(void *)(a2 + 669);
  *(_OWORD *)(a1 + 640) = v36;
  *(_OWORD *)(a1 + 656) = v37;
  *(_OWORD *)(a1 + 624) = v35;
  *(void *)(a1 + 680) = *(void *)(a2 + 680);
  id v38 = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v39 = v34;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ObjectCaptureSessionFrameSPI(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *a2;
  if (v4)
  {
    if (v5)
    {
      *(void *)a1 = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 8) = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 24) = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 32) = a2[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 40) = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 48) = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 56) = a2[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 64) = a2[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_24B5AE6C4(a1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      long long v7 = *((_OWORD *)a2 + 2);
      long long v6 = *((_OWORD *)a2 + 3);
      long long v8 = *((_OWORD *)a2 + 1);
      *(void *)(a1 + 64) = a2[8];
      *(_OWORD *)(a1 + 32) = v7;
      *(_OWORD *)(a1 + 48) = v6;
      *(_OWORD *)(a1 + 16) = v8;
    }
  }
  else if (v5)
  {
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = a2[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    long long v9 = *((_OWORD *)a2 + 1);
    long long v10 = *((_OWORD *)a2 + 2);
    long long v11 = *((_OWORD *)a2 + 3);
    *(void *)(a1 + 64) = a2[8];
    *(_OWORD *)(a1 + 32) = v10;
    *(_OWORD *)(a1 + 48) = v11;
    *(_OWORD *)(a1 + 16) = v9;
  }
  *(void *)(a1 + 80) = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
  *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
  *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
  *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
  *(void *)(a1 + 160) = a2[20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 176) = *((_OWORD *)a2 + 11);
  *(_OWORD *)(a1 + 192) = *((_OWORD *)a2 + 12);
  *(_OWORD *)(a1 + 208) = *((_OWORD *)a2 + 13);
  *(_OWORD *)(a1 + 224) = *((_OWORD *)a2 + 14);
  long long v12 = *(void **)(a1 + 240);
  long long v13 = (void *)a2[30];
  *(void *)(a1 + 240) = v13;
  id v14 = v13;

  *(void *)(a1 + 256) = a2[32];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 272) = *((_OWORD *)a2 + 17);
  *(_OWORD *)(a1 + 288) = *((_OWORD *)a2 + 18);
  *(_OWORD *)(a1 + 304) = *((_OWORD *)a2 + 19);
  *(_OWORD *)(a1 + 320) = *((_OWORD *)a2 + 20);
  long long v15 = (_OWORD *)(a1 + 336);
  long long v16 = a2 + 42;
  uint64_t v17 = a2[42];
  if (*(void *)(a1 + 336))
  {
    if (v17)
    {
      *(void *)(a1 + 336) = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 344) = a2[43];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 352) = *((_OWORD *)a2 + 22);
      *(_OWORD *)(a1 + 368) = *((_OWORD *)a2 + 23);
      *(_OWORD *)(a1 + 384) = *((_OWORD *)a2 + 24);
      *(_OWORD *)(a1 + 400) = *((_OWORD *)a2 + 25);
    }
    else
    {
      sub_24B665F80(a1 + 336);
      *long long v15 = *v16;
      long long v21 = *((_OWORD *)a2 + 25);
      long long v23 = *((_OWORD *)a2 + 22);
      long long v22 = *((_OWORD *)a2 + 23);
      *(_OWORD *)(a1 + 384) = *((_OWORD *)a2 + 24);
      *(_OWORD *)(a1 + 400) = v21;
      *(_OWORD *)(a1 + 352) = v23;
      *(_OWORD *)(a1 + 368) = v22;
    }
  }
  else if (v17)
  {
    *(void *)(a1 + 336) = v17;
    *(void *)(a1 + 344) = a2[43];
    long long v18 = *((_OWORD *)a2 + 22);
    long long v19 = *((_OWORD *)a2 + 23);
    long long v20 = *((_OWORD *)a2 + 25);
    *(_OWORD *)(a1 + 384) = *((_OWORD *)a2 + 24);
    *(_OWORD *)(a1 + 400) = v20;
    *(_OWORD *)(a1 + 352) = v18;
    *(_OWORD *)(a1 + 368) = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *long long v15 = *v16;
    long long v24 = *((_OWORD *)a2 + 22);
    long long v25 = *((_OWORD *)a2 + 23);
    long long v26 = *((_OWORD *)a2 + 25);
    *(_OWORD *)(a1 + 384) = *((_OWORD *)a2 + 24);
    *(_OWORD *)(a1 + 400) = v26;
    *(_OWORD *)(a1 + 352) = v24;
    *(_OWORD *)(a1 + 368) = v25;
  }
  long long v27 = *(void **)(a1 + 416);
  long long v28 = (void *)a2[52];
  *(void *)(a1 + 416) = v28;
  id v29 = v28;

  *(void *)(a1 + 432) = a2[54];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 448) = *((_OWORD *)a2 + 28);
  *(_OWORD *)(a1 + 464) = *((_OWORD *)a2 + 29);
  *(_OWORD *)(a1 + 480) = *((_OWORD *)a2 + 30);
  *(_OWORD *)(a1 + 496) = *((_OWORD *)a2 + 31);
  *(void *)(a1 + 512) = a2[64];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 528) = *((_OWORD *)a2 + 33);
  *(_OWORD *)(a1 + 544) = *((_OWORD *)a2 + 34);
  *(_OWORD *)(a1 + 560) = *((_OWORD *)a2 + 35);
  *(_OWORD *)(a1 + 576) = *((_OWORD *)a2 + 36);
  *(_DWORD *)(a1 + 592) = *((_DWORD *)a2 + 148);
  long long v30 = *(void **)(a1 + 600);
  long long v31 = (void *)a2[75];
  *(void *)(a1 + 600) = v31;
  id v32 = v31;

  *(void *)(a1 + 608) = a2[76];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v33 = *((_DWORD *)a2 + 154);
  *(unsigned char *)(a1 + 620) = *((unsigned char *)a2 + 620);
  *(_DWORD *)(a1 + 616) = v33;
  *(_DWORD *)(a1 + 624) = *((_DWORD *)a2 + 156);
  *(void *)(a1 + 632) = a2[79];
  *(_DWORD *)(a1 + 640) = *((_DWORD *)a2 + 160);
  *(_DWORD *)(a1 + 644) = *((_DWORD *)a2 + 161);
  *(void *)(a1 + 648) = a2[81];
  *(_DWORD *)(a1 + 656) = *((_DWORD *)a2 + 164);
  *(_DWORD *)(a1 + 660) = *((_DWORD *)a2 + 165);
  *(_DWORD *)(a1 + 664) = *((_DWORD *)a2 + 166);
  *(unsigned char *)(a1 + 668) = *((unsigned char *)a2 + 668);
  *(unsigned char *)(a1 + 669) = *((unsigned char *)a2 + 669);
  *(unsigned char *)(a1 + 670) = *((unsigned char *)a2 + 670);
  *(unsigned char *)(a1 + 671) = *((unsigned char *)a2 + 671);
  *(unsigned char *)(a1 + 672) = *((unsigned char *)a2 + 672);
  *(unsigned char *)(a1 + 673) = *((unsigned char *)a2 + 673);
  *(unsigned char *)(a1 + 674) = *((unsigned char *)a2 + 674);
  *(unsigned char *)(a1 + 675) = *((unsigned char *)a2 + 675);
  *(unsigned char *)(a1 + 676) = *((unsigned char *)a2 + 676);
  *(void *)(a1 + 680) = a2[85];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for ObjectCaptureSessionFrameSPI(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x2B0uLL);
}

uint64_t assignWithTake for ObjectCaptureSessionFrameSPI(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1)
  {
    if (*(void *)a2)
    {
      *(void *)a1 = *(void *)a2;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_24B5AE6C4(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
LABEL_6:
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  long long v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  long long v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v7;
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRelease();
  long long v8 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v8;
  long long v9 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v9;
  long long v10 = *(void **)(a1 + 240);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);

  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  swift_bridgeObjectRelease();
  long long v11 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v11;
  long long v12 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v12;
  if (!*(void *)(a1 + 336))
  {
LABEL_10:
    long long v16 = *(_OWORD *)(a2 + 384);
    *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
    *(_OWORD *)(a1 + 384) = v16;
    *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
    long long v17 = *(_OWORD *)(a2 + 352);
    *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
    *(_OWORD *)(a1 + 352) = v17;
    goto LABEL_11;
  }
  uint64_t v13 = *(void *)(a2 + 336);
  if (!v13)
  {
    sub_24B665F80(a1 + 336);
    goto LABEL_10;
  }
  *(void *)(a1 + 336) = v13;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  swift_bridgeObjectRelease();
  long long v14 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v14;
  long long v15 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v15;
LABEL_11:
  long long v18 = *(void **)(a1 + 416);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);

  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  swift_bridgeObjectRelease();
  long long v19 = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = v19;
  long long v20 = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 496) = v20;
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  swift_bridgeObjectRelease();
  long long v21 = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 528) = *(_OWORD *)(a2 + 528);
  *(_OWORD *)(a1 + 544) = v21;
  long long v22 = *(_OWORD *)(a2 + 576);
  *(_OWORD *)(a1 + 560) = *(_OWORD *)(a2 + 560);
  *(_OWORD *)(a1 + 576) = v22;
  *(_DWORD *)(a1 + 592) = *(_DWORD *)(a2 + 592);
  long long v23 = *(void **)(a1 + 600);
  *(void *)(a1 + 600) = *(void *)(a2 + 600);

  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 616) = *(_DWORD *)(a2 + 616);
  *(unsigned char *)(a1 + 620) = *(unsigned char *)(a2 + 620);
  *(_DWORD *)(a1 + 624) = *(_DWORD *)(a2 + 624);
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  *(void *)(a1 + 640) = *(void *)(a2 + 640);
  *(void *)(a1 + 648) = *(void *)(a2 + 648);
  *(void *)(a1 + 656) = *(void *)(a2 + 656);
  *(_DWORD *)(a1 + 664) = *(_DWORD *)(a2 + 664);
  *(unsigned char *)(a1 + 668) = *(unsigned char *)(a2 + 668);
  *(unsigned char *)(a1 + 669) = *(unsigned char *)(a2 + 669);
  *(unsigned char *)(a1 + 670) = *(unsigned char *)(a2 + 670);
  *(unsigned char *)(a1 + 671) = *(unsigned char *)(a2 + 671);
  *(unsigned char *)(a1 + 672) = *(unsigned char *)(a2 + 672);
  *(unsigned char *)(a1 + 673) = *(unsigned char *)(a2 + 673);
  *(unsigned char *)(a1 + 674) = *(unsigned char *)(a2 + 674);
  *(unsigned char *)(a1 + 675) = *(unsigned char *)(a2 + 675);
  *(unsigned char *)(a1 + 676) = *(unsigned char *)(a2 + 676);
  *(void *)(a1 + 680) = *(void *)(a2 + 680);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectCaptureSessionFrameSPI(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 688)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 680);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureSessionFrameSPI(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 680) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 688) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 680) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 688) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ObjectCaptureSessionFrameSPI()
{
  return &type metadata for ObjectCaptureSessionFrameSPI;
}

uint64_t type metadata accessor for ObjectCaptureSessionSPI()
{
  return self;
}

uint64_t method lookup function for ObjectCaptureSessionSPI(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ObjectCaptureSessionSPI);
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setDebugTapPosition(_:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.debugTapPosition(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setDebugPlaneDetection(_:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.debugPlaneDetection(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setDebugMaskingVoxel(_:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.debugMaskingVoxel(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setDebugCameraControl(_:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.debugCameraControl(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setDebugDebugVoxels(_:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.debugDebugVoxels(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setDebugTsdfDepth(_:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.debugTsdfDepth(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setDebugSurfaceGeometryData(_:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.debugSurfaceGeometryData(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setDebugCoverageGuideVoxels(_:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.debugCoverageGuideVoxels(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setDebugExplicitFeedbackEnabled(_:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setDebugAutoCaptureEnabled(_:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setCaptureCoolDown(_:for:)(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 232))(a1, a2 & 1);
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setReplayVideoURL(_:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.replayVideoURL(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setDebugWriteAllFramesData(_:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.debugWriteAllFramesData(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setRunArkitOnly(_:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setVoxelIntegrationEnabled(_:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setExplicitFeedbackEnabled(_:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setRunCoverage(_:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setAutoCapture(_:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setMobileSfMEnabled(_:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setMobileSfMiPhoneOverride(_:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setCaptureRateControlEnabled(_:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.debugOCBundleWriteDisabled(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

void *sub_24B66DB90(void *result, void *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t sub_24B66DB9C(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_24B66DBBC(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

void type metadata accessor for CMVideoDimensions(uint64_t a1)
{
}

__n128 sub_24B66DC0C(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t sub_24B66DC38(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 144)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 4);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t sub_24B66DC8C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 144) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 4) = a2 + 1;
    }
  }
  return result;
}

void type metadata accessor for OCProxySurfaceConfig(uint64_t a1)
{
}

id sub_24B66DD1C(id result)
{
  if ((char *)result - 7 >= (char *)0xB) {
    return sub_24B5E88F8(result);
  }
  return result;
}

uint64_t sub_24B66DD30()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_24B66DD68(void *a1, void *a2)
{
  sub_24B632A74(a1, a2, *(unsigned char *)(v2 + 16));
}

unsigned char *sub_24B66DD74@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  v7 = v6 && (__n128 result = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

uint64_t sub_24B66DDE4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 225)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_24B66DE00(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 680);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void sub_24B66DE18(int a1)
{
}

uint64_t sub_24B66DE3C(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 4);
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0;
  }
}

double sub_24B66DE58(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 192) = 1;
  return result;
}

uint64_t sub_24B66DE80(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 192)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_24B66DE9C(uint64_t result)
{
  *(unsigned char *)(result + 192) = 0;
  return result;
}

uint64_t sub_24B66DEA4()
{
  uint64_t v1 = type metadata accessor for OCCaptureData(0);
  uint64_t v15 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v13 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v16 = sub_24B682410();
  uint64_t v2 = *(void *)(v16 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v12 = *(void *)(v2 + 64);

  uint64_t v14 = (v15 + 24) & ~v15;
  uint64_t v4 = v0 + v14;

  if (*(void *)(v0 + v14 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  uint64_t v5 = v4 + *(int *)(v1 + 40);
  uint64_t v6 = type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  uint64_t v7 = v5 + *(int *)(v6 + 24);
  uint64_t v8 = sub_24B682C80();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 2, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  uint64_t v10 = (v14 + v13 + v3) & ~v3;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v10, v16);

  return MEMORY[0x270FA0238](v0, v10 + v12, v15 | v3 | 7);
}

void sub_24B66E120()
{
  uint64_t v1 = *(void *)(type metadata accessor for OCCaptureData(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(sub_24B682410() - 8) + 80);
  (*(void (**)(id *__return_ptr))((*MEMORY[0x263F8EED0] & **(void **)(v0 + 16)) + 0x420))(&v8);
  if (v8 == (id)15)
  {
    uint64_t v5 = (v2 + 24) & ~v2;
    uint64_t v6 = v0 + ((v5 + v3 + v4) & ~v4);
    uint64_t v7 = (uint64_t *)(v0 + v5);
    sub_24B65A19C((id)0xF);
    sub_24B65A19C((id)0xF);
    sub_24B625C54(v7, v6);
  }
  else
  {
    sub_24B65A19C(v8);
    sub_24B65A19C((id)0xF);
  }
}

uint64_t sub_24B66E290()
{
  uint64_t v1 = type metadata accessor for OCCaptureData(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v11 = *(void *)(*(void *)(v1 - 8) + 64);

  uint64_t v4 = v0 + v3;
  if (*(void *)(v0 + v3 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  uint64_t v5 = v4 + *(int *)(v1 + 40);
  uint64_t v6 = type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  uint64_t v7 = v5 + *(int *)(v6 + 24);
  uint64_t v8 = sub_24B682C80();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 2, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }

  return MEMORY[0x270FA0238](v0, v3 + v11, v2 | 7);
}

uint64_t sub_24B66E47C()
{
  uint64_t v1 = *(void *)(type metadata accessor for OCCaptureData(0) - 8);
  return sub_24B61F6E0(v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

void type metadata accessor for ThermalState(uint64_t a1)
{
}

void type metadata accessor for ARSessionState(uint64_t a1)
{
}

void type metadata accessor for ARError(uint64_t a1)
{
}

uint64_t sub_24B66E558()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_24B66E5A0()
{
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = (void *)v0[4];
  uint64_t v7 = (char *)v0[2];
  type metadata accessor for ARError(0);
  sub_24B65D13C(&qword_2697CCD58, type metadata accessor for ARError);
  sub_24B682180();
  if ((unint64_t)(v8 - 101) < 2 || v8 == (char *)200 || v8 == (char *)400)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_24B682560();
    swift_release();
    swift_release();
    uint64_t v3 = v8;
    swift_getKeyPath();
    swift_getKeyPath();
    v1;
    sub_24B682570();
    sub_24B612878((void **)&v8);
    uint64_t v4 = v3;
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v5 = v2;
    sub_24B682560();
    swift_release();
    swift_release();
    uint64_t v6 = v7;
    swift_getKeyPath();
    swift_getKeyPath();
    v1;
    sub_24B682570();
    sub_24B612878((void **)&v7);
    uint64_t v4 = v6;
  }
  sub_24B65A19C(v4);
}

uint64_t sub_24B66E810()
{
  return sub_24B64C584(*(unsigned char **)(v0 + 16));
}

uint64_t sub_24B66E818()
{
  return sub_24B64BA10(*(unsigned char **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_24B66E820()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_24B66E858()
{
  sub_24B63F884(v0);
}

uint64_t sub_24B66E860()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 240, 15);
}

uint64_t sub_24B66E8A0()
{
  return sub_24B63EAD8(*(void **)(v0 + 16), (float64x2_t *)(v0 + 32), v0 + 80, v0 + 160);
}

uint64_t sub_24B66E8B4(uint64_t a1)
{
  return a1;
}

uint64_t sub_24B66E8E0()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_24B66E928(uint64_t a1)
{
  sub_24B639460(a1, *(void (**)(uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

void type metadata accessor for UIDeviceOrientation(uint64_t a1)
{
}

void sub_24B66E95C(unsigned char *a1@<X8>)
{
  if (*(unsigned char *)(v1 + 33)) {
    __int16 v2 = 256;
  }
  else {
    __int16 v2 = 0;
  }
  sub_24B62C730(*(void *)(v1 + 16), *(void **)(v1 + 24), v2 | *(unsigned __int8 *)(v1 + 32), *(void *)(v1 + 40), a1, *(__n128 *)(v1 + 48), *(__n128 *)(v1 + 64), *(__n128 *)(v1 + 80), *(__n128 *)(v1 + 96));
}

id sub_24B66E9AC@<X0>(unsigned char *a1@<X8>)
{
  if (*(unsigned char *)(v1 + 25)) {
    __int16 v2 = 256;
  }
  else {
    __int16 v2 = 0;
  }
  return sub_24B629924(*(void *)(v1 + 16), v2 | *(unsigned __int8 *)(v1 + 24), *(void *)(v1 + 32), *(char **)(v1 + 40), a1);
}

__n128 sub_24B66E9F4(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t sub_24B66EA18(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 112)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_24B66EA38(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 112) = v3;
  return result;
}

void type metadata accessor for OCMaskingPlane(uint64_t a1)
{
}

ValueMetadata *type metadata accessor for ObjectCaptureSession.BoundingBoxData()
{
  return &type metadata for ObjectCaptureSession.BoundingBoxData;
}

__n128 initializeWithCopy for ObjectCaptureSession.PlaneData(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 128) = result;
  *(_OWORD *)(a1 + 144) = v9;
  return result;
}

uint64_t getEnumTagSinglePayload for ObjectCaptureSession.PlaneData(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 192)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureSession.PlaneData(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 192) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ObjectCaptureSession.PlaneData()
{
  return &type metadata for ObjectCaptureSession.PlaneData;
}

__n128 sub_24B66EB78(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_24B66EB84(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t sub_24B66EBD8(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

void type metadata accessor for OCProxySurfaceCoverageGuideConfig(uint64_t a1)
{
}

void type metadata accessor for OCProxySurfaceDepthRenderingConfig(uint64_t a1)
{
}

uint64_t sub_24B66EC68(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 12);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t sub_24B66ECBC(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 12) = a2 + 1;
    }
  }
  return result;
}

void type metadata accessor for OCProxySurfacePointCloudSamplingConfig(uint64_t a1)
{
}

__n128 initializeWithTake for OCVoxelCloud(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t sub_24B66ED40(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 80)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_24B66ED60(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 80) = v3;
  return result;
}

void type metadata accessor for OCProxySurfaceVoxelIntegrationConfig(uint64_t a1)
{
}

void type metadata accessor for OCProxySurfacePipelineType(uint64_t a1)
{
}

uint64_t sub_24B66EDF0()
{
  return sub_24B65D13C(&qword_2697CCEC8, type metadata accessor for ARError);
}

uint64_t sub_24B66EE38()
{
  return sub_24B65D13C(&qword_2697CCED0, type metadata accessor for ARError);
}

uint64_t sub_24B66EE80()
{
  return sub_24B65D13C(&qword_2697CCED8, type metadata accessor for ARError);
}

uint64_t sub_24B66EEC8()
{
  return sub_24B65D13C(&qword_2697CCEE0, type metadata accessor for ARError);
}

uint64_t sub_24B66EF10()
{
  return sub_24B65D13C(&qword_2697CCEE8, type metadata accessor for ARError);
}

uint64_t sub_24B66EF58()
{
  return sub_24B65D13C(&qword_2697CCEF0, type metadata accessor for Code);
}

void type metadata accessor for Code(uint64_t a1)
{
}

uint64_t sub_24B66EFC8()
{
  return sub_24B65D13C(&qword_2697CCEF8, type metadata accessor for Code);
}

unint64_t sub_24B66F014()
{
  unint64_t result = qword_2697CCF00;
  if (!qword_2697CCF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697CCF00);
  }
  return result;
}

uint64_t sub_24B66F068()
{
  return sub_24B65D13C(&qword_2697CCF08, type metadata accessor for Code);
}

uint64_t sub_24B66F0B0()
{
  return sub_24B65D13C(&qword_2697CCD58, type metadata accessor for ARError);
}

void type metadata accessor for OCProxySurfaceCoverageCameraConfig(uint64_t a1)
{
}

void type metadata accessor for OCProxySurfaceDepthImageResolution(uint64_t a1)
{
}

void type metadata accessor for OCProxySurfaceMode(uint64_t a1)
{
}

void type metadata accessor for OCProxySurfaceInputType(uint64_t a1)
{
}

void sub_24B66F198(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

Swift::String __swiftcall OCGitHash()()
{
  uint64_t v0 = 0;
  uint64_t v1 = (void *)0xE000000000000000;
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

uint64_t sub_24B66F410()
{
  return sub_24B66F444();
}

uint64_t sub_24B66F444()
{
  *(void *)(v0 + 24) = 0;
  *(void *)(v0 + 32) = 0;
  *(_DWORD *)(v0 + 40) = 0;
  *(unsigned char *)(v0 + 44) = 1;
  *(void *)(v0 + 48) = 0;
  uint64_t result = OCImageScalerCreate();
  if (result)
  {

    type metadata accessor for ImageScaler();
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24B66F4FC()
{
  uint64_t result = OCImageScalerDestroy();
  if (result)
  {
    __break(1u);
  }
  else
  {

    return swift_deallocClassInstance();
  }
  return result;
}

BOOL sub_24B66F544()
{
  return OCImageScalerStart() == 0;
}

BOOL sub_24B66F568()
{
  return OCImageScalerStop() == 0;
}

CVPixelBufferRef sub_24B66F58C(__CVBuffer *a1, uint64_t a2)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  sub_24B66F848(a2, (uint64_t)&v14);
  CVPixelBufferRef v13 = 0;
  unint64_t v5 = *(void **)(v2 + 48);
  if (!v5) {
    return 0;
  }
  CFAllocatorRef v6 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  long long v7 = v5;
  CVReturn v8 = CVPixelBufferPoolCreatePixelBuffer(v6, v7, &v13);
  CVPixelBufferRef v9 = v13;
  if (v8)
  {

LABEL_5:
    return 0;
  }
  CVPixelBufferGetWidth(a1);
  CVPixelBufferGetHeight(a1);
  sub_24B66F848(a2, (uint64_t)v15);
  long long v10 = v9;
  int v11 = OCImageScalerResizeImage();

  long long v7 = v10;
  if (v11) {
    goto LABEL_5;
  }
  return v9;
}

CVPixelBufferRef sub_24B66F6F0(__CVBuffer *a1, uint64_t a2, size_t a3, size_t a4, OSType a5)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  sub_24B66F848(a2, (uint64_t)&v14);
  CVPixelBufferRef v13 = 0;
  CVReturn v10 = CVPixelBufferCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], a3, a4, a5, 0, &v13);
  CVPixelBufferRef v11 = v13;
  if (v10
    || (CVPixelBufferGetWidth(a1),
        CVPixelBufferGetHeight(a1),
        sub_24B66F848(a2, (uint64_t)v15),
        OCImageScalerResizeImage()))
  {

    return 0;
  }
  return v11;
}

uint64_t type metadata accessor for ImageScaler()
{
  return self;
}

uint64_t sub_24B66F848(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24B562F04(&qword_2697CD000);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

__n128 initializeBufferWithCopyOfBuffer for ImageScaler.Config(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for ImageScaler.Config()
{
  return &type metadata for ImageScaler.Config;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

uint64_t sub_24B66F8FC()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_24B66F934(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_unknownObjectRelease();
}

uint64_t sub_24B66F97C()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_24B66F9B4(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 56) = a1;
  return swift_unknownObjectRelease();
}

uint64_t sub_24B66F9FC(void *a1, char a2, uint64_t a3)
{
  return sub_24B66FA50(a1, a2, a3);
}

uint64_t sub_24B66FA50(void *a1, char a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v79 = sub_24B6824D0();
  CVReturn v8 = *(void **)(v79 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v79);
  CVPixelBufferRef v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v67 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  MEMORY[0x270FA5388](v16);
  long long v20 = (char *)&v67 - v19;
  uint64_t v78 = v4;
  *(void *)(v4 + 48) = 0;
  uint64_t v21 = v4 + 48;
  *(void *)(v21 - 8) = 0;
  *(void *)(v21 + 8) = 0;
  *(void *)(v21 - 16) = 512;
  *(_OWORD *)(v21 + 16) = xmmword_24B688510;
  id v77 = a1;
  *(void *)(v21 - 32) = a1;
  *(unsigned char *)(v21 - 24) = a2;
  if ((a2 & 1) == 0)
  {
    swift_unknownObjectRetain();
LABEL_19:
    uint64_t v62 = sub_24B57CCC8();
    ((void (*)(char *, uint64_t, uint64_t))v8[2])(v11, v62, v79);
    long long v63 = sub_24B6824B0();
    os_log_type_t v64 = sub_24B682B30();
    if (os_log_type_enabled(v63, v64))
    {
      uint64_t v65 = (uint8_t *)swift_slowAlloc();
      uint64_t v66 = swift_slowAlloc();
      v83[0] = v66;
      *(_DWORD *)uint64_t v65 = 136380675;
      uint64_t v82 = sub_24B5627B8(0xD00000000000002FLL, 0x800000024B691990, v83);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v63, v64, "MeshBuffer.%{private}s: Initialized MeshBuffer.", v65, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v66, -1, -1);
      MEMORY[0x24C5D6C00](v65, -1, -1);
    }

    swift_unknownObjectRelease();
    ((void (*)(char *, uint64_t))v8[1])(v11, v79);
    return v78;
  }
  uint64_t v73 = (void *)(v21 + 8);
  id v74 = v17;
  long long v71 = v18;
  id v22 = objc_allocWithZone(MEMORY[0x263F128F0]);
  swift_unknownObjectRetain();
  id v76 = objc_msgSend(v22, sel_init);
  objc_msgSend(v76, sel_setResourceOptions_, 512);
  uint64_t result = getpagesize();
  float v24 = ceilf((float)a3 / (float)(int)result) * (float)(int)result;
  if ((~LODWORD(v24) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v24 <= -9.2234e18)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v24 < 9.2234e18)
  {
    uint64_t v70 = v15;
    id v72 = v11;
    *(void *)(v78 + 40) = (uint64_t)v24;
    uint64_t v25 = sub_24B57CCC8();
    long long v26 = (void (*)(char *, uint64_t, uint64_t))v8[2];
    v26(v20, v25, v79);
    swift_retain();
    long long v27 = sub_24B6824B0();
    os_log_type_t v28 = sub_24B682B30();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      long long v75 = (void (*)(void, void))swift_slowAlloc();
      v81[0] = (uint64_t)v75;
      *(_DWORD *)uint64_t v29 = 136380931;
      uint64_t v69 = v26;
      v80[0] = sub_24B5627B8(0xD00000000000002FLL, 0x800000024B691990, v81);
      uint64_t v68 = v25;
      uint64_t v30 = v78;
      sub_24B682CD0();
      *(_WORD *)(v29 + 12) = 2050;
      v80[0] = *(void *)(v30 + 40);
      uint64_t v25 = v68;
      sub_24B682CD0();
      long long v26 = v69;
      swift_release();
      _os_log_impl(&dword_24B55E000, v27, v28, "MeshBuffer.%{private}s: Computed page-aligned heap size = %{public}ld bytes.", (uint8_t *)v29, 0x16u);
      long long v31 = v75;
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v31, -1, -1);
      MEMORY[0x24C5D6C00](v29, -1, -1);
    }
    else
    {

      swift_release();
    }
    long long v75 = (void (*)(void, void))v8[1];
    v75(v20, v79);
    id v32 = v76;
    objc_msgSend(v76, sel_setSize_, *(void *)(v21 - 8));
    id v33 = objc_msgSend(v77, sel_newHeapWithDescriptor_, v32);
    if (v33)
    {
      id v34 = v33;
      swift_beginAccess();
      *(void *)uint64_t v21 = v34;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      id v35 = objc_msgSend(v77, sel_newHeapWithDescriptor_, v32);
      if (v35)
      {
        id v36 = v35;
        long long v37 = v73;
        swift_beginAccess();
        *long long v37 = v36;
        swift_unknownObjectRetain();
        swift_unknownObjectRelease();
        id v38 = v74;
        v26(v74, v25, v79);
        id v39 = sub_24B6824B0();
        os_log_type_t v40 = sub_24B682B30();
        if (os_log_type_enabled(v39, v40))
        {
          uint64_t v41 = v32;
          int v42 = (uint8_t *)swift_slowAlloc();
          uint64_t v43 = swift_slowAlloc();
          uint64_t v73 = v8;
          uint64_t v44 = v43;
          v83[0] = v43;
          *(_DWORD *)int v42 = 136380675;
          uint64_t v82 = sub_24B5627B8(0xD00000000000002FLL, 0x800000024B691990, v83);
          uint64_t v45 = v79;
          sub_24B682CD0();
          _os_log_impl(&dword_24B55E000, v39, v40, "MeshBuffer.%{private}s: Created primary and fallback heaps.", v42, 0xCu);
          swift_arrayDestroy();
          uint64_t v46 = v44;
          CVReturn v8 = v73;
          MEMORY[0x24C5D6C00](v46, -1, -1);
          MEMORY[0x24C5D6C00](v42, -1, -1);
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();

          long long v47 = v38;
          uint64_t v48 = v45;
        }
        else
        {

          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          long long v47 = v38;
          uint64_t v48 = v79;
        }
        v75(v47, v48);
        CVPixelBufferRef v11 = v72;
        goto LABEL_19;
      }
      uint64_t v49 = v70;
      v26(v70, v25, v79);
      swift_retain();
      long long v56 = sub_24B6824B0();
      os_log_type_t v57 = sub_24B682B20();
      if (os_log_type_enabled(v56, v57))
      {
        uint64_t v58 = swift_slowAlloc();
        uint64_t v59 = swift_slowAlloc();
        v80[0] = v59;
        *(_DWORD *)uint64_t v58 = 136380931;
        uint64_t v73 = v8;
        v83[0] = sub_24B5627B8(0xD00000000000002FLL, 0x800000024B691990, v80);
        uint64_t v60 = v78;
        sub_24B682CD0();
        *(_WORD *)(v58 + 12) = 2050;
        uint64_t v61 = *(void *)(v60 + 40);
        swift_release();
        v83[0] = v61;
        sub_24B682CD0();
        swift_release();
        _os_log_impl(&dword_24B55E000, v56, v57, "MeshBuffer.%{private}s: Failed to create fallback heap of size %{public}ld bytes!", (uint8_t *)v58, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v59, -1, -1);
        MEMORY[0x24C5D6C00](v58, -1, -1);
        swift_unknownObjectRelease();

        swift_unknownObjectRelease();
        goto LABEL_26;
      }

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v49 = v71;
      v26(v71, v25, v79);
      swift_retain();
      long long v50 = sub_24B6824B0();
      os_log_type_t v51 = sub_24B682B20();
      if (os_log_type_enabled(v50, v51))
      {
        uint64_t v52 = swift_slowAlloc();
        uint64_t v53 = swift_slowAlloc();
        v81[0] = v53;
        *(_DWORD *)uint64_t v52 = 136380931;
        v80[0] = sub_24B5627B8(0xD00000000000002FLL, 0x800000024B691990, v81);
        uint64_t v54 = v78;
        sub_24B682CD0();
        *(_WORD *)(v52 + 12) = 2050;
        uint64_t v55 = *(void *)(v54 + 40);
        swift_release();
        v80[0] = v55;
        sub_24B682CD0();
        swift_release();
        _os_log_impl(&dword_24B55E000, v50, v51, "MeshBuffer.%{private}s: Failed to create heap of size\n%{public}ld bytes!", (uint8_t *)v52, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v53, -1, -1);
        MEMORY[0x24C5D6C00](v52, -1, -1);

        swift_unknownObjectRelease();
LABEL_26:
        v75(v49, v79);
        return 0;
      }

      swift_unknownObjectRelease();
    }
    swift_release_n();
    goto LABEL_26;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_24B670524(uint64_t a1)
{
  uint64_t v3 = sub_24B6824D0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  long long v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v27 - v9;
  if (*(unsigned char *)(v1 + 24) != 1)
  {
    id v21 = objc_msgSend(*(id *)(v1 + 16), sel_newBufferWithLength_options_, a1, 512);
    if (!v21)
    {
      uint64_t v22 = sub_24B57CCC8();
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v22, v3);
      long long v23 = sub_24B6824B0();
      os_log_type_t v24 = sub_24B682B20();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = (uint8_t *)swift_slowAlloc();
        uint64_t v26 = swift_slowAlloc();
        uint64_t v28 = v26;
        *(_DWORD *)uint64_t v25 = 136380675;
        uint64_t v27 = sub_24B5627B8(0xD000000000000013, 0x800000024B6919C0, &v28);
        sub_24B682CD0();
        _os_log_impl(&dword_24B55E000, v23, v24, "MeshBuffer.%{private}s: Failed to allocate buffer on device!", v25, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v26, -1, -1);
        MEMORY[0x24C5D6C00](v25, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      return 0;
    }
    return v21;
  }
  CVPixelBufferRef v11 = *(uint64_t (**)(uint64_t))(*(void *)v1 + 192);
  uint64_t v12 = v11(v8);
  id result = (id)swift_unknownObjectRelease();
  if (!v12)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v14 = (*(uint64_t (**)(id))(*(void *)v1 + 216))(result);
  id result = (id)swift_unknownObjectRelease();
  if (!v14)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  id result = (id)v11((uint64_t)result);
  if (result)
  {
    id v15 = objc_msgSend(result, sel_newBufferWithLength_options_, a1, 0);
    swift_unknownObjectRelease();
    if (!v15)
    {
      uint64_t v16 = sub_24B57CCC8();
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v10, v16, v3);
      long long v17 = sub_24B6824B0();
      os_log_type_t v18 = sub_24B682B20();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = (uint8_t *)swift_slowAlloc();
        uint64_t v20 = swift_slowAlloc();
        uint64_t v28 = v20;
        *(_DWORD *)uint64_t v19 = 136380675;
        uint64_t v27 = sub_24B5627B8(0xD000000000000013, 0x800000024B6919C0, &v28);
        sub_24B682CD0();
        _os_log_impl(&dword_24B55E000, v17, v18, "MeshBuffer.%{private}s: Failed to allocate buffer on heap!", v19, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v20, -1, -1);
        MEMORY[0x24C5D6C00](v19, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
      return 0;
    }
    return v15;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_24B670944(const void *a1, size_t a2)
{
  uint64_t v5 = sub_24B6824D0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v34 - v11;
  if (*(unsigned char *)(v2 + 24) != 1)
  {
    id v22 = objc_msgSend(*(id *)(v2 + 16), sel_newBufferWithBytes_length_options_, a1, a2, 512);
    if (v22) {
      return (uint64_t)v22;
    }
    uint64_t v23 = sub_24B57CCC8();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v23, v5);
    os_log_type_t v24 = sub_24B6824B0();
    os_log_type_t v25 = sub_24B682B20();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v35 = v27;
      *(_DWORD *)uint64_t v26 = 136380675;
      uint64_t v34 = sub_24B5627B8(0xD000000000000019, 0x800000024B6919E0, &v35);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v24, v25, "MeshBuffer.%{private}s: Failed to allocate buffer on device!", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v27, -1, -1);
      MEMORY[0x24C5D6C00](v26, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    return 0;
  }
  uint64_t v13 = *(uint64_t (**)(uint64_t))(*(void *)v2 + 192);
  uint64_t v14 = v13(v10);
  uint64_t v15 = swift_unknownObjectRelease();
  if (!v14)
  {
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v16 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 216))(v15);
  uint64_t v17 = swift_unknownObjectRelease();
  if (!v16)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  os_log_type_t v18 = (void *)v13(v17);
  if (!v18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  id v19 = objc_msgSend(v18, sel_newBufferWithLength_options_, a2, 0);
  swift_unknownObjectRelease();
  if (!v19)
  {
    uint64_t v28 = sub_24B57CCC8();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v12, v28, v5);
    uint64_t v29 = sub_24B6824B0();
    os_log_type_t v30 = sub_24B682B20();
    if (os_log_type_enabled(v29, v30))
    {
      long long v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      uint64_t v35 = v32;
      *(_DWORD *)long long v31 = 136380675;
      uint64_t v34 = sub_24B5627B8(0xD000000000000019, 0x800000024B6919E0, &v35);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v29, v30, "MeshBuffer.%{private}s: Failed to allocate buffer on heap!", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v32, -1, -1);
      MEMORY[0x24C5D6C00](v31, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
    return 0;
  }
  id v20 = objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
  id v21 = v19;
  if ((a2 & 0x8000000000000000) == 0)
  {
    memmove(v20, a1, a2);
    return (uint64_t)v19;
  }
LABEL_21:
  uint64_t result = sub_24B682F40();
  __break(1u);
  return result;
}

id sub_24B670DF4(void *a1)
{
  id v2 = a1;
  uint64_t v3 = (*(uint64_t (**)(id, id))(*(void *)v1 + 256))(objc_msgSend(v2, sel_bytes), objc_msgSend(v2, sel_length));
  if (!v3) {
    return 0;
  }
  uint64_t v4 = v3;
  uint64_t v5 = (uint64_t)objc_msgSend(v2, sel_length) / 12;
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EF8F60]), sel_initWithBuffer_count_format_componentsPerVector_offset_stride_, v4, v5, 30, 3, 0, 12);
  swift_unknownObjectRelease();
  return v6;
}

uint64_t sub_24B670EF4(uint64_t result)
{
  if (0xAAAAAAAAAAAAAAABLL * result + 0x2AAAAAAAAAAAAAAALL > 0x5555555555555554)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = result;
    uint64_t v3 = (*(uint64_t (**)(void))(*(void *)v1 + 248))();
    if (!v3) {
      return 0;
    }
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EF8F60]), sel_initWithBuffer_count_format_componentsPerVector_offset_stride_, v3, v2 / 12, 30, 3, 0, 12);
    swift_unknownObjectRelease();
    return (uint64_t)v4;
  }
  return result;
}

uint64_t sub_24B670FD0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v35 - v10;
  if (v1[24] != 1) {
    return 1;
  }
  uint64_t v12 = *(uint64_t (**)(uint64_t))(*(void *)v1 + 192);
  uint64_t result = v12(v9);
  if (!result) {
    goto LABEL_17;
  }
  uint64_t v14 = objc_msgSend((id)result, sel_currentAllocatedSize);
  uint64_t v15 = swift_unknownObjectRelease();
  uint64_t result = v12(v15);
  if (!result)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = objc_msgSend((id)result, sel_usedSize);
  uint64_t result = swift_unknownObjectRelease();
  uint64_t v17 = v14 - v16;
  if (__OFSUB__(v14, v16))
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v17 >= a1) {
    return 1;
  }
  uint64_t v18 = sub_24B57CCC8();
  uint64_t v19 = v5 + 16;
  id v39 = *(void (**)(char *))(v5 + 16);
  uint64_t v40 = v18;
  v39(v11);
  id v20 = sub_24B6824B0();
  uint64_t v21 = v5;
  os_log_type_t v22 = sub_24B682B10();
  if (os_log_type_enabled(v20, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v37 = v21;
    uint64_t v24 = v23;
    uint64_t v36 = swift_slowAlloc();
    v44[0] = v36;
    *(_DWORD *)uint64_t v24 = 136381187;
    uint64_t v35 = v24 + 4;
    uint64_t v43 = sub_24B5627B8(0xD000000000000012, 0x800000024B691A40, v44);
    uint64_t v38 = v19;
    sub_24B682CD0();
    *(_WORD *)(v24 + 12) = 2050;
    uint64_t v43 = a1;
    sub_24B682CD0();
    *(_WORD *)(v24 + 22) = 2049;
    uint64_t v43 = v17;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v20, v22, "MeshBuffer.%{private}s: Cannot allocate %{public}ld bytes on the heap since the heap only has %{private}ld bytes available!", (uint8_t *)v24, 0x20u);
    uint64_t v25 = v36;
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v25, -1, -1);
    MEMORY[0x24C5D6C00](v24, -1, -1);

    uint64_t v26 = v37;
  }
  else
  {

    uint64_t v26 = v21;
  }
  uint64_t v27 = *(void (**)(char *, uint64_t))(v26 + 8);
  v27(v11, v4);
  uint64_t v28 = (uint64_t *)(v2 + 48);
  uint64_t result = swift_beginAccess();
  if (!*((void *)v2 + 6)) {
    goto LABEL_19;
  }
  uint64_t result = swift_beginAccess();
  uint64_t v29 = *((void *)v2 + 7);
  if (!v29)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v30 = *v28;
  *uint64_t v28 = v29;
  *((void *)v2 + 7) = v30;
  ((void (*)(char *, uint64_t, uint64_t))v39)(v8, v40, v4);
  long long v31 = sub_24B6824B0();
  os_log_type_t v32 = sub_24B682B30();
  if (os_log_type_enabled(v31, v32))
  {
    id v33 = (uint8_t *)swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    uint64_t v42 = v34;
    *(_DWORD *)id v33 = 136380675;
    uint64_t v41 = sub_24B5627B8(0xD000000000000012, 0x800000024B691A40, &v42);
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v31, v32, "MeshBuffer.%{private}s: Swapped heaps!", v33, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v34, -1, -1);
    MEMORY[0x24C5D6C00](v33, -1, -1);
  }

  v27(v8, v4);
  return 0;
}

uint64_t sub_24B671488()
{
  uint64_t v1 = sub_24B6824D0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v8 = (char *)&v29 - v7;
  uint64_t v9 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v0 + 192))(v6);
  if (!v9)
  {
    uint64_t v22 = sub_24B57CCC8();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v22, v1);
    uint64_t v23 = sub_24B6824B0();
    os_log_type_t v24 = sub_24B682B20();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v32 = v26;
      *(_DWORD *)uint64_t v25 = 136380675;
      double v31 = COERCE_DOUBLE(sub_24B5627B8(0x5370616548676F6CLL, 0xEE00292873746174, &v32));
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v23, v24, "MeshBuffer.%{private}s: Not using heap!", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v26, -1, -1);
      MEMORY[0x24C5D6C00](v25, -1, -1);
    }

    uint64_t v27 = *(uint64_t (**)(char *, uint64_t))(v2 + 8);
    uint64_t v28 = v5;
    return v27(v28, v1);
  }
  uint64_t v10 = v9;
  id v11 = objc_msgSend(v9, sel_currentAllocatedSize);
  uint64_t result = (uint64_t)objc_msgSend(v10, sel_usedSize);
  uint64_t v13 = 100 * result;
  if ((unsigned __int128)(result * (__int128)100) >> 64 == (100 * result) >> 63)
  {
    uint64_t v14 = sub_24B57CCC8();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v8, v14, v1);
    swift_unknownObjectRetain_n();
    uint64_t v15 = sub_24B6824B0();
    os_log_type_t v16 = sub_24B682B30();
    if (os_log_type_enabled(v15, v16))
    {
      float v17 = (float)v13 / (float)(uint64_t)v11;
      uint64_t v18 = swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v32 = v29;
      *(_DWORD *)uint64_t v18 = 136381699;
      uint64_t v30 = v1;
      double v31 = COERCE_DOUBLE(sub_24B5627B8(0x5370616548676F6CLL, 0xEE00292873746174, &v32));
      sub_24B682CD0();
      *(_WORD *)(v18 + 12) = 2049;
      double v31 = v17;
      sub_24B682CD0();
      *(_WORD *)(v18 + 22) = 2049;
      double v31 = COERCE_DOUBLE(objc_msgSend(v10, sel_size));
      sub_24B682CD0();
      *(_WORD *)(v18 + 32) = 2049;
      id v19 = objc_msgSend(v10, sel_currentAllocatedSize);
      swift_unknownObjectRelease();
      double v31 = *(double *)&v19;
      sub_24B682CD0();
      swift_unknownObjectRelease();
      *(_WORD *)(v18 + 42) = 2049;
      id v20 = objc_msgSend(v10, sel_usedSize);
      swift_unknownObjectRelease();
      double v31 = *(double *)&v20;
      sub_24B682CD0();
      swift_unknownObjectRelease();
      _os_log_impl(&dword_24B55E000, v15, v16, "MeshBuffer.%{private}s: Heap stats: used = %{private}f%%, size = %{private}ld bytes, allocated size = %{private}ld bytes, used size = %{private}ld bytes", (uint8_t *)v18, 0x34u);
      uint64_t v21 = v29;
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v21, -1, -1);
      MEMORY[0x24C5D6C00](v18, -1, -1);
      swift_unknownObjectRelease();

      return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v8, v30);
    }

    swift_unknownObjectRelease_n();
    uint64_t v27 = *(uint64_t (**)(char *, uint64_t))(v2 + 8);
    uint64_t v28 = v8;
    return v27(v28, v1);
  }
  __break(1u);
  return result;
}

uint64_t sub_24B671960()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_24B6719A8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_24B671B78(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t type metadata accessor for FreeformMeshBuffer()
{
  return self;
}

void type metadata accessor for MTLResourceOptions()
{
  if (!qword_2697CD078)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_2697CD078);
    }
  }
}

uint64_t sub_24B671A64()
{
  return sub_24B671B34(&qword_2697CD080);
}

uint64_t sub_24B671A98()
{
  return sub_24B671B34(&qword_2697CD088);
}

uint64_t sub_24B671ACC()
{
  return sub_24B671B34(&qword_2697CD090);
}

uint64_t sub_24B671B00()
{
  return sub_24B671B34(&qword_2697CD098);
}

uint64_t sub_24B671B34(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for MTLResourceOptions();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24B671B78(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

void __swiftcall wideToDepthCameraTransform()(simd_float4x4 *__return_ptr retstr)
{
  v33[1] = *MEMORY[0x263EF8340];
  uint64_t v1 = sub_24B6824D0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = &v24.i8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v24.i8[-v6];
  if (byte_2697CD100)
  {
    float32x4_t v8 = *(float32x4_t *)MEMORY[0x263EF89A8];
    float32x4_t v9 = *(float32x4_t *)(MEMORY[0x263EF89A8] + 32);
    int8x16_t v10 = *(int8x16_t *)(MEMORY[0x263EF89A8] + 48);
    float32x4_t v26 = *(float32x4_t *)(MEMORY[0x263EF89A8] + 16);
    float32x4_t v27 = v8;
    float32x4_t v29 = v8;
    float32x4_t v30 = v26;
    int8x16_t v24 = v10;
    float32x4_t v25 = v9;
    float32x4_t v31 = v9;
    int8x16_t v32 = v10;
    if (OCNonModularSPI_GetWideToDepthTransform() || (sub_24B5FAC44(v29, v30, v31, v32) & 1) == 0)
    {
      uint64_t v19 = sub_24B57CB70();
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v19, v1);
      id v20 = sub_24B6824B0();
      os_log_type_t v21 = sub_24B682B20();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = (uint8_t *)swift_slowAlloc();
        uint64_t v23 = swift_slowAlloc();
        v33[0] = v23;
        *(_DWORD *)uint64_t v22 = 136380675;
        uint64_t v28 = sub_24B5627B8(0xD00000000000001CLL, 0x800000024B691B20, v33);
        sub_24B682CD0();
        _os_log_impl(&dword_24B55E000, v20, v21, "%{private}s: Failed to obtain wide to depth camera transform, using identity instead.", v22, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v23, -1, -1);
        MEMORY[0x24C5D6C00](v22, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
      unk_2697D0960 = v27.i64[1];
      qword_2697D0950 = v27.i64[0];
      unk_2697D0980 = v26.i64[1];
      qword_2697D0970 = v26.i64[0];
      uint64_t v18 = &OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_worldToObjectTransformFromMobileSfM;
      int8x16_t v17 = v24;
      float32x4_t v16 = v25;
    }
    else
    {
      uint64_t v11 = sub_24B57CB70();
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v7, v11, v1);
      uint64_t v12 = sub_24B6824B0();
      os_log_type_t v13 = sub_24B682B30();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = (uint8_t *)swift_slowAlloc();
        uint64_t v15 = swift_slowAlloc();
        v33[0] = v15;
        *(_DWORD *)uint64_t v14 = 136380675;
        uint64_t v28 = sub_24B5627B8(0xD00000000000001CLL, 0x800000024B691B20, v33);
        sub_24B682CD0();
        _os_log_impl(&dword_24B55E000, v12, v13, "%{private}s: Obtained wide to depth camera transform.", v14, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v15, -1, -1);
        MEMORY[0x24C5D6C00](v14, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
      float32x4_t v16 = v31;
      int8x16_t v17 = v32;
      unk_2697D0960 = v29.i64[1];
      qword_2697D0950 = v29.i64[0];
      unk_2697D0980 = v30.i64[1];
      qword_2697D0970 = v30.i64[0];
      uint64_t v18 = &OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_worldToObjectTransformFromMobileSfM;
    }
    v18[306] = v16.i64[0];
    unk_2697D09A0 = v16.i64[1];
    unk_2697D09C0 = v17.i64[1];
    qword_2697D09B0 = v17.i64[0];
    byte_2697CD100 = 0;
  }
}

__n128 OCBoundingBox.transform.getter()
{
  return *(__n128 *)v0;
}

double OCBoundingBox.scaledTransform(scale:)(float a1)
{
  *(void *)&double result = vmulq_n_f32(*v1, a1).u64[0];
  return result;
}

__n128 OCBoundingBox.position.getter()
{
  return v0[3];
}

__n64 OCBoundingBox.extent.getter()
{
  float32x4_t v1 = vmulq_f32(*v0, *v0);
  result.n64_f32[0] = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v1, 2), vaddq_f32(v1, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v1.f32, 1))).f32[0]);
  float32x4_t v2 = vmulq_f32(v0[1], v0[1]);
  result.n64_u32[1] = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v2, 2), vaddq_f32(v2, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v2.f32, 1))).f32[0]);
  return result;
}

float32x4_t OCBoundingBox.rotation.getter@<Q0>(float32x4_t *a1@<X8>)
{
  float32x4_t v2 = v1[1];
  float32x4_t v3 = v1[2];
  int32x4_t v4 = (int32x4_t)vmulq_f32(*v1, *v1);
  v4.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v4, 2), vadd_f32(*(float32x2_t *)v4.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v4.i8, 1))).u32[0];
  float32x2_t v5 = vrsqrte_f32((float32x2_t)v4.u32[0]);
  float32x2_t v6 = vmul_f32(v5, vrsqrts_f32((float32x2_t)v4.u32[0], vmul_f32(v5, v5)));
  float32x4_t result = vmulq_n_f32(*v1, vmul_f32(v6, vrsqrts_f32((float32x2_t)v4.u32[0], vmul_f32(v6, v6))).f32[0]);
  int32x4_t v8 = (int32x4_t)vmulq_f32(v2, v2);
  v8.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v8, 2), vadd_f32(*(float32x2_t *)v8.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v8.i8, 1))).u32[0];
  float32x2_t v9 = vrsqrte_f32((float32x2_t)v8.u32[0]);
  float32x2_t v10 = vmul_f32(v9, vrsqrts_f32((float32x2_t)v8.u32[0], vmul_f32(v9, v9)));
  v8.i32[0] = vmul_f32(v10, vrsqrts_f32((float32x2_t)v8.u32[0], vmul_f32(v10, v10))).u32[0];
  int32x4_t v11 = (int32x4_t)vmulq_f32(v3, v3);
  v11.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v11, 2), vadd_f32(*(float32x2_t *)v11.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v11.i8, 1))).u32[0];
  float32x4_t v12 = vmulq_n_f32(v2, *(float *)v8.i32);
  *(float32x2_t *)v8.i8 = vrsqrte_f32((float32x2_t)v11.u32[0]);
  *(float32x2_t *)v8.i8 = vmul_f32(*(float32x2_t *)v8.i8, vrsqrts_f32((float32x2_t)v11.u32[0], vmul_f32(*(float32x2_t *)v8.i8, *(float32x2_t *)v8.i8)));
  *a1 = result;
  a1[1] = v12;
  a1[2] = vmulq_n_f32(v3, vmul_f32(*(float32x2_t *)v8.i8, vrsqrts_f32((float32x2_t)v11.u32[0], vmul_f32(*(float32x2_t *)v8.i8, *(float32x2_t *)v8.i8))).f32[0]);
  return result;
}

uint64_t OCBoundingBox.dict.getter()
{
  sub_24B5F87F0(*v0, v0[1], v0[2], v0[3]);
  uint64_t v2 = v1;
  sub_24B562F04(&qword_2697CCD90);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24B6856B0;
  *(void *)(inited + 32) = 0x726F66736E617274;
  *(void *)(inited + 40) = 0xE90000000000006DLL;
  uint64_t v4 = sub_24B562F04((uint64_t *)&unk_2697CD110);
  *(void *)(inited + 48) = v2;
  *(void *)(inited + 72) = v4;
  *(void *)(inited + 80) = 0x6E656469666E6F63;
  *(void *)(inited + 120) = MEMORY[0x263F8D538];
  *(void *)(inited + 88) = 0xEA00000000006563;
  *(void *)(inited + 96) = 0x3FF0000000000000;
  sub_24B560D28(inited);
  uint64_t v5 = sub_24B682710();
  swift_bridgeObjectRelease();
  return v5;
}

unint64_t sub_24B67228C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  float32x4_t v31 = a4;
  int8x16_t v32 = a5;
  uint64_t v8 = sub_24B562F04(a2);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  int32x4_t v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    os_log_type_t v13 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_24B562F04(a3);
  uint64_t v12 = sub_24B682F30();
  os_log_type_t v13 = (void *)v12;
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v13;
  }
  uint64_t v15 = (uint64_t)&v11[*(int *)(v8 + 48)];
  uint64_t v16 = v12 + 64;
  unint64_t v17 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v30[1] = a1;
  uint64_t v18 = a1 + v17;
  uint64_t v19 = *(void *)(v9 + 72);
  swift_retain();
  while (1)
  {
    sub_24B563A6C(v18, (uint64_t)v11, a2);
    unint64_t result = sub_24B59F008((uint64_t)v11);
    if (v21) {
      break;
    }
    unint64_t v22 = result;
    *(void *)(v16 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v23 = v13[6];
    uint64_t v24 = sub_24B682410();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v23 + *(void *)(*(void *)(v24 - 8) + 72) * v22, v11, v24);
    uint64_t v25 = v13[7];
    uint64_t v26 = v31(0);
    unint64_t result = sub_24B67BBDC(v15, v25 + *(void *)(*(void *)(v26 - 8) + 72) * v22, v32);
    uint64_t v27 = v13[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28) {
      goto LABEL_11;
    }
    void v13[2] = v29;
    v18 += v19;
    if (!--v14)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

__n128 OCBoundingBox.init(position:extent:rotation:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>, __n128 result@<Q0>, float32x4_t a4@<Q1>)
{
  *(float32x2_t *)&long long v4 = vmul_n_f32(*(float32x2_t *)a1, a4.f32[0]);
  *((float *)&v4 + 2) = *(float *)(a1 + 8) * a4.f32[0];
  float32x4_t v5 = *(float32x4_t *)(a1 + 32);
  HIDWORD(v4) = 0;
  *(float32x2_t *)&long long v6 = vmul_lane_f32(*(float32x2_t *)(a1 + 16), *(float32x2_t *)a4.f32, 1);
  *((void *)&v6 + 1) = COERCE_UNSIGNED_INT(vmuls_lane_f32(*(float *)(a1 + 24), *(float32x2_t *)a4.f32, 1));
  *(float32x2_t *)&long long v7 = vmul_laneq_f32(*(float32x2_t *)v5.f32, a4, 2);
  *((void *)&v7 + 1) = vmulq_f32(v5, a4).u32[2];
  result.n128_u32[3] = 1.0;
  *(_OWORD *)a2 = v4;
  *(_OWORD *)(a2 + 16) = v6;
  *(_OWORD *)(a2 + 32) = v7;
  *(__n128 *)(a2 + 48) = result;
  return result;
}

void __swiftcall OCBoundingBox.init(transform:)(CoreOC::OCBoundingBox *__return_ptr retstr, simd_float4x4 *transform)
{
  retstr->transform.columns[0] = v2;
  retstr->transform.columns[1] = v3;
  retstr->transform.columns[2] = v4;
  retstr->transform.columns[3] = v5;
}

float OCBoundingBox.scale(_:)@<S0>(_OWORD *a1@<X8>, float32x4_t a2@<Q0>)
{
  float32x4_t v3 = *(float32x4_t *)(v2 + 16);
  float32x4_t v5 = *(float32x4_t *)(v2 + 32);
  long long v4 = *(_OWORD *)(v2 + 48);
  float32x4_t v6 = vmulq_f32(*(float32x4_t *)v2, *(float32x4_t *)v2);
  v6.i32[0] = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v6, 2), vaddq_f32(v6, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v6.f32, 1))).u32[0];
  float32x4_t v7 = vmulq_f32(v3, v3);
  float v8 = sqrtf(v6.f32[0]);
  v7.i32[0] = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v7, 2), vaddq_f32(v7, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v7.f32, 1))).u32[0];
  float32x4_t v9 = vmulq_f32(v5, v5);
  v9.i32[0] = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v9, 2), vaddq_f32(v9, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v9.f32, 1))).u32[0];
  float32x2_t v10 = vrsqrte_f32((float32x2_t)v6.u32[0]);
  float32x2_t v11 = vmul_f32(v10, vrsqrts_f32((float32x2_t)v6.u32[0], vmul_f32(v10, v10)));
  float32x4_t v12 = vmulq_n_f32(*(float32x4_t *)v2, vmul_f32(v11, vrsqrts_f32((float32x2_t)v6.u32[0], vmul_f32(v11, v11))).f32[0]);
  *(float32x2_t *)v6.f32 = vrsqrte_f32((float32x2_t)v7.u32[0]);
  *(float32x2_t *)v6.f32 = vmul_f32(*(float32x2_t *)v6.f32, vrsqrts_f32((float32x2_t)v7.u32[0], vmul_f32(*(float32x2_t *)v6.f32, *(float32x2_t *)v6.f32)));
  float32x4_t v13 = vmulq_n_f32(v3, vmul_f32(*(float32x2_t *)v6.f32, vrsqrts_f32((float32x2_t)v7.u32[0], vmul_f32(*(float32x2_t *)v6.f32, *(float32x2_t *)v6.f32))).f32[0]);
  *(float32x2_t *)v6.f32 = vrsqrte_f32((float32x2_t)v9.u32[0]);
  *(float32x2_t *)v6.f32 = vmul_f32(*(float32x2_t *)v6.f32, vrsqrts_f32((float32x2_t)v9.u32[0], vmul_f32(*(float32x2_t *)v6.f32, *(float32x2_t *)v6.f32)));
  float32x4_t v14 = vmulq_n_f32(v5, vmul_f32(*(float32x2_t *)v6.f32, vrsqrts_f32((float32x2_t)v9.u32[0], vmul_f32(*(float32x2_t *)v6.f32, *(float32x2_t *)v6.f32))).f32[0]);
  v6.f32[0] = v8 * a2.f32[0];
  v7.f32[0] = vmuls_lane_f32(sqrtf(v7.f32[0]), *(float32x2_t *)a2.f32, 1);
  float v15 = vmuls_lane_f32(sqrtf(v9.f32[0]), a2, 2);
  *(float32x2_t *)&long long v16 = vmul_n_f32(*(float32x2_t *)v12.f32, v6.f32[0]);
  *((void *)&v16 + 1) = COERCE_UNSIGNED_INT(vmuls_lane_f32(v6.f32[0], v12, 2));
  *(float32x2_t *)v12.f32 = vmul_n_f32(*(float32x2_t *)v13.f32, v7.f32[0]);
  v12.i64[1] = COERCE_UNSIGNED_INT(vmuls_lane_f32(v7.f32[0], v13, 2));
  *(float32x2_t *)v13.f32 = vmul_n_f32(*(float32x2_t *)v14.f32, v15);
  v13.i64[1] = COERCE_UNSIGNED_INT(vmuls_lane_f32(v15, v14, 2));
  float result = 1.0;
  HIDWORD(v4) = 1.0;
  *a1 = v16;
  a1[1] = v12;
  a1[2] = v13;
  a1[3] = v4;
  return result;
}

uint64_t sub_24B67261C(uint64_t a1)
{
  uint64_t v3 = sub_24B6824D0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  float32x4_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int8x16_t v7 = *v1;
  int8x16_t v23 = v1[1];
  int8x16_t v24 = v7;
  int8x16_t v8 = v1[2];
  int8x16_t v21 = v1[3];
  int8x16_t v22 = v8;
  uint64_t v9 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v9, v3);
  float32x2_t v10 = sub_24B6824B0();
  os_log_type_t v11 = sub_24B682B30();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v25 = a1;
    uint64_t v26 = v20;
    *(_DWORD *)uint64_t v12 = 134349314;
    sub_24B682CD0();
    *(_WORD *)(v12 + 12) = 2082;
    uint64_t v19 = v12 + 14;
    *(int32x2_t *)&double v13 = sub_24B5F87F0(v24, v23, v22, v21);
    uint64_t v14 = MEMORY[0x24C5D4AA0](v13);
    unint64_t v16 = v15;
    swift_bridgeObjectRelease();
    uint64_t v25 = sub_24B5627B8(v14, v16, &v26);
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24B55E000, v10, v11, "Bounding Box: Segment = %{public}ld, Bounding box transform = %{public}s", (uint8_t *)v12, 0x16u);
    uint64_t v17 = v20;
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v17, -1, -1);
    MEMORY[0x24C5D6C00](v12, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t OCDepthPointCloud.bankIds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t OCDepthPointCloud.bankIds.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*OCDepthPointCloud.bankIds.modify())()
{
  return nullsub_1;
}

uint64_t OCDepthPointCloud.spotIds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t OCDepthPointCloud.spotIds.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*OCDepthPointCloud.spotIds.modify())()
{
  return nullsub_1;
}

uint64_t OCDepthPointCloud.echoIds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t OCDepthPointCloud.echoIds.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*OCDepthPointCloud.echoIds.modify())()
{
  return nullsub_1;
}

uint64_t OCDepthPointCloud.euclideanDistances.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t OCDepthPointCloud.euclideanDistances.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*OCDepthPointCloud.euclideanDistances.modify())()
{
  return nullsub_1;
}

uint64_t OCDepthPointCloud.confidences.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t OCDepthPointCloud.confidences.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t (*OCDepthPointCloud.confidences.modify())()
{
  return nullsub_1;
}

uint64_t OCDepthPointCloud.intensities.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t OCDepthPointCloud.intensities.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = a1;
  return result;
}

uint64_t (*OCDepthPointCloud.intensities.modify())()
{
  return nullsub_1;
}

uint64_t OCDepthPointCloud.signalToNoiseRatios.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t OCDepthPointCloud.signalToNoiseRatios.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = a1;
  return result;
}

uint64_t (*OCDepthPointCloud.signalToNoiseRatios.modify())()
{
  return nullsub_1;
}

uint64_t OCDepthPointCloud.uv.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t OCDepthPointCloud.uv.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = a1;
  return result;
}

uint64_t (*OCDepthPointCloud.uv.modify())()
{
  return nullsub_1;
}

uint64_t OCDepthPointCloud.xyz.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t OCDepthPointCloud.xyz.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 64) = a1;
  return result;
}

uint64_t (*OCDepthPointCloud.xyz.modify())()
{
  return nullsub_1;
}

void OCDepthPointCloud.init()(void *a1@<X8>)
{
  uint64_t v1 = MEMORY[0x263F8EE78];
  *a1 = MEMORY[0x263F8EE78];
  a1[1] = v1;
  a1[2] = v1;
  a1[3] = v1;
  a1[4] = v1;
  a1[5] = v1;
  a1[6] = v1;
  a1[7] = v1;
  a1[8] = v1;
}

uint64_t OCDepthPointCloud.init(bankIds:spotIds:echoIds:euclideanDistances:confidences:intensities:signalToNoiseRatios:uv:xyz:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = a10;
  return result;
}

__n128 OCDepthPointCloud.append(bankId:spotId:echoId:euclideanDistance:confidence:intensity:signalToNoiseRatio:uv:xyz:)(char a1, char a2, char a3, float a4, float a5, float a6, float a7, double a8, double a9, __n128 a10)
{
  uint64_t v20 = *(char **)v10;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v20 = sub_24B5FE140(0, *((void *)v20 + 2) + 1, 1, v20);
  }
  unint64_t v22 = *((void *)v20 + 2);
  unint64_t v21 = *((void *)v20 + 3);
  if (v22 >= v21 >> 1) {
    uint64_t v20 = sub_24B5FE140((char *)(v21 > 1), v22 + 1, 1, v20);
  }
  *((void *)v20 + 2) = v22 + 1;
  v20[v22 + 32] = a1;
  *(void *)uint64_t v10 = v20;
  int8x16_t v23 = *(char **)(v10 + 8);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int8x16_t v23 = sub_24B5FE140(0, *((void *)v23 + 2) + 1, 1, v23);
  }
  unint64_t v25 = *((void *)v23 + 2);
  unint64_t v24 = *((void *)v23 + 3);
  if (v25 >= v24 >> 1) {
    int8x16_t v23 = sub_24B5FE140((char *)(v24 > 1), v25 + 1, 1, v23);
  }
  *((void *)v23 + 2) = v25 + 1;
  v23[v25 + 32] = a2;
  *(void *)(v10 + 8) = v23;
  uint64_t v26 = *(char **)(v10 + 16);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v26 = sub_24B5FE140(0, *((void *)v26 + 2) + 1, 1, v26);
  }
  unint64_t v28 = *((void *)v26 + 2);
  unint64_t v27 = *((void *)v26 + 3);
  if (v28 >= v27 >> 1) {
    uint64_t v26 = sub_24B5FE140((char *)(v27 > 1), v28 + 1, 1, v26);
  }
  *((void *)v26 + 2) = v28 + 1;
  v26[v28 + 32] = a3;
  *(void *)(v10 + 16) = v26;
  uint64_t v29 = *(char **)(v10 + 24);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v29 = sub_24B58ACBC(0, *((void *)v29 + 2) + 1, 1, v29);
  }
  unint64_t v31 = *((void *)v29 + 2);
  unint64_t v30 = *((void *)v29 + 3);
  if (v31 >= v30 >> 1) {
    uint64_t v29 = sub_24B58ACBC((char *)(v30 > 1), v31 + 1, 1, v29);
  }
  *((void *)v29 + 2) = v31 + 1;
  *(float *)&v29[4 * v31 + 32] = a4;
  *(void *)(v10 + 24) = v29;
  int8x16_t v32 = *(char **)(v10 + 32);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int8x16_t v32 = sub_24B58ACBC(0, *((void *)v32 + 2) + 1, 1, v32);
  }
  unint64_t v34 = *((void *)v32 + 2);
  unint64_t v33 = *((void *)v32 + 3);
  if (v34 >= v33 >> 1) {
    int8x16_t v32 = sub_24B58ACBC((char *)(v33 > 1), v34 + 1, 1, v32);
  }
  *((void *)v32 + 2) = v34 + 1;
  *(float *)&v32[4 * v34 + 32] = a5;
  *(void *)(v10 + 32) = v32;
  uint64_t v35 = *(char **)(v10 + 40);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v35 = sub_24B58ACBC(0, *((void *)v35 + 2) + 1, 1, v35);
  }
  unint64_t v37 = *((void *)v35 + 2);
  unint64_t v36 = *((void *)v35 + 3);
  if (v37 >= v36 >> 1) {
    uint64_t v35 = sub_24B58ACBC((char *)(v36 > 1), v37 + 1, 1, v35);
  }
  *((void *)v35 + 2) = v37 + 1;
  *(float *)&v35[4 * v37 + 32] = a6;
  *(void *)(v10 + 40) = v35;
  uint64_t v38 = *(char **)(v10 + 48);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v38 = sub_24B58ACBC(0, *((void *)v38 + 2) + 1, 1, v38);
  }
  unint64_t v40 = *((void *)v38 + 2);
  unint64_t v39 = *((void *)v38 + 3);
  if (v40 >= v39 >> 1) {
    uint64_t v38 = sub_24B58ACBC((char *)(v39 > 1), v40 + 1, 1, v38);
  }
  *((void *)v38 + 2) = v40 + 1;
  *(float *)&v38[4 * v40 + 32] = a7;
  *(void *)(v10 + 48) = v38;
  uint64_t v41 = *(void **)(v10 + 56);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v41 = sub_24B5FE030(0, v41[2] + 1, 1, v41);
  }
  unint64_t v43 = v41[2];
  unint64_t v42 = v41[3];
  if (v43 >= v42 >> 1) {
    uint64_t v41 = sub_24B5FE030((void *)(v42 > 1), v43 + 1, 1, v41);
  }
  uint64_t v41[2] = v43 + 1;
  uint64_t v44 = (double *)&v41[2 * v43];
  v44[4] = a8;
  v44[5] = a9;
  *(void *)(v10 + 56) = v41;
  uint64_t v45 = *(void **)(v10 + 64);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v45 = sub_24B57C038(0, v45[2] + 1, 1, v45);
  }
  unint64_t v47 = v45[2];
  unint64_t v46 = v45[3];
  if (v47 >= v46 >> 1) {
    uint64_t v45 = sub_24B57C038((void *)(v46 > 1), v47 + 1, 1, v45);
  }
  v45[2] = v47 + 1;
  __n128 result = a10;
  *(__n128 *)&v45[2 * v47 + 4] = a10;
  *(void *)(v10 + 64) = v45;
  return result;
}

Swift::Void __swiftcall OCDepthPointCloud.remove(at:)(Swift::Int at)
{
  if (*(void *)(*(void *)v1 + 16) > at)
  {
    sub_24B6730B0(at);
    sub_24B6730B0(at);
    sub_24B6730B0(at);
    sub_24B673180(at);
    sub_24B673180(at);
    sub_24B673180(at);
    sub_24B673180(at);
    sub_24B67325C(at);
    sub_24B67333C(at);
  }
}

uint64_t sub_24B6730B0(unint64_t a1)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = sub_24B67A63C((uint64_t)v3);
  }
  unint64_t v4 = *((void *)v3 + 2);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    int64_t v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      int8x16_t v7 = &v3[a1 + 32];
      uint64_t v8 = *v7;
      memmove(v7, v7 + 1, v6);
      *((void *)v3 + 2) = v5;
      *uint64_t v1 = v3;
      return v8;
    }
  }
  uint64_t result = sub_24B682F40();
  __break(1u);
  return result;
}

uint64_t sub_24B673180(unint64_t a1)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = sub_24B67A628((uint64_t)v3);
  }
  unint64_t v4 = *((void *)v3 + 2);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    uint64_t v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      uint64_t result = (uint64_t)memmove(&v3[4 * a1 + 32], &v3[4 * a1 + 36], 4 * v6);
      *((void *)v3 + 2) = v5;
      *uint64_t v1 = v3;
      return result;
    }
  }
  uint64_t result = sub_24B682F40();
  __break(1u);
  return result;
}

uint64_t sub_24B67325C(unint64_t a1)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = sub_24B67A614(v3);
  }
  unint64_t v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    uint64_t v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      uint64_t result = (uint64_t)memmove(&v3[2 * a1 + 4], &v3[2 * a1 + 6], 16 * v6);
      v3[2] = v5;
      *uint64_t v1 = v3;
      return result;
    }
  }
  uint64_t result = sub_24B682F40();
  __break(1u);
  return result;
}

uint64_t sub_24B67333C(unint64_t a1)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = sub_24B67A600(v3);
  }
  unint64_t v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    uint64_t v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      uint64_t result = (uint64_t)memmove(&v3[2 * a1 + 4], &v3[2 * a1 + 6], 16 * v6);
      v3[2] = v5;
      *uint64_t v1 = v3;
      return result;
    }
  }
  uint64_t result = sub_24B682F40();
  __break(1u);
  return result;
}

uint64_t (*OCVoxelCloud.voxels.modify())()
{
  return nullsub_1;
}

uint64_t (*OCVoxelCloud.transform.modify())()
{
  return nullsub_1;
}

void __swiftcall OCVoxelCloud.init(voxels:transform:)(CoreOC::OCVoxelCloud *__return_ptr retstr, Swift::OpaquePointer voxels, simd_float4x4 *transform)
{
  retstr->voxels = voxels;
  retstr->transform.columns[0] = v3;
  retstr->transform.columns[1] = v4;
  retstr->transform.columns[2] = v5;
  retstr->transform.columns[3] = v6;
}

uint64_t OCPointCloud.points.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t OCPointCloud.points.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*OCPointCloud.points.modify())()
{
  return nullsub_1;
}

__n128 OCPointCloud.transform.getter()
{
  return v0[1];
}

void OCPointCloud.transform.setter(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  v4[1] = a1;
  v4[2] = a2;
  v4[3] = a3;
  v4[4] = a4;
}

uint64_t (*OCPointCloud.transform.modify())()
{
  return nullsub_1;
}

unint64_t sub_24B6734F0@<X0>(unint64_t result@<X0>, __n128 *a2@<X8>, __n128 a3@<Q0>, __n128 a4@<Q1>, __n128 a5@<Q2>, __n128 a6@<Q3>)
{
  a2->n128_u64[0] = result;
  a2[1] = a3;
  a2[2] = a4;
  a2[3] = a5;
  a2[4] = a6;
  return result;
}

uint64_t (*OCTriangleMesh.vertexBuffer.modify())()
{
  return nullsub_1;
}

uint64_t OCTriangleMesh.indexBuffer.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t OCTriangleMesh.indexBuffer.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*OCTriangleMesh.indexBuffer.modify())()
{
  return nullsub_1;
}

uint64_t (*OCTriangleMesh.transform.modify())()
{
  return nullsub_1;
}

unint64_t sub_24B673594@<X0>(unint64_t result@<X0>, unint64_t a2@<X1>, __n128 *a3@<X8>, __n128 a4@<Q0>, __n128 a5@<Q1>, __n128 a6@<Q2>, __n128 a7@<Q3>)
{
  a3->n128_u64[0] = result;
  a3->n128_u64[1] = a2;
  a3[1] = a4;
  a3[2] = a5;
  a3[3] = a6;
  a3[4] = a7;
  return result;
}

uint64_t sub_24B6735A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10@<D0>)
{
  uint64_t v14 = *(void *)(a4 + 64);
  *(double *)a9 = a10;
  *(void *)(a9 + 8) = a1;
  *(void *)(a9 + 16) = a2;
  *(void *)(a9 + 24) = a3;
  long long v15 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)a4;
  *(_OWORD *)(a9 + 48) = v15;
  long long v16 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(a9 + 80) = v16;
  *(void *)(a9 + 96) = v14;
  *(void *)(a9 + 104) = a5;
  uint64_t v17 = (int *)type metadata accessor for OCCaptureData(0);
  uint64_t result = sub_24B67BBDC(a6, a9 + v17[10], type metadata accessor for ObjectCaptureSession.Frame.Camera);
  *(void *)(a9 + v17[11]) = a7;
  *(unsigned char *)(a9 + v17[12]) = a8;
  return result;
}

uint64_t sub_24B673644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  *(double *)a3 = a4;
  long long v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 24) = v6;
  long long v7 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a3 + 40) = *(_OWORD *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 64);
  *(_OWORD *)(a3 + 56) = v7;
  *(void *)(a3 + 72) = v8;
  uint64_t v9 = type metadata accessor for OCBundleData(0);
  return sub_24B67BBDC(a2, a3 + *(int *)(v9 + 24), type metadata accessor for ObjectCaptureSession.Frame.Camera);
}

__n128 sub_24B6736B8@<Q0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, __n128 a5@<Q1>, __n128 a6@<Q2>, __n128 a7@<Q3>, __n128 a8@<Q4>, __n128 a9@<Q5>, __n128 a10@<Q6>, __n128 a11@<Q7>, __n128 a12)
{
  *(__n128 *)&v24[32] = a7;
  *(__n128 *)&v24[48] = a8;
  *(__n128 *)unint64_t v24 = a5;
  *(__n128 *)&v24[16] = a6;
  uint64_t v16 = sub_24B682410();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(a3, a1, v16);
  uint64_t v18 = (int *)type metadata accessor for OCObjectCentricPoseNode(0);
  *(double *)(a3 + v18[5]) = a4;
  uint64_t v19 = (_OWORD *)(a3 + v18[6]);
  long long v20 = a2[1];
  *uint64_t v19 = *a2;
  v19[1] = v20;
  v19[2] = a2[2];
  *(simd_float4x4 *)(a3 + v18[7]) = *(simd_float4x4 *)v24;
  simd_float4x4 v28 = __invert_f4(*(simd_float4x4 *)v24);
  *(simd_float4 *)&v24[32] = v28.columns[1];
  *(simd_float4 *)&v24[48] = v28.columns[0];
  *(simd_float4 *)unint64_t v24 = v28.columns[3];
  *(simd_float4 *)&v24[16] = v28.columns[2];
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a1, v16);
  unint64_t v21 = (_OWORD *)(a3 + v18[8]);
  *unint64_t v21 = *(_OWORD *)&v24[48];
  v21[1] = *(_OWORD *)&v24[32];
  void v21[2] = *(_OWORD *)&v24[16];
  void v21[3] = *(_OWORD *)v24;
  unint64_t v22 = (__n128 *)(a3 + v18[9]);
  *unint64_t v22 = a9;
  v22[1] = a10;
  void v22[2] = a11;
  __n128 result = a12;
  void v22[3] = a12;
  return result;
}

__n128 sub_24B673840@<Q0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, __n128 a5@<Q1>, __n128 a6@<Q2>, __n128 a7@<Q3>, __n128 a8@<Q4>)
{
  uint64_t v12 = sub_24B682410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(a3, a1, v12);
  double v13 = (int *)type metadata accessor for VIOPoseNode(0);
  *(double *)(a3 + v13[5]) = a4;
  uint64_t v14 = (_OWORD *)(a3 + v13[6]);
  long long v15 = a2[1];
  *uint64_t v14 = *a2;
  v14[1] = v15;
  v14[2] = a2[2];
  uint64_t v16 = (__n128 *)(a3 + v13[7]);
  *uint64_t v16 = a5;
  v16[1] = a6;
  __n128 result = a8;
  v16[2] = a7;
  v16[3] = a8;
  return result;
}

float GeoDebugData.minSphereAngle.getter()
{
  return *(float *)v0;
}

void GeoDebugData.minSphereAngle.setter(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*GeoDebugData.minSphereAngle.modify())()
{
  return nullsub_1;
}

float GeoDebugData.baselineOfMinSphereAngle.getter()
{
  return *(float *)(v0 + 4);
}

void GeoDebugData.baselineOfMinSphereAngle.setter(float a1)
{
  *(float *)(v1 + 4) = a1;
}

uint64_t (*GeoDebugData.baselineOfMinSphereAngle.modify())()
{
  return nullsub_1;
}

double GeoDebugData.minSphereAngleShotTimestamp.getter()
{
  return *(double *)(v0 + 8);
}

void GeoDebugData.minSphereAngleShotTimestamp.setter(double a1)
{
  *(double *)(v1 + 8) = a1;
}

uint64_t (*GeoDebugData.minSphereAngleShotTimestamp.modify())()
{
  return nullsub_1;
}

float GeoDebugData.minBaseline.getter()
{
  return *(float *)(v0 + 16);
}

void GeoDebugData.minBaseline.setter(float a1)
{
  *(float *)(v1 + 16) = a1;
}

uint64_t (*GeoDebugData.minBaseline.modify())()
{
  return nullsub_1;
}

float GeoDebugData.sphereAngleOfMinBaseline.getter()
{
  return *(float *)(v0 + 20);
}

void GeoDebugData.sphereAngleOfMinBaseline.setter(float a1)
{
  *(float *)(v1 + 20) = a1;
}

uint64_t (*GeoDebugData.sphereAngleOfMinBaseline.modify())()
{
  return nullsub_1;
}

double GeoDebugData.minBaselineShotTimestamp.getter()
{
  return *(double *)(v0 + 24);
}

void GeoDebugData.minBaselineShotTimestamp.setter(double a1)
{
  *(double *)(v1 + 24) = a1;
}

uint64_t (*GeoDebugData.minBaselineShotTimestamp.modify())()
{
  return nullsub_1;
}

float GeoDebugData.minGlobalAngle.getter()
{
  return *(float *)(v0 + 32);
}

void GeoDebugData.minGlobalAngle.setter(float a1)
{
  *(float *)(v1 + 32) = a1;
}

uint64_t (*GeoDebugData.minGlobalAngle.modify())()
{
  return nullsub_1;
}

float GeoDebugData.baselineOfMinGlobalAngle.getter()
{
  return *(float *)(v0 + 36);
}

void GeoDebugData.baselineOfMinGlobalAngle.setter(float a1)
{
  *(float *)(v1 + 36) = a1;
}

uint64_t (*GeoDebugData.baselineOfMinGlobalAngle.modify())()
{
  return nullsub_1;
}

double GeoDebugData.minGlobalAngleShotTimestamp.getter()
{
  return *(double *)(v0 + 40);
}

void GeoDebugData.minGlobalAngleShotTimestamp.setter(double a1)
{
  *(double *)(v1 + 40) = a1;
}

uint64_t (*GeoDebugData.minGlobalAngleShotTimestamp.modify())()
{
  return nullsub_1;
}

float GeoDebugData.minGlobalBaseline.getter()
{
  return *(float *)(v0 + 48);
}

void GeoDebugData.minGlobalBaseline.setter(float a1)
{
  *(float *)(v1 + 48) = a1;
}

uint64_t (*GeoDebugData.minGlobalBaseline.modify())()
{
  return nullsub_1;
}

float GeoDebugData.globalAngleOfMinBaseline.getter()
{
  return *(float *)(v0 + 52);
}

void GeoDebugData.globalAngleOfMinBaseline.setter(float a1)
{
  *(float *)(v1 + 52) = a1;
}

uint64_t (*GeoDebugData.globalAngleOfMinBaseline.modify())()
{
  return nullsub_1;
}

double GeoDebugData.minGlobalBaselineShotTimestamp.getter()
{
  return *(double *)(v0 + 56);
}

void GeoDebugData.minGlobalBaselineShotTimestamp.setter(double a1)
{
  *(double *)(v1 + 56) = a1;
}

uint64_t (*GeoDebugData.minGlobalBaselineShotTimestamp.modify())()
{
  return nullsub_1;
}

float GeoDebugData.sphereAngleConfusionIntervalUpperBound.getter()
{
  return *(float *)(v0 + 64);
}

void GeoDebugData.sphereAngleConfusionIntervalUpperBound.setter(float a1)
{
  *(float *)(v1 + 64) = a1;
}

uint64_t (*GeoDebugData.sphereAngleConfusionIntervalUpperBound.modify())()
{
  return nullsub_1;
}

float GeoDebugData.sphereAngleConfusionIntervalLowerBound.getter()
{
  return *(float *)(v0 + 68);
}

void GeoDebugData.sphereAngleConfusionIntervalLowerBound.setter(float a1)
{
  *(float *)(v1 + 68) = a1;
}

uint64_t (*GeoDebugData.sphereAngleConfusionIntervalLowerBound.modify())()
{
  return nullsub_1;
}

float GeoDebugData.baselineThreshold.getter()
{
  return *(float *)(v0 + 72);
}

void GeoDebugData.baselineThreshold.setter(float a1)
{
  *(float *)(v1 + 72) = a1;
}

uint64_t (*GeoDebugData.baselineThreshold.modify())()
{
  return nullsub_1;
}

Swift::Void __swiftcall GeoDebugData.reset()()
{
  *uint64_t v0 = 0xBF8000007F800000;
  v0[1] = 0xBFF0000000000000;
  v0[2] = 0xBF8000007F800000;
  v0[3] = 0xBFF0000000000000;
  v0[4] = 0xBF8000007F800000;
  v0[5] = 0xBFF0000000000000;
  v0[6] = 0xBF8000007F800000;
  v0[7] = 0xBFF0000000000000;
}

double sub_24B673C10@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xBF8000007F800000;
  *(void *)(a1 + 8) = 0xBFF0000000000000;
  *(void *)(a1 + 16) = 0xBF8000007F800000;
  *(void *)(a1 + 24) = 0xBFF0000000000000;
  *(void *)(a1 + 32) = 0xBF8000007F800000;
  *(void *)(a1 + 40) = 0xBFF0000000000000;
  *(void *)(a1 + 48) = 0xBF8000007F800000;
  *(void *)(a1 + 56) = 0xBFF0000000000000;
  __asm { FMOV            V0.2S, #-1.0 }
  *(double *)(a1 + 64) = result;
  *(_DWORD *)(a1 + 72) = -1082130432;
  return result;
}

uint64_t sub_24B673C50(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_24B673C90(a1);
  return v2;
}

uint64_t sub_24B673C90(uint64_t a1)
{
  uint64_t v3 = MEMORY[0x263F8EE78];
  *(void *)(v1 + 88) = sub_24B67228C(MEMORY[0x263F8EE78], &qword_2697CD1B8, (uint64_t *)&unk_2697CD190, type metadata accessor for OCObjectCentricPoseNode, type metadata accessor for OCObjectCentricPoseNode);
  *(void *)(v1 + 96) = sub_24B67228C(v3, &qword_2697CD1B0, (uint64_t *)&unk_2697CD1A0, type metadata accessor for VIOPoseNode, type metadata accessor for VIOPoseNode);
  sub_24B682380();
  *(void *)(v1 + OBJC_IVAR____TtC6CoreOC24OCObjectCentricPoseGraph_vioClosenessCheckLogIntervalThresh) = 0x3FF0000000000000;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC6CoreOC24OCObjectCentricPoseGraph_shouldLogClosenessTiming) = 0;
  sub_24B56CF38(a1, (uint64_t)&v10, &qword_2697CC9A0);
  if (v14 == 1)
  {
    sub_24B56CF38(a1, v1 + 16, &qword_2697CC9A0);
  }
  else
  {
    int8x16_t v4 = (int8x16_t)vmulq_f32(v10, v10);
    *(float32x2_t *)v4.i8 = vadd_f32(*(float32x2_t *)v4.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v4, v4, 8uLL));
    v4.i32[0] = vadd_f32(*(float32x2_t *)v4.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v4.i8, 1)).u32[0];
    float32x2_t v5 = vrsqrte_f32((float32x2_t)v4.u32[0]);
    float32x2_t v6 = vmul_f32(v5, vrsqrts_f32((float32x2_t)v4.u32[0], vmul_f32(v5, v5)));
    v4.i32[0] = vmul_f32(v6, vrsqrts_f32((float32x2_t)v4.u32[0], vmul_f32(v6, v6))).u32[0];
    int8x16_t v7 = (int8x16_t)vmulq_f32(v11, v11);
    *(float32x2_t *)v7.i8 = vadd_f32(*(float32x2_t *)v7.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v7, v7, 8uLL));
    v15.columns[0] = (simd_float4)vmulq_n_f32(v10, *(float *)v4.i32);
    v4.i32[0] = vadd_f32(*(float32x2_t *)v7.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v7.i8, 1)).u32[0];
    *(float32x2_t *)v7.i8 = vrsqrte_f32((float32x2_t)v4.u32[0]);
    *(float32x2_t *)v7.i8 = vmul_f32(*(float32x2_t *)v7.i8, vrsqrts_f32((float32x2_t)v4.u32[0], vmul_f32(*(float32x2_t *)v7.i8, *(float32x2_t *)v7.i8)));
    v4.i32[0] = vmul_f32(*(float32x2_t *)v7.i8, vrsqrts_f32((float32x2_t)v4.u32[0], vmul_f32(*(float32x2_t *)v7.i8, *(float32x2_t *)v7.i8))).u32[0];
    v15.columns[3] = v13;
    int8x16_t v8 = (int8x16_t)vmulq_f32(v12, v12);
    *(float32x2_t *)v8.i8 = vadd_f32(*(float32x2_t *)v8.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v8, v8, 8uLL));
    v15.columns[1] = (simd_float4)vmulq_n_f32(v11, *(float *)v4.i32);
    v4.i32[0] = vadd_f32(*(float32x2_t *)v8.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v8.i8, 1)).u32[0];
    *(float32x2_t *)v8.i8 = vrsqrte_f32((float32x2_t)v4.u32[0]);
    *(float32x2_t *)v8.i8 = vmul_f32(*(float32x2_t *)v8.i8, vrsqrts_f32((float32x2_t)v4.u32[0], vmul_f32(*(float32x2_t *)v8.i8, *(float32x2_t *)v8.i8)));
    v15.columns[2] = (simd_float4)vmulq_n_f32(v12, vmul_f32(*(float32x2_t *)v8.i8, vrsqrts_f32((float32x2_t)v4.u32[0], vmul_f32(*(float32x2_t *)v8.i8, *(float32x2_t *)v8.i8))).f32[0]);
    *(simd_float4x4 *)(v1 + 16) = __invert_f4(v15);
    *(unsigned char *)(v1 + 80) = 0;
  }
  return v1;
}

uint64_t sub_24B673E78(uint64_t a1)
{
  uint64_t v3 = sub_24B682410();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  float32x2_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24B562F04(&qword_2697CD120);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  float32x4_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  float32x4_t v12 = (char *)v27 - v11;
  swift_beginAccess();
  uint64_t v13 = *(void *)(v1 + 88);
  if (*(void *)(v13 + 16))
  {
    uint64_t v29 = v4;
    swift_bridgeObjectRetain();
    unint64_t v14 = sub_24B59F008(a1);
    if (v15)
    {
      unint64_t v16 = v14;
      v27[1] = v1 + 88;
      uint64_t v17 = v3;
      uint64_t v18 = a1;
      uint64_t v19 = *(void *)(v13 + 56);
      uint64_t v20 = type metadata accessor for OCObjectCentricPoseNode(0);
      uint64_t v21 = *(void *)(v20 - 8);
      simd_float4x4 v28 = v6;
      uint64_t v22 = v21;
      uint64_t v23 = v19 + *(void *)(v21 + 72) * v16;
      a1 = v18;
      uint64_t v3 = v17;
      sub_24B67A598(v23, (uint64_t)v12, type metadata accessor for OCObjectCentricPoseNode);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v12, 0, 1, v20);
      float32x2_t v6 = v28;
    }
    else
    {
      uint64_t v20 = type metadata accessor for OCObjectCentricPoseNode(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v12, 1, 1, v20);
    }
    swift_bridgeObjectRelease();
    type metadata accessor for OCObjectCentricPoseNode(0);
    int v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v12, 1, v20);
    uint64_t v4 = v29;
    if (v24 != 1)
    {
      sub_24B5632A8((uint64_t)v12, &qword_2697CD120);
      return 0;
    }
  }
  else
  {
    uint64_t v20 = type metadata accessor for OCObjectCentricPoseNode(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v12, 1, 1, v20);
  }
  sub_24B5632A8((uint64_t)v12, &qword_2697CD120);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  sub_24B67A598(a1, (uint64_t)v10, type metadata accessor for OCObjectCentricPoseNode);
  type metadata accessor for OCObjectCentricPoseNode(0);
  uint64_t v25 = 1;
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v10, 0, 1, v20);
  swift_beginAccess();
  sub_24B674244((uint64_t)v10, (uint64_t)v6);
  swift_endAccess();
  return v25;
}

uint64_t sub_24B674244(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24B562F04(&qword_2697CD120);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for OCObjectCentricPoseNode(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_24B5632A8(a1, &qword_2697CD120);
    sub_24B67A650(a2, (uint64_t)v8);
    uint64_t v13 = sub_24B682410();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a2, v13);
    return sub_24B5632A8((uint64_t)v8, &qword_2697CD120);
  }
  else
  {
    sub_24B67BBDC(a1, (uint64_t)v11, type metadata accessor for OCObjectCentricPoseNode);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_24B67B2B8((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v18;
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_24B682410();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_24B674464(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24B562F04(&qword_2697CD128);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for VIOPoseNode(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_24B5632A8(a1, &qword_2697CD128);
    sub_24B67A874(a2, (uint64_t)v8);
    uint64_t v13 = sub_24B682410();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a2, v13);
    return sub_24B5632A8((uint64_t)v8, &qword_2697CD128);
  }
  else
  {
    sub_24B67BBDC(a1, (uint64_t)v11, type metadata accessor for VIOPoseNode);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_24B67B53C((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v18;
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_24B682410();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_24B674684(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24B682410();
  uint64_t v29 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24B562F04(&qword_2697CD128);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v26 - v11;
  swift_beginAccess();
  uint64_t v13 = *(void *)(v1 + 96);
  if (*(void *)(v13 + 16))
  {
    uint64_t v28 = v1 + 96;
    swift_bridgeObjectRetain();
    unint64_t v14 = sub_24B59F008(a1);
    if (v15)
    {
      unint64_t v16 = v14;
      uint64_t v26 = v4;
      uint64_t v17 = a1;
      uint64_t v18 = v1;
      uint64_t v19 = *(void *)(v13 + 56);
      uint64_t v20 = type metadata accessor for VIOPoseNode(0);
      uint64_t v21 = *(void *)(v20 - 8);
      unint64_t v27 = v6;
      uint64_t v22 = v21;
      uint64_t v23 = v19 + *(void *)(v21 + 72) * v16;
      uint64_t v2 = v18;
      a1 = v17;
      uint64_t v4 = v26;
      sub_24B67A598(v23, (uint64_t)v12, type metadata accessor for VIOPoseNode);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v12, 0, 1, v20);
      uint64_t v6 = v27;
    }
    else
    {
      uint64_t v20 = type metadata accessor for VIOPoseNode(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v12, 1, 1, v20);
    }
    swift_bridgeObjectRelease();
    type metadata accessor for VIOPoseNode(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v12, 1, v20) != 1)
    {
      sub_24B5632A8((uint64_t)v12, &qword_2697CD128);
      return 0;
    }
  }
  else
  {
    uint64_t v20 = type metadata accessor for VIOPoseNode(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v12, 1, 1, v20);
  }
  sub_24B5632A8((uint64_t)v12, &qword_2697CD128);
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v6, a1, v4);
  sub_24B67A598(a1, (uint64_t)v10, type metadata accessor for VIOPoseNode);
  type metadata accessor for VIOPoseNode(0);
  uint64_t v24 = 1;
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v10, 0, 1, v20);
  swift_beginAccess();
  sub_24B674464((uint64_t)v10, (uint64_t)v6);
  swift_endAccess();
  *(unsigned char *)(v2 + OBJC_IVAR____TtC6CoreOC24OCObjectCentricPoseGraph_shouldLogClosenessTiming) = 1;
  return v24;
}

uint64_t sub_24B674A64(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24B562F04(&qword_2697CD128);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v60 = (char *)&v54 - v8;
  uint64_t v9 = sub_24B682410();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24B562F04(&qword_2697CD120);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  unint64_t v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v54 - v17;
  uint64_t v19 = v1 + 88;
  swift_beginAccess();
  uint64_t v20 = *(void *)(v1 + 88);
  uint64_t v21 = *(void *)(v20 + 16);
  uint64_t v59 = v7;
  if (v21)
  {
    uint64_t v57 = v19;
    swift_bridgeObjectRetain();
    unint64_t v22 = sub_24B59F008(a1);
    uint64_t v58 = v16;
    if (v23)
    {
      unint64_t v24 = v22;
      uint64_t v54 = v10;
      uint64_t v25 = v9;
      uint64_t v26 = v12;
      uint64_t v27 = *(void *)(v20 + 56);
      uint64_t v28 = type metadata accessor for OCObjectCentricPoseNode(0);
      uint64_t v29 = *(void *)(v28 - 8);
      uint64_t v55 = a1;
      uint64_t v30 = v29;
      uint64_t v31 = v27 + *(void *)(v29 + 72) * v24;
      uint64_t v12 = v26;
      uint64_t v9 = v25;
      uint64_t v10 = v54;
      sub_24B67A598(v31, (uint64_t)v18, type metadata accessor for OCObjectCentricPoseNode);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v18, 0, 1, v28);
      a1 = v55;
    }
    else
    {
      uint64_t v28 = type metadata accessor for OCObjectCentricPoseNode(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v18, 1, 1, v28);
    }
    swift_bridgeObjectRelease();
    type metadata accessor for OCObjectCentricPoseNode(0);
    uint64_t v33 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v18, 1, v28) != 1)
    {
      sub_24B5632A8((uint64_t)v18, &qword_2697CD120);
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
      uint64_t v48 = 1;
      uint64_t v49 = (uint64_t)v58;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56))(v58, 1, 1, v28);
      swift_beginAccess();
      sub_24B674244(v49, (uint64_t)v12);
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v32 = type metadata accessor for OCObjectCentricPoseNode(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v18, 1, 1, v32);
  }
  uint64_t v56 = v9;
  sub_24B5632A8((uint64_t)v18, &qword_2697CD120);
  unint64_t v34 = (char *)(v2 + 96);
  swift_beginAccess();
  uint64_t v35 = *(void *)(v2 + 96);
  if (*(void *)(v35 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v36 = sub_24B59F008(a1);
    uint64_t v37 = (uint64_t)v60;
    if (v38)
    {
      unint64_t v39 = v36;
      unint64_t v40 = v12;
      uint64_t v41 = *(void *)(v35 + 56);
      uint64_t v42 = type metadata accessor for VIOPoseNode(0);
      uint64_t v43 = *(void *)(v42 - 8);
      uint64_t v58 = v34;
      uint64_t v44 = v10;
      uint64_t v45 = a1;
      uint64_t v46 = v43;
      uint64_t v47 = v41 + *(void *)(v43 + 72) * v39;
      uint64_t v12 = v40;
      sub_24B67A598(v47, v37, type metadata accessor for VIOPoseNode);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v37, 0, 1, v42);
      a1 = v45;
      uint64_t v10 = v44;
    }
    else
    {
      uint64_t v42 = type metadata accessor for VIOPoseNode(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v37, 1, 1, v42);
    }
    swift_bridgeObjectRelease();
    type metadata accessor for VIOPoseNode(0);
    uint64_t v51 = *(void *)(v42 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v37, 1, v42) == 1) {
      goto LABEL_14;
    }
    sub_24B5632A8(v37, &qword_2697CD128);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v56);
    uint64_t v48 = 1;
    uint64_t v52 = (uint64_t)v59;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v51 + 56))(v59, 1, 1, v42);
    swift_beginAccess();
    sub_24B674464(v52, (uint64_t)v12);
LABEL_16:
    swift_endAccess();
    return v48;
  }
  uint64_t v50 = type metadata accessor for VIOPoseNode(0);
  uint64_t v37 = (uint64_t)v60;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v60, 1, 1, v50);
LABEL_14:
  sub_24B5632A8(v37, &qword_2697CD128);
  return 0;
}

uint64_t sub_24B675114(uint64_t a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5)
{
  __n128 v127 = a5;
  __n128 v126 = a4;
  __n128 v125 = a3;
  __n128 v124 = a2;
  uint64_t v7 = sub_24B562F04(&qword_2697CD128);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v118 = (uint64_t)&v118 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v131 = (uint64_t)&v118 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v118 - v12;
  unint64_t v14 = sub_24B682410();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v118 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  long long v123 = (char *)&v118 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  int v122 = (char *)&v118 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  id v121 = (char *)&v118 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  long long v130 = (char *)&v118 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  long long v129 = (char *)&v118 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&v118 - v29;
  uint64_t v31 = sub_24B562F04(&qword_2697CD120);
  uint64_t v32 = MEMORY[0x270FA5388](v31 - 8);
  uint64_t v120 = (uint64_t)&v118 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  unint64_t v36 = (char *)&v118 - v35;
  MEMORY[0x270FA5388](v34);
  char v38 = (char *)&v118 - v37;
  int8x16_t v135 = (uint64_t *)(v5 + 88);
  swift_beginAccess();
  uint64_t v133 = v5;
  unint64_t v134 = v14;
  uint64_t v39 = *(void *)(v5 + 88);
  uint64_t v40 = *(void *)(v39 + 16);
  uint64_t v132 = v15;
  uint64_t v136 = a1;
  long long v119 = v18;
  if (!v40)
  {
    uint64_t v48 = type metadata accessor for OCObjectCentricPoseNode(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v38, 1, 1, v48);
LABEL_7:
    int v49 = 0;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  unint64_t v41 = sub_24B59F008(a1);
  if (v42)
  {
    unint64_t v43 = v41;
    uint64_t v44 = *(void *)(v39 + 56);
    uint64_t v45 = type metadata accessor for OCObjectCentricPoseNode(0);
    uint64_t v46 = *(void *)(v45 - 8);
    uint64_t v47 = v44 + *(void *)(v46 + 72) * v43;
    unint64_t v14 = v134;
    sub_24B67A598(v47, (uint64_t)v38, type metadata accessor for OCObjectCentricPoseNode);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v38, 0, 1, v45);
    uint64_t v15 = v132;
  }
  else
  {
    uint64_t v45 = type metadata accessor for OCObjectCentricPoseNode(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v38, 1, 1, v45);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for OCObjectCentricPoseNode(0);
  int v49 = 1;
  int v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v45 - 8) + 48))(v38, 1, v45);
  a1 = v136;
  if (v50 == 1) {
    goto LABEL_7;
  }
LABEL_8:
  sub_24B5632A8((uint64_t)v38, &qword_2697CD120);
  uint64_t v51 = v15 + 16;
  long long v128 = *(void (**)(char *, uint64_t, unint64_t))(v15 + 16);
  v128(v30, a1, v14);
  if (v49)
  {
    uint64_t v52 = *(void (**)(char *, unint64_t))(v15 + 8);
    v52(v30, v14);
  }
  else
  {
    uint64_t v53 = v133;
    swift_beginAccess();
    uint64_t v54 = *(void *)(v53 + 96);
    if (*(void *)(v54 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v55 = sub_24B59F008((uint64_t)v30);
      if (v56)
      {
        unint64_t v57 = v55;
        uint64_t v58 = *(void *)(v54 + 56);
        uint64_t v59 = type metadata accessor for VIOPoseNode(0);
        uint64_t v60 = *(void *)(v59 - 8);
        uint64_t v61 = v58 + *(void *)(v60 + 72) * v57;
        uint64_t v15 = v132;
        sub_24B67A598(v61, (uint64_t)v13, type metadata accessor for VIOPoseNode);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v13, 0, 1, v59);
        unint64_t v14 = v134;
      }
      else
      {
        uint64_t v59 = type metadata accessor for VIOPoseNode(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v13, 1, 1, v59);
      }
      swift_bridgeObjectRelease();
      a1 = v136;
    }
    else
    {
      uint64_t v59 = type metadata accessor for VIOPoseNode(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v13, 1, 1, v59);
    }
    uint64_t v52 = *(void (**)(char *, unint64_t))(v15 + 8);
    v52(v30, v14);
    type metadata accessor for VIOPoseNode(0);
    int v62 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v59 - 8) + 48))(v13, 1, v59);
    sub_24B5632A8((uint64_t)v13, &qword_2697CD128);
    if (v62 == 1) {
      return 0;
    }
  }
  uint64_t v64 = *v135;
  if (*(void *)(*v135 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v65 = sub_24B59F008(a1);
    if (v66)
    {
      unint64_t v67 = v65;
      uint64_t v68 = *(void *)(v64 + 56);
      uint64_t v69 = type metadata accessor for OCObjectCentricPoseNode(0);
      uint64_t v70 = *(void *)(v69 - 8);
      sub_24B67A598(v68 + *(void *)(v70 + 72) * v67, (uint64_t)v36, type metadata accessor for OCObjectCentricPoseNode);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v36, 0, 1, v69);
      unint64_t v14 = v134;
    }
    else
    {
      uint64_t v69 = type metadata accessor for OCObjectCentricPoseNode(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v36, 1, 1, v69);
    }
    swift_bridgeObjectRelease();
    type metadata accessor for OCObjectCentricPoseNode(0);
    uint64_t v72 = *(void *)(v69 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v36, 1, v69) != 1)
    {
      sub_24B5632A8((uint64_t)v36, &qword_2697CD120);
      uint64_t v84 = v129;
      long long v85 = (void (*)(char *, char *, unint64_t))v128;
      v128(v129, v136, v14);
      uint64_t v86 = v135;
      swift_beginAccess();
      long long v87 = v130;
      v85(v130, v84, v14);
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v88 = (uint64_t)v121;
      v85(v121, v87, v14);
      v138[0] = *v86;
      uint64_t v89 = v138[0];
      *uint64_t v86 = 0x8000000000000000;
      unint64_t v80 = sub_24B59F008(v88);
      uint64_t v91 = *(void *)(v89 + 16);
      BOOL v92 = (v90 & 1) == 0;
      uint64_t v93 = v91 + v92;
      if (!__OFADD__(v91, v92))
      {
        LOBYTE(v85) = v90;
        if (*(void *)(v89 + 24) < v93)
        {
          sub_24B67AA98(v93, isUniquelyReferenced_nonNull_native, type metadata accessor for OCObjectCentricPoseNode, (uint64_t *)&unk_2697CD190, type metadata accessor for OCObjectCentricPoseNode, type metadata accessor for OCObjectCentricPoseNode);
          unint64_t v94 = sub_24B59F008(v88);
          if ((v85 & 1) != (v95 & 1))
          {
LABEL_55:
            sub_24B682FF0();
            __break(1u);
            goto LABEL_56;
          }
          unint64_t v80 = v94;
          if ((v85 & 1) == 0) {
            goto LABEL_52;
          }
          goto LABEL_43;
        }
        if (isUniquelyReferenced_nonNull_native)
        {
          if ((v90 & 1) == 0)
          {
LABEL_52:
            long long v117 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 56);
            v72 += 56;
            v117(v120, 1, 1, v69);
            __break(1u);
            goto LABEL_53;
          }
LABEL_43:
          uint64_t v107 = v120;
          sub_24B67BBDC(*(void *)(v138[0] + 56) + *(void *)(v72 + 72) * v80, v120, type metadata accessor for OCObjectCentricPoseNode);
          uint64_t v63 = 1;
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v72 + 56))(v107, 0, 1, v69);
          long long v108 = (__n128 *)(v107 + *(int *)(v69 + 36));
          __n128 v109 = v125;
          *long long v108 = v124;
          v108[1] = v109;
          __n128 v110 = v127;
          v108[2] = v126;
          v108[3] = v110;
          sub_24B67BC44(v107, 1, v138, v80, v88, &qword_2697CD120, type metadata accessor for OCObjectCentricPoseNode, type metadata accessor for OCObjectCentricPoseNode, type metadata accessor for OCObjectCentricPoseNode);
          sub_24B5632A8(v107, &qword_2697CD120);
          v52((char *)v88, v14);
          *int8x16_t v135 = v138[0];
          v52(v130, v14);
          v52(v129, v14);
LABEL_47:
          swift_endAccess();
          return v63;
        }
LABEL_51:
        sub_24B67B8B4(type metadata accessor for OCObjectCentricPoseNode, (uint64_t *)&unk_2697CD190, type metadata accessor for OCObjectCentricPoseNode, type metadata accessor for OCObjectCentricPoseNode);
        if ((v85 & 1) == 0) {
          goto LABEL_52;
        }
        goto LABEL_43;
      }
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
  }
  else
  {
    uint64_t v71 = type metadata accessor for OCObjectCentricPoseNode(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v36, 1, 1, v71);
  }
  sub_24B5632A8((uint64_t)v36, &qword_2697CD120);
  uint64_t v73 = v133;
  uint64_t isUniquelyReferenced_nonNull_native = v133 + 96;
  swift_beginAccess();
  uint64_t v75 = *(void *)(v73 + 96);
  if (!*(void *)(v75 + 16))
  {
    uint64_t v96 = type metadata accessor for VIOPoseNode(0);
    uint64_t v83 = v131;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 56))(v131, 1, 1, v96);
LABEL_35:
    sub_24B5632A8(v83, &qword_2697CD128);
    return 1;
  }
  swift_bridgeObjectRetain();
  unint64_t v76 = sub_24B59F008(v136);
  if (v77)
  {
    unint64_t v78 = v76;
    uint64_t v79 = *(void *)(v75 + 56);
    unint64_t v80 = type metadata accessor for VIOPoseNode(0);
    uint64_t v81 = *(void *)(v80 - 8);
    uint64_t v82 = v79 + *(void *)(v81 + 72) * v78;
    uint64_t v83 = v131;
    sub_24B67A598(v82, v131, type metadata accessor for VIOPoseNode);
    (*(void (**)(uint64_t, void, uint64_t, unint64_t))(v81 + 56))(v83, 0, 1, v80);
  }
  else
  {
    unint64_t v80 = type metadata accessor for VIOPoseNode(0);
    uint64_t v83 = v131;
    (*(void (**)(uint64_t, uint64_t, uint64_t, unint64_t))(*(void *)(v80 - 8) + 56))(v131, 1, 1, v80);
  }
  unint64_t v97 = v134;
  swift_bridgeObjectRelease();
  type metadata accessor for VIOPoseNode(0);
  uint64_t v72 = *(void *)(v80 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, unint64_t))(v72 + 48))(v83, 1, v80) == 1) {
    goto LABEL_35;
  }
  sub_24B5632A8(v83, &qword_2697CD128);
  long long v98 = v122;
  long long v85 = (void (*)(char *, char *, unint64_t))v128;
  v128(v122, v136, v97);
  swift_beginAccess();
  long long v99 = v123;
  v85(v123, v98, v97);
  uint64_t v69 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v88 = (uint64_t)v119;
  v85(v119, v99, v97);
  uint64_t v51 = v88;
  uint64_t v137 = *(void *)isUniquelyReferenced_nonNull_native;
  uint64_t v100 = v137;
  *(void *)uint64_t isUniquelyReferenced_nonNull_native = 0x8000000000000000;
  unint64_t v14 = sub_24B59F008(v88);
  uint64_t v102 = *(void *)(v100 + 16);
  BOOL v103 = (v101 & 1) == 0;
  uint64_t v104 = v102 + v103;
  if (__OFADD__(v102, v103)) {
    goto LABEL_50;
  }
  LOBYTE(v85) = v101;
  if (*(void *)(v100 + 24) >= v104)
  {
    if (v69)
    {
      if (v101)
      {
LABEL_46:
        uint64_t v111 = v118;
        sub_24B67BBDC(*(void *)(v137 + 56) + *(void *)(v72 + 72) * v14, v118, type metadata accessor for VIOPoseNode);
        uint64_t v63 = 1;
        (*(void (**)(uint64_t, void, uint64_t, unint64_t))(v72 + 56))(v111, 0, 1, v80);
        long long v112 = (__n128 *)(v111 + *(int *)(v80 + 28));
        __n128 v113 = v125;
        *long long v112 = v124;
        v112[1] = v113;
        __n128 v114 = v127;
        v112[2] = v126;
        v112[3] = v114;
        sub_24B67BC44(v111, 1, &v137, v14, v51, &qword_2697CD128, type metadata accessor for VIOPoseNode, type metadata accessor for VIOPoseNode, type metadata accessor for VIOPoseNode);
        sub_24B5632A8(v111, &qword_2697CD128);
        unint64_t v115 = v134;
        v52((char *)v51, v134);
        *(void *)uint64_t isUniquelyReferenced_nonNull_native = v137;
        v52(v123, v115);
        v52(v122, v115);
        goto LABEL_47;
      }
LABEL_54:
      (*(void (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v72 + 56))(v118, 1, 1, v80);
      __break(1u);
      goto LABEL_55;
    }
LABEL_53:
    sub_24B67B8B4(type metadata accessor for VIOPoseNode, (uint64_t *)&unk_2697CD1A0, type metadata accessor for VIOPoseNode, type metadata accessor for VIOPoseNode);
    if (v85) {
      goto LABEL_46;
    }
    goto LABEL_54;
  }
  sub_24B67AA98(v104, v69, type metadata accessor for VIOPoseNode, (uint64_t *)&unk_2697CD1A0, type metadata accessor for VIOPoseNode, type metadata accessor for VIOPoseNode);
  unint64_t v105 = sub_24B59F008(v88);
  if ((v85 & 1) == (v106 & 1))
  {
    unint64_t v14 = v105;
    if ((v85 & 1) == 0) {
      goto LABEL_54;
    }
    goto LABEL_46;
  }
LABEL_56:
  uint64_t result = sub_24B682FF0();
  __break(1u);
  return result;
}

uint64_t sub_24B67621C()
{
  swift_beginAccess();
  *(void *)(v0 + 88) = MEMORY[0x263F8EE80];
  return swift_bridgeObjectRelease();
}

uint64_t sub_24B676260()
{
  swift_beginAccess();
  *(void *)(v0 + 96) = MEMORY[0x263F8EE80];
  return swift_bridgeObjectRelease();
}

uint64_t sub_24B6762A4(uint64_t a1, uint64_t (*a2)(unint64_t *, __n128, __n128, __n128, __n128, __n128, __n128, __n128, __n128), float32x4_t a3, float32x4_t a4, float32x4_t a5, float32x4_t a6, uint64_t a7, uint64_t a8)
{
  id v148 = a2;
  float32x4_t v146 = a6;
  float32x4_t v145 = a5;
  float32x4_t v144 = a4;
  float32x4_t v143 = a3;
  uint64_t v147 = a1;
  uint64_t v132 = sub_24B6824D0();
  uint64_t v131 = *(void *)(v132 - 8);
  MEMORY[0x270FA5388](v132);
  uint64_t v133 = (char *)&v123 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = sub_24B6825C0();
  uint64_t v129 = *(void *)(v130 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v130);
  __n128 v125 = (char *)&v123 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  long long v128 = (char *)&v123 - v14;
  MEMORY[0x270FA5388](v13);
  v141.i64[0] = (uint64_t)&v123 - v15;
  v142.i64[0] = type metadata accessor for VIOPoseNode(0);
  v139.i64[0] = *(void *)(v142.i64[0] - 8);
  MEMORY[0x270FA5388](v142.i64[0]);
  uint64_t v17 = (char *)&v123 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_24B562F04(&qword_2697CD130);
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  uint64_t v21 = (char *)&v123 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v123 - v22;
  uint64_t v134 = sub_24B682680();
  uint64_t v135 = *(void *)(v134 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v134);
  __n128 v127 = (char *)&v123 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v136 = (char *)&v123 - v26;
  uint64_t v27 = (int *)type metadata accessor for OCObjectCentricPoseNode(0);
  int64_t v138 = *((void *)v27 - 1);
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (char *)&v123 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_24B562F04(&qword_2697CD138);
  uint64_t v31 = MEMORY[0x270FA5388](v30 - 8);
  uint64_t v33 = (char *)&v123 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v35 = (char *)&v123 - v34;
  *(void *)a8 = 0xBF8000007F800000;
  *(void *)(a8 + 8) = 0xBFF0000000000000;
  *(void *)(a8 + 16) = 0xBF8000007F800000;
  *(void *)(a8 + 24) = 0xBFF0000000000000;
  *(void *)(a8 + 32) = 0xBF8000007F800000;
  *(void *)(a8 + 40) = 0xBFF0000000000000;
  *(void *)(a8 + 48) = 0xBF8000007F800000;
  *(void *)(a8 + 56) = 0xBFF0000000000000;
  sub_24B56CF38(v147, (uint64_t)&v157, &qword_2697CC9A0);
  if ((v158 & 1) == 0 && (v8[5].i8[0] & 1) == 0)
  {
    float32x4_t v142 = v8[1];
    float32x4_t v141 = v8[2];
    float32x4_t v140 = v8[3];
    float32x4_t v139 = v8[4];
    simd_float4x4 v159 = __invert_f4(v157);
    float32x4_t v86 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v142, v159.columns[0].f32[0]), v141, *(float32x2_t *)v159.columns[0].f32, 1), v140, (float32x4_t)v159.columns[0], 2), v139, (float32x4_t)v159.columns[0], 3);
    v159.columns[0] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v142, v159.columns[1].f32[0]), v141, *(float32x2_t *)v159.columns[1].f32, 1), v140, (float32x4_t)v159.columns[1], 2), v139, (float32x4_t)v159.columns[1], 3);
    v159.columns[1] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v142, v159.columns[2].f32[0]), v141, *(float32x2_t *)v159.columns[2].f32, 1), v140, (float32x4_t)v159.columns[2], 2), v139, (float32x4_t)v159.columns[2], 3);
    v159.columns[2] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v142, v159.columns[3].f32[0]), v141, *(float32x2_t *)v159.columns[3].f32, 1), v140, (float32x4_t)v159.columns[3], 2), v139, (float32x4_t)v159.columns[3], 3);
    float32x4_t v143 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v86, v143.f32[0]), (float32x4_t)v159.columns[0], *(float32x2_t *)v143.f32, 1), (float32x4_t)v159.columns[1], v143, 2), (float32x4_t)v159.columns[2], v143, 3);
    float32x4_t v144 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v86, v144.f32[0]), (float32x4_t)v159.columns[0], *(float32x2_t *)v144.f32, 1), (float32x4_t)v159.columns[1], v144, 2), (float32x4_t)v159.columns[2], v144, 3);
    float32x4_t v145 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v86, v145.f32[0]), (float32x4_t)v159.columns[0], *(float32x2_t *)v145.f32, 1), (float32x4_t)v159.columns[1], v145, 2), (float32x4_t)v159.columns[2], v145, 3);
    float32x4_t v146 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v86, v146.f32[0]), (float32x4_t)v159.columns[0], *(float32x2_t *)v146.f32, 1), (float32x4_t)v159.columns[1], v146, 2), (float32x4_t)v159.columns[2], v146, 3);
    swift_beginAccess();
    uint64_t v87 = v8[5].i64[1];
    uint64_t v88 = *(void *)(v87 + 64);
    uint64_t v135 = v87 + 64;
    uint64_t v89 = 1 << *(unsigned char *)(v87 + 32);
    uint64_t v90 = -1;
    if (v89 < 64) {
      uint64_t v90 = ~(-1 << v89);
    }
    unint64_t v91 = v90 & v88;
    uint64_t v136 = (char *)((unint64_t)(v89 + 63) >> 6);
    uint64_t v134 = (uint64_t)(v136 - 1);
    uint64_t v137 = v87;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v147 = 0;
    while (!v91)
    {
      uint64_t v100 = v147 + 1;
      if (__OFADD__(v147, 1))
      {
LABEL_91:
        __break(1u);
        goto LABEL_92;
      }
      if (v100 < (uint64_t)v136)
      {
        unint64_t v101 = *(void *)(v135 + 8 * v100);
        if (v101) {
          goto LABEL_55;
        }
        uint64_t v102 = v147 + 2;
        ++v147;
        if (v100 + 1 < (uint64_t)v136)
        {
          unint64_t v101 = *(void *)(v135 + 8 * v102);
          if (v101) {
            goto LABEL_58;
          }
          uint64_t v147 = v100 + 1;
          if (v100 + 2 < (uint64_t)v136)
          {
            unint64_t v101 = *(void *)(v135 + 8 * (v100 + 2));
            if (v101)
            {
              v100 += 2;
LABEL_55:
              unint64_t v91 = (v101 - 1) & v101;
              uint64_t v94 = __clz(__rbit64(v101)) + (v100 << 6);
              uint64_t v147 = v100;
LABEL_51:
              uint64_t v95 = v137;
              uint64_t v96 = *(void *)(v137 + 48);
              uint64_t v97 = sub_24B682410();
              (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v97 - 8) + 16))(v33, v96 + *(void *)(*(void *)(v97 - 8) + 72) * v94, v97);
              uint64_t v98 = *(void *)(v95 + 56) + *(void *)(v138 + 72) * v94;
              uint64_t v99 = sub_24B562F04(&qword_2697CD148);
              sub_24B67A598(v98, (uint64_t)&v33[*(int *)(v99 + 48)], type metadata accessor for OCObjectCentricPoseNode);
              (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v99 - 8) + 56))(v33, 0, 1, v99);
              goto LABEL_70;
            }
            uint64_t v102 = v100 + 3;
            uint64_t v147 = v100 + 2;
            if (v100 + 3 < (uint64_t)v136)
            {
              unint64_t v101 = *(void *)(v135 + 8 * v102);
              if (v101)
              {
LABEL_58:
                uint64_t v100 = v102;
                goto LABEL_55;
              }
              while (1)
              {
                uint64_t v100 = v102 + 1;
                if (__OFADD__(v102, 1)) {
                  goto LABEL_93;
                }
                if (v100 >= (uint64_t)v136) {
                  break;
                }
                unint64_t v101 = *(void *)(v135 + 8 * v100);
                ++v102;
                if (v101) {
                  goto LABEL_55;
                }
              }
              uint64_t v147 = v134;
            }
          }
        }
      }
      uint64_t v103 = sub_24B562F04(&qword_2697CD148);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v103 - 8) + 56))(v33, 1, 1, v103);
      unint64_t v91 = 0;
LABEL_70:
      sub_24B56CF38((uint64_t)v33, (uint64_t)v35, &qword_2697CD138);
      uint64_t v104 = sub_24B562F04(&qword_2697CD148);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v104 - 8) + 48))(v35, 1, v104) == 1)
      {
        swift_release();
        return 1;
      }
      sub_24B67BBDC((uint64_t)&v35[*(int *)(v104 + 48)], (uint64_t)v29, type metadata accessor for OCObjectCentricPoseNode);
      uint64_t v105 = v27[9];
      char v106 = (float32x2_t *)&v29[v27[8]];
      float32x4_t v107 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v142, COERCE_FLOAT(*(_OWORD *)v106->f32)), v141, *v106, 1), v140, *(float32x4_t *)v106->f32, 2), v139, *(float32x4_t *)v106->f32, 3);
      float32x4_t v108 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v142, COERCE_FLOAT(*(_OWORD *)v106[2].f32)), v141, v106[2], 1), v140, *(float32x4_t *)v106[2].f32, 2), v139, *(float32x4_t *)v106[2].f32, 3);
      float32x4_t v109 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v142, COERCE_FLOAT(*(_OWORD *)v106[4].f32)), v141, v106[4], 1), v140, *(float32x4_t *)v106[4].f32, 2), v139, *(float32x4_t *)v106[4].f32, 3);
      float32x4_t v110 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v142, COERCE_FLOAT(*(_OWORD *)v106[6].f32)), v141, v106[6], 1), v140, *(float32x4_t *)v106[6].f32, 2), v139, *(float32x4_t *)v106[6].f32, 3);
      float32x4_t v111 = *(float32x4_t *)&v29[v105 + 48];
      __n128 v112 = (__n128)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v107, COERCE_FLOAT(*(_OWORD *)&v29[v105])), v108, *(float32x2_t *)&v29[v105], 1), v109, *(float32x4_t *)&v29[v105], 2), v110, *(float32x4_t *)&v29[v105], 3);
      __n128 v113 = (__n128)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v107, COERCE_FLOAT(*(_OWORD *)&v29[v105 + 16])), v108, *(float32x2_t *)&v29[v105 + 16], 1), v109, *(float32x4_t *)&v29[v105 + 16], 2), v110, *(float32x4_t *)&v29[v105 + 16], 3);
      __n128 v114 = (__n128)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v107, COERCE_FLOAT(*(_OWORD *)&v29[v105 + 32])), v108, *(float32x2_t *)&v29[v105 + 32], 1), v109, *(float32x4_t *)&v29[v105 + 32], 2), v110, *(float32x4_t *)&v29[v105 + 32], 3);
      LODWORD(v149) = 0;
      BYTE4(v149) = 1;
      float v150 = 0.0;
      char v151 = 1;
      float v152 = 0.0;
      char v153 = 1;
      float v154 = 0.0;
      char v155 = 1;
      if (v148(&v149, (__n128)v143, (__n128)v144, (__n128)v145, (__n128)v146, v112, v113, v114, (__n128)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v107, v111.f32[0]), v108, *(float32x2_t *)v111.f32, 1), v109, v111, 2), v110, v111, 3)))
      {
        sub_24B67BF0C((uint64_t)v29, type metadata accessor for OCObjectCentricPoseNode);
        swift_release();
        uint64_t v121 = sub_24B682410();
        (*(void (**)(char *, uint64_t))(*(void *)(v121 - 8) + 8))(v35, v121);
        return 0;
      }
      uint64_t v115 = *(void *)&v29[v27[5]];
      if ((v149 & 0x100000000) == 0 && (v151 & 1) == 0)
      {
        float v116 = v150;
        int v117 = v149;
        if (*(float *)&v149 < *(float *)a8)
        {
          *(_DWORD *)a8 = v149;
          *(float *)(a8 + 4) = v116;
          *(void *)(a8 + 8) = v115;
        }
        if (v116 < *(float *)(a8 + 16))
        {
          *(float *)(a8 + 16) = v116;
          *(_DWORD *)(a8 + 20) = v117;
          *(void *)(a8 + 24) = v115;
        }
      }
      if (((v155 | v153) & 1) == 0)
      {
        float v118 = v154;
        float v119 = sub_24B5F8C18(v152, -1.0, 1.0);
        float v120 = acosf(v119);
        if (*(float *)(a8 + 32) < v120)
        {
          *(float *)(a8 + 32) = v120;
          *(float *)(a8 + 36) = v118;
          *(void *)(a8 + 40) = v115;
        }
        if (v118 < *(float *)(a8 + 48))
        {
          *(float *)(a8 + 48) = v118;
          *(float *)(a8 + 52) = v120;
          *(void *)(a8 + 56) = v115;
        }
      }
      sub_24B67BF0C((uint64_t)v29, type metadata accessor for OCObjectCentricPoseNode);
      uint64_t v92 = sub_24B682410();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v92 - 8) + 8))(v35, v92);
    }
    unint64_t v93 = __clz(__rbit64(v91));
    v91 &= v91 - 1;
    uint64_t v94 = v93 | (v147 << 6);
    goto LABEL_51;
  }
  sub_24B682660();
  swift_beginAccess();
  __n128 v126 = v8;
  uint64_t v36 = v8[6].i64[0];
  uint64_t v37 = *(void *)(v36 + 64);
  uint64_t v137 = v36 + 64;
  uint64_t v38 = 1 << *(unsigned char *)(v36 + 32);
  uint64_t v39 = -1;
  if (v38 < 64) {
    uint64_t v39 = ~(-1 << v38);
  }
  unint64_t v40 = v39 & v37;
  int64_t v138 = (unint64_t)(v38 + 63) >> 6;
  uint64_t v124 = v138 - 1;
  v140.i64[0] = v36;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v147 = 0;
  uint64_t v42 = v141.i64[0];
  while (1)
  {
    if (v40)
    {
      unint64_t v44 = __clz(__rbit64(v40));
      v40 &= v40 - 1;
      uint64_t v45 = v44 | (v147 << 6);
LABEL_9:
      uint64_t v46 = v140.i64[0];
      uint64_t v47 = *(void *)(v140.i64[0] + 48);
      uint64_t v48 = sub_24B682410();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v48 - 8) + 16))(v21, v47 + *(void *)(*(void *)(v48 - 8) + 72) * v45, v48);
      uint64_t v49 = *(void *)(v46 + 56) + *(void *)(v139.i64[0] + 72) * v45;
      uint64_t v50 = sub_24B562F04(&qword_2697CD140);
      sub_24B67A598(v49, (uint64_t)&v21[*(int *)(v50 + 48)], type metadata accessor for VIOPoseNode);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v21, 0, 1, v50);
      uint64_t v42 = v141.i64[0];
      goto LABEL_28;
    }
    uint64_t v51 = v147 + 1;
    if (__OFADD__(v147, 1))
    {
      __break(1u);
      goto LABEL_91;
    }
    if (v51 < v138)
    {
      unint64_t v52 = *(void *)(v137 + 8 * v51);
      if (v52) {
        goto LABEL_13;
      }
      uint64_t v53 = v147 + 2;
      ++v147;
      if (v51 + 1 < v138)
      {
        unint64_t v52 = *(void *)(v137 + 8 * v53);
        if (v52) {
          goto LABEL_16;
        }
        uint64_t v147 = v51 + 1;
        if (v51 + 2 < v138)
        {
          unint64_t v52 = *(void *)(v137 + 8 * (v51 + 2));
          if (v52)
          {
            v51 += 2;
            goto LABEL_13;
          }
          uint64_t v53 = v51 + 3;
          uint64_t v147 = v51 + 2;
          if (v51 + 3 < v138) {
            break;
          }
        }
      }
    }
LABEL_27:
    uint64_t v54 = sub_24B562F04(&qword_2697CD140);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v21, 1, 1, v54);
    unint64_t v40 = 0;
LABEL_28:
    sub_24B56CF38((uint64_t)v21, (uint64_t)v23, &qword_2697CD130);
    uint64_t v55 = sub_24B562F04(&qword_2697CD140);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v55 - 8) + 48))(v23, 1, v55) == 1)
    {
      swift_release();
      uint64_t v63 = v126;
      if (v126->i8[OBJC_IVAR____TtC6CoreOC24OCObjectCentricPoseGraph_shouldLogClosenessTiming] == 1)
      {
        id v148 = (uint64_t (*)(unint64_t *, __n128, __n128, __n128, __n128, __n128, __n128, __n128, __n128))OBJC_IVAR____TtC6CoreOC24OCObjectCentricPoseGraph_shouldLogClosenessTiming;
        uint64_t v64 = v127;
        sub_24B682660();
        sub_24B682670();
        unint64_t v65 = *(void (**)(char *, uint64_t))(v135 + 8);
        v135 += 8;
        uint64_t v147 = (uint64_t)v65;
        v65(v64, v134);
        uint64_t v66 = sub_24B57CB70();
        uint64_t v67 = v131;
        uint64_t v68 = v42;
        uint64_t v69 = v132;
        (*(void (**)(char *, uint64_t, uint64_t))(v131 + 16))(v133, v66, v132);
        uint64_t v70 = v129;
        uint64_t v71 = *(void (**)(char *, uint64_t, uint64_t))(v129 + 16);
        uint64_t v72 = v128;
        uint64_t v73 = v130;
        v71(v128, v68, v130);
        swift_retain_n();
        id v74 = sub_24B6824B0();
        os_log_type_t v75 = sub_24B682B00();
        unsigned __int32 v76 = v75;
        if (os_log_type_enabled(v74, v75))
        {
          uint64_t v77 = swift_slowAlloc();
          v146.i64[0] = swift_slowAlloc();
          unint64_t v149 = v146.i64[0];
          *(_DWORD *)uint64_t v77 = 136381187;
          v145.i32[0] = v76;
          uint64_t v156 = sub_24B5627B8(0xD00000000000003DLL, 0x800000024B691B40, (uint64_t *)&v149);
          v144.i64[0] = (uint64_t)v74;
          sub_24B682CD0();
          *(_WORD *)(v77 + 12) = 2080;
          v71(v125, (uint64_t)v72, v73);
          uint64_t v78 = sub_24B682820();
          uint64_t v156 = sub_24B5627B8(v78, v79, (uint64_t *)&v149);
          sub_24B682CD0();
          swift_bridgeObjectRelease();
          unint64_t v80 = *(void (**)(char *, uint64_t))(v70 + 8);
          v80(v72, v73);
          *(_WORD *)(v77 + 22) = 2080;
          uint64_t v156 = *(void *)(v63[6].i64[0] + 16);
          uint64_t v81 = sub_24B682F90();
          uint64_t v156 = sub_24B5627B8(v81, v82, (uint64_t *)&v149);
          sub_24B682CD0();
          swift_release_n();
          swift_bridgeObjectRelease();
          uint64_t v83 = (void *)v144.i64[0];
          _os_log_impl(&dword_24B55E000, (os_log_t)v144.i64[0], (os_log_type_t)v145.i8[0], "OCPoseGraph.%{private}s: Pose closeness check took\n%s with %s poses.", (uint8_t *)v77, 0x20u);
          unint64_t v84 = v146.i64[0];
          swift_arrayDestroy();
          MEMORY[0x24C5D6C00](v84, -1, -1);
          MEMORY[0x24C5D6C00](v77, -1, -1);

          (*(void (**)(char *, uint64_t))(v131 + 8))(v133, v132);
          v80((char *)v141.i64[0], v73);
        }
        else
        {
          swift_release_n();

          int v122 = *(void (**)(char *, uint64_t))(v70 + 8);
          v122(v72, v73);
          (*(void (**)(char *, uint64_t))(v67 + 8))(v133, v69);
          v122((char *)v141.i64[0], v73);
        }
        ((void (*)(char *, uint64_t))v147)(v136, v134);
        *((unsigned char *)v148 + (void)v63) = 0;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v135 + 8))(v136, v134);
      }
      return 1;
    }
    sub_24B67BBDC((uint64_t)&v23[*(int *)(v55 + 48)], (uint64_t)v17, type metadata accessor for VIOPoseNode);
    LODWORD(v149) = 0;
    BYTE4(v149) = 1;
    float v150 = 0.0;
    char v151 = 1;
    float v152 = 0.0;
    char v153 = 1;
    float v154 = 0.0;
    char v155 = 1;
    uint64_t v56 = v142.i64[0];
    if (v148(&v149, (__n128)v143, (__n128)v144, (__n128)v145, (__n128)v146, *(__n128 *)&v17[*(int *)(v142.i64[0] + 28)], *(__n128 *)&v17[*(int *)(v142.i64[0] + 28) + 16], *(__n128 *)&v17[*(int *)(v142.i64[0] + 28) + 32], *(__n128 *)&v17[*(int *)(v142.i64[0] + 28) + 48]))
    {
      sub_24B67BF0C((uint64_t)v17, type metadata accessor for VIOPoseNode);
      swift_release();
      (*(void (**)(char *, uint64_t))(v135 + 8))(v136, v134);
      uint64_t v85 = sub_24B682410();
      (*(void (**)(char *, uint64_t))(*(void *)(v85 - 8) + 8))(v23, v85);
      return 0;
    }
    uint64_t v57 = *(void *)&v17[*(int *)(v56 + 20)];
    if ((v149 & 0x100000000) == 0 && (v151 & 1) == 0)
    {
      float v58 = v150;
      int v59 = v149;
      if (*(float *)&v149 < *(float *)a8)
      {
        *(_DWORD *)a8 = v149;
        *(float *)(a8 + 4) = v58;
        *(void *)(a8 + 8) = v57;
      }
      if (v58 < *(float *)(a8 + 16))
      {
        *(float *)(a8 + 16) = v58;
        *(_DWORD *)(a8 + 20) = v59;
        *(void *)(a8 + 24) = v57;
      }
    }
    if (((v155 | v153) & 1) == 0)
    {
      float v60 = v154;
      float v61 = sub_24B5F8C18(v152, -1.0, 1.0);
      float v62 = acosf(v61);
      if (*(float *)(a8 + 32) < v62)
      {
        *(float *)(a8 + 32) = v62;
        *(float *)(a8 + 36) = v60;
        *(void *)(a8 + 40) = v57;
      }
      if (v60 < *(float *)(a8 + 48))
      {
        *(float *)(a8 + 48) = v60;
        *(float *)(a8 + 52) = v62;
        *(void *)(a8 + 56) = v57;
      }
    }
    sub_24B67BF0C((uint64_t)v17, type metadata accessor for VIOPoseNode);
    uint64_t v43 = sub_24B682410();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v43 - 8) + 8))(v23, v43);
  }
  unint64_t v52 = *(void *)(v137 + 8 * v53);
  if (v52)
  {
LABEL_16:
    uint64_t v51 = v53;
LABEL_13:
    unint64_t v40 = (v52 - 1) & v52;
    uint64_t v45 = __clz(__rbit64(v52)) + (v51 << 6);
    uint64_t v147 = v51;
    goto LABEL_9;
  }
  while (1)
  {
    uint64_t v51 = v53 + 1;
    if (__OFADD__(v53, 1)) {
      break;
    }
    if (v51 >= v138)
    {
      uint64_t v147 = v124;
      goto LABEL_27;
    }
    unint64_t v52 = *(void *)(v137 + 8 * v51);
    ++v53;
    if (v52) {
      goto LABEL_13;
    }
  }
LABEL_92:
  __break(1u);
LABEL_93:
  __break(1u);
  return result;
}

uint64_t sub_24B677798()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC6CoreOC24OCObjectCentricPoseGraph_vioClosenessCheckLogTime;
  uint64_t v2 = sub_24B6823B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

float CaptureFactors.videoExposureTime.getter()
{
  return *(float *)v0;
}

uint64_t CaptureFactors.videoIspDGain.getter()
{
  return *(void *)(v0 + 8);
}

float CaptureFactors.videoIMUMaxAngularSpeed.getter()
{
  return *(float *)(v0 + 16);
}

float CaptureFactors.photoExposureTime.getter()
{
  return *(float *)(v0 + 20);
}

uint64_t CaptureFactors.photoISO.getter()
{
  return *(void *)(v0 + 24);
}

float CaptureFactors.photoIMUMaxAngularSpeed.getter()
{
  return *(float *)(v0 + 32);
}

float CaptureFactors.photoBlurScore.getter()
{
  return *(float *)(v0 + 36);
}

float CaptureFactors.photoAcceptanceRate.getter()
{
  return *(float *)(v0 + 40);
}

uint64_t CaptureFactors.preCaptureCheckPassed.getter()
{
  return *(unsigned __int8 *)(v0 + 44);
}

uint64_t sub_24B677890@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 44);
  return result;
}

uint64_t sub_24B67789C(char *a1, uint64_t a2)
{
  char v2 = *a1;
  char v3 = *(unsigned char *)(a2 + 44);
  *(unsigned char *)(a2 + 44) = v2;
  return sub_24B677A34(v3);
}

uint64_t sub_24B6778CC(char a1)
{
  uint64_t v3 = sub_24B6824D0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t result = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v6) = *(unsigned char *)(v1 + 44);
  *(unsigned char *)(v1 + 44) = a1;
  if (v6 & 1) == 0 && (a1)
  {
    uint64_t v8 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v8, v3);
    uint64_t v9 = sub_24B6824B0();
    os_log_type_t v10 = sub_24B682B30();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_24B55E000, v9, v10, "Capture Manager : AutoCapture ON.", v11, 2u);
      MEMORY[0x24C5D6C00](v11, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

uint64_t sub_24B677A34(char a1)
{
  uint64_t v3 = sub_24B6824D0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t result = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0 && *(unsigned char *)(v1 + 44) == 1)
  {
    uint64_t v8 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v8, v3);
    uint64_t v9 = sub_24B6824B0();
    os_log_type_t v10 = sub_24B682B30();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_24B55E000, v9, v10, "Capture Manager : AutoCapture ON.", v11, 2u);
      MEMORY[0x24C5D6C00](v11, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

uint64_t CaptureFactors.objectOutOfFOV.getter()
{
  return *(unsigned __int8 *)(v0 + 45);
}

uint64_t sub_24B677BA4@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 45);
  return result;
}

uint64_t sub_24B677BB0(char *a1, uint64_t a2)
{
  char v2 = *a1;
  char v3 = *(unsigned char *)(a2 + 45);
  *(unsigned char *)(a2 + 45) = v2;
  return sub_24B677D48(v3);
}

uint64_t sub_24B677BE0(char a1)
{
  uint64_t v3 = sub_24B6824D0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t result = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v6) = *(unsigned char *)(v1 + 45);
  *(unsigned char *)(v1 + 45) = a1;
  if (v6 & 1) == 0 && (a1)
  {
    uint64_t v8 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v8, v3);
    uint64_t v9 = sub_24B6824B0();
    os_log_type_t v10 = sub_24B682B30();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_24B55E000, v9, v10, "Capture Manager : AutoCapture OFF: Object out of FOV!", v11, 2u);
      MEMORY[0x24C5D6C00](v11, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

uint64_t sub_24B677D48(char a1)
{
  uint64_t v3 = sub_24B6824D0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t result = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0 && *(unsigned char *)(v1 + 45) == 1)
  {
    uint64_t v8 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v8, v3);
    uint64_t v9 = sub_24B6824B0();
    os_log_type_t v10 = sub_24B682B30();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_24B55E000, v9, v10, "Capture Manager : AutoCapture OFF: Object out of FOV!", v11, 2u);
      MEMORY[0x24C5D6C00](v11, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

uint64_t CaptureFactors.isTooDark.getter()
{
  return *(unsigned __int8 *)(v0 + 46);
}

uint64_t sub_24B677EB8@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 46);
  return result;
}

uint64_t sub_24B677EC4(char *a1, uint64_t a2)
{
  char v2 = *a1;
  char v3 = *(unsigned char *)(a2 + 46);
  *(unsigned char *)(a2 + 46) = v2;
  return sub_24B67805C(v3);
}

uint64_t sub_24B677EF4(char a1)
{
  uint64_t v3 = sub_24B6824D0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t result = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v6) = *(unsigned char *)(v1 + 46);
  *(unsigned char *)(v1 + 46) = a1;
  if (v6 & 1) == 0 && (a1)
  {
    uint64_t v8 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v8, v3);
    uint64_t v9 = sub_24B6824B0();
    os_log_type_t v10 = sub_24B682B30();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_24B55E000, v9, v10, "Capture Manager : AutoCapture OFF: Too dark!", v11, 2u);
      MEMORY[0x24C5D6C00](v11, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

uint64_t sub_24B67805C(char a1)
{
  uint64_t v3 = sub_24B6824D0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t result = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0 && *(unsigned char *)(v1 + 46) == 1)
  {
    uint64_t v8 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v8, v3);
    uint64_t v9 = sub_24B6824B0();
    os_log_type_t v10 = sub_24B682B30();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_24B55E000, v9, v10, "Capture Manager : AutoCapture OFF: Too dark!", v11, 2u);
      MEMORY[0x24C5D6C00](v11, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

uint64_t CaptureFactors.geometryPassed.getter()
{
  return *(unsigned __int8 *)(v0 + 47);
}

uint64_t sub_24B6781CC@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 47);
  return result;
}

uint64_t sub_24B6781D8(char *a1, uint64_t a2)
{
  char v2 = *a1;
  char v3 = *(unsigned char *)(a2 + 47);
  *(unsigned char *)(a2 + 47) = v2;
  return sub_24B678374(v3);
}

uint64_t sub_24B678208(char a1)
{
  uint64_t v3 = sub_24B6824D0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t result = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v6) = *(unsigned __int8 *)(v1 + 47);
  *(unsigned char *)(v1 + 47) = a1;
  if (v6 == 1 && (a1 & 1) == 0)
  {
    uint64_t v8 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v8, v3);
    uint64_t v9 = sub_24B6824B0();
    os_log_type_t v10 = sub_24B682B30();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_24B55E000, v9, v10, "Capture Manager : AutoCapture OFF: Pose graph proximity check failed!", v11, 2u);
      MEMORY[0x24C5D6C00](v11, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

uint64_t sub_24B678374(char a1)
{
  uint64_t v3 = sub_24B6824D0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t result = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0 && (*(unsigned char *)(v1 + 47) & 1) == 0)
  {
    uint64_t v8 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v8, v3);
    uint64_t v9 = sub_24B6824B0();
    os_log_type_t v10 = sub_24B682B30();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_24B55E000, v9, v10, "Capture Manager : AutoCapture OFF: Pose graph proximity check failed!", v11, 2u);
      MEMORY[0x24C5D6C00](v11, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

uint64_t CaptureFactors.cameraStatusPassed.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t sub_24B6784E0@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 48);
  return result;
}

uint64_t sub_24B6784EC(char *a1, uint64_t a2)
{
  char v2 = *a1;
  char v3 = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a2 + 48) = v2;
  return sub_24B678688(v3);
}

uint64_t sub_24B67851C(char a1)
{
  uint64_t v3 = sub_24B6824D0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t result = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v6) = *(unsigned __int8 *)(v1 + 48);
  *(unsigned char *)(v1 + 48) = a1;
  if (v6 == 1 && (a1 & 1) == 0)
  {
    uint64_t v8 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v8, v3);
    uint64_t v9 = sub_24B6824B0();
    os_log_type_t v10 = sub_24B682B30();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_24B55E000, v9, v10, "Capture Manager : AutoCapture OFF: Camera not in good status!", v11, 2u);
      MEMORY[0x24C5D6C00](v11, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

uint64_t sub_24B678688(char a1)
{
  uint64_t v3 = sub_24B6824D0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t result = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0 && (*(unsigned char *)(v1 + 48) & 1) == 0)
  {
    uint64_t v8 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v8, v3);
    uint64_t v9 = sub_24B6824B0();
    os_log_type_t v10 = sub_24B682B30();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_24B55E000, v9, v10, "Capture Manager : AutoCapture OFF: Camera not in good status!", v11, 2u);
      MEMORY[0x24C5D6C00](v11, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

uint64_t CaptureFactors.imuMotionBlurPreCaptureCheckPassed.getter()
{
  return *(unsigned __int8 *)(v0 + 49);
}

uint64_t sub_24B6787F4@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 49);
  return result;
}

uint64_t sub_24B678800(char *a1, uint64_t a2)
{
  char v2 = *a1;
  char v3 = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a2 + 49) = v2;
  return sub_24B67899C(v3);
}

uint64_t sub_24B678830(char a1)
{
  uint64_t v3 = sub_24B6824D0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t result = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v6) = *(unsigned __int8 *)(v1 + 49);
  *(unsigned char *)(v1 + 49) = a1;
  if (v6 == 1 && (a1 & 1) == 0)
  {
    uint64_t v8 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v8, v3);
    uint64_t v9 = sub_24B6824B0();
    os_log_type_t v10 = sub_24B682B30();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_24B55E000, v9, v10, "Capture Manager : AutoCapture OFF: IMU detected fast motion!", v11, 2u);
      MEMORY[0x24C5D6C00](v11, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

uint64_t sub_24B67899C(char a1)
{
  uint64_t v3 = sub_24B6824D0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t result = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0 && (*(unsigned char *)(v1 + 49) & 1) == 0)
  {
    uint64_t v8 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v8, v3);
    uint64_t v9 = sub_24B6824B0();
    os_log_type_t v10 = sub_24B682B30();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_24B55E000, v9, v10, "Capture Manager : AutoCapture OFF: IMU detected fast motion!", v11, 2u);
      MEMORY[0x24C5D6C00](v11, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

uint64_t CaptureFactors.postCaptureCheckPassed.getter()
{
  return *(unsigned __int8 *)(v0 + 50);
}

uint64_t sub_24B678B08@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 50);
  return result;
}

uint64_t sub_24B678B14(unsigned char *a1, uint64_t a2)
{
  *(unsigned char *)(a2 + 50) = *a1;
  return sub_24B678CA0();
}

uint64_t sub_24B678B40(char a1)
{
  uint64_t v3 = sub_24B6824D0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t result = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(v1 + 50) = a1;
  if (a1)
  {
    uint64_t v8 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v8, v3);
    uint64_t v9 = sub_24B6824B0();
    os_log_type_t v10 = sub_24B682B30();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_24B55E000, v9, v10, "Capture Manager : AutoCapture-Post accepted.", v11, 2u);
      MEMORY[0x24C5D6C00](v11, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

uint64_t sub_24B678CA0()
{
  uint64_t v1 = sub_24B6824D0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t result = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v0 + 50) == 1)
  {
    uint64_t v6 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v6, v1);
    uint64_t v7 = sub_24B6824B0();
    os_log_type_t v8 = sub_24B682B30();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_24B55E000, v7, v8, "Capture Manager : AutoCapture-Post accepted.", v9, 2u);
      MEMORY[0x24C5D6C00](v9, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  return result;
}

uint64_t CaptureFactors.imuMotionBlurPostCaptureCheckPassed.getter()
{
  return *(unsigned __int8 *)(v0 + 51);
}

uint64_t CaptureFactors.focusPixelBlurScorePostCaptureCheckPassed.getter()
{
  return *(unsigned __int8 *)(v0 + 52);
}

uint64_t sub_24B678E10@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 52);
  return result;
}

uint64_t sub_24B678E1C(unsigned char *a1, uint64_t a2)
{
  *(unsigned char *)(a2 + 52) = *a1;
  return sub_24B678FA8();
}

uint64_t sub_24B678E48(char a1)
{
  uint64_t v3 = sub_24B6824D0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t result = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(v1 + 52) = a1;
  if ((a1 & 1) == 0)
  {
    uint64_t v8 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v8, v3);
    uint64_t v9 = sub_24B6824B0();
    os_log_type_t v10 = sub_24B682B30();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_24B55E000, v9, v10, "Capture Manager : AutoCapture-Post rejected: Blur score above threshold!", v11, 2u);
      MEMORY[0x24C5D6C00](v11, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

uint64_t sub_24B678FA8()
{
  uint64_t v1 = sub_24B6824D0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t result = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(v0 + 52) & 1) == 0)
  {
    uint64_t v6 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v6, v1);
    uint64_t v7 = sub_24B6824B0();
    os_log_type_t v8 = sub_24B682B30();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_24B55E000, v7, v8, "Capture Manager : AutoCapture-Post rejected: Blur score above threshold!", v9, 2u);
      MEMORY[0x24C5D6C00](v9, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  return result;
}

Swift::String __swiftcall CaptureFactors.preCaptureFactorsDescription()()
{
  float v1 = *(float *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  float v3 = *(float *)(v0 + 16);
  uint64_t v4 = MEMORY[0x263F8D5C8];
  if (*(float *)v0 > 0.0)
  {
    sub_24B562F04((uint64_t *)&unk_2697CD150);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_24B684E60;
    *(void *)(v5 + 56) = v4;
    *(void *)(v5 + 64) = MEMORY[0x263F8D648];
    *(float *)(v5 + 32) = v1;
    sub_24B6827F0();
    sub_24B682890();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_24B682890();
    swift_bridgeObjectRelease();
    sub_24B682890();
    swift_bridgeObjectRelease();
  }
  if (v2 >= 1)
  {
    sub_24B562F04((uint64_t *)&unk_2697CD150);
    uint64_t v6 = swift_allocObject();
    uint64_t v7 = MEMORY[0x263F8D6C8];
    *(_OWORD *)(v6 + 16) = xmmword_24B684E60;
    uint64_t v8 = MEMORY[0x263F8D750];
    *(void *)(v6 + 56) = v7;
    *(void *)(v6 + 64) = v8;
    *(void *)(v6 + 32) = v2;
    sub_24B6827F0();
    sub_24B682890();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_24B682890();
    swift_bridgeObjectRelease();
    sub_24B682890();
    swift_bridgeObjectRelease();
  }
  if (v3 > 0.0)
  {
    sub_24B562F04((uint64_t *)&unk_2697CD150);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_24B684E60;
    *(void *)(v9 + 56) = v4;
    *(void *)(v9 + 64) = MEMORY[0x263F8D648];
    *(float *)(v9 + 32) = (float)(v3 / 3.1416) * 180.0;
    sub_24B6827F0();
    sub_24B682890();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_24B682890();
    swift_bridgeObjectRelease();
    sub_24B682890();
    swift_bridgeObjectRelease();
  }
  sub_24B682890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  swift_bridgeObjectRelease();
  uint64_t v10 = 0xD000000000000015;
  uint64_t v11 = (void *)0x800000024B691B80;
  result._object = v11;
  result._countAndFlagsBits = v10;
  return result;
}

UIColor __swiftcall CaptureFactors.preCaptureFactorsDescriptionColor()()
{
  if (v0[44])
  {
    float v1 = &selRef_greenColor;
LABEL_12:
    uint64_t v5 = self;
    goto LABEL_13;
  }
  float v1 = &selRef_magentaColor;
  if (v0[45] & 1) != 0 || (v0[46]) {
    goto LABEL_12;
  }
  int v2 = v0[47];
  int v3 = v0[48];
  int v4 = v0[49];
  uint64_t v5 = self;
  uint64_t v6 = &selRef_brownColor;
  if (v4) {
    uint64_t v6 = &selRef_whiteColor;
  }
  if (!v3) {
    uint64_t v6 = &selRef_purpleColor;
  }
  if (v2) {
    float v1 = v6;
  }
  else {
    float v1 = &selRef_orangeColor;
  }
LABEL_13:
  id v7 = [v5 *v1];

  return (UIColor)v7;
}

Swift::String __swiftcall CaptureFactors.postCaptureFactorsDescription()()
{
  float v1 = *(float *)(v0 + 20);
  uint64_t v2 = *(void *)(v0 + 24);
  float v4 = *(float *)(v0 + 32);
  float v3 = *(float *)(v0 + 36);
  float v5 = *(float *)(v0 + 40);
  uint64_t v6 = MEMORY[0x263F8D5C8];
  uint64_t v7 = MEMORY[0x263F8D648];
  if (v5 > 0.0)
  {
    sub_24B562F04((uint64_t *)&unk_2697CD150);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_24B684E60;
    *(void *)(v8 + 56) = v6;
    *(void *)(v8 + 64) = v7;
    *(float *)(v8 + 32) = v5;
    sub_24B6827F0();
    sub_24B682890();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_24B682890();
    swift_bridgeObjectRelease();
    sub_24B682890();
    swift_bridgeObjectRelease();
  }
  if (v1 <= 0.0 || v2 < 1)
  {
    if (v4 > 0.0) {
      goto LABEL_13;
    }
  }
  else
  {
    sub_24B562F04((uint64_t *)&unk_2697CD150);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_24B684E60;
    *(void *)(v13 + 56) = v6;
    *(void *)(v13 + 64) = v7;
    *(float *)(v13 + 32) = v1;
    sub_24B6827F0();
    sub_24B682890();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_24B682890();
    swift_bridgeObjectRelease();
    uint64_t v14 = swift_allocObject();
    uint64_t v15 = MEMORY[0x263F8D6C8];
    *(_OWORD *)(v14 + 16) = xmmword_24B684E60;
    uint64_t v16 = MEMORY[0x263F8D750];
    *(void *)(v14 + 56) = v15;
    *(void *)(v14 + 64) = v16;
    *(void *)(v14 + 32) = v2;
    sub_24B6827F0();
    swift_bridgeObjectRetain();
    sub_24B682890();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_24B682890();
    swift_bridgeObjectRelease();
    sub_24B682890();
    swift_bridgeObjectRelease();
    if (v4 > 0.0)
    {
LABEL_13:
      sub_24B562F04((uint64_t *)&unk_2697CD150);
      uint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_24B684E60;
      *(void *)(v17 + 56) = v6;
      *(void *)(v17 + 64) = v7;
      *(float *)(v17 + 32) = (float)(v4 / 3.1416) * 180.0;
      sub_24B6827F0();
      sub_24B682890();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24B682890();
      swift_bridgeObjectRelease();
      sub_24B682890();
      swift_bridgeObjectRelease();
      if (v3 <= 0.0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
  }
  if (v3 > 0.0)
  {
LABEL_10:
    sub_24B562F04((uint64_t *)&unk_2697CD150);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_24B684E60;
    *(void *)(v10 + 56) = v6;
    *(void *)(v10 + 64) = v7;
    *(float *)(v10 + 32) = v3;
    sub_24B6827F0();
    sub_24B682890();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_24B682890();
    swift_bridgeObjectRelease();
    sub_24B682890();
    swift_bridgeObjectRelease();
  }
LABEL_11:
  sub_24B682890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  swift_bridgeObjectRelease();
  uint64_t v11 = 0xD000000000000016;
  uint64_t v12 = (void *)0x800000024B691C20;
  result._object = v12;
  result._countAndFlagsBits = v11;
  return result;
}

UIColor __swiftcall CaptureFactors.postCaptureFactorsDescriptionColor()()
{
  if (*(unsigned char *)(v0 + 50) == 1)
  {
    float v1 = self;
    uint64_t v2 = &selRef_greenColor;
  }
  else
  {
    int v3 = *(unsigned __int8 *)(v0 + 52);
    float v1 = self;
    uint64_t v2 = &selRef_orangeColor;
    if (v3) {
      uint64_t v2 = &selRef_whiteColor;
    }
  }
  id v4 = [v1 *v2];

  return (UIColor)v4;
}

uint64_t sub_24B679E1C()
{
  return (v0[47] & ~(v0[45] | v0[46])) & (v0[48] & v0[49]) & 1;
}

double sub_24B679E48@<D0>(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = -1082130432;
  *(void *)(a1 + 8) = -1;
  __asm { FMOV            V0.2S, #-1.0 }
  *(void *)(a1 + 16) = _D0;
  *(void *)(a1 + 24) = -1;
  *(void *)(a1 + 32) = _D0;
  *(_DWORD *)(a1 + 40) = -1082130432;
  *(void *)&double result = 0x10101000000;
  *(void *)(a1 + 44) = 0x10101000000;
  *(unsigned char *)(a1 + 52) = 0;
  return result;
}

void sub_24B679E80()
{
  byte_2697D09D0 = 1;
  qword_2697D09D8 = 0xE700000000000000;
}

void sub_24B679E9C()
{
  byte_2697D09E8 = 1;
  qword_2697D09F0 = 0xE800000000000000;
}

void sub_24B679EB8()
{
  byte_2697D0A00 = 1;
  qword_2697D0A08 = 0xE700000000000000;
}

void sub_24B679ED4()
{
  byte_2697D0A18 = 1;
  qword_2697D0A20 = 0xE600000000000000;
}

void sub_24B679EF0()
{
  byte_2697D0A30 = 1;
  qword_2697D0A38 = 0xE800000000000000;
}

void sub_24B679F0C()
{
  byte_2697D0A48 = 1;
  qword_2697D0A50 = 0xEE00564F46664F74;
}

void *sub_24B679F34()
{
  sub_24B61160C();
  sub_24B5AEB54();
  if (sub_24B682D60())
  {
    if (qword_2697D09C8 != -1) {
      swift_once();
    }
    if (byte_2697D09D0) {
      uint64_t v0 = 0x747361466F6F54;
    }
    else {
      uint64_t v0 = 0;
    }
    uint64_t v1 = qword_2697D09D8;
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_24B5D3EB4(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v4 = v2[2];
    unint64_t v3 = v2[3];
    if (v4 >= v3 >> 1) {
      uint64_t v2 = sub_24B5D3EB4((void *)(v3 > 1), v4 + 1, 1, v2);
    }
    v2[2] = v4 + 1;
    float v5 = &v2[2 * v4];
    v5[4] = v0;
    v5[5] = v1;
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE78];
  }
  sub_24B611624();
  if (sub_24B682D60())
  {
    if (qword_2697D09E0 != -1) {
      swift_once();
    }
    if (byte_2697D09E8) {
      uint64_t v6 = 0x746867694C776F4CLL;
    }
    else {
      uint64_t v6 = 0;
    }
    uint64_t v7 = qword_2697D09F0;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_24B5D3EB4(0, v2[2] + 1, 1, v2);
    }
    unint64_t v9 = v2[2];
    unint64_t v8 = v2[3];
    if (v9 >= v8 >> 1) {
      uint64_t v2 = sub_24B5D3EB4((void *)(v8 > 1), v9 + 1, 1, v2);
    }
    v2[2] = v9 + 1;
    uint64_t v10 = &v2[2 * v9];
    v10[4] = v6;
    v10[5] = v7;
  }
  sub_24B611684();
  if (sub_24B682D60())
  {
    if (qword_2697D09F8 != -1) {
      swift_once();
    }
    if (byte_2697D0A00) {
      uint64_t v11 = 0x6B7261446F6F54;
    }
    else {
      uint64_t v11 = 0;
    }
    uint64_t v12 = qword_2697D0A08;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_24B5D3EB4(0, v2[2] + 1, 1, v2);
    }
    unint64_t v14 = v2[2];
    unint64_t v13 = v2[3];
    if (v14 >= v13 >> 1) {
      uint64_t v2 = sub_24B5D3EB4((void *)(v13 > 1), v14 + 1, 1, v2);
    }
    v2[2] = v14 + 1;
    uint64_t v15 = &v2[2 * v14];
    v15[4] = v11;
    v15[5] = v12;
  }
  sub_24B61163C();
  if (sub_24B682D60())
  {
    if (qword_2697D0A10 != -1) {
      swift_once();
    }
    if (byte_2697D0A18) {
      uint64_t v16 = 0x7261466F6F54;
    }
    else {
      uint64_t v16 = 0;
    }
    uint64_t v17 = qword_2697D0A20;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_24B5D3EB4(0, v2[2] + 1, 1, v2);
    }
    unint64_t v19 = v2[2];
    unint64_t v18 = v2[3];
    if (v19 >= v18 >> 1) {
      uint64_t v2 = sub_24B5D3EB4((void *)(v18 > 1), v19 + 1, 1, v2);
    }
    v2[2] = v19 + 1;
    uint64_t v20 = &v2[2 * v19];
    v20[4] = v16;
    v20[5] = v17;
  }
  sub_24B611654();
  if (sub_24B682D60())
  {
    if (qword_2697D0A28 != -1) {
      swift_once();
    }
    if (byte_2697D0A30) {
      uint64_t v21 = 0x65736F6C436F6F54;
    }
    else {
      uint64_t v21 = 0;
    }
    uint64_t v22 = qword_2697D0A38;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_24B5D3EB4(0, v2[2] + 1, 1, v2);
    }
    unint64_t v24 = v2[2];
    unint64_t v23 = v2[3];
    if (v24 >= v23 >> 1) {
      uint64_t v2 = sub_24B5D3EB4((void *)(v23 > 1), v24 + 1, 1, v2);
    }
    v2[2] = v24 + 1;
    uint64_t v25 = &v2[2 * v24];
    v25[4] = v21;
    v25[5] = v22;
  }
  sub_24B61166C();
  if (sub_24B682D60())
  {
    if (qword_2697D0A40 != -1) {
      swift_once();
    }
    if (byte_2697D0A48) {
      uint64_t v26 = 0x754F7463656A624FLL;
    }
    else {
      uint64_t v26 = 0;
    }
    uint64_t v27 = qword_2697D0A50;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_24B5D3EB4(0, v2[2] + 1, 1, v2);
    }
    unint64_t v29 = v2[2];
    unint64_t v28 = v2[3];
    if (v29 >= v28 >> 1) {
      uint64_t v2 = sub_24B5D3EB4((void *)(v28 > 1), v29 + 1, 1, v2);
    }
    v2[2] = v29 + 1;
    uint64_t v30 = &v2[2 * v29];
    v30[4] = v26;
    v30[5] = v27;
  }
  return v2;
}

uint64_t type metadata accessor for OCCaptureData(uint64_t a1)
{
  return sub_24B56BBFC(a1, (uint64_t *)&unk_2697D0A70);
}

uint64_t type metadata accessor for OCBundleData(uint64_t a1)
{
  return sub_24B56BBFC(a1, (uint64_t *)&unk_2697D0A80);
}

uint64_t type metadata accessor for OCObjectCentricPoseNode(uint64_t a1)
{
  return sub_24B56BBFC(a1, (uint64_t *)&unk_2697D0A90);
}

uint64_t type metadata accessor for VIOPoseNode(uint64_t a1)
{
  return sub_24B56BBFC(a1, (uint64_t *)&unk_2697D0AA0);
}

uint64_t sub_24B67A598(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void *sub_24B67A600(void *a1)
{
  return sub_24B57C038(0, a1[2], 0, a1);
}

void *sub_24B67A614(void *a1)
{
  return sub_24B5FE030(0, a1[2], 0, a1);
}

char *sub_24B67A628(uint64_t a1)
{
  return sub_24B58ACBC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_24B67A63C(uint64_t a1)
{
  return sub_24B5FE140(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_24B67A650@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_24B59F008(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v21 = *v3;
    *unint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_24B67B8B4(type metadata accessor for OCObjectCentricPoseNode, (uint64_t *)&unk_2697CD190, type metadata accessor for OCObjectCentricPoseNode, type metadata accessor for OCObjectCentricPoseNode);
      uint64_t v9 = v21;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_24B682410();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    uint64_t v12 = *(void *)(v9 + 56);
    uint64_t v13 = type metadata accessor for OCObjectCentricPoseNode(0);
    uint64_t v20 = *(void *)(v13 - 8);
    sub_24B67BBDC(v12 + *(void *)(v20 + 72) * v6, a2, type metadata accessor for OCObjectCentricPoseNode);
    sub_24B67AF78(v6, v9, type metadata accessor for OCObjectCentricPoseNode);
    *unint64_t v3 = v9;
    swift_bridgeObjectRelease();
    unint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for OCObjectCentricPoseNode(0);
    unint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }

  return v14(v15, v16, 1, v17);
}

uint64_t sub_24B67A874@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_24B59F008(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v21 = *v3;
    *unint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_24B67B8B4(type metadata accessor for VIOPoseNode, (uint64_t *)&unk_2697CD1A0, type metadata accessor for VIOPoseNode, type metadata accessor for VIOPoseNode);
      uint64_t v9 = v21;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_24B682410();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    uint64_t v12 = *(void *)(v9 + 56);
    uint64_t v13 = type metadata accessor for VIOPoseNode(0);
    uint64_t v20 = *(void *)(v13 - 8);
    sub_24B67BBDC(v12 + *(void *)(v20 + 72) * v6, a2, type metadata accessor for VIOPoseNode);
    sub_24B67AF78(v6, v9, type metadata accessor for VIOPoseNode);
    *unint64_t v3 = v9;
    swift_bridgeObjectRelease();
    unint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for VIOPoseNode(0);
    unint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }

  return v14(v15, v16, 1, v17);
}

uint64_t sub_24B67AA98(uint64_t a1, int a2, uint64_t (*a3)(void), uint64_t *a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  unint64_t v52 = a6;
  float v58 = a5;
  unint64_t v8 = v6;
  uint64_t v10 = a3(0);
  uint64_t v54 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v60 = (uint64_t)&v47 - v11;
  uint64_t v12 = sub_24B682410();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v56 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *v6;
  sub_24B562F04(a4);
  int v55 = a2;
  uint64_t v16 = sub_24B682F20();
  uint64_t v17 = v16;
  if (!*(void *)(v15 + 16)) {
    goto LABEL_41;
  }
  uint64_t v59 = v12;
  uint64_t v18 = 1 << *(unsigned char *)(v15 + 32);
  uint64_t v19 = *(void *)(v15 + 64);
  uint64_t v50 = (void *)(v15 + 64);
  if (v18 < 64) {
    uint64_t v20 = ~(-1 << v18);
  }
  else {
    uint64_t v20 = -1;
  }
  unint64_t v21 = v20 & v19;
  uint64_t v48 = v6;
  int64_t v49 = (unint64_t)(v18 + 63) >> 6;
  uint64_t v51 = (void (**)(char *, unint64_t, uint64_t))(v13 + 16);
  uint64_t v57 = (void (**)(char *, unint64_t, uint64_t))(v13 + 32);
  uint64_t v22 = v16 + 64;
  uint64_t result = swift_retain();
  int64_t v24 = 0;
  uint64_t v53 = v15;
  uint64_t v25 = v56;
  while (1)
  {
    if (v21)
    {
      unint64_t v27 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      unint64_t v28 = v27 | (v24 << 6);
      goto LABEL_22;
    }
    int64_t v29 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v29 >= v49) {
      break;
    }
    uint64_t v30 = v50;
    unint64_t v31 = v50[v29];
    ++v24;
    if (!v31)
    {
      int64_t v24 = v29 + 1;
      if (v29 + 1 >= v49) {
        goto LABEL_34;
      }
      unint64_t v31 = v50[v24];
      if (!v31)
      {
        int64_t v32 = v29 + 2;
        if (v32 >= v49)
        {
LABEL_34:
          swift_release();
          unint64_t v8 = v48;
          if ((v55 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v31 = v50[v32];
        if (!v31)
        {
          while (1)
          {
            int64_t v24 = v32 + 1;
            if (__OFADD__(v32, 1)) {
              goto LABEL_43;
            }
            if (v24 >= v49) {
              goto LABEL_34;
            }
            unint64_t v31 = v50[v24];
            ++v32;
            if (v31) {
              goto LABEL_21;
            }
          }
        }
        int64_t v24 = v32;
      }
    }
LABEL_21:
    unint64_t v21 = (v31 - 1) & v31;
    unint64_t v28 = __clz(__rbit64(v31)) + (v24 << 6);
LABEL_22:
    uint64_t v33 = v13;
    uint64_t v34 = *(void *)(v13 + 72);
    unint64_t v35 = *(void *)(v15 + 48) + v34 * v28;
    if (v55)
    {
      (*v57)(v25, v35, v59);
      uint64_t v36 = *(void *)(v15 + 56);
      uint64_t v37 = *(void *)(v54 + 72);
      sub_24B67BBDC(v36 + v37 * v28, v60, v58);
    }
    else
    {
      (*v51)(v25, v35, v59);
      uint64_t v38 = *(void *)(v15 + 56);
      uint64_t v37 = *(void *)(v54 + 72);
      sub_24B67A598(v38 + v37 * v28, v60, v52);
    }
    sub_24B67F8D4(&qword_2697CC408);
    uint64_t result = sub_24B682750();
    uint64_t v39 = -1 << *(unsigned char *)(v17 + 32);
    unint64_t v40 = result & ~v39;
    unint64_t v41 = v40 >> 6;
    if (((-1 << v40) & ~*(void *)(v22 + 8 * (v40 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v40) & ~*(void *)(v22 + 8 * (v40 >> 6)))) | v40 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v25 = v56;
    }
    else
    {
      char v42 = 0;
      unint64_t v43 = (unint64_t)(63 - v39) >> 6;
      uint64_t v25 = v56;
      do
      {
        if (++v41 == v43 && (v42 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v44 = v41 == v43;
        if (v41 == v43) {
          unint64_t v41 = 0;
        }
        v42 |= v44;
        uint64_t v45 = *(void *)(v22 + 8 * v41);
      }
      while (v45 == -1);
      unint64_t v26 = __clz(__rbit64(~v45)) + (v41 << 6);
    }
    *(void *)(v22 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    (*v57)((char *)(*(void *)(v17 + 48) + v34 * v26), (unint64_t)v25, v59);
    uint64_t result = sub_24B67BBDC(v60, *(void *)(v17 + 56) + v37 * v26, v58);
    ++*(void *)(v17 + 16);
    uint64_t v15 = v53;
    uint64_t v13 = v33;
  }
  swift_release();
  unint64_t v8 = v48;
  uint64_t v30 = v50;
  if ((v55 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v46 = 1 << *(unsigned char *)(v15 + 32);
  if (v46 >= 64) {
    bzero(v30, ((unint64_t)(v46 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v30 = -1 << v46;
  }
  *(void *)(v15 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *unint64_t v8 = v17;
  return result;
}

unint64_t sub_24B67AF78(int64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v37 = a3;
  uint64_t v5 = sub_24B682410();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t result = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a2 + 64;
  uint64_t v11 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v12 = (a1 + 1) & ~v11;
  if (((1 << v12) & *(void *)(a2 + 64 + 8 * (v12 >> 6))) != 0)
  {
    uint64_t v13 = ~v11;
    unint64_t result = sub_24B682D90();
    if ((*(void *)(v10 + 8 * (v12 >> 6)) & (1 << v12)) != 0)
    {
      unint64_t v40 = (result + 1) & v13;
      uint64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
      uint64_t v14 = v6 + 16;
      uint64_t v16 = *(void *)(v14 + 56);
      uint64_t v41 = v14;
      uint64_t v38 = (uint64_t (**)(char *, uint64_t))(v14 - 8);
      uint64_t v39 = v15;
      uint64_t v36 = v13;
      do
      {
        uint64_t v17 = v10;
        uint64_t v18 = v16;
        int64_t v19 = v16 * v12;
        v39(v9, *(void *)(a2 + 48) + v16 * v12, v5);
        sub_24B67F8D4(&qword_2697CC408);
        uint64_t v20 = sub_24B682750();
        unint64_t result = (*v38)(v9, v5);
        unint64_t v21 = v20 & v13;
        if (a1 >= (uint64_t)v40)
        {
          if (v21 >= v40 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            if (v18 * a1 < v19
              || *(void *)(a2 + 48) + v18 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v19 + v18))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v18 * a1 != v19)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v24 = *(void *)(a2 + 56);
            uint64_t v25 = *(void *)(*(void *)(v37(0) - 8) + 72);
            int64_t v26 = v25 * a1;
            unint64_t result = v24 + v25 * a1;
            int64_t v27 = v25 * v12;
            unint64_t v28 = v24 + v25 * v12 + v25;
            BOOL v29 = v26 < v27 || result >= v28;
            uint64_t v10 = v17;
            if (v29)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
              a1 = v12;
              uint64_t v13 = v36;
            }
            else
            {
              a1 = v12;
              uint64_t v13 = v36;
              if (v26 != v27)
              {
                unint64_t result = swift_arrayInitWithTakeBackToFront();
                a1 = v12;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v40 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        uint64_t v10 = v17;
LABEL_5:
        unint64_t v12 = (v12 + 1) & v13;
        uint64_t v16 = v18;
      }
      while (((*(void *)(v10 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
    }
    uint64_t v30 = (uint64_t *)(v10 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v30;
    uint64_t v32 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v30 = (uint64_t *)(v10 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v32 = *v30;
    uint64_t v31 = (-1 << a1) - 1;
  }
  *uint64_t v30 = v32 & v31;
  uint64_t v33 = *(void *)(a2 + 16);
  BOOL v34 = __OFSUB__(v33, 1);
  uint64_t v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v35;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_24B67B2B8(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = sub_24B682410();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_24B59F008(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t v22 = type metadata accessor for OCObjectCentricPoseNode(0);
      return sub_24B67F86C(a1, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v14, type metadata accessor for OCObjectCentricPoseNode);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_24B67B8B4(type metadata accessor for OCObjectCentricPoseNode, (uint64_t *)&unk_2697CD190, type metadata accessor for OCObjectCentricPoseNode, type metadata accessor for OCObjectCentricPoseNode);
    goto LABEL_7;
  }
  sub_24B67AA98(v17, a3 & 1, type metadata accessor for OCObjectCentricPoseNode, (uint64_t *)&unk_2697CD190, type metadata accessor for OCObjectCentricPoseNode, type metadata accessor for OCObjectCentricPoseNode);
  unint64_t v24 = sub_24B59F008(a2);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_14:
    uint64_t result = sub_24B682FF0();
    __break(1u);
    return result;
  }
  unint64_t v14 = v24;
  uint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_24B67B7C0(v14, (uint64_t)v11, a1, v20, type metadata accessor for OCObjectCentricPoseNode, type metadata accessor for OCObjectCentricPoseNode);
}

uint64_t sub_24B67B53C(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = sub_24B682410();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_24B59F008(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t v22 = type metadata accessor for VIOPoseNode(0);
      return sub_24B67F86C(a1, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v14, type metadata accessor for VIOPoseNode);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_24B67B8B4(type metadata accessor for VIOPoseNode, (uint64_t *)&unk_2697CD1A0, type metadata accessor for VIOPoseNode, type metadata accessor for VIOPoseNode);
    goto LABEL_7;
  }
  sub_24B67AA98(v17, a3 & 1, type metadata accessor for VIOPoseNode, (uint64_t *)&unk_2697CD1A0, type metadata accessor for VIOPoseNode, type metadata accessor for VIOPoseNode);
  unint64_t v24 = sub_24B59F008(a2);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_14:
    uint64_t result = sub_24B682FF0();
    __break(1u);
    return result;
  }
  unint64_t v14 = v24;
  uint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_24B67B7C0(v14, (uint64_t)v11, a1, v20, type metadata accessor for VIOPoseNode, type metadata accessor for VIOPoseNode);
}

uint64_t sub_24B67B7C0(unint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v12 = a4[6];
  uint64_t v13 = sub_24B682410();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v12 + *(void *)(*(void *)(v13 - 8) + 72) * a1, a2, v13);
  uint64_t v14 = a4[7];
  uint64_t v15 = a5(0);
  uint64_t result = sub_24B67BBDC(a3, v14 + *(void *)(*(void *)(v15 - 8) + 72) * a1, a6);
  uint64_t v17 = a4[2];
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    a4[2] = v19;
  }
  return result;
}

void *sub_24B67B8B4(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t v35 = a3;
  uint64_t v36 = a4;
  uint64_t v6 = a1(0);
  uint64_t v34 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v29 - v7;
  uint64_t v9 = sub_24B682410();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B562F04(a2);
  BOOL v29 = v4;
  uint64_t v13 = *v4;
  uint64_t v14 = sub_24B682F10();
  uint64_t v15 = v14;
  if (!*(void *)(v13 + 16))
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    *BOOL v29 = v15;
    return result;
  }
  uint64_t result = (void *)(v14 + 64);
  unint64_t v17 = (unint64_t)((1 << *(unsigned char *)(v15 + 32)) + 63) >> 6;
  if (v15 != v13 || (unint64_t)result >= v13 + 64 + 8 * v17) {
    uint64_t result = memmove(result, (const void *)(v13 + 64), 8 * v17);
  }
  uint64_t v30 = v13 + 64;
  int64_t v18 = 0;
  *(void *)(v15 + 16) = *(void *)(v13 + 16);
  uint64_t v19 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & *(void *)(v13 + 64);
  uint64_t v33 = v10 + 16;
  int64_t v31 = (unint64_t)(v19 + 63) >> 6;
  uint64_t v32 = v10 + 32;
  while (1)
  {
    if (v21)
    {
      unint64_t v22 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      unint64_t v23 = v22 | (v18 << 6);
      goto LABEL_9;
    }
    int64_t v26 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v26 >= v31) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v30 + 8 * v26);
    ++v18;
    if (!v27)
    {
      int64_t v18 = v26 + 1;
      if (v26 + 1 >= v31) {
        goto LABEL_23;
      }
      unint64_t v27 = *(void *)(v30 + 8 * v18);
      if (!v27) {
        break;
      }
    }
LABEL_22:
    unint64_t v21 = (v27 - 1) & v27;
    unint64_t v23 = __clz(__rbit64(v27)) + (v18 << 6);
LABEL_9:
    unint64_t v24 = *(void *)(v10 + 72) * v23;
    (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v12, *(void *)(v13 + 48) + v24, v9);
    unint64_t v25 = *(void *)(v34 + 72) * v23;
    sub_24B67A598(*(void *)(v13 + 56) + v25, (uint64_t)v8, v35);
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(*(void *)(v15 + 48) + v24, v12, v9);
    uint64_t result = (void *)sub_24B67BBDC((uint64_t)v8, *(void *)(v15 + 56) + v25, v36);
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v31) {
    goto LABEL_23;
  }
  unint64_t v27 = *(void *)(v30 + 8 * v28);
  if (v27)
  {
    int64_t v18 = v28;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v18 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v18 >= v31) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v30 + 8 * v18);
    ++v28;
    if (v27) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_24B67BBDC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_24B67BC44(uint64_t a1, int a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t *a6, uint64_t (*a7)(void), uint64_t (*a8)(void), uint64_t (*a9)(void))
{
  uint64_t v31 = a5;
  unint64_t v35 = a4;
  int v36 = a2;
  uint64_t v33 = a8;
  uint64_t v34 = a9;
  uint64_t v13 = sub_24B682410();
  uint64_t v32 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_24B562F04(a6);
  MEMORY[0x270FA5388](v16 - 8);
  int64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a7(0);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  unint64_t v23 = (char *)&v31 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  unint64_t v25 = (char *)&v31 - v24;
  sub_24B563A6C(a1, (uint64_t)v18, a6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    unint64_t result = sub_24B5632A8((uint64_t)v18, a6);
    if (v36)
    {
      int64_t v27 = v35;
      swift_arrayDestroy();
      return sub_24B67AF78(v27, *a3, v34);
    }
  }
  else
  {
    uint64_t v28 = (uint64_t)v18;
    BOOL v29 = v33;
    sub_24B67BBDC(v28, (uint64_t)v25, v33);
    uint64_t v30 = (void *)*a3;
    if (v36)
    {
      return sub_24B67BBDC((uint64_t)v25, v30[7] + *(void *)(v20 + 72) * v35, v29);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v15, v31, v13);
      sub_24B67BBDC((uint64_t)v25, (uint64_t)v23, v29);
      return sub_24B67B7C0(v35, (uint64_t)v15, (uint64_t)v23, v30, v34, v29);
    }
  }
  return result;
}

uint64_t sub_24B67BF0C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

ValueMetadata *type metadata accessor for OCBoundingBox()
{
  return &type metadata for OCBoundingBox;
}

uint64_t destroy for OCDepthPointCloud()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for OCDepthPointCloud(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for OCDepthPointCloud(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for OCDepthPointCloud(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for OCDepthPointCloud(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for OCDepthPointCloud(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OCDepthPointCloud(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OCDepthPointCloud()
{
  return &type metadata for OCDepthPointCloud;
}

ValueMetadata *type metadata accessor for OCVoxelCloud()
{
  return &type metadata for OCVoxelCloud;
}

uint64_t destroy for OCPointCloud()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for OCPointCloud(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s6CoreOC12OCVoxelCloudVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  return a1;
}

uint64_t _s6CoreOC12OCVoxelCloudVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  return a1;
}

ValueMetadata *type metadata accessor for OCPointCloud()
{
  return &type metadata for OCPointCloud;
}

uint64_t destroy for OCTriangleMesh()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for OCTriangleMesh(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for OCTriangleMesh(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  return a1;
}

_OWORD *assignWithTake for OCTriangleMesh(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  long long v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  long long v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  return a1;
}

uint64_t _s6CoreOC12OCVoxelCloudVwet_0(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24B67C5D0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OCTriangleMesh()
{
  return &type metadata for OCTriangleMesh;
}

void *sub_24B67C634(void *a1, void *a2, uint64_t a3)
{
  long long v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *long long v4 = *a2;
    long long v4 = (void *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v7 = (void *)a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = (void *)a2[2];
    uint64_t v9 = (void *)a2[3];
    a1[2] = v8;
    a1[3] = v9;
    uint64_t v10 = a2 + 4;
    uint64_t v11 = a2[4];
    id v12 = v7;
    id v13 = v8;
    id v14 = v9;
    uint64_t v60 = v6;
    if (v11)
    {
      uint64_t v15 = a2[5];
      uint64_t v16 = a2[6];
      v4[4] = v11;
      v4[5] = v15;
      uint64_t v17 = a2[7];
      uint64_t v18 = a2[8];
      v4[6] = v16;
      v4[7] = v17;
      uint64_t v19 = a2[9];
      uint64_t v20 = a2[10];
      v4[8] = v18;
      v4[9] = v19;
      uint64_t v22 = a2[11];
      uint64_t v21 = a2[12];
      v4[10] = v20;
      v4[11] = v22;
      v4[12] = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v6 = v60;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v24 = *((_OWORD *)a2 + 5);
      *((_OWORD *)v4 + 4) = *((_OWORD *)a2 + 4);
      *((_OWORD *)v4 + 5) = v24;
      v4[12] = a2[12];
      long long v25 = *((_OWORD *)a2 + 3);
      *((_OWORD *)v4 + 2) = *v10;
      *((_OWORD *)v4 + 3) = v25;
    }
    float v58 = (void *)a2[13];
    v4[13] = v58;
    uint64_t v26 = *(int *)(v6 + 40);
    int64_t v27 = (_OWORD *)((char *)v4 + v26);
    uint64_t v28 = (char *)a2 + v26;
    long long v29 = *(_OWORD *)((char *)a2 + v26 + 16);
    *int64_t v27 = *(_OWORD *)((char *)a2 + v26);
    v27[1] = v29;
    long long v30 = *(_OWORD *)((char *)a2 + v26 + 80);
    uint64_t v27[4] = *(_OWORD *)((char *)a2 + v26 + 64);
    v27[5] = v30;
    v27[6] = *(_OWORD *)((char *)a2 + v26 + 96);
    long long v31 = *(_OWORD *)((char *)a2 + v26 + 48);
    void v27[2] = *(_OWORD *)((char *)a2 + v26 + 32);
    v27[3] = v31;
    uint64_t v32 = (int *)type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
    uint64_t v33 = v32[6];
    __dst = (char *)v27 + v33;
    uint64_t v34 = &v28[v33];
    uint64_t v35 = sub_24B682C80();
    uint64_t v36 = *(void *)(v35 - 8);
    uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
    id v38 = v58;
    if (v37(v34, 2, v35))
    {
      uint64_t v39 = sub_24B682C90();
      memcpy(__dst, v34, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(__dst, v34, v35);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(__dst, 0, 2, v35);
    }
    uint64_t v40 = v32[7];
    uint64_t v41 = (char *)v27 + v40;
    char v42 = &v28[v40];
    long long v43 = *((_OWORD *)v42 + 3);
    *((_OWORD *)v41 + 2) = *((_OWORD *)v42 + 2);
    *((_OWORD *)v41 + 3) = v43;
    v41[64] = v42[64];
    long long v44 = *((_OWORD *)v42 + 1);
    *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
    *((_OWORD *)v41 + 1) = v44;
    uint64_t v45 = v32[8];
    uint64_t v46 = *(void **)&v28[v45];
    *(void *)((char *)v27 + v45) = v46;
    uint64_t v47 = v32[9];
    uint64_t v48 = (char *)v27 + v47;
    int64_t v49 = &v28[v47];
    v48[64] = v49[64];
    long long v50 = *((_OWORD *)v49 + 3);
    *((_OWORD *)v48 + 2) = *((_OWORD *)v49 + 2);
    *((_OWORD *)v48 + 3) = v50;
    long long v51 = *((_OWORD *)v49 + 1);
    *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
    *((_OWORD *)v48 + 1) = v51;
    uint64_t v52 = *(int *)(v60 + 44);
    uint64_t v53 = *(int *)(v60 + 48);
    uint64_t v54 = *(void **)((char *)a2 + v52);
    *(void *)((char *)v4 + v52) = v54;
    *((unsigned char *)v4 + v53) = *((unsigned char *)a2 + v53);
    id v55 = v46;
    id v56 = v54;
  }
  return v4;
}

void sub_24B67C934(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  uint64_t v6 = v4 + *(int *)(v5 + 24);
  uint64_t v7 = sub_24B682C80();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 2, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }

  uint64_t v9 = *(void **)(a1 + *(int *)(a2 + 44));
}

void *sub_24B67CA90(void *a1, void *a2, int *a3)
{
  uint64_t v5 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = (void *)a2[2];
  uint64_t v7 = (void *)a2[3];
  a1[2] = v6;
  a1[3] = v7;
  uint64_t v8 = a2 + 4;
  uint64_t v9 = a2[4];
  id v10 = v5;
  id v11 = v6;
  id v12 = v7;
  if (v9)
  {
    uint64_t v13 = a2[5];
    uint64_t v14 = a2[6];
    a1[4] = v9;
    a1[5] = v13;
    uint64_t v15 = a2[7];
    uint64_t v16 = a2[8];
    a1[6] = v14;
    a1[7] = v15;
    uint64_t v17 = a2[9];
    uint64_t v18 = a2[10];
    a1[8] = v16;
    a1[9] = v17;
    uint64_t v20 = a2[11];
    uint64_t v19 = a2[12];
    a1[10] = v18;
    a1[11] = v20;
    a1[12] = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v21 = *((_OWORD *)v8 + 3);
    *((_OWORD *)a1 + 4) = *((_OWORD *)v8 + 2);
    *((_OWORD *)a1 + 5) = v21;
    a1[12] = v8[8];
    long long v22 = *((_OWORD *)v8 + 1);
    *((_OWORD *)a1 + 2) = *(_OWORD *)v8;
    *((_OWORD *)a1 + 3) = v22;
  }
  id v55 = (void *)a2[13];
  a1[13] = v55;
  uint64_t v23 = a3[10];
  long long v24 = (_OWORD *)((char *)a1 + v23);
  long long v25 = (char *)a2 + v23;
  long long v26 = *(_OWORD *)((char *)a2 + v23 + 16);
  *long long v24 = *(_OWORD *)((char *)a2 + v23);
  v24[1] = v26;
  long long v27 = *(_OWORD *)((char *)a2 + v23 + 80);
  v24[4] = *(_OWORD *)((char *)a2 + v23 + 64);
  v24[5] = v27;
  v24[6] = *(_OWORD *)((char *)a2 + v23 + 96);
  long long v28 = *(_OWORD *)((char *)a2 + v23 + 48);
  void v24[2] = *(_OWORD *)((char *)a2 + v23 + 32);
  v24[3] = v28;
  long long v29 = (int *)type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  uint64_t v30 = v29[6];
  __dst = (char *)v24 + v30;
  long long v31 = &v25[v30];
  uint64_t v32 = sub_24B682C80();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
  id v35 = v55;
  if (v34(v31, 2, v32))
  {
    uint64_t v36 = sub_24B682C90();
    memcpy(__dst, v31, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v33 + 16))(__dst, v31, v32);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(__dst, 0, 2, v32);
  }
  uint64_t v37 = v29[7];
  id v38 = (char *)v24 + v37;
  uint64_t v39 = &v25[v37];
  long long v40 = *((_OWORD *)v39 + 3);
  *((_OWORD *)v38 + 2) = *((_OWORD *)v39 + 2);
  *((_OWORD *)v38 + 3) = v40;
  v38[64] = v39[64];
  long long v41 = *((_OWORD *)v39 + 1);
  *(_OWORD *)id v38 = *(_OWORD *)v39;
  *((_OWORD *)v38 + 1) = v41;
  uint64_t v42 = v29[8];
  long long v43 = *(void **)&v25[v42];
  *(void *)((char *)v24 + v42) = v43;
  uint64_t v44 = v29[9];
  uint64_t v45 = (char *)v24 + v44;
  uint64_t v46 = &v25[v44];
  v45[64] = v46[64];
  long long v47 = *((_OWORD *)v46 + 3);
  *((_OWORD *)v45 + 2) = *((_OWORD *)v46 + 2);
  *((_OWORD *)v45 + 3) = v47;
  long long v48 = *((_OWORD *)v46 + 1);
  *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
  *((_OWORD *)v45 + 1) = v48;
  uint64_t v49 = a3[11];
  uint64_t v50 = a3[12];
  long long v51 = *(void **)((char *)a2 + v49);
  *(void *)((char *)a1 + v49) = v51;
  *((unsigned char *)a1 + v50) = *((unsigned char *)a2 + v50);
  id v52 = v43;
  id v53 = v51;
  return a1;
}

void *sub_24B67CD3C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = (void *)a2[1];
  uint64_t v7 = (void *)a1[1];
  a1[1] = v6;
  id v8 = v6;

  uint64_t v9 = (void *)a1[2];
  id v10 = (void *)a2[2];
  a1[2] = v10;
  id v11 = v10;

  id v12 = (void *)a1[3];
  uint64_t v13 = (void *)a2[3];
  a1[3] = v13;
  id v14 = v13;

  uint64_t v15 = a1 + 4;
  uint64_t v17 = a2 + 4;
  uint64_t v16 = a2[4];
  uint64_t v62 = a3;
  if (a1[4])
  {
    if (v16)
    {
      a1[4] = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[5] = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[6] = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[7] = a2[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[8] = a2[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[9] = a2[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[10] = a2[10];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[11] = a2[11];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[12] = a2[12];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_24B5AE6C4((uint64_t)(a1 + 4));
      *uint64_t v15 = *v17;
      long long v19 = *((_OWORD *)a2 + 4);
      long long v18 = *((_OWORD *)a2 + 5);
      long long v20 = *((_OWORD *)a2 + 3);
      a1[12] = a2[12];
      *((_OWORD *)a1 + 4) = v19;
      *((_OWORD *)a1 + 5) = v18;
      *((_OWORD *)a1 + 3) = v20;
    }
  }
  else if (v16)
  {
    a1[4] = v16;
    a1[5] = a2[5];
    a1[6] = a2[6];
    a1[7] = a2[7];
    a1[8] = a2[8];
    a1[9] = a2[9];
    a1[10] = a2[10];
    a1[11] = a2[11];
    a1[12] = a2[12];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *uint64_t v15 = *v17;
    long long v21 = *((_OWORD *)a2 + 3);
    long long v22 = *((_OWORD *)a2 + 4);
    long long v23 = *((_OWORD *)a2 + 5);
    a1[12] = a2[12];
    *((_OWORD *)a1 + 4) = v22;
    *((_OWORD *)a1 + 5) = v23;
    *((_OWORD *)a1 + 3) = v21;
  }
  long long v24 = (void *)a1[13];
  long long v25 = (void *)a2[13];
  a1[13] = v25;
  id v26 = v25;

  uint64_t v27 = *(int *)(a3 + 40);
  long long v28 = (_OWORD *)((char *)a1 + v27);
  long long v29 = (char *)a2 + v27;
  *long long v28 = *(_OWORD *)((char *)a2 + v27);
  v28[1] = *(_OWORD *)((char *)a2 + v27 + 16);
  void v28[2] = *(_OWORD *)((char *)a2 + v27 + 32);
  v28[3] = *(_OWORD *)((char *)a2 + v27 + 48);
  v28[4] = *(_OWORD *)((char *)a2 + v27 + 64);
  v28[5] = *(_OWORD *)((char *)a2 + v27 + 80);
  v28[6] = *(_OWORD *)((char *)a2 + v27 + 96);
  float v61 = (int *)type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  uint64_t v30 = v61[6];
  long long v31 = (char *)v28 + v30;
  uint64_t v32 = &v29[v30];
  uint64_t v33 = sub_24B682C80();
  uint64_t v34 = *(void *)(v33 - 8);
  id v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
  uint64_t v60 = v31;
  LODWORD(v31) = v35(v31, 2, v33);
  int v36 = v35(v32, 2, v33);
  if (v31)
  {
    if (!v36)
    {
      (*(void (**)(void *, char *, uint64_t))(v34 + 16))(v60, v32, v33);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(v60, 0, 2, v33);
      goto LABEL_16;
    }
    size_t v37 = *(void *)(*(void *)(sub_24B682C90() - 8) + 64);
    id v38 = v60;
  }
  else
  {
    if (!v36)
    {
      (*(void (**)(void *, char *, uint64_t))(v34 + 24))(v60, v32, v33);
      goto LABEL_16;
    }
    (*(void (**)(void *, uint64_t))(v34 + 8))(v60, v33);
    size_t v37 = *(void *)(*(void *)(sub_24B682C90() - 8) + 64);
    id v38 = v60;
  }
  memcpy(v38, v32, v37);
LABEL_16:
  uint64_t v39 = v61[7];
  long long v40 = (char *)v28 + v39;
  long long v41 = &v29[v39];
  *(_OWORD *)long long v40 = *(_OWORD *)v41;
  long long v42 = *((_OWORD *)v41 + 1);
  long long v43 = *((_OWORD *)v41 + 2);
  long long v44 = *((_OWORD *)v41 + 3);
  v40[64] = v41[64];
  *((_OWORD *)v40 + 2) = v43;
  *((_OWORD *)v40 + 3) = v44;
  *((_OWORD *)v40 + 1) = v42;
  uint64_t v45 = v61[8];
  uint64_t v46 = *(void **)((char *)v28 + v45);
  long long v47 = *(void **)&v29[v45];
  *(void *)((char *)v28 + v45) = v47;
  id v48 = v47;

  uint64_t v49 = v61[9];
  uint64_t v50 = (char *)v28 + v49;
  long long v51 = &v29[v49];
  *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
  long long v52 = *((_OWORD *)v51 + 1);
  long long v53 = *((_OWORD *)v51 + 2);
  long long v54 = *((_OWORD *)v51 + 3);
  v50[64] = v51[64];
  *((_OWORD *)v50 + 2) = v53;
  *((_OWORD *)v50 + 3) = v54;
  *((_OWORD *)v50 + 1) = v52;
  uint64_t v55 = *(int *)(v62 + 44);
  id v56 = *(void **)((char *)a1 + v55);
  uint64_t v57 = *(void **)((char *)a2 + v55);
  *(void *)((char *)a1 + v55) = v57;
  id v58 = v57;

  *((unsigned char *)a1 + *(int *)(v62 + 48)) = *((unsigned char *)a2 + *(int *)(v62 + 48));
  return a1;
}

uint64_t sub_24B67D200(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  uint64_t v9 = a3[10];
  id v10 = (_OWORD *)(a1 + v9);
  uint64_t v11 = a2 + v9;
  long long v12 = *(_OWORD *)(a2 + v9 + 16);
  *id v10 = *(_OWORD *)(a2 + v9);
  v10[1] = v12;
  long long v13 = *(_OWORD *)(a2 + v9 + 48);
  v10[2] = *(_OWORD *)(a2 + v9 + 32);
  v10[3] = v13;
  long long v14 = *(_OWORD *)(a2 + v9 + 80);
  v10[4] = *(_OWORD *)(a2 + v9 + 64);
  v10[5] = v14;
  v10[6] = *(_OWORD *)(a2 + v9 + 96);
  uint64_t v15 = (int *)type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  uint64_t v16 = v15[6];
  uint64_t v17 = (char *)v10 + v16;
  long long v18 = (const void *)(v11 + v16);
  uint64_t v19 = sub_24B682C80();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 2, v19))
  {
    uint64_t v21 = sub_24B682C90();
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 2, v19);
  }
  uint64_t v22 = v15[7];
  long long v23 = (char *)v10 + v22;
  uint64_t v24 = v11 + v22;
  long long v25 = *(_OWORD *)(v24 + 48);
  *((_OWORD *)v23 + 2) = *(_OWORD *)(v24 + 32);
  *((_OWORD *)v23 + 3) = v25;
  v23[64] = *(unsigned char *)(v24 + 64);
  long long v26 = *(_OWORD *)(v24 + 16);
  *(_OWORD *)long long v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v26;
  *(void *)((char *)v10 + v15[8]) = *(void *)(v11 + v15[8]);
  uint64_t v27 = v15[9];
  long long v28 = (char *)v10 + v27;
  uint64_t v29 = v11 + v27;
  v28[64] = *(unsigned char *)(v29 + 64);
  long long v30 = *(_OWORD *)(v29 + 48);
  *((_OWORD *)v28 + 2) = *(_OWORD *)(v29 + 32);
  *((_OWORD *)v28 + 3) = v30;
  long long v31 = *(_OWORD *)(v29 + 16);
  *(_OWORD *)long long v28 = *(_OWORD *)v29;
  *((_OWORD *)v28 + 1) = v31;
  uint64_t v32 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v32) = *(unsigned char *)(a2 + v32);
  return a1;
}

void *sub_24B67D3F0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  long long v6 = (void *)a1[1];
  a1[1] = a2[1];

  long long v7 = (void *)a1[2];
  a1[2] = a2[2];

  uint64_t v8 = (void *)a1[3];
  a1[3] = a2[3];

  uint64_t v9 = a2[4];
  if (a1[4])
  {
    if (v9)
    {
      a1[4] = v9;
      swift_bridgeObjectRelease();
      a1[5] = a2[5];
      swift_bridgeObjectRelease();
      a1[6] = a2[6];
      swift_bridgeObjectRelease();
      a1[7] = a2[7];
      swift_bridgeObjectRelease();
      a1[8] = a2[8];
      swift_bridgeObjectRelease();
      a1[9] = a2[9];
      swift_bridgeObjectRelease();
      a1[10] = a2[10];
      swift_bridgeObjectRelease();
      a1[11] = a2[11];
      swift_bridgeObjectRelease();
      a1[12] = a2[12];
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_24B5AE6C4((uint64_t)(a1 + 4));
  }
  long long v10 = *((_OWORD *)a2 + 5);
  *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
  *((_OWORD *)a1 + 5) = v10;
  a1[12] = a2[12];
  long long v11 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a1 + 3) = v11;
LABEL_6:
  long long v12 = (void *)a1[13];
  a1[13] = a2[13];

  uint64_t v45 = a3;
  uint64_t v13 = *(int *)(a3 + 40);
  long long v14 = (_OWORD *)((char *)a1 + v13);
  uint64_t v15 = (char *)a2 + v13;
  long long v16 = *(_OWORD *)((char *)a2 + v13 + 16);
  *long long v14 = *(_OWORD *)((char *)a2 + v13);
  v14[1] = v16;
  long long v17 = *(_OWORD *)((char *)a2 + v13 + 48);
  v14[2] = *(_OWORD *)((char *)a2 + v13 + 32);
  v14[3] = v17;
  long long v18 = *(_OWORD *)((char *)a2 + v13 + 80);
  v14[4] = *(_OWORD *)((char *)a2 + v13 + 64);
  v14[5] = v18;
  v14[6] = *(_OWORD *)((char *)a2 + v13 + 96);
  long long v43 = (int *)type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  uint64_t v19 = v43[6];
  uint64_t v20 = (char *)v14 + v19;
  uint64_t v21 = &v15[v19];
  uint64_t v22 = sub_24B682C80();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  long long v44 = v20;
  LODWORD(v20) = v24(v20, 2, v22);
  int v25 = v24(v21, 2, v22);
  if (v20)
  {
    if (!v25)
    {
      (*(void (**)(void *, char *, uint64_t))(v23 + 32))(v44, v21, v22);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v44, 0, 2, v22);
      goto LABEL_14;
    }
    size_t v26 = *(void *)(*(void *)(sub_24B682C90() - 8) + 64);
    uint64_t v27 = v44;
  }
  else
  {
    if (!v25)
    {
      (*(void (**)(void *, char *, uint64_t))(v23 + 40))(v44, v21, v22);
      goto LABEL_14;
    }
    (*(void (**)(void *, uint64_t))(v23 + 8))(v44, v22);
    size_t v26 = *(void *)(*(void *)(sub_24B682C90() - 8) + 64);
    uint64_t v27 = v44;
  }
  memcpy(v27, v21, v26);
LABEL_14:
  uint64_t v28 = v43[7];
  uint64_t v29 = (char *)v14 + v28;
  long long v30 = &v15[v28];
  long long v31 = *((_OWORD *)v30 + 3);
  *((_OWORD *)v29 + 2) = *((_OWORD *)v30 + 2);
  *((_OWORD *)v29 + 3) = v31;
  v29[64] = v30[64];
  long long v32 = *((_OWORD *)v30 + 1);
  *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
  *((_OWORD *)v29 + 1) = v32;
  uint64_t v33 = v43[8];
  uint64_t v34 = *(void **)((char *)v14 + v33);
  *(void *)((char *)v14 + v33) = *(void *)&v15[v33];

  uint64_t v35 = v43[9];
  int v36 = (char *)v14 + v35;
  size_t v37 = &v15[v35];
  long long v38 = *((_OWORD *)v37 + 3);
  *((_OWORD *)v36 + 2) = *((_OWORD *)v37 + 2);
  *((_OWORD *)v36 + 3) = v38;
  v36[64] = v37[64];
  long long v39 = *((_OWORD *)v37 + 1);
  *(_OWORD *)int v36 = *(_OWORD *)v37;
  *((_OWORD *)v36 + 1) = v39;
  uint64_t v40 = *(int *)(v45 + 44);
  long long v41 = *(void **)((char *)a1 + v40);
  *(void *)((char *)a1 + v40) = *(void *)((char *)a2 + v40);

  *((unsigned char *)a1 + *(int *)(v45 + 48)) = *((unsigned char *)a2 + *(int *)(v45 + 48));
  return a1;
}

uint64_t sub_24B67D76C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24B67D780);
}

uint64_t sub_24B67D780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_24B67D830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24B67D844);
}

uint64_t sub_24B67D844(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24B67D8EC()
{
  uint64_t result = type metadata accessor for ObjectCaptureSession.Frame.Camera(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24B67D9B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v22 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    uint64_t v9 = a2[9];
    a1[8] = a2[8];
    a1[9] = v9;
    uint64_t v10 = *(int *)(a3 + 24);
    uint64_t v11 = (_OWORD *)((char *)a1 + v10);
    long long v12 = (char *)a2 + v10;
    long long v13 = *(_OWORD *)((char *)a2 + v10 + 16);
    *uint64_t v11 = *(_OWORD *)((char *)a2 + v10);
    v11[1] = v13;
    long long v14 = *(_OWORD *)((char *)a2 + v10 + 48);
    _DWORD v11[2] = *(_OWORD *)((char *)a2 + v10 + 32);
    v11[3] = v14;
    long long v15 = *(_OWORD *)((char *)a2 + v10 + 80);
    v11[4] = *(_OWORD *)((char *)a2 + v10 + 64);
    v11[5] = v15;
    void v11[6] = *(_OWORD *)((char *)a2 + v10 + 96);
    long long v16 = (int *)type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
    uint64_t v17 = v16[6];
    __dst = (char *)v11 + v17;
    long long v18 = &v12[v17];
    uint64_t v19 = sub_24B682C80();
    uint64_t v20 = *(void *)(v19 - 8);
    size_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v37(v18, 2, v19))
    {
      uint64_t v21 = sub_24B682C90();
      memcpy(__dst, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(__dst, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 2, v19);
    }
    uint64_t v23 = v16[7];
    uint64_t v24 = (char *)v11 + v23;
    int v25 = &v12[v23];
    long long v26 = *((_OWORD *)v25 + 3);
    *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
    *((_OWORD *)v24 + 3) = v26;
    unsigned char v24[64] = v25[64];
    long long v27 = *((_OWORD *)v25 + 1);
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    *((_OWORD *)v24 + 1) = v27;
    uint64_t v28 = v16[8];
    uint64_t v29 = *(void **)&v12[v28];
    *(void *)((char *)v11 + v28) = v29;
    uint64_t v30 = v16[9];
    long long v31 = (char *)v11 + v30;
    long long v32 = &v12[v30];
    long long v33 = *((_OWORD *)v32 + 3);
    *((_OWORD *)v31 + 2) = *((_OWORD *)v32 + 2);
    *((_OWORD *)v31 + 3) = v33;
    v31[64] = v32[64];
    long long v34 = *((_OWORD *)v32 + 1);
    *(_OWORD *)long long v31 = *(_OWORD *)v32;
    *((_OWORD *)v31 + 1) = v34;
    id v35 = v29;
  }
  return v3;
}

void sub_24B67DC54(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  uint64_t v6 = v4 + *(int *)(v5 + 24);
  uint64_t v7 = sub_24B682C80();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 2, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  uint64_t v9 = *(void **)(v4 + *(int *)(v5 + 32));
}

void *sub_24B67DD78(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (_OWORD *)((char *)a1 + v9);
  uint64_t v11 = (char *)a2 + v9;
  long long v12 = *(_OWORD *)((char *)a2 + v9 + 16);
  *uint64_t v10 = *(_OWORD *)((char *)a2 + v9);
  v10[1] = v12;
  long long v13 = *(_OWORD *)((char *)a2 + v9 + 48);
  v10[2] = *(_OWORD *)((char *)a2 + v9 + 32);
  v10[3] = v13;
  long long v14 = *(_OWORD *)((char *)a2 + v9 + 80);
  v10[4] = *(_OWORD *)((char *)a2 + v9 + 64);
  v10[5] = v14;
  v10[6] = *(_OWORD *)((char *)a2 + v9 + 96);
  long long v15 = (int *)type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  uint64_t v16 = v15[6];
  __dst = (char *)v10 + v16;
  uint64_t v17 = &v11[v16];
  uint64_t v18 = sub_24B682C80();
  uint64_t v19 = *(void *)(v18 - 8);
  id v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v35(v17, 2, v18))
  {
    uint64_t v20 = sub_24B682C90();
    memcpy(__dst, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(__dst, v17, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 2, v18);
  }
  uint64_t v21 = v15[7];
  uint64_t v22 = (char *)v10 + v21;
  uint64_t v23 = &v11[v21];
  long long v24 = *((_OWORD *)v23 + 3);
  *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
  *((_OWORD *)v22 + 3) = v24;
  v22[64] = v23[64];
  long long v25 = *((_OWORD *)v23 + 1);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *((_OWORD *)v22 + 1) = v25;
  uint64_t v26 = v15[8];
  long long v27 = *(void **)&v11[v26];
  *(void *)((char *)v10 + v26) = v27;
  uint64_t v28 = v15[9];
  uint64_t v29 = (char *)v10 + v28;
  uint64_t v30 = &v11[v28];
  long long v31 = *((_OWORD *)v30 + 3);
  *((_OWORD *)v29 + 2) = *((_OWORD *)v30 + 2);
  *((_OWORD *)v29 + 3) = v31;
  v29[64] = v30[64];
  long long v32 = *((_OWORD *)v30 + 1);
  *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
  *((_OWORD *)v29 + 1) = v32;
  id v33 = v27;
  return a1;
}

void *sub_24B67DFC4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (_OWORD *)((char *)a1 + v6);
  uint64_t v8 = (char *)a2 + v6;
  *uint64_t v7 = *(_OWORD *)((char *)a2 + v6);
  v7[1] = *(_OWORD *)((char *)a2 + v6 + 16);
  v7[2] = *(_OWORD *)((char *)a2 + v6 + 32);
  v7[3] = *(_OWORD *)((char *)a2 + v6 + 48);
  _OWORD v7[4] = *(_OWORD *)((char *)a2 + v6 + 64);
  v7[5] = *(_OWORD *)((char *)a2 + v6 + 80);
  v7[6] = *(_OWORD *)((char *)a2 + v6 + 96);
  id v35 = (int *)type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  uint64_t v9 = v35[6];
  uint64_t v10 = (char *)v7 + v9;
  uint64_t v11 = &v8[v9];
  uint64_t v12 = sub_24B682C80();
  uint64_t v13 = *(void *)(v12 - 8);
  long long v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 2, v12);
  int v16 = v14(v11, 2, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_24B682C90();
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 2, v12);
LABEL_7:
  uint64_t v18 = v35[7];
  uint64_t v19 = (char *)v7 + v18;
  uint64_t v20 = &v8[v18];
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  long long v21 = *((_OWORD *)v20 + 1);
  long long v22 = *((_OWORD *)v20 + 2);
  long long v23 = *((_OWORD *)v20 + 3);
  v19[64] = v20[64];
  *((_OWORD *)v19 + 2) = v22;
  *((_OWORD *)v19 + 3) = v23;
  *((_OWORD *)v19 + 1) = v21;
  uint64_t v24 = v35[8];
  long long v25 = *(void **)((char *)v7 + v24);
  uint64_t v26 = *(void **)&v8[v24];
  *(void *)((char *)v7 + v24) = v26;
  id v27 = v26;

  uint64_t v28 = v35[9];
  uint64_t v29 = (char *)v7 + v28;
  uint64_t v30 = &v8[v28];
  *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
  long long v31 = *((_OWORD *)v30 + 1);
  long long v32 = *((_OWORD *)v30 + 2);
  long long v33 = *((_OWORD *)v30 + 3);
  v29[64] = v30[64];
  *((_OWORD *)v29 + 2) = v32;
  *((_OWORD *)v29 + 3) = v33;
  *((_OWORD *)v29 + 1) = v31;
  return a1;
}

uint64_t sub_24B67E2F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (_OWORD *)(a1 + v4);
  uint64_t v6 = a2 + v4;
  long long v7 = *(_OWORD *)(a2 + v4 + 16);
  *uint64_t v5 = *(_OWORD *)(a2 + v4);
  v5[1] = v7;
  long long v8 = *(_OWORD *)(a2 + v4 + 32);
  long long v9 = *(_OWORD *)(a2 + v4 + 48);
  long long v10 = *(_OWORD *)(a2 + v4 + 96);
  v5[5] = *(_OWORD *)(a2 + v4 + 80);
  v5[6] = v10;
  long long v11 = *(_OWORD *)(a2 + v4 + 64);
  v5[3] = v9;
  v5[4] = v11;
  void v5[2] = v8;
  uint64_t v12 = (int *)type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  uint64_t v13 = v12[6];
  long long v14 = (char *)v5 + v13;
  int v15 = (const void *)(v6 + v13);
  uint64_t v16 = sub_24B682C80();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 2, v16))
  {
    uint64_t v18 = sub_24B682C90();
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 2, v16);
  }
  uint64_t v19 = v12[7];
  uint64_t v20 = (char *)v5 + v19;
  uint64_t v21 = v6 + v19;
  long long v22 = *(_OWORD *)(v21 + 48);
  *((_OWORD *)v20 + 2) = *(_OWORD *)(v21 + 32);
  *((_OWORD *)v20 + 3) = v22;
  v20[64] = *(unsigned char *)(v21 + 64);
  long long v23 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + 1) = v23;
  *(void *)((char *)v5 + v12[8]) = *(void *)(v6 + v12[8]);
  uint64_t v24 = v12[9];
  long long v25 = (char *)v5 + v24;
  uint64_t v26 = v6 + v24;
  long long v27 = *(_OWORD *)(v26 + 48);
  *((_OWORD *)v25 + 2) = *(_OWORD *)(v26 + 32);
  *((_OWORD *)v25 + 3) = v27;
  v25[64] = *(unsigned char *)(v26 + 64);
  long long v28 = *(_OWORD *)(v26 + 16);
  *(_OWORD *)long long v25 = *(_OWORD *)v26;
  *((_OWORD *)v25 + 1) = v28;
  return a1;
}

void *sub_24B67E4BC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  long long v7 = (_OWORD *)((char *)a1 + v6);
  long long v8 = (char *)a2 + v6;
  long long v9 = *(_OWORD *)((char *)a2 + v6 + 16);
  *long long v7 = *(_OWORD *)((char *)a2 + v6);
  v7[1] = v9;
  long long v10 = *(_OWORD *)((char *)a2 + v6 + 48);
  v7[2] = *(_OWORD *)((char *)a2 + v6 + 32);
  v7[3] = v10;
  long long v11 = *(_OWORD *)((char *)a2 + v6 + 80);
  _OWORD v7[4] = *(_OWORD *)((char *)a2 + v6 + 64);
  v7[5] = v11;
  v7[6] = *(_OWORD *)((char *)a2 + v6 + 96);
  uint64_t v12 = (int *)type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  uint64_t v13 = v12[6];
  long long v14 = (char *)v7 + v13;
  int v15 = &v8[v13];
  uint64_t v16 = sub_24B682C80();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  id v35 = v14;
  LODWORD(v14) = v18(v14, 2, v16);
  int v19 = v18(v15, 2, v16);
  if (v14)
  {
    if (!v19)
    {
      (*(void (**)(void *, char *, uint64_t))(v17 + 32))(v35, v15, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v35, 0, 2, v16);
      goto LABEL_9;
    }
    size_t v20 = *(void *)(*(void *)(sub_24B682C90() - 8) + 64);
    uint64_t v21 = v35;
  }
  else
  {
    if (!v19)
    {
      (*(void (**)(void *, char *, uint64_t))(v17 + 40))(v35, v15, v16);
      goto LABEL_9;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v35, v16);
    size_t v20 = *(void *)(*(void *)(sub_24B682C90() - 8) + 64);
    uint64_t v21 = v35;
  }
  memcpy(v21, v15, v20);
LABEL_9:
  uint64_t v22 = v12[7];
  long long v23 = (char *)v7 + v22;
  uint64_t v24 = &v8[v22];
  long long v25 = *((_OWORD *)v24 + 3);
  *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
  *((_OWORD *)v23 + 3) = v25;
  v23[64] = v24[64];
  long long v26 = *((_OWORD *)v24 + 1);
  *(_OWORD *)long long v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v26;
  uint64_t v27 = v12[8];
  long long v28 = *(void **)((char *)v7 + v27);
  *(void *)((char *)v7 + v27) = *(void *)&v8[v27];

  uint64_t v29 = v12[9];
  uint64_t v30 = (char *)v7 + v29;
  long long v31 = &v8[v29];
  long long v32 = *((_OWORD *)v31 + 3);
  *((_OWORD *)v30 + 2) = *((_OWORD *)v31 + 2);
  *((_OWORD *)v30 + 3) = v32;
  v30[64] = v31[64];
  long long v33 = *((_OWORD *)v31 + 1);
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v33;
  return a1;
}

uint64_t sub_24B67E798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24B67E7AC);
}

uint64_t sub_24B67E7AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
    long long v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_24B67E85C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24B67E870);
}

uint64_t sub_24B67E870(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24B67E918()
{
  uint64_t result = type metadata accessor for ObjectCaptureSession.Frame.Camera(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24B67E9BC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24B682410();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    uint64_t v9 = (_OWORD *)((char *)a1 + v8);
    uint64_t v10 = (_OWORD *)((char *)a2 + v8);
    long long v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    v9[2] = v10[2];
    uint64_t v12 = a3[7];
    uint64_t v13 = a3[8];
    long long v14 = *(_OWORD *)((char *)a2 + v12);
    long long v15 = *(_OWORD *)((char *)a2 + v12 + 16);
    long long v16 = *(_OWORD *)((char *)a2 + v12 + 32);
    long long v17 = *(_OWORD *)((char *)a2 + v12 + 48);
    uint64_t v18 = (_OWORD *)((char *)a1 + v12);
    *uint64_t v18 = v14;
    v18[1] = v15;
    void v18[2] = v16;
    void v18[3] = v17;
    int v19 = (_OWORD *)((char *)a1 + v13);
    size_t v20 = (_OWORD *)((char *)a2 + v13);
    long long v21 = v20[3];
    v19[2] = v20[2];
    v19[3] = v21;
    long long v22 = v20[1];
    *int v19 = *v20;
    v19[1] = v22;
    uint64_t v23 = a3[9];
    uint64_t v24 = (_OWORD *)((char *)a1 + v23);
    long long v25 = (long long *)((char *)a2 + v23);
    long long v26 = *v25;
    long long v27 = v25[1];
    long long v28 = v25[3];
    void v24[2] = v25[2];
    v24[3] = v28;
    *uint64_t v24 = v26;
    v24[1] = v27;
  }
  return a1;
}

uint64_t sub_24B67EAF4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24B682410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  long long v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  v8[2] = v9[2];
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  long long v13 = *(_OWORD *)(a2 + v11);
  long long v14 = *(_OWORD *)(a2 + v11 + 16);
  long long v15 = *(_OWORD *)(a2 + v11 + 32);
  long long v16 = *(_OWORD *)(a2 + v11 + 48);
  long long v17 = (_OWORD *)(a1 + v11);
  *long long v17 = v13;
  v17[1] = v14;
  double v17[2] = v15;
  v17[3] = v16;
  uint64_t v18 = (_OWORD *)(a1 + v12);
  int v19 = (_OWORD *)(a2 + v12);
  long long v20 = v19[3];
  void v18[2] = v19[2];
  void v18[3] = v20;
  long long v21 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v21;
  uint64_t v22 = a3[9];
  uint64_t v23 = (_OWORD *)(a1 + v22);
  uint64_t v24 = (long long *)(a2 + v22);
  long long v25 = *v24;
  long long v26 = v24[1];
  long long v27 = v24[3];
  uint64_t v23[2] = v24[2];
  v23[3] = v27;
  *uint64_t v23 = v25;
  v23[1] = v26;
  return a1;
}

uint64_t sub_24B67EBD8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24B682410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  v8[2] = v9[2];
  uint64_t v10 = a3[7];
  uint64_t v11 = (_OWORD *)(a1 + v10);
  uint64_t v12 = (_OWORD *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  _DWORD v11[2] = v12[2];
  v11[3] = v12[3];
  uint64_t v13 = a3[8];
  long long v14 = (_OWORD *)(a1 + v13);
  long long v15 = (_OWORD *)(a2 + v13);
  *long long v14 = *v15;
  v14[1] = v15[1];
  v14[2] = v15[2];
  v14[3] = v15[3];
  uint64_t v16 = a3[9];
  long long v17 = (_OWORD *)(a1 + v16);
  uint64_t v18 = (_OWORD *)(a2 + v16);
  *long long v17 = *v18;
  v17[1] = v18[1];
  double v17[2] = v18[2];
  v17[3] = v18[3];
  return a1;
}

uint64_t sub_24B67ECFC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24B682410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  long long v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  v8[2] = v9[2];
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  long long v13 = *(_OWORD *)(a2 + v11);
  long long v14 = *(_OWORD *)(a2 + v11 + 16);
  long long v15 = *(_OWORD *)(a2 + v11 + 32);
  long long v16 = *(_OWORD *)(a2 + v11 + 48);
  long long v17 = (_OWORD *)(a1 + v11);
  *long long v17 = v13;
  v17[1] = v14;
  double v17[2] = v15;
  v17[3] = v16;
  uint64_t v18 = (_OWORD *)(a1 + v12);
  int v19 = (_OWORD *)(a2 + v12);
  long long v20 = v19[3];
  void v18[2] = v19[2];
  void v18[3] = v20;
  long long v21 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v21;
  uint64_t v22 = a3[9];
  uint64_t v23 = (_OWORD *)(a1 + v22);
  uint64_t v24 = (long long *)(a2 + v22);
  long long v25 = *v24;
  long long v26 = v24[1];
  long long v27 = v24[3];
  uint64_t v23[2] = v24[2];
  v23[3] = v27;
  *uint64_t v23 = v25;
  v23[1] = v26;
  return a1;
}

uint64_t sub_24B67EDE0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24B682410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  long long v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  v8[2] = v9[2];
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  long long v13 = (_OWORD *)(a1 + v11);
  long long v14 = (_OWORD *)(a2 + v11);
  long long v15 = v14[1];
  *long long v13 = *v14;
  v13[1] = v15;
  long long v16 = v14[3];
  void v13[2] = v14[2];
  v13[3] = v16;
  long long v17 = (_OWORD *)(a1 + v12);
  uint64_t v18 = (_OWORD *)(a2 + v12);
  long long v19 = v18[1];
  *long long v17 = *v18;
  v17[1] = v19;
  long long v20 = v18[3];
  double v17[2] = v18[2];
  v17[3] = v20;
  uint64_t v21 = a3[9];
  uint64_t v22 = (_OWORD *)(a1 + v21);
  uint64_t v23 = (_OWORD *)(a2 + v21);
  long long v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  long long v25 = v23[3];
  void v22[2] = v23[2];
  void v22[3] = v25;
  return a1;
}

uint64_t sub_24B67EEC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24B67EED8);
}

uint64_t sub_24B67EEDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24B67EEF0);
}

uint64_t sub_24B67EEF4()
{
  uint64_t result = sub_24B682410();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24B67EFA4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24B682410();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    uint64_t v9 = (_OWORD *)((char *)a1 + v8);
    long long v10 = (_OWORD *)((char *)a2 + v8);
    long long v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    v9[2] = v10[2];
    uint64_t v12 = a3[7];
    long long v13 = (_OWORD *)((char *)a1 + v12);
    long long v14 = (_OWORD *)((char *)a2 + v12);
    long long v15 = v14[1];
    *long long v13 = *v14;
    v13[1] = v15;
    long long v16 = v14[3];
    void v13[2] = v14[2];
    v13[3] = v16;
  }
  return a1;
}

uint64_t sub_24B67F0A4(uint64_t a1)
{
  uint64_t v2 = sub_24B682410();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_24B67F108(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24B682410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  long long v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  v8[2] = v9[2];
  uint64_t v11 = a3[7];
  uint64_t v12 = (_OWORD *)(a1 + v11);
  long long v13 = (_OWORD *)(a2 + v11);
  long long v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  long long v15 = v13[3];
  void v12[2] = v13[2];
  v12[3] = v15;
  return a1;
}

uint64_t sub_24B67F1B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24B682410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  v8[2] = v9[2];
  uint64_t v10 = a3[7];
  uint64_t v11 = (_OWORD *)(a1 + v10);
  uint64_t v12 = (_OWORD *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  _DWORD v11[2] = v12[2];
  v11[3] = v12[3];
  return a1;
}

uint64_t sub_24B67F284(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24B682410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  long long v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  v8[2] = v9[2];
  uint64_t v11 = a3[7];
  uint64_t v12 = (_OWORD *)(a1 + v11);
  long long v13 = (_OWORD *)(a2 + v11);
  long long v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  long long v15 = v13[3];
  void v12[2] = v13[2];
  v12[3] = v15;
  return a1;
}

uint64_t sub_24B67F334(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24B682410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  long long v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  v8[2] = v9[2];
  uint64_t v11 = a3[7];
  uint64_t v12 = (_OWORD *)(a1 + v11);
  long long v13 = (_OWORD *)(a2 + v11);
  long long v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  long long v15 = v13[3];
  void v12[2] = v13[2];
  v12[3] = v15;
  return a1;
}

uint64_t sub_24B67F3E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24B67F3F8);
}

uint64_t sub_24B67F3FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24B682410();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_24B67F468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24B67F47C);
}

uint64_t sub_24B67F480(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24B682410();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_24B67F4F0()
{
  uint64_t result = sub_24B682410();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

__n128 initializeWithCopy for GeoMetrics(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for GeoMetrics(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 29)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for GeoMetrics(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 28) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 29) = v3;
  return result;
}

ValueMetadata *type metadata accessor for GeoMetrics()
{
  return &type metadata for GeoMetrics;
}

__n128 initializeWithCopy for GeoDebugData(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 60) = *(_OWORD *)(a2 + 60);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for GeoDebugData(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 76)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for GeoDebugData(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 72) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 76) = v3;
  return result;
}

ValueMetadata *type metadata accessor for GeoDebugData()
{
  return &type metadata for GeoDebugData;
}

uint64_t sub_24B67F6A8()
{
  return type metadata accessor for OCObjectCentricPoseGraph(0);
}

uint64_t type metadata accessor for OCObjectCentricPoseGraph(uint64_t a1)
{
  return sub_24B56BBFC(a1, qword_2697D0AB0);
}

uint64_t sub_24B67F6D0()
{
  uint64_t result = sub_24B6823B0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

__n128 initializeWithCopy for CaptureFactors(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 45) = *(void *)(a2 + 45);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for CaptureFactors(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 53)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 44);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CaptureFactors(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 52) = 0;
    *(_DWORD *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 53) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 53) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 44) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CaptureFactors()
{
  return &type metadata for CaptureFactors;
}

uint64_t sub_24B67F86C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_24B67F8D4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24B682410();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24B67F944()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 104);
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_24B67F998(uint64_t a1)
{
  unsigned int v3 = (void *)(v1 + *(void *)(*(void *)v1 + 104));
  uint64_t result = swift_beginAccess();
  *unsigned int v3 = a1;
  return result;
}

uint64_t sub_24B67F9F0(uint64_t result, void *a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(uint64_t *)((char *)v2 + *(void *)(*v2 + 96));
  if (v4 < 0)
  {
    __break(1u);
  }
  else
  {
    if (v4)
    {
      uint64_t v5 = (void *)result;
      uint64_t v6 = 0;
      uint64_t v7 = *(void *)(v3 + 80);
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v9 = (uint64_t)v2 + *(void *)(v3 + 88);
      long long v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 24);
      uint64_t v11 = *(void *)(v8 + 72);
      uint64_t v12 = v4;
      do
      {
        uint64_t result = v10(*v5 + v6, v9, v7);
        v6 += v11;
        --v12;
      }
      while (v12);
    }
    *a2 = v4;
  }
  return result;
}

uint64_t *sub_24B67FAF0(uint64_t a1, uint64_t a2)
{
  return sub_24B67FB3C(a1, a2);
}

uint64_t *sub_24B67FB3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_24B6824D0();
  MEMORY[0x270FA5388](v7);
  *(uint64_t *)((char *)v2 + *(void *)(v6 + 120)) = 0;
  uint64_t v8 = *(void *)(v6 + 80);
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))((uint64_t)v3 + *(void *)(*v3 + 88), a2, v8);
  *(uint64_t *)((char *)v2 + *(void *)(*v2 + 96)) = a1;
  *(uint64_t *)((char *)v2 + *(void *)(*v2 + 112)) = 0;
  *(uint64_t *)((char *)v2 + *(void *)(*v2 + 104)) = 0;
  swift_retain();
  uint64_t v10 = sub_24B67FF20();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a2, v8);
  swift_release();
  uint64_t v11 = (uint64_t *)((char *)v3 + *(void *)(*v3 + 120));
  swift_beginAccess();
  *uint64_t v11 = v10;
  swift_release();
  return v2;
}

uint64_t sub_24B67FF20()
{
  sub_24B682A00();
  if (!v0)
  {
    swift_bridgeObjectRetain();
    uint64_t v1 = sub_24B682E60();
    swift_bridgeObjectRelease();
    if (!v1)
    {
      sub_24B682A30();
      swift_getWitnessTable();
      uint64_t v1 = sub_24B682FC0();
    }
    swift_bridgeObjectRelease();
  }
  return v1;
}

uint64_t sub_24B67FFD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *v2;
  if (a1 < 0 || (*(uint64_t (**)(void))(*v2 + 128))() <= a1)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(v4 + 80) - 8) + 56);
    return v9(a2, 1, 1);
  }
  else
  {
    sub_24B6806A8(a1);
    uint64_t v6 = (uint64_t *)((char *)v2 + *(void *)(*v2 + 120));
    uint64_t result = swift_beginAccess();
    if (*v6)
    {
      uint64_t v8 = *(void *)(v4 + 80);
      swift_retain();
      sub_24B682EB0();
      swift_release();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a2, 0, 1, v8);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_24B680148()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))(0);
}

uint64_t sub_24B680170()
{
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 128))();
  BOOL v2 = __OFSUB__(v1, 1);
  uint64_t result = v1 - 1;
  if (v2)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t))(*(void *)v0 + 216);
    return v4(result);
  }
  return result;
}

uint64_t sub_24B6801F4()
{
  uint64_t v1 = (void *)(v0 + *(void *)(*(void *)v0 + 104));
  uint64_t result = swift_beginAccess();
  *uint64_t v1 = 0;
  *(void *)(v0 + *(void *)(*(void *)v0 + 112)) = 0;
  return result;
}

BOOL sub_24B680260()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))() == 0;
}

BOOL sub_24B6802A0()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))() == *(void *)(v0 + *(void *)(*(void *)v0 + 96));
}

uint64_t sub_24B6802F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(*(void *)v2 + 80);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = MEMORY[0x270FA5388](a1);
  uint64_t v11 = &v25[-v10];
  uint64_t v13 = *(void *)(v12 + 112);
  uint64_t v14 = *(void *)(v2 + v13);
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = *(void *)(v2 + *(void *)(v9 + 96));
  if (!v17)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v16 == 0x8000000000000000 && v17 == -1) {
    goto LABEL_24;
  }
  *(void *)(v2 + v13) = v16 % v17;
  if ((*(uint64_t (**)(uint64_t))(*(void *)v2 + 256))(result))
  {
    long long v19 = (void *)(v2 + *(void *)(*(void *)v2 + 120));
    uint64_t result = swift_beginAccess();
    if (!*v19)
    {
LABEL_26:
      __break(1u);
      return result;
    }
    swift_retain();
    sub_24B682EB0();
    swift_release();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a2, 0, 1, v6);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, 1, 1, v6);
  }
  unint64_t v20 = *(void *)(v2 + v13);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v11, a1, v6);
  uint64_t v21 = v2 + *(void *)(*(void *)v2 + 120);
  uint64_t result = swift_beginAccess();
  if (!*(void *)v21)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_24B682EA0();
  uint64_t result = sub_24B682E90();
  if ((v20 & 0x8000000000000000) != 0) {
    goto LABEL_21;
  }
  if (*(void *)(*(void *)v21 + 16) <= v20)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v7 + 40))(*(void *)v21+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v20, v11, v6);
  uint64_t v22 = swift_endAccess();
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 128))(v22);
  if (__OFADD__(result, 1))
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v17 >= result + 1) {
    uint64_t v23 = result + 1;
  }
  else {
    uint64_t v23 = v17;
  }
  long long v24 = (uint64_t *)(v3 + *(void *)(*(void *)v3 + 104));
  uint64_t result = swift_beginAccess();
  *long long v24 = v23;
  return result;
}

BOOL sub_24B68063C(uint64_t a1)
{
  return (a1 & 0x8000000000000000) == 0 && (*(uint64_t (**)(void))(*(void *)v1 + 128))() > a1;
}

uint64_t sub_24B6806A8(uint64_t result)
{
  uint64_t v2 = *(void *)(v1 + *(void *)(*(void *)v1 + 112));
  BOOL v3 = __OFSUB__(v2, result);
  uint64_t v4 = v2 - result;
  if (v3)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v5 = *(void *)(v1 + *(void *)(*(void *)v1 + 96));
  BOOL v3 = __OFADD__(v4, v5);
  uint64_t v6 = v4 + v5;
  if (v3)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (!v5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v5 != -1 || v6 != 0x8000000000000000) {
    return v6 % v5;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_24B680734()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 88));
  swift_release();
  return v0;
}

uint64_t sub_24B6807C0()
{
  sub_24B680734();

  return swift_deallocClassInstance();
}

uint64_t sub_24B680818()
{
  uint64_t v1 = *(void *)(*v0 + 80);
  uint64_t v23 = sub_24B682CC0();
  uint64_t v2 = *(void *)(v23 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v23);
  uint64_t v5 = (char *)&v18 - v4;
  uint64_t v6 = *(void *)(v1 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v3);
  uint64_t v22 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t v11 = sub_24B6829E0();
  uint64_t v25 = v11;
  uint64_t v12 = *(uint64_t (**)(void))(*v0 + 128);
  long long v24 = v0;
  uint64_t result = v12();
  if ((result & 0x8000000000000000) == 0)
  {
    uint64_t v14 = result;
    if (!result) {
      return v11;
    }
    uint64_t v15 = *v24;
    unint64_t v20 = (void (**)(char *, char *, uint64_t))(v6 + 16);
    uint64_t v21 = (void (**)(char *, char *, uint64_t))(v6 + 32);
    uint64_t v16 = *(void (**)(uint64_t))(v15 + 216);
    uint64_t v18 = (uint64_t (**)(char *, uint64_t))(v2 + 8);
    long long v19 = (uint64_t (**)(char *, uint64_t))(v6 + 8);
    uint64_t v17 = result;
    while (v14 >= v17)
    {
      v16(--v17);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v5, 1, v1) == 1)
      {
        uint64_t result = (*v18)(v5, v23);
        if (!v17) {
          return v25;
        }
      }
      else
      {
        (*v21)(v10, v5, v1);
        (*v20)(v22, v10, v1);
        sub_24B682A30();
        sub_24B682A20();
        uint64_t result = (*v19)(v10, v1);
        if (!v17) {
          return v25;
        }
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_24B680B18()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for CircularBuffer()
{
  return sub_24B680BF8();
}

uint64_t sub_24B680BE0(uint64_t a1, void *a2)
{
  return sub_24B67F9F0(a1, a2);
}

uint64_t sub_24B680BF8()
{
  return swift_getGenericMetadata();
}

void sub_24B680C28()
{
}

void *sub_24B680C3C()
{
  return &unk_24B688A2C;
}

void *sub_24B680C48()
{
  return &unk_24B688A2E;
}

void *sub_24B680C54()
{
  return &unk_24B688A30;
}

void *sub_24B680C60()
{
  return &unk_24B688A32;
}

const __int16 *sub_24B680C6C()
{
  return asc_24B688A38;
}

__int16 *sub_24B680C78()
{
  return &asc_24B688A38[1];
}

__int16 *sub_24B680C84()
{
  return &asc_24B688A38[2];
}

void *sub_24B680C90()
{
  return &unk_24B688A3E;
}

void *sub_24B680C9C()
{
  return &unk_24B688A44;
}

void *sub_24B680CA8()
{
  return &unk_24B688A46;
}

void *sub_24B680CB4()
{
  return &unk_24B688A48;
}

void *sub_24B680CC0()
{
  return &unk_24B688A4A;
}

void *sub_24B680CCC()
{
  return &unk_24B688A4C;
}

void *sub_24B680CD8()
{
  return &unk_24B688A4E;
}

void *sub_24B680CE4()
{
  return &unk_24B688A50;
}

void *sub_24B680CF0()
{
  return &unk_24B688A52;
}

void *sub_24B680CFC()
{
  return &unk_24B688A54;
}

void *sub_24B680D08()
{
  return &unk_24B688A56;
}

void *sub_24B680D14()
{
  return &unk_24B688A58;
}

void *sub_24B680D20()
{
  return &unk_24B688A5A;
}

const __int16 *sub_24B680D2C()
{
  return aE;
}

__int16 *sub_24B680D38()
{
  return &aE[1];
}

__int16 *sub_24B680D44()
{
  return &aE[2];
}

void *sub_24B680D50()
{
  return &unk_24B688A70;
}

uint64_t sub_24B680D5C(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_24B680D9C(a1);
  return v2;
}

char *sub_24B680D9C(uint64_t a1)
{
  uint64_t v10 = *(void *)v1;
  uint64_t v11 = a1;
  uint64_t v2 = sub_24B682BC0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24B682B90();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_24B682640();
  MEMORY[0x270FA5388](v7 - 8);
  sub_24B5658E8();
  sub_24B682610();
  uint64_t v12 = MEMORY[0x263F8EE78];
  sub_24B680FFC();
  sub_24B562F04(&qword_2697CC0C0);
  sub_24B681054();
  sub_24B682D80();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8F130], v2);
  *((void *)v1 + 2) = sub_24B682C00();
  (*(void (**)(char *, uint64_t))(*(void *)(*(void *)(v10 + 80) - 8) + 32))(&v1[*(void *)(*(void *)v1 + 96)], v11);
  return v1;
}

unint64_t sub_24B680FFC()
{
  unint64_t result = qword_2697CC350;
  if (!qword_2697CC350)
  {
    sub_24B682B90();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697CC350);
  }
  return result;
}

unint64_t sub_24B681054()
{
  unint64_t result = qword_2697CC360;
  if (!qword_2697CC360)
  {
    sub_24B566158(&qword_2697CC0C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697CC360);
  }
  return result;
}

uint64_t sub_24B6810B0()
{
  return sub_24B682BD0();
}

uint64_t sub_24B681114@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 96);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t sub_24B6811C0(uint64_t a1)
{
  uint64_t v3 = *v1;
  sub_24B681314(a1);
  uint64_t v4 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 8);

  return v4(a1);
}

id *sub_24B68123C()
{
  unint64_t v1 = *v0;

  (*(void (**)(char *))(*(void *)(v1[10] - 8) + 8))((char *)v0 + *((void *)*v0 + 12));
  return v0;
}

uint64_t sub_24B6812BC()
{
  sub_24B68123C();

  return swift_deallocClassInstance();
}

uint64_t sub_24B681314(uint64_t a1)
{
  uint64_t v2 = *(void *)(*v1 + 80);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v5 = (char *)aBlock - v4;
  uint64_t v6 = v1[2];
  (*(void (**)(char *))(v3 + 16))((char *)aBlock - v4);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v2;
  *(void *)(v8 + 24) = v1;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v8 + v7, v5, v2);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_24B6816C8;
  *(void *)(v9 + 24) = v8;
  aBlock[4] = sub_24B5A2598;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B58EFF8;
  aBlock[3] = &unk_26FE916C0;
  uint64_t v10 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v10);
  _Block_release(v10);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_24B681534(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24B681544()
{
  return swift_release();
}

uint64_t sub_24B68154C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for Atomic()
{
  return sub_24B680BF8();
}

uint64_t sub_24B681608()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_24B6816C8()
{
  uint64_t v1 = *(uint64_t **)(v0 + 24);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80));
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 96);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 24))(v4, v2);
  return swift_endAccess();
}

uint64_t sub_24B6817A8()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_24B6817C0(__n128 a1, __n128 a2, __n128 a3, __n128 a4, double a5)
{
  uint64_t v6 = v5;
  uint64_t v10 = *(char **)(v5 + 48);
  uint64_t v8 = (char **)(v5 + 48);
  uint64_t v9 = v10;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v8 = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v9 = sub_24B681A84(0, *((void *)v9 + 2) + 1, 1, v9);
    *uint64_t v8 = v9;
  }
  unint64_t v13 = *((void *)v9 + 2);
  unint64_t v12 = *((void *)v9 + 3);
  if (v13 >= v12 >> 1)
  {
    uint64_t v9 = sub_24B681A84((char *)(v12 > 1), v13 + 1, 1, v9);
    *uint64_t v8 = v9;
  }
  *((void *)v9 + 2) = v13 + 1;
  uint64_t v14 = (__n128 *)&v9[80 * v13];
  v14[2] = a1;
  v14[3] = a2;
  v14[4] = a3;
  v14[5] = a4;
  v14[6].n128_f64[0] = a5;
  uint64_t v15 = *v8;
  unint64_t v16 = *((void *)*v8 + 2);
  if (v16 >= 3)
  {
    sub_24B681B8C(0, 1);
    uint64_t v15 = *v8;
    unint64_t v16 = *((void *)*v8 + 2);
  }
  if (v16 >= 2)
  {
    uint64_t v17 = &v15[80 * v16];
    float v18 = *((double *)v17 + 2) - *((double *)v17 - 8);
    if (v18 <= 0.0)
    {
      __break(1u);
    }
    else
    {
      float32x4_t v29 = *((float32x4_t *)v17 - 3);
      float32x4_t v31 = *((float32x4_t *)v17 - 2);
      float32x4_t v33 = *((float32x4_t *)v17 - 1);
      float32x4_t v35 = *(float32x4_t *)v17;
      simd_float4x4 v37 = __invert_f4(*((simd_float4x4 *)v17 - 2));
      int32x2_t v26 = (int32x2_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v29, v37.columns[1].f32[0]), v31, *(float32x2_t *)v37.columns[1].f32, 1), v33, (float32x4_t)v37.columns[1], 2), v35, (float32x4_t)v37.columns[1], 3).u64[0];
      float32x4_t v27 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v29, v37.columns[0].f32[0]), v31, *(float32x2_t *)v37.columns[0].f32, 1), v33, (float32x4_t)v37.columns[0], 2), v35, (float32x4_t)v37.columns[0], 3);
      int32x4_t v25 = (int32x4_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v29, v37.columns[2].f32[0]), v31, *(float32x2_t *)v37.columns[2].f32, 1), v33, (float32x4_t)v37.columns[2], 2), v35, (float32x4_t)v37.columns[2], 3);
      float32x4_t v36 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v29, v37.columns[3].f32[0]), v31, *(float32x2_t *)v37.columns[3].f32, 1), v33, (float32x4_t)v37.columns[3], 2), v35, (float32x4_t)v37.columns[3], 3);
      float v19 = sub_24B5FADE8(v27, v26, v25);
      float v20 = sub_24B5FAE50(*(double *)v27.i64, *(double *)&v26, *(double *)v25.i64, v36) / v18;
      if ((float)(v19 / v18) > 60.0 || v20 > 0.5)
      {
        *(void *)(v6 + 40) = 15;
        return;
      }
      uint64_t v22 = *(void *)(v6 + 40);
      BOOL v23 = __OFSUB__(v22, 1);
      uint64_t v24 = v22 - 1;
      if (!v23)
      {
        *(void *)(v6 + 40) = v24 & ~(v24 >> 63);
        return;
      }
    }
    __break(1u);
  }
}

uint64_t sub_24B6819FC()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

double sub_24B681A34()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 2;
  *(void *)(v0 + 24) = 0x3F00000042700000;
  *(void *)&double result = 15;
  *(_OWORD *)(v0 + 32) = xmmword_24B688AC0;
  *(void *)(v0 + 48) = MEMORY[0x263F8EE78];
  return result;
}

char *sub_24B681A84(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_24B562F04(&qword_2697CD1C8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  size_t v14 = 80 * v8;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v14);
  }
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_24B681B8C(unint64_t result, int64_t a2)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  unint64_t v6 = result;
  unint64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  double result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v9 <= *(void *)(v4 + 24) >> 1)
  {
    if (!v8) {
      goto LABEL_23;
    }
  }
  else
  {
    if (v5 <= v9) {
      int64_t v10 = v5 + v8;
    }
    else {
      int64_t v10 = v5;
    }
    double result = (unint64_t)sub_24B681A84((char *)result, v10, 1, (char *)v4);
    unint64_t v4 = result;
    if (!v8) {
      goto LABEL_23;
    }
  }
  uint64_t v11 = *(void *)(v4 + 16);
  BOOL v12 = __OFSUB__(v11, a2);
  uint64_t v13 = v11 - a2;
  if (v12) {
    goto LABEL_29;
  }
  double result = v4 + 32 + 80 * v6;
  size_t v14 = (const void *)(v4 + 32 + 80 * a2);
  size_t v15 = 80 * v13;
  if ((uint64_t)(80 * v6) < 80 * a2 || (result < (unint64_t)v14 + v15 ? (BOOL v16 = v6 == a2) : (BOOL v16 = 0), !v16)) {
    double result = (unint64_t)memmove((void *)result, v14, v15);
  }
  uint64_t v17 = *(void *)(v4 + 16);
  BOOL v12 = __OFADD__(v17, v8);
  uint64_t v18 = v17 + v8;
  if (!v12)
  {
    *(void *)(v4 + 16) = v18;
LABEL_23:
    *uint64_t v2 = v4;
    return result;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for VoxelIntegrationManager()
{
  return self;
}

__n128 initializeWithCopy for VoxelIntegrationManager.TransformWithTimestamp(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for VoxelIntegrationManager.TransformWithTimestamp(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 72)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for VoxelIntegrationManager.TransformWithTimestamp(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 72) = v3;
  return result;
}

ValueMetadata *type metadata accessor for VoxelIntegrationManager.TransformWithTimestamp()
{
  return &type metadata for VoxelIntegrationManager.TransformWithTimestamp;
}

const char *sub_24B681D60()
{
  return "1.1.0";
}

uint64_t sub_24B681D6C(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t sub_24B681DA0()
{
  return OCDataBufferGetSize();
}

uint64_t sub_24B681DA8()
{
  return MEMORY[0x270F1AE08](*(void *)(v0 + 16));
}

uint64_t sub_24B681DB0()
{
  return MEMORY[0x270F1ADF0](*(void *)(v0 + 16));
}

uint64_t sub_24B681DB8()
{
  return MEMORY[0x270F1AE00](*(void *)(v0 + 16));
}

id sub_24B681DC0()
{
  uint64_t v0 = swift_dynamicCastObjCProtocolConditional();
  if (!v0) {
    return 0;
  }
  uint64_t v1 = (void *)v0;
  swift_unknownObjectRetain();
  if (!objc_msgSend(v1, sel_supportsBufferWithIOSurface)
    || (IOSurface = (void *)OCDataBufferGetIOSurface()) == 0)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  id v3 = IOSurface;
  id v4 = objc_msgSend(v1, sel_newBufferWithIOSurface_, v3);
  swift_unknownObjectRelease();

  return v4;
}

void *sub_24B681E7C()
{
  IOSurface = (void *)OCDataBufferGetIOSurface();
  if (!IOSurface) {
    return 0;
  }
  uint64_t v1 = IOSurface;
  BaseAddress = IOSurfaceGetBaseAddress(v1);

  return BaseAddress;
}

uint64_t sub_24B681EC4(uint64_t a1)
{
  return MEMORY[0x270F1ADF8](*(void *)(v1 + 16), a1);
}

uint64_t OCDataBuffer.deinit()
{
  return v0;
}

uint64_t OCDataBuffer.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for OCDataBuffer()
{
  return self;
}

uint64_t method lookup function for OCDataBuffer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for OCDataBuffer);
}

uint64_t dispatch thunk of OCDataBuffer.count.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of OCDataBuffer.numBytes.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of OCDataBuffer.stride.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of OCDataBuffer.formatType.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of OCDataBuffer.asMTLBuffer(from:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of OCDataBuffer.baseAddress()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of OCDataBuffer.subscript.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t sub_24B682060()
{
  return MEMORY[0x270EEE098]();
}

uint64_t sub_24B682070()
{
  return MEMORY[0x270EEE258]();
}

uint64_t sub_24B682080()
{
  return MEMORY[0x270EEE618]();
}

uint64_t sub_24B682090()
{
  return MEMORY[0x270EEE638]();
}

uint64_t sub_24B6820A0()
{
  return MEMORY[0x270EEE648]();
}

uint64_t sub_24B6820B0()
{
  return MEMORY[0x270EEE658]();
}

uint64_t sub_24B6820C0()
{
  return MEMORY[0x270EEE670]();
}

uint64_t sub_24B6820D0()
{
  return MEMORY[0x270EEE688]();
}

uint64_t sub_24B6820E0()
{
  return MEMORY[0x270EEE920]();
}

uint64_t sub_24B6820F0()
{
  return MEMORY[0x270EEE930]();
}

uint64_t sub_24B682100()
{
  return MEMORY[0x270EEE940]();
}

uint64_t sub_24B682110()
{
  return MEMORY[0x270EEE950]();
}

uint64_t sub_24B682120()
{
  return MEMORY[0x270EEEF00]();
}

uint64_t sub_24B682130()
{
  return MEMORY[0x270EEEFF8]();
}

uint64_t sub_24B682180()
{
  return MEMORY[0x270EEF7C8]();
}

uint64_t sub_24B6821B0()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_24B6821C0()
{
  return MEMORY[0x270EEFBC0]();
}

uint64_t sub_24B6821D0()
{
  return MEMORY[0x270EEFC48]();
}

uint64_t sub_24B6821E0()
{
  return MEMORY[0x270EEFC58]();
}

uint64_t sub_24B6821F0()
{
  return MEMORY[0x270EEFC70]();
}

uint64_t sub_24B682200()
{
  return MEMORY[0x270EEFC88]();
}

uint64_t sub_24B682210()
{
  return MEMORY[0x270EEFCA0]();
}

uint64_t sub_24B682220()
{
  return MEMORY[0x270EEFCB0]();
}

uint64_t sub_24B682230()
{
  return MEMORY[0x270EEFCD0]();
}

uint64_t sub_24B682240()
{
  return MEMORY[0x270EEFCE0]();
}

uint64_t sub_24B682250()
{
  return MEMORY[0x270EEFD28]();
}

uint64_t sub_24B682260()
{
  return MEMORY[0x270EEFD58]();
}

uint64_t sub_24B682270()
{
  return MEMORY[0x270EEFD70]();
}

uint64_t sub_24B682280()
{
  return MEMORY[0x270EEFD78]();
}

uint64_t sub_24B682290()
{
  return MEMORY[0x270EEFD90]();
}

uint64_t sub_24B6822A0()
{
  return MEMORY[0x270EEFDF0]();
}

uint64_t sub_24B6822B0()
{
  return MEMORY[0x270EEFE20]();
}

uint64_t sub_24B6822C0()
{
  return MEMORY[0x270EEFE68]();
}

uint64_t sub_24B6822D0()
{
  return MEMORY[0x270EEFE80]();
}

uint64_t sub_24B6822E0()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_24B6822F0()
{
  return MEMORY[0x270EEFFB0]();
}

uint64_t sub_24B682300()
{
  return MEMORY[0x270EF0070]();
}

uint64_t sub_24B682310()
{
  return MEMORY[0x270EF0120]();
}

uint64_t sub_24B682320()
{
  return MEMORY[0x270EF0178]();
}

uint64_t sub_24B682330()
{
  return MEMORY[0x270EF01C0]();
}

uint64_t sub_24B682340()
{
  return MEMORY[0x270EF0700]();
}

uint64_t sub_24B682350()
{
  return MEMORY[0x270EF0998]();
}

uint64_t sub_24B682360()
{
  return MEMORY[0x270EF0AF8]();
}

uint64_t sub_24B682370()
{
  return MEMORY[0x270EF0BA8]();
}

uint64_t sub_24B682380()
{
  return MEMORY[0x270EF0BB8]();
}

uint64_t sub_24B682390()
{
  return MEMORY[0x270EF0BE8]();
}

uint64_t sub_24B6823A0()
{
  return MEMORY[0x270EF0C30]();
}

uint64_t sub_24B6823B0()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_24B6823C0()
{
  return MEMORY[0x270EF0C58]();
}

uint64_t sub_24B6823D0()
{
  return MEMORY[0x270EF0C68]();
}

uint64_t sub_24B6823E0()
{
  return MEMORY[0x270EF0C88]();
}

uint64_t sub_24B6823F0()
{
  return MEMORY[0x270EF0CB8]();
}

uint64_t sub_24B682400()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_24B682410()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_24B682420()
{
  return MEMORY[0x270EF0D78]();
}

uint64_t sub_24B682430()
{
  return MEMORY[0x270EF0EE0]();
}

uint64_t sub_24B682440()
{
  return MEMORY[0x270EF10A8]();
}

uint64_t sub_24B682450()
{
  return MEMORY[0x270FA06B8]();
}

uint64_t sub_24B682460()
{
  return MEMORY[0x270FA06C8]();
}

uint64_t sub_24B682470()
{
  return MEMORY[0x270FA06D8]();
}

uint64_t sub_24B682480()
{
  return MEMORY[0x270FA16A8]();
}

uint64_t sub_24B682490()
{
  return MEMORY[0x270FA1828]();
}

uint64_t sub_24B6824A0()
{
  return MEMORY[0x270FA1938]();
}

uint64_t sub_24B6824B0()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_24B6824C0()
{
  return MEMORY[0x270FA2E08]();
}

uint64_t sub_24B6824D0()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_24B6824E0()
{
  return MEMORY[0x270EE3B98]();
}

uint64_t sub_24B6824F0()
{
  return MEMORY[0x270EE3C40]();
}

uint64_t sub_24B682500()
{
  return MEMORY[0x270EE3C50]();
}

uint64_t sub_24B682510()
{
  return MEMORY[0x270EE3C70]();
}

uint64_t sub_24B682520()
{
  return MEMORY[0x270EE3D78]();
}

uint64_t sub_24B682530()
{
  return MEMORY[0x270EE3DA8]();
}

uint64_t sub_24B682540()
{
  return MEMORY[0x270EE3DB0]();
}

uint64_t sub_24B682550()
{
  return MEMORY[0x270EE3DB8]();
}

uint64_t sub_24B682560()
{
  return MEMORY[0x270EE3DD8]();
}

uint64_t sub_24B682570()
{
  return MEMORY[0x270EE3DE0]();
}

uint64_t sub_24B682580()
{
  return MEMORY[0x270EE3E08]();
}

uint64_t sub_24B682590()
{
  return MEMORY[0x270EE3E98]();
}

uint64_t sub_24B6825A0()
{
  return MEMORY[0x270EE3F78]();
}

uint64_t sub_24B6825B0()
{
  return MEMORY[0x270EE4008]();
}

uint64_t sub_24B6825C0()
{
  return MEMORY[0x270FA0970]();
}

uint64_t sub_24B6825D0()
{
  return MEMORY[0x270FA09A8]();
}

uint64_t sub_24B6825E0()
{
  return MEMORY[0x270FA09D0]();
}

uint64_t sub_24B6825F0()
{
  return MEMORY[0x270FA09E8]();
}

uint64_t sub_24B682600()
{
  return MEMORY[0x270FA0A00]();
}

uint64_t sub_24B682610()
{
  return MEMORY[0x270FA0A10]();
}

uint64_t sub_24B682620()
{
  return MEMORY[0x270FA0A18]();
}

uint64_t sub_24B682630()
{
  return MEMORY[0x270FA0A28]();
}

uint64_t sub_24B682640()
{
  return MEMORY[0x270FA0A48]();
}

uint64_t sub_24B682650()
{
  return MEMORY[0x270FA0A98]();
}

uint64_t sub_24B682660()
{
  return MEMORY[0x270FA0AC0]();
}

uint64_t sub_24B682670()
{
  return MEMORY[0x270FA0AD8]();
}

uint64_t sub_24B682680()
{
  return MEMORY[0x270FA0B00]();
}

uint64_t sub_24B682690()
{
  return MEMORY[0x270FA0B30]();
}

uint64_t sub_24B6826A0()
{
  return MEMORY[0x270FA0B60]();
}

uint64_t sub_24B6826B0()
{
  return MEMORY[0x270FA0B70]();
}

uint64_t sub_24B6826C0()
{
  return MEMORY[0x270FA0B98]();
}

uint64_t sub_24B6826D0()
{
  return MEMORY[0x270FA0BA8]();
}

uint64_t sub_24B6826E0()
{
  return MEMORY[0x270FA0BB0]();
}

uint64_t sub_24B6826F0()
{
  return MEMORY[0x270FA0BC8]();
}

uint64_t sub_24B682700()
{
  return MEMORY[0x270FA0BF0]();
}

uint64_t sub_24B682710()
{
  return MEMORY[0x270EF1818]();
}

uint64_t sub_24B682720()
{
  return MEMORY[0x270EF1820]();
}

uint64_t sub_24B682730()
{
  return MEMORY[0x270EF1830]();
}

uint64_t sub_24B682740()
{
  return MEMORY[0x270EF1840]();
}

uint64_t sub_24B682750()
{
  return MEMORY[0x270F9D318]();
}

uint64_t sub_24B682760()
{
  return MEMORY[0x270F9D320]();
}

uint64_t sub_24B682770()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_24B682780()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_24B682790()
{
  return MEMORY[0x270EF18A8]();
}

uint64_t sub_24B6827A0()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_24B6827B0()
{
  return MEMORY[0x270EF19C8]();
}

uint64_t sub_24B6827C0()
{
  return MEMORY[0x270EF19E0]();
}

uint64_t sub_24B6827D0()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_24B6827E0()
{
  return MEMORY[0x270EF1A10]();
}

uint64_t sub_24B6827F0()
{
  return MEMORY[0x270EF1A50]();
}

uint64_t sub_24B682800()
{
  return MEMORY[0x270EF1AA8]();
}

uint64_t sub_24B682810()
{
  return MEMORY[0x270EF1AD0]();
}

uint64_t sub_24B682820()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_24B682830()
{
  return MEMORY[0x270F9D5F8]();
}

uint64_t sub_24B682840()
{
  return MEMORY[0x270F9D620]();
}

uint64_t sub_24B682850()
{
  return MEMORY[0x270F9D6B8]();
}

uint64_t sub_24B682860()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_24B682870()
{
  return MEMORY[0x270F9D750]();
}

uint64_t sub_24B682880()
{
  return MEMORY[0x270F9D778]();
}

uint64_t sub_24B682890()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_24B6828B0()
{
  return MEMORY[0x270F9D7C0]();
}

uint64_t sub_24B6828C0()
{
  return MEMORY[0x270F9D7D8]();
}

uint64_t sub_24B6828D0()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_24B6828E0()
{
  return MEMORY[0x270F9D7E8]();
}

uint64_t sub_24B6828F0()
{
  return MEMORY[0x270F9D800]();
}

uint64_t sub_24B682910()
{
  return MEMORY[0x270F9D810]();
}

uint64_t sub_24B682920()
{
  return MEMORY[0x270F9D860]();
}

uint64_t sub_24B682930()
{
  return MEMORY[0x270F9D8B0]();
}

uint64_t sub_24B682940()
{
  return MEMORY[0x270F9D8E0]();
}

uint64_t sub_24B682950()
{
  return MEMORY[0x270F9D8F0]();
}

uint64_t sub_24B682960()
{
  return MEMORY[0x270F9DA70]();
}

uint64_t sub_24B682970()
{
  return MEMORY[0x270F9DBA0]();
}

uint64_t sub_24B682980()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_24B682990()
{
  return MEMORY[0x270EF1BA8]();
}

uint64_t sub_24B6829A0()
{
  return MEMORY[0x270EF1BB8]();
}

uint64_t sub_24B6829B0()
{
  return MEMORY[0x270F9DBB0]();
}

uint64_t sub_24B6829C0()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_24B6829D0()
{
  return MEMORY[0x270F9DBF0]();
}

uint64_t sub_24B6829E0()
{
  return MEMORY[0x270F9DC10]();
}

uint64_t sub_24B6829F0()
{
  return MEMORY[0x270F9DC20]();
}

uint64_t sub_24B682A00()
{
  return MEMORY[0x270F9DC28]();
}

uint64_t sub_24B682A10()
{
  return MEMORY[0x270F9DC50]();
}

uint64_t sub_24B682A20()
{
  return MEMORY[0x270F9DC88]();
}

uint64_t sub_24B682A30()
{
  return MEMORY[0x270F9DCD8]();
}

uint64_t sub_24B682A40()
{
  return MEMORY[0x270F9DD60]();
}

uint64_t sub_24B682A50()
{
  return MEMORY[0x270F9DDA0]();
}

uint64_t sub_24B682A60()
{
  return MEMORY[0x270F9DDF8]();
}

uint64_t sub_24B682A70()
{
  return MEMORY[0x270F9DE48]();
}

uint64_t sub_24B682A80()
{
  return MEMORY[0x270EF1C98]();
}

uint64_t sub_24B682A90()
{
  return MEMORY[0x270EF1CA8]();
}

uint64_t sub_24B682AA0()
{
  return MEMORY[0x270EF1CC0]();
}

uint64_t sub_24B682AB0()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_24B682AC0()
{
  return MEMORY[0x270F9C778]();
}

uint64_t sub_24B682AD0()
{
  return MEMORY[0x270F9C780]();
}

uint64_t sub_24B682AE0()
{
  return MEMORY[0x270EE5848]();
}

uint64_t sub_24B682AF0()
{
  return MEMORY[0x270EF1DE8]();
}

uint64_t sub_24B682B00()
{
  return MEMORY[0x270FA2E40]();
}

uint64_t sub_24B682B10()
{
  return MEMORY[0x270FA2E58]();
}

uint64_t sub_24B682B20()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_24B682B30()
{
  return MEMORY[0x270FA2E80]();
}

uint64_t sub_24B682B40()
{
  return MEMORY[0x270FA2F20]();
}

uint64_t sub_24B682B50()
{
  return MEMORY[0x270F9C7A0]();
}

uint64_t sub_24B682B60()
{
  return MEMORY[0x270F9C7B0]();
}

uint64_t sub_24B682B70()
{
  return MEMORY[0x270FA0C10]();
}

uint64_t sub_24B682B80()
{
  return MEMORY[0x270FA0C38]();
}

uint64_t sub_24B682B90()
{
  return MEMORY[0x270FA0C50]();
}

uint64_t sub_24B682BA0()
{
  return MEMORY[0x270FA0C90]();
}

uint64_t sub_24B682BB0()
{
  return MEMORY[0x270FA0CD0]();
}

uint64_t sub_24B682BC0()
{
  return MEMORY[0x270FA0D50]();
}

uint64_t sub_24B682BD0()
{
  return MEMORY[0x270FA0D88]();
}

uint64_t sub_24B682BE0()
{
  return MEMORY[0x270FA0DA0]();
}

uint64_t sub_24B682BF0()
{
  return MEMORY[0x270FA0DB0]();
}

uint64_t sub_24B682C00()
{
  return MEMORY[0x270FA0DB8]();
}

uint64_t sub_24B682C10()
{
  return MEMORY[0x270FA0DD0]();
}

uint64_t sub_24B682C20()
{
  return MEMORY[0x270F9C8D8]();
}

uint64_t sub_24B682C30()
{
  return MEMORY[0x270EF2068]();
}

uint64_t sub_24B682C40()
{
  return MEMORY[0x270FA0880]();
}

uint64_t sub_24B682C50()
{
  return MEMORY[0x270FA0888]();
}

uint64_t sub_24B682C60()
{
  return MEMORY[0x270FA0890]();
}

uint64_t sub_24B682C70()
{
  return MEMORY[0x270F9C7B8]();
}

uint64_t sub_24B682C80()
{
  return MEMORY[0x270F9C7C0]();
}

uint64_t sub_24B682C90()
{
  return MEMORY[0x270F9C7C8]();
}

uint64_t sub_24B682CA0()
{
  return MEMORY[0x270F9C7D0]();
}

uint64_t sub_24B682CB0()
{
  return MEMORY[0x270FA11A0]();
}

uint64_t sub_24B682CC0()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_24B682CD0()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_24B682CE0()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_24B682CF0()
{
  return MEMORY[0x270EF23E8]();
}

uint64_t sub_24B682D00()
{
  return MEMORY[0x270EF2478]();
}

uint64_t sub_24B682D10()
{
  return MEMORY[0x270EF24A0]();
}

uint64_t sub_24B682D20()
{
  return MEMORY[0x270EF2568]();
}

uint64_t sub_24B682D30()
{
  return MEMORY[0x270EF2590]();
}

uint64_t sub_24B682D40()
{
  return MEMORY[0x270EF25B0]();
}

uint64_t sub_24B682D50()
{
  return MEMORY[0x270F9E670]();
}

uint64_t sub_24B682D60()
{
  return MEMORY[0x270F9E730]();
}

uint64_t sub_24B682D80()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_24B682D90()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_24B682DA0()
{
  return MEMORY[0x270F9E8C0]();
}

uint64_t sub_24B682DB0()
{
  return MEMORY[0x270F9E8C8]();
}

uint64_t sub_24B682DC0()
{
  return MEMORY[0x270F9E8E8]();
}

uint64_t sub_24B682DD0()
{
  return MEMORY[0x270F9E940]();
}

uint64_t sub_24B682DE0()
{
  return MEMORY[0x270F9E948]();
}

uint64_t sub_24B682DF0()
{
  return MEMORY[0x270F9E950]();
}

uint64_t sub_24B682E00()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_24B682E10()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_24B682E20()
{
  return MEMORY[0x270F9E970]();
}

uint64_t sub_24B682E30()
{
  return MEMORY[0x270F9E988]();
}

uint64_t sub_24B682E40()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_24B682E50()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_24B682E60()
{
  return MEMORY[0x270F9EA20]();
}

uint64_t sub_24B682E70()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_24B682E80()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_24B682E90()
{
  return MEMORY[0x270F9EBF0]();
}

uint64_t sub_24B682EA0()
{
  return MEMORY[0x270F9EC90]();
}

uint64_t sub_24B682EB0()
{
  return MEMORY[0x270F9ECB8]();
}

uint64_t sub_24B682EC0()
{
  return MEMORY[0x270F9ED20]();
}

uint64_t sub_24B682ED0()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_24B682EE0()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_24B682EF0()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_24B682F00()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_24B682F10()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_24B682F20()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_24B682F30()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_24B682F40()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_24B682F50()
{
  return MEMORY[0x270F9F0D0]();
}

uint64_t sub_24B682F70()
{
  return MEMORY[0x270F9F210]();
}

uint64_t sub_24B682F80()
{
  return MEMORY[0x270F9F4C8]();
}

uint64_t sub_24B682F90()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_24B682FA0()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_24B682FB0()
{
  return MEMORY[0x270F9F920]();
}

uint64_t sub_24B682FC0()
{
  return MEMORY[0x270F9FA60]();
}

uint64_t sub_24B682FD0()
{
  return MEMORY[0x270F9FAD0]();
}

uint64_t sub_24B682FE0()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_24B682FF0()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_24B683020()
{
  return MEMORY[0x270EF2680]();
}

uint64_t sub_24B683030()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_24B683040()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_24B683050()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_24B683060()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_24B683070()
{
  return MEMORY[0x270F9FC30]();
}

uint64_t sub_24B683080()
{
  return MEMORY[0x270F9FC40]();
}

uint64_t sub_24B683090()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_24B6830A0()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_24B6830B0()
{
  return MEMORY[0x270F9FC68]();
}

uint64_t sub_24B6830C0()
{
  return MEMORY[0x270F9FC78]();
}

uint64_t sub_24B6830D0()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_24B6830E0()
{
  return MEMORY[0x270EF2760]();
}

uint64_t ARReplaySensorClassForMovieURL()
{
  return MEMORY[0x270EDDF60]();
}

uint64_t ARVisionCameraToRenderingCoordinateTransform()
{
  return MEMORY[0x270EDDF80]();
}

CFTypeID CFDataGetTypeID(void)
{
  return MEMORY[0x270EE4838]();
}

CFDictionaryRef CFDictionaryCreateCopy(CFAllocatorRef allocator, CFDictionaryRef theDict)
{
  return (CFDictionaryRef)MEMORY[0x270EE4910](allocator, theDict);
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return MEMORY[0x270EE4A30](cf);
}

CFTypeID CFStringGetTypeID(void)
{
  return MEMORY[0x270EE5218]();
}

CFURLRef CFURLCreateWithFileSystemPath(CFAllocatorRef allocator, CFStringRef filePath, CFURLPathStyle pathStyle, Boolean isDirectory)
{
  return (CFURLRef)MEMORY[0x270EE53F0](allocator, filePath, pathStyle, isDirectory);
}

CGContextRef CGBitmapContextCreate(void *data, size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow, CGColorSpaceRef space, uint32_t bitmapInfo)
{
  return (CGContextRef)MEMORY[0x270EE59E8](data, width, height, bitsPerComponent, bytesPerRow, space, *(void *)&bitmapInfo);
}

CGColorSpaceRef CGColorSpaceCreateWithName(CFStringRef name)
{
  return (CGColorSpaceRef)MEMORY[0x270EE5CA8](name);
}

void CGImageDestinationAddImage(CGImageDestinationRef idst, CGImageRef image, CFDictionaryRef properties)
{
}

CGImageDestinationRef CGImageDestinationCreateWithURL(CFURLRef url, CFStringRef type, size_t count, CFDictionaryRef options)
{
  return (CGImageDestinationRef)MEMORY[0x270EF4F38](url, type, count, options);
}

BOOL CGImageDestinationFinalize(CGImageDestinationRef idst)
{
  return MEMORY[0x270EF4F48](idst);
}

size_t CGImageGetHeight(CGImageRef image)
{
  return MEMORY[0x270EE6800](image);
}

size_t CGImageGetWidth(CGImageRef image)
{
  return MEMORY[0x270EE6868](image);
}

CFDictionaryRef CGImageSourceCopyAuxiliaryDataInfoAtIndex(CGImageSourceRef isrc, size_t index, CFStringRef auxiliaryImageDataType)
{
  return (CFDictionaryRef)MEMORY[0x270EF4FE8](isrc, index, auxiliaryImageDataType);
}

CFDictionaryRef CGImageSourceCopyPropertiesAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return (CFDictionaryRef)MEMORY[0x270EF5000](isrc, index, options);
}

CGImageRef CGImageSourceCreateImageAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return (CGImageRef)MEMORY[0x270EF5018](isrc, index, options);
}

CGImageRef CGImageSourceCreateThumbnailAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return (CGImageRef)MEMORY[0x270EF5028](isrc, index, options);
}

CGImageSourceRef CGImageSourceCreateWithURL(CFURLRef url, CFDictionaryRef options)
{
  return (CGImageSourceRef)MEMORY[0x270EF5040](url, options);
}

Float64 CMTimeGetSeconds(CMTime *time)
{
  MEMORY[0x270EE7E08](time);
  return result;
}

uint64_t CPGAddSampleCallbackBundleCreate()
{
  return MEMORY[0x270F1B768]();
}

uint64_t CPGAddSampleCallbackBundleRelease()
{
  return MEMORY[0x270F1B770]();
}

uint64_t CPGAddSampleCallbackBundleSetStreamProcessingCallback()
{
  return MEMORY[0x270F1B778]();
}

uint64_t CPGAddSampleStreamProcessingOutputGetFlipRecommendation()
{
  return MEMORY[0x270F1B780]();
}

uint64_t CPGAddSampleStreamProcessingOutputRelease()
{
  return MEMORY[0x270F1B788]();
}

uint64_t CPGAddSampleStreamProcessingOutputRetain()
{
  return MEMORY[0x270F1B790]();
}

uint64_t CPGBoundingBoxCreateFromTransform()
{
  return MEMORY[0x270F1B798]();
}

uint64_t CPGBoundingBoxGetTransform()
{
  return MEMORY[0x270F1B7A0]();
}

uint64_t CPGBoundingBoxRelease()
{
  return MEMORY[0x270F1B7A8]();
}

uint64_t CPGCameraCreateWithIntrinsicsExtrinsicsResolution()
{
  return MEMORY[0x270F1B7B0]();
}

uint64_t CPGCameraGetTransform()
{
  return MEMORY[0x270F1B7B8]();
}

uint64_t CPGCameraRelease()
{
  return MEMORY[0x270F1B7C0]();
}

uint64_t CPGDepthPointCloudAddPoint()
{
  return MEMORY[0x270F1B7C8]();
}

uint64_t CPGDepthPointCloudCreateWithSensorConfig()
{
  return MEMORY[0x270F1B7D0]();
}

uint64_t CPGDepthPointCloudGetNumberOfPoints()
{
  return MEMORY[0x270F1B7D8]();
}

uint64_t CPGDepthPointCloudRelease()
{
  return MEMORY[0x270F1B7E0]();
}

uint64_t CPGFinalizeInputCallbackBundleCreate()
{
  return MEMORY[0x270F1B7E8]();
}

uint64_t CPGFinalizeInputCallbackBundleRelease()
{
  return MEMORY[0x270F1B7F0]();
}

uint64_t CPGFinalizeInputCallbackBundleSetCompletionCallback()
{
  return MEMORY[0x270F1B7F8]();
}

uint64_t CPGFinalizeInputResultGetErrorCode()
{
  return MEMORY[0x270F1B800]();
}

uint64_t CPGFinalizeInputResultRelease()
{
  return MEMORY[0x270F1B808]();
}

uint64_t CPGFinalizeInputResultRetain()
{
  return MEMORY[0x270F1B810]();
}

uint64_t CPGLocalizationUpdatesGetObjectTransform()
{
  return MEMORY[0x270F1B818]();
}

uint64_t CPGLocalizationUpdatesGetState()
{
  return MEMORY[0x270F1B820]();
}

uint64_t CPGMaskingOptionsCreate()
{
  return MEMORY[0x270F1B828]();
}

uint64_t CPGMaskingOptionsRelease()
{
  return MEMORY[0x270F1B830]();
}

uint64_t CPGMaskingOptionsSetMaskingType()
{
  return MEMORY[0x270F1B838]();
}

uint64_t CPGObjectTransformGetTransformMatrix()
{
  return MEMORY[0x270F1B840]();
}

uint64_t CPGObjectTransformRelease()
{
  return MEMORY[0x270F1B848]();
}

uint64_t CPGOutputCreateWithTransform()
{
  return MEMORY[0x270F1B850]();
}

uint64_t CPGOutputGetFailure()
{
  return MEMORY[0x270F1B858]();
}

uint64_t CPGOutputGetModelURL()
{
  return MEMORY[0x270F1B860]();
}

uint64_t CPGOutputGetObjAssetsURLs()
{
  return MEMORY[0x270F1B868]();
}

uint64_t CPGOutputGetProperties()
{
  return MEMORY[0x270F1B870]();
}

uint64_t CPGOutputGetQuadMeshObjAssetsURLs()
{
  return MEMORY[0x270F1B878]();
}

uint64_t CPGOutputGetQuadMeshUsdaAssetsURLs()
{
  return MEMORY[0x270F1B880]();
}

uint64_t CPGOutputGetSfmMap()
{
  return MEMORY[0x270F1B888]();
}

uint64_t CPGOutputGetUsdaAssetsURLs()
{
  return MEMORY[0x270F1B890]();
}

uint64_t CPGOutputModelOptionsCreate()
{
  return MEMORY[0x270F1B898]();
}

uint64_t CPGOutputModelOptionsGetMaxPolyCount()
{
  return MEMORY[0x270F1B8A0]();
}

uint64_t CPGOutputModelOptionsGetMaxTextureResolution()
{
  return MEMORY[0x270F1B8A8]();
}

uint64_t CPGOutputModelOptionsGetTextureDestination()
{
  return MEMORY[0x270F1B8B0]();
}

uint64_t CPGOutputModelOptionsGetTextureFormat()
{
  return MEMORY[0x270F1B8B8]();
}

uint64_t CPGOutputModelOptionsGetTextureLossyCompressionQuality()
{
  return MEMORY[0x270F1B8C0]();
}

uint64_t CPGOutputModelOptionsRelease()
{
  return MEMORY[0x270F1B8C8]();
}

uint64_t CPGOutputModelOptionsSetMaxPolyCount()
{
  return MEMORY[0x270F1B8D0]();
}

uint64_t CPGOutputModelOptionsSetMaxTextureResolution()
{
  return MEMORY[0x270F1B8D8]();
}

uint64_t CPGOutputModelOptionsSetTextureDestination()
{
  return MEMORY[0x270F1B8E0]();
}

uint64_t CPGOutputModelOptionsSetTextureFormat()
{
  return MEMORY[0x270F1B8E8]();
}

uint64_t CPGOutputModelOptionsSetTextureLossyCompressionQuality()
{
  return MEMORY[0x270F1B8F0]();
}

uint64_t CPGOutputRelease()
{
  return MEMORY[0x270F1B8F8]();
}

uint64_t CPGOutputRetain()
{
  return MEMORY[0x270F1B900]();
}

uint64_t CPGProcessingCallbackBundleCreate()
{
  return MEMORY[0x270F1B908]();
}

uint64_t CPGProcessingCallbackBundleRelease()
{
  return MEMORY[0x270F1B910]();
}

uint64_t CPGProcessingCallbackBundleSetCompleteOutputCallback()
{
  return MEMORY[0x270F1B918]();
}

uint64_t CPGProcessingCallbackBundleSetProgressCallback()
{
  return MEMORY[0x270F1B920]();
}

uint64_t CPGProcessingCallbackBundleSetWarningCallback()
{
  return MEMORY[0x270F1B928]();
}

uint64_t CPGProcessingFailureGetCode()
{
  return MEMORY[0x270F1B930]();
}

uint64_t CPGProcessingLimitsForCurrentDevice()
{
  return MEMORY[0x270F1B938]();
}

uint64_t CPGProcessingLimitsGetMaxBakedOutputTriangleCount()
{
  return MEMORY[0x270F1B940]();
}

uint64_t CPGProcessingLimitsGetMaxImageDimension()
{
  return MEMORY[0x270F1B948]();
}

uint64_t CPGProcessingLimitsGetMaxNumberOfSamples()
{
  return MEMORY[0x270F1B950]();
}

uint64_t CPGProcessingLimitsGetMaxTotalPixelCount()
{
  return MEMORY[0x270F1B958]();
}

uint64_t CPGProcessingLimitsGetMinBakedOutputTriangleCount()
{
  return MEMORY[0x270F1B960]();
}

uint64_t CPGProgressGetEstimatedRemainingTime()
{
  return MEMORY[0x270F1B970]();
}

uint64_t CPGProgressGetFractionCompleted()
{
  return MEMORY[0x270F1B978]();
}

uint64_t CPGProgressGetMessage()
{
  return MEMORY[0x270F1B980]();
}

uint64_t CPGProgressGetProcessingStep()
{
  return MEMORY[0x270F1B988]();
}

uint64_t CPGProgressRelease()
{
  return MEMORY[0x270F1B990]();
}

uint64_t CPGRequestCreateWithDetail()
{
  return MEMORY[0x270F1B998]();
}

uint64_t CPGRequestCreateWithDetailAndSfmMap()
{
  return MEMORY[0x270F1B9A0]();
}

uint64_t CPGRequestRelease()
{
  return MEMORY[0x270F1B9A8]();
}

uint64_t CPGRequestRetain()
{
  return MEMORY[0x270F1B9B0]();
}

uint64_t CPGRequestSetCustomOutputModelOptions()
{
  return MEMORY[0x270F1B9B8]();
}

uint64_t CPGRequestSetOutputQuadMeshEnabled()
{
  return MEMORY[0x270F1B9C0]();
}

uint64_t CPGSampleCameraTransformMapAddBySampleID()
{
  return MEMORY[0x270F1B9C8]();
}

uint64_t CPGSampleCameraTransformMapCreate()
{
  return MEMORY[0x270F1B9D0]();
}

uint64_t CPGSampleCameraTransformMapRelease()
{
  return MEMORY[0x270F1B9D8]();
}

uint64_t CPGSampleCreateWithCVPixelBuffer()
{
  return MEMORY[0x270F1B9E0]();
}

uint64_t CPGSampleMetadataCreate()
{
  return MEMORY[0x270F1B9E8]();
}

uint64_t CPGSampleMetadataRelease()
{
  return MEMORY[0x270F1B9F0]();
}

uint64_t CPGSampleMetadataSetCameraID()
{
  return MEMORY[0x270F1B9F8]();
}

uint64_t CPGSampleMetadataSetCameraTransform()
{
  return MEMORY[0x270F1BA00]();
}

uint64_t CPGSampleMetadataSetDepthMapWithConfidence()
{
  return MEMORY[0x270F1BA08]();
}

uint64_t CPGSampleMetadataSetDepthPointCloudWithExtrinsics()
{
  return MEMORY[0x270F1BA10]();
}

uint64_t CPGSampleMetadataSetFocalLengthInPixel()
{
  return MEMORY[0x270F1BA18]();
}

uint64_t CPGSampleMetadataSetFromCGImageProperties()
{
  return MEMORY[0x270F1BA20]();
}

uint64_t CPGSampleMetadataSetGravity()
{
  return MEMORY[0x270F1BA28]();
}

uint64_t CPGSampleMetadataSetMaskWithCVPixelBuffer()
{
  return MEMORY[0x270F1BA30]();
}

uint64_t CPGSampleMetadataSetObjectBoundingBox()
{
  return MEMORY[0x270F1BA38]();
}

uint64_t CPGSampleMetadataSetPrincipalPoint()
{
  return MEMORY[0x270F1BA40]();
}

uint64_t CPGSampleMetadataSetSegmentID()
{
  return MEMORY[0x270F1BA48]();
}

uint64_t CPGSampleMetadataSetTimestamp()
{
  return MEMORY[0x270F1BA50]();
}

uint64_t CPGSampleRelease()
{
  return MEMORY[0x270F1BA58]();
}

uint64_t CPGSessionAddSample()
{
  return MEMORY[0x270F1BA60]();
}

uint64_t CPGSessionAddSampleWithCallbacks()
{
  return MEMORY[0x270F1BA68]();
}

uint64_t CPGSessionAddTemporalDepthPointFrame()
{
  return MEMORY[0x270F1BA70]();
}

uint64_t CPGSessionCancelProcessing()
{
  return MEMORY[0x270F1BA78]();
}

uint64_t CPGSessionCreate()
{
  return MEMORY[0x270F1BA80]();
}

uint64_t CPGSessionCreateWithSnapshotURL()
{
  return MEMORY[0x270F1BA88]();
}

uint64_t CPGSessionFinalizeInput()
{
  return MEMORY[0x270F1BA90]();
}

uint64_t CPGSessionGetEstimatedProcessingTime()
{
  return MEMORY[0x270F1BA98]();
}

uint64_t CPGSessionGetEstimatedProcessingTimeByNumberOfPixels()
{
  return MEMORY[0x270F1BAA0]();
}

uint64_t CPGSessionLocalizeSample()
{
  return MEMORY[0x270F1BAA8]();
}

uint64_t CPGSessionOptionsCreate()
{
  return MEMORY[0x270F1BAB0]();
}

uint64_t CPGSessionOptionsRelease()
{
  return MEMORY[0x270F1BAB8]();
}

uint64_t CPGSessionOptionsSetAutoMaskingEnabled()
{
  return MEMORY[0x270F1BAC0]();
}

uint64_t CPGSessionOptionsSetMaskingOptions()
{
  return MEMORY[0x270F1BAC8]();
}

uint64_t CPGSessionOptionsSetReconstructionPowerSetting()
{
  return MEMORY[0x270F1BAD0]();
}

uint64_t CPGSessionOptionsSetSfmOptions()
{
  return MEMORY[0x270F1BAD8]();
}

uint64_t CPGSessionOptionsSetSnapshotEnabled()
{
  return MEMORY[0x270F1BAE0]();
}

uint64_t CPGSessionOptionsSetWorkingDirectory()
{
  return MEMORY[0x270F1BAE8]();
}

uint64_t CPGSessionProcessRequestWithCallbacks()
{
  return MEMORY[0x270F1BAF0]();
}

uint64_t CPGSessionRelease()
{
  return MEMORY[0x270F1BAF8]();
}

uint64_t CPGSessionResumeOptionsCreate()
{
  return MEMORY[0x270F1BB00]();
}

uint64_t CPGSessionResumeOptionsRelease()
{
  return MEMORY[0x270F1BB08]();
}

uint64_t CPGSessionResumeProcessingWithCallbacks()
{
  return MEMORY[0x270F1BB10]();
}

uint64_t CPGSessionUpdateBoundingBoxBySegmentID()
{
  return MEMORY[0x270F1BB18]();
}

uint64_t CPGSessionUpdateSampleCameraTransforms()
{
  return MEMORY[0x270F1BB20]();
}

uint64_t CPGSfmMapCopyAllSampleIDs()
{
  return MEMORY[0x270F1BB28]();
}

uint64_t CPGSfmMapCopyBoundingBox()
{
  return MEMORY[0x270F1BB30]();
}

uint64_t CPGSfmMapCopyTracksInsideBoundingBoxInWorldCoordinate()
{
  return MEMORY[0x270F1BB38]();
}

uint64_t CPGSfmMapCreateMutableCopy()
{
  return MEMORY[0x270F1BB40]();
}

uint64_t CPGSfmMapGetCameraBySampleID()
{
  return MEMORY[0x270F1BB48]();
}

uint64_t CPGSfmMapIsSampleRegistered()
{
  return MEMORY[0x270F1BB50]();
}

uint64_t CPGSfmMapRelease()
{
  return MEMORY[0x270F1BB58]();
}

uint64_t CPGSfmMapRetain()
{
  return MEMORY[0x270F1BB60]();
}

uint64_t CPGSfmMapSetBoundingBox()
{
  return MEMORY[0x270F1BB68]();
}

uint64_t CPGSfmMapTransformBy()
{
  return MEMORY[0x270F1BB70]();
}

uint64_t CPGSfmOptionsCreate()
{
  return MEMORY[0x270F1BB78]();
}

uint64_t CPGSfmOptionsRelease()
{
  return MEMORY[0x270F1BB80]();
}

uint64_t CPGSfmOptionsSetFeatureSensitivity()
{
  return MEMORY[0x270F1BB88]();
}

uint64_t CPGSfmOptionsSetPoseUpdateCallback()
{
  return MEMORY[0x270F1BB90]();
}

uint64_t CPGSfmOptionsSetPowerSetting()
{
  return MEMORY[0x270F1BB98]();
}

uint64_t CPGSfmOptionsSetProcessingMode()
{
  return MEMORY[0x270F1BBA0]();
}

uint64_t CPGSfmOptionsSetSampleOrdering()
{
  return MEMORY[0x270F1BBA8]();
}

uint64_t CPGSfmOptionsSetTrackUpdateCallback()
{
  return MEMORY[0x270F1BBB0]();
}

uint64_t CPGSfmOptionsSetUsePriors()
{
  return MEMORY[0x270F1BBB8]();
}

uint64_t CPGSfmWorldTracksGetColors()
{
  return MEMORY[0x270F1BBC0]();
}

uint64_t CPGSfmWorldTracksGetCount()
{
  return MEMORY[0x270F1BBC8]();
}

uint64_t CPGSfmWorldTracksGetNormals()
{
  return MEMORY[0x270F1BBD0]();
}

uint64_t CPGSfmWorldTracksGetPositions()
{
  return MEMORY[0x270F1BBD8]();
}

uint64_t CPGSfmWorldTracksRelease()
{
  return MEMORY[0x270F1BBE0]();
}

uint64_t CPGSnapshotInfoCheckDeviceCompatibility()
{
  return MEMORY[0x270F1BBE8]();
}

uint64_t CPGSnapshotInfoCheckSessionOptionsCompatibility()
{
  return MEMORY[0x270F1BBF0]();
}

uint64_t CPGSnapshotInfoGetNumberOfSamples()
{
  return MEMORY[0x270F1BBF8]();
}

uint64_t CPGSnapshotInfoLoadFromURL()
{
  return MEMORY[0x270F1BC00]();
}

uint64_t CPGSnapshotInfoRelease()
{
  return MEMORY[0x270F1BC08]();
}

uint64_t CPGTemporalDepthPointFrameCreateWithTimeCameraAndPointCloud()
{
  return MEMORY[0x270F1BC10]();
}

uint64_t CPGTemporalDepthPointFrameRelease()
{
  return MEMORY[0x270F1BC18]();
}

uint64_t CPGUpdatedPosesCopyCameraBySampleID()
{
  return MEMORY[0x270F1BC20]();
}

uint64_t CPGUpdatedPosesCopyObjectTransformBySampleID()
{
  return MEMORY[0x270F1BC28]();
}

uint64_t CPGUpdatedPosesCopySampleIDs()
{
  return MEMORY[0x270F1BC30]();
}

uint64_t CPGUpdatedPosesGetStateBySampleID()
{
  return MEMORY[0x270F1BC38]();
}

uint64_t CPGUpdatedPosesRelease()
{
  return MEMORY[0x270F1BC40]();
}

CFTypeRef CVBufferCopyAttachment(CVBufferRef buffer, CFStringRef key, CVAttachmentMode *attachmentMode)
{
  return (CFTypeRef)MEMORY[0x270EE9FC0](buffer, key, attachmentMode);
}

Boolean CVBufferHasAttachment(CVBufferRef buffer, CFStringRef key)
{
  return MEMORY[0x270EE9FE0](buffer, key);
}

void CVBufferSetAttachment(CVBufferRef buffer, CFStringRef key, CFTypeRef value, CVAttachmentMode attachmentMode)
{
}

CVReturn CVPixelBufferCreate(CFAllocatorRef allocator, size_t width, size_t height, OSType pixelFormatType, CFDictionaryRef pixelBufferAttributes, CVPixelBufferRef *pixelBufferOut)
{
  return MEMORY[0x270EEA150](allocator, width, height, *(void *)&pixelFormatType, pixelBufferAttributes, pixelBufferOut);
}

void *__cdecl CVPixelBufferGetBaseAddress(CVPixelBufferRef pixelBuffer)
{
  return (void *)MEMORY[0x270EEA190](pixelBuffer);
}

size_t CVPixelBufferGetBytesPerRow(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x270EEA1B0](pixelBuffer);
}

size_t CVPixelBufferGetHeight(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x270EEA1E8](pixelBuffer);
}

OSType CVPixelBufferGetPixelFormatType(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x270EEA218](pixelBuffer);
}

size_t CVPixelBufferGetWidth(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x270EEA240](pixelBuffer);
}

CVReturn CVPixelBufferLockBaseAddress(CVPixelBufferRef pixelBuffer, CVPixelBufferLockFlags lockFlags)
{
  return MEMORY[0x270EEA260](pixelBuffer, lockFlags);
}

CVReturn CVPixelBufferPoolCreate(CFAllocatorRef allocator, CFDictionaryRef poolAttributes, CFDictionaryRef pixelBufferAttributes, CVPixelBufferPoolRef *poolOut)
{
  return MEMORY[0x270EEA278](allocator, poolAttributes, pixelBufferAttributes, poolOut);
}

CVReturn CVPixelBufferPoolCreatePixelBuffer(CFAllocatorRef allocator, CVPixelBufferPoolRef pixelBufferPool, CVPixelBufferRef *pixelBufferOut)
{
  return MEMORY[0x270EEA288](allocator, pixelBufferPool, pixelBufferOut);
}

CVReturn CVPixelBufferUnlockBaseAddress(CVPixelBufferRef pixelBuffer, CVPixelBufferLockFlags unlockFlags)
{
  return MEMORY[0x270EEA330](pixelBuffer, unlockFlags);
}

uint64_t GESSAlgSplitLongEdges()
{
  return MEMORY[0x270F2D228]();
}

uint64_t GESSAlgVertexClusterDownsample()
{
  return MEMORY[0x270F2D230]();
}

uint64_t GESSVersionNumberMajor()
{
  return MEMORY[0x270F2D238]();
}

uint64_t GESSVersionNumberMinor()
{
  return MEMORY[0x270F2D240]();
}

uint64_t GESSVersionNumberPatch()
{
  return MEMORY[0x270F2D248]();
}

kern_return_t IOObjectRelease(io_object_t object)
{
  return MEMORY[0x270EF4820](*(void *)&object);
}

CFTypeRef IORegistryEntryCreateCFProperty(io_registry_entry_t entry, CFStringRef key, CFAllocatorRef allocator, IOOptionBits options)
{
  return (CFTypeRef)MEMORY[0x270EF49D8](*(void *)&entry, key, allocator, *(void *)&options);
}

io_service_t IOServiceGetMatchingService(mach_port_t mainPort, CFDictionaryRef matching)
{
  return MEMORY[0x270EF4AB0](*(void *)&mainPort, matching);
}

CFMutableDictionaryRef IOServiceMatching(const char *name)
{
  return (CFMutableDictionaryRef)MEMORY[0x270EF4AD0](name);
}

void *__cdecl IOSurfaceGetBaseAddress(IOSurfaceRef buffer)
{
  return (void *)MEMORY[0x270EF4C58](buffer);
}

uint64_t OCDataBufferCreateWithIOSurface()
{
  return MEMORY[0x270F1ADE8]();
}

uint64_t OCDataBufferGetIOSurface()
{
  return MEMORY[0x270F1AE10]();
}

uint64_t OCDataBufferGetSize()
{
  return MEMORY[0x270F1AE18]();
}

uint64_t OCExplicitFeedbackCreate()
{
  return MEMORY[0x270F1AE20]();
}

uint64_t OCExplicitFeedbackDestroy()
{
  return MEMORY[0x270F1AE28]();
}

uint64_t OCExplicitFeedbackProcess()
{
  return MEMORY[0x270F1AE30]();
}

uint64_t OCExplicitFeedbackStart()
{
  return MEMORY[0x270F1AE38]();
}

uint64_t OCExplicitFeedbackStop()
{
  return MEMORY[0x270F1AE40]();
}

uint64_t OCImageFilterApplyCrossBilateralFilter()
{
  return MEMORY[0x270F1AE48]();
}

uint64_t OCImageFilterApplyFilter()
{
  return MEMORY[0x270F1AE50]();
}

uint64_t OCImageFilterBilateralCreate()
{
  return MEMORY[0x270F1AE58]();
}

uint64_t OCImageFilterDestroy()
{
  return MEMORY[0x270F1AE60]();
}

uint64_t OCImageFilterStart()
{
  return MEMORY[0x270F1AE68]();
}

uint64_t OCImageFilterStop()
{
  return MEMORY[0x270F1AE70]();
}

uint64_t OCImageScalerCreate()
{
  return MEMORY[0x270F1AE78]();
}

uint64_t OCImageScalerDestroy()
{
  return MEMORY[0x270F1AE80]();
}

uint64_t OCImageScalerResizeImage()
{
  return MEMORY[0x270F1AE88]();
}

uint64_t OCImageScalerStart()
{
  return MEMORY[0x270F1AE90]();
}

uint64_t OCImageScalerStop()
{
  return MEMORY[0x270F1AE98]();
}

uint64_t OCMaskingCreate()
{
  return MEMORY[0x270F1AEA0]();
}

uint64_t OCMaskingCreateObjectVoxelsAndComputeBBox()
{
  return MEMORY[0x270F1AEA8]();
}

uint64_t OCMaskingDestroy()
{
  return MEMORY[0x270F1AEB0]();
}

uint64_t OCMaskingGetDebugInfo()
{
  return MEMORY[0x270F1AEB8]();
}

uint64_t OCMaskingStart()
{
  return MEMORY[0x270F1AEC0]();
}

uint64_t OCMaskingStop()
{
  return MEMORY[0x270F1AEC8]();
}

uint64_t OCMetalDevice()
{
  return MEMORY[0x270F1AED0]();
}

uint64_t OCMetalInitWithDevice()
{
  return MEMORY[0x270F1AED8]();
}

uint64_t OCModulesGitHash()
{
  return MEMORY[0x270F1AEE0]();
}

uint64_t OCNonModularSPI_ADJasperPointCloud_CreateDataBuffer()
{
  return MEMORY[0x270F1AEE8]();
}

uint64_t OCNonModularSPI_ADJasperPointCloud_CreatePointCloud()
{
  return MEMORY[0x270F1AEF0]();
}

uint64_t OCNonModularSPI_AVCameraCalibrationData_CreateDictionaryFrom()
{
  return MEMORY[0x270F1AEF8]();
}

uint64_t OCNonModularSPI_AVCameraCalibrationData_InitFrom()
{
  return MEMORY[0x270F1AF00]();
}

uint64_t OCNonModularSPI_AVCaptureDevice_IsTimeOfFlightOCMacroModeSupported()
{
  return MEMORY[0x270F1AF08]();
}

uint64_t OCNonModularSPI_AVCaptureDevice_IsTimeOfFlightSensorType80()
{
  return MEMORY[0x270F1AF10]();
}

uint64_t OCNonModularSPI_AppleMakerNote_BackWideAngleCamera()
{
  return MEMORY[0x270F1AF18]();
}

uint64_t OCNonModularSPI_AppleMakerNote_Camera()
{
  return MEMORY[0x270F1AF20]();
}

uint64_t OCNonModularSPI_AppleMakerNote_FocusAccelerometerVector()
{
  return MEMORY[0x270F1AF28]();
}

uint64_t OCNonModularSPI_AppleMakerNote_Timestamp()
{
  return MEMORY[0x270F1AF30]();
}

uint64_t OCNonModularSPI_CMPhoto_HeicReadCreate()
{
  return MEMORY[0x270F1AF38]();
}

uint64_t OCNonModularSPI_CMPhoto_HeicReadDestroy()
{
  return MEMORY[0x270F1AF40]();
}

uint64_t OCNonModularSPI_CMPhoto_HeicReadStart()
{
  return MEMORY[0x270F1AF48]();
}

uint64_t OCNonModularSPI_CMPhoto_HeicReadStop()
{
  return MEMORY[0x270F1AF50]();
}

uint64_t OCNonModularSPI_CMPhoto_HeicWriteCreate()
{
  return MEMORY[0x270F1AF58]();
}

uint64_t OCNonModularSPI_CMPhoto_HeicWriteDestroy()
{
  return MEMORY[0x270F1AF60]();
}

uint64_t OCNonModularSPI_CMPhoto_HeicWriteStart()
{
  return MEMORY[0x270F1AF68]();
}

uint64_t OCNonModularSPI_CMPhoto_HeicWriteStop()
{
  return MEMORY[0x270F1AF70]();
}

uint64_t OCNonModularSPI_CMPhoto_read()
{
  return MEMORY[0x270F1AF78]();
}

uint64_t OCNonModularSPI_CMPhoto_readResolution()
{
  return MEMORY[0x270F1AF80]();
}

uint64_t OCNonModularSPI_CMPhoto_readThumbnail()
{
  return MEMORY[0x270F1AF88]();
}

uint64_t OCNonModularSPI_CMPhoto_readVersion()
{
  return MEMORY[0x270F1AF90]();
}

uint64_t OCNonModularSPI_CMPhoto_updateInplace()
{
  return MEMORY[0x270F1AF98]();
}

uint64_t OCNonModularSPI_CMPhoto_write()
{
  return MEMORY[0x270F1AFA0]();
}

uint64_t OCNonModularSPI_CapturePhotoSettings()
{
  return MEMORY[0x270F1AFA8]();
}

uint64_t OCNonModularSPI_GetWideToDepthTransform()
{
  return MEMORY[0x270F1AFB0]();
}

uint64_t OCNonModularSPI_NSData_CreateDepthPointCloudDataBuffer()
{
  return MEMORY[0x270F1AFB8]();
}

uint64_t OCNonModularSPI_Serialization_CVBufferToData()
{
  return MEMORY[0x270F1AFC0]();
}

uint64_t OCNonModularSPI_Serialization_InvalidBoundingBoxTransform()
{
  return MEMORY[0x270F1AFC8]();
}

uint64_t OCNonModularSPI_Serialization_InvalidCameraIntrinsics()
{
  return MEMORY[0x270F1AFD0]();
}

uint64_t OCNonModularSPI_Serialization_InvalidCameraTransform()
{
  return MEMORY[0x270F1AFD8]();
}

uint64_t OCNonModularSPI_Serialization_InvalidObjectTransform()
{
  return MEMORY[0x270F1AFE0]();
}

uint64_t OCObjectContourGetCenterOfMass()
{
  return MEMORY[0x270F1AFE8]();
}

uint64_t OCObjectContourGetNearestPoints()
{
  return MEMORY[0x270F1AFF0]();
}

uint64_t OCObjectContourIsPointInsideObjectContour()
{
  return MEMORY[0x270F1AFF8]();
}

uint64_t OCPointCloudCreateFromDenseDepth()
{
  return MEMORY[0x270F1B000]();
}

uint64_t OCPointCloudCreateFromDenseDepthWithBoundingBox()
{
  return MEMORY[0x270F1B008]();
}

uint64_t OCPointCloudCreateFromDenseDepthWithPlaneClassification()
{
  return MEMORY[0x270F1B010]();
}

uint64_t OCPointCloudCreateFromDenseDepthWithPlaneClassificationAndBoundingBox()
{
  return MEMORY[0x270F1B018]();
}

uint64_t OCPointCloudCreateFromSparseAndDenseDepth()
{
  return MEMORY[0x270F1B020]();
}

uint64_t OCPointCloudCreateFromSparseAndDenseDepthWithBoundingBox()
{
  return MEMORY[0x270F1B028]();
}

uint64_t OCPointCloudCreateFromSparseAndDenseDepthWithPlaneClassification()
{
  return MEMORY[0x270F1B030]();
}

uint64_t OCPointCloudCreateFromSparseAndDenseDepthWithPlaneClassificationAndBoundingBox()
{
  return MEMORY[0x270F1B038]();
}

uint64_t OCPointCloudCreateWithRGB()
{
  return MEMORY[0x270F1B040]();
}

uint64_t OCPointCloudCreateWithRGBAndPlaneClassification()
{
  return MEMORY[0x270F1B048]();
}

uint64_t OCPointCloudRelease()
{
  return MEMORY[0x270F1B050]();
}

uint64_t OCProxySurfaceCoverageGuideAddCameraShot()
{
  return MEMORY[0x270F1B058]();
}

uint64_t OCProxySurfaceCreate()
{
  return MEMORY[0x270F1B060]();
}

uint64_t OCProxySurfaceCreateDepthImage()
{
  return MEMORY[0x270F1B068]();
}

uint64_t OCProxySurfaceCreateResults()
{
  return MEMORY[0x270F1B070]();
}

uint64_t OCProxySurfaceDestroy()
{
  return MEMORY[0x270F1B078]();
}

uint64_t OCProxySurfaceExecutePipeline()
{
  return MEMORY[0x270F1B080]();
}

uint64_t OCProxySurfaceGetDebugVoxelCloud()
{
  return MEMORY[0x270F1B088]();
}

uint64_t OCProxySurfaceNumVoxelsAlongAxisInVoxelBlock()
{
  return MEMORY[0x270F1B090]();
}

uint64_t OCSignPostsAriadneDbgCode()
{
  return MEMORY[0x270F1B098]();
}

uint64_t OCVoxelCloudSize()
{
  return MEMORY[0x270F1B0A0]();
}

uint64_t OCVoxelCloudTransformMatrix()
{
  return MEMORY[0x270F1B0A8]();
}

uint64_t OCVoxelCloudVoxels()
{
  return MEMORY[0x270F1B0B0]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

simd_float4x4 __invert_f4(simd_float4x4 a1)
{
  MEMORY[0x270ED7E20]((__n128)a1.columns[0], (__n128)a1.columns[1], (__n128)a1.columns[2], (__n128)a1.columns[3]);
  result.columns[3].i64[1] = v8;
  result.columns[3].i64[0] = v7;
  result.columns[2].i64[1] = v6;
  result.columns[2].i64[0] = v5;
  result.columns[1].i64[1] = v4;
  result.columns[1].i64[0] = v3;
  result.columns[0].i64[1] = v2;
  result.columns[0].i64[0] = v1;
  return result;
}

__float2 __sincosf_stret(float a1)
{
  MEMORY[0x270ED7E90](a1);
  result.__cosval = v2;
  result.__sinval = v1;
  return result;
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x270FA0158]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x270FA0160]();
}

uint64_t _swift_stdlib_strtod_clocale()
{
  return MEMORY[0x270FA0170]();
}

uint64_t _swift_stdlib_strtof_clocale()
{
  return MEMORY[0x270FA0178]();
}

float acosf(float a1)
{
  MEMORY[0x270ED8598](a1);
  return result;
}

float atan2f(float a1, float a2)
{
  MEMORY[0x270ED86B8](a1, a2);
  return result;
}

void bzero(void *a1, size_t a2)
{
}

float cosf(float a1)
{
  MEMORY[0x270ED9130](a1);
  return result;
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x270ED9340]();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

float exp2f(float a1)
{
  MEMORY[0x270ED9868](a1);
  return result;
}

void free(void *a1)
{
}

int getpagesize(void)
{
  return MEMORY[0x270ED9CC8]();
}

uint64_t kdebug_trace()
{
  return MEMORY[0x270ED9F50]();
}

uint64_t kdebug_trace_string()
{
  return MEMORY[0x270ED9F58]();
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x270F9A568](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A590](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x270F9A880](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

float powf(float a1, float a2)
{
  MEMORY[0x270EDAD00](a1, a2);
  return result;
}

uint64_t savePixelBufferFloat32ToTiff()
{
  return MEMORY[0x270F1B0B8]();
}

uint64_t savePixelBufferOneComponent8ToPng()
{
  return MEMORY[0x270F1B0C0]();
}

uint64_t savePixelBufferToJpeg()
{
  return MEMORY[0x270F1B0C8]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x270FA01A0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x270FA0208]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x270FA0228]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x270FA0240]();
}

uint64_t swift_deletedMethodError()
{
  return MEMORY[0x270FA0250]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x270FA0268]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x270FA0288]();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return MEMORY[0x270FA0298]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x270FA02F8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x270FA0300]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x270FA0348]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x270FA03B8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassFromObject()
{
  return MEMORY[0x270FA03D8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x270FA0410]();
}

uint64_t swift_getTupleTypeLayout3()
{
  return MEMORY[0x270FA0418]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x270FA0458]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x270FA0460]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x270FA0470]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x270FA0498]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x270FA0570]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x270FA0598]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x270FA05A8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x270FA05D0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x270FA05E8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x270FA05F0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x270FA05F8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_weakAssign()
{
  return MEMORY[0x270FA0630]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x270FA0648]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x270FA0650]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x270FA0658]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}

kern_return_t task_info(task_name_t target_task, task_flavor_t flavor, task_info_t task_info_out, mach_msg_type_number_t *task_info_outCnt)
{
  return MEMORY[0x270EDB868](*(void *)&target_task, *(void *)&flavor, task_info_out, task_info_outCnt);
}

vImage_Error vImagePermuteChannels_ARGB8888(const vImage_Buffer *src, const vImage_Buffer *dest, const uint8_t permuteMap[4], vImage_Flags flags)
{
  return MEMORY[0x270EDF268](src, dest, permuteMap, *(void *)&flags);
}